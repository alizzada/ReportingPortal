{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbox.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport messageLocalization from \"../../localization/message\";\nimport TextBox from \"../text_box\";\nimport Accordion from \"../accordion\";\nimport ScrollView from \"../scroll_view\";\nimport Tooltip from \"../tooltip\";\nimport { getDiagram } from \"./diagram.importer\";\nimport DiagramFloatingPanel from \"./ui.diagram.floating_panel\";\nvar DIAGRAM_TOOLBOX_MIN_HEIGHT = 130;\nvar DIAGRAM_TOOLBOX_POPUP_CLASS = \"dx-diagram-toolbox-popup\";\nvar DIAGRAM_TOOLBOX_PANEL_CLASS = \"dx-diagram-toolbox-panel\";\nvar DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS = \"dx-diagram-toolbox-input-container\";\nvar DIAGRAM_TOOLBOX_INPUT_CLASS = \"dx-diagram-toolbox-input\";\nvar DIAGRAM_TOOLTIP_DATATOGGLE = \"shape-toolbox-tooltip\";\nvar DIAGRAM_SKIP_GESTURE_CLASS = \"dx-skip-gesture-event\";\n\nvar DiagramToolbox = /*#__PURE__*/function (_DiagramFloatingPanel) {\n  _inherits(DiagramToolbox, _DiagramFloatingPanel);\n\n  var _super = _createSuper(DiagramToolbox);\n\n  function DiagramToolbox() {\n    _classCallCheck(this, DiagramToolbox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DiagramToolbox, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(DiagramToolbox.prototype), \"_init\", this).call(this);\n\n      this._toolboxes = [];\n      this._filterText = \"\";\n\n      this._createOnShapeCategoryRenderedAction();\n\n      this._createOnFilterChangedAction();\n    }\n  }, {\n    key: \"_getPopupClass\",\n    value: function _getPopupClass() {\n      return DIAGRAM_TOOLBOX_POPUP_CLASS;\n    }\n  }, {\n    key: \"_getPopupHeight\",\n    value: function _getPopupHeight() {\n      return this.isMobileView() ? \"100%\" : _get(_getPrototypeOf(DiagramToolbox.prototype), \"_getPopupHeight\", this).call(this);\n    }\n  }, {\n    key: \"_getPopupMaxHeight\",\n    value: function _getPopupMaxHeight() {\n      return this.isMobileView() ? \"100%\" : _get(_getPrototypeOf(DiagramToolbox.prototype), \"_getPopupMaxHeight\", this).call(this);\n    }\n  }, {\n    key: \"_getPopupMinHeight\",\n    value: function _getPopupMinHeight() {\n      return DIAGRAM_TOOLBOX_MIN_HEIGHT;\n    }\n  }, {\n    key: \"_getPopupPosition\",\n    value: function _getPopupPosition() {\n      var $parent = this.option(\"offsetParent\");\n      var position = {\n        my: \"left top\",\n        at: \"left top\",\n        of: $parent\n      };\n\n      if (!this.isMobileView()) {\n        return extend(position, {\n          offset: this.option(\"offsetX\") + \" \" + this.option(\"offsetY\")\n        });\n      }\n\n      return position;\n    }\n  }, {\n    key: \"_getPopupAnimation\",\n    value: function _getPopupAnimation() {\n      var $parent = this.option(\"offsetParent\");\n\n      if (this.isMobileView()) {\n        return {\n          hide: this._getPopupSlideAnimationObject({\n            direction: \"left\",\n            from: {\n              position: {\n                my: \"left top\",\n                at: \"left top\",\n                of: $parent\n              }\n            },\n            to: {\n              position: {\n                my: \"right top\",\n                at: \"left top\",\n                of: $parent\n              }\n            }\n          }),\n          show: this._getPopupSlideAnimationObject({\n            direction: \"right\",\n            from: {\n              position: {\n                my: \"right top\",\n                at: \"left top\",\n                of: $parent\n              }\n            },\n            to: {\n              position: {\n                my: \"left top\",\n                at: \"left top\",\n                of: $parent\n              }\n            }\n          })\n        };\n      }\n\n      return _get(_getPrototypeOf(DiagramToolbox.prototype), \"_getPopupAnimation\", this).call(this);\n    }\n  }, {\n    key: \"_getPopupOptions\",\n    value: function _getPopupOptions() {\n      var options = _get(_getPrototypeOf(DiagramToolbox.prototype), \"_getPopupOptions\", this).call(this);\n\n      if (!this.isMobileView()) {\n        return extend(options, {\n          showTitle: true,\n          toolbarItems: [{\n            widget: \"dxButton\",\n            location: \"center\",\n            options: {\n              activeStateEnabled: false,\n              focusStateEnabled: false,\n              hoverStateEnabled: false,\n              icon: \"diagram-toolbox-drag\",\n              stylingMode: \"outlined\",\n              type: \"normal\"\n            }\n          }]\n        });\n      }\n\n      return options;\n    }\n  }, {\n    key: \"_renderPopupContent\",\n    value: function _renderPopupContent($parent) {\n      var panelHeight = \"100%\";\n\n      if (this.option(\"showSearch\")) {\n        var $inputContainer = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS).appendTo($parent);\n\n        this._updateElementWidth($inputContainer);\n\n        this._renderSearchInput($inputContainer);\n\n        if (hasWindow()) {\n          panelHeight = \"calc(100% - \" + this._searchInput.$element().height() + \"px)\";\n        }\n      }\n\n      var $panel = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_PANEL_CLASS).appendTo($parent).height(panelHeight);\n\n      this._updateElementWidth($panel);\n\n      this._renderScrollView($panel);\n    }\n  }, {\n    key: \"_updateElementWidth\",\n    value: function _updateElementWidth($element) {\n      if (void 0 !== this.option(\"toolboxWidth\")) {\n        $element.css(\"width\", this.option(\"toolboxWidth\"));\n      }\n    }\n  }, {\n    key: \"updateMaxHeight\",\n    value: function updateMaxHeight() {\n      if (this.isMobileView()) {\n        return;\n      }\n\n      var maxHeight = 6;\n\n      if (this._popup) {\n        var $title = this._getPopupTitle();\n\n        maxHeight += $title.outerHeight();\n      }\n\n      if (this._accordion) {\n        maxHeight += this._accordion.$element().outerHeight();\n      }\n\n      if (this._searchInput) {\n        maxHeight += this._searchInput.$element().outerHeight();\n      }\n\n      this.option(\"maxHeight\", maxHeight);\n    }\n  }, {\n    key: \"_renderSearchInput\",\n    value: function _renderSearchInput($parent) {\n      var _this = this;\n\n      var $input = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CLASS).appendTo($parent);\n      this._searchInput = this._createComponent($input, TextBox, {\n        stylingMode: \"outlined\",\n        placeholder: messageLocalization.format(\"dxDiagram-uiSearch\"),\n        onValueChanged: function onValueChanged(data) {\n          _this._onInputChanged(data.value);\n        },\n        valueChangeEvent: \"keyup\",\n        buttons: [{\n          name: \"search\",\n          location: \"after\",\n          options: {\n            activeStateEnabled: false,\n            focusStateEnabled: false,\n            hoverStateEnabled: false,\n            icon: \"search\",\n            stylingMode: \"outlined\",\n            type: \"normal\",\n            onClick: function onClick() {\n              _this._searchInput.focus();\n            }\n          }\n        }]\n      });\n    }\n  }, {\n    key: \"_renderScrollView\",\n    value: function _renderScrollView($parent) {\n      var $scrollViewWrapper = $(\"<div>\").appendTo($parent);\n      this._scrollView = this._createComponent($scrollViewWrapper, ScrollView);\n      var $accordion = $(\"<div>\").appendTo(this._scrollView.content());\n\n      this._updateElementWidth($accordion);\n\n      this._renderAccordion($accordion);\n    }\n  }, {\n    key: \"_getAccordionDataSource\",\n    value: function _getAccordionDataSource() {\n      var _this2 = this;\n\n      var result = [];\n      var toolboxGroups = this.option(\"toolboxGroups\");\n\n      for (var i = 0; i < toolboxGroups.length; i++) {\n        var category = toolboxGroups[i].category;\n        var title = toolboxGroups[i].title;\n        var groupObj = {\n          category: category,\n          title: title || category,\n          expanded: toolboxGroups[i].expanded,\n          displayMode: toolboxGroups[i].displayMode,\n          shapes: toolboxGroups[i].shapes,\n          onTemplate: function onTemplate(widget, $element, data) {\n            var $toolboxElement = $($element);\n\n            _this2._onShapeCategoryRenderedAction({\n              category: data.category,\n              displayMode: data.displayMode,\n              dataToggle: DIAGRAM_TOOLTIP_DATATOGGLE,\n              shapes: data.shapes,\n              $element: $toolboxElement\n            });\n\n            _this2._toolboxes.push($toolboxElement);\n\n            if (\"\" !== _this2._filterText) {\n              _this2._onFilterChangedAction({\n                text: _this2._filterText,\n                filteringToolboxes: _this2._toolboxes.length - 1\n              });\n            }\n\n            _this2._createTooltips($toolboxElement.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]'));\n          }\n        };\n        result.push(groupObj);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_createTooltips\",\n    value: function _createTooltips(targets) {\n      var _this3 = this;\n\n      var _getDiagram = getDiagram(),\n          Browser = _getDiagram.Browser;\n\n      if (Browser.TouchUI) {\n        return;\n      }\n\n      var $container = this.$element();\n      targets.each(function (index, element) {\n        var $target = $(element);\n        var title = $target.attr(\"title\");\n\n        if (title) {\n          var $tooltip = $(\"<div>\").html(title).appendTo($container);\n\n          _this3._createComponent($tooltip, Tooltip, {\n            target: $target.get(0),\n            showEvent: \"mouseenter\",\n            hideEvent: \"mouseleave\",\n            position: \"top\",\n            animation: {\n              show: {\n                type: \"fade\",\n                from: 0,\n                to: 1,\n                delay: 500\n              },\n              hide: {\n                type: \"fade\",\n                from: 1,\n                to: 0,\n                delay: 100\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_renderAccordion\",\n    value: function _renderAccordion($container) {\n      var _this4 = this;\n\n      var data = this._getAccordionDataSource();\n\n      this._accordion = this._createComponent($container, Accordion, {\n        multiple: true,\n        animationDuration: 0,\n        activeStateEnabled: false,\n        focusStateEnabled: false,\n        hoverStateEnabled: false,\n        collapsible: true,\n        displayExpr: \"title\",\n        dataSource: data,\n        disabled: this.option(\"disabled\"),\n        itemTemplate: function itemTemplate(data, index, $element) {\n          data.onTemplate(_this4, $element, data);\n        },\n        onSelectionChanged: function onSelectionChanged(e) {\n          _this4._updateScrollAnimateSubscription(e.component);\n        },\n        onContentReady: function onContentReady(e) {\n          for (var i = 0; i < data.length; i++) {\n            if (false === data[i].expanded) {\n              e.component.collapseItem(i);\n            } else if (true === data[i].expanded) {\n              e.component.expandItem(i);\n            }\n          }\n\n          _this4._updateScrollAnimateSubscription(e.component);\n        }\n      });\n    }\n  }, {\n    key: \"_updateScrollAnimateSubscription\",\n    value: function _updateScrollAnimateSubscription(component) {\n      var _this5 = this;\n\n      component._deferredAnimate = new Deferred();\n\n      component._deferredAnimate.done(function () {\n        _this5.updateMaxHeight();\n\n        _this5._scrollView.update();\n\n        _this5._updateScrollAnimateSubscription(component);\n      });\n    }\n  }, {\n    key: \"_raiseToolboxDragStart\",\n    value: function _raiseToolboxDragStart() {\n      this._scrollView.$element().addClass(DIAGRAM_SKIP_GESTURE_CLASS);\n    }\n  }, {\n    key: \"_raiseToolboxDragEnd\",\n    value: function _raiseToolboxDragEnd() {\n      this._scrollView.$element().removeClass(DIAGRAM_SKIP_GESTURE_CLASS);\n    }\n  }, {\n    key: \"_onInputChanged\",\n    value: function _onInputChanged(text) {\n      var _this6 = this;\n\n      this._filterText = text;\n\n      this._onFilterChangedAction({\n        text: this._filterText,\n        filteringToolboxes: this._toolboxes.map(function ($element, index) {\n          return index;\n        })\n      });\n\n      this._toolboxes.forEach(function ($element) {\n        var $tooltipContainer = $($element);\n\n        _this6._createTooltips($tooltipContainer.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]'));\n      });\n\n      this.updateMaxHeight();\n\n      this._scrollView.update();\n    }\n  }, {\n    key: \"_createOnShapeCategoryRenderedAction\",\n    value: function _createOnShapeCategoryRenderedAction() {\n      this._onShapeCategoryRenderedAction = this._createActionByOption(\"onShapeCategoryRendered\");\n    }\n  }, {\n    key: \"_createOnFilterChangedAction\",\n    value: function _createOnFilterChangedAction() {\n      this._onFilterChangedAction = this._createActionByOption(\"onFilterChanged\");\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"onShapeCategoryRendered\":\n          this._createOnShapeCategoryRenderedAction();\n\n          break;\n\n        case \"onFilterChanged\":\n          this._createOnFilterChangedAction();\n\n          break;\n\n        case \"showSearch\":\n        case \"toolboxWidth\":\n          this._invalidate();\n\n          break;\n\n        case \"toolboxGroups\":\n          this._accordion.option(\"dataSource\", this._getAccordionDataSource());\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(DiagramToolbox.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return DiagramToolbox;\n}(DiagramFloatingPanel);\n\nexport default DiagramToolbox;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/diagram/ui.diagram.toolbox.js"],"names":["$","extend","hasWindow","Deferred","messageLocalization","TextBox","Accordion","ScrollView","Tooltip","getDiagram","DiagramFloatingPanel","DIAGRAM_TOOLBOX_MIN_HEIGHT","DIAGRAM_TOOLBOX_POPUP_CLASS","DIAGRAM_TOOLBOX_PANEL_CLASS","DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS","DIAGRAM_TOOLBOX_INPUT_CLASS","DIAGRAM_TOOLTIP_DATATOGGLE","DIAGRAM_SKIP_GESTURE_CLASS","DiagramToolbox","_toolboxes","_filterText","_createOnShapeCategoryRenderedAction","_createOnFilterChangedAction","isMobileView","$parent","option","position","my","at","of","offset","hide","_getPopupSlideAnimationObject","direction","from","to","show","options","showTitle","toolbarItems","widget","location","activeStateEnabled","focusStateEnabled","hoverStateEnabled","icon","stylingMode","type","panelHeight","$inputContainer","addClass","appendTo","_updateElementWidth","_renderSearchInput","_searchInput","$element","height","$panel","_renderScrollView","css","maxHeight","_popup","$title","_getPopupTitle","outerHeight","_accordion","$input","_createComponent","placeholder","format","onValueChanged","data","_onInputChanged","value","valueChangeEvent","buttons","name","onClick","focus","$scrollViewWrapper","_scrollView","$accordion","content","_renderAccordion","result","toolboxGroups","i","length","category","title","groupObj","expanded","displayMode","shapes","onTemplate","$toolboxElement","_onShapeCategoryRenderedAction","dataToggle","push","_onFilterChangedAction","text","filteringToolboxes","_createTooltips","find","targets","Browser","TouchUI","$container","each","index","element","$target","attr","$tooltip","html","target","get","showEvent","hideEvent","animation","delay","_getAccordionDataSource","multiple","animationDuration","collapsible","displayExpr","dataSource","disabled","itemTemplate","onSelectionChanged","e","_updateScrollAnimateSubscription","component","onContentReady","collapseItem","expandItem","_deferredAnimate","done","updateMaxHeight","update","removeClass","map","forEach","$tooltipContainer","_createActionByOption","args","_invalidate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbox.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport TextBox from \"../text_box\";\r\nimport Accordion from \"../accordion\";\r\nimport ScrollView from \"../scroll_view\";\r\nimport Tooltip from \"../tooltip\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nimport DiagramFloatingPanel from \"./ui.diagram.floating_panel\";\r\nvar DIAGRAM_TOOLBOX_MIN_HEIGHT = 130;\r\nvar DIAGRAM_TOOLBOX_POPUP_CLASS = \"dx-diagram-toolbox-popup\";\r\nvar DIAGRAM_TOOLBOX_PANEL_CLASS = \"dx-diagram-toolbox-panel\";\r\nvar DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS = \"dx-diagram-toolbox-input-container\";\r\nvar DIAGRAM_TOOLBOX_INPUT_CLASS = \"dx-diagram-toolbox-input\";\r\nvar DIAGRAM_TOOLTIP_DATATOGGLE = \"shape-toolbox-tooltip\";\r\nvar DIAGRAM_SKIP_GESTURE_CLASS = \"dx-skip-gesture-event\";\r\nclass DiagramToolbox extends DiagramFloatingPanel {\r\n    _init() {\r\n        super._init();\r\n        this._toolboxes = [];\r\n        this._filterText = \"\";\r\n        this._createOnShapeCategoryRenderedAction();\r\n        this._createOnFilterChangedAction()\r\n    }\r\n    _getPopupClass() {\r\n        return DIAGRAM_TOOLBOX_POPUP_CLASS\r\n    }\r\n    _getPopupHeight() {\r\n        return this.isMobileView() ? \"100%\" : super._getPopupHeight()\r\n    }\r\n    _getPopupMaxHeight() {\r\n        return this.isMobileView() ? \"100%\" : super._getPopupMaxHeight()\r\n    }\r\n    _getPopupMinHeight() {\r\n        return DIAGRAM_TOOLBOX_MIN_HEIGHT\r\n    }\r\n    _getPopupPosition() {\r\n        var $parent = this.option(\"offsetParent\");\r\n        var position = {\r\n            my: \"left top\",\r\n            at: \"left top\",\r\n            of: $parent\r\n        };\r\n        if (!this.isMobileView()) {\r\n            return extend(position, {\r\n                offset: this.option(\"offsetX\") + \" \" + this.option(\"offsetY\")\r\n            })\r\n        }\r\n        return position\r\n    }\r\n    _getPopupAnimation() {\r\n        var $parent = this.option(\"offsetParent\");\r\n        if (this.isMobileView()) {\r\n            return {\r\n                hide: this._getPopupSlideAnimationObject({\r\n                    direction: \"left\",\r\n                    from: {\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"right top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    }\r\n                }),\r\n                show: this._getPopupSlideAnimationObject({\r\n                    direction: \"right\",\r\n                    from: {\r\n                        position: {\r\n                            my: \"right top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return super._getPopupAnimation()\r\n    }\r\n    _getPopupOptions() {\r\n        var options = super._getPopupOptions();\r\n        if (!this.isMobileView()) {\r\n            return extend(options, {\r\n                showTitle: true,\r\n                toolbarItems: [{\r\n                    widget: \"dxButton\",\r\n                    location: \"center\",\r\n                    options: {\r\n                        activeStateEnabled: false,\r\n                        focusStateEnabled: false,\r\n                        hoverStateEnabled: false,\r\n                        icon: \"diagram-toolbox-drag\",\r\n                        stylingMode: \"outlined\",\r\n                        type: \"normal\"\r\n                    }\r\n                }]\r\n            })\r\n        }\r\n        return options\r\n    }\r\n    _renderPopupContent($parent) {\r\n        var panelHeight = \"100%\";\r\n        if (this.option(\"showSearch\")) {\r\n            var $inputContainer = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS).appendTo($parent);\r\n            this._updateElementWidth($inputContainer);\r\n            this._renderSearchInput($inputContainer);\r\n            if (hasWindow()) {\r\n                panelHeight = \"calc(100% - \" + this._searchInput.$element().height() + \"px)\"\r\n            }\r\n        }\r\n        var $panel = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_PANEL_CLASS).appendTo($parent).height(panelHeight);\r\n        this._updateElementWidth($panel);\r\n        this._renderScrollView($panel)\r\n    }\r\n    _updateElementWidth($element) {\r\n        if (void 0 !== this.option(\"toolboxWidth\")) {\r\n            $element.css(\"width\", this.option(\"toolboxWidth\"))\r\n        }\r\n    }\r\n    updateMaxHeight() {\r\n        if (this.isMobileView()) {\r\n            return\r\n        }\r\n        var maxHeight = 6;\r\n        if (this._popup) {\r\n            var $title = this._getPopupTitle();\r\n            maxHeight += $title.outerHeight()\r\n        }\r\n        if (this._accordion) {\r\n            maxHeight += this._accordion.$element().outerHeight()\r\n        }\r\n        if (this._searchInput) {\r\n            maxHeight += this._searchInput.$element().outerHeight()\r\n        }\r\n        this.option(\"maxHeight\", maxHeight)\r\n    }\r\n    _renderSearchInput($parent) {\r\n        var $input = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CLASS).appendTo($parent);\r\n        this._searchInput = this._createComponent($input, TextBox, {\r\n            stylingMode: \"outlined\",\r\n            placeholder: messageLocalization.format(\"dxDiagram-uiSearch\"),\r\n            onValueChanged: data => {\r\n                this._onInputChanged(data.value)\r\n            },\r\n            valueChangeEvent: \"keyup\",\r\n            buttons: [{\r\n                name: \"search\",\r\n                location: \"after\",\r\n                options: {\r\n                    activeStateEnabled: false,\r\n                    focusStateEnabled: false,\r\n                    hoverStateEnabled: false,\r\n                    icon: \"search\",\r\n                    stylingMode: \"outlined\",\r\n                    type: \"normal\",\r\n                    onClick: () => {\r\n                        this._searchInput.focus()\r\n                    }\r\n                }\r\n            }]\r\n        })\r\n    }\r\n    _renderScrollView($parent) {\r\n        var $scrollViewWrapper = $(\"<div>\").appendTo($parent);\r\n        this._scrollView = this._createComponent($scrollViewWrapper, ScrollView);\r\n        var $accordion = $(\"<div>\").appendTo(this._scrollView.content());\r\n        this._updateElementWidth($accordion);\r\n        this._renderAccordion($accordion)\r\n    }\r\n    _getAccordionDataSource() {\r\n        var result = [];\r\n        var toolboxGroups = this.option(\"toolboxGroups\");\r\n        for (var i = 0; i < toolboxGroups.length; i++) {\r\n            var category = toolboxGroups[i].category;\r\n            var title = toolboxGroups[i].title;\r\n            var groupObj = {\r\n                category: category,\r\n                title: title || category,\r\n                expanded: toolboxGroups[i].expanded,\r\n                displayMode: toolboxGroups[i].displayMode,\r\n                shapes: toolboxGroups[i].shapes,\r\n                onTemplate: (widget, $element, data) => {\r\n                    var $toolboxElement = $($element);\r\n                    this._onShapeCategoryRenderedAction({\r\n                        category: data.category,\r\n                        displayMode: data.displayMode,\r\n                        dataToggle: DIAGRAM_TOOLTIP_DATATOGGLE,\r\n                        shapes: data.shapes,\r\n                        $element: $toolboxElement\r\n                    });\r\n                    this._toolboxes.push($toolboxElement);\r\n                    if (\"\" !== this._filterText) {\r\n                        this._onFilterChangedAction({\r\n                            text: this._filterText,\r\n                            filteringToolboxes: this._toolboxes.length - 1\r\n                        })\r\n                    }\r\n                    this._createTooltips($toolboxElement.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]'))\r\n                }\r\n            };\r\n            result.push(groupObj)\r\n        }\r\n        return result\r\n    }\r\n    _createTooltips(targets) {\r\n        var {\r\n            Browser: Browser\r\n        } = getDiagram();\r\n        if (Browser.TouchUI) {\r\n            return\r\n        }\r\n        var $container = this.$element();\r\n        targets.each((index, element) => {\r\n            var $target = $(element);\r\n            var title = $target.attr(\"title\");\r\n            if (title) {\r\n                var $tooltip = $(\"<div>\").html(title).appendTo($container);\r\n                this._createComponent($tooltip, Tooltip, {\r\n                    target: $target.get(0),\r\n                    showEvent: \"mouseenter\",\r\n                    hideEvent: \"mouseleave\",\r\n                    position: \"top\",\r\n                    animation: {\r\n                        show: {\r\n                            type: \"fade\",\r\n                            from: 0,\r\n                            to: 1,\r\n                            delay: 500\r\n                        },\r\n                        hide: {\r\n                            type: \"fade\",\r\n                            from: 1,\r\n                            to: 0,\r\n                            delay: 100\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _renderAccordion($container) {\r\n        var data = this._getAccordionDataSource();\r\n        this._accordion = this._createComponent($container, Accordion, {\r\n            multiple: true,\r\n            animationDuration: 0,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            collapsible: true,\r\n            displayExpr: \"title\",\r\n            dataSource: data,\r\n            disabled: this.option(\"disabled\"),\r\n            itemTemplate: (data, index, $element) => {\r\n                data.onTemplate(this, $element, data)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._updateScrollAnimateSubscription(e.component)\r\n            },\r\n            onContentReady: e => {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (false === data[i].expanded) {\r\n                        e.component.collapseItem(i)\r\n                    } else if (true === data[i].expanded) {\r\n                        e.component.expandItem(i)\r\n                    }\r\n                }\r\n                this._updateScrollAnimateSubscription(e.component)\r\n            }\r\n        })\r\n    }\r\n    _updateScrollAnimateSubscription(component) {\r\n        component._deferredAnimate = new Deferred;\r\n        component._deferredAnimate.done(() => {\r\n            this.updateMaxHeight();\r\n            this._scrollView.update();\r\n            this._updateScrollAnimateSubscription(component)\r\n        })\r\n    }\r\n    _raiseToolboxDragStart() {\r\n        this._scrollView.$element().addClass(DIAGRAM_SKIP_GESTURE_CLASS)\r\n    }\r\n    _raiseToolboxDragEnd() {\r\n        this._scrollView.$element().removeClass(DIAGRAM_SKIP_GESTURE_CLASS)\r\n    }\r\n    _onInputChanged(text) {\r\n        this._filterText = text;\r\n        this._onFilterChangedAction({\r\n            text: this._filterText,\r\n            filteringToolboxes: this._toolboxes.map(($element, index) => index)\r\n        });\r\n        this._toolboxes.forEach($element => {\r\n            var $tooltipContainer = $($element);\r\n            this._createTooltips($tooltipContainer.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]'))\r\n        });\r\n        this.updateMaxHeight();\r\n        this._scrollView.update()\r\n    }\r\n    _createOnShapeCategoryRenderedAction() {\r\n        this._onShapeCategoryRenderedAction = this._createActionByOption(\"onShapeCategoryRendered\")\r\n    }\r\n    _createOnFilterChangedAction() {\r\n        this._onFilterChangedAction = this._createActionByOption(\"onFilterChanged\")\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"onShapeCategoryRendered\":\r\n                this._createOnShapeCategoryRenderedAction();\r\n                break;\r\n            case \"onFilterChanged\":\r\n                this._createOnFilterChangedAction();\r\n                break;\r\n            case \"showSearch\":\r\n            case \"toolboxWidth\":\r\n                this._invalidate();\r\n                break;\r\n            case \"toolboxGroups\":\r\n                this._accordion.option(\"dataSource\", this._getAccordionDataSource());\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default DiagramToolbox;\r\n"]},"metadata":{},"sourceType":"module"}