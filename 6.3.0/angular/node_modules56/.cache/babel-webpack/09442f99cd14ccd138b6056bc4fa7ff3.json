{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, SkipSelf, Optional, Host, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxValidator from 'devextreme/ui/validator';\nimport { DxComponentExtension, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiValidationRuleComponent, DxoAdapterModule, DxiValidationRuleModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * A UI component that is used to validate the associated DevExtreme editors against the defined validation rules.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxValidatorComponent = /*@__PURE__*/function () {\n  var DxValidatorComponent = /*#__PURE__*/function (_DxComponentExtension) {\n    _inherits(DxValidatorComponent, _DxComponentExtension);\n\n    var _super = _createSuper(DxValidatorComponent);\n\n    function DxValidatorComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, parentOptionHost, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxValidatorComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'validated',\n        emit: 'onValidated'\n      }, {\n        emit: 'adapterChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'nameChange'\n      }, {\n        emit: 'validationGroupChange'\n      }, {\n        emit: 'validationRulesChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      _this.parentElement = _this.getParentElement(parentOptionHost);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxValidatorComponent, [{\n      key: \"adapter\",\n      get: function get() {\n        return this._getOption('adapter');\n      },\n      set: function set(value) {\n        this._setOption('adapter', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this._getOption('name');\n      },\n      set: function set(value) {\n        this._setOption('name', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationGroup\",\n      get: function get() {\n        return this._getOption('validationGroup');\n      },\n      set: function set(value) {\n        this._setOption('validationGroup', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationRules\",\n      get: function get() {\n        return this._getOption('validationRules');\n      },\n      set: function set(value) {\n        this._setOption('validationRules', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"validationRulesChildren\",\n      get: function get() {\n        return this._getOption('validationRules');\n      },\n      set: function set(value) {\n        this.setChildren('validationRules', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        if (this.parentElement) {\n          return new DxValidator(this.parentElement, options);\n        }\n\n        return new DxValidator(element, options);\n      }\n    }, {\n      key: \"getParentElement\",\n      value: function getParentElement(host) {\n        if (host) {\n          var parentHost = host.getHost();\n          return parentHost.element.nativeElement;\n        }\n\n        return;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxValidatorComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('validationRules', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('validationRules');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxValidatorComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxValidatorComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxValidatorComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxValidatorComponent;\n  }(DxComponentExtension);\n\n  DxValidatorComponent.ɵfac = function DxValidatorComponent_Factory(t) {\n    return new (t || DxValidatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 13), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxValidatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxValidatorComponent,\n    selectors: [[\"dx-validator\"]],\n    contentQueries: function DxValidatorComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);\n      }\n    },\n    inputs: {\n      adapter: \"adapter\",\n      elementAttr: \"elementAttr\",\n      height: \"height\",\n      name: \"name\",\n      validationGroup: \"validationGroup\",\n      validationRules: \"validationRules\",\n      width: \"width\"\n    },\n    outputs: {\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onValidated: \"onValidated\",\n      adapterChange: \"adapterChange\",\n      elementAttrChange: \"elementAttrChange\",\n      heightChange: \"heightChange\",\n      nameChange: \"nameChange\",\n      validationGroupChange: \"validationGroupChange\",\n      validationRulesChange: \"validationRulesChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxValidatorComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxValidatorComponent = __decorate([__param(5, SkipSelf()), __param(5, Optional()), __param(5, Host()), __param(8, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, NestedOptionHost, TransferState, Object])], DxValidatorComponent);\n  return DxValidatorComponent;\n}();\n\nvar DxValidatorModule = /*@__PURE__*/function () {\n  var DxValidatorModule = function DxValidatorModule() {\n    _classCallCheck(this, DxValidatorModule);\n  };\n\n  DxValidatorModule.ɵfac = function DxValidatorModule_Factory(t) {\n    return new (t || DxValidatorModule)();\n  };\n\n  DxValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxValidatorModule\n  });\n  DxValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoAdapterModule, DxiValidationRuleModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAdapterModule, DxiValidationRuleModule, DxTemplateModule]\n  });\n  return DxValidatorModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxValidatorModule, {\n    declarations: function declarations() {\n      return [DxValidatorComponent];\n    },\n    imports: function imports() {\n      return [DxoAdapterModule, DxiValidationRuleModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxValidatorComponent, DxoAdapterModule, DxiValidationRuleModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxValidatorComponent, DxValidatorModule };","map":null,"metadata":{},"sourceType":"module"}