{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/resources/resourceManager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { wrapToArray, inArray } from \"../../../core/utils/array\";\nimport { grep } from \"../../../core/utils/common\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { each, map } from \"../../../core/utils/iterator\";\nimport { extend } from \"../../../core/utils/extend\";\nimport query from \"../../../data/query\";\nimport { compileGetter, compileSetter } from \"../../../core/utils/data\";\nimport { when, Deferred } from \"../../../core/utils/deferred\";\nimport { AgendaResourceProcessor } from \"./agendaResourceProcessor\";\nimport { getDisplayExpr, getFieldExpr, getValueExpr, getWrappedDataSource } from \"./utils\";\nexport var ResourceManager = /*#__PURE__*/function () {\n  function ResourceManager(resources) {\n    _classCallCheck(this, ResourceManager);\n\n    this._resourceLoader = {};\n    this.agendaProcessor = new AgendaResourceProcessor();\n    this.setResources(resources);\n  }\n\n  _createClass(ResourceManager, [{\n    key: \"_mapResourceData\",\n    value: function _mapResourceData(resource, data) {\n      var valueGetter = compileGetter(getValueExpr(resource));\n      var displayGetter = compileGetter(getDisplayExpr(resource));\n      return map(data, function (item) {\n        var result = {\n          id: valueGetter(item),\n          text: displayGetter(item)\n        };\n\n        if (item.color) {\n          result.color = item.color;\n        }\n\n        return result;\n      });\n    }\n  }, {\n    key: \"_isMultipleResource\",\n    value: function _isMultipleResource(resourceField) {\n      var result = false;\n      each(this.getResources(), function (_, resource) {\n        var field = getFieldExpr(resource);\n\n        if (field === resourceField) {\n          result = resource.allowMultiple;\n          return false;\n        }\n      }.bind(this));\n      return result;\n    }\n  }, {\n    key: \"getDataAccessors\",\n    value: function getDataAccessors(field, type) {\n      var result = null;\n      each(this._dataAccessors[type], function (accessorName, accessors) {\n        if (field === accessorName) {\n          result = accessors;\n          return false;\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"setResources\",\n    value: function setResources(resources) {\n      this._resources = resources;\n      this._dataAccessors = {\n        getter: {},\n        setter: {}\n      };\n      this._resourceFields = map(resources || [], function (resource) {\n        var field = getFieldExpr(resource);\n        this._dataAccessors.getter[field] = compileGetter(field);\n        this._dataAccessors.setter[field] = compileSetter(field);\n        return field;\n      }.bind(this));\n      this.agendaProcessor.initializeState(resources);\n    }\n  }, {\n    key: \"getResources\",\n    value: function getResources() {\n      return this._resources || [];\n    }\n  }, {\n    key: \"getResourcesData\",\n    value: function getResourcesData() {\n      return this._resourcesData || [];\n    }\n  }, {\n    key: \"getEditors\",\n    value: function getEditors() {\n      var result = [];\n      var that = this;\n      each(this.getResources(), function (i, resource) {\n        var field = getFieldExpr(resource);\n\n        var currentResourceItems = that._getResourceDataByField(field);\n\n        result.push({\n          editorOptions: {\n            dataSource: currentResourceItems.length ? currentResourceItems : getWrappedDataSource(resource.dataSource),\n            displayExpr: getDisplayExpr(resource),\n            valueExpr: getValueExpr(resource)\n          },\n          dataField: field,\n          editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\n          label: {\n            text: resource.label || field\n          }\n        });\n      });\n      return result;\n    }\n  }, {\n    key: \"getResourceDataByValue\",\n    value: function getResourceDataByValue(field, value) {\n      var that = this;\n      var result = new Deferred();\n      each(this.getResources(), function (_, resource) {\n        var resourceField = getFieldExpr(resource);\n\n        if (resourceField === field) {\n          var dataSource = getWrappedDataSource(resource.dataSource);\n          var valueExpr = getValueExpr(resource);\n\n          if (!that._resourceLoader[field]) {\n            that._resourceLoader[field] = dataSource.load();\n          }\n\n          that._resourceLoader[field].done(function (data) {\n            var filteredData = query(data).filter(valueExpr, value).toArray();\n            delete that._resourceLoader[field];\n            result.resolve(filteredData[0]);\n          }).fail(function () {\n            delete that._resourceLoader[field];\n            result.reject();\n          });\n\n          return false;\n        }\n      });\n      return result.promise();\n    }\n  }, {\n    key: \"setResourcesToItem\",\n    value: function setResourcesToItem(itemData, resources) {\n      var resourcesSetter = this._dataAccessors.setter;\n\n      for (var name in resources) {\n        if (Object.prototype.hasOwnProperty.call(resources, name)) {\n          var resourceData = resources[name];\n          resourcesSetter[name](itemData, this._isMultipleResource(name) ? wrapToArray(resourceData) : resourceData);\n        }\n      }\n    }\n  }, {\n    key: \"getResourcesFromItem\",\n    value: function getResourcesFromItem(itemData, wrapOnlyMultipleResources) {\n      var _this = this;\n\n      var result = null;\n\n      if (!isDefined(wrapOnlyMultipleResources)) {\n        wrapOnlyMultipleResources = false;\n      }\n\n      this._resourceFields.forEach(function (field) {\n        each(itemData, function (fieldName, fieldValue) {\n          var tempObject = {};\n          tempObject[fieldName] = fieldValue;\n\n          var resourceData = _this.getDataAccessors(field, \"getter\")(tempObject);\n\n          if (isDefined(resourceData)) {\n            if (!result) {\n              result = {};\n            }\n\n            if (1 === resourceData.length) {\n              resourceData = resourceData[0];\n            }\n\n            if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && _this._isMultipleResource(field)) {\n              _this.getDataAccessors(field, \"setter\")(tempObject, wrapToArray(resourceData));\n            } else {\n              _this.getDataAccessors(field, \"setter\")(tempObject, resourceData);\n            }\n\n            extend(result, tempObject);\n            return true;\n          }\n        });\n      });\n\n      return result;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(groups) {\n      var result = new Deferred();\n      var that = this;\n      var deferreds = [];\n      each(this.getResourcesByFields(groups), function (i, resource) {\n        var deferred = new Deferred();\n        var field = getFieldExpr(resource);\n        deferreds.push(deferred);\n        getWrappedDataSource(resource.dataSource).load().done(function (data) {\n          deferred.resolve({\n            name: field,\n            items: that._mapResourceData(resource, data),\n            data: data\n          });\n        }).fail(function () {\n          deferred.reject();\n        });\n      });\n\n      if (!deferreds.length) {\n        that._resourcesData = [];\n        return result.resolve([]);\n      }\n\n      when.apply(null, deferreds).done(function () {\n        var data = Array.prototype.slice.call(arguments);\n\n        var mapFunction = function mapFunction(obj) {\n          return {\n            name: obj.name,\n            items: obj.items,\n            data: obj.data\n          };\n        };\n\n        var isValidResources = that._isValidResourcesForGrouping(data);\n\n        that._resourcesData = isValidResources ? data : [];\n        result.resolve(isValidResources ? data.map(mapFunction) : []);\n      }).fail(function () {\n        result.reject();\n      });\n      return result.promise();\n    }\n  }, {\n    key: \"getResourcesByFields\",\n    value: function getResourcesByFields(fields) {\n      return grep(this.getResources(), function (resource) {\n        var field = getFieldExpr(resource);\n        return inArray(field, fields) > -1;\n      }.bind(this));\n    }\n  }, {\n    key: \"getResourceByField\",\n    value: function getResourceByField(field) {\n      return this.getResourcesByFields([field])[0] || {};\n    }\n  }, {\n    key: \"getResourceColor\",\n    value: function getResourceColor(field, value) {\n      var valueExpr = this.getResourceByField(field).valueExpr || \"id\";\n      var valueGetter = compileGetter(valueExpr);\n      var colorExpr = this.getResourceByField(field).colorExpr || \"color\";\n      var colorGetter = compileGetter(colorExpr);\n      var result = new Deferred();\n\n      var resourceData = this._getResourceDataByField(field);\n\n      var resourceDataLength = resourceData.length;\n      var color;\n\n      if (resourceDataLength) {\n        for (var i = 0; i < resourceDataLength; i++) {\n          if (valueGetter(resourceData[i]) === value) {\n            color = colorGetter(resourceData[i]);\n            break;\n          }\n        }\n\n        result.resolve(color);\n      } else {\n        this.getResourceDataByValue(field, value).done(function (resourceData) {\n          if (resourceData) {\n            color = colorGetter(resourceData);\n          }\n\n          result.resolve(color);\n        }).fail(function () {\n          result.reject();\n        });\n      }\n\n      return result.promise();\n    }\n  }, {\n    key: \"getResourceForPainting\",\n    value: function getResourceForPainting(groups) {\n      var resources = this.getResources();\n      var result;\n      each(resources, function (index, resource) {\n        if (resource.useColorAsDefault) {\n          result = resource;\n          return false;\n        }\n      });\n\n      if (!result) {\n        if (Array.isArray(groups) && groups.length) {\n          resources = this.getResourcesByFields(groups);\n        }\n\n        result = resources[resources.length - 1];\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResourcesTree\",\n    value: function createResourcesTree(groups) {\n      var leafIndex = 0;\n      return function make(group, groupIndex, result, parent) {\n        result = result || [];\n\n        for (var i = 0; i < group.items.length; i++) {\n          var currentGroupItem = group.items[i];\n          var resultItem = {\n            name: group.name,\n            value: currentGroupItem.id,\n            title: currentGroupItem.text,\n            data: group.data && group.data[i],\n            children: [],\n            parent: parent ? parent : null\n          };\n          result.push(resultItem);\n          var nextGroupIndex = groupIndex + 1;\n\n          if (groups[nextGroupIndex]) {\n            make.call(this, groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem);\n          }\n\n          if (!resultItem.children.length) {\n            resultItem.leafIndex = leafIndex;\n            leafIndex++;\n          }\n        }\n\n        return result;\n      }.call(this, groups[0], 0);\n    }\n  }, {\n    key: \"_hasGroupItem\",\n    value: function _hasGroupItem(appointmentResources, groupName, itemValue) {\n      var group = this.getDataAccessors(groupName, \"getter\")(appointmentResources);\n\n      if (group) {\n        if (inArray(itemValue, group) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_createPlainResourcesByAppointmentAsync\",\n    value: function _createPlainResourcesByAppointmentAsync(rawAppointment) {\n      return this.agendaProcessor.createListAsync(rawAppointment);\n    }\n  }, {\n    key: \"_getResourceDataByField\",\n    value: function _getResourceDataByField(fieldName) {\n      var loadedResources = this.getResourcesData();\n      var currentResourceData = [];\n\n      for (var i = 0, resourceCount = loadedResources.length; i < resourceCount; i++) {\n        if (loadedResources[i].name === fieldName) {\n          currentResourceData = loadedResources[i].data;\n          break;\n        }\n      }\n\n      return currentResourceData;\n    }\n  }, {\n    key: \"getResourceTreeLeaves\",\n    value: function getResourceTreeLeaves(tree, appointmentResources, result) {\n      result = result || [];\n\n      for (var i = 0; i < tree.length; i++) {\n        if (!this._hasGroupItem(appointmentResources, tree[i].name, tree[i].value)) {\n          continue;\n        }\n\n        if (isDefined(tree[i].leafIndex)) {\n          result.push(tree[i].leafIndex);\n        }\n\n        if (tree[i].children) {\n          this.getResourceTreeLeaves(tree[i].children, appointmentResources, result);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"groupAppointmentsByResources\",\n    value: function groupAppointmentsByResources(appointments, resources) {\n      var tree = this.createResourcesTree(resources);\n      var result = {};\n      each(appointments, function (_, appointment) {\n        var appointmentResources = this.getResourcesFromItem(appointment);\n        var treeLeaves = this.getResourceTreeLeaves(tree, appointmentResources);\n\n        for (var i = 0; i < treeLeaves.length; i++) {\n          if (!result[treeLeaves[i]]) {\n            result[treeLeaves[i]] = [];\n          }\n\n          result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true));\n        }\n      }.bind(this));\n      return result;\n    }\n  }, {\n    key: \"reduceResourcesTree\",\n    value: function reduceResourcesTree(tree, existingAppointments, _result) {\n      _result = _result ? _result.children : [];\n      var that = this;\n      tree.forEach(function (node, index) {\n        var ok = false;\n        var resourceName = node.name;\n        var resourceValue = node.value;\n        var resourceTitle = node.title;\n        var resourceData = node.data;\n        var resourceGetter = that.getDataAccessors(resourceName, \"getter\");\n        existingAppointments.forEach(function (appointment) {\n          if (!ok) {\n            var resourceFromAppointment = resourceGetter(appointment);\n\n            if (Array.isArray(resourceFromAppointment)) {\n              if (resourceFromAppointment.indexOf(resourceValue) > -1) {\n                _result.push({\n                  name: resourceName,\n                  value: resourceValue,\n                  title: resourceTitle,\n                  data: resourceData,\n                  children: []\n                });\n\n                ok = true;\n              }\n            } else if (resourceFromAppointment === resourceValue) {\n              _result.push({\n                name: resourceName,\n                value: resourceValue,\n                title: resourceTitle,\n                data: resourceData,\n                children: []\n              });\n\n              ok = true;\n            }\n          }\n        });\n\n        if (ok && node.children && node.children.length) {\n          that.reduceResourcesTree(node.children, existingAppointments, _result[index]);\n        }\n      });\n      return _result;\n    }\n  }, {\n    key: \"getResourcesDataByGroups\",\n    value: function getResourcesDataByGroups(groups) {\n      var _this2 = this;\n\n      var resourcesData = this.getResourcesData();\n\n      if (!groups || !groups.length) {\n        return resourcesData;\n      }\n\n      var fieldNames = {};\n      var currentResourcesData = [];\n      groups.forEach(function (group) {\n        each(group, function (name, value) {\n          return fieldNames[name] = value;\n        });\n      });\n      var resourceData = resourcesData.filter(function (_ref) {\n        var name = _ref.name;\n        return isDefined(fieldNames[name]);\n      });\n      resourceData.forEach(function (data) {\n        return currentResourcesData.push(extend({}, data));\n      });\n      currentResourcesData.forEach(function (currentResource) {\n        var items = currentResource.items,\n            data = currentResource.data,\n            resourceName = currentResource.name;\n\n        var resource = _this2.getResourceByField(resourceName);\n\n        var valueExpr = getValueExpr(resource);\n        var filteredItems = [];\n        var filteredData = [];\n        groups.filter(function (group) {\n          return isDefined(group[resourceName]);\n        }).forEach(function (group) {\n          each(group, function (name, value) {\n            if (!filteredItems.filter(function (item) {\n              return item.id === value && item[valueExpr] === name;\n            }).length) {\n              var currentItems = items.filter(function (item) {\n                return item.id === value;\n              });\n              var currentData = data.filter(function (item) {\n                return item[valueExpr] === value;\n              });\n              filteredItems.push.apply(filteredItems, _toConsumableArray(currentItems));\n              filteredData.push.apply(filteredData, _toConsumableArray(currentData));\n            }\n          });\n        });\n        currentResource.items = filteredItems;\n        currentResource.data = filteredData;\n      });\n      return currentResourcesData;\n    }\n  }, {\n    key: \"_isValidResourcesForGrouping\",\n    value: function _isValidResourcesForGrouping(resources) {\n      var result = resources.reduce(function (isValidResources, currentResource) {\n        return isValidResources && currentResource.items.length > 0;\n      }, true);\n      return result;\n    }\n  }]);\n\n  return ResourceManager;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/resources/resourceManager.js"],"names":["wrapToArray","inArray","grep","isDefined","deepExtendArraySafe","each","map","extend","query","compileGetter","compileSetter","when","Deferred","AgendaResourceProcessor","getDisplayExpr","getFieldExpr","getValueExpr","getWrappedDataSource","ResourceManager","resources","_resourceLoader","agendaProcessor","setResources","resource","data","valueGetter","displayGetter","item","result","id","text","color","resourceField","getResources","_","field","allowMultiple","bind","type","_dataAccessors","accessorName","accessors","_resources","getter","setter","_resourceFields","initializeState","_resourcesData","that","i","currentResourceItems","_getResourceDataByField","push","editorOptions","dataSource","length","displayExpr","valueExpr","dataField","editorType","label","value","load","done","filteredData","filter","toArray","resolve","fail","reject","promise","itemData","resourcesSetter","name","Object","prototype","hasOwnProperty","call","resourceData","_isMultipleResource","wrapOnlyMultipleResources","forEach","fieldName","fieldValue","tempObject","getDataAccessors","groups","deferreds","getResourcesByFields","deferred","items","_mapResourceData","apply","Array","slice","arguments","mapFunction","obj","isValidResources","_isValidResourcesForGrouping","fields","getResourceByField","colorExpr","colorGetter","resourceDataLength","getResourceDataByValue","index","useColorAsDefault","isArray","leafIndex","make","group","groupIndex","parent","currentGroupItem","resultItem","title","children","nextGroupIndex","appointmentResources","groupName","itemValue","rawAppointment","createListAsync","loadedResources","getResourcesData","currentResourceData","resourceCount","tree","_hasGroupItem","getResourceTreeLeaves","appointments","createResourcesTree","appointment","getResourcesFromItem","treeLeaves","existingAppointments","_result","node","ok","resourceName","resourceValue","resourceTitle","resourceGetter","resourceFromAppointment","indexOf","reduceResourcesTree","resourcesData","fieldNames","currentResourcesData","_ref","currentResource","filteredItems","currentItems","currentData","reduce"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,WADJ,EAEIC,OAFJ,QAGO,2BAHP;AAIA,SACIC,IADJ,QAEO,4BAFP;AAGA,SACIC,SADJ,QAEO,0BAFP;AAGA,SACIC,mBADJ,QAEO,4BAFP;AAGA,SACIC,IADJ,EAEIC,GAFJ,QAGO,8BAHP;AAIA,SACIC,MADJ,QAEO,4BAFP;AAGA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACIC,aADJ,EAEIC,aAFJ,QAGO,0BAHP;AAIA,SACIC,IADJ,EAEIC,QAFJ,QAGO,8BAHP;AAIA,SACIC,uBADJ,QAEO,2BAFP;AAGA,SACIC,cADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,oBAJJ,QAKO,SALP;AAMA,WAAaC,eAAb;AACI,2BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,eAAL,GAAuB,IAAIR,uBAAJ,EAAvB;AACA,SAAKS,YAAL,CAAkBH,SAAlB;AACH;;AALL;AAAA;AAAA,WAMI,0BAAiBI,QAAjB,EAA2BC,IAA3B,EAAiC;AAC7B,UAAIC,WAAW,GAAGhB,aAAa,CAACO,YAAY,CAACO,QAAD,CAAb,CAA/B;AACA,UAAIG,aAAa,GAAGjB,aAAa,CAACK,cAAc,CAACS,QAAD,CAAf,CAAjC;AACA,aAAOjB,GAAG,CAACkB,IAAD,EAAQ,UAASG,IAAT,EAAe;AAC7B,YAAIC,MAAM,GAAG;AACTC,UAAAA,EAAE,EAAEJ,WAAW,CAACE,IAAD,CADN;AAETG,UAAAA,IAAI,EAAEJ,aAAa,CAACC,IAAD;AAFV,SAAb;;AAIA,YAAIA,IAAI,CAACI,KAAT,EAAgB;AACZH,UAAAA,MAAM,CAACG,KAAP,GAAeJ,IAAI,CAACI,KAApB;AACH;;AACD,eAAOH,MAAP;AACH,OATS,CAAV;AAUH;AAnBL;AAAA;AAAA,WAoBI,6BAAoBI,aAApB,EAAmC;AAC/B,UAAIJ,MAAM,GAAG,KAAb;AACAvB,MAAAA,IAAI,CAAC,KAAK4B,YAAL,EAAD,EAAsB,UAASC,CAAT,EAAYX,QAAZ,EAAsB;AAC5C,YAAIY,KAAK,GAAGpB,YAAY,CAACQ,QAAD,CAAxB;;AACA,YAAIY,KAAK,KAAKH,aAAd,EAA6B;AACzBJ,UAAAA,MAAM,GAAGL,QAAQ,CAACa,aAAlB;AACA,iBAAO,KAAP;AACH;AACJ,OANyB,CAMxBC,IANwB,CAMnB,IANmB,CAAtB,CAAJ;AAOA,aAAOT,MAAP;AACH;AA9BL;AAAA;AAAA,WA+BI,0BAAiBO,KAAjB,EAAwBG,IAAxB,EAA8B;AAC1B,UAAIV,MAAM,GAAG,IAAb;AACAvB,MAAAA,IAAI,CAAC,KAAKkC,cAAL,CAAoBD,IAApB,CAAD,EAA6B,UAASE,YAAT,EAAuBC,SAAvB,EAAkC;AAC/D,YAAIN,KAAK,KAAKK,YAAd,EAA4B;AACxBZ,UAAAA,MAAM,GAAGa,SAAT;AACA,iBAAO,KAAP;AACH;AACJ,OALG,CAAJ;AAMA,aAAOb,MAAP;AACH;AAxCL;AAAA;AAAA,WAyCI,sBAAaT,SAAb,EAAwB;AACpB,WAAKuB,UAAL,GAAkBvB,SAAlB;AACA,WAAKoB,cAAL,GAAsB;AAClBI,QAAAA,MAAM,EAAE,EADU;AAElBC,QAAAA,MAAM,EAAE;AAFU,OAAtB;AAIA,WAAKC,eAAL,GAAuBvC,GAAG,CAACa,SAAS,IAAI,EAAd,EAAkB,UAASI,QAAT,EAAmB;AAC3D,YAAIY,KAAK,GAAGpB,YAAY,CAACQ,QAAD,CAAxB;AACA,aAAKgB,cAAL,CAAoBI,MAApB,CAA2BR,KAA3B,IAAoC1B,aAAa,CAAC0B,KAAD,CAAjD;AACA,aAAKI,cAAL,CAAoBK,MAApB,CAA2BT,KAA3B,IAAoCzB,aAAa,CAACyB,KAAD,CAAjD;AACA,eAAOA,KAAP;AACH,OAL2C,CAK1CE,IAL0C,CAKrC,IALqC,CAAlB,CAA1B;AAMA,WAAKhB,eAAL,CAAqByB,eAArB,CAAqC3B,SAArC;AACH;AAtDL;AAAA;AAAA,WAuDI,wBAAe;AACX,aAAO,KAAKuB,UAAL,IAAmB,EAA1B;AACH;AAzDL;AAAA;AAAA,WA0DI,4BAAmB;AACf,aAAO,KAAKK,cAAL,IAAuB,EAA9B;AACH;AA5DL;AAAA;AAAA,WA6DI,sBAAa;AACT,UAAInB,MAAM,GAAG,EAAb;AACA,UAAIoB,IAAI,GAAG,IAAX;AACA3C,MAAAA,IAAI,CAAC,KAAK4B,YAAL,EAAD,EAAuB,UAASgB,CAAT,EAAY1B,QAAZ,EAAsB;AAC7C,YAAIY,KAAK,GAAGpB,YAAY,CAACQ,QAAD,CAAxB;;AACA,YAAI2B,oBAAoB,GAAGF,IAAI,CAACG,uBAAL,CAA6BhB,KAA7B,CAA3B;;AACAP,QAAAA,MAAM,CAACwB,IAAP,CAAY;AACRC,UAAAA,aAAa,EAAE;AACXC,YAAAA,UAAU,EAAEJ,oBAAoB,CAACK,MAArB,GAA8BL,oBAA9B,GAAqDjC,oBAAoB,CAACM,QAAQ,CAAC+B,UAAV,CAD1E;AAEXE,YAAAA,WAAW,EAAE1C,cAAc,CAACS,QAAD,CAFhB;AAGXkC,YAAAA,SAAS,EAAEzC,YAAY,CAACO,QAAD;AAHZ,WADP;AAMRmC,UAAAA,SAAS,EAAEvB,KANH;AAORwB,UAAAA,UAAU,EAAEpC,QAAQ,CAACa,aAAT,GAAyB,UAAzB,GAAsC,aAP1C;AAQRwB,UAAAA,KAAK,EAAE;AACH9B,YAAAA,IAAI,EAAEP,QAAQ,CAACqC,KAAT,IAAkBzB;AADrB;AARC,SAAZ;AAYH,OAfG,CAAJ;AAgBA,aAAOP,MAAP;AACH;AAjFL;AAAA;AAAA,WAkFI,gCAAuBO,KAAvB,EAA8B0B,KAA9B,EAAqC;AACjC,UAAIb,IAAI,GAAG,IAAX;AACA,UAAIpB,MAAM,GAAG,IAAIhB,QAAJ,EAAb;AACAP,MAAAA,IAAI,CAAC,KAAK4B,YAAL,EAAD,EAAuB,UAASC,CAAT,EAAYX,QAAZ,EAAsB;AAC7C,YAAIS,aAAa,GAAGjB,YAAY,CAACQ,QAAD,CAAhC;;AACA,YAAIS,aAAa,KAAKG,KAAtB,EAA6B;AACzB,cAAImB,UAAU,GAAGrC,oBAAoB,CAACM,QAAQ,CAAC+B,UAAV,CAArC;AACA,cAAIG,SAAS,GAAGzC,YAAY,CAACO,QAAD,CAA5B;;AACA,cAAI,CAACyB,IAAI,CAAC5B,eAAL,CAAqBe,KAArB,CAAL,EAAkC;AAC9Ba,YAAAA,IAAI,CAAC5B,eAAL,CAAqBe,KAArB,IAA8BmB,UAAU,CAACQ,IAAX,EAA9B;AACH;;AACDd,UAAAA,IAAI,CAAC5B,eAAL,CAAqBe,KAArB,EAA4B4B,IAA5B,CAAkC,UAASvC,IAAT,EAAe;AAC7C,gBAAIwC,YAAY,GAAGxD,KAAK,CAACgB,IAAD,CAAL,CAAYyC,MAAZ,CAAmBR,SAAnB,EAA8BI,KAA9B,EAAqCK,OAArC,EAAnB;AACA,mBAAOlB,IAAI,CAAC5B,eAAL,CAAqBe,KAArB,CAAP;AACAP,YAAAA,MAAM,CAACuC,OAAP,CAAeH,YAAY,CAAC,CAAD,CAA3B;AACH,WAJD,EAIII,IAJJ,CAIU,YAAW;AACjB,mBAAOpB,IAAI,CAAC5B,eAAL,CAAqBe,KAArB,CAAP;AACAP,YAAAA,MAAM,CAACyC,MAAP;AACH,WAPD;;AAQA,iBAAO,KAAP;AACH;AACJ,OAlBG,CAAJ;AAmBA,aAAOzC,MAAM,CAAC0C,OAAP,EAAP;AACH;AAzGL;AAAA;AAAA,WA0GI,4BAAmBC,QAAnB,EAA6BpD,SAA7B,EAAwC;AACpC,UAAIqD,eAAe,GAAG,KAAKjC,cAAL,CAAoBK,MAA1C;;AACA,WAAK,IAAI6B,IAAT,IAAiBtD,SAAjB,EAA4B;AACxB,YAAIuD,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC1D,SAArC,EAAgDsD,IAAhD,CAAJ,EAA2D;AACvD,cAAIK,YAAY,GAAG3D,SAAS,CAACsD,IAAD,CAA5B;AACAD,UAAAA,eAAe,CAACC,IAAD,CAAf,CAAsBF,QAAtB,EAAgC,KAAKQ,mBAAL,CAAyBN,IAAzB,IAAiCzE,WAAW,CAAC8E,YAAD,CAA5C,GAA6DA,YAA7F;AACH;AACJ;AACJ;AAlHL;AAAA;AAAA,WAmHI,8BAAqBP,QAArB,EAA+BS,yBAA/B,EAA0D;AAAA;;AACtD,UAAIpD,MAAM,GAAG,IAAb;;AACA,UAAI,CAACzB,SAAS,CAAC6E,yBAAD,CAAd,EAA2C;AACvCA,QAAAA,yBAAyB,GAAG,KAA5B;AACH;;AACD,WAAKnC,eAAL,CAAqBoC,OAArB,CAA6B,UAAA9C,KAAK,EAAI;AAClC9B,QAAAA,IAAI,CAACkE,QAAD,EAAW,UAACW,SAAD,EAAYC,UAAZ,EAA2B;AACtC,cAAIC,UAAU,GAAG,EAAjB;AACAA,UAAAA,UAAU,CAACF,SAAD,CAAV,GAAwBC,UAAxB;;AACA,cAAIL,YAAY,GAAG,KAAI,CAACO,gBAAL,CAAsBlD,KAAtB,EAA6B,QAA7B,EAAuCiD,UAAvC,CAAnB;;AACA,cAAIjF,SAAS,CAAC2E,YAAD,CAAb,EAA6B;AACzB,gBAAI,CAAClD,MAAL,EAAa;AACTA,cAAAA,MAAM,GAAG,EAAT;AACH;;AACD,gBAAI,MAAMkD,YAAY,CAACvB,MAAvB,EAA+B;AAC3BuB,cAAAA,YAAY,GAAGA,YAAY,CAAC,CAAD,CAA3B;AACH;;AACD,gBAAI,CAACE,yBAAD,IAA8BA,yBAAyB,IAAI,KAAI,CAACD,mBAAL,CAAyB5C,KAAzB,CAA/D,EAAgG;AAC5F,cAAA,KAAI,CAACkD,gBAAL,CAAsBlD,KAAtB,EAA6B,QAA7B,EAAuCiD,UAAvC,EAAmDpF,WAAW,CAAC8E,YAAD,CAA9D;AACH,aAFD,MAEO;AACH,cAAA,KAAI,CAACO,gBAAL,CAAsBlD,KAAtB,EAA6B,QAA7B,EAAuCiD,UAAvC,EAAmDN,YAAnD;AACH;;AACDvE,YAAAA,MAAM,CAACqB,MAAD,EAASwD,UAAT,CAAN;AACA,mBAAO,IAAP;AACH;AACJ,SAnBG,CAAJ;AAoBH,OArBD;;AAsBA,aAAOxD,MAAP;AACH;AA/IL;AAAA;AAAA,WAgJI,uBAAc0D,MAAd,EAAsB;AAClB,UAAI1D,MAAM,GAAG,IAAIhB,QAAJ,EAAb;AACA,UAAIoC,IAAI,GAAG,IAAX;AACA,UAAIuC,SAAS,GAAG,EAAhB;AACAlF,MAAAA,IAAI,CAAC,KAAKmF,oBAAL,CAA0BF,MAA1B,CAAD,EAAqC,UAASrC,CAAT,EAAY1B,QAAZ,EAAsB;AAC3D,YAAIkE,QAAQ,GAAG,IAAI7E,QAAJ,EAAf;AACA,YAAIuB,KAAK,GAAGpB,YAAY,CAACQ,QAAD,CAAxB;AACAgE,QAAAA,SAAS,CAACnC,IAAV,CAAeqC,QAAf;AACAxE,QAAAA,oBAAoB,CAACM,QAAQ,CAAC+B,UAAV,CAApB,CAA0CQ,IAA1C,GAAiDC,IAAjD,CAAuD,UAASvC,IAAT,EAAe;AAClEiE,UAAAA,QAAQ,CAACtB,OAAT,CAAiB;AACbM,YAAAA,IAAI,EAAEtC,KADO;AAEbuD,YAAAA,KAAK,EAAE1C,IAAI,CAAC2C,gBAAL,CAAsBpE,QAAtB,EAAgCC,IAAhC,CAFM;AAGbA,YAAAA,IAAI,EAAEA;AAHO,WAAjB;AAKH,SAND,EAMI4C,IANJ,CAMU,YAAW;AACjBqB,UAAAA,QAAQ,CAACpB,MAAT;AACH,SARD;AASH,OAbG,CAAJ;;AAcA,UAAI,CAACkB,SAAS,CAAChC,MAAf,EAAuB;AACnBP,QAAAA,IAAI,CAACD,cAAL,GAAsB,EAAtB;AACA,eAAOnB,MAAM,CAACuC,OAAP,CAAe,EAAf,CAAP;AACH;;AACDxD,MAAAA,IAAI,CAACiF,KAAL,CAAW,IAAX,EAAiBL,SAAjB,EAA4BxB,IAA5B,CAAkC,YAAW;AACzC,YAAIvC,IAAI,GAAGqE,KAAK,CAAClB,SAAN,CAAgBmB,KAAhB,CAAsBjB,IAAtB,CAA2BkB,SAA3B,CAAX;;AACA,YAAIC,WAAW,GAAG,SAAdA,WAAc,CAASC,GAAT,EAAc;AAC5B,iBAAO;AACHxB,YAAAA,IAAI,EAAEwB,GAAG,CAACxB,IADP;AAEHiB,YAAAA,KAAK,EAAEO,GAAG,CAACP,KAFR;AAGHlE,YAAAA,IAAI,EAAEyE,GAAG,CAACzE;AAHP,WAAP;AAKH,SAND;;AAOA,YAAI0E,gBAAgB,GAAGlD,IAAI,CAACmD,4BAAL,CAAkC3E,IAAlC,CAAvB;;AACAwB,QAAAA,IAAI,CAACD,cAAL,GAAsBmD,gBAAgB,GAAG1E,IAAH,GAAU,EAAhD;AACAI,QAAAA,MAAM,CAACuC,OAAP,CAAe+B,gBAAgB,GAAG1E,IAAI,CAAClB,GAAL,CAAS0F,WAAT,CAAH,GAA2B,EAA1D;AACH,OAZD,EAYI5B,IAZJ,CAYU,YAAW;AACjBxC,QAAAA,MAAM,CAACyC,MAAP;AACH,OAdD;AAeA,aAAOzC,MAAM,CAAC0C,OAAP,EAAP;AACH;AAtLL;AAAA;AAAA,WAuLI,8BAAqB8B,MAArB,EAA6B;AACzB,aAAOlG,IAAI,CAAC,KAAK+B,YAAL,EAAD,EAAsB,UAASV,QAAT,EAAmB;AAChD,YAAIY,KAAK,GAAGpB,YAAY,CAACQ,QAAD,CAAxB;AACA,eAAOtB,OAAO,CAACkC,KAAD,EAAQiE,MAAR,CAAP,GAAyB,CAAC,CAAjC;AACH,OAHgC,CAG/B/D,IAH+B,CAG1B,IAH0B,CAAtB,CAAX;AAIH;AA5LL;AAAA;AAAA,WA6LI,4BAAmBF,KAAnB,EAA0B;AACtB,aAAO,KAAKqD,oBAAL,CAA0B,CAACrD,KAAD,CAA1B,EAAmC,CAAnC,KAAyC,EAAhD;AACH;AA/LL;AAAA;AAAA,WAgMI,0BAAiBA,KAAjB,EAAwB0B,KAAxB,EAA+B;AAC3B,UAAIJ,SAAS,GAAG,KAAK4C,kBAAL,CAAwBlE,KAAxB,EAA+BsB,SAA/B,IAA4C,IAA5D;AACA,UAAIhC,WAAW,GAAGhB,aAAa,CAACgD,SAAD,CAA/B;AACA,UAAI6C,SAAS,GAAG,KAAKD,kBAAL,CAAwBlE,KAAxB,EAA+BmE,SAA/B,IAA4C,OAA5D;AACA,UAAIC,WAAW,GAAG9F,aAAa,CAAC6F,SAAD,CAA/B;AACA,UAAI1E,MAAM,GAAG,IAAIhB,QAAJ,EAAb;;AACA,UAAIkE,YAAY,GAAG,KAAK3B,uBAAL,CAA6BhB,KAA7B,CAAnB;;AACA,UAAIqE,kBAAkB,GAAG1B,YAAY,CAACvB,MAAtC;AACA,UAAIxB,KAAJ;;AACA,UAAIyE,kBAAJ,EAAwB;AACpB,aAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,kBAApB,EAAwCvD,CAAC,EAAzC,EAA6C;AACzC,cAAIxB,WAAW,CAACqD,YAAY,CAAC7B,CAAD,CAAb,CAAX,KAAiCY,KAArC,EAA4C;AACxC9B,YAAAA,KAAK,GAAGwE,WAAW,CAACzB,YAAY,CAAC7B,CAAD,CAAb,CAAnB;AACA;AACH;AACJ;;AACDrB,QAAAA,MAAM,CAACuC,OAAP,CAAepC,KAAf;AACH,OARD,MAQO;AACH,aAAK0E,sBAAL,CAA4BtE,KAA5B,EAAmC0B,KAAnC,EAA0CE,IAA1C,CAAgD,UAASe,YAAT,EAAuB;AACnE,cAAIA,YAAJ,EAAkB;AACd/C,YAAAA,KAAK,GAAGwE,WAAW,CAACzB,YAAD,CAAnB;AACH;;AACDlD,UAAAA,MAAM,CAACuC,OAAP,CAAepC,KAAf;AACH,SALD,EAKIqC,IALJ,CAKU,YAAW;AACjBxC,UAAAA,MAAM,CAACyC,MAAP;AACH,SAPD;AAQH;;AACD,aAAOzC,MAAM,CAAC0C,OAAP,EAAP;AACH;AA5NL;AAAA;AAAA,WA6NI,gCAAuBgB,MAAvB,EAA+B;AAC3B,UAAInE,SAAS,GAAG,KAAKc,YAAL,EAAhB;AACA,UAAIL,MAAJ;AACAvB,MAAAA,IAAI,CAACc,SAAD,EAAa,UAASuF,KAAT,EAAgBnF,QAAhB,EAA0B;AACvC,YAAIA,QAAQ,CAACoF,iBAAb,EAAgC;AAC5B/E,UAAAA,MAAM,GAAGL,QAAT;AACA,iBAAO,KAAP;AACH;AACJ,OALG,CAAJ;;AAMA,UAAI,CAACK,MAAL,EAAa;AACT,YAAIiE,KAAK,CAACe,OAAN,CAActB,MAAd,KAAyBA,MAAM,CAAC/B,MAApC,EAA4C;AACxCpC,UAAAA,SAAS,GAAG,KAAKqE,oBAAL,CAA0BF,MAA1B,CAAZ;AACH;;AACD1D,QAAAA,MAAM,GAAGT,SAAS,CAACA,SAAS,CAACoC,MAAV,GAAmB,CAApB,CAAlB;AACH;;AACD,aAAO3B,MAAP;AACH;AA7OL;AAAA;AAAA,WA8OI,6BAAoB0D,MAApB,EAA4B;AACxB,UAAIuB,SAAS,GAAG,CAAhB;AACA,aAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,UAArB,EAAiCpF,MAAjC,EAAyCqF,MAAzC,EAAiD;AACpDrF,QAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;;AACA,aAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,KAAK,CAACrB,KAAN,CAAYnC,MAAhC,EAAwCN,CAAC,EAAzC,EAA6C;AACzC,cAAIiE,gBAAgB,GAAGH,KAAK,CAACrB,KAAN,CAAYzC,CAAZ,CAAvB;AACA,cAAIkE,UAAU,GAAG;AACb1C,YAAAA,IAAI,EAAEsC,KAAK,CAACtC,IADC;AAEbZ,YAAAA,KAAK,EAAEqD,gBAAgB,CAACrF,EAFX;AAGbuF,YAAAA,KAAK,EAAEF,gBAAgB,CAACpF,IAHX;AAIbN,YAAAA,IAAI,EAAEuF,KAAK,CAACvF,IAAN,IAAcuF,KAAK,CAACvF,IAAN,CAAWyB,CAAX,CAJP;AAKboE,YAAAA,QAAQ,EAAE,EALG;AAMbJ,YAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAY;AANb,WAAjB;AAQArF,UAAAA,MAAM,CAACwB,IAAP,CAAY+D,UAAZ;AACA,cAAIG,cAAc,GAAGN,UAAU,GAAG,CAAlC;;AACA,cAAI1B,MAAM,CAACgC,cAAD,CAAV,EAA4B;AACxBR,YAAAA,IAAI,CAACjC,IAAL,CAAU,IAAV,EAAgBS,MAAM,CAACgC,cAAD,CAAtB,EAAwCA,cAAxC,EAAwDH,UAAU,CAACE,QAAnE,EAA6EF,UAA7E;AACH;;AACD,cAAI,CAACA,UAAU,CAACE,QAAX,CAAoB9D,MAAzB,EAAiC;AAC7B4D,YAAAA,UAAU,CAACN,SAAX,GAAuBA,SAAvB;AACAA,YAAAA,SAAS;AACZ;AACJ;;AACD,eAAOjF,MAAP;AACH,OAvBM,CAuBLiD,IAvBK,CAuBA,IAvBA,EAuBMS,MAAM,CAAC,CAAD,CAvBZ,EAuBiB,CAvBjB,CAAP;AAwBH;AAxQL;AAAA;AAAA,WAyQI,uBAAciC,oBAAd,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0D;AACtD,UAAIV,KAAK,GAAG,KAAK1B,gBAAL,CAAsBmC,SAAtB,EAAiC,QAAjC,EAA2CD,oBAA3C,CAAZ;;AACA,UAAIR,KAAJ,EAAW;AACP,YAAI9G,OAAO,CAACwH,SAAD,EAAYV,KAAZ,CAAP,GAA4B,CAAC,CAAjC,EAAoC;AAChC,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH;AAjRL;AAAA;AAAA,WAkRI,iDAAwCW,cAAxC,EAAwD;AACpD,aAAO,KAAKrG,eAAL,CAAqBsG,eAArB,CAAqCD,cAArC,CAAP;AACH;AApRL;AAAA;AAAA,WAqRI,iCAAwBxC,SAAxB,EAAmC;AAC/B,UAAI0C,eAAe,GAAG,KAAKC,gBAAL,EAAtB;AACA,UAAIC,mBAAmB,GAAG,EAA1B;;AACA,WAAK,IAAI7E,CAAC,GAAG,CAAR,EAAW8E,aAAa,GAAGH,eAAe,CAACrE,MAAhD,EAAwDN,CAAC,GAAG8E,aAA5D,EAA2E9E,CAAC,EAA5E,EAAgF;AAC5E,YAAI2E,eAAe,CAAC3E,CAAD,CAAf,CAAmBwB,IAAnB,KAA4BS,SAAhC,EAA2C;AACvC4C,UAAAA,mBAAmB,GAAGF,eAAe,CAAC3E,CAAD,CAAf,CAAmBzB,IAAzC;AACA;AACH;AACJ;;AACD,aAAOsG,mBAAP;AACH;AA/RL;AAAA;AAAA,WAgSI,+BAAsBE,IAAtB,EAA4BT,oBAA5B,EAAkD3F,MAAlD,EAA0D;AACtDA,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;;AACA,WAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+E,IAAI,CAACzE,MAAzB,EAAiCN,CAAC,EAAlC,EAAsC;AAClC,YAAI,CAAC,KAAKgF,aAAL,CAAmBV,oBAAnB,EAAyCS,IAAI,CAAC/E,CAAD,CAAJ,CAAQwB,IAAjD,EAAuDuD,IAAI,CAAC/E,CAAD,CAAJ,CAAQY,KAA/D,CAAL,EAA4E;AACxE;AACH;;AACD,YAAI1D,SAAS,CAAC6H,IAAI,CAAC/E,CAAD,CAAJ,CAAQ4D,SAAT,CAAb,EAAkC;AAC9BjF,UAAAA,MAAM,CAACwB,IAAP,CAAY4E,IAAI,CAAC/E,CAAD,CAAJ,CAAQ4D,SAApB;AACH;;AACD,YAAImB,IAAI,CAAC/E,CAAD,CAAJ,CAAQoE,QAAZ,EAAsB;AAClB,eAAKa,qBAAL,CAA2BF,IAAI,CAAC/E,CAAD,CAAJ,CAAQoE,QAAnC,EAA6CE,oBAA7C,EAAmE3F,MAAnE;AACH;AACJ;;AACD,aAAOA,MAAP;AACH;AA9SL;AAAA;AAAA,WA+SI,sCAA6BuG,YAA7B,EAA2ChH,SAA3C,EAAsD;AAClD,UAAI6G,IAAI,GAAG,KAAKI,mBAAL,CAAyBjH,SAAzB,CAAX;AACA,UAAIS,MAAM,GAAG,EAAb;AACAvB,MAAAA,IAAI,CAAC8H,YAAD,EAAe,UAASjG,CAAT,EAAYmG,WAAZ,EAAyB;AACxC,YAAId,oBAAoB,GAAG,KAAKe,oBAAL,CAA0BD,WAA1B,CAA3B;AACA,YAAIE,UAAU,GAAG,KAAKL,qBAAL,CAA2BF,IAA3B,EAAiCT,oBAAjC,CAAjB;;AACA,aAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsF,UAAU,CAAChF,MAA/B,EAAuCN,CAAC,EAAxC,EAA4C;AACxC,cAAI,CAACrB,MAAM,CAAC2G,UAAU,CAACtF,CAAD,CAAX,CAAX,EAA4B;AACxBrB,YAAAA,MAAM,CAAC2G,UAAU,CAACtF,CAAD,CAAX,CAAN,GAAwB,EAAxB;AACH;;AACDrB,UAAAA,MAAM,CAAC2G,UAAU,CAACtF,CAAD,CAAX,CAAN,CAAsBG,IAAtB,CAA2BhD,mBAAmB,CAAC,EAAD,EAAKiI,WAAL,EAAkB,IAAlB,CAA9C;AACH;AACJ,OATkB,CASjBhG,IATiB,CASZ,IATY,CAAf,CAAJ;AAUA,aAAOT,MAAP;AACH;AA7TL;AAAA;AAAA,WA8TI,6BAAoBoG,IAApB,EAA0BQ,oBAA1B,EAAgDC,OAAhD,EAAyD;AACrDA,MAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAO,CAACpB,QAAX,GAAsB,EAAvC;AACA,UAAIrE,IAAI,GAAG,IAAX;AACAgF,MAAAA,IAAI,CAAC/C,OAAL,CAAc,UAASyD,IAAT,EAAehC,KAAf,EAAsB;AAChC,YAAIiC,EAAE,GAAG,KAAT;AACA,YAAIC,YAAY,GAAGF,IAAI,CAACjE,IAAxB;AACA,YAAIoE,aAAa,GAAGH,IAAI,CAAC7E,KAAzB;AACA,YAAIiF,aAAa,GAAGJ,IAAI,CAACtB,KAAzB;AACA,YAAItC,YAAY,GAAG4D,IAAI,CAAClH,IAAxB;AACA,YAAIuH,cAAc,GAAG/F,IAAI,CAACqC,gBAAL,CAAsBuD,YAAtB,EAAoC,QAApC,CAArB;AACAJ,QAAAA,oBAAoB,CAACvD,OAArB,CAA8B,UAASoD,WAAT,EAAsB;AAChD,cAAI,CAACM,EAAL,EAAS;AACL,gBAAIK,uBAAuB,GAAGD,cAAc,CAACV,WAAD,CAA5C;;AACA,gBAAIxC,KAAK,CAACe,OAAN,CAAcoC,uBAAd,CAAJ,EAA4C;AACxC,kBAAIA,uBAAuB,CAACC,OAAxB,CAAgCJ,aAAhC,IAAiD,CAAC,CAAtD,EAAyD;AACrDJ,gBAAAA,OAAO,CAACrF,IAAR,CAAa;AACTqB,kBAAAA,IAAI,EAAEmE,YADG;AAET/E,kBAAAA,KAAK,EAAEgF,aAFE;AAGTzB,kBAAAA,KAAK,EAAE0B,aAHE;AAITtH,kBAAAA,IAAI,EAAEsD,YAJG;AAKTuC,kBAAAA,QAAQ,EAAE;AALD,iBAAb;;AAOAsB,gBAAAA,EAAE,GAAG,IAAL;AACH;AACJ,aAXD,MAWO,IAAIK,uBAAuB,KAAKH,aAAhC,EAA+C;AAClDJ,cAAAA,OAAO,CAACrF,IAAR,CAAa;AACTqB,gBAAAA,IAAI,EAAEmE,YADG;AAET/E,gBAAAA,KAAK,EAAEgF,aAFE;AAGTzB,gBAAAA,KAAK,EAAE0B,aAHE;AAITtH,gBAAAA,IAAI,EAAEsD,YAJG;AAKTuC,gBAAAA,QAAQ,EAAE;AALD,eAAb;;AAOAsB,cAAAA,EAAE,GAAG,IAAL;AACH;AACJ;AACJ,SAzBD;;AA0BA,YAAIA,EAAE,IAAID,IAAI,CAACrB,QAAX,IAAuBqB,IAAI,CAACrB,QAAL,CAAc9D,MAAzC,EAAiD;AAC7CP,UAAAA,IAAI,CAACkG,mBAAL,CAAyBR,IAAI,CAACrB,QAA9B,EAAwCmB,oBAAxC,EAA8DC,OAAO,CAAC/B,KAAD,CAArE;AACH;AACJ,OApCD;AAqCA,aAAO+B,OAAP;AACH;AAvWL;AAAA;AAAA,WAwWI,kCAAyBnD,MAAzB,EAAiC;AAAA;;AAC7B,UAAI6D,aAAa,GAAG,KAAKtB,gBAAL,EAApB;;AACA,UAAI,CAACvC,MAAD,IAAW,CAACA,MAAM,CAAC/B,MAAvB,EAA+B;AAC3B,eAAO4F,aAAP;AACH;;AACD,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,oBAAoB,GAAG,EAA3B;AACA/D,MAAAA,MAAM,CAACL,OAAP,CAAe,UAAA8B,KAAK,EAAI;AACpB1G,QAAAA,IAAI,CAAC0G,KAAD,EAAQ,UAACtC,IAAD,EAAOZ,KAAP;AAAA,iBAAiBuF,UAAU,CAAC3E,IAAD,CAAV,GAAmBZ,KAApC;AAAA,SAAR,CAAJ;AACH,OAFD;AAGA,UAAIiB,YAAY,GAAGqE,aAAa,CAAClF,MAAd,CAAqB,UAAAqF,IAAI,EAAI;AAC5C,YACU7E,IADV,GAEI6E,IAFJ,CACI7E,IADJ;AAGA,eAAOtE,SAAS,CAACiJ,UAAU,CAAC3E,IAAD,CAAX,CAAhB;AACH,OALkB,CAAnB;AAMAK,MAAAA,YAAY,CAACG,OAAb,CAAqB,UAAAzD,IAAI;AAAA,eAAI6H,oBAAoB,CAACjG,IAArB,CAA0B7C,MAAM,CAAC,EAAD,EAAKiB,IAAL,CAAhC,CAAJ;AAAA,OAAzB;AACA6H,MAAAA,oBAAoB,CAACpE,OAArB,CAA6B,UAAAsE,eAAe,EAAI;AAC5C,YACW7D,KADX,GAII6D,eAJJ,CACI7D,KADJ;AAAA,YAEUlE,IAFV,GAII+H,eAJJ,CAEI/H,IAFJ;AAAA,YAGUoH,YAHV,GAIIW,eAJJ,CAGI9E,IAHJ;;AAKA,YAAIlD,QAAQ,GAAG,MAAI,CAAC8E,kBAAL,CAAwBuC,YAAxB,CAAf;;AACA,YAAInF,SAAS,GAAGzC,YAAY,CAACO,QAAD,CAA5B;AACA,YAAIiI,aAAa,GAAG,EAApB;AACA,YAAIxF,YAAY,GAAG,EAAnB;AACAsB,QAAAA,MAAM,CAACrB,MAAP,CAAc,UAAA8C,KAAK;AAAA,iBAAI5G,SAAS,CAAC4G,KAAK,CAAC6B,YAAD,CAAN,CAAb;AAAA,SAAnB,EAAuD3D,OAAvD,CAA+D,UAAA8B,KAAK,EAAI;AACpE1G,UAAAA,IAAI,CAAC0G,KAAD,EAAQ,UAACtC,IAAD,EAAOZ,KAAP,EAAiB;AACzB,gBAAI,CAAC2F,aAAa,CAACvF,MAAd,CAAqB,UAAAtC,IAAI;AAAA,qBAAIA,IAAI,CAACE,EAAL,KAAYgC,KAAZ,IAAqBlC,IAAI,CAAC8B,SAAD,CAAJ,KAAoBgB,IAA7C;AAAA,aAAzB,EAA4ElB,MAAjF,EAAyF;AACrF,kBAAIkG,YAAY,GAAG/D,KAAK,CAACzB,MAAN,CAAa,UAAAtC,IAAI;AAAA,uBAAIA,IAAI,CAACE,EAAL,KAAYgC,KAAhB;AAAA,eAAjB,CAAnB;AACA,kBAAI6F,WAAW,GAAGlI,IAAI,CAACyC,MAAL,CAAY,UAAAtC,IAAI;AAAA,uBAAIA,IAAI,CAAC8B,SAAD,CAAJ,KAAoBI,KAAxB;AAAA,eAAhB,CAAlB;AACA2F,cAAAA,aAAa,CAACpG,IAAd,OAAAoG,aAAa,qBAASC,YAAT,EAAb;AACAzF,cAAAA,YAAY,CAACZ,IAAb,OAAAY,YAAY,qBAAS0F,WAAT,EAAZ;AACH;AACJ,WAPG,CAAJ;AAQH,SATD;AAUAH,QAAAA,eAAe,CAAC7D,KAAhB,GAAwB8D,aAAxB;AACAD,QAAAA,eAAe,CAAC/H,IAAhB,GAAuBwC,YAAvB;AACH,OAtBD;AAuBA,aAAOqF,oBAAP;AACH;AAjZL;AAAA;AAAA,WAkZI,sCAA6BlI,SAA7B,EAAwC;AACpC,UAAIS,MAAM,GAAGT,SAAS,CAACwI,MAAV,CAAiB,UAACzD,gBAAD,EAAmBqD,eAAnB;AAAA,eAAuCrD,gBAAgB,IAAIqD,eAAe,CAAC7D,KAAhB,CAAsBnC,MAAtB,GAA+B,CAA1F;AAAA,OAAjB,EAA8G,IAA9G,CAAb;AACA,aAAO3B,MAAP;AACH;AArZL;;AAAA;AAAA","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/resources/resourceManager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    wrapToArray,\r\n    inArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    grep\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport query from \"../../../data/query\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    AgendaResourceProcessor\r\n} from \"./agendaResourceProcessor\";\r\nimport {\r\n    getDisplayExpr,\r\n    getFieldExpr,\r\n    getValueExpr,\r\n    getWrappedDataSource\r\n} from \"./utils\";\r\nexport class ResourceManager {\r\n    constructor(resources) {\r\n        this._resourceLoader = {};\r\n        this.agendaProcessor = new AgendaResourceProcessor;\r\n        this.setResources(resources)\r\n    }\r\n    _mapResourceData(resource, data) {\r\n        var valueGetter = compileGetter(getValueExpr(resource));\r\n        var displayGetter = compileGetter(getDisplayExpr(resource));\r\n        return map(data, (function(item) {\r\n            var result = {\r\n                id: valueGetter(item),\r\n                text: displayGetter(item)\r\n            };\r\n            if (item.color) {\r\n                result.color = item.color\r\n            }\r\n            return result\r\n        }))\r\n    }\r\n    _isMultipleResource(resourceField) {\r\n        var result = false;\r\n        each(this.getResources(), function(_, resource) {\r\n            var field = getFieldExpr(resource);\r\n            if (field === resourceField) {\r\n                result = resource.allowMultiple;\r\n                return false\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    getDataAccessors(field, type) {\r\n        var result = null;\r\n        each(this._dataAccessors[type], (function(accessorName, accessors) {\r\n            if (field === accessorName) {\r\n                result = accessors;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    setResources(resources) {\r\n        this._resources = resources;\r\n        this._dataAccessors = {\r\n            getter: {},\r\n            setter: {}\r\n        };\r\n        this._resourceFields = map(resources || [], function(resource) {\r\n            var field = getFieldExpr(resource);\r\n            this._dataAccessors.getter[field] = compileGetter(field);\r\n            this._dataAccessors.setter[field] = compileSetter(field);\r\n            return field\r\n        }.bind(this));\r\n        this.agendaProcessor.initializeState(resources)\r\n    }\r\n    getResources() {\r\n        return this._resources || []\r\n    }\r\n    getResourcesData() {\r\n        return this._resourcesData || []\r\n    }\r\n    getEditors() {\r\n        var result = [];\r\n        var that = this;\r\n        each(this.getResources(), (function(i, resource) {\r\n            var field = getFieldExpr(resource);\r\n            var currentResourceItems = that._getResourceDataByField(field);\r\n            result.push({\r\n                editorOptions: {\r\n                    dataSource: currentResourceItems.length ? currentResourceItems : getWrappedDataSource(resource.dataSource),\r\n                    displayExpr: getDisplayExpr(resource),\r\n                    valueExpr: getValueExpr(resource)\r\n                },\r\n                dataField: field,\r\n                editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\r\n                label: {\r\n                    text: resource.label || field\r\n                }\r\n            })\r\n        }));\r\n        return result\r\n    }\r\n    getResourceDataByValue(field, value) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        each(this.getResources(), (function(_, resource) {\r\n            var resourceField = getFieldExpr(resource);\r\n            if (resourceField === field) {\r\n                var dataSource = getWrappedDataSource(resource.dataSource);\r\n                var valueExpr = getValueExpr(resource);\r\n                if (!that._resourceLoader[field]) {\r\n                    that._resourceLoader[field] = dataSource.load()\r\n                }\r\n                that._resourceLoader[field].done((function(data) {\r\n                    var filteredData = query(data).filter(valueExpr, value).toArray();\r\n                    delete that._resourceLoader[field];\r\n                    result.resolve(filteredData[0])\r\n                })).fail((function() {\r\n                    delete that._resourceLoader[field];\r\n                    result.reject()\r\n                }));\r\n                return false\r\n            }\r\n        }));\r\n        return result.promise()\r\n    }\r\n    setResourcesToItem(itemData, resources) {\r\n        var resourcesSetter = this._dataAccessors.setter;\r\n        for (var name in resources) {\r\n            if (Object.prototype.hasOwnProperty.call(resources, name)) {\r\n                var resourceData = resources[name];\r\n                resourcesSetter[name](itemData, this._isMultipleResource(name) ? wrapToArray(resourceData) : resourceData)\r\n            }\r\n        }\r\n    }\r\n    getResourcesFromItem(itemData, wrapOnlyMultipleResources) {\r\n        var result = null;\r\n        if (!isDefined(wrapOnlyMultipleResources)) {\r\n            wrapOnlyMultipleResources = false\r\n        }\r\n        this._resourceFields.forEach(field => {\r\n            each(itemData, (fieldName, fieldValue) => {\r\n                var tempObject = {};\r\n                tempObject[fieldName] = fieldValue;\r\n                var resourceData = this.getDataAccessors(field, \"getter\")(tempObject);\r\n                if (isDefined(resourceData)) {\r\n                    if (!result) {\r\n                        result = {}\r\n                    }\r\n                    if (1 === resourceData.length) {\r\n                        resourceData = resourceData[0]\r\n                    }\r\n                    if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && this._isMultipleResource(field)) {\r\n                        this.getDataAccessors(field, \"setter\")(tempObject, wrapToArray(resourceData))\r\n                    } else {\r\n                        this.getDataAccessors(field, \"setter\")(tempObject, resourceData)\r\n                    }\r\n                    extend(result, tempObject);\r\n                    return true\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    }\r\n    loadResources(groups) {\r\n        var result = new Deferred;\r\n        var that = this;\r\n        var deferreds = [];\r\n        each(this.getResourcesByFields(groups), (function(i, resource) {\r\n            var deferred = new Deferred;\r\n            var field = getFieldExpr(resource);\r\n            deferreds.push(deferred);\r\n            getWrappedDataSource(resource.dataSource).load().done((function(data) {\r\n                deferred.resolve({\r\n                    name: field,\r\n                    items: that._mapResourceData(resource, data),\r\n                    data: data\r\n                })\r\n            })).fail((function() {\r\n                deferred.reject()\r\n            }))\r\n        }));\r\n        if (!deferreds.length) {\r\n            that._resourcesData = [];\r\n            return result.resolve([])\r\n        }\r\n        when.apply(null, deferreds).done((function() {\r\n            var data = Array.prototype.slice.call(arguments);\r\n            var mapFunction = function(obj) {\r\n                return {\r\n                    name: obj.name,\r\n                    items: obj.items,\r\n                    data: obj.data\r\n                }\r\n            };\r\n            var isValidResources = that._isValidResourcesForGrouping(data);\r\n            that._resourcesData = isValidResources ? data : [];\r\n            result.resolve(isValidResources ? data.map(mapFunction) : [])\r\n        })).fail((function() {\r\n            result.reject()\r\n        }));\r\n        return result.promise()\r\n    }\r\n    getResourcesByFields(fields) {\r\n        return grep(this.getResources(), function(resource) {\r\n            var field = getFieldExpr(resource);\r\n            return inArray(field, fields) > -1\r\n        }.bind(this))\r\n    }\r\n    getResourceByField(field) {\r\n        return this.getResourcesByFields([field])[0] || {}\r\n    }\r\n    getResourceColor(field, value) {\r\n        var valueExpr = this.getResourceByField(field).valueExpr || \"id\";\r\n        var valueGetter = compileGetter(valueExpr);\r\n        var colorExpr = this.getResourceByField(field).colorExpr || \"color\";\r\n        var colorGetter = compileGetter(colorExpr);\r\n        var result = new Deferred;\r\n        var resourceData = this._getResourceDataByField(field);\r\n        var resourceDataLength = resourceData.length;\r\n        var color;\r\n        if (resourceDataLength) {\r\n            for (var i = 0; i < resourceDataLength; i++) {\r\n                if (valueGetter(resourceData[i]) === value) {\r\n                    color = colorGetter(resourceData[i]);\r\n                    break\r\n                }\r\n            }\r\n            result.resolve(color)\r\n        } else {\r\n            this.getResourceDataByValue(field, value).done((function(resourceData) {\r\n                if (resourceData) {\r\n                    color = colorGetter(resourceData)\r\n                }\r\n                result.resolve(color)\r\n            })).fail((function() {\r\n                result.reject()\r\n            }))\r\n        }\r\n        return result.promise()\r\n    }\r\n    getResourceForPainting(groups) {\r\n        var resources = this.getResources();\r\n        var result;\r\n        each(resources, (function(index, resource) {\r\n            if (resource.useColorAsDefault) {\r\n                result = resource;\r\n                return false\r\n            }\r\n        }));\r\n        if (!result) {\r\n            if (Array.isArray(groups) && groups.length) {\r\n                resources = this.getResourcesByFields(groups)\r\n            }\r\n            result = resources[resources.length - 1]\r\n        }\r\n        return result\r\n    }\r\n    createResourcesTree(groups) {\r\n        var leafIndex = 0;\r\n        return function make(group, groupIndex, result, parent) {\r\n            result = result || [];\r\n            for (var i = 0; i < group.items.length; i++) {\r\n                var currentGroupItem = group.items[i];\r\n                var resultItem = {\r\n                    name: group.name,\r\n                    value: currentGroupItem.id,\r\n                    title: currentGroupItem.text,\r\n                    data: group.data && group.data[i],\r\n                    children: [],\r\n                    parent: parent ? parent : null\r\n                };\r\n                result.push(resultItem);\r\n                var nextGroupIndex = groupIndex + 1;\r\n                if (groups[nextGroupIndex]) {\r\n                    make.call(this, groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem)\r\n                }\r\n                if (!resultItem.children.length) {\r\n                    resultItem.leafIndex = leafIndex;\r\n                    leafIndex++\r\n                }\r\n            }\r\n            return result\r\n        }.call(this, groups[0], 0)\r\n    }\r\n    _hasGroupItem(appointmentResources, groupName, itemValue) {\r\n        var group = this.getDataAccessors(groupName, \"getter\")(appointmentResources);\r\n        if (group) {\r\n            if (inArray(itemValue, group) > -1) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _createPlainResourcesByAppointmentAsync(rawAppointment) {\r\n        return this.agendaProcessor.createListAsync(rawAppointment)\r\n    }\r\n    _getResourceDataByField(fieldName) {\r\n        var loadedResources = this.getResourcesData();\r\n        var currentResourceData = [];\r\n        for (var i = 0, resourceCount = loadedResources.length; i < resourceCount; i++) {\r\n            if (loadedResources[i].name === fieldName) {\r\n                currentResourceData = loadedResources[i].data;\r\n                break\r\n            }\r\n        }\r\n        return currentResourceData\r\n    }\r\n    getResourceTreeLeaves(tree, appointmentResources, result) {\r\n        result = result || [];\r\n        for (var i = 0; i < tree.length; i++) {\r\n            if (!this._hasGroupItem(appointmentResources, tree[i].name, tree[i].value)) {\r\n                continue\r\n            }\r\n            if (isDefined(tree[i].leafIndex)) {\r\n                result.push(tree[i].leafIndex)\r\n            }\r\n            if (tree[i].children) {\r\n                this.getResourceTreeLeaves(tree[i].children, appointmentResources, result)\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    groupAppointmentsByResources(appointments, resources) {\r\n        var tree = this.createResourcesTree(resources);\r\n        var result = {};\r\n        each(appointments, function(_, appointment) {\r\n            var appointmentResources = this.getResourcesFromItem(appointment);\r\n            var treeLeaves = this.getResourceTreeLeaves(tree, appointmentResources);\r\n            for (var i = 0; i < treeLeaves.length; i++) {\r\n                if (!result[treeLeaves[i]]) {\r\n                    result[treeLeaves[i]] = []\r\n                }\r\n                result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true))\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    reduceResourcesTree(tree, existingAppointments, _result) {\r\n        _result = _result ? _result.children : [];\r\n        var that = this;\r\n        tree.forEach((function(node, index) {\r\n            var ok = false;\r\n            var resourceName = node.name;\r\n            var resourceValue = node.value;\r\n            var resourceTitle = node.title;\r\n            var resourceData = node.data;\r\n            var resourceGetter = that.getDataAccessors(resourceName, \"getter\");\r\n            existingAppointments.forEach((function(appointment) {\r\n                if (!ok) {\r\n                    var resourceFromAppointment = resourceGetter(appointment);\r\n                    if (Array.isArray(resourceFromAppointment)) {\r\n                        if (resourceFromAppointment.indexOf(resourceValue) > -1) {\r\n                            _result.push({\r\n                                name: resourceName,\r\n                                value: resourceValue,\r\n                                title: resourceTitle,\r\n                                data: resourceData,\r\n                                children: []\r\n                            });\r\n                            ok = true\r\n                        }\r\n                    } else if (resourceFromAppointment === resourceValue) {\r\n                        _result.push({\r\n                            name: resourceName,\r\n                            value: resourceValue,\r\n                            title: resourceTitle,\r\n                            data: resourceData,\r\n                            children: []\r\n                        });\r\n                        ok = true\r\n                    }\r\n                }\r\n            }));\r\n            if (ok && node.children && node.children.length) {\r\n                that.reduceResourcesTree(node.children, existingAppointments, _result[index])\r\n            }\r\n        }));\r\n        return _result\r\n    }\r\n    getResourcesDataByGroups(groups) {\r\n        var resourcesData = this.getResourcesData();\r\n        if (!groups || !groups.length) {\r\n            return resourcesData\r\n        }\r\n        var fieldNames = {};\r\n        var currentResourcesData = [];\r\n        groups.forEach(group => {\r\n            each(group, (name, value) => fieldNames[name] = value)\r\n        });\r\n        var resourceData = resourcesData.filter(_ref => {\r\n            var {\r\n                name: name\r\n            } = _ref;\r\n            return isDefined(fieldNames[name])\r\n        });\r\n        resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\r\n        currentResourcesData.forEach(currentResource => {\r\n            var {\r\n                items: items,\r\n                data: data,\r\n                name: resourceName\r\n            } = currentResource;\r\n            var resource = this.getResourceByField(resourceName);\r\n            var valueExpr = getValueExpr(resource);\r\n            var filteredItems = [];\r\n            var filteredData = [];\r\n            groups.filter(group => isDefined(group[resourceName])).forEach(group => {\r\n                each(group, (name, value) => {\r\n                    if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\r\n                        var currentItems = items.filter(item => item.id === value);\r\n                        var currentData = data.filter(item => item[valueExpr] === value);\r\n                        filteredItems.push(...currentItems);\r\n                        filteredData.push(...currentData)\r\n                    }\r\n                })\r\n            });\r\n            currentResource.items = filteredItems;\r\n            currentResource.data = filteredData\r\n        });\r\n        return currentResourcesData\r\n    }\r\n    _isValidResourcesForGrouping(resources) {\r\n        var result = resources.reduce((isValidResources, currentResource) => isValidResources && currentResource.items.length > 0, true);\r\n        return result\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}