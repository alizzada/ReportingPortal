{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/header/header.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport { isObject, isDefined } from \"../../../core/utils/type\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { inArray } from \"../../../core/utils/array\";\nimport { camelize } from \"../../../core/utils/inflector\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport Widget from \"../../widget/ui.widget\";\nimport { Navigator } from \"./navigator\";\nimport DropDownMenu from \"../../drop_down_menu\";\nimport Tabs from \"../../tabs\";\nimport { TABS_EXPANDED_CLASS } from \"../../tabs/constants\";\nimport errors from \"../../../core/errors\";\nimport messageLocalization from \"../../../localization/message\";\nvar COMPONENT_CLASS = \"dx-scheduler-header\";\nvar VIEW_SWITCHER_CLASS = \"dx-scheduler-view-switcher\";\nvar VIEW_SWITCHER_LABEL_CLASS = \"dx-scheduler-view-switcher-label\";\nvar STEP_MAP = {\n  day: \"day\",\n  week: \"week\",\n  workWeek: \"workWeek\",\n  month: \"month\",\n  timelineDay: \"day\",\n  timelineWeek: \"week\",\n  timelineWorkWeek: \"workWeek\",\n  timelineMonth: \"month\",\n  agenda: \"agenda\"\n};\nvar VIEWS = [\"day\", \"week\", \"workWeek\", \"month\", \"timelineDay\", \"timelineWeek\", \"timelineWorkWeek\", \"timelineMonth\", \"agenda\"];\nexport var Header = /*#__PURE__*/function (_Widget) {\n  _inherits(Header, _Widget);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Header, [{\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Header.prototype), \"_getDefaultOptions\", this).call(this), {\n        views: [],\n        isAdaptive: false,\n        intervalCount: 1,\n        currentView: \"day\",\n        firstDayOfWeek: void 0,\n        currentDate: new Date(),\n        min: void 0,\n        max: void 0,\n        useDropDownViewSwitcher: false,\n        _dropDownButtonIcon: \"overlay\"\n      });\n    }\n  }, {\n    key: \"_setOptionsByReference\",\n    value: function _setOptionsByReference() {\n      _get(_getPrototypeOf(Header.prototype), \"_setOptionsByReference\", this).call(this);\n\n      extend(this._optionsByReference, {\n        currentView: true\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var value = args.value;\n\n      switch (args.name) {\n        case \"views\":\n          this._validateViews();\n\n          this._viewSwitcher.option({\n            items: value,\n            selectedItem: this.option(\"currentView\")\n          });\n\n          break;\n\n        case \"customizeDateNavigatorText\":\n          this._navigator.option(args.name, value);\n\n          break;\n\n        case \"currentView\":\n          this._viewSwitcher.option(\"selectedItem\", value);\n\n          this._navigator.option(\"step\", STEP_MAP[this._getCurrentViewType()]);\n\n          this._changeViewSwitcherLabelText();\n\n          break;\n\n        case \"currentDate\":\n          this._navigator.option(\"date\", value);\n\n          break;\n\n        case \"displayedDate\":\n          this._navigator.option(\"displayedDate\", value);\n\n          break;\n\n        case \"min\":\n        case \"max\":\n        case \"firstDayOfWeek\":\n        case \"intervalCount\":\n          this._navigator.option(args.name, value);\n\n          break;\n\n        case \"tabIndex\":\n        case \"focusStateEnabled\":\n          this._viewSwitcher.option(args.name, value);\n\n          this._navigator.option(args.name, value);\n\n          _get(_getPrototypeOf(Header.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        case \"useDropDownViewSwitcher\":\n          this._refreshViewSwitcher();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(Header.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(Header.prototype), \"_init\", this).call(this);\n\n      this.$element().addClass(COMPONENT_CLASS);\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(Header.prototype), \"_initMarkup\", this).call(this);\n\n      this._renderNavigator();\n\n      this._renderViewSwitcher();\n    }\n  }, {\n    key: \"_renderNavigator\",\n    value: function _renderNavigator() {\n      this._navigator = this._createComponent(\"<div>\", Navigator, {\n        min: this.option(\"min\"),\n        max: this.option(\"max\"),\n        intervalCount: this.option(\"intervalCount\"),\n        date: this.option(\"currentDate\"),\n        step: STEP_MAP[this._getCurrentViewType()],\n        firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n        tabIndex: this.option(\"tabIndex\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        observer: this.option(\"observer\"),\n        customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\n        todayDate: this.option(\"todayDate\")\n      });\n\n      this._navigator.$element().appendTo(this.$element());\n    }\n  }, {\n    key: \"_renderViewSwitcher\",\n    value: function _renderViewSwitcher() {\n      this._validateViews();\n\n      var $viewSwitcher = $(\"<div>\").addClass(VIEW_SWITCHER_CLASS).appendTo(this.$element());\n      this.option(\"useDropDownViewSwitcher\") ? this._renderViewSwitcherDropDownMenu($viewSwitcher) : this._renderViewSwitcherTabs($viewSwitcher);\n    }\n  }, {\n    key: \"_validateViews\",\n    value: function _validateViews() {\n      var views = this.option(\"views\");\n      each(views, function (_, view) {\n        var isViewIsObject = isObject(view);\n        var viewType = isViewIsObject && view.type ? view.type : view;\n\n        if (-1 === inArray(viewType, VIEWS)) {\n          errors.log(\"W0008\", viewType);\n        }\n      });\n    }\n  }, {\n    key: \"_getCurrentViewType\",\n    value: function _getCurrentViewType() {\n      var currentView = this.option(\"currentView\");\n      return currentView.type || currentView;\n    }\n  }, {\n    key: \"_renderViewSwitcherTabs\",\n    value: function _renderViewSwitcherTabs($element) {\n      var that = this;\n      $element.addClass(TABS_EXPANDED_CLASS);\n      this._viewSwitcher = this._createComponent($element, Tabs, {\n        selectionRequired: true,\n        scrollingEnabled: true,\n        onSelectionChanged: this._updateCurrentView.bind(this),\n        items: this.option(\"views\"),\n        itemTemplate: function itemTemplate(item) {\n          return $(\"<span>\").addClass(\"dx-tab-text\").text(that._getItemText(item));\n        },\n        selectedItem: this.option(\"currentView\"),\n        tabIndex: this.option(\"tabIndex\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\")\n      });\n    }\n  }, {\n    key: \"_getItemText\",\n    value: function _getItemText(item) {\n      return item.name || messageLocalization.format(\"dxScheduler-switcher\" + camelize(item.type || item, true));\n    }\n  }, {\n    key: \"_refreshViewSwitcher\",\n    value: function _refreshViewSwitcher() {\n      this._viewSwitcher._dispose();\n\n      this._viewSwitcher.$element().remove();\n\n      delete this._viewSwitcher;\n\n      this._removeViewSwitcherLabel();\n\n      this._renderViewSwitcher();\n    }\n  }, {\n    key: \"_removeViewSwitcherLabel\",\n    value: function _removeViewSwitcherLabel() {\n      if (isDefined(this._$viewSwitcherLabel)) {\n        this._$viewSwitcherLabel.detach();\n\n        this._$viewSwitcherLabel.remove();\n\n        delete this._$viewSwitcherLabel;\n      }\n    }\n  }, {\n    key: \"_renderViewSwitcherDropDownMenu\",\n    value: function _renderViewSwitcherDropDownMenu($element) {\n      var that = this;\n      this._$viewSwitcherLabel = $(\"<div>\").addClass(VIEW_SWITCHER_LABEL_CLASS).appendTo(this.$element());\n\n      this._changeViewSwitcherLabelText();\n\n      this._viewSwitcher = this._createComponent($element, DropDownMenu, {\n        onItemClick: this._updateCurrentView.bind(this),\n        buttonIcon: this.option(\"_dropDownButtonIcon\"),\n        items: this.option(\"views\"),\n        selectionMode: this.option(\"isAdaptive\") ? \"single\" : \"none\",\n        selectedItemKeys: [this.option(\"currentView\")],\n        itemTemplate: function itemTemplate(item) {\n          return $(\"<span>\").addClass(\"dx-dropdownmenu-item-text\").text(that._getItemText(item));\n        }\n      });\n    }\n  }, {\n    key: \"_changeViewSwitcherLabelText\",\n    value: function _changeViewSwitcherLabelText() {\n      if (!isDefined(this._$viewSwitcherLabel)) {\n        return;\n      }\n\n      var currentView = this.option(\"currentView\");\n\n      var currentViewText = this._getItemText(currentView);\n\n      this._$viewSwitcherLabel.text(currentViewText);\n    }\n  }, {\n    key: \"_getCurrentViewName\",\n    value: function _getCurrentViewName(currentView) {\n      return isObject(currentView) ? currentView.name || currentView.type : currentView;\n    }\n  }, {\n    key: \"_updateCurrentView\",\n    value: function _updateCurrentView(e) {\n      var selectedItem = e.itemData || e.component.option(\"selectedItem\");\n\n      var viewName = this._getCurrentViewName(selectedItem);\n\n      this.notifyObserver(\"currentViewUpdated\", viewName);\n    }\n  }, {\n    key: \"_renderFocusTarget\",\n    value: function _renderFocusTarget() {}\n  }, {\n    key: \"notifyObserver\",\n    value: function notifyObserver(subject, args) {\n      var observer = this.option(\"observer\");\n\n      if (observer) {\n        observer.fire(subject, args);\n      }\n    }\n  }, {\n    key: \"invoke\",\n    value: function invoke() {\n      var observer = this.option(\"observer\");\n\n      if (observer) {\n        return observer.fire.apply(observer, arguments);\n      }\n    }\n  }]);\n\n  return Header;\n}(Widget);\nregisterComponent(\"dxSchedulerHeader\", Header);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/header/header.js"],"names":["$","isObject","isDefined","extend","each","inArray","camelize","registerComponent","Widget","Navigator","DropDownMenu","Tabs","TABS_EXPANDED_CLASS","errors","messageLocalization","COMPONENT_CLASS","VIEW_SWITCHER_CLASS","VIEW_SWITCHER_LABEL_CLASS","STEP_MAP","day","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","VIEWS","Header","views","isAdaptive","intervalCount","currentView","firstDayOfWeek","currentDate","Date","min","max","useDropDownViewSwitcher","_dropDownButtonIcon","_optionsByReference","args","value","name","_validateViews","_viewSwitcher","option","items","selectedItem","_navigator","_getCurrentViewType","_changeViewSwitcherLabelText","_refreshViewSwitcher","$element","addClass","_renderNavigator","_renderViewSwitcher","_createComponent","date","step","tabIndex","focusStateEnabled","observer","customizeDateNavigatorText","todayDate","appendTo","$viewSwitcher","_renderViewSwitcherDropDownMenu","_renderViewSwitcherTabs","_","view","isViewIsObject","viewType","type","log","that","selectionRequired","scrollingEnabled","onSelectionChanged","_updateCurrentView","bind","itemTemplate","item","text","_getItemText","format","_dispose","remove","_removeViewSwitcherLabel","_$viewSwitcherLabel","detach","onItemClick","buttonIcon","selectionMode","selectedItemKeys","currentViewText","e","itemData","component","viewName","_getCurrentViewName","notifyObserver","subject","fire","apply","arguments"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/header/header.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    isObject,\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    inArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    camelize\r\n} from \"../../../core/utils/inflector\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport Widget from \"../../widget/ui.widget\";\r\nimport {\r\n    Navigator\r\n} from \"./navigator\";\r\nimport DropDownMenu from \"../../drop_down_menu\";\r\nimport Tabs from \"../../tabs\";\r\nimport {\r\n    TABS_EXPANDED_CLASS\r\n} from \"../../tabs/constants\";\r\nimport errors from \"../../../core/errors\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-header\";\r\nvar VIEW_SWITCHER_CLASS = \"dx-scheduler-view-switcher\";\r\nvar VIEW_SWITCHER_LABEL_CLASS = \"dx-scheduler-view-switcher-label\";\r\nvar STEP_MAP = {\r\n    day: \"day\",\r\n    week: \"week\",\r\n    workWeek: \"workWeek\",\r\n    month: \"month\",\r\n    timelineDay: \"day\",\r\n    timelineWeek: \"week\",\r\n    timelineWorkWeek: \"workWeek\",\r\n    timelineMonth: \"month\",\r\n    agenda: \"agenda\"\r\n};\r\nvar VIEWS = [\"day\", \"week\", \"workWeek\", \"month\", \"timelineDay\", \"timelineWeek\", \"timelineWorkWeek\", \"timelineMonth\", \"agenda\"];\r\nexport class Header extends Widget {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            views: [],\r\n            isAdaptive: false,\r\n            intervalCount: 1,\r\n            currentView: \"day\",\r\n            firstDayOfWeek: void 0,\r\n            currentDate: new Date,\r\n            min: void 0,\r\n            max: void 0,\r\n            useDropDownViewSwitcher: false,\r\n            _dropDownButtonIcon: \"overlay\"\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            currentView: true\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"views\":\r\n                this._validateViews();\r\n                this._viewSwitcher.option({\r\n                    items: value,\r\n                    selectedItem: this.option(\"currentView\")\r\n                });\r\n                break;\r\n            case \"customizeDateNavigatorText\":\r\n                this._navigator.option(args.name, value);\r\n                break;\r\n            case \"currentView\":\r\n                this._viewSwitcher.option(\"selectedItem\", value);\r\n                this._navigator.option(\"step\", STEP_MAP[this._getCurrentViewType()]);\r\n                this._changeViewSwitcherLabelText();\r\n                break;\r\n            case \"currentDate\":\r\n                this._navigator.option(\"date\", value);\r\n                break;\r\n            case \"displayedDate\":\r\n                this._navigator.option(\"displayedDate\", value);\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n            case \"firstDayOfWeek\":\r\n            case \"intervalCount\":\r\n                this._navigator.option(args.name, value);\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._viewSwitcher.option(args.name, value);\r\n                this._navigator.option(args.name, value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"useDropDownViewSwitcher\":\r\n                this._refreshViewSwitcher();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS)\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._renderNavigator();\r\n        this._renderViewSwitcher()\r\n    }\r\n    _renderNavigator() {\r\n        this._navigator = this._createComponent(\"<div>\", Navigator, {\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            intervalCount: this.option(\"intervalCount\"),\r\n            date: this.option(\"currentDate\"),\r\n            step: STEP_MAP[this._getCurrentViewType()],\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            observer: this.option(\"observer\"),\r\n            customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\r\n            todayDate: this.option(\"todayDate\")\r\n        });\r\n        this._navigator.$element().appendTo(this.$element())\r\n    }\r\n    _renderViewSwitcher() {\r\n        this._validateViews();\r\n        var $viewSwitcher = $(\"<div>\").addClass(VIEW_SWITCHER_CLASS).appendTo(this.$element());\r\n        this.option(\"useDropDownViewSwitcher\") ? this._renderViewSwitcherDropDownMenu($viewSwitcher) : this._renderViewSwitcherTabs($viewSwitcher)\r\n    }\r\n    _validateViews() {\r\n        var views = this.option(\"views\");\r\n        each(views, (function(_, view) {\r\n            var isViewIsObject = isObject(view);\r\n            var viewType = isViewIsObject && view.type ? view.type : view;\r\n            if (-1 === inArray(viewType, VIEWS)) {\r\n                errors.log(\"W0008\", viewType)\r\n            }\r\n        }))\r\n    }\r\n    _getCurrentViewType() {\r\n        var currentView = this.option(\"currentView\");\r\n        return currentView.type || currentView\r\n    }\r\n    _renderViewSwitcherTabs($element) {\r\n        var that = this;\r\n        $element.addClass(TABS_EXPANDED_CLASS);\r\n        this._viewSwitcher = this._createComponent($element, Tabs, {\r\n            selectionRequired: true,\r\n            scrollingEnabled: true,\r\n            onSelectionChanged: this._updateCurrentView.bind(this),\r\n            items: this.option(\"views\"),\r\n            itemTemplate: function(item) {\r\n                return $(\"<span>\").addClass(\"dx-tab-text\").text(that._getItemText(item))\r\n            },\r\n            selectedItem: this.option(\"currentView\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\")\r\n        })\r\n    }\r\n    _getItemText(item) {\r\n        return item.name || messageLocalization.format(\"dxScheduler-switcher\" + camelize(item.type || item, true))\r\n    }\r\n    _refreshViewSwitcher() {\r\n        this._viewSwitcher._dispose();\r\n        this._viewSwitcher.$element().remove();\r\n        delete this._viewSwitcher;\r\n        this._removeViewSwitcherLabel();\r\n        this._renderViewSwitcher()\r\n    }\r\n    _removeViewSwitcherLabel() {\r\n        if (isDefined(this._$viewSwitcherLabel)) {\r\n            this._$viewSwitcherLabel.detach();\r\n            this._$viewSwitcherLabel.remove();\r\n            delete this._$viewSwitcherLabel\r\n        }\r\n    }\r\n    _renderViewSwitcherDropDownMenu($element) {\r\n        var that = this;\r\n        this._$viewSwitcherLabel = $(\"<div>\").addClass(VIEW_SWITCHER_LABEL_CLASS).appendTo(this.$element());\r\n        this._changeViewSwitcherLabelText();\r\n        this._viewSwitcher = this._createComponent($element, DropDownMenu, {\r\n            onItemClick: this._updateCurrentView.bind(this),\r\n            buttonIcon: this.option(\"_dropDownButtonIcon\"),\r\n            items: this.option(\"views\"),\r\n            selectionMode: this.option(\"isAdaptive\") ? \"single\" : \"none\",\r\n            selectedItemKeys: [this.option(\"currentView\")],\r\n            itemTemplate: function(item) {\r\n                return $(\"<span>\").addClass(\"dx-dropdownmenu-item-text\").text(that._getItemText(item))\r\n            }\r\n        })\r\n    }\r\n    _changeViewSwitcherLabelText() {\r\n        if (!isDefined(this._$viewSwitcherLabel)) {\r\n            return\r\n        }\r\n        var currentView = this.option(\"currentView\");\r\n        var currentViewText = this._getItemText(currentView);\r\n        this._$viewSwitcherLabel.text(currentViewText)\r\n    }\r\n    _getCurrentViewName(currentView) {\r\n        return isObject(currentView) ? currentView.name || currentView.type : currentView\r\n    }\r\n    _updateCurrentView(e) {\r\n        var selectedItem = e.itemData || e.component.option(\"selectedItem\");\r\n        var viewName = this._getCurrentViewName(selectedItem);\r\n        this.notifyObserver(\"currentViewUpdated\", viewName)\r\n    }\r\n    _renderFocusTarget() {}\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerHeader\", Header);\r\n"]},"metadata":{},"sourceType":"module"}