{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { data as elementData } from \"../../../core/element_data\";\nimport { locate, move } from \"../../../animation/translator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { normalizeKey } from \"../../../core/utils/common\";\nimport { isDefined, isDeferred, isString, isPlainObject } from \"../../../core/utils/type\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { merge } from \"../../../core/utils/array\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { getRecurrenceProcessor } from \"../recurrence\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport { Appointment, AgendaAppointment } from \"./appointment\";\nimport { addNamespace, isFakeClickEvent } from \"../../../events/utils/index\";\nimport { name as dblclickEvent } from \"../../../events/double_click\";\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\nimport timeZoneUtils from \"../utils.timeZone.js\";\nimport { APPOINTMENT_ITEM_CLASS, APPOINTMENT_DRAG_SOURCE_CLASS, APPOINTMENT_SETTINGS_KEY } from \"../constants\";\nimport { createAgendaAppointmentLayout, createAppointmentLayout } from \"./appointmentLayout\";\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar SchedulerAppointments = /*#__PURE__*/function (_CollectionWidget) {\n  _inherits(SchedulerAppointments, _CollectionWidget);\n\n  var _super = _createSuper(SchedulerAppointments);\n\n  function SchedulerAppointments(element, options) {\n    var _this;\n\n    _classCallCheck(this, SchedulerAppointments);\n\n    _this = _super.call(this, element, options);\n    _this._virtualAppointments = {};\n    return _this;\n  }\n\n  _createClass(SchedulerAppointments, [{\n    key: \"isAgendaView\",\n    get: function get() {\n      return this.invoke(\"isCurrentViewAgenda\");\n    }\n  }, {\n    key: \"isVirtualScrolling\",\n    get: function get() {\n      return this.invoke(\"isVirtualScrolling\");\n    }\n  }, {\n    key: \"resourceManager\",\n    get: function get() {\n      return this.option(\"observer\")._resourcesManager;\n    }\n  }, {\n    key: \"notifyObserver\",\n    value: function notifyObserver(subject, args) {\n      var observer = this.option(\"observer\");\n\n      if (observer) {\n        observer.fire(subject, args);\n      }\n    }\n  }, {\n    key: \"invoke\",\n    value: function invoke() {\n      var observer = this.option(\"observer\");\n\n      if (observer) {\n        return observer.fire.apply(observer, arguments);\n      }\n    }\n  }, {\n    key: \"_supportedKeys\",\n    value: function _supportedKeys() {\n      var parent = _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_supportedKeys\", this).call(this);\n\n      return extend(parent, {\n        escape: function () {\n          this.moveAppointmentBack();\n          this._escPressed = true;\n        }.bind(this),\n        del: function (e) {\n          if (this.option(\"allowDelete\")) {\n            e.preventDefault();\n\n            var data = this._getItemData(e.target);\n\n            this.notifyObserver(\"onDeleteButtonPress\", {\n              data: data,\n              target: e.target\n            });\n          }\n        }.bind(this),\n        tab: function tab(e) {\n          var appointments = this._getAccessAppointments();\n\n          var focusedAppointment = appointments.filter(\".dx-state-focused\");\n          var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\n          var lastIndex = appointments.length - 1;\n\n          if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\n            e.preventDefault();\n            e.shiftKey ? index-- : index++;\n\n            var $nextAppointment = this._getAppointmentByIndex(index);\n\n            this._resetTabIndex($nextAppointment);\n\n            eventsEngine.trigger($nextAppointment, \"focus\");\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_getAppointmentByIndex\",\n    value: function _getAppointmentByIndex(sortedIndex) {\n      var appointments = this._getAccessAppointments();\n\n      return appointments.filter(function (_, $item) {\n        return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex;\n      }).eq(0);\n    }\n  }, {\n    key: \"_getAccessAppointments\",\n    value: function _getAccessAppointments() {\n      return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\");\n    }\n  }, {\n    key: \"_resetTabIndex\",\n    value: function _resetTabIndex($appointment) {\n      this._focusTarget().attr(\"tabIndex\", -1);\n\n      $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"));\n    }\n  }, {\n    key: \"_moveFocus\",\n    value: function _moveFocus() {}\n  }, {\n    key: \"_focusTarget\",\n    value: function _focusTarget() {\n      return this._itemElements();\n    }\n  }, {\n    key: \"_renderFocusTarget\",\n    value: function _renderFocusTarget() {\n      var $appointment = this._getAppointmentByIndex(0);\n\n      this._resetTabIndex($appointment);\n    }\n  }, {\n    key: \"_focusInHandler\",\n    value: function _focusInHandler(e) {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_focusInHandler\", this).call(this, e);\n\n      this._$currentAppointment = $(e.target);\n      this.option(\"focusedElement\", getPublicElement($(e.target)));\n    }\n  }, {\n    key: \"_focusOutHandler\",\n    value: function _focusOutHandler(e) {\n      var $appointment = this._getAppointmentByIndex(0);\n\n      this.option(\"focusedElement\", getPublicElement($appointment));\n\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_focusOutHandler\", this).call(this, e);\n    }\n  }, {\n    key: \"_eventBindingTarget\",\n    value: function _eventBindingTarget() {\n      return this._itemContainer();\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(SchedulerAppointments.prototype), \"_getDefaultOptions\", this).call(this), {\n        noDataText: null,\n        activeStateEnabled: true,\n        hoverStateEnabled: true,\n        tabIndex: 0,\n        fixedContainer: null,\n        allDayContainer: null,\n        allowDrag: true,\n        allowResize: true,\n        allowAllDayResize: true,\n        onAppointmentDblClick: null,\n        _collectorOffset: 0\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"items\":\n          this._cleanFocusState();\n\n          this._clearDropDownItems();\n\n          this._clearDropDownItemsElements();\n\n          this._repaintAppointments(args.value);\n\n          this._renderDropDownAppointments();\n\n          this._attachAppointmentsEvents();\n\n          break;\n\n        case \"fixedContainer\":\n        case \"allDayContainer\":\n        case \"onAppointmentDblClick\":\n          break;\n\n        case \"allowDrag\":\n        case \"allowResize\":\n        case \"allowAllDayResize\":\n          this._invalidate();\n\n          break;\n\n        case \"focusedElement\":\n          this._resetTabIndex($(args.value));\n\n          _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        case \"allowDelete\":\n          break;\n\n        case \"focusStateEnabled\":\n          this._clearDropDownItemsElements();\n\n          this._renderDropDownAppointments();\n\n          _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_isAllDayAppointment\",\n    value: function _isAllDayAppointment(appointment) {\n      return appointment.settings.length && appointment.settings[0].allDay || false;\n    }\n  }, {\n    key: \"_isRepaintAppointment\",\n    value: function _isRepaintAppointment(appointment) {\n      return !isDefined(appointment.needRepaint) || true === appointment.needRepaint;\n    }\n  }, {\n    key: \"_isRepaintAll\",\n    value: function _isRepaintAll(appointments) {\n      if (this.isAgendaView) {\n        return true;\n      }\n\n      for (var i = 0; i < appointments.length; i++) {\n        if (!this._isRepaintAppointment(appointments[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_applyFragment\",\n    value: function _applyFragment(fragment, allDay) {\n      if (fragment.children().length > 0) {\n        this._getAppointmentContainer(allDay).append(fragment);\n      }\n    }\n  }, {\n    key: \"_onEachAppointment\",\n    value: function _onEachAppointment(appointment, index, container, isRepaintAll) {\n      var _this2 = this;\n\n      if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\n        this._clearItem(appointment);\n      } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\n        (function () {\n          appointment.needRepaint = false;\n\n          _this2._clearItem(appointment);\n\n          _this2._renderItem(index, appointment, container);\n        })();\n      }\n    }\n  }, {\n    key: \"_repaintAppointments\",\n    value: function _repaintAppointments(appointments) {\n      var _this3 = this;\n\n      this._renderByFragments(function ($commonFragment, $allDayFragment) {\n        var isRepaintAll = _this3._isRepaintAll(appointments);\n\n        if (isRepaintAll) {\n          _this3._getAppointmentContainer(true).html(\"\");\n\n          _this3._getAppointmentContainer(false).html(\"\");\n        }\n\n        !appointments.length && _this3._cleanItemContainer();\n        appointments.forEach(function (appointment, index) {\n          var container = _this3._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\n\n          _this3._onEachAppointment(appointment, index, container, isRepaintAll);\n        });\n      });\n    }\n  }, {\n    key: \"_renderByFragments\",\n    value: function _renderByFragments(renderFunction) {\n      if (this.isVirtualScrolling) {\n        var $commonFragment = $(domAdapter.createDocumentFragment());\n        var $allDayFragment = $(domAdapter.createDocumentFragment());\n        renderFunction($commonFragment, $allDayFragment);\n\n        this._applyFragment($commonFragment, false);\n\n        this._applyFragment($allDayFragment, true);\n      } else {\n        renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true));\n      }\n    }\n  }, {\n    key: \"_attachAppointmentsEvents\",\n    value: function _attachAppointmentsEvents() {\n      this._attachClickEvent();\n\n      this._attachHoldEvent();\n\n      this._attachContextMenuEvent();\n\n      this._attachAppointmentDblClick();\n\n      this._renderFocusState();\n\n      this._attachFeedbackEvents();\n\n      this._attachHoverEvents();\n    }\n  }, {\n    key: \"_clearItem\",\n    value: function _clearItem(item) {\n      var $items = this._findItemElementByItem(item.itemData);\n\n      if (!$items.length) {\n        return;\n      }\n\n      each($items, function (_, $item) {\n        $item.detach();\n        $item.remove();\n      });\n    }\n  }, {\n    key: \"_clearDropDownItems\",\n    value: function _clearDropDownItems() {\n      this._virtualAppointments = {};\n    }\n  }, {\n    key: \"_clearDropDownItemsElements\",\n    value: function _clearDropDownItemsElements() {\n      this.invoke(\"clearCompactAppointments\");\n    }\n  }, {\n    key: \"_findItemElementByItem\",\n    value: function _findItemElementByItem(item) {\n      var result = [];\n      var that = this;\n      this.itemElements().each(function () {\n        var $item = $(this);\n\n        if ($item.data(that._itemDataKey()) === item) {\n          result.push($item);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"_itemClass\",\n    value: function _itemClass() {\n      return APPOINTMENT_ITEM_CLASS;\n    }\n  }, {\n    key: \"_itemContainer\",\n    value: function _itemContainer() {\n      var $container = _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_itemContainer\", this).call(this);\n\n      var $result = $container;\n      var $allDayContainer = this.option(\"allDayContainer\");\n\n      if ($allDayContainer) {\n        $result = $container.add($allDayContainer);\n      }\n\n      return $result;\n    }\n  }, {\n    key: \"_cleanItemContainer\",\n    value: function _cleanItemContainer() {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_cleanItemContainer\", this).call(this);\n\n      var $allDayContainer = this.option(\"allDayContainer\");\n\n      if ($allDayContainer) {\n        $allDayContainer.empty();\n      }\n\n      this._virtualAppointments = {};\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_clean\", this).call(this);\n\n      delete this._$currentAppointment;\n      delete this._initialSize;\n      delete this._initialCoordinates;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_init\", this).call(this);\n\n      this.$element().addClass(COMPONENT_CLASS);\n      this._preventSingleAppointmentClick = false;\n    }\n  }, {\n    key: \"_renderAppointmentTemplate\",\n    value: function _renderAppointmentTemplate($container, appointment, model) {\n      var config = {\n        isAllDay: appointment.allDay,\n        isRecurrence: appointment.recurrenceRule,\n        html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\n      };\n      var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\n      $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config));\n    }\n  }, {\n    key: \"_executeItemRenderAction\",\n    value: function _executeItemRenderAction(index, itemData, itemElement) {\n      var action = this._getItemRenderAction();\n\n      if (action) {\n        action(this.invoke(\"mapAppointmentFields\", {\n          itemData: itemData,\n          itemElement: itemElement\n        }));\n      }\n\n      delete this._currentAppointmentSettings;\n    }\n  }, {\n    key: \"_itemClickHandler\",\n    value: function _itemClickHandler(e) {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_itemClickHandler\", this).call(this, e, {}, {\n        afterExecute: function (e) {\n          this._processItemClick(e.args[0].event);\n        }.bind(this)\n      });\n    }\n  }, {\n    key: \"_processItemClick\",\n    value: function _processItemClick(e) {\n      var $target = $(e.currentTarget);\n\n      var data = this._getItemData($target);\n\n      if (\"keydown\" === e.type || isFakeClickEvent(e)) {\n        this.notifyObserver(\"showEditAppointmentPopup\", {\n          data: data,\n          target: $target\n        });\n        return;\n      }\n\n      this._appointmentClickTimeout = setTimeout(function () {\n        if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\n          this.notifyObserver(\"showAppointmentTooltip\", {\n            data: data,\n            target: $target\n          });\n        }\n\n        this._preventSingleAppointmentClick = false;\n      }.bind(this), 300);\n    }\n  }, {\n    key: \"_extendActionArgs\",\n    value: function _extendActionArgs($itemElement) {\n      var args = _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_extendActionArgs\", this).call(this, $itemElement);\n\n      return this.invoke(\"mapAppointmentFields\", args);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_render\", this).call(this);\n\n      this._attachAppointmentDblClick();\n    }\n  }, {\n    key: \"_attachAppointmentDblClick\",\n    value: function _attachAppointmentDblClick() {\n      var that = this;\n\n      var itemSelector = that._itemSelector();\n\n      var itemContainer = this._itemContainer();\n\n      eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\n      eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, function (e) {\n        that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\n          afterExecute: function afterExecute(e) {\n            that._dblClickHandler(e.args[0].event);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_dblClickHandler\",\n    value: function _dblClickHandler(e) {\n      var $targetAppointment = $(e.currentTarget);\n\n      var appointmentData = this._getItemData($targetAppointment);\n\n      clearTimeout(this._appointmentClickTimeout);\n      this._preventSingleAppointmentClick = true;\n      this.notifyObserver(\"showEditAppointmentPopup\", {\n        data: appointmentData,\n        target: $targetAppointment\n      });\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(index, item, container) {\n      var itemData = item.itemData;\n      var $items = [];\n\n      for (var i = 0; i < item.settings.length; i++) {\n        var setting = item.settings[i];\n        this._currentAppointmentSettings = setting;\n\n        var $item = _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_renderItem\", this).call(this, index, itemData, container);\n\n        $item.data(APPOINTMENT_SETTINGS_KEY, setting);\n        $items.push($item);\n      }\n\n      return $items;\n    }\n  }, {\n    key: \"_getItemContent\",\n    value: function _getItemContent($itemFrame) {\n      $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\n\n      var $itemContent = _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_getItemContent\", this).call(this, $itemFrame);\n\n      return $itemContent;\n    }\n  }, {\n    key: \"_createItemByTemplate\",\n    value: function _createItemByTemplate(itemTemplate, renderArgs) {\n      var itemData = renderArgs.itemData,\n          container = renderArgs.container,\n          index = renderArgs.index;\n      return itemTemplate.render({\n        model: {\n          appointmentData: itemData,\n          targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\n        },\n        container: container,\n        index: index\n      });\n    }\n  }, {\n    key: \"_getAppointmentContainer\",\n    value: function _getAppointmentContainer(allDay) {\n      var $allDayContainer = this.option(\"allDayContainer\");\n      var $container = this.itemsContainer().not($allDayContainer);\n\n      if (allDay && $allDayContainer) {\n        $container = $allDayContainer;\n      }\n\n      return $container;\n    }\n  }, {\n    key: \"_postprocessRenderItem\",\n    value: function _postprocessRenderItem(args) {\n      this._renderAppointment(args.itemElement, this._currentAppointmentSettings);\n    }\n  }, {\n    key: \"_renderAppointment\",\n    value: function _renderAppointment(element, settings) {\n      var _this4 = this;\n\n      element.data(APPOINTMENT_SETTINGS_KEY, settings);\n\n      this._applyResourceDataAttr(element);\n\n      var rawAppointment = this._getItemData(element);\n\n      var geometry = this.invoke(\"getAppointmentGeometry\", settings);\n      var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\n      var allowDrag = this.option(\"allowDrag\");\n      var allDay = settings.allDay;\n      this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\n\n      if (settings.virtual) {\n        var deferredColor = this.invoke(\"getAppointmentColor\", {\n          itemData: rawAppointment,\n          groupIndex: settings.groupIndex\n        });\n\n        this._processVirtualAppointment(settings, element, rawAppointment, deferredColor);\n      } else {\n        var _settings$info;\n\n        var config = {\n          data: rawAppointment,\n          groupIndex: settings.groupIndex,\n          observer: this.option(\"observer\"),\n          geometry: geometry,\n          direction: settings.direction || \"vertical\",\n          allowResize: allowResize,\n          allowDrag: allowDrag,\n          allDay: allDay,\n          reduced: settings.appointmentReduced,\n          isCompact: settings.isCompact,\n          startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\n          cellWidth: this.invoke(\"getCellWidth\"),\n          cellHeight: this.invoke(\"getCellHeight\"),\n          resizableConfig: this._resizableConfig(rawAppointment, settings)\n        };\n\n        if (this.isAgendaView) {\n          config.createPlainResourceListAsync = function (rawAppointment) {\n            return _this4.resourceManager._createPlainResourcesByAppointmentAsync(rawAppointment);\n          };\n        }\n\n        this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, config);\n      }\n    }\n  }, {\n    key: \"_applyResourceDataAttr\",\n    value: function _applyResourceDataAttr($appointment) {\n      var resources = this.invoke(\"getResourcesFromItem\", this._getItemData($appointment));\n\n      if (resources) {\n        each(resources, function (name, values) {\n          var attr = \"data-\" + normalizeKey(name.toLowerCase()) + \"-\";\n\n          for (var i = 0; i < values.length; i++) {\n            $appointment.attr(attr + normalizeKey(values[i]), true);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_resizableConfig\",\n    value: function _resizableConfig(appointmentData, itemSetting) {\n      return {\n        area: this._calculateResizableArea(itemSetting, appointmentData),\n        onResizeStart: function (e) {\n          this._$currentAppointment = $(e.element);\n\n          if (this.invoke(\"needRecalculateResizableArea\")) {\n            var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\n\n            e.component.option(\"area\", updatedArea);\n\n            e.component._renderDragOffsets(e.event);\n          }\n\n          this._initialSize = {\n            width: e.width,\n            height: e.height\n          };\n          this._initialCoordinates = locate(this._$currentAppointment);\n        }.bind(this),\n        onResizeEnd: function (e) {\n          if (this._escPressed) {\n            e.event.cancel = true;\n            return;\n          }\n\n          this._resizeEndHandler(e);\n        }.bind(this)\n      };\n    }\n  }, {\n    key: \"_calculateResizableArea\",\n    value: function _calculateResizableArea(itemSetting, appointmentData) {\n      var area = this.$element().closest(\".dx-scrollable-content\");\n      return this.invoke(\"getResizableAppointmentArea\", {\n        coordinates: {\n          left: itemSetting.left,\n          top: 0,\n          groupIndex: itemSetting.groupIndex\n        },\n        allDay: itemSetting.allDay\n      }) || area;\n    }\n  }, {\n    key: \"_resizeEndHandler\",\n    value: function _resizeEndHandler(e) {\n      var scheduler = this.option(\"observer\");\n      var $element = $(e.element);\n\n      var _$element$data = $element.data(\"dxAppointmentSettings\"),\n          info = _$element$data.info;\n\n      var sourceAppointment = this._getItemData($element);\n\n      var modifiedAppointmentAdapter = scheduler.createAppointmentAdapter(sourceAppointment).clone();\n\n      var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\n\n      var endDate = info.appointment.endDate;\n\n      var dateRange = this._getDateRange(e, startDate, endDate);\n\n      modifiedAppointmentAdapter.startDate = new Date(dateRange[0]);\n      modifiedAppointmentAdapter.endDate = new Date(dateRange[1]);\n      this.notifyObserver(\"updateAppointmentAfterResize\", {\n        target: sourceAppointment,\n        data: modifiedAppointmentAdapter.clone({\n          pathTimeZone: \"fromGrid\"\n        }).source(),\n        $appointment: $element\n      });\n    }\n  }, {\n    key: \"_getEndResizeAppointmentStartDate\",\n    value: function _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\n      var scheduler = this.option(\"observer\");\n      var appointmentAdapter = scheduler.createAppointmentAdapter(rawAppointment);\n      var startDate = appointmentInfo.startDate;\n      var recurrenceProcessor = getRecurrenceProcessor();\n      var recurrenceRule = appointmentAdapter.recurrenceRule,\n          startDateTimeZone = appointmentAdapter.startDateTimeZone;\n      var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\n      var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\n\n      if (!e.handles.top && !isRecurrent && !isAllDay) {\n        startDate = scheduler.timeZoneCalculator.createDate(appointmentAdapter.startDate, {\n          appointmentTimeZone: startDateTimeZone,\n          path: \"toGrid\"\n        });\n      }\n\n      return startDate;\n    }\n  }, {\n    key: \"_getDateRange\",\n    value: function _getDateRange(e, startDate, endDate) {\n      var itemData = this._getItemData(e.element);\n\n      var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\n      var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\n      var isStartDateChanged = false;\n      var isAllDay = this.invoke(\"isAllDay\", itemData);\n      var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\n      var startTime;\n      var endTime;\n\n      if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\n        isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left;\n      } else {\n        isStartDateChanged = e.handles.top;\n      }\n\n      if (isStartDateChanged) {\n        startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\n        startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\n        endTime = endDate.getTime();\n      } else {\n        startTime = startDate.getTime();\n        endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\n        endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime);\n      }\n\n      return [startTime, endTime];\n    }\n  }, {\n    key: \"_correctEndDateByDelta\",\n    value: function _correctEndDateByDelta(endDate, deltaTime) {\n      var endDayHour = this.invoke(\"getEndDayHour\");\n      var startDayHour = this.invoke(\"getStartDayHour\");\n      var result = endDate.getTime() + deltaTime;\n      var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n      var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n      var maxDate = new Date(endDate);\n      var minDate = new Date(endDate);\n      minDate.setHours(startDayHour, 0, 0, 0);\n      maxDate.setHours(endDayHour, 0, 0, 0);\n\n      if (result > maxDate.getTime() || result <= minDate.getTime()) {\n        var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\n        var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n        var lastDay = new Date(endDate.setDate(endDate.getDate() + daysCount));\n        lastDay.setHours(startDayHour, 0, 0, 0);\n        result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_correctStartDateByDelta\",\n    value: function _correctStartDateByDelta(startDate, deltaTime) {\n      var endDayHour = this.invoke(\"getEndDayHour\");\n      var startDayHour = this.invoke(\"getStartDayHour\");\n      var result = startDate.getTime() - deltaTime;\n      var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n      var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n      var maxDate = new Date(startDate);\n      var minDate = new Date(startDate);\n      minDate.setHours(startDayHour, 0, 0, 0);\n      maxDate.setHours(endDayHour, 0, 0, 0);\n\n      if (result < minDate.getTime() || result >= maxDate.getTime()) {\n        var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\n        var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n        var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\n        firstDay.setHours(endDayHour, 0, 0, 0);\n        result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_calculateBoundOffset\",\n    value: function _calculateBoundOffset() {\n      return this.invoke(\"getBoundOffset\");\n    }\n  }, {\n    key: \"_processVirtualAppointment\",\n    value: function _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\n      var virtualAppointment = appointmentSetting.virtual;\n      var virtualGroupIndex = virtualAppointment.index;\n\n      if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\n        this._virtualAppointments[virtualGroupIndex] = {\n          coordinates: {\n            top: virtualAppointment.top,\n            left: virtualAppointment.left\n          },\n          items: {\n            data: [],\n            colors: [],\n            settings: []\n          },\n          isAllDay: virtualAppointment.isAllDay ? true : false,\n          buttonColor: color\n        };\n      }\n\n      appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\n\n      this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\n\n      this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\n\n      this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\n\n      $appointment.remove();\n    }\n  }, {\n    key: \"_renderContentImpl\",\n    value: function _renderContentImpl() {\n      _get(_getPrototypeOf(SchedulerAppointments.prototype), \"_renderContentImpl\", this).call(this);\n\n      this._renderDropDownAppointments();\n    }\n  }, {\n    key: \"_renderDropDownAppointments\",\n    value: function _renderDropDownAppointments() {\n      var _this5 = this;\n\n      this._renderByFragments(function ($commonFragment, $allDayFragment) {\n        each(_this5._virtualAppointments, function (groupIndex) {\n          var virtualGroup = this._virtualAppointments[groupIndex];\n          var virtualItems = virtualGroup.items;\n          var virtualCoordinates = virtualGroup.coordinates;\n          var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\n          var left = virtualCoordinates.left;\n          var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\n          var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\n          var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\n          this.notifyObserver(\"renderCompactAppointments\", {\n            $container: $fragment,\n            coordinates: {\n              top: virtualCoordinates.top,\n              left: left + rtlOffset\n            },\n            items: virtualItems,\n            buttonColor: virtualGroup.buttonColor,\n            width: buttonWidth - this.option(\"_collectorOffset\"),\n            height: buttonHeight,\n            onAppointmentClick: this.option(\"onItemClick\"),\n            allowDrag: this.option(\"allowDrag\"),\n            cellWidth: this.invoke(\"getCellWidth\"),\n            isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup),\n            applyOffset: !virtualGroup.isAllDay && this.invoke(\"isApplyCompactAppointmentOffset\")\n          });\n        }.bind(_this5));\n      });\n    }\n  }, {\n    key: \"_isGroupCompact\",\n    value: function _isGroupCompact(virtualGroup) {\n      return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\");\n    }\n  }, {\n    key: \"_sortAppointmentsByStartDate\",\n    value: function _sortAppointmentsByStartDate(appointments) {\n      appointments.sort(function (a, b) {\n        var result = 0;\n        var firstDate = new Date(this.invoke(\"getField\", \"startDate\", a.settings || a)).getTime();\n        var secondDate = new Date(this.invoke(\"getField\", \"startDate\", b.settings || b)).getTime();\n\n        if (firstDate < secondDate) {\n          result = -1;\n        }\n\n        if (firstDate > secondDate) {\n          result = 1;\n        }\n\n        return result;\n      }.bind(this));\n    }\n  }, {\n    key: \"_processRecurrenceAppointment\",\n    value: function _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\n      var recurrenceRule = this.invoke(\"getField\", \"recurrenceRule\", appointment);\n      var result = {\n        parts: [],\n        indexes: []\n      };\n\n      if (recurrenceRule) {\n        var dates = appointment.settings || appointment;\n        var startDate = new Date(this.invoke(\"getField\", \"startDate\", dates));\n        var endDate = new Date(this.invoke(\"getField\", \"endDate\", dates));\n        var appointmentDuration = endDate.getTime() - startDate.getTime();\n        var recurrenceException = this.invoke(\"getField\", \"recurrenceException\", appointment);\n        var startViewDate = this.invoke(\"getStartViewDate\");\n        var endViewDate = this.invoke(\"getEndViewDate\");\n        var recurrentDates = getRecurrenceProcessor().generateDates({\n          rule: recurrenceRule,\n          exception: recurrenceException,\n          start: startDate,\n          end: endDate,\n          min: startViewDate,\n          max: endViewDate\n        });\n        var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\n\n        for (var i = 0; i < recurrentDateCount; i++) {\n          var appointmentPart = extend({}, appointment, true);\n\n          if (recurrentDates[i]) {\n            var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\n\n            this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\n\n            appointmentPart.settings = appointmentSettings;\n          } else {\n            appointmentPart.settings = dates;\n          }\n\n          result.parts.push(appointmentPart);\n\n          if (!skipLongAppointments) {\n            this._processLongAppointment(appointmentPart, result);\n          }\n        }\n\n        result.indexes.push(index);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_processLongAppointment\",\n    value: function _processLongAppointment(appointment, result) {\n      var parts = this.splitAppointmentByDay(appointment);\n      var partCount = parts.length;\n      var endViewDate = this.invoke(\"getEndViewDate\").getTime();\n      var startViewDate = this.invoke(\"getStartViewDate\").getTime();\n      var timeZoneCalculator = this.invoke(\"getTimeZoneCalculator\");\n      result = result || {\n        parts: []\n      };\n\n      if (partCount > 1) {\n        extend(appointment, parts[0]);\n\n        for (var i = 1; i < partCount; i++) {\n          var startDate = this.invoke(\"getField\", \"startDate\", parts[i].settings).getTime();\n          startDate = timeZoneCalculator.createDate(startDate, {\n            path: \"toGrid\"\n          });\n\n          if (startDate < endViewDate && startDate > startViewDate) {\n            result.parts.push(parts[i]);\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_reduceRecurrenceAppointments\",\n    value: function _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\n      each(recurrenceIndexes, function (i, index) {\n        appointments.splice(index - i, 1);\n      });\n    }\n  }, {\n    key: \"_combineAppointments\",\n    value: function _combineAppointments(appointments, additionalAppointments) {\n      if (additionalAppointments.length) {\n        merge(appointments, additionalAppointments);\n      }\n\n      this._sortAppointmentsByStartDate(appointments);\n    }\n  }, {\n    key: \"_applyStartDateToObj\",\n    value: function _applyStartDateToObj(startDate, obj) {\n      this.invoke(\"setField\", \"startDate\", obj, startDate);\n      return obj;\n    }\n  }, {\n    key: \"_applyEndDateToObj\",\n    value: function _applyEndDateToObj(endDate, obj) {\n      this.invoke(\"setField\", \"endDate\", obj, endDate);\n      return obj;\n    }\n  }, {\n    key: \"moveAppointmentBack\",\n    value: function moveAppointmentBack(dragEvent) {\n      var $appointment = this._$currentAppointment;\n      var size = this._initialSize;\n      var coords = this._initialCoordinates;\n\n      if (dragEvent) {\n        this._removeDragSourceClassFromDraggedAppointment();\n\n        if (isDeferred(dragEvent.cancel)) {\n          dragEvent.cancel.resolve(true);\n        } else {\n          dragEvent.cancel = true;\n        }\n      }\n\n      if ($appointment && !dragEvent) {\n        if (coords) {\n          move($appointment, coords);\n          delete this._initialSize;\n        }\n\n        if (size) {\n          $appointment.outerWidth(size.width);\n          $appointment.outerHeight(size.height);\n          delete this._initialCoordinates;\n        }\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this._$currentAppointment) {\n        var focusedElement = getPublicElement(this._$currentAppointment);\n        this.option(\"focusedElement\", focusedElement);\n        eventsEngine.trigger(focusedElement, \"focus\");\n      }\n    }\n  }, {\n    key: \"splitAppointmentByDay\",\n    value: function splitAppointmentByDay(appointment) {\n      var dates = appointment.settings || appointment;\n      var originalStartDate = new Date(this.invoke(\"getField\", \"startDate\", dates));\n      var startDate = dateUtils.makeDate(originalStartDate);\n      var endDate = dateUtils.makeDate(this.invoke(\"getField\", \"endDate\", dates));\n      var maxAllowedDate = this.invoke(\"getEndViewDate\");\n      var startDayHour = this.invoke(\"getStartDayHour\");\n      var endDayHour = this.invoke(\"getEndDayHour\");\n      var appointmentIsLong = this.invoke(\"appointmentTakesSeveralDays\", appointment);\n      var result = [];\n      var timeZoneCalculator = this.invoke(\"getTimeZoneCalculator\");\n      startDate = timeZoneCalculator.createDate(startDate, {\n        path: \"toGrid\"\n      });\n      endDate = timeZoneCalculator.createDate(endDate, {\n        path: \"toGrid\"\n      });\n\n      if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\n        result.push(this._applyStartDateToObj(new Date(startDate), {\n          appointmentData: appointment\n        }));\n        startDate.setDate(startDate.getDate() + 1);\n      }\n\n      while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\n        var currentStartDate = new Date(startDate);\n        var currentEndDate = new Date(startDate);\n\n        this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\n\n        this._checkEndDate(currentEndDate, endDate, endDayHour);\n\n        var appointmentData = deepExtendArraySafe({}, appointment, true);\n        var appointmentSettings = {};\n\n        this._applyStartDateToObj(currentStartDate, appointmentSettings);\n\n        this._applyEndDateToObj(currentEndDate, appointmentSettings);\n\n        appointmentData.settings = appointmentSettings;\n        result.push(appointmentData);\n        startDate = dateUtils.trimTime(startDate);\n        startDate.setDate(startDate.getDate() + 1);\n        startDate.setHours(startDayHour);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_checkStartDate\",\n    value: function _checkStartDate(currentDate, originalDate, startDayHour) {\n      if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\n        currentDate.setHours(startDayHour, 0, 0, 0);\n      } else {\n        currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n      }\n    }\n  }, {\n    key: \"_checkEndDate\",\n    value: function _checkEndDate(currentDate, originalDate, endDayHour) {\n      if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\n        currentDate.setHours(endDayHour, 0, 0, 0);\n      } else {\n        currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n      }\n    }\n  }, {\n    key: \"_removeDragSourceClassFromDraggedAppointment\",\n    value: function _removeDragSourceClassFromDraggedAppointment() {\n      var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\n\n      $appointments.each(function (_, element) {\n        var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\n        appointmentInstance.option(\"isDragSource\", false);\n      });\n    }\n  }, {\n    key: \"_setDragSourceAppointment\",\n    value: function _setDragSourceAppointment(appointment, settings) {\n      var $appointments = this._findItemElementByItem(appointment);\n\n      var _settings$info$source = settings.info.sourceAppointment,\n          startDate = _settings$info$source.startDate,\n          endDate = _settings$info$source.endDate;\n      var groupIndex = settings.groupIndex;\n      $appointments.forEach(function ($item) {\n        var _$item$data = $item.data(APPOINTMENT_SETTINGS_KEY),\n            itemInfo = _$item$data.info,\n            itemGroupIndex = _$item$data.groupIndex;\n\n        var _itemInfo$sourceAppoi = itemInfo.sourceAppointment,\n            itemStartDate = _itemInfo$sourceAppoi.startDate,\n            itemEndDate = _itemInfo$sourceAppoi.endDate;\n        var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\n        var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\n        appointmentInstance.option(\"isDragSource\", isDragSource);\n      });\n    }\n  }]);\n\n  return SchedulerAppointments;\n}(CollectionWidget);\n\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\nexport default SchedulerAppointments;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/appointments/appointmentCollection.js"],"names":["$","domAdapter","eventsEngine","data","elementData","locate","move","dateUtils","normalizeKey","isDefined","isDeferred","isString","isPlainObject","each","deepExtendArraySafe","merge","extend","getPublicElement","getRecurrenceProcessor","registerComponent","Appointment","AgendaAppointment","addNamespace","isFakeClickEvent","name","dblclickEvent","CollectionWidget","timeZoneUtils","APPOINTMENT_ITEM_CLASS","APPOINTMENT_DRAG_SOURCE_CLASS","APPOINTMENT_SETTINGS_KEY","createAgendaAppointmentLayout","createAppointmentLayout","COMPONENT_CLASS","DBLCLICK_EVENT_NAME","toMs","dateToMilliseconds","SchedulerAppointments","element","options","_virtualAppointments","invoke","option","_resourcesManager","subject","args","observer","fire","apply","arguments","parent","escape","moveAppointmentBack","_escPressed","bind","del","e","preventDefault","_getItemData","target","notifyObserver","tab","appointments","_getAccessAppointments","focusedAppointment","filter","index","sortedIndex","lastIndex","length","shiftKey","$nextAppointment","_getAppointmentByIndex","_resetTabIndex","trigger","_","$item","eq","_itemElements","not","$appointment","_focusTarget","attr","_$currentAppointment","_itemContainer","noDataText","activeStateEnabled","hoverStateEnabled","tabIndex","fixedContainer","allDayContainer","allowDrag","allowResize","allowAllDayResize","onAppointmentDblClick","_collectorOffset","_cleanFocusState","_clearDropDownItems","_clearDropDownItemsElements","_repaintAppointments","value","_renderDropDownAppointments","_attachAppointmentsEvents","_invalidate","appointment","settings","allDay","needRepaint","isAgendaView","i","_isRepaintAppointment","fragment","children","_getAppointmentContainer","append","container","isRepaintAll","needRemove","_clearItem","_renderItem","_renderByFragments","$commonFragment","$allDayFragment","_isRepaintAll","html","_cleanItemContainer","forEach","_isAllDayAppointment","_onEachAppointment","renderFunction","isVirtualScrolling","createDocumentFragment","_applyFragment","_attachClickEvent","_attachHoldEvent","_attachContextMenuEvent","_attachAppointmentDblClick","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","item","$items","_findItemElementByItem","itemData","detach","remove","result","that","itemElements","_itemDataKey","push","$container","$result","$allDayContainer","add","empty","_initialSize","_initialCoordinates","$element","addClass","_preventSingleAppointmentClick","model","config","isAllDay","isRecurrence","recurrenceRule","formatText","appointmentData","_currentAppointmentSettings","agendaSettings","targetedAppointmentData","itemElement","action","_getItemRenderAction","afterExecute","_processItemClick","event","$target","currentTarget","type","_appointmentClickTimeout","setTimeout","getBody","contains","$itemElement","itemSelector","_itemSelector","itemContainer","off","on","_itemDXEventHandler","_dblClickHandler","$targetAppointment","clearTimeout","setting","$itemFrame","$itemContent","itemTemplate","renderArgs","render","itemsContainer","_renderAppointment","_applyResourceDataAttr","rawAppointment","geometry","skipResizing","virtual","deferredColor","groupIndex","_processVirtualAppointment","_settings$info","direction","reduced","appointmentReduced","isCompact","startDate","Date","info","cellWidth","cellHeight","resizableConfig","_resizableConfig","createPlainResourceListAsync","resourceManager","_createPlainResourcesByAppointmentAsync","_createComponent","resources","values","toLowerCase","itemSetting","area","_calculateResizableArea","onResizeStart","updatedArea","component","_renderDragOffsets","width","height","onResizeEnd","cancel","_resizeEndHandler","closest","coordinates","left","top","scheduler","sourceAppointment","modifiedAppointmentAdapter","createAppointmentAdapter","clone","_getEndResizeAppointmentStartDate","endDate","dateRange","_getDateRange","pathTimeZone","source","appointmentInfo","appointmentAdapter","recurrenceProcessor","startDateTimeZone","isRecurrent","isValidRecurrenceRule","handles","timeZoneCalculator","createDate","appointmentTimeZone","path","deltaTime","renderingStrategyDirection","isStartDateChanged","needCorrectDates","startTime","endTime","right","_correctStartDateByDelta","getTime","getTimezoneOffsetChangeInMs","_correctEndDateByDelta","endDayHour","startDayHour","visibleDayDuration","daysCount","Math","ceil","floor","maxDate","minDate","setHours","tailOfCurrentDay","tailOfPrevDays","lastDay","setDate","getDate","firstDay","appointmentSetting","color","virtualAppointment","virtualGroupIndex","items","colors","buttonColor","virtualGroup","virtualItems","virtualCoordinates","$fragment","buttonWidth","buttonHeight","rtlOffset","onAppointmentClick","_isGroupCompact","applyOffset","sort","a","b","firstDate","secondDate","skipLongAppointments","parts","indexes","dates","appointmentDuration","recurrenceException","startViewDate","endViewDate","recurrentDates","generateDates","rule","exception","start","end","min","max","recurrentDateCount","appointmentPart","appointmentSettings","_applyStartDateToObj","_applyEndDateToObj","_processLongAppointment","splitAppointmentByDay","partCount","recurrenceIndexes","splice","additionalAppointments","_sortAppointmentsByStartDate","obj","dragEvent","size","coords","_removeDragSourceClassFromDraggedAppointment","resolve","outerWidth","outerHeight","focusedElement","originalStartDate","makeDate","maxAllowedDate","appointmentIsLong","getHours","currentStartDate","currentEndDate","_checkStartDate","_checkEndDate","trimTime","currentDate","originalDate","sameDate","getMinutes","getSeconds","getMilliseconds","$appointments","concat","appointmentInstance","dxSchedulerAppointment","itemInfo","itemGroupIndex","itemStartDate","itemEndDate","isDragSource"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../../core/element_data\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../animation/translator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    normalizeKey\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isDeferred,\r\n    isString,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    merge\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"../recurrence\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    Appointment,\r\n    AgendaAppointment\r\n} from \"./appointment\";\r\nimport {\r\n    addNamespace,\r\n    isFakeClickEvent\r\n} from \"../../../events/utils/index\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../../events/double_click\";\r\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\r\nimport timeZoneUtils from \"../utils.timeZone.js\";\r\nimport {\r\n    APPOINTMENT_ITEM_CLASS,\r\n    APPOINTMENT_DRAG_SOURCE_CLASS,\r\n    APPOINTMENT_SETTINGS_KEY\r\n} from \"../constants\";\r\nimport {\r\n    createAgendaAppointmentLayout,\r\n    createAppointmentLayout\r\n} from \"./appointmentLayout\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\r\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass SchedulerAppointments extends CollectionWidget {\r\n    get isAgendaView() {\r\n        return this.invoke(\"isCurrentViewAgenda\")\r\n    }\r\n    get isVirtualScrolling() {\r\n        return this.invoke(\"isVirtualScrolling\")\r\n    }\r\n    get resourceManager() {\r\n        return this.option(\"observer\")._resourcesManager\r\n    }\r\n    constructor(element, options) {\r\n        super(element, options);\r\n        this._virtualAppointments = {}\r\n    }\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n    _supportedKeys() {\r\n        var parent = super._supportedKeys();\r\n        return extend(parent, {\r\n            escape: function() {\r\n                this.moveAppointmentBack();\r\n                this._escPressed = true\r\n            }.bind(this),\r\n            del: function(e) {\r\n                if (this.option(\"allowDelete\")) {\r\n                    e.preventDefault();\r\n                    var data = this._getItemData(e.target);\r\n                    this.notifyObserver(\"onDeleteButtonPress\", {\r\n                        data: data,\r\n                        target: e.target\r\n                    })\r\n                }\r\n            }.bind(this),\r\n            tab: function(e) {\r\n                var appointments = this._getAccessAppointments();\r\n                var focusedAppointment = appointments.filter(\".dx-state-focused\");\r\n                var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\r\n                var lastIndex = appointments.length - 1;\r\n                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    e.shiftKey ? index-- : index++;\r\n                    var $nextAppointment = this._getAppointmentByIndex(index);\r\n                    this._resetTabIndex($nextAppointment);\r\n                    eventsEngine.trigger($nextAppointment, \"focus\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentByIndex(sortedIndex) {\r\n        var appointments = this._getAccessAppointments();\r\n        return appointments.filter((function(_, $item) {\r\n            return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex\r\n        })).eq(0)\r\n    }\r\n    _getAccessAppointments() {\r\n        return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\")\r\n    }\r\n    _resetTabIndex($appointment) {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"))\r\n    }\r\n    _moveFocus() {}\r\n    _focusTarget() {\r\n        return this._itemElements()\r\n    }\r\n    _renderFocusTarget() {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this._resetTabIndex($appointment)\r\n    }\r\n    _focusInHandler(e) {\r\n        super._focusInHandler(e);\r\n        this._$currentAppointment = $(e.target);\r\n        this.option(\"focusedElement\", getPublicElement($(e.target)))\r\n    }\r\n    _focusOutHandler(e) {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this.option(\"focusedElement\", getPublicElement($appointment));\r\n        super._focusOutHandler(e)\r\n    }\r\n    _eventBindingTarget() {\r\n        return this._itemContainer()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            noDataText: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            tabIndex: 0,\r\n            fixedContainer: null,\r\n            allDayContainer: null,\r\n            allowDrag: true,\r\n            allowResize: true,\r\n            allowAllDayResize: true,\r\n            onAppointmentDblClick: null,\r\n            _collectorOffset: 0\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._cleanFocusState();\r\n                this._clearDropDownItems();\r\n                this._clearDropDownItemsElements();\r\n                this._repaintAppointments(args.value);\r\n                this._renderDropDownAppointments();\r\n                this._attachAppointmentsEvents();\r\n                break;\r\n            case \"fixedContainer\":\r\n            case \"allDayContainer\":\r\n            case \"onAppointmentDblClick\":\r\n                break;\r\n            case \"allowDrag\":\r\n            case \"allowResize\":\r\n            case \"allowAllDayResize\":\r\n                this._invalidate();\r\n                break;\r\n            case \"focusedElement\":\r\n                this._resetTabIndex($(args.value));\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowDelete\":\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this._clearDropDownItemsElements();\r\n                this._renderDropDownAppointments();\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _isAllDayAppointment(appointment) {\r\n        return appointment.settings.length && appointment.settings[0].allDay || false\r\n    }\r\n    _isRepaintAppointment(appointment) {\r\n        return !isDefined(appointment.needRepaint) || true === appointment.needRepaint\r\n    }\r\n    _isRepaintAll(appointments) {\r\n        if (this.isAgendaView) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < appointments.length; i++) {\r\n            if (!this._isRepaintAppointment(appointments[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    _applyFragment(fragment, allDay) {\r\n        if (fragment.children().length > 0) {\r\n            this._getAppointmentContainer(allDay).append(fragment)\r\n        }\r\n    }\r\n    _onEachAppointment(appointment, index, container, isRepaintAll) {\r\n        if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\r\n            this._clearItem(appointment)\r\n        } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\r\n            (() => {\r\n                appointment.needRepaint = false;\r\n                this._clearItem(appointment);\r\n                this._renderItem(index, appointment, container)\r\n            })()\r\n        }\r\n    }\r\n    _repaintAppointments(appointments) {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            var isRepaintAll = this._isRepaintAll(appointments);\r\n            if (isRepaintAll) {\r\n                this._getAppointmentContainer(true).html(\"\");\r\n                this._getAppointmentContainer(false).html(\"\")\r\n            }!appointments.length && this._cleanItemContainer();\r\n            appointments.forEach((appointment, index) => {\r\n                var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\r\n                this._onEachAppointment(appointment, index, container, isRepaintAll)\r\n            })\r\n        })\r\n    }\r\n    _renderByFragments(renderFunction) {\r\n        if (this.isVirtualScrolling) {\r\n            var $commonFragment = $(domAdapter.createDocumentFragment());\r\n            var $allDayFragment = $(domAdapter.createDocumentFragment());\r\n            renderFunction($commonFragment, $allDayFragment);\r\n            this._applyFragment($commonFragment, false);\r\n            this._applyFragment($allDayFragment, true)\r\n        } else {\r\n            renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true))\r\n        }\r\n    }\r\n    _attachAppointmentsEvents() {\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._attachContextMenuEvent();\r\n        this._attachAppointmentDblClick();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents()\r\n    }\r\n    _clearItem(item) {\r\n        var $items = this._findItemElementByItem(item.itemData);\r\n        if (!$items.length) {\r\n            return\r\n        }\r\n        each($items, (function(_, $item) {\r\n            $item.detach();\r\n            $item.remove()\r\n        }))\r\n    }\r\n    _clearDropDownItems() {\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clearDropDownItemsElements() {\r\n        this.invoke(\"clearCompactAppointments\")\r\n    }\r\n    _findItemElementByItem(item) {\r\n        var result = [];\r\n        var that = this;\r\n        this.itemElements().each((function() {\r\n            var $item = $(this);\r\n            if ($item.data(that._itemDataKey()) === item) {\r\n                result.push($item)\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _itemClass() {\r\n        return APPOINTMENT_ITEM_CLASS\r\n    }\r\n    _itemContainer() {\r\n        var $container = super._itemContainer();\r\n        var $result = $container;\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $result = $container.add($allDayContainer)\r\n        }\r\n        return $result\r\n    }\r\n    _cleanItemContainer() {\r\n        super._cleanItemContainer();\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $allDayContainer.empty()\r\n        }\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        delete this._$currentAppointment;\r\n        delete this._initialSize;\r\n        delete this._initialCoordinates\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS);\r\n        this._preventSingleAppointmentClick = false\r\n    }\r\n    _renderAppointmentTemplate($container, appointment, model) {\r\n        var config = {\r\n            isAllDay: appointment.allDay,\r\n            isRecurrence: appointment.recurrenceRule,\r\n            html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\r\n        };\r\n        var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\r\n        $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config))\r\n    }\r\n    _executeItemRenderAction(index, itemData, itemElement) {\r\n        var action = this._getItemRenderAction();\r\n        if (action) {\r\n            action(this.invoke(\"mapAppointmentFields\", {\r\n                itemData: itemData,\r\n                itemElement: itemElement\r\n            }))\r\n        }\r\n        delete this._currentAppointmentSettings\r\n    }\r\n    _itemClickHandler(e) {\r\n        super._itemClickHandler(e, {}, {\r\n            afterExecute: function(e) {\r\n                this._processItemClick(e.args[0].event)\r\n            }.bind(this)\r\n        })\r\n    }\r\n    _processItemClick(e) {\r\n        var $target = $(e.currentTarget);\r\n        var data = this._getItemData($target);\r\n        if (\"keydown\" === e.type || isFakeClickEvent(e)) {\r\n            this.notifyObserver(\"showEditAppointmentPopup\", {\r\n                data: data,\r\n                target: $target\r\n            });\r\n            return\r\n        }\r\n        this._appointmentClickTimeout = setTimeout(function() {\r\n            if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\r\n                this.notifyObserver(\"showAppointmentTooltip\", {\r\n                    data: data,\r\n                    target: $target\r\n                })\r\n            }\r\n            this._preventSingleAppointmentClick = false\r\n        }.bind(this), 300)\r\n    }\r\n    _extendActionArgs($itemElement) {\r\n        var args = super._extendActionArgs($itemElement);\r\n        return this.invoke(\"mapAppointmentFields\", args)\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._attachAppointmentDblClick()\r\n    }\r\n    _attachAppointmentDblClick() {\r\n        var that = this;\r\n        var itemSelector = that._itemSelector();\r\n        var itemContainer = this._itemContainer();\r\n        eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\r\n        eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, (function(e) {\r\n            that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\r\n                afterExecute: function(e) {\r\n                    that._dblClickHandler(e.args[0].event)\r\n                }\r\n            })\r\n        }))\r\n    }\r\n    _dblClickHandler(e) {\r\n        var $targetAppointment = $(e.currentTarget);\r\n        var appointmentData = this._getItemData($targetAppointment);\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        this._preventSingleAppointmentClick = true;\r\n        this.notifyObserver(\"showEditAppointmentPopup\", {\r\n            data: appointmentData,\r\n            target: $targetAppointment\r\n        })\r\n    }\r\n    _renderItem(index, item, container) {\r\n        var itemData = item.itemData;\r\n        var $items = [];\r\n        for (var i = 0; i < item.settings.length; i++) {\r\n            var setting = item.settings[i];\r\n            this._currentAppointmentSettings = setting;\r\n            var $item = super._renderItem(index, itemData, container);\r\n            $item.data(APPOINTMENT_SETTINGS_KEY, setting);\r\n            $items.push($item)\r\n        }\r\n        return $items\r\n    }\r\n    _getItemContent($itemFrame) {\r\n        $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\r\n        var $itemContent = super._getItemContent($itemFrame);\r\n        return $itemContent\r\n    }\r\n    _createItemByTemplate(itemTemplate, renderArgs) {\r\n        var {\r\n            itemData: itemData,\r\n            container: container,\r\n            index: index\r\n        } = renderArgs;\r\n        return itemTemplate.render({\r\n            model: {\r\n                appointmentData: itemData,\r\n                targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\r\n            },\r\n            container: container,\r\n            index: index\r\n        })\r\n    }\r\n    _getAppointmentContainer(allDay) {\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        var $container = this.itemsContainer().not($allDayContainer);\r\n        if (allDay && $allDayContainer) {\r\n            $container = $allDayContainer\r\n        }\r\n        return $container\r\n    }\r\n    _postprocessRenderItem(args) {\r\n        this._renderAppointment(args.itemElement, this._currentAppointmentSettings)\r\n    }\r\n    _renderAppointment(element, settings) {\r\n        element.data(APPOINTMENT_SETTINGS_KEY, settings);\r\n        this._applyResourceDataAttr(element);\r\n        var rawAppointment = this._getItemData(element);\r\n        var geometry = this.invoke(\"getAppointmentGeometry\", settings);\r\n        var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\r\n        var allowDrag = this.option(\"allowDrag\");\r\n        var allDay = settings.allDay;\r\n        this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\r\n        if (settings.virtual) {\r\n            var deferredColor = this.invoke(\"getAppointmentColor\", {\r\n                itemData: rawAppointment,\r\n                groupIndex: settings.groupIndex\r\n            });\r\n            this._processVirtualAppointment(settings, element, rawAppointment, deferredColor)\r\n        } else {\r\n            var _settings$info;\r\n            var config = {\r\n                data: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                observer: this.option(\"observer\"),\r\n                geometry: geometry,\r\n                direction: settings.direction || \"vertical\",\r\n                allowResize: allowResize,\r\n                allowDrag: allowDrag,\r\n                allDay: allDay,\r\n                reduced: settings.appointmentReduced,\r\n                isCompact: settings.isCompact,\r\n                startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\r\n                cellWidth: this.invoke(\"getCellWidth\"),\r\n                cellHeight: this.invoke(\"getCellHeight\"),\r\n                resizableConfig: this._resizableConfig(rawAppointment, settings)\r\n            };\r\n            if (this.isAgendaView) {\r\n                config.createPlainResourceListAsync = rawAppointment => this.resourceManager._createPlainResourcesByAppointmentAsync(rawAppointment)\r\n            }\r\n            this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, config)\r\n        }\r\n    }\r\n    _applyResourceDataAttr($appointment) {\r\n        var resources = this.invoke(\"getResourcesFromItem\", this._getItemData($appointment));\r\n        if (resources) {\r\n            each(resources, (function(name, values) {\r\n                var attr = \"data-\" + normalizeKey(name.toLowerCase()) + \"-\";\r\n                for (var i = 0; i < values.length; i++) {\r\n                    $appointment.attr(attr + normalizeKey(values[i]), true)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    _resizableConfig(appointmentData, itemSetting) {\r\n        return {\r\n            area: this._calculateResizableArea(itemSetting, appointmentData),\r\n            onResizeStart: function(e) {\r\n                this._$currentAppointment = $(e.element);\r\n                if (this.invoke(\"needRecalculateResizableArea\")) {\r\n                    var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\r\n                    e.component.option(\"area\", updatedArea);\r\n                    e.component._renderDragOffsets(e.event)\r\n                }\r\n                this._initialSize = {\r\n                    width: e.width,\r\n                    height: e.height\r\n                };\r\n                this._initialCoordinates = locate(this._$currentAppointment)\r\n            }.bind(this),\r\n            onResizeEnd: function(e) {\r\n                if (this._escPressed) {\r\n                    e.event.cancel = true;\r\n                    return\r\n                }\r\n                this._resizeEndHandler(e)\r\n            }.bind(this)\r\n        }\r\n    }\r\n    _calculateResizableArea(itemSetting, appointmentData) {\r\n        var area = this.$element().closest(\".dx-scrollable-content\");\r\n        return this.invoke(\"getResizableAppointmentArea\", {\r\n            coordinates: {\r\n                left: itemSetting.left,\r\n                top: 0,\r\n                groupIndex: itemSetting.groupIndex\r\n            },\r\n            allDay: itemSetting.allDay\r\n        }) || area\r\n    }\r\n    _resizeEndHandler(e) {\r\n        var scheduler = this.option(\"observer\");\r\n        var $element = $(e.element);\r\n        var {\r\n            info: info\r\n        } = $element.data(\"dxAppointmentSettings\");\r\n        var sourceAppointment = this._getItemData($element);\r\n        var modifiedAppointmentAdapter = scheduler.createAppointmentAdapter(sourceAppointment).clone();\r\n        var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\r\n        var endDate = info.appointment.endDate;\r\n        var dateRange = this._getDateRange(e, startDate, endDate);\r\n        modifiedAppointmentAdapter.startDate = new Date(dateRange[0]);\r\n        modifiedAppointmentAdapter.endDate = new Date(dateRange[1]);\r\n        this.notifyObserver(\"updateAppointmentAfterResize\", {\r\n            target: sourceAppointment,\r\n            data: modifiedAppointmentAdapter.clone({\r\n                pathTimeZone: \"fromGrid\"\r\n            }).source(),\r\n            $appointment: $element\r\n        })\r\n    }\r\n    _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\r\n        var scheduler = this.option(\"observer\");\r\n        var appointmentAdapter = scheduler.createAppointmentAdapter(rawAppointment);\r\n        var startDate = appointmentInfo.startDate;\r\n        var recurrenceProcessor = getRecurrenceProcessor();\r\n        var {\r\n            recurrenceRule: recurrenceRule,\r\n            startDateTimeZone: startDateTimeZone\r\n        } = appointmentAdapter;\r\n        var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\r\n        var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\r\n        if (!e.handles.top && !isRecurrent && !isAllDay) {\r\n            startDate = scheduler.timeZoneCalculator.createDate(appointmentAdapter.startDate, {\r\n                appointmentTimeZone: startDateTimeZone,\r\n                path: \"toGrid\"\r\n            })\r\n        }\r\n        return startDate\r\n    }\r\n    _getDateRange(e, startDate, endDate) {\r\n        var itemData = this._getItemData(e.element);\r\n        var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\r\n        var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\r\n        var isStartDateChanged = false;\r\n        var isAllDay = this.invoke(\"isAllDay\", itemData);\r\n        var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\r\n        var startTime;\r\n        var endTime;\r\n        if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\r\n            isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left\r\n        } else {\r\n            isStartDateChanged = e.handles.top\r\n        }\r\n        if (isStartDateChanged) {\r\n            startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\r\n            startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\r\n            endTime = endDate.getTime()\r\n        } else {\r\n            startTime = startDate.getTime();\r\n            endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\r\n            endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime)\r\n        }\r\n        return [startTime, endTime]\r\n    }\r\n    _correctEndDateByDelta(endDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = endDate.getTime() + deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(endDate);\r\n        var minDate = new Date(endDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result > maxDate.getTime() || result <= minDate.getTime()) {\r\n            var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var lastDay = new Date(endDate.setDate(endDate.getDate() + daysCount));\r\n            lastDay.setHours(startDayHour, 0, 0, 0);\r\n            result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _correctStartDateByDelta(startDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = startDate.getTime() - deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(startDate);\r\n        var minDate = new Date(startDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result < minDate.getTime() || result >= maxDate.getTime()) {\r\n            var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\r\n            firstDay.setHours(endDayHour, 0, 0, 0);\r\n            result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _calculateBoundOffset() {\r\n        return this.invoke(\"getBoundOffset\")\r\n    }\r\n    _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\r\n        var virtualAppointment = appointmentSetting.virtual;\r\n        var virtualGroupIndex = virtualAppointment.index;\r\n        if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\r\n            this._virtualAppointments[virtualGroupIndex] = {\r\n                coordinates: {\r\n                    top: virtualAppointment.top,\r\n                    left: virtualAppointment.left\r\n                },\r\n                items: {\r\n                    data: [],\r\n                    colors: [],\r\n                    settings: []\r\n                },\r\n                isAllDay: virtualAppointment.isAllDay ? true : false,\r\n                buttonColor: color\r\n            }\r\n        }\r\n        appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\r\n        this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\r\n        this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\r\n        this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\r\n        $appointment.remove()\r\n    }\r\n    _renderContentImpl() {\r\n        super._renderContentImpl();\r\n        this._renderDropDownAppointments()\r\n    }\r\n    _renderDropDownAppointments() {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            each(this._virtualAppointments, function(groupIndex) {\r\n                var virtualGroup = this._virtualAppointments[groupIndex];\r\n                var virtualItems = virtualGroup.items;\r\n                var virtualCoordinates = virtualGroup.coordinates;\r\n                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\r\n                var left = virtualCoordinates.left;\r\n                var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\r\n                var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\r\n                var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\r\n                this.notifyObserver(\"renderCompactAppointments\", {\r\n                    $container: $fragment,\r\n                    coordinates: {\r\n                        top: virtualCoordinates.top,\r\n                        left: left + rtlOffset\r\n                    },\r\n                    items: virtualItems,\r\n                    buttonColor: virtualGroup.buttonColor,\r\n                    width: buttonWidth - this.option(\"_collectorOffset\"),\r\n                    height: buttonHeight,\r\n                    onAppointmentClick: this.option(\"onItemClick\"),\r\n                    allowDrag: this.option(\"allowDrag\"),\r\n                    cellWidth: this.invoke(\"getCellWidth\"),\r\n                    isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup),\r\n                    applyOffset: !virtualGroup.isAllDay && this.invoke(\"isApplyCompactAppointmentOffset\")\r\n                })\r\n            }.bind(this))\r\n        })\r\n    }\r\n    _isGroupCompact(virtualGroup) {\r\n        return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\")\r\n    }\r\n    _sortAppointmentsByStartDate(appointments) {\r\n        appointments.sort(function(a, b) {\r\n            var result = 0;\r\n            var firstDate = new Date(this.invoke(\"getField\", \"startDate\", a.settings || a)).getTime();\r\n            var secondDate = new Date(this.invoke(\"getField\", \"startDate\", b.settings || b)).getTime();\r\n            if (firstDate < secondDate) {\r\n                result = -1\r\n            }\r\n            if (firstDate > secondDate) {\r\n                result = 1\r\n            }\r\n            return result\r\n        }.bind(this))\r\n    }\r\n    _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\r\n        var recurrenceRule = this.invoke(\"getField\", \"recurrenceRule\", appointment);\r\n        var result = {\r\n            parts: [],\r\n            indexes: []\r\n        };\r\n        if (recurrenceRule) {\r\n            var dates = appointment.settings || appointment;\r\n            var startDate = new Date(this.invoke(\"getField\", \"startDate\", dates));\r\n            var endDate = new Date(this.invoke(\"getField\", \"endDate\", dates));\r\n            var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n            var recurrenceException = this.invoke(\"getField\", \"recurrenceException\", appointment);\r\n            var startViewDate = this.invoke(\"getStartViewDate\");\r\n            var endViewDate = this.invoke(\"getEndViewDate\");\r\n            var recurrentDates = getRecurrenceProcessor().generateDates({\r\n                rule: recurrenceRule,\r\n                exception: recurrenceException,\r\n                start: startDate,\r\n                end: endDate,\r\n                min: startViewDate,\r\n                max: endViewDate\r\n            });\r\n            var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\r\n            for (var i = 0; i < recurrentDateCount; i++) {\r\n                var appointmentPart = extend({}, appointment, true);\r\n                if (recurrentDates[i]) {\r\n                    var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\r\n                    this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\r\n                    appointmentPart.settings = appointmentSettings\r\n                } else {\r\n                    appointmentPart.settings = dates\r\n                }\r\n                result.parts.push(appointmentPart);\r\n                if (!skipLongAppointments) {\r\n                    this._processLongAppointment(appointmentPart, result)\r\n                }\r\n            }\r\n            result.indexes.push(index)\r\n        }\r\n        return result\r\n    }\r\n    _processLongAppointment(appointment, result) {\r\n        var parts = this.splitAppointmentByDay(appointment);\r\n        var partCount = parts.length;\r\n        var endViewDate = this.invoke(\"getEndViewDate\").getTime();\r\n        var startViewDate = this.invoke(\"getStartViewDate\").getTime();\r\n        var timeZoneCalculator = this.invoke(\"getTimeZoneCalculator\");\r\n        result = result || {\r\n            parts: []\r\n        };\r\n        if (partCount > 1) {\r\n            extend(appointment, parts[0]);\r\n            for (var i = 1; i < partCount; i++) {\r\n                var startDate = this.invoke(\"getField\", \"startDate\", parts[i].settings).getTime();\r\n                startDate = timeZoneCalculator.createDate(startDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                if (startDate < endViewDate && startDate > startViewDate) {\r\n                    result.parts.push(parts[i])\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\r\n        each(recurrenceIndexes, (function(i, index) {\r\n            appointments.splice(index - i, 1)\r\n        }))\r\n    }\r\n    _combineAppointments(appointments, additionalAppointments) {\r\n        if (additionalAppointments.length) {\r\n            merge(appointments, additionalAppointments)\r\n        }\r\n        this._sortAppointmentsByStartDate(appointments)\r\n    }\r\n    _applyStartDateToObj(startDate, obj) {\r\n        this.invoke(\"setField\", \"startDate\", obj, startDate);\r\n        return obj\r\n    }\r\n    _applyEndDateToObj(endDate, obj) {\r\n        this.invoke(\"setField\", \"endDate\", obj, endDate);\r\n        return obj\r\n    }\r\n    moveAppointmentBack(dragEvent) {\r\n        var $appointment = this._$currentAppointment;\r\n        var size = this._initialSize;\r\n        var coords = this._initialCoordinates;\r\n        if (dragEvent) {\r\n            this._removeDragSourceClassFromDraggedAppointment();\r\n            if (isDeferred(dragEvent.cancel)) {\r\n                dragEvent.cancel.resolve(true)\r\n            } else {\r\n                dragEvent.cancel = true\r\n            }\r\n        }\r\n        if ($appointment && !dragEvent) {\r\n            if (coords) {\r\n                move($appointment, coords);\r\n                delete this._initialSize\r\n            }\r\n            if (size) {\r\n                $appointment.outerWidth(size.width);\r\n                $appointment.outerHeight(size.height);\r\n                delete this._initialCoordinates\r\n            }\r\n        }\r\n    }\r\n    focus() {\r\n        if (this._$currentAppointment) {\r\n            var focusedElement = getPublicElement(this._$currentAppointment);\r\n            this.option(\"focusedElement\", focusedElement);\r\n            eventsEngine.trigger(focusedElement, \"focus\")\r\n        }\r\n    }\r\n    splitAppointmentByDay(appointment) {\r\n        var dates = appointment.settings || appointment;\r\n        var originalStartDate = new Date(this.invoke(\"getField\", \"startDate\", dates));\r\n        var startDate = dateUtils.makeDate(originalStartDate);\r\n        var endDate = dateUtils.makeDate(this.invoke(\"getField\", \"endDate\", dates));\r\n        var maxAllowedDate = this.invoke(\"getEndViewDate\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var appointmentIsLong = this.invoke(\"appointmentTakesSeveralDays\", appointment);\r\n        var result = [];\r\n        var timeZoneCalculator = this.invoke(\"getTimeZoneCalculator\");\r\n        startDate = timeZoneCalculator.createDate(startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        endDate = timeZoneCalculator.createDate(endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\r\n            result.push(this._applyStartDateToObj(new Date(startDate), {\r\n                appointmentData: appointment\r\n            }));\r\n            startDate.setDate(startDate.getDate() + 1)\r\n        }\r\n        while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\r\n            var currentStartDate = new Date(startDate);\r\n            var currentEndDate = new Date(startDate);\r\n            this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\r\n            this._checkEndDate(currentEndDate, endDate, endDayHour);\r\n            var appointmentData = deepExtendArraySafe({}, appointment, true);\r\n            var appointmentSettings = {};\r\n            this._applyStartDateToObj(currentStartDate, appointmentSettings);\r\n            this._applyEndDateToObj(currentEndDate, appointmentSettings);\r\n            appointmentData.settings = appointmentSettings;\r\n            result.push(appointmentData);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            startDate.setDate(startDate.getDate() + 1);\r\n            startDate.setHours(startDayHour)\r\n        }\r\n        return result\r\n    }\r\n    _checkStartDate(currentDate, originalDate, startDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\r\n            currentDate.setHours(startDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _checkEndDate(currentDate, originalDate, endDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\r\n            currentDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _removeDragSourceClassFromDraggedAppointment() {\r\n        var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\r\n        $appointments.each((_, element) => {\r\n            var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\r\n            appointmentInstance.option(\"isDragSource\", false)\r\n        })\r\n    }\r\n    _setDragSourceAppointment(appointment, settings) {\r\n        var $appointments = this._findItemElementByItem(appointment);\r\n        var {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        } = settings.info.sourceAppointment;\r\n        var {\r\n            groupIndex: groupIndex\r\n        } = settings;\r\n        $appointments.forEach($item => {\r\n            var {\r\n                info: itemInfo,\r\n                groupIndex: itemGroupIndex\r\n            } = $item.data(APPOINTMENT_SETTINGS_KEY);\r\n            var {\r\n                startDate: itemStartDate,\r\n                endDate: itemEndDate\r\n            } = itemInfo.sourceAppointment;\r\n            var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\r\n            var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\r\n            appointmentInstance.option(\"isDragSource\", isDragSource)\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\r\nexport default SchedulerAppointments;\r\n"]},"metadata":{},"sourceType":"module"}