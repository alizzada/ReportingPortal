{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { noop } from \"../../core/utils/common\";\nimport { getPublicElement } from \"../../core/element\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isPlainObject, isObject, isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getElementMaxHeightByWindow } from \"../overlay/utils\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { end as hoverEventEnd } from \"../../events/hover\";\nimport MenuBase from \"../context_menu/ui.menu_base\";\nimport Overlay from \"../overlay\";\nimport Submenu from \"./ui.submenu\";\nimport Button from \"../button\";\nimport TreeView from \"../tree_view\";\nvar DX_MENU_CLASS = \"dx-menu\";\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\nvar FOCUS_UP = \"up\";\nvar FOCUS_DOWN = \"down\";\nvar FOCUS_LEFT = \"left\";\nvar FOCUS_RIGHT = \"right\";\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\nvar NEXTITEM_OPERATION = \"nextItem\";\nvar PREVITEM_OPERATION = \"prevItem\";\nvar DEFAULT_DELAY = {\n  show: 50,\n  hide: 300\n};\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\n\nvar Menu = /*#__PURE__*/function (_MenuBase) {\n  _inherits(Menu, _MenuBase);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Menu, [{\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Menu.prototype), \"_getDefaultOptions\", this).call(this), {\n        orientation: \"horizontal\",\n        submenuDirection: \"auto\",\n        showFirstSubmenuMode: {\n          name: \"onClick\",\n          delay: {\n            show: 50,\n            hide: 300\n          }\n        },\n        hideSubmenuOnMouseLeave: false,\n        onSubmenuShowing: null,\n        onSubmenuShown: null,\n        onSubmenuHiding: null,\n        onSubmenuHidden: null,\n        adaptivityEnabled: false\n      });\n    }\n  }, {\n    key: \"_setOptionsByReference\",\n    value: function _setOptionsByReference() {\n      _get(_getPrototypeOf(Menu.prototype), \"_setOptionsByReference\", this).call(this);\n\n      extend(this._optionsByReference, {\n        animation: true,\n        selectedItem: true\n      });\n    }\n  }, {\n    key: \"_itemElements\",\n    value: function _itemElements() {\n      var rootMenuElements = _get(_getPrototypeOf(Menu.prototype), \"_itemElements\", this).call(this);\n\n      var submenuElements = this._submenuItemElements();\n\n      return rootMenuElements.add(submenuElements);\n    }\n  }, {\n    key: \"_submenuItemElements\",\n    value: function _submenuItemElements() {\n      var elements = [];\n      var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\n      var currentSubmenu = this._submenus.length && this._submenus[0];\n\n      if (currentSubmenu && currentSubmenu.itemsContainer()) {\n        elements = currentSubmenu.itemsContainer().find(itemSelector);\n      }\n\n      return elements;\n    }\n  }, {\n    key: \"_focusTarget\",\n    value: function _focusTarget() {\n      return this.$element();\n    }\n  }, {\n    key: \"_isMenuHorizontal\",\n    value: function _isMenuHorizontal() {\n      return \"horizontal\" === this.option(\"orientation\");\n    }\n  }, {\n    key: \"_moveFocus\",\n    value: function _moveFocus(location) {\n      var $items = this._getAvailableItems();\n\n      var isMenuHorizontal = this._isMenuHorizontal();\n\n      var $activeItem = this._getActiveItem(true);\n\n      var argument;\n      var operation;\n      var navigationAction;\n      var $newTarget;\n\n      switch (location) {\n        case FOCUS_UP:\n          operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\n          argument = isMenuHorizontal ? $activeItem : $items;\n          navigationAction = this._getKeyboardNavigationAction(operation, argument);\n          $newTarget = navigationAction();\n          break;\n\n        case FOCUS_DOWN:\n          operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\n          argument = isMenuHorizontal ? $activeItem : $items;\n          navigationAction = this._getKeyboardNavigationAction(operation, argument);\n          $newTarget = navigationAction();\n          break;\n\n        case FOCUS_RIGHT:\n          operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\n          argument = isMenuHorizontal ? $items : $activeItem;\n          navigationAction = this._getKeyboardNavigationAction(operation, argument);\n          $newTarget = navigationAction();\n          break;\n\n        case FOCUS_LEFT:\n          operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\n          argument = isMenuHorizontal ? $items : $activeItem;\n          navigationAction = this._getKeyboardNavigationAction(operation, argument);\n          $newTarget = navigationAction();\n          break;\n\n        default:\n          return _get(_getPrototypeOf(Menu.prototype), \"_moveFocus\", this).call(this, location);\n      }\n\n      if ($newTarget && 0 !== $newTarget.length) {\n        this.option(\"focusedElement\", getPublicElement($newTarget));\n      }\n    }\n  }, {\n    key: \"_getItemsNavigationOperation\",\n    value: function _getItemsNavigationOperation(operation) {\n      var navOperation = operation;\n\n      if (this.option(\"rtlEnabled\")) {\n        navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION;\n      }\n\n      return navOperation;\n    }\n  }, {\n    key: \"_getKeyboardNavigationAction\",\n    value: function _getKeyboardNavigationAction(operation, argument) {\n      var action = noop;\n\n      switch (operation) {\n        case SHOW_SUBMENU_OPERATION:\n          if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\n            action = this._showSubmenu.bind(this, argument);\n          }\n\n          break;\n\n        case NEXTITEM_OPERATION:\n          action = this._nextItem.bind(this, argument);\n          break;\n\n        case PREVITEM_OPERATION:\n          action = this._prevItem.bind(this, argument);\n      }\n\n      return action;\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      _get(_getPrototypeOf(Menu.prototype), \"_clean\", this).call(this);\n\n      this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer);\n    }\n  }, {\n    key: \"_visibilityChanged\",\n    value: function _visibilityChanged(visible) {\n      if (visible) {\n        if (!this._menuItemsWidth) {\n          this._updateItemsWidthCache();\n        }\n\n        this._dimensionChanged();\n      }\n    }\n  }, {\n    key: \"_isAdaptivityEnabled\",\n    value: function _isAdaptivityEnabled() {\n      return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\");\n    }\n  }, {\n    key: \"_updateItemsWidthCache\",\n    value: function _updateItemsWidthCache() {\n      var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\n      this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true);\n    }\n  }, {\n    key: \"_dimensionChanged\",\n    value: function _dimensionChanged() {\n      if (!this._isAdaptivityEnabled()) {\n        return;\n      }\n\n      var containerWidth = this.$element().outerWidth();\n\n      this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(Menu.prototype), \"_init\", this).call(this);\n\n      this._submenus = [];\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      var _this = this;\n\n      this._actions = {};\n      each(ACTIONS, function (index, action) {\n        _this._actions[action] = _this._createActionByOption(action);\n      });\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this._visibleSubmenu = null;\n      this.$element().addClass(DX_MENU_CLASS);\n\n      _get(_getPrototypeOf(Menu.prototype), \"_initMarkup\", this).call(this);\n\n      this.setAria(\"role\", \"menubar\");\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(Menu.prototype), \"_render\", this).call(this);\n\n      this._initAdaptivity();\n    }\n  }, {\n    key: \"_renderHamburgerButton\",\n    value: function _renderHamburgerButton() {\n      this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\n        icon: \"menu\",\n        activeStateEnabled: false,\n        onClick: this._toggleTreeView.bind(this)\n      });\n      return this._hamburger.$element();\n    }\n  }, {\n    key: \"_toggleTreeView\",\n    value: function _toggleTreeView(state) {\n      if (isPlainObject(state)) {\n        state = !this._overlay.option(\"visible\");\n      }\n\n      this._overlay.option(\"visible\", state);\n\n      this._toggleHamburgerActiveState(state);\n    }\n  }, {\n    key: \"_toggleHamburgerActiveState\",\n    value: function _toggleHamburgerActiveState(state) {\n      this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state);\n    }\n  }, {\n    key: \"_toggleAdaptiveMode\",\n    value: function _toggleAdaptiveMode(state) {\n      var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\n      var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\n\n      if (state) {\n        this._hideVisibleSubmenu();\n      } else {\n        this._treeView && this._treeView.collapseAll();\n        this._overlay && this._toggleTreeView(state);\n      }\n\n      $menuItemsContainer.toggle(!state);\n      $adaptiveElements.toggle(state);\n    }\n  }, {\n    key: \"_removeAdaptivity\",\n    value: function _removeAdaptivity() {\n      if (!this._$adaptiveContainer) {\n        return;\n      }\n\n      this._toggleAdaptiveMode(false);\n\n      this._$adaptiveContainer.remove();\n\n      this._$adaptiveContainer = null;\n      this._treeView = null;\n      this._hamburger = null;\n      this._overlay = null;\n    }\n  }, {\n    key: \"_treeviewItemClickHandler\",\n    value: function _treeviewItemClickHandler(e) {\n      this._actions.onItemClick(e);\n\n      if (!e.node.children.length) {\n        this._toggleTreeView(false);\n      }\n    }\n  }, {\n    key: \"_getAdaptiveOverlayOptions\",\n    value: function _getAdaptiveOverlayOptions() {\n      var _this2 = this;\n\n      var rtl = this.option(\"rtlEnabled\");\n      var position = rtl ? \"right\" : \"left\";\n      return {\n        maxHeight: function maxHeight() {\n          return getElementMaxHeightByWindow(_this2.$element());\n        },\n        deferRendering: false,\n        shading: false,\n        animation: false,\n        closeOnTargetScroll: true,\n        onHidden: function onHidden() {\n          _this2._toggleHamburgerActiveState(false);\n        },\n        height: \"auto\",\n        closeOnOutsideClick: function closeOnOutsideClick(e) {\n          return !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length;\n        },\n        position: {\n          collision: \"flipfit\",\n          at: \"bottom \" + position,\n          my: \"top \" + position,\n          of: this._hamburger.$element()\n        }\n      };\n    }\n  }, {\n    key: \"_getTreeViewOptions\",\n    value: function _getTreeViewOptions() {\n      var _this3 = this;\n\n      var menuOptions = {};\n      each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], function (_, option) {\n        menuOptions[option] = _this3.option(option);\n      });\n      each([\"onItemContextMenu\", \"onSelectionChanged\"], function (_, actionName) {\n        menuOptions[actionName] = function (e) {\n          _this3._actions[actionName](e);\n        };\n      });\n      return extend(menuOptions, {\n        dataSource: this.getDataSource(),\n        animationEnabled: !!this.option(\"animation\"),\n        onItemClick: this._treeviewItemClickHandler.bind(this),\n        onItemExpanded: function onItemExpanded(e) {\n          _this3._overlay.repaint();\n\n          _this3._actions.onSubmenuShown(e);\n        },\n        onItemCollapsed: function onItemCollapsed(e) {\n          _this3._overlay.repaint();\n\n          _this3._actions.onSubmenuHidden(e);\n        },\n        selectNodesRecursive: false,\n        selectByClick: this.option(\"selectByClick\"),\n        expandEvent: \"click\"\n      });\n    }\n  }, {\n    key: \"_initAdaptivity\",\n    value: function _initAdaptivity() {\n      if (!this._isAdaptivityEnabled()) {\n        return;\n      }\n\n      this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\n\n      var $hamburger = this._renderHamburgerButton();\n\n      this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\n      this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\n\n      this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\n\n      this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\n\n      this._$adaptiveContainer.append($hamburger);\n\n      this._$adaptiveContainer.append(this._overlay.$element());\n\n      this.$element().append(this._$adaptiveContainer);\n\n      this._updateItemsWidthCache();\n\n      this._dimensionChanged();\n    }\n  }, {\n    key: \"_getDelay\",\n    value: function _getDelay(delayType) {\n      var delay = this.option(\"showFirstSubmenuMode\").delay;\n\n      if (!isDefined(delay)) {\n        return DEFAULT_DELAY[delayType];\n      } else {\n        return isObject(delay) ? delay[delayType] : delay;\n      }\n    }\n  }, {\n    key: \"_keyboardHandler\",\n    value: function _keyboardHandler(e) {\n      return _get(_getPrototypeOf(Menu.prototype), \"_keyboardHandler\", this).call(this, e, !!this._visibleSubmenu);\n    }\n  }, {\n    key: \"_renderContainer\",\n    value: function _renderContainer() {\n      var $wrapper = $(\"<div>\");\n      $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\n      return _get(_getPrototypeOf(Menu.prototype), \"_renderContainer\", this).call(this, $wrapper);\n    }\n  }, {\n    key: \"_renderSubmenuItems\",\n    value: function _renderSubmenuItems(node, $itemFrame) {\n      var submenu = this._createSubmenu(node, $itemFrame);\n\n      this._submenus.push(submenu);\n\n      this._renderBorderElement($itemFrame);\n\n      return submenu;\n    }\n  }, {\n    key: \"_getKeyboardListeners\",\n    value: function _getKeyboardListeners() {\n      return _get(_getPrototypeOf(Menu.prototype), \"_getKeyboardListeners\", this).call(this).concat(this._visibleSubmenu);\n    }\n  }, {\n    key: \"_createSubmenu\",\n    value: function _createSubmenu(node, $rootItem) {\n      var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\n\n      var items = this._getChildNodes(node);\n\n      var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\n        _dataAdapter: this._dataAdapter,\n        _parentKey: node.internalFields.key,\n        items: items,\n        onHoverStart: this._clearTimeouts.bind(this),\n        position: this.getSubmenuPosition($rootItem)\n      }));\n\n      this._attachSubmenuHandlers($rootItem, result);\n\n      return result;\n    }\n  }, {\n    key: \"_getSubmenuOptions\",\n    value: function _getSubmenuOptions() {\n      var _this4 = this;\n\n      var $submenuTarget = $(\"<div>\");\n\n      var isMenuHorizontal = this._isMenuHorizontal();\n\n      return {\n        itemTemplate: this.option(\"itemTemplate\"),\n        target: $submenuTarget,\n        orientation: this.option(\"orientation\"),\n        selectionMode: this.option(\"selectionMode\"),\n        cssClass: this.option(\"cssClass\"),\n        selectByClick: this.option(\"selectByClick\"),\n        hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n        activeStateEnabled: this.option(\"activeStateEnabled\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        animation: this.option(\"animation\"),\n        showSubmenuMode: this.option(\"showSubmenuMode\"),\n        displayExpr: this.option(\"displayExpr\"),\n        disabledExpr: this.option(\"disabledExpr\"),\n        selectedExpr: this.option(\"selectedExpr\"),\n        itemsExpr: this.option(\"itemsExpr\"),\n        onFocusedItemChanged: function onFocusedItemChanged(e) {\n          if (!e.component.option(\"visible\")) {\n            return;\n          }\n\n          _this4.option(\"focusedElement\", e.component.option(\"focusedElement\"));\n        },\n        onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\n        onItemClick: this._nestedItemOnItemClickHandler.bind(this),\n        onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\n        onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\n        onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\n        onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\n        onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\n      };\n    }\n  }, {\n    key: \"_getShowFirstSubmenuMode\",\n    value: function _getShowFirstSubmenuMode() {\n      if (!this._isDesktopDevice()) {\n        return \"onClick\";\n      }\n\n      var optionValue = this.option(\"showFirstSubmenuMode\");\n      return isObject(optionValue) ? optionValue.name : optionValue;\n    }\n  }, {\n    key: \"_moveMainMenuFocus\",\n    value: function _moveMainMenuFocus(direction) {\n      var $items = this._getAvailableItems();\n\n      var itemCount = $items.length;\n      var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\n      var itemIndex = $items.index($currentItem);\n\n      this._hideSubmenu(this._visibleSubmenu);\n\n      itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\n\n      if (itemIndex >= itemCount) {\n        itemIndex = 0;\n      } else if (itemIndex < 0) {\n        itemIndex = itemCount - 1;\n      }\n\n      var $newItem = $items.eq(itemIndex);\n      this.option(\"focusedElement\", getPublicElement($newItem));\n    }\n  }, {\n    key: \"_nestedItemOnSelectionChangedHandler\",\n    value: function _nestedItemOnSelectionChangedHandler(args) {\n      var selectedItem = args.addedItems.length && args.addedItems[0];\n      var submenu = Submenu.getInstance(args.element);\n      var onSelectionChanged = this._actions.onSelectionChanged;\n      onSelectionChanged(args);\n      selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\n\n      this._clearRootSelection();\n\n      this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n    }\n  }, {\n    key: \"_clearSelectionInSubmenus\",\n    value: function _clearSelectionInSubmenus(item, targetSubmenu) {\n      var _this5 = this;\n\n      var cleanAllSubmenus = !arguments.length;\n      each(this._submenus, function (index, submenu) {\n        var $submenu = submenu._itemContainer();\n\n        var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\n        var $selectedItem = $submenu.find(\".\".concat(_this5._selectedItemClass()));\n\n        if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\n          $selectedItem.removeClass(_this5._selectedItemClass());\n\n          var selectedItemData = _this5._getItemData($selectedItem);\n\n          if (selectedItemData) {\n            selectedItemData.selected = false;\n          }\n\n          submenu._clearSelectedItems();\n        }\n      });\n    }\n  }, {\n    key: \"_clearRootSelection\",\n    value: function _clearRootSelection() {\n      var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\n\n      if ($prevSelectedItem.length) {\n        var prevSelectedItemData = this._getItemData($prevSelectedItem);\n\n        prevSelectedItemData.selected = false;\n        $prevSelectedItem.removeClass(this._selectedItemClass());\n      }\n    }\n  }, {\n    key: \"_nestedItemOnItemClickHandler\",\n    value: function _nestedItemOnItemClickHandler(e) {\n      this._actions.onItemClick(e);\n    }\n  }, {\n    key: \"_nestedItemOnItemRenderedHandler\",\n    value: function _nestedItemOnItemRenderedHandler(e) {\n      this._actions.onItemRendered(e);\n    }\n  }, {\n    key: \"_attachSubmenuHandlers\",\n    value: function _attachSubmenuHandlers($rootItem, submenu) {\n      var _this6 = this;\n\n      var $submenuOverlayContent = submenu.getOverlayContent();\n      var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\n      var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\n      submenu.option({\n        onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\n        onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\n        onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\n        onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\n      });\n      each(submenus, function (index, submenu) {\n        eventsEngine.off(submenu, submenuMouseLeaveName);\n        eventsEngine.on(submenu, submenuMouseLeaveName, null, _this6._submenuMouseLeaveHandler.bind(_this6, $rootItem));\n      });\n    }\n  }, {\n    key: \"_submenuOnShowingHandler\",\n    value: function _submenuOnShowingHandler($rootItem, submenu) {\n      var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\n\n      this._actions.onSubmenuShowing({\n        rootItem: getPublicElement($rootItem),\n        submenu: submenu\n      });\n\n      $border.show();\n      $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS);\n    }\n  }, {\n    key: \"_submenuOnShownHandler\",\n    value: function _submenuOnShownHandler($rootItem, submenu) {\n      this._actions.onSubmenuShown({\n        rootItem: getPublicElement($rootItem),\n        submenu: submenu\n      });\n    }\n  }, {\n    key: \"_submenuOnHidingHandler\",\n    value: function _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\n      var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\n      var args = eventArgs;\n      args.rootItem = getPublicElement($rootItem);\n      args.submenu = submenu;\n\n      this._actions.onSubmenuHiding(args);\n\n      eventArgs = args;\n\n      if (!eventArgs.cancel) {\n        if (this._visibleSubmenu === submenu) {\n          this._visibleSubmenu = null;\n        }\n\n        $border.hide();\n        $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\n      }\n    }\n  }, {\n    key: \"_submenuOnHiddenHandler\",\n    value: function _submenuOnHiddenHandler($rootItem, submenu) {\n      this._actions.onSubmenuHidden({\n        rootItem: getPublicElement($rootItem),\n        submenu: submenu\n      });\n    }\n  }, {\n    key: \"_submenuMouseLeaveHandler\",\n    value: function _submenuMouseLeaveHandler($rootItem, eventArgs) {\n      var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\n\n      var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\n\n      if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\n        this._clearTimeouts();\n\n        setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n      }\n    }\n  }, {\n    key: \"_hideSubmenuAfterTimeout\",\n    value: function _hideSubmenuAfterTimeout() {\n      if (!this._visibleSubmenu) {\n        return;\n      }\n\n      var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\n\n      var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\n\n      var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\n\n      if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\n        this._visibleSubmenu.hide();\n      }\n    }\n  }, {\n    key: \"_getSubmenuByRootElement\",\n    value: function _getSubmenuByRootElement($rootItem) {\n      if (!$rootItem) {\n        return false;\n      }\n\n      var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\n      return $submenu.length && Submenu.getInstance($submenu);\n    }\n  }, {\n    key: \"getSubmenuPosition\",\n    value: function getSubmenuPosition($rootItem) {\n      var isHorizontalMenu = this._isMenuHorizontal();\n\n      var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\n      var rtlEnabled = this.option(\"rtlEnabled\");\n      var submenuPosition = {\n        collision: \"flip\",\n        of: $rootItem\n      };\n\n      switch (submenuDirection) {\n        case \"leftortop\":\n          submenuPosition.at = \"left top\";\n          submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\n          break;\n\n        case \"rightorbottom\":\n          submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\n          submenuPosition.my = \"left top\";\n          break;\n\n        default:\n          if (isHorizontalMenu) {\n            submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\n            submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n          } else {\n            submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\n            submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n          }\n\n      }\n\n      return submenuPosition;\n    }\n  }, {\n    key: \"_renderBorderElement\",\n    value: function _renderBorderElement($item) {\n      $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide();\n    }\n  }, {\n    key: \"_itemPointerDownHandler\",\n    value: function _itemPointerDownHandler(e) {\n      var $target = $(e.target);\n      var $closestItem = $target.closest(this._itemElements());\n\n      if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\n        this.option(\"focusedElement\", null);\n        return;\n      }\n\n      _get(_getPrototypeOf(Menu.prototype), \"_itemPointerDownHandler\", this).call(this, e);\n    }\n  }, {\n    key: \"_hoverStartHandler\",\n    value: function _hoverStartHandler(e) {\n      var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\n\n      var $item = this._getItemElementByEventArgs(e);\n\n      var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\n\n      var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\n\n      if (this._isItemDisabled($item)) {\n        return;\n      }\n\n      eventsEngine.off($item, mouseMoveEventName);\n\n      if (!this._hasChildren(node)) {\n        this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n        return;\n      }\n\n      if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\n        var submenu = this._getSubmenuByElement($item);\n\n        this._clearTimeouts();\n\n        if (!submenu.isOverlayVisible()) {\n          eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\n          this._showSubmenuTimer = this._getDelay(\"hide\");\n        }\n      }\n    }\n  }, {\n    key: \"_hoverEndHandler\",\n    value: function _hoverEndHandler(eventArg) {\n      var _this7 = this;\n\n      var $item = this._getItemElementByEventArgs(eventArg);\n\n      var relatedTarget = $(eventArg.relatedTarget);\n\n      _get(_getPrototypeOf(Menu.prototype), \"_hoverEndHandler\", this).call(this, eventArg);\n\n      this._clearTimeouts();\n\n      if (this._isItemDisabled($item)) {\n        return;\n      }\n\n      if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\n        return;\n      }\n\n      if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\n        this._hideSubmenuTimer = setTimeout(function () {\n          _this7._hideSubmenuAfterTimeout();\n        }, this._getDelay(\"hide\"));\n      }\n    }\n  }, {\n    key: \"_hideVisibleSubmenu\",\n    value: function _hideVisibleSubmenu() {\n      if (!this._visibleSubmenu) {\n        return false;\n      }\n\n      this._hideSubmenu(this._visibleSubmenu);\n\n      return true;\n    }\n  }, {\n    key: \"_showSubmenu\",\n    value: function _showSubmenu($itemElement) {\n      var submenu = this._getSubmenuByElement($itemElement);\n\n      if (this._visibleSubmenu !== submenu) {\n        this._hideVisibleSubmenu();\n      }\n\n      if (submenu) {\n        this._clearTimeouts();\n\n        submenu.show();\n        this.option(\"focusedElement\", submenu.option(\"focusedElement\"));\n      }\n\n      this._visibleSubmenu = submenu;\n      this._hoveredRootItem = $itemElement;\n    }\n  }, {\n    key: \"_hideSubmenu\",\n    value: function _hideSubmenu(submenu) {\n      submenu && submenu.hide();\n\n      if (this._visibleSubmenu === submenu) {\n        this._visibleSubmenu = null;\n      }\n\n      this._hoveredRootItem = null;\n    }\n  }, {\n    key: \"_itemMouseMoveHandler\",\n    value: function _itemMouseMoveHandler(e) {\n      var _this8 = this;\n\n      if (e.pointers && e.pointers.length) {\n        return;\n      }\n\n      var $item = $(e.currentTarget);\n\n      if (!isDefined(this._showSubmenuTimer)) {\n        return;\n      }\n\n      this._clearTimeouts();\n\n      this._showSubmenuTimer = setTimeout(function () {\n        var submenu = _this8._getSubmenuByElement($item);\n\n        if (submenu && !submenu.isOverlayVisible()) {\n          _this8._showSubmenu($item);\n        }\n      }, this._getDelay(\"show\"));\n    }\n  }, {\n    key: \"_clearTimeouts\",\n    value: function _clearTimeouts() {\n      clearTimeout(this._hideSubmenuTimer);\n      clearTimeout(this._showSubmenuTimer);\n    }\n  }, {\n    key: \"_getSubmenuByElement\",\n    value: function _getSubmenuByElement($itemElement, itemData) {\n      var submenu = this._getSubmenuByRootElement($itemElement);\n\n      if (submenu) {\n        return submenu;\n      } else {\n        itemData = itemData || this._getItemData($itemElement);\n\n        var node = this._dataAdapter.getNodeByItem(itemData);\n\n        return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement);\n      }\n    }\n  }, {\n    key: \"_updateSubmenuVisibilityOnClick\",\n    value: function _updateSubmenuVisibilityOnClick(actionArgs) {\n      var args = actionArgs.args.length && actionArgs.args[0];\n\n      if (!args || this._disabledGetter(args.itemData)) {\n        return;\n      }\n\n      var $itemElement = $(args.itemElement);\n\n      var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\n\n      this._updateSelectedItemOnClick(actionArgs);\n\n      if (this._visibleSubmenu) {\n        if (this._visibleSubmenu === currentSubmenu) {\n          if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\n            this._hideSubmenu(this._visibleSubmenu);\n          }\n\n          return;\n        } else {\n          this._hideSubmenu(this._visibleSubmenu);\n        }\n      }\n\n      if (!currentSubmenu) {\n        return;\n      }\n\n      if (!currentSubmenu.isOverlayVisible()) {\n        this._showSubmenu($itemElement);\n\n        return;\n      }\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      if (ACTIONS.indexOf(args.name) >= 0) {\n        this._initActions();\n\n        return;\n      }\n\n      switch (args.name) {\n        case \"orientation\":\n        case \"submenuDirection\":\n          this._invalidate();\n\n          break;\n\n        case \"showFirstSubmenuMode\":\n        case \"hideSubmenuOnMouseLeave\":\n          break;\n\n        case \"showSubmenuMode\":\n          this._changeSubmenusOption(args.name, args.value);\n\n          break;\n\n        case \"adaptivityEnabled\":\n          args.value ? this._initAdaptivity() : this._removeAdaptivity();\n          break;\n\n        case \"width\":\n          if (this._isAdaptivityEnabled()) {\n            this._treeView.option(args.name, args.value);\n\n            this._overlay.option(args.name, args.value);\n          }\n\n          _get(_getPrototypeOf(Menu.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._dimensionChanged();\n\n          break;\n\n        case \"animation\":\n          if (this._isAdaptivityEnabled()) {\n            this._treeView.option(\"animationEnabled\", !!args.value);\n          }\n\n          _get(_getPrototypeOf(Menu.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        default:\n          if (this._isAdaptivityEnabled()) {\n            this._treeView.option(args.name, args.value);\n          }\n\n          _get(_getPrototypeOf(Menu.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_changeSubmenusOption\",\n    value: function _changeSubmenusOption(name, value) {\n      each(this._submenus, function (index, submenu) {\n        submenu.option(name, value);\n      });\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(itemElement) {\n      this._hideSubmenu(this._visibleSubmenu);\n\n      _get(_getPrototypeOf(Menu.prototype), \"selectItem\", this).call(this, itemElement);\n    }\n  }, {\n    key: \"unselectItem\",\n    value: function unselectItem(itemElement) {\n      this._hideSubmenu(this._visibleSubmenu);\n\n      _get(_getPrototypeOf(Menu.prototype), \"selectItem\", this).call(this, itemElement);\n    }\n  }]);\n\n  return Menu;\n}(MenuBase);\n\nregisterComponent(\"dxMenu\", Menu);\nexport default Menu;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/menu/ui.menu.js"],"names":["$","eventsEngine","registerComponent","noop","getPublicElement","each","isPlainObject","isObject","isDefined","extend","getElementMaxHeightByWindow","addNamespace","pointerEvents","end","hoverEventEnd","MenuBase","Overlay","Submenu","Button","TreeView","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","show","hide","ACTIONS","Menu","orientation","submenuDirection","showFirstSubmenuMode","name","delay","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_optionsByReference","animation","selectedItem","rootMenuElements","submenuElements","_submenuItemElements","add","elements","itemSelector","concat","currentSubmenu","_submenus","length","itemsContainer","find","$element","option","location","$items","_getAvailableItems","isMenuHorizontal","_isMenuHorizontal","$activeItem","_getActiveItem","argument","operation","navigationAction","$newTarget","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","action","hasClass","_showSubmenu","bind","_nextItem","_prevItem","clearTimeout","_resizeEventTimer","visible","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","$menuItems","first","children","_getSummaryItemsWidth","_isAdaptivityEnabled","containerWidth","outerWidth","_toggleAdaptiveMode","_actions","index","_createActionByOption","_visibleSubmenu","addClass","setAria","_initAdaptivity","_hamburger","icon","activeStateEnabled","onClick","_toggleTreeView","state","_overlay","_toggleHamburgerActiveState","toggleClass","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","collapseAll","toggle","_$adaptiveContainer","remove","e","onItemClick","node","rtl","position","maxHeight","deferRendering","shading","closeOnTargetScroll","onHidden","height","closeOnOutsideClick","target","closest","collision","at","my","of","menuOptions","_","actionName","dataSource","getDataSource","animationEnabled","_treeviewItemClickHandler","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","selectByClick","expandEvent","$hamburger","_renderHamburgerButton","_createComponent","_getTreeViewOptions","_getAdaptiveOverlayOptions","$content","append","$wrapper","delayType","appendTo","$itemFrame","submenu","_createSubmenu","push","_renderBorderElement","$rootItem","$submenuContainer","items","_getChildNodes","result","_getSubmenuOptions","_dataAdapter","_parentKey","internalFields","key","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","cssClass","hoverStateEnabled","focusStateEnabled","showSubmenuMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","component","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_isDesktopDevice","optionValue","direction","itemCount","$currentItem","filter","eq","itemIndex","_hideSubmenu","$newItem","args","addedItems","getInstance","element","_clearSelectionInSubmenus","_clearRootSelection","_setOptionWithoutOptionChange","item","targetSubmenu","cleanAllSubmenus","arguments","$submenu","_itemContainer","isOtherItem","is","$selectedItem","_selectedItemClass","removeClass","selectedItemData","_getItemData","selected","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","NAME","onShowing","_submenuOnShowingHandler","onShown","_submenuOnShownHandler","onHiding","_submenuOnHidingHandler","_submenuOnHiddenHandler","off","on","_submenuMouseLeaveHandler","$border","rootItem","eventArgs","cancel","relatedTarget","parents","contextMenu","_getSubmenuByRootElement","setTimeout","_hideSubmenuAfterTimeout","_getDelay","isRootItemHovered","context","isSubmenuItemHovered","hoveredElementFromSubMenu","get","querySelector","isHorizontalMenu","toLowerCase","rtlEnabled","submenuPosition","$item","$target","$closestItem","_itemElements","mouseMoveEventName","move","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","buttons","which","_isItemDisabled","_hasChildren","_showSubmenuTimer","_getShowFirstSubmenuMode","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","currentTarget","itemData","_renderSubmenuItems","actionArgs","_disabledGetter","itemElement","_updateSelectedItemOnClick","indexOf","_initActions","_invalidate","_changeSubmenusOption","value","_removeAdaptivity"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}