{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.adaptive.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BasePositioningStrategy from \"./ui.scheduler.appointmentsPositioning.strategy.base\";\nvar COLLECTOR_ADAPTIVE_SIZE = 28;\nvar COLLECTOR_ADAPTIVE_BOTTOM_OFFSET = 40;\nvar ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET = 35;\nvar ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH = 30;\n\nvar AdaptivePositioningStrategy = /*#__PURE__*/function (_BasePositioningStrat) {\n  _inherits(AdaptivePositioningStrategy, _BasePositioningStrat);\n\n  var _super = _createSuper(AdaptivePositioningStrategy);\n\n  function AdaptivePositioningStrategy() {\n    _classCallCheck(this, AdaptivePositioningStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AdaptivePositioningStrategy, [{\n    key: \"getDropDownAppointmentWidth\",\n    value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {\n      return this.getDropDownButtonAdaptiveSize();\n    }\n  }, {\n    key: \"getDropDownButtonAdaptiveSize\",\n    value: function getDropDownButtonAdaptiveSize() {\n      return COLLECTOR_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"getCollectorTopOffset\",\n    value: function getCollectorTopOffset(allDay) {\n      var renderingStrategy = this.getRenderingStrategy();\n\n      if (renderingStrategy.hasAllDayAppointments() && allDay) {\n        return (renderingStrategy.getDefaultAllDayCellHeight() - renderingStrategy.getDropDownButtonAdaptiveSize()) / 2;\n      } else {\n        return this.getRenderingStrategy().getDefaultCellHeight() - COLLECTOR_ADAPTIVE_BOTTOM_OFFSET;\n      }\n    }\n  }, {\n    key: \"getCollectorLeftOffset\",\n    value: function getCollectorLeftOffset() {\n      return (this.getRenderingStrategy().getDefaultCellWidth() - COLLECTOR_ADAPTIVE_SIZE) / 2;\n    }\n  }, {\n    key: \"getAppointmentDefaultOffset\",\n    value: function getAppointmentDefaultOffset() {\n      return ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET;\n    }\n  }, {\n    key: \"getDynamicAppointmentCountPerCell\",\n    value: function getDynamicAppointmentCountPerCell() {\n      var renderingStrategy = this.getRenderingStrategy();\n\n      if (renderingStrategy.hasAllDayAppointments()) {\n        return {\n          allDay: 0,\n          simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\n        };\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function getDropDownAppointmentHeight() {\n      return COLLECTOR_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"_getAppointmentMinCount\",\n    value: function _getAppointmentMinCount() {\n      return 0;\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function _getAppointmentDefaultWidth() {\n      var renderingStrategy = this.getRenderingStrategy();\n\n      if (renderingStrategy.hasAllDayAppointments()) {\n        return ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH;\n      }\n\n      return _get(_getPrototypeOf(AdaptivePositioningStrategy.prototype), \"_getAppointmentDefaultWidth\", this).call(this);\n    }\n  }, {\n    key: \"_calculateDynamicAppointmentCountPerCell\",\n    value: function _calculateDynamicAppointmentCountPerCell() {\n      return Math.floor(this.getRenderingStrategy()._getAppointmentMaxWidth() / this.getRenderingStrategy()._getAppointmentDefaultWidth());\n    }\n  }]);\n\n  return AdaptivePositioningStrategy;\n}(BasePositioningStrategy);\n\nexport default AdaptivePositioningStrategy;","map":null,"metadata":{},"sourceType":"module"}