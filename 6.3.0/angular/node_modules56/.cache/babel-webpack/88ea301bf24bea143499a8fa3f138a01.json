{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/widget_collector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../../../core/utils/iterator\";\n\nvar WidgetCollector = /*#__PURE__*/function () {\n  function WidgetCollector() {\n    _classCallCheck(this, WidgetCollector);\n\n    this._collection = [];\n  }\n\n  _createClass(WidgetCollector, [{\n    key: \"clear\",\n    value: function clear() {\n      this._collection = [];\n    }\n  }, {\n    key: \"add\",\n    value: function add(name, instance) {\n      this._collection.push({\n        name: name,\n        instance: instance\n      });\n    }\n  }, {\n    key: \"getByName\",\n    value: function getByName(widgetName) {\n      var widget = null;\n      each(this._collection, function (index, _ref) {\n        var name = _ref.name,\n            instance = _ref.instance;\n\n        if (name === widgetName) {\n          widget = instance;\n          return false;\n        }\n      });\n      return widget;\n    }\n  }, {\n    key: \"each\",\n    value: function each(handler) {\n      this._collection.forEach(function (_ref2) {\n        var name = _ref2.name,\n            instance = _ref2.instance;\n        return instance && handler(name, instance);\n      });\n    }\n  }]);\n\n  return WidgetCollector;\n}();\n\nexport { WidgetCollector as default };","map":null,"metadata":{},"sourceType":"module"}