{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.delete_item.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport messageLocalization from \"../../localization/message\";\nimport ScrollView from \"../scroll_view\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog.js\";\nvar FILE_MANAGER_DIALOG_DELETE_ITEM = \"dx-filemanager-dialog-delete-item\";\nvar FILE_MANAGER_DIALOG_DELETE_ITEM_POPUP = \"dx-filemanager-dialog-delete-item-popup\";\n\nvar FileManagerDeleteItemDialog = /*#__PURE__*/function (_FileManagerDialogBas) {\n  _inherits(FileManagerDeleteItemDialog, _FileManagerDialogBas);\n\n  var _super = _createSuper(FileManagerDeleteItemDialog);\n\n  function FileManagerDeleteItemDialog() {\n    _classCallCheck(this, FileManagerDeleteItemDialog);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerDeleteItemDialog, [{\n    key: \"show\",\n    value: function show(_ref) {\n      var itemName = _ref.itemName,\n          itemCount = _ref.itemCount;\n      var text = 1 === itemCount ? messageLocalization.format(\"dxFileManager-dialogDeleteItemSingleItemConfirmation\", itemName) : messageLocalization.format(\"dxFileManager-dialogDeleteItemMultipleItemsConfirmation\", itemCount);\n\n      if (this._$text) {\n        this._$text.text(text);\n      } else {\n        this._initialText = text;\n      }\n\n      _get(_getPrototypeOf(FileManagerDeleteItemDialog.prototype), \"show\", this).call(this);\n    }\n  }, {\n    key: \"_getDialogOptions\",\n    value: function _getDialogOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerDeleteItemDialog.prototype), \"_getDialogOptions\", this).call(this), {\n        title: messageLocalization.format(\"dxFileManager-dialogDeleteItemTitle\"),\n        buttonText: messageLocalization.format(\"dxFileManager-dialogDeleteItemButtonText\"),\n        contentCssClass: FILE_MANAGER_DIALOG_DELETE_ITEM,\n        popupCssClass: FILE_MANAGER_DIALOG_DELETE_ITEM_POPUP,\n        height: \"auto\",\n        maxHeight: \"80vh\"\n      });\n    }\n  }, {\n    key: \"_createContentTemplate\",\n    value: function _createContentTemplate(element) {\n      _get(_getPrototypeOf(FileManagerDeleteItemDialog.prototype), \"_createContentTemplate\", this).call(this, element);\n\n      this._$text = $(\"<div>\").text(this._initialText).appendTo(this._$contentElement);\n\n      this._createComponent(this._$contentElement, ScrollView, {\n        width: \"100%\",\n        height: \"100%\"\n      });\n    }\n  }, {\n    key: \"_getDialogResult\",\n    value: function _getDialogResult() {\n      return {};\n    }\n  }]);\n\n  return FileManagerDeleteItemDialog;\n}(FileManagerDialogBase);\n\nexport default FileManagerDeleteItemDialog;","map":null,"metadata":{},"sourceType":"module"}