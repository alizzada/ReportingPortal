{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.file_uploader.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport Guid from \"../../core/guid\";\nimport Widget from \"../widget/ui.widget\";\nimport FileUploader from \"../file_uploader\";\nimport { whenSome } from \"./ui.file_manager.common\";\nvar FILE_MANAGER_FILE_UPLOADER_CLASS = \"dx-filemanager-fileuploader\";\nvar FILE_MANAGER_FILE_UPLOADER_DROPZONE_PLACEHOLER_CLASS = \"dx-filemanager-fileuploader-dropzone-placeholder\";\n\nvar FileManagerFileUploader = /*#__PURE__*/function (_Widget) {\n  _inherits(FileManagerFileUploader, _Widget);\n\n  var _super = _createSuper(FileManagerFileUploader);\n\n  function FileManagerFileUploader() {\n    _classCallCheck(this, FileManagerFileUploader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerFileUploader, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this._initActions();\n\n      this.$element().addClass(FILE_MANAGER_FILE_UPLOADER_CLASS);\n      this._uploaderInfos = [];\n\n      this._createInternalFileUploader();\n\n      this._createDropZonePlaceholder();\n\n      this._setDropZonePlaceholderVisible(false);\n\n      _get(_getPrototypeOf(FileManagerFileUploader.prototype), \"_initMarkup\", this).call(this);\n    }\n  }, {\n    key: \"_createInternalFileUploader\",\n    value: function _createInternalFileUploader() {\n      var _this = this;\n\n      var chunkSize = this._getController().chunkSize;\n\n      var $fileUploader = $(\"<div>\").appendTo(this.$element());\n\n      var fileUploader = this._createComponent($fileUploader, FileUploader, {\n        name: \"file\",\n        multiple: true,\n        showFileList: false,\n        activeStateEnabled: false,\n        focusStateEnabled: false,\n        hoverStateEnabled: false,\n        labelText: \"\",\n        readyToUploadMessage: \"\",\n        accept: \"*\",\n        chunkSize: chunkSize,\n        dropZone: this.option(\"dropZone\"),\n        onValueChanged: function onValueChanged(e) {\n          return _this._onFileUploaderValueChanged(e);\n        },\n        onProgress: function onProgress(e) {\n          return _this._onFileUploaderProgress(e);\n        },\n        onUploaded: function onUploaded(e) {\n          return _this._onFileUploaderUploaded(e);\n        },\n        onUploadAborted: function onUploadAborted(e) {\n          return _this._onFileUploaderUploadAborted(e);\n        },\n        onUploadError: function onUploadError(e) {\n          return _this._onFileUploaderUploadError(e);\n        },\n        onDropZoneEnter: function onDropZoneEnter() {\n          return _this._setDropZonePlaceholderVisible(true);\n        },\n        onDropZoneLeave: function onDropZoneLeave() {\n          return _this._setDropZonePlaceholderVisible(false);\n        }\n      });\n\n      fileUploader.option({\n        uploadChunk: function uploadChunk(file, chunksData) {\n          return _this._fileUploaderUploadChunk(fileUploader, file, chunksData);\n        },\n        abortUpload: function abortUpload(file, chunksData) {\n          return _this._fileUploaderAbortUpload(fileUploader, file, chunksData);\n        }\n      });\n      var uploaderInfo = {\n        fileUploader: fileUploader\n      };\n\n      this._uploaderInfos.push(uploaderInfo);\n    }\n  }, {\n    key: \"tryUpload\",\n    value: function tryUpload() {\n      var info = this._findAndUpdateAvailableUploaderInfo();\n\n      if (info) {\n        info.fileUploader._selectButtonClickHandler();\n      }\n    }\n  }, {\n    key: \"cancelUpload\",\n    value: function cancelUpload(sessionId) {\n      this._cancelUpload(sessionId);\n    }\n  }, {\n    key: \"cancelFileUpload\",\n    value: function cancelFileUpload(sessionId, fileIndex) {\n      this._cancelUpload(sessionId, fileIndex);\n    }\n  }, {\n    key: \"_cancelUpload\",\n    value: function _cancelUpload(sessionId, fileIndex) {\n      var _this$_findUploaderIn = this._findUploaderInfoBySessionId(sessionId),\n          fileUploader = _this$_findUploaderIn.fileUploader;\n\n      fileUploader.abortUpload(fileIndex);\n    }\n  }, {\n    key: \"_fileUploaderUploadChunk\",\n    value: function _fileUploaderUploadChunk(fileUploader, file, chunksInfo) {\n      var _this$_findSessionByF = this._findSessionByFile(fileUploader, file),\n          session = _this$_findSessionByF.session,\n          fileIndex = _this$_findSessionByF.fileIndex;\n\n      var controller = session.controller;\n      chunksInfo.fileIndex = fileIndex;\n      return controller.uploadFileChunk(file, chunksInfo);\n    }\n  }, {\n    key: \"_fileUploaderAbortUpload\",\n    value: function _fileUploaderAbortUpload(fileUploader, file, chunksInfo) {\n      var _this$_findSessionByF2 = this._findSessionByFile(fileUploader, file),\n          session = _this$_findSessionByF2.session,\n          fileIndex = _this$_findSessionByF2.fileIndex;\n\n      var controller = session.controller;\n      chunksInfo.fileIndex = fileIndex;\n      return controller.abortFileUpload(file, chunksInfo);\n    }\n  }, {\n    key: \"_onFileUploaderValueChanged\",\n    value: function _onFileUploaderValueChanged(_ref) {\n      var _this2 = this;\n\n      var component = _ref.component,\n          value = _ref.value;\n\n      if (0 === value.length) {\n        return;\n      }\n\n      var files = value.slice();\n\n      var uploaderInfo = this._findUploaderInfo(component);\n\n      this._uploadFiles(uploaderInfo, files);\n\n      setTimeout(function () {\n        if (!_this2._findAndUpdateAvailableUploaderInfo()) {\n          _this2._createInternalFileUploader();\n        }\n      });\n    }\n  }, {\n    key: \"_onFileUploaderProgress\",\n    value: function _onFileUploaderProgress(_ref2) {\n      var component = _ref2.component,\n          file = _ref2.file,\n          bytesLoaded = _ref2.bytesLoaded,\n          bytesTotal = _ref2.bytesTotal;\n\n      var _this$_findSessionByF3 = this._findSessionByFile(component, file),\n          session = _this$_findSessionByF3.session,\n          fileIndex = _this$_findSessionByF3.fileIndex;\n\n      var fileValue = 0 !== bytesTotal ? bytesLoaded / bytesTotal : 1;\n      var commonValue = component.option(\"progress\") / 100;\n      var args = {\n        sessionId: session.id,\n        fileIndex: fileIndex,\n        commonValue: commonValue,\n        fileValue: fileValue\n      };\n\n      this._raiseUploadProgress(args);\n    }\n  }, {\n    key: \"_onFileUploaderUploaded\",\n    value: function _onFileUploaderUploaded(_ref3) {\n      var component = _ref3.component,\n          file = _ref3.file;\n\n      var deferred = this._getDeferredForFile(component, file);\n\n      deferred.resolve();\n    }\n  }, {\n    key: \"_onFileUploaderUploadAborted\",\n    value: function _onFileUploaderUploadAborted(_ref4) {\n      var component = _ref4.component,\n          file = _ref4.file;\n\n      var deferred = this._getDeferredForFile(component, file);\n\n      deferred.resolve({\n        canceled: true\n      });\n    }\n  }, {\n    key: \"_onFileUploaderUploadError\",\n    value: function _onFileUploaderUploadError(_ref5) {\n      var component = _ref5.component,\n          file = _ref5.file,\n          error = _ref5.error;\n\n      var deferred = this._getDeferredForFile(component, file);\n\n      deferred.reject(error);\n    }\n  }, {\n    key: \"_createDropZonePlaceholder\",\n    value: function _createDropZonePlaceholder() {\n      this._$dropZonePlaceholder = $(\"<div>\").addClass(FILE_MANAGER_FILE_UPLOADER_DROPZONE_PLACEHOLER_CLASS).appendTo(this.option(\"dropZonePlaceholderContainer\"));\n    }\n  }, {\n    key: \"_adjustDropZonePlaceholder\",\n    value: function _adjustDropZonePlaceholder() {\n      if (!hasWindow()) {\n        return;\n      }\n\n      var $dropZoneTarget = this.option(\"dropZone\");\n      var placeholderBorderTopWidth = parseFloat(this._$dropZonePlaceholder.css(\"borderTopWidth\"));\n      var placeholderBorderLeftWidth = parseFloat(this._$dropZonePlaceholder.css(\"borderLeftWidth\"));\n      var $placeholderContainer = this.option(\"dropZonePlaceholderContainer\");\n      var containerBorderBottomWidth = parseFloat($placeholderContainer.css(\"borderBottomWidth\"));\n      var containerBorderLeftWidth = parseFloat($placeholderContainer.css(\"borderLeftWidth\"));\n      var containerHeight = $placeholderContainer.innerHeight();\n      var containerOffset = $placeholderContainer.offset();\n      var dropZoneOffset = $dropZoneTarget.offset();\n\n      this._$dropZonePlaceholder.css({\n        top: dropZoneOffset.top - containerOffset.top - containerHeight - containerBorderBottomWidth,\n        left: dropZoneOffset.left - containerOffset.left - containerBorderLeftWidth\n      });\n\n      this._$dropZonePlaceholder.height($dropZoneTarget.get(0).offsetHeight - 2 * placeholderBorderTopWidth);\n\n      this._$dropZonePlaceholder.width($dropZoneTarget.get(0).offsetWidth - 2 * placeholderBorderLeftWidth);\n    }\n  }, {\n    key: \"_setDropZonePlaceholderVisible\",\n    value: function _setDropZonePlaceholderVisible(visible) {\n      if (visible) {\n        this._adjustDropZonePlaceholder();\n\n        this._$dropZonePlaceholder.css(\"display\", \"\");\n      } else {\n        this._$dropZonePlaceholder.css(\"display\", \"none\");\n      }\n    }\n  }, {\n    key: \"_uploadFiles\",\n    value: function _uploadFiles(uploaderInfo, files) {\n      this._setDropZonePlaceholderVisible(false);\n\n      var sessionId = new Guid().toString();\n\n      var controller = this._getController();\n\n      var deferreds = files.map(function () {\n        return new Deferred();\n      });\n      var session = {\n        id: sessionId,\n        controller: controller,\n        files: files,\n        deferreds: deferreds\n      };\n      uploaderInfo.session = session;\n      var sessionInfo = {\n        sessionId: sessionId,\n        deferreds: deferreds,\n        files: files\n      };\n\n      this._raiseUploadSessionStarted(sessionInfo);\n\n      return whenSome(deferreds).always(function () {\n        return setTimeout(function () {\n          uploaderInfo.fileUploader.reset();\n          uploaderInfo.session = null;\n        });\n      });\n    }\n  }, {\n    key: \"_getDeferredForFile\",\n    value: function _getDeferredForFile(fileUploader, file) {\n      var _this$_findSessionByF4 = this._findSessionByFile(fileUploader, file),\n          session = _this$_findSessionByF4.session,\n          fileIndex = _this$_findSessionByF4.fileIndex;\n\n      return session.deferreds[fileIndex];\n    }\n  }, {\n    key: \"_findSessionByFile\",\n    value: function _findSessionByFile(fileUploader, file) {\n      var uploaderInfo = this._findUploaderInfo(fileUploader);\n\n      var session = uploaderInfo.session;\n      var fileIndex = session.files.indexOf(file);\n      return {\n        session: session,\n        fileIndex: fileIndex\n      };\n    }\n  }, {\n    key: \"_findUploaderInfoBySessionId\",\n    value: function _findUploaderInfoBySessionId(sessionId) {\n      for (var i = 0; i < this._uploaderInfos.length; i++) {\n        var uploaderInfo = this._uploaderInfos[i];\n        var session = uploaderInfo.session;\n\n        if (session && session.id === sessionId) {\n          return uploaderInfo;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_findAndUpdateAvailableUploaderInfo\",\n    value: function _findAndUpdateAvailableUploaderInfo() {\n      var _info;\n\n      var info = null;\n\n      for (var i = 0; i < this._uploaderInfos.length; i++) {\n        var currentInfo = this._uploaderInfos[i];\n        currentInfo.fileUploader.option(\"dropZone\", \"\");\n\n        if (!info && !currentInfo.session) {\n          info = currentInfo;\n        }\n      }\n\n      null === (_info = info) || void 0 === _info ? void 0 : _info.fileUploader.option(\"dropZone\", this.option(\"dropZone\"));\n      return info;\n    }\n  }, {\n    key: \"_findUploaderInfo\",\n    value: function _findUploaderInfo(fileUploader) {\n      for (var i = 0; i < this._uploaderInfos.length; i++) {\n        var info = this._uploaderInfos[i];\n\n        if (info.fileUploader === fileUploader) {\n          return info;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getController\",\n    value: function _getController() {\n      var controllerGetter = this.option(\"getController\");\n      return controllerGetter();\n    }\n  }, {\n    key: \"_raiseUploadSessionStarted\",\n    value: function _raiseUploadSessionStarted(sessionInfo) {\n      this._actions.onUploadSessionStarted({\n        sessionInfo: sessionInfo\n      });\n    }\n  }, {\n    key: \"_raiseUploadProgress\",\n    value: function _raiseUploadProgress(args) {\n      this._actions.onUploadProgress(args);\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onUploadSessionStarted: this._createActionByOption(\"onUploadSessionStarted\"),\n        onUploadProgress: this._createActionByOption(\"onUploadProgress\")\n      };\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerFileUploader.prototype), \"_getDefaultOptions\", this).call(this), {\n        getController: null,\n        onUploadSessionStarted: null,\n        onUploadProgress: null\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"getController\":\n          this.repaint();\n          break;\n\n        case \"onUploadSessionStarted\":\n        case \"onUploadProgress\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        case \"dropZone\":\n          this._findAndUpdateAvailableUploaderInfo();\n\n          this._adjustDropZonePlaceholder();\n\n          break;\n\n        case \"dropZonePlaceholderContainer\":\n          this._$dropZonePlaceholder.detach();\n\n          this._$dropZonePlaceholder.appendTo(args.value);\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerFileUploader.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return FileManagerFileUploader;\n}(Widget);\n\nexport default FileManagerFileUploader;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.file_uploader.js"],"names":["$","extend","Deferred","hasWindow","Guid","Widget","FileUploader","whenSome","FILE_MANAGER_FILE_UPLOADER_CLASS","FILE_MANAGER_FILE_UPLOADER_DROPZONE_PLACEHOLER_CLASS","FileManagerFileUploader","_initActions","$element","addClass","_uploaderInfos","_createInternalFileUploader","_createDropZonePlaceholder","_setDropZonePlaceholderVisible","chunkSize","_getController","$fileUploader","appendTo","fileUploader","_createComponent","name","multiple","showFileList","activeStateEnabled","focusStateEnabled","hoverStateEnabled","labelText","readyToUploadMessage","accept","dropZone","option","onValueChanged","e","_onFileUploaderValueChanged","onProgress","_onFileUploaderProgress","onUploaded","_onFileUploaderUploaded","onUploadAborted","_onFileUploaderUploadAborted","onUploadError","_onFileUploaderUploadError","onDropZoneEnter","onDropZoneLeave","uploadChunk","file","chunksData","_fileUploaderUploadChunk","abortUpload","_fileUploaderAbortUpload","uploaderInfo","push","info","_findAndUpdateAvailableUploaderInfo","_selectButtonClickHandler","sessionId","_cancelUpload","fileIndex","_findUploaderInfoBySessionId","chunksInfo","_findSessionByFile","session","controller","uploadFileChunk","abortFileUpload","_ref","component","value","length","files","slice","_findUploaderInfo","_uploadFiles","setTimeout","_ref2","bytesLoaded","bytesTotal","fileValue","commonValue","args","id","_raiseUploadProgress","_ref3","deferred","_getDeferredForFile","resolve","_ref4","canceled","_ref5","error","reject","_$dropZonePlaceholder","$dropZoneTarget","placeholderBorderTopWidth","parseFloat","css","placeholderBorderLeftWidth","$placeholderContainer","containerBorderBottomWidth","containerBorderLeftWidth","containerHeight","innerHeight","containerOffset","offset","dropZoneOffset","top","left","height","get","offsetHeight","width","offsetWidth","visible","_adjustDropZonePlaceholder","toString","deferreds","map","sessionInfo","_raiseUploadSessionStarted","always","reset","indexOf","i","_info","currentInfo","controllerGetter","_actions","onUploadSessionStarted","onUploadProgress","_createActionByOption","getController","repaint","detach"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.file_uploader.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport Guid from \"../../core/guid\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport FileUploader from \"../file_uploader\";\r\nimport {\r\n    whenSome\r\n} from \"./ui.file_manager.common\";\r\nvar FILE_MANAGER_FILE_UPLOADER_CLASS = \"dx-filemanager-fileuploader\";\r\nvar FILE_MANAGER_FILE_UPLOADER_DROPZONE_PLACEHOLER_CLASS = \"dx-filemanager-fileuploader-dropzone-placeholder\";\r\nclass FileManagerFileUploader extends Widget {\r\n    _initMarkup() {\r\n        this._initActions();\r\n        this.$element().addClass(FILE_MANAGER_FILE_UPLOADER_CLASS);\r\n        this._uploaderInfos = [];\r\n        this._createInternalFileUploader();\r\n        this._createDropZonePlaceholder();\r\n        this._setDropZonePlaceholderVisible(false);\r\n        super._initMarkup()\r\n    }\r\n    _createInternalFileUploader() {\r\n        var chunkSize = this._getController().chunkSize;\r\n        var $fileUploader = $(\"<div>\").appendTo(this.$element());\r\n        var fileUploader = this._createComponent($fileUploader, FileUploader, {\r\n            name: \"file\",\r\n            multiple: true,\r\n            showFileList: false,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            labelText: \"\",\r\n            readyToUploadMessage: \"\",\r\n            accept: \"*\",\r\n            chunkSize: chunkSize,\r\n            dropZone: this.option(\"dropZone\"),\r\n            onValueChanged: e => this._onFileUploaderValueChanged(e),\r\n            onProgress: e => this._onFileUploaderProgress(e),\r\n            onUploaded: e => this._onFileUploaderUploaded(e),\r\n            onUploadAborted: e => this._onFileUploaderUploadAborted(e),\r\n            onUploadError: e => this._onFileUploaderUploadError(e),\r\n            onDropZoneEnter: () => this._setDropZonePlaceholderVisible(true),\r\n            onDropZoneLeave: () => this._setDropZonePlaceholderVisible(false)\r\n        });\r\n        fileUploader.option({\r\n            uploadChunk: (file, chunksData) => this._fileUploaderUploadChunk(fileUploader, file, chunksData),\r\n            abortUpload: (file, chunksData) => this._fileUploaderAbortUpload(fileUploader, file, chunksData)\r\n        });\r\n        var uploaderInfo = {\r\n            fileUploader: fileUploader\r\n        };\r\n        this._uploaderInfos.push(uploaderInfo)\r\n    }\r\n    tryUpload() {\r\n        var info = this._findAndUpdateAvailableUploaderInfo();\r\n        if (info) {\r\n            info.fileUploader._selectButtonClickHandler()\r\n        }\r\n    }\r\n    cancelUpload(sessionId) {\r\n        this._cancelUpload(sessionId)\r\n    }\r\n    cancelFileUpload(sessionId, fileIndex) {\r\n        this._cancelUpload(sessionId, fileIndex)\r\n    }\r\n    _cancelUpload(sessionId, fileIndex) {\r\n        var {\r\n            fileUploader: fileUploader\r\n        } = this._findUploaderInfoBySessionId(sessionId);\r\n        fileUploader.abortUpload(fileIndex)\r\n    }\r\n    _fileUploaderUploadChunk(fileUploader, file, chunksInfo) {\r\n        var {\r\n            session: session,\r\n            fileIndex: fileIndex\r\n        } = this._findSessionByFile(fileUploader, file);\r\n        var controller = session.controller;\r\n        chunksInfo.fileIndex = fileIndex;\r\n        return controller.uploadFileChunk(file, chunksInfo)\r\n    }\r\n    _fileUploaderAbortUpload(fileUploader, file, chunksInfo) {\r\n        var {\r\n            session: session,\r\n            fileIndex: fileIndex\r\n        } = this._findSessionByFile(fileUploader, file);\r\n        var controller = session.controller;\r\n        chunksInfo.fileIndex = fileIndex;\r\n        return controller.abortFileUpload(file, chunksInfo)\r\n    }\r\n    _onFileUploaderValueChanged(_ref) {\r\n        var {\r\n            component: component,\r\n            value: value\r\n        } = _ref;\r\n        if (0 === value.length) {\r\n            return\r\n        }\r\n        var files = value.slice();\r\n        var uploaderInfo = this._findUploaderInfo(component);\r\n        this._uploadFiles(uploaderInfo, files);\r\n        setTimeout(() => {\r\n            if (!this._findAndUpdateAvailableUploaderInfo()) {\r\n                this._createInternalFileUploader()\r\n            }\r\n        })\r\n    }\r\n    _onFileUploaderProgress(_ref2) {\r\n        var {\r\n            component: component,\r\n            file: file,\r\n            bytesLoaded: bytesLoaded,\r\n            bytesTotal: bytesTotal\r\n        } = _ref2;\r\n        var {\r\n            session: session,\r\n            fileIndex: fileIndex\r\n        } = this._findSessionByFile(component, file);\r\n        var fileValue = 0 !== bytesTotal ? bytesLoaded / bytesTotal : 1;\r\n        var commonValue = component.option(\"progress\") / 100;\r\n        var args = {\r\n            sessionId: session.id,\r\n            fileIndex: fileIndex,\r\n            commonValue: commonValue,\r\n            fileValue: fileValue\r\n        };\r\n        this._raiseUploadProgress(args)\r\n    }\r\n    _onFileUploaderUploaded(_ref3) {\r\n        var {\r\n            component: component,\r\n            file: file\r\n        } = _ref3;\r\n        var deferred = this._getDeferredForFile(component, file);\r\n        deferred.resolve()\r\n    }\r\n    _onFileUploaderUploadAborted(_ref4) {\r\n        var {\r\n            component: component,\r\n            file: file\r\n        } = _ref4;\r\n        var deferred = this._getDeferredForFile(component, file);\r\n        deferred.resolve({\r\n            canceled: true\r\n        })\r\n    }\r\n    _onFileUploaderUploadError(_ref5) {\r\n        var {\r\n            component: component,\r\n            file: file,\r\n            error: error\r\n        } = _ref5;\r\n        var deferred = this._getDeferredForFile(component, file);\r\n        deferred.reject(error)\r\n    }\r\n    _createDropZonePlaceholder() {\r\n        this._$dropZonePlaceholder = $(\"<div>\").addClass(FILE_MANAGER_FILE_UPLOADER_DROPZONE_PLACEHOLER_CLASS).appendTo(this.option(\"dropZonePlaceholderContainer\"))\r\n    }\r\n    _adjustDropZonePlaceholder() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var $dropZoneTarget = this.option(\"dropZone\");\r\n        var placeholderBorderTopWidth = parseFloat(this._$dropZonePlaceholder.css(\"borderTopWidth\"));\r\n        var placeholderBorderLeftWidth = parseFloat(this._$dropZonePlaceholder.css(\"borderLeftWidth\"));\r\n        var $placeholderContainer = this.option(\"dropZonePlaceholderContainer\");\r\n        var containerBorderBottomWidth = parseFloat($placeholderContainer.css(\"borderBottomWidth\"));\r\n        var containerBorderLeftWidth = parseFloat($placeholderContainer.css(\"borderLeftWidth\"));\r\n        var containerHeight = $placeholderContainer.innerHeight();\r\n        var containerOffset = $placeholderContainer.offset();\r\n        var dropZoneOffset = $dropZoneTarget.offset();\r\n        this._$dropZonePlaceholder.css({\r\n            top: dropZoneOffset.top - containerOffset.top - containerHeight - containerBorderBottomWidth,\r\n            left: dropZoneOffset.left - containerOffset.left - containerBorderLeftWidth\r\n        });\r\n        this._$dropZonePlaceholder.height($dropZoneTarget.get(0).offsetHeight - 2 * placeholderBorderTopWidth);\r\n        this._$dropZonePlaceholder.width($dropZoneTarget.get(0).offsetWidth - 2 * placeholderBorderLeftWidth)\r\n    }\r\n    _setDropZonePlaceholderVisible(visible) {\r\n        if (visible) {\r\n            this._adjustDropZonePlaceholder();\r\n            this._$dropZonePlaceholder.css(\"display\", \"\")\r\n        } else {\r\n            this._$dropZonePlaceholder.css(\"display\", \"none\")\r\n        }\r\n    }\r\n    _uploadFiles(uploaderInfo, files) {\r\n        this._setDropZonePlaceholderVisible(false);\r\n        var sessionId = (new Guid).toString();\r\n        var controller = this._getController();\r\n        var deferreds = files.map(() => new Deferred);\r\n        var session = {\r\n            id: sessionId,\r\n            controller: controller,\r\n            files: files,\r\n            deferreds: deferreds\r\n        };\r\n        uploaderInfo.session = session;\r\n        var sessionInfo = {\r\n            sessionId: sessionId,\r\n            deferreds: deferreds,\r\n            files: files\r\n        };\r\n        this._raiseUploadSessionStarted(sessionInfo);\r\n        return whenSome(deferreds).always(() => setTimeout(() => {\r\n            uploaderInfo.fileUploader.reset();\r\n            uploaderInfo.session = null\r\n        }))\r\n    }\r\n    _getDeferredForFile(fileUploader, file) {\r\n        var {\r\n            session: session,\r\n            fileIndex: fileIndex\r\n        } = this._findSessionByFile(fileUploader, file);\r\n        return session.deferreds[fileIndex]\r\n    }\r\n    _findSessionByFile(fileUploader, file) {\r\n        var uploaderInfo = this._findUploaderInfo(fileUploader);\r\n        var session = uploaderInfo.session;\r\n        var fileIndex = session.files.indexOf(file);\r\n        return {\r\n            session: session,\r\n            fileIndex: fileIndex\r\n        }\r\n    }\r\n    _findUploaderInfoBySessionId(sessionId) {\r\n        for (var i = 0; i < this._uploaderInfos.length; i++) {\r\n            var uploaderInfo = this._uploaderInfos[i];\r\n            var session = uploaderInfo.session;\r\n            if (session && session.id === sessionId) {\r\n                return uploaderInfo\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    _findAndUpdateAvailableUploaderInfo() {\r\n        var _info;\r\n        var info = null;\r\n        for (var i = 0; i < this._uploaderInfos.length; i++) {\r\n            var currentInfo = this._uploaderInfos[i];\r\n            currentInfo.fileUploader.option(\"dropZone\", \"\");\r\n            if (!info && !currentInfo.session) {\r\n                info = currentInfo\r\n            }\r\n        }\r\n        null === (_info = info) || void 0 === _info ? void 0 : _info.fileUploader.option(\"dropZone\", this.option(\"dropZone\"));\r\n        return info\r\n    }\r\n    _findUploaderInfo(fileUploader) {\r\n        for (var i = 0; i < this._uploaderInfos.length; i++) {\r\n            var info = this._uploaderInfos[i];\r\n            if (info.fileUploader === fileUploader) {\r\n                return info\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    _getController() {\r\n        var controllerGetter = this.option(\"getController\");\r\n        return controllerGetter()\r\n    }\r\n    _raiseUploadSessionStarted(sessionInfo) {\r\n        this._actions.onUploadSessionStarted({\r\n            sessionInfo: sessionInfo\r\n        })\r\n    }\r\n    _raiseUploadProgress(args) {\r\n        this._actions.onUploadProgress(args)\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onUploadSessionStarted: this._createActionByOption(\"onUploadSessionStarted\"),\r\n            onUploadProgress: this._createActionByOption(\"onUploadProgress\")\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            getController: null,\r\n            onUploadSessionStarted: null,\r\n            onUploadProgress: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"getController\":\r\n                this.repaint();\r\n                break;\r\n            case \"onUploadSessionStarted\":\r\n            case \"onUploadProgress\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            case \"dropZone\":\r\n                this._findAndUpdateAvailableUploaderInfo();\r\n                this._adjustDropZonePlaceholder();\r\n                break;\r\n            case \"dropZonePlaceholderContainer\":\r\n                this._$dropZonePlaceholder.detach();\r\n                this._$dropZonePlaceholder.appendTo(args.value);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default FileManagerFileUploader;\r\n"]},"metadata":{},"sourceType":"module"}