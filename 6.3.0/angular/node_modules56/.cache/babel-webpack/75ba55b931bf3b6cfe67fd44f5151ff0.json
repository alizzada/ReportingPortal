{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, HostListener, Component, NgModule } from '@angular/core';\nimport DxFileUploader from 'devextreme/ui/file_uploader';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DxFileUploaderComponent;\n  }),\n  multi: true\n};\n\nvar DxFileUploaderComponent = /*@__PURE__*/function () {\n  /**\n   * The FileUploader UI component enables an end user to upload files to the server. An end user can select files in the file explorer or drag and drop files to the FileUploader area on the page.\n  \r\n   */\n  var DxFileUploaderComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxFileUploaderComponent, _DxComponent);\n\n    var _super = _createSuper(DxFileUploaderComponent);\n\n    function DxFileUploaderComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxFileUploaderComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this.touched = function (_) {};\n\n      _this._createEventEmitters([{\n        subscribe: 'beforeSend',\n        emit: 'onBeforeSend'\n      }, {\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'dropZoneEnter',\n        emit: 'onDropZoneEnter'\n      }, {\n        subscribe: 'dropZoneLeave',\n        emit: 'onDropZoneLeave'\n      }, {\n        subscribe: 'filesUploaded',\n        emit: 'onFilesUploaded'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'progress',\n        emit: 'onProgress'\n      }, {\n        subscribe: 'uploadAborted',\n        emit: 'onUploadAborted'\n      }, {\n        subscribe: 'uploaded',\n        emit: 'onUploaded'\n      }, {\n        subscribe: 'uploadError',\n        emit: 'onUploadError'\n      }, {\n        subscribe: 'uploadStarted',\n        emit: 'onUploadStarted'\n      }, {\n        subscribe: 'valueChanged',\n        emit: 'onValueChanged'\n      }, {\n        emit: 'abortUploadChange'\n      }, {\n        emit: 'acceptChange'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'allowCancelingChange'\n      }, {\n        emit: 'allowedFileExtensionsChange'\n      }, {\n        emit: 'chunkSizeChange'\n      }, {\n        emit: 'dialogTriggerChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'dropZoneChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'inputAttrChange'\n      }, {\n        emit: 'invalidFileExtensionMessageChange'\n      }, {\n        emit: 'invalidMaxFileSizeMessageChange'\n      }, {\n        emit: 'invalidMinFileSizeMessageChange'\n      }, {\n        emit: 'isValidChange'\n      }, {\n        emit: 'labelTextChange'\n      }, {\n        emit: 'maxFileSizeChange'\n      }, {\n        emit: 'minFileSizeChange'\n      }, {\n        emit: 'multipleChange'\n      }, {\n        emit: 'nameChange'\n      }, {\n        emit: 'progressChange'\n      }, {\n        emit: 'readOnlyChange'\n      }, {\n        emit: 'readyToUploadMessageChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'selectButtonTextChange'\n      }, {\n        emit: 'showFileListChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'uploadAbortedMessageChange'\n      }, {\n        emit: 'uploadButtonTextChange'\n      }, {\n        emit: 'uploadChunkChange'\n      }, {\n        emit: 'uploadCustomDataChange'\n      }, {\n        emit: 'uploadedMessageChange'\n      }, {\n        emit: 'uploadFailedMessageChange'\n      }, {\n        emit: 'uploadFileChange'\n      }, {\n        emit: 'uploadHeadersChange'\n      }, {\n        emit: 'uploadMethodChange'\n      }, {\n        emit: 'uploadModeChange'\n      }, {\n        emit: 'uploadUrlChange'\n      }, {\n        emit: 'validationErrorChange'\n      }, {\n        emit: 'validationErrorsChange'\n      }, {\n        emit: 'validationStatusChange'\n      }, {\n        emit: 'valueChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'onBlur'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxFileUploaderComponent, [{\n      key: \"abortUpload\",\n      get: function get() {\n        return this._getOption('abortUpload');\n      },\n      set: function set(value) {\n        this._setOption('abortUpload', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"accept\",\n      get: function get() {\n        return this._getOption('accept');\n      },\n      set: function set(value) {\n        this._setOption('accept', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"allowCanceling\",\n      get: function get() {\n        return this._getOption('allowCanceling');\n      },\n      set: function set(value) {\n        this._setOption('allowCanceling', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"allowedFileExtensions\",\n      get: function get() {\n        return this._getOption('allowedFileExtensions');\n      },\n      set: function set(value) {\n        this._setOption('allowedFileExtensions', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"chunkSize\",\n      get: function get() {\n        return this._getOption('chunkSize');\n      },\n      set: function set(value) {\n        this._setOption('chunkSize', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dialogTrigger\",\n      get: function get() {\n        return this._getOption('dialogTrigger');\n      },\n      set: function set(value) {\n        this._setOption('dialogTrigger', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dropZone\",\n      get: function get() {\n        return this._getOption('dropZone');\n      },\n      set: function set(value) {\n        this._setOption('dropZone', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"inputAttr\",\n      get: function get() {\n        return this._getOption('inputAttr');\n      },\n      set: function set(value) {\n        this._setOption('inputAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"invalidFileExtensionMessage\",\n      get: function get() {\n        return this._getOption('invalidFileExtensionMessage');\n      },\n      set: function set(value) {\n        this._setOption('invalidFileExtensionMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"invalidMaxFileSizeMessage\",\n      get: function get() {\n        return this._getOption('invalidMaxFileSizeMessage');\n      },\n      set: function set(value) {\n        this._setOption('invalidMaxFileSizeMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"invalidMinFileSizeMessage\",\n      get: function get() {\n        return this._getOption('invalidMinFileSizeMessage');\n      },\n      set: function set(value) {\n        this._setOption('invalidMinFileSizeMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this._getOption('isValid');\n      },\n      set: function set(value) {\n        this._setOption('isValid', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"labelText\",\n      get: function get() {\n        return this._getOption('labelText');\n      },\n      set: function set(value) {\n        this._setOption('labelText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"maxFileSize\",\n      get: function get() {\n        return this._getOption('maxFileSize');\n      },\n      set: function set(value) {\n        this._setOption('maxFileSize', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"minFileSize\",\n      get: function get() {\n        return this._getOption('minFileSize');\n      },\n      set: function set(value) {\n        this._setOption('minFileSize', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"multiple\",\n      get: function get() {\n        return this._getOption('multiple');\n      },\n      set: function set(value) {\n        this._setOption('multiple', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this._getOption('name');\n      },\n      set: function set(value) {\n        this._setOption('name', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"progress\",\n      get: function get() {\n        return this._getOption('progress');\n      },\n      set: function set(value) {\n        this._setOption('progress', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"readOnly\",\n      get: function get() {\n        return this._getOption('readOnly');\n      },\n      set: function set(value) {\n        this._setOption('readOnly', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"readyToUploadMessage\",\n      get: function get() {\n        return this._getOption('readyToUploadMessage');\n      },\n      set: function set(value) {\n        this._setOption('readyToUploadMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectButtonText\",\n      get: function get() {\n        return this._getOption('selectButtonText');\n      },\n      set: function set(value) {\n        this._setOption('selectButtonText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showFileList\",\n      get: function get() {\n        return this._getOption('showFileList');\n      },\n      set: function set(value) {\n        this._setOption('showFileList', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadAbortedMessage\",\n      get: function get() {\n        return this._getOption('uploadAbortedMessage');\n      },\n      set: function set(value) {\n        this._setOption('uploadAbortedMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadButtonText\",\n      get: function get() {\n        return this._getOption('uploadButtonText');\n      },\n      set: function set(value) {\n        this._setOption('uploadButtonText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadChunk\",\n      get: function get() {\n        return this._getOption('uploadChunk');\n      },\n      set: function set(value) {\n        this._setOption('uploadChunk', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadCustomData\",\n      get: function get() {\n        return this._getOption('uploadCustomData');\n      },\n      set: function set(value) {\n        this._setOption('uploadCustomData', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadedMessage\",\n      get: function get() {\n        return this._getOption('uploadedMessage');\n      },\n      set: function set(value) {\n        this._setOption('uploadedMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadFailedMessage\",\n      get: function get() {\n        return this._getOption('uploadFailedMessage');\n      },\n      set: function set(value) {\n        this._setOption('uploadFailedMessage', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadFile\",\n      get: function get() {\n        return this._getOption('uploadFile');\n      },\n      set: function set(value) {\n        this._setOption('uploadFile', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadHeaders\",\n      get: function get() {\n        return this._getOption('uploadHeaders');\n      },\n      set: function set(value) {\n        this._setOption('uploadHeaders', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadMethod\",\n      get: function get() {\n        return this._getOption('uploadMethod');\n      },\n      set: function set(value) {\n        this._setOption('uploadMethod', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadMode\",\n      get: function get() {\n        return this._getOption('uploadMode');\n      },\n      set: function set(value) {\n        this._setOption('uploadMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"uploadUrl\",\n      get: function get() {\n        return this._getOption('uploadUrl');\n      },\n      set: function set(value) {\n        this._setOption('uploadUrl', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationError\",\n      get: function get() {\n        return this._getOption('validationError');\n      },\n      set: function set(value) {\n        this._setOption('validationError', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationErrors\",\n      get: function get() {\n        return this._getOption('validationErrors');\n      },\n      set: function set(value) {\n        this._setOption('validationErrors', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationStatus\",\n      get: function get() {\n        return this._getOption('validationStatus');\n      },\n      set: function set(value) {\n        this._setOption('validationStatus', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._getOption('value');\n      },\n      set: function set(value) {\n        this._setOption('value', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"change\",\n      value: function change(_) {}\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxFileUploader(element, options);\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.eventHelper.lockedValueChangeEvent = true;\n        this.value = value;\n        this.eventHelper.lockedValueChangeEvent = false;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.change = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.touched = fn;\n      }\n    }, {\n      key: \"_createWidget\",\n      value: function _createWidget(element) {\n        var _this2 = this;\n\n        _get(_getPrototypeOf(DxFileUploaderComponent.prototype), \"_createWidget\", this).call(this, element);\n\n        this.instance.on('focusOut', function (e) {\n          _this2.eventHelper.fireNgEvent('onBlur', [e]);\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxFileUploaderComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('allowedFileExtensions', changes);\n        this.setupChanges('validationErrors', changes);\n        this.setupChanges('value', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('allowedFileExtensions');\n\n        this._idh.doCheck('validationErrors');\n\n        this._idh.doCheck('value');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxFileUploaderComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxFileUploaderComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxFileUploaderComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxFileUploaderComponent;\n  }(DxComponent);\n\n  DxFileUploaderComponent.ɵfac = function DxFileUploaderComponent_Factory(t) {\n    return new (t || DxFileUploaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxFileUploaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxFileUploaderComponent,\n    selectors: [[\"dx-file-uploader\"]],\n    hostBindings: function DxFileUploaderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"onBlur\", function DxFileUploaderComponent_onBlur_HostBindingHandler($event) {\n          return ctx.touched($event);\n        })(\"valueChange\", function DxFileUploaderComponent_valueChange_HostBindingHandler($event) {\n          return ctx.change($event);\n        });\n      }\n    },\n    inputs: {\n      abortUpload: \"abortUpload\",\n      accept: \"accept\",\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      allowCanceling: \"allowCanceling\",\n      allowedFileExtensions: \"allowedFileExtensions\",\n      chunkSize: \"chunkSize\",\n      dialogTrigger: \"dialogTrigger\",\n      disabled: \"disabled\",\n      dropZone: \"dropZone\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      inputAttr: \"inputAttr\",\n      invalidFileExtensionMessage: \"invalidFileExtensionMessage\",\n      invalidMaxFileSizeMessage: \"invalidMaxFileSizeMessage\",\n      invalidMinFileSizeMessage: \"invalidMinFileSizeMessage\",\n      isValid: \"isValid\",\n      labelText: \"labelText\",\n      maxFileSize: \"maxFileSize\",\n      minFileSize: \"minFileSize\",\n      multiple: \"multiple\",\n      name: \"name\",\n      progress: \"progress\",\n      readOnly: \"readOnly\",\n      readyToUploadMessage: \"readyToUploadMessage\",\n      rtlEnabled: \"rtlEnabled\",\n      selectButtonText: \"selectButtonText\",\n      showFileList: \"showFileList\",\n      tabIndex: \"tabIndex\",\n      uploadAbortedMessage: \"uploadAbortedMessage\",\n      uploadButtonText: \"uploadButtonText\",\n      uploadChunk: \"uploadChunk\",\n      uploadCustomData: \"uploadCustomData\",\n      uploadedMessage: \"uploadedMessage\",\n      uploadFailedMessage: \"uploadFailedMessage\",\n      uploadFile: \"uploadFile\",\n      uploadHeaders: \"uploadHeaders\",\n      uploadMethod: \"uploadMethod\",\n      uploadMode: \"uploadMode\",\n      uploadUrl: \"uploadUrl\",\n      validationError: \"validationError\",\n      validationErrors: \"validationErrors\",\n      validationStatus: \"validationStatus\",\n      value: \"value\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onBeforeSend: \"onBeforeSend\",\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onDropZoneEnter: \"onDropZoneEnter\",\n      onDropZoneLeave: \"onDropZoneLeave\",\n      onFilesUploaded: \"onFilesUploaded\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onProgress: \"onProgress\",\n      onUploadAborted: \"onUploadAborted\",\n      onUploaded: \"onUploaded\",\n      onUploadError: \"onUploadError\",\n      onUploadStarted: \"onUploadStarted\",\n      onValueChanged: \"onValueChanged\",\n      abortUploadChange: \"abortUploadChange\",\n      acceptChange: \"acceptChange\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      allowCancelingChange: \"allowCancelingChange\",\n      allowedFileExtensionsChange: \"allowedFileExtensionsChange\",\n      chunkSizeChange: \"chunkSizeChange\",\n      dialogTriggerChange: \"dialogTriggerChange\",\n      disabledChange: \"disabledChange\",\n      dropZoneChange: \"dropZoneChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      inputAttrChange: \"inputAttrChange\",\n      invalidFileExtensionMessageChange: \"invalidFileExtensionMessageChange\",\n      invalidMaxFileSizeMessageChange: \"invalidMaxFileSizeMessageChange\",\n      invalidMinFileSizeMessageChange: \"invalidMinFileSizeMessageChange\",\n      isValidChange: \"isValidChange\",\n      labelTextChange: \"labelTextChange\",\n      maxFileSizeChange: \"maxFileSizeChange\",\n      minFileSizeChange: \"minFileSizeChange\",\n      multipleChange: \"multipleChange\",\n      nameChange: \"nameChange\",\n      progressChange: \"progressChange\",\n      readOnlyChange: \"readOnlyChange\",\n      readyToUploadMessageChange: \"readyToUploadMessageChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      selectButtonTextChange: \"selectButtonTextChange\",\n      showFileListChange: \"showFileListChange\",\n      tabIndexChange: \"tabIndexChange\",\n      uploadAbortedMessageChange: \"uploadAbortedMessageChange\",\n      uploadButtonTextChange: \"uploadButtonTextChange\",\n      uploadChunkChange: \"uploadChunkChange\",\n      uploadCustomDataChange: \"uploadCustomDataChange\",\n      uploadedMessageChange: \"uploadedMessageChange\",\n      uploadFailedMessageChange: \"uploadFailedMessageChange\",\n      uploadFileChange: \"uploadFileChange\",\n      uploadHeadersChange: \"uploadHeadersChange\",\n      uploadMethodChange: \"uploadMethodChange\",\n      uploadModeChange: \"uploadModeChange\",\n      uploadUrlChange: \"uploadUrlChange\",\n      validationErrorChange: \"validationErrorChange\",\n      validationErrorsChange: \"validationErrorsChange\",\n      validationStatusChange: \"validationStatusChange\",\n      valueChange: \"valueChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      onBlur: \"onBlur\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxFileUploaderComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxFileUploaderComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxFileUploaderComponent);\n  return DxFileUploaderComponent;\n}();\n\nvar DxFileUploaderModule = /*@__PURE__*/function () {\n  var DxFileUploaderModule = function DxFileUploaderModule() {\n    _classCallCheck(this, DxFileUploaderModule);\n  };\n\n  DxFileUploaderModule.ɵfac = function DxFileUploaderModule_Factory(t) {\n    return new (t || DxFileUploaderModule)();\n  };\n\n  DxFileUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxFileUploaderModule\n  });\n  DxFileUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxTemplateModule]\n  });\n  return DxFileUploaderModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxFileUploaderModule, {\n    declarations: function declarations() {\n      return [DxFileUploaderComponent];\n    },\n    imports: function imports() {\n      return [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxFileUploaderComponent, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxFileUploaderComponent, DxFileUploaderModule };","map":null,"metadata":{},"sourceType":"module"}