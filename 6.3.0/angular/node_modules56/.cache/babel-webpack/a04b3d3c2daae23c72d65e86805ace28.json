{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxGantt from 'devextreme/ui/gantt';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiColumnComponent, DxiStripLineComponent, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The Gantt is a UI component that displays the task flow and dependencies between tasks.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxGanttComponent = /*@__PURE__*/function () {\n  var DxGanttComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxGanttComponent, _DxComponent);\n\n    var _super = _createSuper(DxGanttComponent);\n\n    function DxGanttComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxGanttComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'contextMenuPreparing',\n        emit: 'onContextMenuPreparing'\n      }, {\n        subscribe: 'customCommand',\n        emit: 'onCustomCommand'\n      }, {\n        subscribe: 'dependencyDeleted',\n        emit: 'onDependencyDeleted'\n      }, {\n        subscribe: 'dependencyDeleting',\n        emit: 'onDependencyDeleting'\n      }, {\n        subscribe: 'dependencyInserted',\n        emit: 'onDependencyInserted'\n      }, {\n        subscribe: 'dependencyInserting',\n        emit: 'onDependencyInserting'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'resourceAssigned',\n        emit: 'onResourceAssigned'\n      }, {\n        subscribe: 'resourceAssigning',\n        emit: 'onResourceAssigning'\n      }, {\n        subscribe: 'resourceDeleted',\n        emit: 'onResourceDeleted'\n      }, {\n        subscribe: 'resourceDeleting',\n        emit: 'onResourceDeleting'\n      }, {\n        subscribe: 'resourceInserted',\n        emit: 'onResourceInserted'\n      }, {\n        subscribe: 'resourceInserting',\n        emit: 'onResourceInserting'\n      }, {\n        subscribe: 'resourceManagerDialogShowing',\n        emit: 'onResourceManagerDialogShowing'\n      }, {\n        subscribe: 'resourceUnassigned',\n        emit: 'onResourceUnassigned'\n      }, {\n        subscribe: 'resourceUnassigning',\n        emit: 'onResourceUnassigning'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        subscribe: 'taskClick',\n        emit: 'onTaskClick'\n      }, {\n        subscribe: 'taskDblClick',\n        emit: 'onTaskDblClick'\n      }, {\n        subscribe: 'taskDeleted',\n        emit: 'onTaskDeleted'\n      }, {\n        subscribe: 'taskDeleting',\n        emit: 'onTaskDeleting'\n      }, {\n        subscribe: 'taskEditDialogShowing',\n        emit: 'onTaskEditDialogShowing'\n      }, {\n        subscribe: 'taskInserted',\n        emit: 'onTaskInserted'\n      }, {\n        subscribe: 'taskInserting',\n        emit: 'onTaskInserting'\n      }, {\n        subscribe: 'taskMoving',\n        emit: 'onTaskMoving'\n      }, {\n        subscribe: 'taskUpdated',\n        emit: 'onTaskUpdated'\n      }, {\n        subscribe: 'taskUpdating',\n        emit: 'onTaskUpdating'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'allowSelectionChange'\n      }, {\n        emit: 'columnsChange'\n      }, {\n        emit: 'contextMenuChange'\n      }, {\n        emit: 'dependenciesChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'editingChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'firstDayOfWeekChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'resourceAssignmentsChange'\n      }, {\n        emit: 'resourcesChange'\n      }, {\n        emit: 'rootValueChange'\n      }, {\n        emit: 'scaleTypeChange'\n      }, {\n        emit: 'selectedRowKeyChange'\n      }, {\n        emit: 'showResourcesChange'\n      }, {\n        emit: 'showRowLinesChange'\n      }, {\n        emit: 'stripLinesChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'taskContentTemplateChange'\n      }, {\n        emit: 'taskListWidthChange'\n      }, {\n        emit: 'taskProgressTooltipContentTemplateChange'\n      }, {\n        emit: 'tasksChange'\n      }, {\n        emit: 'taskTimeTooltipContentTemplateChange'\n      }, {\n        emit: 'taskTitlePositionChange'\n      }, {\n        emit: 'taskTooltipContentTemplateChange'\n      }, {\n        emit: 'toolbarChange'\n      }, {\n        emit: 'validationChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxGanttComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"allowSelection\",\n      get: function get() {\n        return this._getOption('allowSelection');\n      },\n      set: function set(value) {\n        this._setOption('allowSelection', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columns\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this._setOption('columns', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"contextMenu\",\n      get: function get() {\n        return this._getOption('contextMenu');\n      },\n      set: function set(value) {\n        this._setOption('contextMenu', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dependencies\",\n      get: function get() {\n        return this._getOption('dependencies');\n      },\n      set: function set(value) {\n        this._setOption('dependencies', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"editing\",\n      get: function get() {\n        return this._getOption('editing');\n      },\n      set: function set(value) {\n        this._setOption('editing', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"firstDayOfWeek\",\n      get: function get() {\n        return this._getOption('firstDayOfWeek');\n      },\n      set: function set(value) {\n        this._setOption('firstDayOfWeek', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"resourceAssignments\",\n      get: function get() {\n        return this._getOption('resourceAssignments');\n      },\n      set: function set(value) {\n        this._setOption('resourceAssignments', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"resources\",\n      get: function get() {\n        return this._getOption('resources');\n      },\n      set: function set(value) {\n        this._setOption('resources', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rootValue\",\n      get: function get() {\n        return this._getOption('rootValue');\n      },\n      set: function set(value) {\n        this._setOption('rootValue', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"scaleType\",\n      get: function get() {\n        return this._getOption('scaleType');\n      },\n      set: function set(value) {\n        this._setOption('scaleType', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectedRowKey\",\n      get: function get() {\n        return this._getOption('selectedRowKey');\n      },\n      set: function set(value) {\n        this._setOption('selectedRowKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showResources\",\n      get: function get() {\n        return this._getOption('showResources');\n      },\n      set: function set(value) {\n        this._setOption('showResources', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showRowLines\",\n      get: function get() {\n        return this._getOption('showRowLines');\n      },\n      set: function set(value) {\n        this._setOption('showRowLines', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"stripLines\",\n      get: function get() {\n        return this._getOption('stripLines');\n      },\n      set: function set(value) {\n        this._setOption('stripLines', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskContentTemplate\",\n      get: function get() {\n        return this._getOption('taskContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskContentTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskListWidth\",\n      get: function get() {\n        return this._getOption('taskListWidth');\n      },\n      set: function set(value) {\n        this._setOption('taskListWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskProgressTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskProgressTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskProgressTooltipContentTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tasks\",\n      get: function get() {\n        return this._getOption('tasks');\n      },\n      set: function set(value) {\n        this._setOption('tasks', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskTimeTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskTimeTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskTimeTooltipContentTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskTitlePosition\",\n      get: function get() {\n        return this._getOption('taskTitlePosition');\n      },\n      set: function set(value) {\n        this._setOption('taskTitlePosition', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"taskTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskTooltipContentTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"toolbar\",\n      get: function get() {\n        return this._getOption('toolbar');\n      },\n      set: function set(value) {\n        this._setOption('toolbar', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validation\",\n      get: function get() {\n        return this._getOption('validation');\n      },\n      set: function set(value) {\n        this._setOption('validation', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"columnsChildren\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this.setChildren('columns', value);\n      }\n    }, {\n      key: \"stripLinesChildren\",\n      get: function get() {\n        return this._getOption('stripLines');\n      },\n      set: function set(value) {\n        this.setChildren('stripLines', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxGantt(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('columns', changes);\n        this.setupChanges('stripLines', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('columns');\n\n        this._idh.doCheck('stripLines');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxGanttComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxGanttComponent;\n  }(DxComponent);\n\n  DxGanttComponent.ɵfac = function DxGanttComponent_Factory(t) {\n    return new (t || DxGanttComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxGanttComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxGanttComponent,\n    selectors: [[\"dx-gantt\"]],\n    contentQueries: function DxGanttComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiColumnComponent, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiStripLineComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnsChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripLinesChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      allowSelection: \"allowSelection\",\n      columns: \"columns\",\n      contextMenu: \"contextMenu\",\n      dependencies: \"dependencies\",\n      disabled: \"disabled\",\n      editing: \"editing\",\n      elementAttr: \"elementAttr\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      resourceAssignments: \"resourceAssignments\",\n      resources: \"resources\",\n      rootValue: \"rootValue\",\n      scaleType: \"scaleType\",\n      selectedRowKey: \"selectedRowKey\",\n      showResources: \"showResources\",\n      showRowLines: \"showRowLines\",\n      stripLines: \"stripLines\",\n      tabIndex: \"tabIndex\",\n      taskContentTemplate: \"taskContentTemplate\",\n      taskListWidth: \"taskListWidth\",\n      taskProgressTooltipContentTemplate: \"taskProgressTooltipContentTemplate\",\n      tasks: \"tasks\",\n      taskTimeTooltipContentTemplate: \"taskTimeTooltipContentTemplate\",\n      taskTitlePosition: \"taskTitlePosition\",\n      taskTooltipContentTemplate: \"taskTooltipContentTemplate\",\n      toolbar: \"toolbar\",\n      validation: \"validation\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onContextMenuPreparing: \"onContextMenuPreparing\",\n      onCustomCommand: \"onCustomCommand\",\n      onDependencyDeleted: \"onDependencyDeleted\",\n      onDependencyDeleting: \"onDependencyDeleting\",\n      onDependencyInserted: \"onDependencyInserted\",\n      onDependencyInserting: \"onDependencyInserting\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onResourceAssigned: \"onResourceAssigned\",\n      onResourceAssigning: \"onResourceAssigning\",\n      onResourceDeleted: \"onResourceDeleted\",\n      onResourceDeleting: \"onResourceDeleting\",\n      onResourceInserted: \"onResourceInserted\",\n      onResourceInserting: \"onResourceInserting\",\n      onResourceManagerDialogShowing: \"onResourceManagerDialogShowing\",\n      onResourceUnassigned: \"onResourceUnassigned\",\n      onResourceUnassigning: \"onResourceUnassigning\",\n      onSelectionChanged: \"onSelectionChanged\",\n      onTaskClick: \"onTaskClick\",\n      onTaskDblClick: \"onTaskDblClick\",\n      onTaskDeleted: \"onTaskDeleted\",\n      onTaskDeleting: \"onTaskDeleting\",\n      onTaskEditDialogShowing: \"onTaskEditDialogShowing\",\n      onTaskInserted: \"onTaskInserted\",\n      onTaskInserting: \"onTaskInserting\",\n      onTaskMoving: \"onTaskMoving\",\n      onTaskUpdated: \"onTaskUpdated\",\n      onTaskUpdating: \"onTaskUpdating\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      allowSelectionChange: \"allowSelectionChange\",\n      columnsChange: \"columnsChange\",\n      contextMenuChange: \"contextMenuChange\",\n      dependenciesChange: \"dependenciesChange\",\n      disabledChange: \"disabledChange\",\n      editingChange: \"editingChange\",\n      elementAttrChange: \"elementAttrChange\",\n      firstDayOfWeekChange: \"firstDayOfWeekChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      resourceAssignmentsChange: \"resourceAssignmentsChange\",\n      resourcesChange: \"resourcesChange\",\n      rootValueChange: \"rootValueChange\",\n      scaleTypeChange: \"scaleTypeChange\",\n      selectedRowKeyChange: \"selectedRowKeyChange\",\n      showResourcesChange: \"showResourcesChange\",\n      showRowLinesChange: \"showRowLinesChange\",\n      stripLinesChange: \"stripLinesChange\",\n      tabIndexChange: \"tabIndexChange\",\n      taskContentTemplateChange: \"taskContentTemplateChange\",\n      taskListWidthChange: \"taskListWidthChange\",\n      taskProgressTooltipContentTemplateChange: \"taskProgressTooltipContentTemplateChange\",\n      tasksChange: \"tasksChange\",\n      taskTimeTooltipContentTemplateChange: \"taskTimeTooltipContentTemplateChange\",\n      taskTitlePositionChange: \"taskTitlePositionChange\",\n      taskTooltipContentTemplateChange: \"taskTooltipContentTemplateChange\",\n      toolbarChange: \"toolbarChange\",\n      validationChange: \"validationChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxGanttComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxGanttComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxGanttComponent);\n  return DxGanttComponent;\n}();\n\nvar DxGanttModule = /*@__PURE__*/function () {\n  var DxGanttModule = function DxGanttModule() {\n    _classCallCheck(this, DxGanttModule);\n  };\n\n  DxGanttModule.ɵfac = function DxGanttModule_Factory(t) {\n    return new (t || DxGanttModule)();\n  };\n\n  DxGanttModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxGanttModule\n  });\n  DxGanttModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxTemplateModule]\n  });\n  return DxGanttModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxGanttModule, {\n    declarations: function declarations() {\n      return [DxGanttComponent];\n    },\n    imports: function imports() {\n      return [DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxGanttComponent, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxGanttComponent, DxGanttModule };","map":null,"metadata":{},"sourceType":"module"}