{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.clear.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport TextEditorButton from \"./texteditor_button_collection/button\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointer from \"../../events/pointer\";\nimport { name as click } from \"../../events/click\";\nvar pointerDown = pointer.down;\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar TEXTEDITOR_CLEAR_ICON_CLASS = \"dx-icon-clear\";\nvar TEXTEDITOR_ICON_CLASS = \"dx-icon\";\nvar TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS = \"dx-show-clear-button\";\n\nvar ClearButton = /*#__PURE__*/function (_TextEditorButton) {\n  _inherits(ClearButton, _TextEditorButton);\n\n  var _super = _createSuper(ClearButton);\n\n  function ClearButton() {\n    _classCallCheck(this, ClearButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClearButton, [{\n    key: \"_create\",\n    value: function _create() {\n      var $element = $(\"<span>\").addClass(TEXTEDITOR_CLEAR_BUTTON_CLASS).append($(\"<span>\").addClass(TEXTEDITOR_ICON_CLASS).addClass(TEXTEDITOR_CLEAR_ICON_CLASS));\n\n      this._addToContainer($element);\n\n      this.update(true);\n      return {\n        instance: $element,\n        $element: $element\n      };\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var editor = this.editor;\n      return editor._isClearButtonVisible();\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents(instance, $button) {\n      var editor = this.editor;\n      var editorName = editor.NAME;\n      eventsEngine.on($button, addNamespace(pointerDown, editorName), function (e) {\n        e.preventDefault();\n\n        if (\"mouse\" !== e.pointerType) {\n          editor._clearValueHandler(e);\n        }\n      });\n      eventsEngine.on($button, addNamespace(click, editorName), function (e) {\n        return editor._clearValueHandler(e);\n      });\n    }\n  }, {\n    key: \"_legacyRender\",\n    value: function _legacyRender($editor, isVisible) {\n      $editor.toggleClass(TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS, isVisible);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var rendered = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n      !rendered && _get(_getPrototypeOf(ClearButton.prototype), \"update\", this).call(this);\n      var editor = this.editor,\n          instance = this.instance;\n      var $editor = editor.$element();\n\n      var isVisible = this._isVisible();\n\n      instance && instance.toggleClass(STATE_INVISIBLE_CLASS, !isVisible);\n\n      this._legacyRender($editor, isVisible);\n    }\n  }]);\n\n  return ClearButton;\n}(TextEditorButton);\n\nexport { ClearButton as default };","map":null,"metadata":{},"sourceType":"module"}