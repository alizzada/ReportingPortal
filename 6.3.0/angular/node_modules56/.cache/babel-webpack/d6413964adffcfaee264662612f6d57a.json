{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_row.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/vdom\";\nimport { addHeightToStyle } from \"../utils\";\nimport { RowProps, Row } from \"./row\";\nimport { VirtualCell } from \"./virtual_cell\";\nexport var viewFunction = function viewFunction(_ref) {\n  var classes = _ref.classes,\n      _ref$props = _ref.props,\n      leftVirtualCellCount = _ref$props.leftVirtualCellCount,\n      leftVirtualCellWidth = _ref$props.leftVirtualCellWidth,\n      rightVirtualCellCount = _ref$props.rightVirtualCellCount,\n      rightVirtualCellWidth = _ref$props.rightVirtualCellWidth,\n      style = _ref.style,\n      virtualCells = _ref.virtualCells;\n  return createComponentVNode(2, Row, {\n    styles: style,\n    className: classes,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    leftVirtualCellCount: leftVirtualCellCount,\n    rightVirtualCellCount: rightVirtualCellCount,\n    children: virtualCells.map(function (_, index) {\n      return createComponentVNode(2, VirtualCell, null, index.toString());\n    })\n  });\n};\nexport var VirtualRowProps = _extends({}, RowProps, {\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0,\n  cellsCount: 1\n});\nexport var VirtualRow = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(VirtualRow, _BaseInfernoComponent);\n\n  var _super = _createSuper(VirtualRow);\n\n  function VirtualRow(props) {\n    var _this;\n\n    _classCallCheck(this, VirtualRow);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(VirtualRow, [{\n    key: \"style\",\n    get: function get() {\n      var height = this.props.height;\n      var style = this.restAttributes.style;\n      return addHeightToStyle(height, style);\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var className = this.props.className;\n      return \"dx-scheduler-virtual-row \".concat(className);\n    }\n  }, {\n    key: \"virtualCells\",\n    get: function get() {\n      var cellsCount = this.props.cellsCount;\n      return _toConsumableArray(Array(cellsCount));\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, [\"cellsCount\", \"children\", \"className\", \"height\", \"isHeaderRow\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"styles\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        style: this.style,\n        classes: this.classes,\n        virtualCells: this.virtualCells,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return VirtualRow;\n}(BaseInfernoComponent);\nVirtualRow.defaultProps = _extends({}, VirtualRowProps);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/virtual_row.js"],"names":["_objectWithoutPropertiesLoose","_extends","createComponentVNode","BaseInfernoComponent","addHeightToStyle","RowProps","Row","VirtualCell","viewFunction","_ref","classes","props","leftVirtualCellCount","leftVirtualCellWidth","rightVirtualCellCount","rightVirtualCellWidth","style","virtualCells","styles","className","children","map","_","index","toString","VirtualRowProps","cellsCount","VirtualRow","state","height","restAttributes","concat","Array","_this$props","restProps","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_row.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    addHeightToStyle\r\n} from \"../utils\";\r\nimport {\r\n    RowProps,\r\n    Row\r\n} from \"./row\";\r\nimport {\r\n    VirtualCell\r\n} from \"./virtual_cell\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        props: {\r\n            leftVirtualCellCount: leftVirtualCellCount,\r\n            leftVirtualCellWidth: leftVirtualCellWidth,\r\n            rightVirtualCellCount: rightVirtualCellCount,\r\n            rightVirtualCellWidth: rightVirtualCellWidth\r\n        },\r\n        style: style,\r\n        virtualCells: virtualCells\r\n    } = _ref;\r\n    return createComponentVNode(2, Row, {\r\n        styles: style,\r\n        className: classes,\r\n        leftVirtualCellWidth: leftVirtualCellWidth,\r\n        rightVirtualCellWidth: rightVirtualCellWidth,\r\n        leftVirtualCellCount: leftVirtualCellCount,\r\n        rightVirtualCellCount: rightVirtualCellCount,\r\n        children: virtualCells.map((_, index) => createComponentVNode(2, VirtualCell, null, index.toString()))\r\n    })\r\n};\r\nexport var VirtualRowProps = _extends({}, RowProps, {\r\n    leftVirtualCellWidth: 0,\r\n    rightVirtualCellWidth: 0,\r\n    cellsCount: 1\r\n});\r\nexport class VirtualRow extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get style() {\r\n        var {\r\n            height: height\r\n        } = this.props;\r\n        var {\r\n            style: style\r\n        } = this.restAttributes;\r\n        return addHeightToStyle(height, style)\r\n    }\r\n    get classes() {\r\n        var {\r\n            className: className\r\n        } = this.props;\r\n        return \"dx-scheduler-virtual-row \".concat(className)\r\n    }\r\n    get virtualCells() {\r\n        var {\r\n            cellsCount: cellsCount\r\n        } = this.props;\r\n        return [...Array(cellsCount)]\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, [\"cellsCount\", \"children\", \"className\", \"height\", \"isHeaderRow\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"styles\"]);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            style: this.style,\r\n            classes: this.classes,\r\n            virtualCells: this.virtualCells,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nVirtualRow.defaultProps = _extends({}, VirtualRowProps);\r\n"]},"metadata":{},"sourceType":"module"}