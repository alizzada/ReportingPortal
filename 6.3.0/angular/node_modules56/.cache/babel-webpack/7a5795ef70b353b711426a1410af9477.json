{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month_line.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport HorizontalAppointmentsStrategy from \"./ui.scheduler.appointments.strategy.horizontal\";\nimport dateUtils from \"../../../core/utils/date\";\nimport query from \"../../../data/query\";\nvar HOURS_IN_DAY = 24;\nvar MINUTES_IN_HOUR = 60;\nvar MILLISECONDS_IN_MINUTE = 6e4;\nvar ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;\n\nvar HorizontalMonthLineRenderingStrategy = /*#__PURE__*/function (_HorizontalAppointmen) {\n  _inherits(HorizontalMonthLineRenderingStrategy, _HorizontalAppointmen);\n\n  var _super = _createSuper(HorizontalMonthLineRenderingStrategy);\n\n  function HorizontalMonthLineRenderingStrategy() {\n    _classCallCheck(this, HorizontalMonthLineRenderingStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HorizontalMonthLineRenderingStrategy, [{\n    key: \"calculateAppointmentWidth\",\n    value: function calculateAppointmentWidth(appointment, position) {\n      var startDate = dateUtils.trimTime(position.info.appointment.startDate);\n      var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\n      var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n      var duration = Math.ceil(this._getDurationInDays(startDate, endDate));\n      var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);\n\n      if (this.instance.isVirtualScrolling()) {\n        var workSpace = this.instance.getWorkSpace();\n        var skippedDays = workSpace.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, endDate, duration);\n        width -= skippedDays * cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getDurationInDays\",\n    value: function _getDurationInDays(startDate, endDate) {\n      var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);\n\n      return adjustedDuration / dateUtils.dateToMilliseconds(\"day\") || ZERO_APPOINTMENT_DURATION_IN_DAYS;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function getDeltaTime(args, initialSize) {\n      return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize);\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function isAllDay() {\n      return false;\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function createTaskPositionMap(items, skipSorting) {\n      if (!skipSorting) {\n        this.instance.getAppointmentsInstance()._sortAppointmentsByStartDate(items);\n      }\n\n      return _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"createTaskPositionMap\", this).call(this, items);\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function _getSortedPositions(map, skipSorting) {\n      var result = _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"_getSortedPositions\", this).call(this, map);\n\n      if (!skipSorting) {\n        result = query(result).sortBy(\"top\").thenBy(\"left\").thenBy(\"cellPosition\").thenBy(\"i\").toArray();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function needCorrectAppointmentDates() {\n      return false;\n    }\n  }]);\n\n  return HorizontalMonthLineRenderingStrategy;\n}(HorizontalAppointmentsStrategy);\n\nexport default HorizontalMonthLineRenderingStrategy;","map":null,"metadata":{},"sourceType":"module"}