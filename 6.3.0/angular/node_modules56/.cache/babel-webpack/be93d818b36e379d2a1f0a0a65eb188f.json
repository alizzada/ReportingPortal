{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxDataGrid from 'devextreme/ui/data_grid';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiColumnComponent, DxiSortByGroupSummaryInfoComponent, DxoColumnChooserModule, DxoColumnFixingModule, DxoTextsModule, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoEditingModule, DxiChangeModule, DxoFormModule, DxoColCountByScreenModule, DxiItemModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxoPopupModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxoExportModule, DxoFilterBuilderModule, DxiCustomOperationModule, DxiFieldModule, DxoFilterOperationDescriptionsModule, DxoGroupOperationDescriptionsModule, DxoFilterBuilderPopupModule, DxoFilterPanelModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoGroupingModule, DxoGroupPanelModule, DxoKeyboardNavigationModule, DxoLoadPanelModule, DxoMasterDetailModule, DxoPagerModule, DxoPagingModule, DxoRemoteOperationsModule, DxoRowDraggingModule, DxoCursorOffsetModule, DxoScrollingModule, DxoSearchPanelModule, DxoSelectionModule, DxiSortByGroupSummaryInfoModule, DxoSortingModule, DxoStateStoringModule, DxoSummaryModule, DxiGroupItemModule, DxoValueFormatModule, DxiTotalItemModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The DataGrid is a UI component that represents data from a local or remote source in the form of a grid. This UI component offers such basic features as sorting, grouping, filtering, as well as more advanced capabilities, like state storing, client-side exporting, master-detail interface, and many others.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxDataGridComponent = /*@__PURE__*/function () {\n  var DxDataGridComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxDataGridComponent, _DxComponent);\n\n    var _super = _createSuper(DxDataGridComponent);\n\n    function DxDataGridComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxDataGridComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'adaptiveDetailRowPreparing',\n        emit: 'onAdaptiveDetailRowPreparing'\n      }, {\n        subscribe: 'cellClick',\n        emit: 'onCellClick'\n      }, {\n        subscribe: 'cellDblClick',\n        emit: 'onCellDblClick'\n      }, {\n        subscribe: 'cellHoverChanged',\n        emit: 'onCellHoverChanged'\n      }, {\n        subscribe: 'cellPrepared',\n        emit: 'onCellPrepared'\n      }, {\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'contextMenuPreparing',\n        emit: 'onContextMenuPreparing'\n      }, {\n        subscribe: 'dataErrorOccurred',\n        emit: 'onDataErrorOccurred'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'editCanceled',\n        emit: 'onEditCanceled'\n      }, {\n        subscribe: 'editCanceling',\n        emit: 'onEditCanceling'\n      }, {\n        subscribe: 'editingStart',\n        emit: 'onEditingStart'\n      }, {\n        subscribe: 'editorPrepared',\n        emit: 'onEditorPrepared'\n      }, {\n        subscribe: 'editorPreparing',\n        emit: 'onEditorPreparing'\n      }, {\n        subscribe: 'exported',\n        emit: 'onExported'\n      }, {\n        subscribe: 'exporting',\n        emit: 'onExporting'\n      }, {\n        subscribe: 'fileSaving',\n        emit: 'onFileSaving'\n      }, {\n        subscribe: 'focusedCellChanged',\n        emit: 'onFocusedCellChanged'\n      }, {\n        subscribe: 'focusedCellChanging',\n        emit: 'onFocusedCellChanging'\n      }, {\n        subscribe: 'focusedRowChanged',\n        emit: 'onFocusedRowChanged'\n      }, {\n        subscribe: 'focusedRowChanging',\n        emit: 'onFocusedRowChanging'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'initNewRow',\n        emit: 'onInitNewRow'\n      }, {\n        subscribe: 'keyDown',\n        emit: 'onKeyDown'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'rowClick',\n        emit: 'onRowClick'\n      }, {\n        subscribe: 'rowCollapsed',\n        emit: 'onRowCollapsed'\n      }, {\n        subscribe: 'rowCollapsing',\n        emit: 'onRowCollapsing'\n      }, {\n        subscribe: 'rowDblClick',\n        emit: 'onRowDblClick'\n      }, {\n        subscribe: 'rowExpanded',\n        emit: 'onRowExpanded'\n      }, {\n        subscribe: 'rowExpanding',\n        emit: 'onRowExpanding'\n      }, {\n        subscribe: 'rowInserted',\n        emit: 'onRowInserted'\n      }, {\n        subscribe: 'rowInserting',\n        emit: 'onRowInserting'\n      }, {\n        subscribe: 'rowPrepared',\n        emit: 'onRowPrepared'\n      }, {\n        subscribe: 'rowRemoved',\n        emit: 'onRowRemoved'\n      }, {\n        subscribe: 'rowRemoving',\n        emit: 'onRowRemoving'\n      }, {\n        subscribe: 'rowUpdated',\n        emit: 'onRowUpdated'\n      }, {\n        subscribe: 'rowUpdating',\n        emit: 'onRowUpdating'\n      }, {\n        subscribe: 'rowValidating',\n        emit: 'onRowValidating'\n      }, {\n        subscribe: 'saved',\n        emit: 'onSaved'\n      }, {\n        subscribe: 'saving',\n        emit: 'onSaving'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        subscribe: 'toolbarPreparing',\n        emit: 'onToolbarPreparing'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'allowColumnReorderingChange'\n      }, {\n        emit: 'allowColumnResizingChange'\n      }, {\n        emit: 'autoNavigateToFocusedRowChange'\n      }, {\n        emit: 'cacheEnabledChange'\n      }, {\n        emit: 'cellHintEnabledChange'\n      }, {\n        emit: 'columnAutoWidthChange'\n      }, {\n        emit: 'columnChooserChange'\n      }, {\n        emit: 'columnFixingChange'\n      }, {\n        emit: 'columnHidingEnabledChange'\n      }, {\n        emit: 'columnMinWidthChange'\n      }, {\n        emit: 'columnResizingModeChange'\n      }, {\n        emit: 'columnsChange'\n      }, {\n        emit: 'columnWidthChange'\n      }, {\n        emit: 'customizeColumnsChange'\n      }, {\n        emit: 'customizeExportDataChange'\n      }, {\n        emit: 'dataSourceChange'\n      }, {\n        emit: 'dateSerializationFormatChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'editingChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'errorRowEnabledChange'\n      }, {\n        emit: 'exportChange'\n      }, {\n        emit: 'filterBuilderChange'\n      }, {\n        emit: 'filterBuilderPopupChange'\n      }, {\n        emit: 'filterPanelChange'\n      }, {\n        emit: 'filterRowChange'\n      }, {\n        emit: 'filterSyncEnabledChange'\n      }, {\n        emit: 'filterValueChange'\n      }, {\n        emit: 'focusedColumnIndexChange'\n      }, {\n        emit: 'focusedRowEnabledChange'\n      }, {\n        emit: 'focusedRowIndexChange'\n      }, {\n        emit: 'focusedRowKeyChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'groupingChange'\n      }, {\n        emit: 'groupPanelChange'\n      }, {\n        emit: 'headerFilterChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'highlightChangesChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'keyboardNavigationChange'\n      }, {\n        emit: 'keyExprChange'\n      }, {\n        emit: 'loadPanelChange'\n      }, {\n        emit: 'masterDetailChange'\n      }, {\n        emit: 'noDataTextChange'\n      }, {\n        emit: 'pagerChange'\n      }, {\n        emit: 'pagingChange'\n      }, {\n        emit: 'remoteOperationsChange'\n      }, {\n        emit: 'renderAsyncChange'\n      }, {\n        emit: 'repaintChangesOnlyChange'\n      }, {\n        emit: 'rowAlternationEnabledChange'\n      }, {\n        emit: 'rowDraggingChange'\n      }, {\n        emit: 'rowTemplateChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'scrollingChange'\n      }, {\n        emit: 'searchPanelChange'\n      }, {\n        emit: 'selectedRowKeysChange'\n      }, {\n        emit: 'selectionChange'\n      }, {\n        emit: 'selectionFilterChange'\n      }, {\n        emit: 'showBordersChange'\n      }, {\n        emit: 'showColumnHeadersChange'\n      }, {\n        emit: 'showColumnLinesChange'\n      }, {\n        emit: 'showRowLinesChange'\n      }, {\n        emit: 'sortByGroupSummaryInfoChange'\n      }, {\n        emit: 'sortingChange'\n      }, {\n        emit: 'stateStoringChange'\n      }, {\n        emit: 'summaryChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'twoWayBindingEnabledChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'wordWrapEnabledChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxDataGridComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"allowColumnReordering\",\n      get: function get() {\n        return this._getOption('allowColumnReordering');\n      },\n      set: function set(value) {\n        this._setOption('allowColumnReordering', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"allowColumnResizing\",\n      get: function get() {\n        return this._getOption('allowColumnResizing');\n      },\n      set: function set(value) {\n        this._setOption('allowColumnResizing', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"autoNavigateToFocusedRow\",\n      get: function get() {\n        return this._getOption('autoNavigateToFocusedRow');\n      },\n      set: function set(value) {\n        this._setOption('autoNavigateToFocusedRow', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"cacheEnabled\",\n      get: function get() {\n        return this._getOption('cacheEnabled');\n      },\n      set: function set(value) {\n        this._setOption('cacheEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"cellHintEnabled\",\n      get: function get() {\n        return this._getOption('cellHintEnabled');\n      },\n      set: function set(value) {\n        this._setOption('cellHintEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnAutoWidth\",\n      get: function get() {\n        return this._getOption('columnAutoWidth');\n      },\n      set: function set(value) {\n        this._setOption('columnAutoWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnChooser\",\n      get: function get() {\n        return this._getOption('columnChooser');\n      },\n      set: function set(value) {\n        this._setOption('columnChooser', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnFixing\",\n      get: function get() {\n        return this._getOption('columnFixing');\n      },\n      set: function set(value) {\n        this._setOption('columnFixing', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnHidingEnabled\",\n      get: function get() {\n        return this._getOption('columnHidingEnabled');\n      },\n      set: function set(value) {\n        this._setOption('columnHidingEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnMinWidth\",\n      get: function get() {\n        return this._getOption('columnMinWidth');\n      },\n      set: function set(value) {\n        this._setOption('columnMinWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnResizingMode\",\n      get: function get() {\n        return this._getOption('columnResizingMode');\n      },\n      set: function set(value) {\n        this._setOption('columnResizingMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columns\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this._setOption('columns', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"columnWidth\",\n      get: function get() {\n        return this._getOption('columnWidth');\n      },\n      set: function set(value) {\n        this._setOption('columnWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"customizeColumns\",\n      get: function get() {\n        return this._getOption('customizeColumns');\n      },\n      set: function set(value) {\n        this._setOption('customizeColumns', value);\n      }\n      /**\n       *\n      \r\n       * @deprecated\n      \r\n       */\n\n    }, {\n      key: \"customizeExportData\",\n      get: function get() {\n        return this._getOption('customizeExportData');\n      },\n      set: function set(value) {\n        this._setOption('customizeExportData', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dataSource\",\n      get: function get() {\n        return this._getOption('dataSource');\n      },\n      set: function set(value) {\n        this._setOption('dataSource', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dateSerializationFormat\",\n      get: function get() {\n        return this._getOption('dateSerializationFormat');\n      },\n      set: function set(value) {\n        this._setOption('dateSerializationFormat', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"editing\",\n      get: function get() {\n        return this._getOption('editing');\n      },\n      set: function set(value) {\n        this._setOption('editing', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"errorRowEnabled\",\n      get: function get() {\n        return this._getOption('errorRowEnabled');\n      },\n      set: function set(value) {\n        this._setOption('errorRowEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"export\",\n      get: function get() {\n        return this._getOption('export');\n      },\n      set: function set(value) {\n        this._setOption('export', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterBuilder\",\n      get: function get() {\n        return this._getOption('filterBuilder');\n      },\n      set: function set(value) {\n        this._setOption('filterBuilder', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterBuilderPopup\",\n      get: function get() {\n        return this._getOption('filterBuilderPopup');\n      },\n      set: function set(value) {\n        this._setOption('filterBuilderPopup', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterPanel\",\n      get: function get() {\n        return this._getOption('filterPanel');\n      },\n      set: function set(value) {\n        this._setOption('filterPanel', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterRow\",\n      get: function get() {\n        return this._getOption('filterRow');\n      },\n      set: function set(value) {\n        this._setOption('filterRow', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterSyncEnabled\",\n      get: function get() {\n        return this._getOption('filterSyncEnabled');\n      },\n      set: function set(value) {\n        this._setOption('filterSyncEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"filterValue\",\n      get: function get() {\n        return this._getOption('filterValue');\n      },\n      set: function set(value) {\n        this._setOption('filterValue', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusedColumnIndex\",\n      get: function get() {\n        return this._getOption('focusedColumnIndex');\n      },\n      set: function set(value) {\n        this._setOption('focusedColumnIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusedRowEnabled\",\n      get: function get() {\n        return this._getOption('focusedRowEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusedRowEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusedRowIndex\",\n      get: function get() {\n        return this._getOption('focusedRowIndex');\n      },\n      set: function set(value) {\n        this._setOption('focusedRowIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusedRowKey\",\n      get: function get() {\n        return this._getOption('focusedRowKey');\n      },\n      set: function set(value) {\n        this._setOption('focusedRowKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"grouping\",\n      get: function get() {\n        return this._getOption('grouping');\n      },\n      set: function set(value) {\n        this._setOption('grouping', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"groupPanel\",\n      get: function get() {\n        return this._getOption('groupPanel');\n      },\n      set: function set(value) {\n        this._setOption('groupPanel', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"headerFilter\",\n      get: function get() {\n        return this._getOption('headerFilter');\n      },\n      set: function set(value) {\n        this._setOption('headerFilter', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"highlightChanges\",\n      get: function get() {\n        return this._getOption('highlightChanges');\n      },\n      set: function set(value) {\n        this._setOption('highlightChanges', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"keyboardNavigation\",\n      get: function get() {\n        return this._getOption('keyboardNavigation');\n      },\n      set: function set(value) {\n        this._setOption('keyboardNavigation', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"keyExpr\",\n      get: function get() {\n        return this._getOption('keyExpr');\n      },\n      set: function set(value) {\n        this._setOption('keyExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"loadPanel\",\n      get: function get() {\n        return this._getOption('loadPanel');\n      },\n      set: function set(value) {\n        this._setOption('loadPanel', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"masterDetail\",\n      get: function get() {\n        return this._getOption('masterDetail');\n      },\n      set: function set(value) {\n        this._setOption('masterDetail', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"noDataText\",\n      get: function get() {\n        return this._getOption('noDataText');\n      },\n      set: function set(value) {\n        this._setOption('noDataText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"pager\",\n      get: function get() {\n        return this._getOption('pager');\n      },\n      set: function set(value) {\n        this._setOption('pager', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"paging\",\n      get: function get() {\n        return this._getOption('paging');\n      },\n      set: function set(value) {\n        this._setOption('paging', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"remoteOperations\",\n      get: function get() {\n        return this._getOption('remoteOperations');\n      },\n      set: function set(value) {\n        this._setOption('remoteOperations', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"renderAsync\",\n      get: function get() {\n        return this._getOption('renderAsync');\n      },\n      set: function set(value) {\n        this._setOption('renderAsync', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"repaintChangesOnly\",\n      get: function get() {\n        return this._getOption('repaintChangesOnly');\n      },\n      set: function set(value) {\n        this._setOption('repaintChangesOnly', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rowAlternationEnabled\",\n      get: function get() {\n        return this._getOption('rowAlternationEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rowAlternationEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rowDragging\",\n      get: function get() {\n        return this._getOption('rowDragging');\n      },\n      set: function set(value) {\n        this._setOption('rowDragging', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rowTemplate\",\n      get: function get() {\n        return this._getOption('rowTemplate');\n      },\n      set: function set(value) {\n        this._setOption('rowTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"scrolling\",\n      get: function get() {\n        return this._getOption('scrolling');\n      },\n      set: function set(value) {\n        this._setOption('scrolling', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchPanel\",\n      get: function get() {\n        return this._getOption('searchPanel');\n      },\n      set: function set(value) {\n        this._setOption('searchPanel', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectedRowKeys\",\n      get: function get() {\n        return this._getOption('selectedRowKeys');\n      },\n      set: function set(value) {\n        this._setOption('selectedRowKeys', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selection\",\n      get: function get() {\n        return this._getOption('selection');\n      },\n      set: function set(value) {\n        this._setOption('selection', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectionFilter\",\n      get: function get() {\n        return this._getOption('selectionFilter');\n      },\n      set: function set(value) {\n        this._setOption('selectionFilter', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showBorders\",\n      get: function get() {\n        return this._getOption('showBorders');\n      },\n      set: function set(value) {\n        this._setOption('showBorders', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showColumnHeaders\",\n      get: function get() {\n        return this._getOption('showColumnHeaders');\n      },\n      set: function set(value) {\n        this._setOption('showColumnHeaders', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showColumnLines\",\n      get: function get() {\n        return this._getOption('showColumnLines');\n      },\n      set: function set(value) {\n        this._setOption('showColumnLines', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showRowLines\",\n      get: function get() {\n        return this._getOption('showRowLines');\n      },\n      set: function set(value) {\n        this._setOption('showRowLines', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"sortByGroupSummaryInfo\",\n      get: function get() {\n        return this._getOption('sortByGroupSummaryInfo');\n      },\n      set: function set(value) {\n        this._setOption('sortByGroupSummaryInfo', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"sorting\",\n      get: function get() {\n        return this._getOption('sorting');\n      },\n      set: function set(value) {\n        this._setOption('sorting', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"stateStoring\",\n      get: function get() {\n        return this._getOption('stateStoring');\n      },\n      set: function set(value) {\n        this._setOption('stateStoring', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"summary\",\n      get: function get() {\n        return this._getOption('summary');\n      },\n      set: function set(value) {\n        this._setOption('summary', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"twoWayBindingEnabled\",\n      get: function get() {\n        return this._getOption('twoWayBindingEnabled');\n      },\n      set: function set(value) {\n        this._setOption('twoWayBindingEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"wordWrapEnabled\",\n      get: function get() {\n        return this._getOption('wordWrapEnabled');\n      },\n      set: function set(value) {\n        this._setOption('wordWrapEnabled', value);\n      }\n    }, {\n      key: \"columnsChildren\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this.setChildren('columns', value);\n      }\n    }, {\n      key: \"sortByGroupSummaryInfoChildren\",\n      get: function get() {\n        return this._getOption('sortByGroupSummaryInfo');\n      },\n      set: function set(value) {\n        this.setChildren('sortByGroupSummaryInfo', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxDataGrid(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxDataGridComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('columns', changes);\n        this.setupChanges('dataSource', changes);\n        this.setupChanges('keyExpr', changes);\n        this.setupChanges('selectedRowKeys', changes);\n        this.setupChanges('sortByGroupSummaryInfo', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('columns');\n\n        this._idh.doCheck('dataSource');\n\n        this._idh.doCheck('keyExpr');\n\n        this._idh.doCheck('selectedRowKeys');\n\n        this._idh.doCheck('sortByGroupSummaryInfo');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxDataGridComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxDataGridComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxDataGridComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxDataGridComponent;\n  }(DxComponent);\n\n  DxDataGridComponent.ɵfac = function DxDataGridComponent_Factory(t) {\n    return new (t || DxDataGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxDataGridComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxDataGridComponent,\n    selectors: [[\"dx-data-grid\"]],\n    contentQueries: function DxDataGridComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiColumnComponent, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiSortByGroupSummaryInfoComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnsChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sortByGroupSummaryInfoChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      allowColumnReordering: \"allowColumnReordering\",\n      allowColumnResizing: \"allowColumnResizing\",\n      autoNavigateToFocusedRow: \"autoNavigateToFocusedRow\",\n      cacheEnabled: \"cacheEnabled\",\n      cellHintEnabled: \"cellHintEnabled\",\n      columnAutoWidth: \"columnAutoWidth\",\n      columnChooser: \"columnChooser\",\n      columnFixing: \"columnFixing\",\n      columnHidingEnabled: \"columnHidingEnabled\",\n      columnMinWidth: \"columnMinWidth\",\n      columnResizingMode: \"columnResizingMode\",\n      columns: \"columns\",\n      columnWidth: \"columnWidth\",\n      customizeColumns: \"customizeColumns\",\n      customizeExportData: \"customizeExportData\",\n      dataSource: \"dataSource\",\n      dateSerializationFormat: \"dateSerializationFormat\",\n      disabled: \"disabled\",\n      editing: \"editing\",\n      elementAttr: \"elementAttr\",\n      errorRowEnabled: \"errorRowEnabled\",\n      export: \"export\",\n      filterBuilder: \"filterBuilder\",\n      filterBuilderPopup: \"filterBuilderPopup\",\n      filterPanel: \"filterPanel\",\n      filterRow: \"filterRow\",\n      filterSyncEnabled: \"filterSyncEnabled\",\n      filterValue: \"filterValue\",\n      focusedColumnIndex: \"focusedColumnIndex\",\n      focusedRowEnabled: \"focusedRowEnabled\",\n      focusedRowIndex: \"focusedRowIndex\",\n      focusedRowKey: \"focusedRowKey\",\n      focusStateEnabled: \"focusStateEnabled\",\n      grouping: \"grouping\",\n      groupPanel: \"groupPanel\",\n      headerFilter: \"headerFilter\",\n      height: \"height\",\n      highlightChanges: \"highlightChanges\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      keyboardNavigation: \"keyboardNavigation\",\n      keyExpr: \"keyExpr\",\n      loadPanel: \"loadPanel\",\n      masterDetail: \"masterDetail\",\n      noDataText: \"noDataText\",\n      pager: \"pager\",\n      paging: \"paging\",\n      remoteOperations: \"remoteOperations\",\n      renderAsync: \"renderAsync\",\n      repaintChangesOnly: \"repaintChangesOnly\",\n      rowAlternationEnabled: \"rowAlternationEnabled\",\n      rowDragging: \"rowDragging\",\n      rowTemplate: \"rowTemplate\",\n      rtlEnabled: \"rtlEnabled\",\n      scrolling: \"scrolling\",\n      searchPanel: \"searchPanel\",\n      selectedRowKeys: \"selectedRowKeys\",\n      selection: \"selection\",\n      selectionFilter: \"selectionFilter\",\n      showBorders: \"showBorders\",\n      showColumnHeaders: \"showColumnHeaders\",\n      showColumnLines: \"showColumnLines\",\n      showRowLines: \"showRowLines\",\n      sortByGroupSummaryInfo: \"sortByGroupSummaryInfo\",\n      sorting: \"sorting\",\n      stateStoring: \"stateStoring\",\n      summary: \"summary\",\n      tabIndex: \"tabIndex\",\n      twoWayBindingEnabled: \"twoWayBindingEnabled\",\n      visible: \"visible\",\n      width: \"width\",\n      wordWrapEnabled: \"wordWrapEnabled\"\n    },\n    outputs: {\n      onAdaptiveDetailRowPreparing: \"onAdaptiveDetailRowPreparing\",\n      onCellClick: \"onCellClick\",\n      onCellDblClick: \"onCellDblClick\",\n      onCellHoverChanged: \"onCellHoverChanged\",\n      onCellPrepared: \"onCellPrepared\",\n      onContentReady: \"onContentReady\",\n      onContextMenuPreparing: \"onContextMenuPreparing\",\n      onDataErrorOccurred: \"onDataErrorOccurred\",\n      onDisposing: \"onDisposing\",\n      onEditCanceled: \"onEditCanceled\",\n      onEditCanceling: \"onEditCanceling\",\n      onEditingStart: \"onEditingStart\",\n      onEditorPrepared: \"onEditorPrepared\",\n      onEditorPreparing: \"onEditorPreparing\",\n      onExported: \"onExported\",\n      onExporting: \"onExporting\",\n      onFileSaving: \"onFileSaving\",\n      onFocusedCellChanged: \"onFocusedCellChanged\",\n      onFocusedCellChanging: \"onFocusedCellChanging\",\n      onFocusedRowChanged: \"onFocusedRowChanged\",\n      onFocusedRowChanging: \"onFocusedRowChanging\",\n      onInitialized: \"onInitialized\",\n      onInitNewRow: \"onInitNewRow\",\n      onKeyDown: \"onKeyDown\",\n      onOptionChanged: \"onOptionChanged\",\n      onRowClick: \"onRowClick\",\n      onRowCollapsed: \"onRowCollapsed\",\n      onRowCollapsing: \"onRowCollapsing\",\n      onRowDblClick: \"onRowDblClick\",\n      onRowExpanded: \"onRowExpanded\",\n      onRowExpanding: \"onRowExpanding\",\n      onRowInserted: \"onRowInserted\",\n      onRowInserting: \"onRowInserting\",\n      onRowPrepared: \"onRowPrepared\",\n      onRowRemoved: \"onRowRemoved\",\n      onRowRemoving: \"onRowRemoving\",\n      onRowUpdated: \"onRowUpdated\",\n      onRowUpdating: \"onRowUpdating\",\n      onRowValidating: \"onRowValidating\",\n      onSaved: \"onSaved\",\n      onSaving: \"onSaving\",\n      onSelectionChanged: \"onSelectionChanged\",\n      onToolbarPreparing: \"onToolbarPreparing\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      allowColumnReorderingChange: \"allowColumnReorderingChange\",\n      allowColumnResizingChange: \"allowColumnResizingChange\",\n      autoNavigateToFocusedRowChange: \"autoNavigateToFocusedRowChange\",\n      cacheEnabledChange: \"cacheEnabledChange\",\n      cellHintEnabledChange: \"cellHintEnabledChange\",\n      columnAutoWidthChange: \"columnAutoWidthChange\",\n      columnChooserChange: \"columnChooserChange\",\n      columnFixingChange: \"columnFixingChange\",\n      columnHidingEnabledChange: \"columnHidingEnabledChange\",\n      columnMinWidthChange: \"columnMinWidthChange\",\n      columnResizingModeChange: \"columnResizingModeChange\",\n      columnsChange: \"columnsChange\",\n      columnWidthChange: \"columnWidthChange\",\n      customizeColumnsChange: \"customizeColumnsChange\",\n      customizeExportDataChange: \"customizeExportDataChange\",\n      dataSourceChange: \"dataSourceChange\",\n      dateSerializationFormatChange: \"dateSerializationFormatChange\",\n      disabledChange: \"disabledChange\",\n      editingChange: \"editingChange\",\n      elementAttrChange: \"elementAttrChange\",\n      errorRowEnabledChange: \"errorRowEnabledChange\",\n      exportChange: \"exportChange\",\n      filterBuilderChange: \"filterBuilderChange\",\n      filterBuilderPopupChange: \"filterBuilderPopupChange\",\n      filterPanelChange: \"filterPanelChange\",\n      filterRowChange: \"filterRowChange\",\n      filterSyncEnabledChange: \"filterSyncEnabledChange\",\n      filterValueChange: \"filterValueChange\",\n      focusedColumnIndexChange: \"focusedColumnIndexChange\",\n      focusedRowEnabledChange: \"focusedRowEnabledChange\",\n      focusedRowIndexChange: \"focusedRowIndexChange\",\n      focusedRowKeyChange: \"focusedRowKeyChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      groupingChange: \"groupingChange\",\n      groupPanelChange: \"groupPanelChange\",\n      headerFilterChange: \"headerFilterChange\",\n      heightChange: \"heightChange\",\n      highlightChangesChange: \"highlightChangesChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      keyboardNavigationChange: \"keyboardNavigationChange\",\n      keyExprChange: \"keyExprChange\",\n      loadPanelChange: \"loadPanelChange\",\n      masterDetailChange: \"masterDetailChange\",\n      noDataTextChange: \"noDataTextChange\",\n      pagerChange: \"pagerChange\",\n      pagingChange: \"pagingChange\",\n      remoteOperationsChange: \"remoteOperationsChange\",\n      renderAsyncChange: \"renderAsyncChange\",\n      repaintChangesOnlyChange: \"repaintChangesOnlyChange\",\n      rowAlternationEnabledChange: \"rowAlternationEnabledChange\",\n      rowDraggingChange: \"rowDraggingChange\",\n      rowTemplateChange: \"rowTemplateChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      scrollingChange: \"scrollingChange\",\n      searchPanelChange: \"searchPanelChange\",\n      selectedRowKeysChange: \"selectedRowKeysChange\",\n      selectionChange: \"selectionChange\",\n      selectionFilterChange: \"selectionFilterChange\",\n      showBordersChange: \"showBordersChange\",\n      showColumnHeadersChange: \"showColumnHeadersChange\",\n      showColumnLinesChange: \"showColumnLinesChange\",\n      showRowLinesChange: \"showRowLinesChange\",\n      sortByGroupSummaryInfoChange: \"sortByGroupSummaryInfoChange\",\n      sortingChange: \"sortingChange\",\n      stateStoringChange: \"stateStoringChange\",\n      summaryChange: \"summaryChange\",\n      tabIndexChange: \"tabIndexChange\",\n      twoWayBindingEnabledChange: \"twoWayBindingEnabledChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      wordWrapEnabledChange: \"wordWrapEnabledChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxDataGridComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxDataGridComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxDataGridComponent);\n  return DxDataGridComponent;\n}();\n\nvar DxDataGridModule = /*@__PURE__*/function () {\n  var DxDataGridModule = function DxDataGridModule() {\n    _classCallCheck(this, DxDataGridModule);\n  };\n\n  DxDataGridModule.ɵfac = function DxDataGridModule_Factory(t) {\n    return new (t || DxDataGridModule)();\n  };\n\n  DxDataGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxDataGridModule\n  });\n  DxDataGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoColumnChooserModule, DxoColumnFixingModule, DxoTextsModule, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoEditingModule, DxiChangeModule, DxoFormModule, DxoColCountByScreenModule, DxiItemModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxoPopupModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxoExportModule, DxoFilterBuilderModule, DxiCustomOperationModule, DxiFieldModule, DxoFilterOperationDescriptionsModule, DxoGroupOperationDescriptionsModule, DxoFilterBuilderPopupModule, DxoFilterPanelModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoGroupingModule, DxoGroupPanelModule, DxoKeyboardNavigationModule, DxoLoadPanelModule, DxoMasterDetailModule, DxoPagerModule, DxoPagingModule, DxoRemoteOperationsModule, DxoRowDraggingModule, DxoCursorOffsetModule, DxoScrollingModule, DxoSearchPanelModule, DxoSelectionModule, DxiSortByGroupSummaryInfoModule, DxoSortingModule, DxoStateStoringModule, DxoSummaryModule, DxiGroupItemModule, DxoValueFormatModule, DxiTotalItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoColumnChooserModule, DxoColumnFixingModule, DxoTextsModule, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoEditingModule, DxiChangeModule, DxoFormModule, DxoColCountByScreenModule, DxiItemModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxoPopupModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxoExportModule, DxoFilterBuilderModule, DxiCustomOperationModule, DxiFieldModule, DxoFilterOperationDescriptionsModule, DxoGroupOperationDescriptionsModule, DxoFilterBuilderPopupModule, DxoFilterPanelModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoGroupingModule, DxoGroupPanelModule, DxoKeyboardNavigationModule, DxoLoadPanelModule, DxoMasterDetailModule, DxoPagerModule, DxoPagingModule, DxoRemoteOperationsModule, DxoRowDraggingModule, DxoCursorOffsetModule, DxoScrollingModule, DxoSearchPanelModule, DxoSelectionModule, DxiSortByGroupSummaryInfoModule, DxoSortingModule, DxoStateStoringModule, DxoSummaryModule, DxiGroupItemModule, DxoValueFormatModule, DxiTotalItemModule, DxTemplateModule]\n  });\n  return DxDataGridModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxDataGridModule, {\n    declarations: function declarations() {\n      return [DxDataGridComponent];\n    },\n    imports: function imports() {\n      return [DxoColumnChooserModule, DxoColumnFixingModule, DxoTextsModule, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoEditingModule, DxiChangeModule, DxoFormModule, DxoColCountByScreenModule, DxiItemModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxoPopupModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxoExportModule, DxoFilterBuilderModule, DxiCustomOperationModule, DxiFieldModule, DxoFilterOperationDescriptionsModule, DxoGroupOperationDescriptionsModule, DxoFilterBuilderPopupModule, DxoFilterPanelModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoGroupingModule, DxoGroupPanelModule, DxoKeyboardNavigationModule, DxoLoadPanelModule, DxoMasterDetailModule, DxoPagerModule, DxoPagingModule, DxoRemoteOperationsModule, DxoRowDraggingModule, DxoCursorOffsetModule, DxoScrollingModule, DxoSearchPanelModule, DxoSelectionModule, DxiSortByGroupSummaryInfoModule, DxoSortingModule, DxoStateStoringModule, DxoSummaryModule, DxiGroupItemModule, DxoValueFormatModule, DxiTotalItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxDataGridComponent, DxoColumnChooserModule, DxoColumnFixingModule, DxoTextsModule, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoEditingModule, DxiChangeModule, DxoFormModule, DxoColCountByScreenModule, DxiItemModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxoPopupModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxoExportModule, DxoFilterBuilderModule, DxiCustomOperationModule, DxiFieldModule, DxoFilterOperationDescriptionsModule, DxoGroupOperationDescriptionsModule, DxoFilterBuilderPopupModule, DxoFilterPanelModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoGroupingModule, DxoGroupPanelModule, DxoKeyboardNavigationModule, DxoLoadPanelModule, DxoMasterDetailModule, DxoPagerModule, DxoPagingModule, DxoRemoteOperationsModule, DxoRowDraggingModule, DxoCursorOffsetModule, DxoScrollingModule, DxoSearchPanelModule, DxoSelectionModule, DxiSortByGroupSummaryInfoModule, DxoSortingModule, DxoStateStoringModule, DxoSummaryModule, DxiGroupItemModule, DxoValueFormatModule, DxiTotalItemModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxDataGridComponent, DxDataGridModule };","map":null,"metadata":{},"sourceType":"module"}