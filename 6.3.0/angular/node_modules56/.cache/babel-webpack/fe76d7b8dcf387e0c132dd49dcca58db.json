{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport LoadIndicator from \"../load_indicator\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isFunction } from \"../../core/utils/type\";\nimport { compileSetter, compileGetter } from \"../../core/utils/data\";\nimport positionUtils from \"../../animation/position\";\nimport resizeCallbacks from \"../../core/utils/resize_callbacks\";\nimport { getDiagram } from \"./diagram.importer\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nimport { getPublicElement } from \"../../core/element\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport messageLocalization from \"../../localization/message\";\nimport numberLocalization from \"../../localization/number\";\nimport * as zIndexPool from \"../overlay/z_index\";\nimport Overlay from \"../overlay/ui.overlay\";\nimport DiagramToolbar from \"./ui.diagram.toolbar\";\nimport DiagramMainToolbar from \"./ui.diagram.main_toolbar\";\nimport DiagramHistoryToolbar from \"./ui.diagram.history_toolbar\";\nimport DiagramViewToolbar from \"./ui.diagram.view_toolbar\";\nimport DiagramPropertiesToolbar from \"./ui.diagram.properties_toolbar\";\nimport diagramContextMenuModule from \"./ui.diagram.context_menu\";\nimport DiagramContextToolbox from \"./ui.diagram.context_toolbox\";\nimport DiagramDialog from \"./ui.diagram.dialogs\";\nimport DiagramScrollView from \"./ui.diagram.scroll_view\";\nimport DiagramToolboxManager from \"./diagram.toolbox_manager\";\nimport DiagramToolbox from \"./ui.diagram.toolbox\";\nimport DiagramPropertiesPanel from \"./ui.diagram.properties_panel\";\nimport DiagramOptionsUpdateBar from \"./diagram.options_update\";\nimport DiagramDialogManager from \"./ui.diagram.dialog_manager\";\nimport DiagramCommandsManager from \"./diagram.commands_manager\";\nimport NodesOption from \"./diagram.nodes_option\";\nimport EdgesOption from \"./diagram.edges_option\";\nvar DIAGRAM_CLASS = \"dx-diagram\";\nvar DIAGRAM_FULLSCREEN_CLASS = \"dx-diagram-fullscreen\";\nvar DIAGRAM_TOOLBAR_WRAPPER_CLASS = DIAGRAM_CLASS + \"-toolbar-wrapper\";\nvar DIAGRAM_CONTENT_WRAPPER_CLASS = DIAGRAM_CLASS + \"-content-wrapper\";\nvar DIAGRAM_CONTENT_CLASS = DIAGRAM_CLASS + \"-content\";\nvar DIAGRAM_SCROLL_VIEW_CLASS = DIAGRAM_CLASS + \"-scroll-view\";\nvar DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-floating-toolbar-container\";\nvar DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-properties-panel-toolbar-container\";\nvar DIAGRAM_LOADING_INDICATOR_CLASS = DIAGRAM_CLASS + \"-loading-indicator\";\nvar DIAGRAM_FLOATING_PANEL_OFFSET = 12;\nvar DIAGRAM_DEFAULT_UNIT = \"in\";\nvar DIAGRAM_DEFAULT_ZOOMLEVEL = 1;\nvar DIAGRAM_DEFAULT_AUTOZOOM_MODE = \"disabled\";\nvar DIAGRAM_DEFAULT_PAGE_ORIENTATION = \"portrait\";\nvar DIAGRAM_DEFAULT_PAGE_COLOR = \"#ffffff\";\nvar DIAGRAM_MAX_MOBILE_WINDOW_WIDTH = 576;\nvar DIAGRAM_TOOLBOX_SHAPE_SPACING = 12;\nvar DIAGRAM_TOOLBOX_SHAPES_PER_ROW = 3;\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING = 12;\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW = 4;\nvar DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH = 152;\nvar DIAGRAM_NAMESPACE = \"dxDiagramEvent\";\nvar FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"fullscreenchange\", DIAGRAM_NAMESPACE);\nvar IE_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"msfullscreenchange\", DIAGRAM_NAMESPACE);\nvar WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"webkitfullscreenchange\", DIAGRAM_NAMESPACE);\nvar MOZ_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"mozfullscreenchange\", DIAGRAM_NAMESPACE);\n\nvar Diagram = /*#__PURE__*/function (_Widget) {\n  _inherits(Diagram, _Widget);\n\n  var _super = _createSuper(Diagram);\n\n  function Diagram() {\n    _classCallCheck(this, Diagram);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Diagram, [{\n    key: \"_init\",\n    value: function _init() {\n      this._updateDiagramLockCount = 0;\n      this.toggleFullscreenLock = 0;\n      this._browserResizeTimer = -1;\n      this._toolbars = [];\n\n      _get(_getPrototypeOf(Diagram.prototype), \"_init\", this).call(this);\n\n      this._initDiagram();\n\n      this._createCustomCommand();\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var _this = this;\n\n      _get(_getPrototypeOf(Diagram.prototype), \"_initMarkup\", this).call(this);\n\n      this._toolbars = [];\n      delete this._isMobileScreenSize;\n      var isServerSide = !hasWindow();\n      this.$element().addClass(DIAGRAM_CLASS);\n      delete this._mainToolbar;\n\n      if (this.option(\"mainToolbar.visible\")) {\n        this._renderMainToolbar();\n      }\n\n      var $contentWrapper = $(\"<div>\").addClass(DIAGRAM_CONTENT_WRAPPER_CLASS).appendTo(this.$element());\n      delete this._historyToolbar;\n      delete this._historyToolbarResizeCallback;\n\n      if (this._isHistoryToolbarVisible()) {\n        this._renderHistoryToolbar($contentWrapper);\n      }\n\n      delete this._propertiesToolbar;\n      delete this._propertiesToolbarResizeCallback;\n\n      if (this._isPropertiesPanelEnabled()) {\n        this._renderPropertiesToolbar($contentWrapper);\n      }\n\n      delete this._viewToolbar;\n      delete this._viewToolbarResizeCallback;\n\n      if (this.option(\"viewToolbar.visible\")) {\n        this._renderViewToolbar($contentWrapper);\n      }\n\n      delete this._toolbox;\n      delete this._toolboxResizeCallback;\n\n      if (this._isToolboxEnabled()) {\n        this._renderToolbox($contentWrapper);\n      }\n\n      delete this._propertiesPanel;\n      delete this._propertiesPanelResizeCallback;\n\n      if (this._isPropertiesPanelEnabled()) {\n        this._renderPropertiesPanel($contentWrapper);\n      }\n\n      this._$content = $(\"<div>\").addClass(DIAGRAM_CONTENT_CLASS).appendTo($contentWrapper);\n      delete this._contextMenu;\n      this._diagramInstance.settings.contextMenuEnabled = this.option(\"contextMenu.enabled\");\n\n      if (this._diagramInstance.settings.contextMenuEnabled) {\n        this._renderContextMenu($contentWrapper);\n      }\n\n      delete this._contextToolbox;\n\n      if (this.option(\"contextToolbox.enabled\")) {\n        this._renderContextToolbox($contentWrapper);\n      }\n\n      this._renderDialog($contentWrapper);\n\n      if (!isServerSide) {\n        var $scrollViewWrapper = $(\"<div>\").addClass(DIAGRAM_SCROLL_VIEW_CLASS).appendTo(this._$content);\n\n        this._createComponent($scrollViewWrapper, DiagramScrollView, {\n          onCreateDiagram: function onCreateDiagram(e) {\n            _this._diagramInstance.createDocument(e.$parent[0], e.scrollView);\n          }\n        });\n      }\n\n      if (hasWindow()) {\n        resizeCallbacks.add(function () {\n          _this._killBrowserResizeTimer();\n\n          _this._browserResizeTimer = setTimeout(function () {\n            return _this._processBrowserResize();\n          }, 100);\n        });\n      }\n\n      this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible());\n\n      this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible());\n    }\n  }, {\n    key: \"_processBrowserResize\",\n    value: function _processBrowserResize() {\n      this._isMobileScreenSize = void 0;\n\n      this._processDiagramResize();\n\n      this._killBrowserResizeTimer();\n    }\n  }, {\n    key: \"_processDiagramResize\",\n    value: function _processDiagramResize() {\n      if (this._historyToolbarResizeCallback) {\n        this._historyToolbarResizeCallback.call(this);\n      }\n\n      if (this._propertiesToolbarResizeCallback) {\n        this._propertiesToolbarResizeCallback.call(this);\n      }\n\n      if (this._propertiesPanelResizeCallback) {\n        this._propertiesPanelResizeCallback.call(this);\n      }\n\n      if (this._viewToolbarResizeCallback) {\n        this._viewToolbarResizeCallback.call(this);\n      }\n\n      if (this._toolboxResizeCallback) {\n        this._toolboxResizeCallback.call(this);\n      }\n    }\n  }, {\n    key: \"_killBrowserResizeTimer\",\n    value: function _killBrowserResizeTimer() {\n      if (this._browserResizeTimer > -1) {\n        clearTimeout(this._browserResizeTimer);\n      }\n\n      this._browserResizeTimer = -1;\n    }\n  }, {\n    key: \"isMobileScreenSize\",\n    value: function isMobileScreenSize() {\n      if (void 0 === this._isMobileScreenSize) {\n        this._isMobileScreenSize = hasWindow() && this.$element().outerWidth() < DIAGRAM_MAX_MOBILE_WINDOW_WIDTH;\n      }\n\n      return this._isMobileScreenSize;\n    }\n  }, {\n    key: \"_captureFocus\",\n    value: function _captureFocus() {\n      if (this._diagramInstance) {\n        this._diagramInstance.captureFocus();\n      }\n    }\n  }, {\n    key: \"_captureFocusOnTimeout\",\n    value: function _captureFocusOnTimeout() {\n      var _this2 = this;\n\n      this._captureFocusTimeout = setTimeout(function () {\n        _this2._captureFocus();\n\n        delete _this2._captureFocusTimeout;\n      }, 100);\n    }\n  }, {\n    key: \"_killCaptureFocusTimeout\",\n    value: function _killCaptureFocusTimeout() {\n      if (this._captureFocusTimeout) {\n        clearTimeout(this._captureFocusTimeout);\n        delete this._captureFocusTimeout;\n      }\n    }\n  }, {\n    key: \"notifyBarCommandExecuted\",\n    value: function notifyBarCommandExecuted() {\n      this._captureFocusOnTimeout();\n    }\n  }, {\n    key: \"_registerToolbar\",\n    value: function _registerToolbar(component) {\n      this._registerBar(component);\n\n      this._toolbars.push(component);\n    }\n  }, {\n    key: \"_registerBar\",\n    value: function _registerBar(component) {\n      component.bar.onChanged.add(this);\n\n      this._diagramInstance.registerBar(component.bar);\n    }\n  }, {\n    key: \"_getExcludeCommands\",\n    value: function _getExcludeCommands() {\n      var excludeCommands = [];\n\n      if (!this._isToolboxEnabled()) {\n        excludeCommands.push(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME);\n      }\n\n      if (!this._isPropertiesPanelEnabled()) {\n        excludeCommands.push(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME);\n      }\n\n      return excludeCommands;\n    }\n  }, {\n    key: \"_getToolbarBaseOptions\",\n    value: function _getToolbarBaseOptions() {\n      var _this3 = this;\n\n      return {\n        onContentReady: function onContentReady(_ref) {\n          var component = _ref.component;\n          return _this3._registerToolbar(component);\n        },\n        onSubMenuVisibilityChanging: function onSubMenuVisibilityChanging(_ref2) {\n          var component = _ref2.component;\n          return _this3._diagramInstance.updateBarItemsState(component.bar);\n        },\n        onPointerUp: this._onPanelPointerUp.bind(this),\n        export: this.option(\"export\"),\n        container: this.$element(),\n        excludeCommands: this._getExcludeCommands(),\n        onInternalCommand: this._onInternalCommand.bind(this),\n        onCustomCommand: this._onCustomCommand.bind(this),\n        isMobileView: this.isMobileScreenSize()\n      };\n    }\n  }, {\n    key: \"_onInternalCommand\",\n    value: function _onInternalCommand(e) {\n      switch (e.command) {\n        case DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME:\n          if (this._toolbox) {\n            this._toolbox.toggle();\n          }\n\n          break;\n\n        case DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME:\n          if (this._propertiesPanel) {\n            this._propertiesPanel.toggle();\n          }\n\n      }\n    }\n  }, {\n    key: \"_onCustomCommand\",\n    value: function _onCustomCommand(e) {\n      this._customCommandAction({\n        name: e.name\n      });\n    }\n  }, {\n    key: \"_renderMainToolbar\",\n    value: function _renderMainToolbar() {\n      var $toolbarWrapper = $(\"<div>\").addClass(DIAGRAM_TOOLBAR_WRAPPER_CLASS).appendTo(this.$element());\n      this._mainToolbar = this._createComponent($toolbarWrapper, DiagramMainToolbar, extend(this._getToolbarBaseOptions(), {\n        commands: this.option(\"mainToolbar.commands\"),\n        skipAdjustSize: true\n      }));\n    }\n  }, {\n    key: \"_isHistoryToolbarVisible\",\n    value: function _isHistoryToolbarVisible() {\n      return this.option(\"historyToolbar.visible\") && !this.isReadOnlyMode();\n    }\n  }, {\n    key: \"_renderHistoryToolbar\",\n    value: function _renderHistoryToolbar($parent) {\n      var _this4 = this;\n\n      var isServerSide = !hasWindow();\n      var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n      this._historyToolbar = this._createComponent($container, DiagramHistoryToolbar, extend(this._getToolbarBaseOptions(), {\n        commands: this.option(\"historyToolbar.commands\"),\n        locateInMenu: \"never\"\n      }));\n\n      this._updateHistoryToolbarPosition($container, $parent, isServerSide);\n\n      this._historyToolbarResizeCallback = function () {\n        _this4._historyToolbar.option(\"isMobileView\", _this4.isMobileScreenSize());\n      };\n    }\n  }, {\n    key: \"_updateHistoryToolbarPosition\",\n    value: function _updateHistoryToolbarPosition($container, $parent, isServerSide) {\n      if (isServerSide) {\n        return;\n      }\n\n      positionUtils.setup($container, {\n        my: \"left top\",\n        at: \"left top\",\n        of: $parent,\n        offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" \" + DIAGRAM_FLOATING_PANEL_OFFSET\n      });\n    }\n  }, {\n    key: \"_isToolboxEnabled\",\n    value: function _isToolboxEnabled() {\n      return \"disabled\" !== this.option(\"toolbox.visibility\") && !this.isReadOnlyMode();\n    }\n  }, {\n    key: \"_isToolboxVisible\",\n    value: function _isToolboxVisible() {\n      return \"visible\" === this.option(\"toolbox.visibility\") || \"auto\" === this.option(\"toolbox.visibility\") && !this.isMobileScreenSize();\n    }\n  }, {\n    key: \"_renderToolbox\",\n    value: function _renderToolbox($parent) {\n      var _this5 = this;\n\n      var isServerSide = !hasWindow();\n      var $toolBox = $(\"<div>\").appendTo($parent);\n\n      var bounds = this._getToolboxBounds($parent, isServerSide);\n\n      this._toolbox = this._createComponent($toolBox, DiagramToolbox, {\n        isMobileView: this.isMobileScreenSize(),\n        isVisible: this._isToolboxVisible(),\n        container: this.$element(),\n        height: bounds.height,\n        offsetParent: $parent,\n        offsetX: bounds.offsetX,\n        offsetY: bounds.offsetY,\n        showSearch: this.option(\"toolbox.showSearch\"),\n        toolboxGroups: this._getToolboxGroups(),\n        toolboxWidth: this.option(\"toolbox.width\"),\n        onShapeCategoryRendered: function onShapeCategoryRendered(e) {\n          if (isServerSide) {\n            return;\n          }\n\n          _this5._diagramInstance.createToolbox(e.$element[0], \"texts\" === e.displayMode, e.shapes || e.category, {\n            shapeIconSpacing: DIAGRAM_TOOLBOX_SHAPE_SPACING,\n            shapeIconCountInRow: _this5.option(\"toolbox.shapeIconsPerRow\"),\n            shapeIconAttributes: {\n              \"data-toggle\": e.dataToggle\n            }\n          });\n        },\n        onFilterChanged: function onFilterChanged(e) {\n          if (isServerSide) {\n            return;\n          }\n\n          _this5._diagramInstance.applyToolboxFilter(e.text, e.filteringToolboxes);\n        },\n        onVisibilityChanging: function onVisibilityChanging(e) {\n          if (isServerSide) {\n            return;\n          }\n\n          _this5._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, e.visible);\n\n          if (_this5._propertiesPanel) {\n            if (e.visible && _this5.isMobileScreenSize()) {\n              _this5._propertiesPanel.hide();\n            }\n          }\n\n          if (_this5._historyToolbar) {\n            if (e.visible && _this5.isMobileScreenSize()) {\n              _this5._historyToolbarZIndex = zIndexPool.create(Overlay.baseZIndex());\n\n              _this5._historyToolbar.$element().css(\"zIndex\", _this5._historyToolbarZIndex);\n\n              _this5._historyToolbar.$element().css(\"boxShadow\", \"none\");\n            }\n          }\n\n          if (_this5._viewToolbar) {\n            _this5._viewToolbar.$element().css(\"opacity\", e.visible && _this5.isMobileScreenSize() ? \"0\" : \"1\");\n\n            _this5._viewToolbar.$element().css(\"pointerEvents\", e.visible && _this5.isMobileScreenSize() ? \"none\" : \"\");\n          }\n        },\n        onVisibilityChanged: function onVisibilityChanged(e) {\n          if (!e.visible && !_this5._textInputStarted) {\n            _this5._captureFocus();\n          }\n\n          if (!isServerSide) {\n            if (_this5._historyToolbar) {\n              if (!e.visible && _this5.isMobileScreenSize() && _this5._historyToolbarZIndex) {\n                zIndexPool.remove(_this5._historyToolbarZIndex);\n\n                _this5._historyToolbar.$element().css(\"zIndex\", \"\");\n\n                _this5._historyToolbar.$element().css(\"boxShadow\", \"\");\n\n                _this5._historyToolbarZIndex = void 0;\n              }\n            }\n          }\n        },\n        onPointerUp: this._onPanelPointerUp.bind(this)\n      });\n\n      this._toolboxResizeCallback = function () {\n        var bounds = _this5._getToolboxBounds($parent, isServerSide);\n\n        _this5._toolbox.option(\"height\", bounds.height);\n\n        var prevIsMobileView = _this5._toolbox.option(\"isMobileView\");\n\n        if (prevIsMobileView !== _this5.isMobileScreenSize()) {\n          _this5._toolbox.option({\n            isMobileView: _this5.isMobileScreenSize(),\n            isVisible: _this5._isToolboxVisible()\n          });\n\n          _this5._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, _this5._isToolboxVisible());\n        }\n\n        _this5._toolbox.updateMaxHeight();\n      };\n    }\n  }, {\n    key: \"_getToolboxBounds\",\n    value: function _getToolboxBounds($parent, isServerSide) {\n      var result = {\n        offsetX: DIAGRAM_FLOATING_PANEL_OFFSET,\n        offsetY: DIAGRAM_FLOATING_PANEL_OFFSET,\n        height: !isServerSide ? $parent.height() - 2 * DIAGRAM_FLOATING_PANEL_OFFSET : 0\n      };\n\n      if (this._historyToolbar && !isServerSide) {\n        result.offsetY += this._historyToolbar.$element().outerHeight() + DIAGRAM_FLOATING_PANEL_OFFSET;\n        result.height -= this._historyToolbar.$element().outerHeight() + DIAGRAM_FLOATING_PANEL_OFFSET;\n      }\n\n      if (this._viewToolbar && !isServerSide) {\n        result.height -= this._viewToolbar.$element().outerHeight() + this._getViewToolbarYOffset(isServerSide);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_renderViewToolbar\",\n    value: function _renderViewToolbar($parent) {\n      var _this6 = this;\n\n      var isServerSide = !hasWindow();\n      var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n      this._viewToolbar = this._createComponent($container, DiagramViewToolbar, extend(this._getToolbarBaseOptions(), {\n        commands: this.option(\"viewToolbar.commands\"),\n        locateInMenu: \"never\"\n      }));\n\n      this._updateViewToolbarPosition($container, $parent, isServerSide);\n\n      this._viewToolbarResizeCallback = function () {\n        _this6._updateViewToolbarPosition($container, $parent, isServerSide);\n      };\n    }\n  }, {\n    key: \"_getViewToolbarYOffset\",\n    value: function _getViewToolbarYOffset(isServerSide) {\n      if (isServerSide) {\n        return;\n      }\n\n      var result = DIAGRAM_FLOATING_PANEL_OFFSET;\n\n      if (this._viewToolbar && this._propertiesToolbar) {\n        result += (this._propertiesToolbar.$element().outerHeight() - this._viewToolbar.$element().outerHeight()) / 2;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_updateViewToolbarPosition\",\n    value: function _updateViewToolbarPosition($container, $parent, isServerSide) {\n      if (isServerSide) {\n        return;\n      }\n\n      positionUtils.setup($container, {\n        my: \"left bottom\",\n        at: \"left bottom\",\n        of: $parent,\n        offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + this._getViewToolbarYOffset(isServerSide)\n      });\n    }\n  }, {\n    key: \"_isPropertiesPanelEnabled\",\n    value: function _isPropertiesPanelEnabled() {\n      return \"disabled\" !== this.option(\"propertiesPanel.visibility\") && !this.isReadOnlyMode();\n    }\n  }, {\n    key: \"_isPropertiesPanelVisible\",\n    value: function _isPropertiesPanelVisible() {\n      return \"visible\" === this.option(\"propertiesPanel.visibility\");\n    }\n  }, {\n    key: \"_renderPropertiesToolbar\",\n    value: function _renderPropertiesToolbar($parent) {\n      var _this7 = this;\n\n      var isServerSide = !hasWindow();\n      var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).addClass(DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n      this._propertiesToolbar = this._createComponent($container, DiagramPropertiesToolbar, extend(this._getToolbarBaseOptions(), {\n        buttonStylingMode: \"contained\",\n        buttonType: \"default\",\n        locateInMenu: \"never\"\n      }));\n\n      this._updatePropertiesToolbarPosition($container, $parent, isServerSide);\n\n      this._propertiesToolbarResizeCallback = function () {\n        _this7._updatePropertiesToolbarPosition($container, $parent, isServerSide);\n      };\n    }\n  }, {\n    key: \"_updatePropertiesToolbarPosition\",\n    value: function _updatePropertiesToolbarPosition($container, $parent, isServerSide) {\n      if (isServerSide) {\n        return;\n      }\n\n      positionUtils.setup($container, {\n        my: \"right bottom\",\n        at: \"right bottom\",\n        of: $parent,\n        offset: \"-\" + DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + DIAGRAM_FLOATING_PANEL_OFFSET\n      });\n    }\n  }, {\n    key: \"_renderPropertiesPanel\",\n    value: function _renderPropertiesPanel($parent) {\n      var _this8 = this;\n\n      var isServerSide = !hasWindow();\n      var $propertiesPanel = $(\"<div>\").appendTo($parent);\n      var offsetX = DIAGRAM_FLOATING_PANEL_OFFSET;\n      var offsetY = 2 * DIAGRAM_FLOATING_PANEL_OFFSET + (!isServerSide ? this._propertiesToolbar.$element().outerHeight() : 0);\n      this._propertiesPanel = this._createComponent($propertiesPanel, DiagramPropertiesPanel, {\n        isMobileView: this.isMobileScreenSize(),\n        isVisible: this._isPropertiesPanelVisible(),\n        container: this.$element(),\n        offsetParent: $parent,\n        offsetX: offsetX,\n        offsetY: offsetY,\n        propertyTabs: this.option(\"propertiesPanel.tabs\"),\n        onCreateToolbar: function onCreateToolbar(e) {\n          e.toolbar = _this8._createComponent(e.$parent, DiagramToolbar, extend(_this8._getToolbarBaseOptions(), {\n            commands: e.commands,\n            locateInMenu: \"never\",\n            editorStylingMode: \"outlined\"\n          }));\n        },\n        onVisibilityChanging: function onVisibilityChanging(e) {\n          if (isServerSide) {\n            return;\n          }\n\n          _this8._updatePropertiesPanelGroupBars(e.component);\n\n          _this8._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, e.visible);\n\n          if (_this8._toolbox) {\n            if (e.visible && _this8.isMobileScreenSize()) {\n              _this8._toolbox.hide();\n            }\n          }\n        },\n        onVisibilityChanged: function onVisibilityChanged(e) {\n          if (!e.visible && !_this8._textInputStarted) {\n            _this8._captureFocus();\n          }\n        },\n        onSelectedGroupChanged: function onSelectedGroupChanged(_ref3) {\n          var component = _ref3.component;\n          return _this8._updatePropertiesPanelGroupBars(component);\n        },\n        onPointerUp: this._onPanelPointerUp.bind(this)\n      });\n\n      this._propertiesPanelResizeCallback = function () {\n        var prevIsMobileView = _this8._propertiesPanel.option(\"isMobileView\");\n\n        if (prevIsMobileView !== _this8.isMobileScreenSize()) {\n          _this8._propertiesPanel.option({\n            isMobileView: _this8.isMobileScreenSize(),\n            isVisible: _this8._isPropertiesPanelVisible()\n          });\n\n          _this8._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, _this8._isPropertiesPanelVisible());\n        }\n      };\n    }\n  }, {\n    key: \"_updatePropertiesPanelGroupBars\",\n    value: function _updatePropertiesPanelGroupBars(component) {\n      var _this9 = this;\n\n      component.getActiveToolbars().forEach(function (toolbar) {\n        _this9._diagramInstance.updateBarItemsState(toolbar.bar);\n      });\n    }\n  }, {\n    key: \"_onPanelPointerUp\",\n    value: function _onPanelPointerUp() {\n      this._captureFocusOnTimeout();\n    }\n  }, {\n    key: \"_renderContextMenu\",\n    value: function _renderContextMenu($parent) {\n      var _this10 = this;\n\n      var $contextMenu = $(\"<div>\").appendTo($parent);\n      this._contextMenu = this._createComponent($contextMenu, diagramContextMenuModule.DiagramContextMenuWrapper, {\n        commands: this.option(\"contextMenu.commands\"),\n        onContentReady: function onContentReady(_ref4) {\n          var component = _ref4.component;\n          return _this10._registerBar(component);\n        },\n        onVisibilityChanging: function onVisibilityChanging(_ref5) {\n          var component = _ref5.component;\n          return _this10._diagramInstance.updateBarItemsState(component.bar);\n        },\n        onItemClick: function onItemClick(itemData) {\n          return _this10._onBeforeCommandExecuted(itemData.command);\n        },\n        export: this.option(\"export\"),\n        excludeCommands: this._getExcludeCommands(),\n        onInternalCommand: this._onInternalCommand.bind(this),\n        onCustomCommand: this._onCustomCommand.bind(this)\n      });\n    }\n  }, {\n    key: \"_renderContextToolbox\",\n    value: function _renderContextToolbox($parent) {\n      var _this11 = this;\n\n      var isServerSide = !hasWindow();\n      var category = this.option(\"contextToolbox.category\");\n      var displayMode = this.option(\"contextToolbox.displayMode\");\n      var shapes = this.option(\"contextToolbox.shapes\");\n      var $contextToolbox = $(\"<div>\").appendTo($parent);\n      this._contextToolbox = this._createComponent($contextToolbox, DiagramContextToolbox, {\n        toolboxWidth: this.option(\"contextToolbox.width\"),\n        onShown: function onShown(e) {\n          if (isServerSide) {\n            return;\n          }\n\n          var $toolboxContainer = $(e.$element);\n          var isTextGroup = \"texts\" === displayMode;\n\n          if (!shapes && !category && !isTextGroup) {\n            var group = _this11._getToolboxGroups().filter(function (g) {\n              return g.category === e.category;\n            })[0];\n\n            if (group) {\n              isTextGroup = \"texts\" === group.displayMode;\n            }\n          }\n\n          _this11._diagramInstance.createContextToolbox($toolboxContainer[0], isTextGroup, shapes || category || e.category, {\n            shapeIconSpacing: DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING,\n            shapeIconCountInRow: _this11.option(\"contextToolbox.shapeIconsPerRow\")\n          }, function (shapeType) {\n            e.callback(shapeType);\n\n            _this11._captureFocus();\n\n            e.hide();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_setCustomCommandChecked\",\n    value: function _setCustomCommandChecked(command, checked) {\n      this._toolbars.forEach(function (tb) {\n        tb.setCommandChecked(command, checked);\n      });\n    }\n  }, {\n    key: \"_onBeforeCommandExecuted\",\n    value: function _onBeforeCommandExecuted(command) {\n      var dialogParameters = DiagramDialogManager.getDialogParameters(command);\n\n      if (dialogParameters) {\n        this._showDialog(dialogParameters);\n      }\n\n      return !!dialogParameters;\n    }\n  }, {\n    key: \"_renderDialog\",\n    value: function _renderDialog($parent) {\n      var $dialogElement = $(\"<div>\").appendTo($parent);\n      this._dialogInstance = this._createComponent($dialogElement, DiagramDialog, {});\n    }\n  }, {\n    key: \"_showDialog\",\n    value: function _showDialog(dialogParameters) {\n      if (this._dialogInstance) {\n        this._dialogInstance.option(\"onGetContent\", dialogParameters.onGetContent);\n\n        this._dialogInstance.option(\"onHidden\", function () {\n          this._captureFocus();\n        }.bind(this));\n\n        this._dialogInstance.option(\"command\", this._diagramInstance.getCommand(dialogParameters.command));\n\n        this._dialogInstance.option(\"title\", dialogParameters.title);\n\n        this._dialogInstance._show();\n      }\n    }\n  }, {\n    key: \"_showLoadingIndicator\",\n    value: function _showLoadingIndicator() {\n      this._loadingIndicator = $(\"<div>\").addClass(DIAGRAM_LOADING_INDICATOR_CLASS);\n\n      this._createComponent(this._loadingIndicator, LoadIndicator, {});\n\n      var $parent = this._$content || this.$element();\n      $parent.append(this._loadingIndicator);\n    }\n  }, {\n    key: \"_hideLoadingIndicator\",\n    value: function _hideLoadingIndicator() {\n      if (!this._loadingIndicator) {\n        return;\n      }\n\n      this._loadingIndicator.remove();\n\n      this._loadingIndicator = null;\n    }\n  }, {\n    key: \"_initDiagram\",\n    value: function _initDiagram() {\n      var _getDiagram = getDiagram(),\n          DiagramControl = _getDiagram.DiagramControl;\n\n      this._diagramInstance = new DiagramControl();\n      this._diagramInstance.onChanged = this._raiseDataChangeAction.bind(this);\n      this._diagramInstance.onEdgeInserted = this._raiseEdgeInsertedAction.bind(this);\n      this._diagramInstance.onEdgeUpdated = this._raiseEdgeUpdatedAction.bind(this);\n      this._diagramInstance.onEdgeRemoved = this._raiseEdgeRemovedAction.bind(this);\n      this._diagramInstance.onNodeInserted = this._raiseNodeInsertedAction.bind(this);\n      this._diagramInstance.onNodeUpdated = this._raiseNodeUpdatedAction.bind(this);\n      this._diagramInstance.onNodeRemoved = this._raiseNodeRemovedAction.bind(this);\n      this._diagramInstance.onToolboxDragStart = this._raiseToolboxDragStart.bind(this);\n      this._diagramInstance.onToolboxDragEnd = this._raiseToolboxDragEnd.bind(this);\n      this._diagramInstance.onTextInputStart = this._raiseTextInputStart.bind(this);\n      this._diagramInstance.onTextInputEnd = this._raiseTextInputEnd.bind(this);\n      this._diagramInstance.onToggleFullscreen = this._onToggleFullScreen.bind(this);\n      this._diagramInstance.onShowContextMenu = this._onShowContextMenu.bind(this);\n      this._diagramInstance.onHideContextMenu = this._onHideContextMenu.bind(this);\n      this._diagramInstance.onShowContextToolbox = this._onShowContextToolbox.bind(this);\n      this._diagramInstance.onHideContextToolbox = this._onHideContextToolbox.bind(this);\n\n      this._diagramInstance.onNativeAction.add({\n        notifyItemClick: this._raiseItemClickAction.bind(this),\n        notifyItemDblClick: this._raiseItemDblClickAction.bind(this),\n        notifySelectionChanged: this._raiseSelectionChanged.bind(this)\n      });\n\n      this._diagramInstance.onRequestOperation = this._raiseRequestEditOperation.bind(this);\n\n      this._updateEventSubscriptionMethods();\n\n      this._updateDefaultItemProperties();\n\n      this._updateEditingSettings();\n\n      this._updateShapeTexts();\n\n      this._updateUnitItems();\n\n      this._updateFormatUnitsMethod();\n\n      if (this.option(\"units\") !== DIAGRAM_DEFAULT_UNIT) {\n        this._updateUnitsState();\n      }\n\n      if (this.isReadOnlyMode()) {\n        this._updateReadOnlyState();\n      }\n\n      if (this.option(\"pageSize\")) {\n        if (this.option(\"pageSize.items\")) {\n          this._updatePageSizeItemsState();\n        }\n\n        if (this.option(\"pageSize.width\") && this.option(\"pageSize.height\")) {\n          this._updatePageSizeState();\n        }\n      }\n\n      if (this.option(\"pageOrientation\") !== DIAGRAM_DEFAULT_PAGE_ORIENTATION) {\n        this._updatePageOrientationState();\n      }\n\n      if (this.option(\"pageColor\") !== DIAGRAM_DEFAULT_PAGE_COLOR) {\n        this._updatePageColorState();\n      }\n\n      if (this.option(\"viewUnits\") !== DIAGRAM_DEFAULT_UNIT) {\n        this._updateViewUnitsState();\n      }\n\n      if (!this.option(\"showGrid\")) {\n        this._updateShowGridState();\n      }\n\n      if (!this.option(\"snapToGrid\")) {\n        this._updateSnapToGridState();\n      }\n\n      if (this.option(\"gridSize\")) {\n        this._updateGridSizeState();\n      }\n\n      if (this.option(\"zoomLevel\") !== DIAGRAM_DEFAULT_ZOOMLEVEL) {\n        this._updateZoomLevelState();\n      }\n\n      if (this.option(\"simpleView\")) {\n        this._updateSimpleViewState();\n      }\n\n      if (this.option(\"autoZoomMode\") !== DIAGRAM_DEFAULT_AUTOZOOM_MODE) {\n        this._updateAutoZoomState();\n      }\n\n      if (this.option(\"fullScreen\")) {\n        var window = getWindow();\n\n        if (window && window.self !== window.top) {\n          this.option(\"fullScreen\", false);\n        } else {\n          this._updateFullscreenState();\n        }\n      }\n\n      this.optionsUpdateBar = new DiagramOptionsUpdateBar(this);\n\n      this._diagramInstance.registerBar(this.optionsUpdateBar);\n\n      if (hasWindow()) {\n        this._diagramInstance.initMeasurer(this.$element()[0]);\n      }\n\n      this._updateCustomShapes(this._getCustomShapes());\n\n      this._refreshDataSources();\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      if (this._diagramInstance) {\n        this._diagramInstance.cleanMarkup(function (element) {\n          $(element).empty();\n        });\n      }\n\n      _get(_getPrototypeOf(Diagram.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      this._killCaptureFocusTimeout();\n\n      _get(_getPrototypeOf(Diagram.prototype), \"_dispose\", this).call(this);\n\n      this._diagramInstance = void 0;\n    }\n  }, {\n    key: \"_executeDiagramCommand\",\n    value: function _executeDiagramCommand(command, parameter) {\n      this._diagramInstance.getCommand(command).execute(parameter);\n    }\n  }, {\n    key: \"getNodeDataSource\",\n    value: function getNodeDataSource() {\n      return this._nodesOption && this._nodesOption.getDataSource();\n    }\n  }, {\n    key: \"getEdgeDataSource\",\n    value: function getEdgeDataSource() {\n      return this._edgesOption && this._edgesOption.getDataSource();\n    }\n  }, {\n    key: \"_refreshDataSources\",\n    value: function _refreshDataSources() {\n      this._beginUpdateDiagram();\n\n      this._refreshNodesDataSource();\n\n      this._refreshEdgesDataSource();\n\n      this._endUpdateDiagram();\n    }\n  }, {\n    key: \"_refreshNodesDataSource\",\n    value: function _refreshNodesDataSource() {\n      if (this._nodesOption) {\n        this._nodesOption._disposeDataSource();\n\n        delete this._nodesOption;\n      }\n\n      if (this.option(\"nodes.dataSource\")) {\n        this._nodesOption = new NodesOption(this);\n\n        this._nodesOption.option(\"dataSource\", this.option(\"nodes.dataSource\"));\n\n        this._nodesOption._refreshDataSource();\n      }\n    }\n  }, {\n    key: \"_refreshEdgesDataSource\",\n    value: function _refreshEdgesDataSource() {\n      if (this._edgesOption) {\n        this._edgesOption._disposeDataSource();\n\n        delete this._edgesOption;\n      }\n\n      if (this.option(\"edges.dataSource\")) {\n        this._edgesOption = new EdgesOption(this);\n\n        this._edgesOption.option(\"dataSource\", this.option(\"edges.dataSource\"));\n\n        this._edgesOption._refreshDataSource();\n      }\n    }\n  }, {\n    key: \"_getDiagramData\",\n    value: function _getDiagramData() {\n      var value;\n\n      var _getDiagram2 = getDiagram(),\n          DiagramCommand = _getDiagram2.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.Export, function (data) {\n        value = data;\n      });\n\n      return value;\n    }\n  }, {\n    key: \"_setDiagramData\",\n    value: function _setDiagramData(data, keepExistingItems) {\n      var _getDiagram3 = getDiagram(),\n          DiagramCommand = _getDiagram3.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.Import, {\n        data: data,\n        keepExistingItems: keepExistingItems\n      });\n    }\n  }, {\n    key: \"isReadOnlyMode\",\n    value: function isReadOnlyMode() {\n      return this.option(\"readOnly\") || this.option(\"disabled\");\n    }\n  }, {\n    key: \"_onDataSourceChanged\",\n    value: function _onDataSourceChanged() {\n      this._bindDiagramData();\n    }\n  }, {\n    key: \"_getChangesKeys\",\n    value: function _getChangesKeys(changes) {\n      return changes.map(function (change) {\n        return change.internalKey || change.key;\n      }).filter(function (key) {\n        return !!key;\n      });\n    }\n  }, {\n    key: \"_createOptionGetter\",\n    value: function _createOptionGetter(optionName) {\n      var expr = this.option(optionName);\n      return expr && compileGetter(expr);\n    }\n  }, {\n    key: \"_onRequestUpdateLayout\",\n    value: function _onRequestUpdateLayout(changes) {\n      if (!this._requestLayoutUpdateAction) {\n        this._createRequestLayoutUpdateAction();\n      }\n\n      var eventArgs = {\n        changes: changes,\n        allowed: false\n      };\n\n      this._requestLayoutUpdateAction(eventArgs);\n\n      return eventArgs.allowed;\n    }\n  }, {\n    key: \"_createOptionSetter\",\n    value: function _createOptionSetter(optionName) {\n      var expr = this.option(optionName);\n\n      if (isFunction(expr)) {\n        return expr;\n      }\n\n      return expr && compileSetter(expr);\n    }\n  }, {\n    key: \"_bindDiagramData\",\n    value: function _bindDiagramData() {\n      if (this._updateDiagramLockCount || !this._isBindingMode()) {\n        return;\n      }\n\n      var _getDiagram4 = getDiagram(),\n          DiagramCommand = _getDiagram4.DiagramCommand,\n          ConnectorLineOption = _getDiagram4.ConnectorLineOption,\n          ConnectorLineEnding = _getDiagram4.ConnectorLineEnding;\n\n      var lineOptionGetter;\n      var lineOptionSetter;\n      var startLineEndingGetter;\n      var startLineEndingSetter;\n      var endLineEndingGetter;\n      var endLineEndingSetter;\n      var containerKeyGetter;\n      var containerKeySetter;\n      var data = {\n        nodeDataSource: this._nodesOption && this._nodesOption.getItems(),\n        edgeDataSource: this._edgesOption && this._edgesOption.getItems(),\n        nodeDataImporter: {\n          getKey: this._createOptionGetter(\"nodes.keyExpr\"),\n          setKey: this._createOptionSetter(\"nodes.keyExpr\"),\n          getCustomData: this._createOptionGetter(\"nodes.customDataExpr\"),\n          setCustomData: this._createOptionSetter(\"nodes.customDataExpr\"),\n          getLocked: this._createOptionGetter(\"nodes.lockedExpr\"),\n          setLocked: this._createOptionSetter(\"nodes.lockedExpr\"),\n          getStyle: this._createOptionGetter(\"nodes.styleExpr\"),\n          setStyle: this._createOptionSetter(\"nodes.styleExpr\"),\n          getStyleText: this._createOptionGetter(\"nodes.textStyleExpr\"),\n          setStyleText: this._createOptionSetter(\"nodes.textStyleExpr\"),\n          getZIndex: this._createOptionGetter(\"nodes.zIndexExpr\"),\n          setZIndex: this._createOptionSetter(\"nodes.zIndexExpr\"),\n          getType: this._createOptionGetter(\"nodes.typeExpr\"),\n          setType: this._createOptionSetter(\"nodes.typeExpr\"),\n          getText: this._createOptionGetter(\"nodes.textExpr\"),\n          setText: this._createOptionSetter(\"nodes.textExpr\"),\n          getImage: this._createOptionGetter(\"nodes.imageUrlExpr\"),\n          setImage: this._createOptionSetter(\"nodes.imageUrlExpr\"),\n          getLeft: this._createOptionGetter(\"nodes.leftExpr\"),\n          setLeft: this._createOptionSetter(\"nodes.leftExpr\"),\n          getTop: this._createOptionGetter(\"nodes.topExpr\"),\n          setTop: this._createOptionSetter(\"nodes.topExpr\"),\n          getWidth: this._createOptionGetter(\"nodes.widthExpr\"),\n          setWidth: this._createOptionSetter(\"nodes.widthExpr\"),\n          getHeight: this._createOptionGetter(\"nodes.heightExpr\"),\n          setHeight: this._createOptionSetter(\"nodes.heightExpr\"),\n          getParentKey: this._createOptionGetter(\"nodes.parentKeyExpr\"),\n          setParentKey: this._createOptionSetter(\"nodes.parentKeyExpr\"),\n          getItems: this._createOptionGetter(\"nodes.itemsExpr\"),\n          setItems: this._createOptionSetter(\"nodes.itemsExpr\"),\n          getContainerKey: containerKeyGetter = this._createOptionGetter(\"nodes.containerKeyExpr\"),\n          setContainerKey: containerKeySetter = this._createOptionSetter(\"nodes.containerKeyExpr\"),\n          getChildren: !containerKeyGetter && !containerKeySetter && this._createOptionGetter(\"nodes.containerChildrenExpr\"),\n          setChildren: !containerKeyGetter && !containerKeySetter && this._createOptionSetter(\"nodes.containerChildrenExpr\")\n        },\n        edgeDataImporter: {\n          getKey: this._createOptionGetter(\"edges.keyExpr\"),\n          setKey: this._createOptionSetter(\"edges.keyExpr\"),\n          getCustomData: this._createOptionGetter(\"edges.customDataExpr\"),\n          setCustomData: this._createOptionSetter(\"edges.customDataExpr\"),\n          getLocked: this._createOptionGetter(\"edges.lockedExpr\"),\n          setLocked: this._createOptionSetter(\"edges.lockedExpr\"),\n          getStyle: this._createOptionGetter(\"edges.styleExpr\"),\n          setStyle: this._createOptionSetter(\"edges.styleExpr\"),\n          getStyleText: this._createOptionGetter(\"edges.textStyleExpr\"),\n          setStyleText: this._createOptionSetter(\"edges.textStyleExpr\"),\n          getZIndex: this._createOptionGetter(\"edges.zIndexExpr\"),\n          setZIndex: this._createOptionSetter(\"edges.zIndexExpr\"),\n          getFrom: this._createOptionGetter(\"edges.fromExpr\"),\n          setFrom: this._createOptionSetter(\"edges.fromExpr\"),\n          getFromPointIndex: this._createOptionGetter(\"edges.fromPointIndexExpr\"),\n          setFromPointIndex: this._createOptionSetter(\"edges.fromPointIndexExpr\"),\n          getTo: this._createOptionGetter(\"edges.toExpr\"),\n          setTo: this._createOptionSetter(\"edges.toExpr\"),\n          getToPointIndex: this._createOptionGetter(\"edges.toPointIndexExpr\"),\n          setToPointIndex: this._createOptionSetter(\"edges.toPointIndexExpr\"),\n          getPoints: this._createOptionGetter(\"edges.pointsExpr\"),\n          setPoints: this._createOptionSetter(\"edges.pointsExpr\"),\n          getText: this._createOptionGetter(\"edges.textExpr\"),\n          setText: this._createOptionSetter(\"edges.textExpr\"),\n          getLineOption: (lineOptionGetter = this._createOptionGetter(\"edges.lineTypeExpr\")) && function (obj) {\n            var lineType = lineOptionGetter(obj);\n            return this._getConnectorLineOption(lineType);\n          }.bind(this),\n          setLineOption: (lineOptionSetter = this._createOptionSetter(\"edges.lineTypeExpr\")) && function (obj, value) {\n            switch (value) {\n              case ConnectorLineOption.Straight:\n                value = \"straight\";\n                break;\n\n              case ConnectorLineOption.Orthogonal:\n                value = \"orthogonal\";\n            }\n\n            lineOptionSetter(obj, value);\n          }.bind(this),\n          getStartLineEnding: (startLineEndingGetter = this._createOptionGetter(\"edges.fromLineEndExpr\")) && function (obj) {\n            var lineEnd = startLineEndingGetter(obj);\n            return this._getConnectorLineEnding(lineEnd);\n          }.bind(this),\n          setStartLineEnding: (startLineEndingSetter = this._createOptionSetter(\"edges.fromLineEndExpr\")) && function (obj, value) {\n            switch (value) {\n              case ConnectorLineEnding.Arrow:\n                value = \"arrow\";\n                break;\n\n              case ConnectorLineEnding.OutlinedTriangle:\n                value = \"outlinedTriangle\";\n                break;\n\n              case ConnectorLineEnding.FilledTriangle:\n                value = \"filledTriangle\";\n                break;\n\n              case ConnectorLineEnding.None:\n                value = \"none\";\n            }\n\n            startLineEndingSetter(obj, value);\n          }.bind(this),\n          getEndLineEnding: (endLineEndingGetter = this._createOptionGetter(\"edges.toLineEndExpr\")) && function (obj) {\n            var lineEnd = endLineEndingGetter(obj);\n            return this._getConnectorLineEnding(lineEnd);\n          }.bind(this),\n          setEndLineEnding: (endLineEndingSetter = this._createOptionSetter(\"edges.toLineEndExpr\")) && function (obj, value) {\n            switch (value) {\n              case ConnectorLineEnding.Arrow:\n                value = \"arrow\";\n                break;\n\n              case ConnectorLineEnding.OutlinedTriangle:\n                value = \"outlinedTriangle\";\n                break;\n\n              case ConnectorLineEnding.FilledTriangle:\n                value = \"filledTriangle\";\n                break;\n\n              case ConnectorLineEnding.None:\n                value = \"none\";\n            }\n\n            endLineEndingSetter(obj, value);\n          }.bind(this)\n        },\n        layoutParameters: this._getDataBindingLayoutParameters()\n      };\n\n      this._executeDiagramCommand(DiagramCommand.BindDocument, data);\n    }\n  }, {\n    key: \"_reloadContentByChanges\",\n    value: function _reloadContentByChanges(changes, isExternalChanges) {\n      var keys = this._getChangesKeys(changes);\n\n      var applyLayout = this._onRequestUpdateLayout(changes);\n\n      this._reloadContent(keys, applyLayout, isExternalChanges);\n    }\n  }, {\n    key: \"_reloadContent\",\n    value: function _reloadContent(itemKeys, applyLayout, isExternalChanges) {\n      var _this12 = this;\n\n      this._diagramInstance.reloadContent(itemKeys, function () {\n        var nodeDataSource;\n        var edgeDataSource;\n\n        if (_this12._nodesOption && isExternalChanges) {\n          nodeDataSource = _this12._nodesOption.getItems();\n        }\n\n        if (_this12._edgesOption && isExternalChanges) {\n          edgeDataSource = _this12._edgesOption.getItems();\n        }\n\n        return {\n          nodeDataSource: nodeDataSource,\n          edgeDataSource: edgeDataSource\n        };\n      }, applyLayout && this._getDataBindingLayoutParameters(), isExternalChanges);\n    }\n  }, {\n    key: \"_getConnectorLineOption\",\n    value: function _getConnectorLineOption(lineType) {\n      var _getDiagram5 = getDiagram(),\n          ConnectorLineOption = _getDiagram5.ConnectorLineOption;\n\n      switch (lineType) {\n        case \"straight\":\n          return ConnectorLineOption.Straight;\n\n        default:\n          return ConnectorLineOption.Orthogonal;\n      }\n    }\n  }, {\n    key: \"_getConnectorLineEnding\",\n    value: function _getConnectorLineEnding(lineEnd) {\n      var _getDiagram6 = getDiagram(),\n          ConnectorLineEnding = _getDiagram6.ConnectorLineEnding;\n\n      switch (lineEnd) {\n        case \"arrow\":\n          return ConnectorLineEnding.Arrow;\n\n        case \"outlinedTriangle\":\n          return ConnectorLineEnding.OutlinedTriangle;\n\n        case \"filledTriangle\":\n          return ConnectorLineEnding.FilledTriangle;\n\n        default:\n          return ConnectorLineEnding.None;\n      }\n    }\n  }, {\n    key: \"_getDataBindingLayoutParameters\",\n    value: function _getDataBindingLayoutParameters() {\n      var _getDiagram7 = getDiagram(),\n          DataLayoutType = _getDiagram7.DataLayoutType,\n          DataLayoutOrientation = _getDiagram7.DataLayoutOrientation;\n\n      var layoutParametersOption = this.option(\"nodes.autoLayout\") || \"off\";\n      var layoutType = layoutParametersOption.type || layoutParametersOption;\n      var parameters = {};\n\n      if (\"off\" !== layoutType && (\"auto\" !== layoutType || !this._hasNodePositionExprs())) {\n        switch (layoutType) {\n          case \"tree\":\n            parameters.type = DataLayoutType.Tree;\n            break;\n\n          default:\n            parameters.type = DataLayoutType.Sugiyama;\n        }\n\n        switch (layoutParametersOption.orientation) {\n          case \"vertical\":\n            parameters.orientation = DataLayoutOrientation.Vertical;\n            break;\n\n          case \"horizontal\":\n            parameters.orientation = DataLayoutOrientation.Horizontal;\n        }\n\n        if (this.option(\"edges.fromPointIndexExpr\") || this.option(\"edges.toPointIndexExpr\")) {\n          parameters.skipPointIndices = true;\n        }\n      }\n\n      parameters.autoSizeEnabled = !!this.option(\"nodes.autoSizeEnabled\");\n      return parameters;\n    }\n  }, {\n    key: \"_hasNodePositionExprs\",\n    value: function _hasNodePositionExprs() {\n      return this.option(\"nodes.topExpr\") && this.option(\"nodes.leftExpr\");\n    }\n  }, {\n    key: \"_getAutoZoomValue\",\n    value: function _getAutoZoomValue(option) {\n      var _getDiagram8 = getDiagram(),\n          AutoZoomMode = _getDiagram8.AutoZoomMode;\n\n      switch (option) {\n        case \"fitContent\":\n          return AutoZoomMode.FitContent;\n\n        case \"fitWidth\":\n          return AutoZoomMode.FitToWidth;\n\n        default:\n          return AutoZoomMode.Disabled;\n      }\n    }\n  }, {\n    key: \"_isBindingMode\",\n    value: function _isBindingMode() {\n      return this._nodesOption && this._nodesOption.hasItems() || this._edgesOption && this._nodesOption.hasItems();\n    }\n  }, {\n    key: \"_beginUpdateDiagram\",\n    value: function _beginUpdateDiagram() {\n      this._updateDiagramLockCount++;\n    }\n  }, {\n    key: \"_endUpdateDiagram\",\n    value: function _endUpdateDiagram() {\n      this._updateDiagramLockCount = Math.max(this._updateDiagramLockCount - 1, 0);\n\n      if (!this._updateDiagramLockCount) {\n        this._bindDiagramData();\n      }\n    }\n  }, {\n    key: \"_getCustomShapes\",\n    value: function _getCustomShapes() {\n      return this.option(\"customShapes\") || [];\n    }\n  }, {\n    key: \"_getToolboxGroups\",\n    value: function _getToolboxGroups() {\n      return DiagramToolboxManager.getGroups(this.option(\"toolbox.groups\"));\n    }\n  }, {\n    key: \"_updateCustomShapes\",\n    value: function _updateCustomShapes(customShapes, prevCustomShapes) {\n      var _this13 = this;\n\n      if (Array.isArray(prevCustomShapes)) {\n        this._diagramInstance.removeCustomShapes(prevCustomShapes.map(function (s) {\n          return s.type;\n        }));\n      }\n\n      if (Array.isArray(customShapes)) {\n        this._diagramInstance.addCustomShapes(customShapes.map(function (s) {\n          var templateOption = s.template || _this13.option(\"customShapeTemplate\");\n\n          var template = templateOption && _this13._getTemplate(templateOption);\n\n          var toolboxTemplateOption = s.toolboxTemplate || _this13.option(\"customShapeToolboxTemplate\");\n\n          var toolboxTemplate = toolboxTemplateOption && _this13._getTemplate(toolboxTemplateOption);\n\n          return {\n            category: s.category,\n            type: s.type,\n            baseType: s.baseType,\n            title: s.title,\n            svgUrl: s.backgroundImageUrl,\n            svgToolboxUrl: s.backgroundImageToolboxUrl,\n            svgLeft: s.backgroundImageLeft,\n            svgTop: s.backgroundImageTop,\n            svgWidth: s.backgroundImageWidth,\n            svgHeight: s.backgroundImageHeight,\n            defaultWidth: s.defaultWidth,\n            defaultHeight: s.defaultHeight,\n            toolboxWidthToHeightRatio: s.toolboxWidthToHeightRatio,\n            minWidth: s.minWidth,\n            minHeight: s.minHeight,\n            maxWidth: s.maxWidth,\n            maxHeight: s.maxHeight,\n            allowResize: s.allowResize,\n            defaultText: s.defaultText,\n            allowEditText: s.allowEditText,\n            textLeft: s.textLeft,\n            textTop: s.textTop,\n            textWidth: s.textWidth,\n            textHeight: s.textHeight,\n            defaultImageUrl: s.defaultImageUrl,\n            allowEditImage: s.allowEditImage,\n            imageLeft: s.imageLeft,\n            imageTop: s.imageTop,\n            imageWidth: s.imageWidth,\n            imageHeight: s.imageHeight,\n            connectionPoints: s.connectionPoints && s.connectionPoints.map(function (pt) {\n              return {\n                x: pt.x,\n                y: pt.y\n              };\n            }),\n            createTemplate: template && function (container, item) {\n              template.render({\n                model: _this13._nativeItemToDiagramItem(item),\n                container: getPublicElement($(container))\n              });\n            },\n            createToolboxTemplate: toolboxTemplate && function (container, item) {\n              toolboxTemplate.render({\n                model: _this13._nativeItemToDiagramItem(item),\n                container: getPublicElement($(container))\n              });\n            },\n            destroyTemplate: template && function (container) {\n              $(container).empty();\n            },\n            templateLeft: s.templateLeft,\n            templateTop: s.templateTop,\n            templateWidth: s.templateWidth,\n            templateHeight: s.templateHeight,\n            keepRatioOnAutoSize: s.keepRatioOnAutoSize\n          };\n        }));\n      }\n    }\n  }, {\n    key: \"_onToggleFullScreen\",\n    value: function _onToggleFullScreen(fullScreen) {\n      if (this.toggleFullscreenLock > 0) {\n        return;\n      }\n\n      this._changeNativeFullscreen(fullScreen);\n\n      this.$element().toggleClass(DIAGRAM_FULLSCREEN_CLASS, fullScreen);\n\n      this._diagramInstance.updateLayout(true);\n\n      this._processDiagramResize();\n\n      if (this._toolbox) {\n        this._toolbox.repaint();\n      }\n\n      if (this._propertiesPanel) {\n        this._propertiesPanel.repaint();\n      }\n    }\n  }, {\n    key: \"_changeNativeFullscreen\",\n    value: function _changeNativeFullscreen(setModeOn) {\n      var window = getWindow();\n\n      if (window.self === window.top || setModeOn === this._inNativeFullscreen()) {\n        return;\n      }\n\n      if (setModeOn) {\n        this._subscribeFullscreenNativeChanged();\n      } else {\n        this._unsubscribeFullscreenNativeChanged();\n      }\n\n      this._setNativeFullscreen(setModeOn);\n    }\n  }, {\n    key: \"_setNativeFullscreen\",\n    value: function _setNativeFullscreen(on) {\n      var window = getWindow();\n      var document = window.self.document;\n      var body = window.self.document.body;\n\n      if (on) {\n        if (body.requestFullscreen) {\n          body.requestFullscreen();\n        } else if (body.mozRequestFullscreen) {\n          body.mozRequestFullscreen();\n        } else if (body.webkitRequestFullscreen) {\n          body.webkitRequestFullscreen();\n        } else if (body.msRequestFullscreen) {\n          body.msRequestFullscreen();\n        }\n      } else if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullscreen) {\n        document.mozCancelFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n  }, {\n    key: \"_inNativeFullscreen\",\n    value: function _inNativeFullscreen() {\n      var document = getWindow().document;\n      var fullscreenElement = document.fullscreenElement || document.msFullscreenElement || document.webkitFullscreenElement;\n      var isInFullscreen = fullscreenElement === document.body || document.webkitIsFullscreen;\n      return !!isInFullscreen;\n    }\n  }, {\n    key: \"_subscribeFullscreenNativeChanged\",\n    value: function _subscribeFullscreenNativeChanged() {\n      var document = getWindow().document;\n\n      var handler = this._onNativeFullscreenChangeHandler.bind(this);\n\n      eventsEngine.on(document, FULLSCREEN_CHANGE_EVENT_NAME, handler);\n      eventsEngine.on(document, IE_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n      eventsEngine.on(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n      eventsEngine.on(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n    }\n  }, {\n    key: \"_unsubscribeFullscreenNativeChanged\",\n    value: function _unsubscribeFullscreenNativeChanged() {\n      var document = getWindow().document;\n      eventsEngine.off(document, FULLSCREEN_CHANGE_EVENT_NAME);\n      eventsEngine.off(document, IE_FULLSCREEN_CHANGE_EVENT_NAME);\n      eventsEngine.off(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME);\n      eventsEngine.off(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME);\n    }\n  }, {\n    key: \"_onNativeFullscreenChangeHandler\",\n    value: function _onNativeFullscreenChangeHandler() {\n      if (!this._inNativeFullscreen()) {\n        this._unsubscribeFullscreenNativeChanged();\n\n        this.option(\"fullScreen\", false);\n      }\n    }\n  }, {\n    key: \"_executeDiagramFullscreenCommand\",\n    value: function _executeDiagramFullscreenCommand(fullscreen) {\n      var _getDiagram9 = getDiagram(),\n          DiagramCommand = _getDiagram9.DiagramCommand;\n\n      this.toggleFullscreenLock++;\n\n      this._executeDiagramCommand(DiagramCommand.Fullscreen, fullscreen);\n\n      this.toggleFullscreenLock--;\n    }\n  }, {\n    key: \"_onShowContextMenu\",\n    value: function _onShowContextMenu(x, y, selection) {\n      if (this._contextMenu) {\n        this._contextMenu._show(x, y, selection);\n      }\n    }\n  }, {\n    key: \"_onHideContextMenu\",\n    value: function _onHideContextMenu() {\n      if (this._contextMenu) {\n        this._contextMenu._hide();\n      }\n    }\n  }, {\n    key: \"_onShowContextToolbox\",\n    value: function _onShowContextToolbox(x, y, side, category, callback) {\n      if (this._contextToolbox) {\n        this._contextToolbox._show(x, y, side, category, callback);\n      }\n    }\n  }, {\n    key: \"_onHideContextToolbox\",\n    value: function _onHideContextToolbox() {\n      if (this._contextToolbox) {\n        this._contextToolbox._hide();\n      }\n    }\n  }, {\n    key: \"_getDiagramUnitValue\",\n    value: function _getDiagramUnitValue(value) {\n      var _getDiagram10 = getDiagram(),\n          DiagramUnit = _getDiagram10.DiagramUnit;\n\n      switch (value) {\n        case \"in\":\n          return DiagramUnit.In;\n\n        case \"cm\":\n          return DiagramUnit.Cm;\n\n        case \"px\":\n          return DiagramUnit.Px;\n\n        default:\n          return DiagramUnit.In;\n      }\n    }\n  }, {\n    key: \"_updateReadOnlyState\",\n    value: function _updateReadOnlyState() {\n      var _getDiagram11 = getDiagram(),\n          DiagramCommand = _getDiagram11.DiagramCommand;\n\n      var readOnly = this.isReadOnlyMode();\n\n      this._executeDiagramCommand(DiagramCommand.ToggleReadOnly, readOnly);\n    }\n  }, {\n    key: \"_updateZoomLevelState\",\n    value: function _updateZoomLevelState() {\n      if (this.option(\"zoomLevel.items\")) {\n        this._updateZoomLevelItemsState();\n\n        var zoomLevel = this.option(\"zoomLevel.value\");\n\n        if (!zoomLevel) {\n          return;\n        }\n\n        var _getDiagram12 = getDiagram(),\n            DiagramCommand = _getDiagram12.DiagramCommand;\n\n        this._executeDiagramCommand(DiagramCommand.ZoomLevel, zoomLevel);\n      } else {\n        var _zoomLevel = this.option(\"zoomLevel.value\") || this.option(\"zoomLevel\");\n\n        if (!_zoomLevel) {\n          return;\n        }\n\n        var _getDiagram13 = getDiagram(),\n            _DiagramCommand = _getDiagram13.DiagramCommand;\n\n        this._executeDiagramCommand(_DiagramCommand.ZoomLevel, _zoomLevel);\n      }\n    }\n  }, {\n    key: \"_updateZoomLevelItemsState\",\n    value: function _updateZoomLevelItemsState() {\n      var zoomLevelItems = this.option(\"zoomLevel.items\");\n\n      if (!Array.isArray(zoomLevelItems)) {\n        return;\n      }\n\n      var _getDiagram14 = getDiagram(),\n          DiagramCommand = _getDiagram14.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.ZoomLevelItems, zoomLevelItems);\n    }\n  }, {\n    key: \"_updateAutoZoomState\",\n    value: function _updateAutoZoomState() {\n      var _getDiagram15 = getDiagram(),\n          DiagramCommand = _getDiagram15.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.SwitchAutoZoom, this._getAutoZoomValue(this.option(\"autoZoomMode\")));\n    }\n  }, {\n    key: \"_updateSimpleViewState\",\n    value: function _updateSimpleViewState() {\n      var _getDiagram16 = getDiagram(),\n          DiagramCommand = _getDiagram16.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.ToggleSimpleView, this.option(\"simpleView\"));\n    }\n  }, {\n    key: \"_updateFullscreenState\",\n    value: function _updateFullscreenState() {\n      var fullscreen = this.option(\"fullScreen\");\n\n      this._executeDiagramFullscreenCommand(fullscreen);\n\n      this._onToggleFullScreen(fullscreen);\n    }\n  }, {\n    key: \"_updateShowGridState\",\n    value: function _updateShowGridState() {\n      var _getDiagram17 = getDiagram(),\n          DiagramCommand = _getDiagram17.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.ShowGrid, this.option(\"showGrid\"));\n    }\n  }, {\n    key: \"_updateSnapToGridState\",\n    value: function _updateSnapToGridState() {\n      var _getDiagram18 = getDiagram(),\n          DiagramCommand = _getDiagram18.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.SnapToGrid, this.option(\"snapToGrid\"));\n    }\n  }, {\n    key: \"_updateGridSizeState\",\n    value: function _updateGridSizeState() {\n      if (this.option(\"gridSize.items\")) {\n        this._updateGridSizeItemsState();\n\n        var gridSize = this.option(\"gridSize.value\");\n\n        if (!gridSize) {\n          return;\n        }\n\n        var _getDiagram19 = getDiagram(),\n            DiagramCommand = _getDiagram19.DiagramCommand;\n\n        this._executeDiagramCommand(DiagramCommand.GridSize, gridSize);\n      } else {\n        var _gridSize = this.option(\"gridSize.value\") || this.option(\"gridSize\");\n\n        if (!_gridSize) {\n          return;\n        }\n\n        var _getDiagram20 = getDiagram(),\n            _DiagramCommand2 = _getDiagram20.DiagramCommand;\n\n        this._executeDiagramCommand(_DiagramCommand2.GridSize, _gridSize);\n      }\n    }\n  }, {\n    key: \"_updateGridSizeItemsState\",\n    value: function _updateGridSizeItemsState() {\n      var gridSizeItems = this.option(\"gridSize.items\");\n\n      if (!Array.isArray(gridSizeItems)) {\n        return;\n      }\n\n      var _getDiagram21 = getDiagram(),\n          DiagramCommand = _getDiagram21.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.GridSizeItems, gridSizeItems);\n    }\n  }, {\n    key: \"_updateUnitItems\",\n    value: function _updateUnitItems() {\n      var _getDiagram22 = getDiagram(),\n          DiagramLocalizationService = _getDiagram22.DiagramLocalizationService;\n\n      var items = this._getUnitItems();\n\n      if (this._unitItems !== items) {\n        this._unitItems = items;\n        DiagramLocalizationService.unitItems = items;\n      }\n    }\n  }, {\n    key: \"_getUnitItems\",\n    value: function _getUnitItems() {\n      var _getDiagram23 = getDiagram(),\n          DiagramUnit = _getDiagram23.DiagramUnit;\n\n      var items = {};\n      items[DiagramUnit.In] = messageLocalization.format(\"dxDiagram-unitIn\");\n      items[DiagramUnit.Cm] = messageLocalization.format(\"dxDiagram-unitCm\");\n      items[DiagramUnit.Px] = messageLocalization.format(\"dxDiagram-unitPx\");\n      return items;\n    }\n  }, {\n    key: \"_updateFormatUnitsMethod\",\n    value: function _updateFormatUnitsMethod() {\n      var _getDiagram24 = getDiagram(),\n          DiagramLocalizationService = _getDiagram24.DiagramLocalizationService;\n\n      DiagramLocalizationService.formatUnit = function (value) {\n        return numberLocalization.format(value);\n      };\n    }\n  }, {\n    key: \"_updateViewUnitsState\",\n    value: function _updateViewUnitsState() {\n      var _getDiagram25 = getDiagram(),\n          DiagramCommand = _getDiagram25.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.ViewUnits, this._getDiagramUnitValue(this.option(\"viewUnits\")));\n    }\n  }, {\n    key: \"_updateUnitsState\",\n    value: function _updateUnitsState() {\n      var _getDiagram26 = getDiagram(),\n          DiagramCommand = _getDiagram26.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.Units, this._getDiagramUnitValue(this.option(\"units\")));\n    }\n  }, {\n    key: \"_updatePageSizeState\",\n    value: function _updatePageSizeState() {\n      var pageSize = this.option(\"pageSize\");\n\n      if (!pageSize || !pageSize.width || !pageSize.height) {\n        return;\n      }\n\n      var _getDiagram27 = getDiagram(),\n          DiagramCommand = _getDiagram27.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.PageSize, pageSize);\n    }\n  }, {\n    key: \"_updatePageSizeItemsState\",\n    value: function _updatePageSizeItemsState() {\n      var pageSizeItems = this.option(\"pageSize.items\");\n\n      if (!Array.isArray(pageSizeItems)) {\n        return;\n      }\n\n      var _getDiagram28 = getDiagram(),\n          DiagramCommand = _getDiagram28.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.PageSizeItems, pageSizeItems);\n    }\n  }, {\n    key: \"_updatePageOrientationState\",\n    value: function _updatePageOrientationState() {\n      var _getDiagram29 = getDiagram(),\n          DiagramCommand = _getDiagram29.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.PageLandscape, \"landscape\" === this.option(\"pageOrientation\"));\n    }\n  }, {\n    key: \"_updatePageColorState\",\n    value: function _updatePageColorState() {\n      var _getDiagram30 = getDiagram(),\n          DiagramCommand = _getDiagram30.DiagramCommand;\n\n      this._executeDiagramCommand(DiagramCommand.PageColor, this.option(\"pageColor\"));\n    }\n  }, {\n    key: \"_updateShapeTexts\",\n    value: function _updateShapeTexts() {\n      var _getDiagram31 = getDiagram(),\n          DiagramLocalizationService = _getDiagram31.DiagramLocalizationService;\n\n      var texts = this._getShapeTexts();\n\n      if (this._shapeTexts !== texts) {\n        this._shapeTexts = texts;\n        DiagramLocalizationService.shapeTexts = texts;\n      }\n    }\n  }, {\n    key: \"_getShapeTexts\",\n    value: function _getShapeTexts() {\n      var _getDiagram32 = getDiagram(),\n          ShapeTypes = _getDiagram32.ShapeTypes;\n\n      var texts = {};\n      texts[ShapeTypes.Text] = messageLocalization.format(\"dxDiagram-shapeText\");\n      texts[ShapeTypes.Rectangle] = messageLocalization.format(\"dxDiagram-shapeRectangle\");\n      texts[ShapeTypes.Ellipse] = messageLocalization.format(\"dxDiagram-shapeEllipse\");\n      texts[ShapeTypes.Cross] = messageLocalization.format(\"dxDiagram-shapeCross\");\n      texts[ShapeTypes.Triangle] = messageLocalization.format(\"dxDiagram-shapeTriangle\");\n      texts[ShapeTypes.Diamond] = messageLocalization.format(\"dxDiagram-shapeDiamond\");\n      texts[ShapeTypes.Heart] = messageLocalization.format(\"dxDiagram-shapeHeart\");\n      texts[ShapeTypes.Pentagon] = messageLocalization.format(\"dxDiagram-shapePentagon\");\n      texts[ShapeTypes.Hexagon] = messageLocalization.format(\"dxDiagram-shapeHexagon\");\n      texts[ShapeTypes.Octagon] = messageLocalization.format(\"dxDiagram-shapeOctagon\");\n      texts[ShapeTypes.Star] = messageLocalization.format(\"dxDiagram-shapeStar\");\n      texts[ShapeTypes.ArrowLeft] = messageLocalization.format(\"dxDiagram-shapeArrowLeft\");\n      texts[ShapeTypes.ArrowUp] = messageLocalization.format(\"dxDiagram-shapeArrowUp\");\n      texts[ShapeTypes.ArrowRight] = messageLocalization.format(\"dxDiagram-shapeArrowRight\");\n      texts[ShapeTypes.ArrowDown] = messageLocalization.format(\"dxDiagram-shapeArrowDown\");\n      texts[ShapeTypes.ArrowUpDown] = messageLocalization.format(\"dxDiagram-shapeArrowUpDown\");\n      texts[ShapeTypes.ArrowLeftRight] = messageLocalization.format(\"dxDiagram-shapeArrowLeftRight\");\n      texts[ShapeTypes.Process] = messageLocalization.format(\"dxDiagram-shapeProcess\");\n      texts[ShapeTypes.Decision] = messageLocalization.format(\"dxDiagram-shapeDecision\");\n      texts[ShapeTypes.Terminator] = messageLocalization.format(\"dxDiagram-shapeTerminator\");\n      texts[ShapeTypes.PredefinedProcess] = messageLocalization.format(\"dxDiagram-shapePredefinedProcess\");\n      texts[ShapeTypes.Document] = messageLocalization.format(\"dxDiagram-shapeDocument\");\n      texts[ShapeTypes.MultipleDocuments] = messageLocalization.format(\"dxDiagram-shapeMultipleDocuments\");\n      texts[ShapeTypes.ManualInput] = messageLocalization.format(\"dxDiagram-shapeManualInput\");\n      texts[ShapeTypes.Preparation] = messageLocalization.format(\"dxDiagram-shapePreparation\");\n      texts[ShapeTypes.Data] = messageLocalization.format(\"dxDiagram-shapeData\");\n      texts[ShapeTypes.Database] = messageLocalization.format(\"dxDiagram-shapeDatabase\");\n      texts[ShapeTypes.HardDisk] = messageLocalization.format(\"dxDiagram-shapeHardDisk\");\n      texts[ShapeTypes.InternalStorage] = messageLocalization.format(\"dxDiagram-shapeInternalStorage\");\n      texts[ShapeTypes.PaperTape] = messageLocalization.format(\"dxDiagram-shapePaperTape\");\n      texts[ShapeTypes.ManualOperation] = messageLocalization.format(\"dxDiagram-shapeManualOperation\");\n      texts[ShapeTypes.Delay] = messageLocalization.format(\"dxDiagram-shapeDelay\");\n      texts[ShapeTypes.StoredData] = messageLocalization.format(\"dxDiagram-shapeStoredData\");\n      texts[ShapeTypes.Display] = messageLocalization.format(\"dxDiagram-shapeDisplay\");\n      texts[ShapeTypes.Merge] = messageLocalization.format(\"dxDiagram-shapeMerge\");\n      texts[ShapeTypes.Connector] = messageLocalization.format(\"dxDiagram-shapeConnector\");\n      texts[ShapeTypes.Or] = messageLocalization.format(\"dxDiagram-shapeOr\");\n      texts[ShapeTypes.SummingJunction] = messageLocalization.format(\"dxDiagram-shapeSummingJunction\");\n      texts[ShapeTypes.Container] = messageLocalization.format(\"dxDiagram-shapeContainerDefaultText\");\n      texts[ShapeTypes.VerticalContainer] = messageLocalization.format(\"dxDiagram-shapeVerticalContainer\");\n      texts[ShapeTypes.HorizontalContainer] = messageLocalization.format(\"dxDiagram-shapeHorizontalContainer\");\n      texts[ShapeTypes.Card] = messageLocalization.format(\"dxDiagram-shapeCardDefaultText\");\n      texts[ShapeTypes.CardWithImageOnLeft] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnLeft\");\n      texts[ShapeTypes.CardWithImageOnTop] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnTop\");\n      texts[ShapeTypes.CardWithImageOnRight] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnRight\");\n      return texts;\n    }\n  }, {\n    key: \"_updateEventSubscriptionMethods\",\n    value: function _updateEventSubscriptionMethods() {\n      var _getDiagram33 = getDiagram(),\n          RenderHelper = _getDiagram33.RenderHelper;\n\n      RenderHelper.addEventListener = function (element, eventName, handler) {\n        eventsEngine.on(element, eventName, handler);\n      };\n\n      RenderHelper.removeEventListener = function (element, eventName, handler) {\n        eventsEngine.off(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"_updateDefaultItemProperties\",\n    value: function _updateDefaultItemProperties() {\n      if (this.option(\"defaultItemProperties.style\")) {\n        this._diagramInstance.setInitialStyleProperties(this.option(\"defaultItemProperties.style\"));\n      }\n\n      if (this.option(\"defaultItemProperties.textStyle\")) {\n        this._diagramInstance.setInitialTextStyleProperties(this.option(\"defaultItemProperties.textStyle\"));\n      }\n\n      this._diagramInstance.setInitialConnectorProperties({\n        lineOption: this._getConnectorLineOption(this.option(\"defaultItemProperties.connectorLineType\")),\n        startLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineStart\")),\n        endLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineEnd\"))\n      });\n\n      this._diagramInstance.applyShapeSizeSettings({\n        shapeMinWidth: this.option(\"defaultItemProperties.shapeMinWidth\"),\n        shapeMaxWidth: this.option(\"defaultItemProperties.shapeMaxWidth\"),\n        shapeMinHeight: this.option(\"defaultItemProperties.shapeMinHeight\"),\n        shapeMaxHeight: this.option(\"defaultItemProperties.shapeMaxHeight\")\n      });\n    }\n  }, {\n    key: \"_updateEditingSettings\",\n    value: function _updateEditingSettings() {\n      this._diagramInstance.applyOperationSettings({\n        addShape: this.option(\"editing.allowAddShape\"),\n        addShapeFromToolbox: this.option(\"editing.allowAddShape\"),\n        deleteShape: this.option(\"editing.allowDeleteShape\"),\n        deleteConnector: this.option(\"editing.allowDeleteConnector\"),\n        changeConnection: this.option(\"editing.allowChangeConnection\"),\n        changeConnectorPoints: this.option(\"editing.allowChangeConnectorPoints\"),\n        changeShapeText: this.option(\"editing.allowChangeShapeText\"),\n        changeConnectorText: this.option(\"editing.allowChangeConnectorText\"),\n        resizeShape: this.option(\"editing.allowResizeShape\"),\n        moveShape: this.option(\"editing.allowMoveShape\")\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._captureFocus();\n    }\n  }, {\n    key: \"export\",\n    value: function _export() {\n      return this._getDiagramData();\n    }\n  }, {\n    key: \"exportTo\",\n    value: function exportTo(format, callback) {\n      var command = this._getDiagramExportToCommand(format);\n\n      this._executeDiagramCommand(command, callback);\n    }\n  }, {\n    key: \"_getDiagramExportToCommand\",\n    value: function _getDiagramExportToCommand(format) {\n      var _getDiagram34 = getDiagram(),\n          DiagramCommand = _getDiagram34.DiagramCommand;\n\n      switch (format) {\n        case \"png\":\n          return DiagramCommand.ExportPng;\n\n        case \"jpg\":\n          return DiagramCommand.ExportJpg;\n\n        default:\n          return DiagramCommand.ExportSvg;\n      }\n    }\n  }, {\n    key: \"import\",\n    value: function _import(data, updateExistingItemsOnly) {\n      this._setDiagramData(data, updateExistingItemsOnly);\n\n      this._raiseDataChangeAction();\n    }\n  }, {\n    key: \"updateToolbox\",\n    value: function updateToolbox() {\n      this._diagramInstance && this._diagramInstance.refreshToolbox();\n      this._toolbox && this._toolbox.updateMaxHeight();\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Diagram.prototype), \"_getDefaultOptions\", this).call(this), {\n        readOnly: false,\n        zoomLevel: DIAGRAM_DEFAULT_ZOOMLEVEL,\n        simpleView: false,\n        autoZoomMode: DIAGRAM_DEFAULT_AUTOZOOM_MODE,\n        fullScreen: false,\n        showGrid: true,\n        snapToGrid: true,\n        units: DIAGRAM_DEFAULT_UNIT,\n        viewUnits: DIAGRAM_DEFAULT_UNIT,\n        pageOrientation: DIAGRAM_DEFAULT_PAGE_ORIENTATION,\n        pageColor: DIAGRAM_DEFAULT_PAGE_COLOR,\n        hasChanges: false,\n        nodes: {\n          dataSource: null,\n          keyExpr: \"id\",\n          customDataExpr: void 0,\n          lockedExpr: void 0,\n          styleExpr: void 0,\n          textStyleExpr: void 0,\n          zIndexExpr: void 0,\n          typeExpr: \"type\",\n          textExpr: \"text\",\n          imageUrlExpr: void 0,\n          parentKeyExpr: void 0,\n          itemsExpr: void 0,\n          leftExpr: void 0,\n          topExpr: void 0,\n          widthExpr: void 0,\n          heightExpr: void 0,\n          containerKeyExpr: void 0,\n          containerChildrenExpr: \"children\",\n          autoLayout: \"auto\",\n          autoSizeEnabled: true\n        },\n        edges: {\n          dataSource: null,\n          keyExpr: \"id\",\n          customDataExpr: void 0,\n          lockedExpr: void 0,\n          styleExpr: void 0,\n          textStyleExpr: void 0,\n          zIndexExpr: void 0,\n          fromExpr: \"from\",\n          fromPointIndexExpr: void 0,\n          toExpr: \"to\",\n          toPointIndexExpr: void 0,\n          pointsExpr: void 0,\n          textExpr: void 0,\n          lineTypeExpr: void 0,\n          fromLineEndExpr: void 0,\n          toLineEndExpr: void 0\n        },\n        customShapes: [],\n        toolbox: {\n          visibility: \"auto\",\n          shapeIconsPerRow: DIAGRAM_TOOLBOX_SHAPES_PER_ROW,\n          showSearch: true\n        },\n        mainToolbar: {\n          visible: false\n        },\n        historyToolbar: {\n          visible: true\n        },\n        viewToolbar: {\n          visible: true\n        },\n        contextMenu: {\n          enabled: true\n        },\n        contextToolbox: {\n          enabled: true,\n          shapeIconsPerRow: DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW,\n          width: DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH\n        },\n        propertiesPanel: {\n          visibility: \"auto\"\n        },\n        defaultItemProperties: {\n          connectorLineType: \"orthogonal\",\n          connectorLineStart: \"none\",\n          connectorLineEnd: \"arrow\"\n        },\n        editing: {\n          allowAddShape: true,\n          allowDeleteShape: true,\n          allowDeleteConnector: true,\n          allowChangeConnection: true,\n          allowChangeConnectorPoints: true,\n          allowChangeShapeText: true,\n          allowChangeConnectorText: true,\n          allowResizeShape: true,\n          allowMoveShape: true\n        },\n        export: {\n          fileName: \"Diagram\",\n          proxyUrl: void 0\n        },\n        onItemClick: null,\n        onItemDblClick: null,\n        onSelectionChanged: null,\n        onRequestEditOperation: null,\n        onRequestLayoutUpdate: null\n      });\n    }\n  }, {\n    key: \"_raiseDataChangeAction\",\n    value: function _raiseDataChangeAction() {\n      if (this._initialized) {\n        this.option(\"hasChanges\", true);\n      }\n    }\n  }, {\n    key: \"_raiseEdgeInsertedAction\",\n    value: function _raiseEdgeInsertedAction(data, callback, errorCallback) {\n      if (this._edgesOption) {\n        this._edgesOption.insert(data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseEdgeUpdatedAction\",\n    value: function _raiseEdgeUpdatedAction(key, data, callback, errorCallback) {\n      if (this._edgesOption) {\n        this._edgesOption.update(key, data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseEdgeRemovedAction\",\n    value: function _raiseEdgeRemovedAction(key, data, callback, errorCallback) {\n      if (this._edgesOption) {\n        this._edgesOption.remove(key, data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseNodeInsertedAction\",\n    value: function _raiseNodeInsertedAction(data, callback, errorCallback) {\n      if (this._nodesOption) {\n        this._nodesOption.insert(data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseNodeUpdatedAction\",\n    value: function _raiseNodeUpdatedAction(key, data, callback, errorCallback) {\n      if (this._nodesOption) {\n        this._nodesOption.update(key, data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseNodeRemovedAction\",\n    value: function _raiseNodeRemovedAction(key, data, callback, errorCallback) {\n      if (this._nodesOption) {\n        this._nodesOption.remove(key, data, callback, errorCallback);\n      }\n    }\n  }, {\n    key: \"_raiseToolboxDragStart\",\n    value: function _raiseToolboxDragStart() {\n      if (this._toolbox) {\n        this._toolbox._raiseToolboxDragStart();\n\n        if (this.isMobileScreenSize()) {\n          this._toolbox.hide();\n\n          this._toolboxDragHidden = true;\n        }\n      }\n    }\n  }, {\n    key: \"_raiseToolboxDragEnd\",\n    value: function _raiseToolboxDragEnd() {\n      if (this._toolbox) {\n        this._toolbox._raiseToolboxDragEnd();\n\n        if (this._toolboxDragHidden) {\n          this._toolbox.show();\n\n          delete this._toolboxDragHidden;\n        }\n      }\n    }\n  }, {\n    key: \"_raiseTextInputStart\",\n    value: function _raiseTextInputStart() {\n      this._textInputStarted = true;\n\n      if (this._propertiesPanel) {\n        if (this.isMobileScreenSize() && this._propertiesPanel.isVisible()) {\n          this._propertiesPanel.hide();\n\n          this._propertiesPanelTextInputHidden = true;\n        }\n      }\n\n      if (this._toolbox) {\n        if (this.isMobileScreenSize() && this._toolbox.isVisible()) {\n          this._toolbox.hide();\n\n          this._toolboxTextInputHidden = true;\n        }\n      }\n    }\n  }, {\n    key: \"_raiseTextInputEnd\",\n    value: function _raiseTextInputEnd() {\n      if (this._propertiesPanel) {\n        if (this._propertiesPanelTextInputHidden) {\n          this._propertiesPanel.show();\n\n          delete this._propertiesPanelTextInputHidden;\n        }\n      }\n\n      if (this._toolbox) {\n        if (this._toolboxTextInputHidden) {\n          this._toolbox.show();\n\n          delete this._toolboxTextInputHidden;\n        }\n      }\n\n      this._textInputStarted = false;\n    }\n  }, {\n    key: \"_createItemClickAction\",\n    value: function _createItemClickAction() {\n      this._itemClickAction = this._createActionByOption(\"onItemClick\");\n    }\n  }, {\n    key: \"_createItemDblClickAction\",\n    value: function _createItemDblClickAction() {\n      this._itemDblClickAction = this._createActionByOption(\"onItemDblClick\");\n    }\n  }, {\n    key: \"_createSelectionChangedAction\",\n    value: function _createSelectionChangedAction() {\n      this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n    }\n  }, {\n    key: \"_createRequestEditOperationAction\",\n    value: function _createRequestEditOperationAction() {\n      this._requestEditOperationAction = this._createActionByOption(\"onRequestEditOperation\");\n    }\n  }, {\n    key: \"_createRequestLayoutUpdateAction\",\n    value: function _createRequestLayoutUpdateAction() {\n      this._requestLayoutUpdateAction = this._createActionByOption(\"onRequestLayoutUpdate\");\n    }\n  }, {\n    key: \"_createCustomCommand\",\n    value: function _createCustomCommand() {\n      this._customCommandAction = this._createActionByOption(\"onCustomCommand\");\n    }\n  }, {\n    key: \"_raiseItemClickAction\",\n    value: function _raiseItemClickAction(nativeItem) {\n      if (!this._itemClickAction) {\n        this._createItemClickAction();\n      }\n\n      this._itemClickAction({\n        item: this._nativeItemToDiagramItem(nativeItem)\n      });\n    }\n  }, {\n    key: \"_raiseItemDblClickAction\",\n    value: function _raiseItemDblClickAction(nativeItem) {\n      if (!this._itemDblClickAction) {\n        this._createItemDblClickAction();\n      }\n\n      this._itemDblClickAction({\n        item: this._nativeItemToDiagramItem(nativeItem)\n      });\n    }\n  }, {\n    key: \"_raiseSelectionChanged\",\n    value: function _raiseSelectionChanged(nativeItems) {\n      if (!this._selectionChangedAction) {\n        this._createSelectionChangedAction();\n      }\n\n      this._selectionChangedAction({\n        items: nativeItems.map(this._nativeItemToDiagramItem.bind(this))\n      });\n    }\n  }, {\n    key: \"_raiseRequestEditOperation\",\n    value: function _raiseRequestEditOperation(operation, args) {\n      if (!this._requestEditOperationAction) {\n        this._createRequestEditOperationAction();\n      }\n\n      var eventArgs = this._getRequestEditOperationEventArgs(operation, args);\n\n      this._requestEditOperationAction(eventArgs);\n\n      args.allowed = eventArgs.allowed;\n    }\n  }, {\n    key: \"_getModelOperation\",\n    value: function _getModelOperation(operation) {\n      var _getDiagram35 = getDiagram(),\n          DiagramModelOperation = _getDiagram35.DiagramModelOperation;\n\n      switch (operation) {\n        case DiagramModelOperation.AddShape:\n          return \"addShape\";\n\n        case DiagramModelOperation.AddShapeFromToolbox:\n          return \"addShapeFromToolbox\";\n\n        case DiagramModelOperation.DeleteShape:\n          return \"deleteShape\";\n\n        case DiagramModelOperation.DeleteConnector:\n          return \"deleteConnector\";\n\n        case DiagramModelOperation.ChangeConnection:\n          return \"changeConnection\";\n\n        case DiagramModelOperation.ChangeConnectorPoints:\n          return \"changeConnectorPoints\";\n\n        case DiagramModelOperation.BeforeChangeShapeText:\n          return \"beforeChangeShapeText\";\n\n        case DiagramModelOperation.ChangeShapeText:\n          return \"changeShapeText\";\n\n        case DiagramModelOperation.BeforeChangeConnectorText:\n          return \"beforeChangeConnectorText\";\n\n        case DiagramModelOperation.ChangeConnectorText:\n          return \"changeConnectorText\";\n\n        case DiagramModelOperation.ResizeShape:\n          return \"resizeShape\";\n\n        case DiagramModelOperation.MoveShape:\n          return \"moveShape\";\n      }\n    }\n  }, {\n    key: \"_getRequestEditOperationEventArgs\",\n    value: function _getRequestEditOperationEventArgs(operation, args) {\n      var _getDiagram36 = getDiagram(),\n          DiagramModelOperation = _getDiagram36.DiagramModelOperation,\n          ConnectorPosition = _getDiagram36.ConnectorPosition;\n\n      var eventArgs = {\n        operation: this._getModelOperation(operation),\n        allowed: args.allowed,\n        updateUI: args.updateUI,\n        reason: args.updateUI ? \"checkUIElementAvailability\" : \"modelModification\"\n      };\n\n      switch (operation) {\n        case DiagramModelOperation.AddShape:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n            position: args.position && {\n              x: args.position.x,\n              y: args.position.y\n            }\n          };\n          break;\n\n        case DiagramModelOperation.AddShapeFromToolbox:\n          eventArgs.args = {\n            shapeType: args.shapeType\n          };\n          break;\n\n        case DiagramModelOperation.DeleteShape:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape)\n          };\n          break;\n\n        case DiagramModelOperation.DeleteConnector:\n          eventArgs.args = {\n            connector: args.connector && this._nativeItemToDiagramItem(args.connector)\n          };\n          break;\n\n        case DiagramModelOperation.ChangeConnection:\n          eventArgs.args = {\n            newShape: args.shape && this._nativeItemToDiagramItem(args.shape),\n            oldShape: args.oldShape && this._nativeItemToDiagramItem(args.oldShape),\n            connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n            connectionPointIndex: args.connectionPointIndex,\n            connectorPosition: args.position === ConnectorPosition.Begin ? \"start\" : \"end\"\n          };\n          break;\n\n        case DiagramModelOperation.ChangeConnectorPoints:\n          eventArgs.args = {\n            connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n            newPoints: args.points && args.points.map(function (pt) {\n              return {\n                x: pt.x,\n                y: pt.y\n              };\n            }),\n            oldPoints: args.oldPoints && args.oldPoints.map(function (pt) {\n              return {\n                x: pt.x,\n                y: pt.y\n              };\n            })\n          };\n          break;\n\n        case DiagramModelOperation.BeforeChangeShapeText:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape)\n          };\n          break;\n\n        case DiagramModelOperation.ChangeShapeText:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n            text: args.text\n          };\n          break;\n\n        case DiagramModelOperation.BeforeChangeConnectorText:\n          eventArgs.args = {\n            connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n            index: args.index\n          };\n          break;\n\n        case DiagramModelOperation.ChangeConnectorText:\n          eventArgs.args = {\n            connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n            index: args.index,\n            text: args.text\n          };\n          break;\n\n        case DiagramModelOperation.ResizeShape:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n            newSize: args.size && {\n              width: args.size.width,\n              height: args.size.height\n            },\n            oldSize: args.oldSize && {\n              width: args.oldSize.width,\n              height: args.oldSize.height\n            }\n          };\n          break;\n\n        case DiagramModelOperation.MoveShape:\n          eventArgs.args = {\n            shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n            newPosition: args.position && {\n              x: args.position.x,\n              y: args.position.y\n            },\n            oldPosition: args.oldPosition && {\n              x: args.oldPosition.x,\n              y: args.oldPosition.y\n            }\n          };\n      }\n\n      return eventArgs;\n    }\n  }, {\n    key: \"_nativeItemToDiagramItem\",\n    value: function _nativeItemToDiagramItem(nativeItem) {\n      var _getDiagram37 = getDiagram(),\n          NativeShape = _getDiagram37.NativeShape;\n\n      var createMethod = nativeItem instanceof NativeShape ? this._nativeShapeToDiagramShape.bind(this) : this._nativeConnectorToDiagramConnector.bind(this);\n      return extend({\n        id: nativeItem.id,\n        key: nativeItem.key,\n        dataItem: void 0\n      }, createMethod(nativeItem));\n    }\n  }, {\n    key: \"_nativeShapeToDiagramShape\",\n    value: function _nativeShapeToDiagramShape(nativeShape) {\n      return {\n        dataItem: this._nodesOption && this._nodesOption.findItem(nativeShape.key),\n        itemType: \"shape\",\n        text: nativeShape.text,\n        type: nativeShape.type,\n        position: {\n          x: nativeShape.position.x,\n          y: nativeShape.position.y\n        },\n        size: {\n          width: nativeShape.size.width,\n          height: nativeShape.size.height\n        },\n        attachedConnectorIds: nativeShape.attachedConnectorIds,\n        containerId: nativeShape.containerId,\n        containerChildItemIds: nativeShape.containerChildItemIds,\n        containerExpanded: nativeShape.containerExpanded\n      };\n    }\n  }, {\n    key: \"_nativeConnectorToDiagramConnector\",\n    value: function _nativeConnectorToDiagramConnector(nativeConnector) {\n      return {\n        dataItem: this._edgesOption && this._edgesOption.findItem(nativeConnector.key),\n        itemType: \"connector\",\n        texts: nativeConnector.texts,\n        fromKey: nativeConnector.fromKey,\n        toKey: nativeConnector.toKey,\n        fromId: nativeConnector.fromId,\n        fromPointIndex: nativeConnector.fromPointIndex,\n        toId: nativeConnector.toId,\n        toPointIndex: nativeConnector.toPointIndex,\n        points: nativeConnector.points.map(function (pt) {\n          return {\n            x: pt.x,\n            y: pt.y\n          };\n        })\n      };\n    }\n  }, {\n    key: \"getItemByKey\",\n    value: function getItemByKey(key) {\n      var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByDataKey(key);\n\n      return nativeItem && this._nativeItemToDiagramItem(nativeItem);\n    }\n  }, {\n    key: \"getItemById\",\n    value: function getItemById(id) {\n      var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByKey(id);\n\n      return nativeItem && this._nativeItemToDiagramItem(nativeItem);\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      var _this14 = this;\n\n      return this._diagramInstance.getNativeItems().map(function (nativeItem) {\n        return nativeItem && _this14._nativeItemToDiagramItem(nativeItem);\n      });\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      var _this15 = this;\n\n      return this._diagramInstance.getNativeSelectedItems().map(function (nativeItem) {\n        return nativeItem && _this15._nativeItemToDiagramItem(nativeItem);\n      });\n    }\n  }, {\n    key: \"setSelectedItems\",\n    value: function setSelectedItems(items) {\n      return this._diagramInstance.setSelectedItems(items.map(function (item) {\n        return item.id;\n      }));\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(item) {\n      return this._diagramInstance.scrollToItems([item.id]);\n    }\n  }, {\n    key: \"_invalidateContextMenuCommands\",\n    value: function _invalidateContextMenuCommands() {\n      if (this._contextMenu) {\n        this._contextMenu.option({\n          commands: this.option(\"contextMenu.commands\")\n        });\n      }\n    }\n  }, {\n    key: \"_invalidatePropertiesPanelTabs\",\n    value: function _invalidatePropertiesPanelTabs() {\n      if (this._propertiesPanel) {\n        this._propertiesPanel.option({\n          propertyTabs: this.option(\"propertiesPanel.tabs\")\n        });\n      }\n    }\n  }, {\n    key: \"_invalidateMainToolbarCommands\",\n    value: function _invalidateMainToolbarCommands() {\n      if (this._mainToolbar) {\n        this._mainToolbar.option({\n          commands: this.option(\"mainToolbar.commands\")\n        });\n      }\n    }\n  }, {\n    key: \"_invalidateHistoryToolbarCommands\",\n    value: function _invalidateHistoryToolbarCommands() {\n      if (this._historyToolbar) {\n        this._historyToolbar.option({\n          commands: this.option(\"historyToolbar.commands\")\n        });\n      }\n    }\n  }, {\n    key: \"_invalidateViewToolbarCommands\",\n    value: function _invalidateViewToolbarCommands() {\n      if (this._viewToolbar) {\n        this._viewToolbar.option({\n          commands: this.option(\"viewToolbar.commands\")\n        });\n      }\n    }\n  }, {\n    key: \"_invalidateToolboxGroups\",\n    value: function _invalidateToolboxGroups() {\n      if (this._toolbox) {\n        this._toolbox.option({\n          toolboxGroups: this._getToolboxGroups()\n        });\n      }\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      if (this.optionsUpdateBar.isUpdateLocked()) {\n        return;\n      }\n\n      this.optionsUpdateBar.beginUpdate();\n\n      try {\n        this._optionChangedCore(args);\n      } finally {\n        this.optionsUpdateBar.endUpdate();\n      }\n    }\n  }, {\n    key: \"_optionChangedCore\",\n    value: function _optionChangedCore(args) {\n      var _this16 = this;\n\n      switch (args.name) {\n        case \"readOnly\":\n        case \"disabled\":\n          this._updateReadOnlyState();\n\n          this._invalidate();\n\n          break;\n\n        case \"zoomLevel\":\n          if (\"zoomLevel\" === args.fullName || \"zoomLevel.items\" === args.fullName || \"zoomLevel.value\" === args.fullName) {\n            this._updateZoomLevelState();\n          }\n\n          break;\n\n        case \"autoZoomMode\":\n          this._updateAutoZoomState();\n\n          break;\n\n        case \"simpleView\":\n          this._updateSimpleViewState();\n\n          break;\n\n        case \"fullScreen\":\n          this._updateFullscreenState();\n\n          break;\n\n        case \"showGrid\":\n          this._updateShowGridState();\n\n          break;\n\n        case \"snapToGrid\":\n          this._updateSnapToGridState();\n\n          break;\n\n        case \"gridSize\":\n          if (\"gridSize\" === args.fullName || \"gridSize.items\" === args.fullName || \"gridSize.value\" === args.fullName) {\n            this._updateGridSizeState();\n          }\n\n          break;\n\n        case \"viewUnits\":\n          this._updateViewUnitsState();\n\n          break;\n\n        case \"units\":\n          this._updateUnitsState();\n\n          break;\n\n        case \"pageSize\":\n          if (\"pageSize\" === args.fullName || \"pageSize.items\" === args.fullName) {\n            this._updatePageSizeItemsState();\n          }\n\n          if (\"pageSize\" === args.fullName || \"pageSize.width\" === args.fullName || \"pageSize.height\" === args.fullName) {\n            this._updatePageSizeState();\n          }\n\n          break;\n\n        case \"pageOrientation\":\n          this._updatePageOrientationState();\n\n          break;\n\n        case \"pageColor\":\n          this._updatePageColorState();\n\n          break;\n\n        case \"nodes\":\n          if (\"nodes.autoLayout\" === args.fullName) {\n            this._refreshDataSources();\n          } else {\n            this._refreshNodesDataSource();\n          }\n\n          break;\n\n        case \"edges\":\n          this._refreshEdgesDataSource();\n\n          break;\n\n        case \"customShapes\":\n          this._updateCustomShapes(args.value, args.previousValue);\n\n          this._invalidate();\n\n          break;\n\n        case \"contextMenu\":\n          if (\"contextMenu.commands\" === args.fullName) {\n            this._invalidateContextMenuCommands();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"contextToolbox\":\n          this._invalidate();\n\n          break;\n\n        case \"propertiesPanel\":\n          if (\"propertiesPanel.tabs\" === args.name) {\n            this._invalidatePropertiesPanelTabs();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"toolbox\":\n          if (\"toolbox.groups\" === args.fullName) {\n            this._invalidateToolboxGroups();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"mainToolbar\":\n          if (\"mainToolbar.commands\" === args.fullName) {\n            this._invalidateMainToolbarCommands();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"historyToolbar\":\n          if (\"historyToolbar.commands\" === args.fullName) {\n            this._invalidateHistoryToolbarCommands();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"viewToolbar\":\n          if (\"viewToolbar.commands\" === args.fullName) {\n            this._invalidateViewToolbarCommands();\n          } else {\n            this._invalidate();\n          }\n\n          break;\n\n        case \"onItemClick\":\n          this._createItemClickAction();\n\n          break;\n\n        case \"onItemDblClick\":\n          this._createItemDblClickAction();\n\n          break;\n\n        case \"onSelectionChanged\":\n          this._createSelectionChangedAction();\n\n          break;\n\n        case \"onRequestEditOperation\":\n          this._createRequestEditOperationAction();\n\n          break;\n\n        case \"onRequestLayoutUpdate\":\n          this._createRequestLayoutUpdateAction();\n\n          break;\n\n        case \"onCustomCommand\":\n          this._createCustomCommand();\n\n          break;\n\n        case \"defaultItemProperties\":\n          this._updateDefaultItemProperties();\n\n          break;\n\n        case \"editing\":\n          this._updateEditingSettings();\n\n          break;\n\n        case \"export\":\n          this._toolbars.forEach(function (toolbar) {\n            toolbar.option(\"export\", _this16.option(\"export\"));\n          });\n\n          if (this._contextMenu) {\n            this._contextMenu.option(\"export\", this.option(\"export\"));\n          }\n\n          break;\n\n        case \"hasChanges\":\n          break;\n\n        default:\n          _get(_getPrototypeOf(Diagram.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return Diagram;\n}(Widget);\n\nregisterComponent(\"dxDiagram\", Diagram);\nexport default Diagram;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/diagram/ui.diagram.js"],"names":["$","Widget","LoadIndicator","registerComponent","extend","isFunction","compileSetter","compileGetter","positionUtils","resizeCallbacks","getDiagram","getWindow","hasWindow","getPublicElement","eventsEngine","addNamespace","messageLocalization","numberLocalization","zIndexPool","Overlay","DiagramToolbar","DiagramMainToolbar","DiagramHistoryToolbar","DiagramViewToolbar","DiagramPropertiesToolbar","diagramContextMenuModule","DiagramContextToolbox","DiagramDialog","DiagramScrollView","DiagramToolboxManager","DiagramToolbox","DiagramPropertiesPanel","DiagramOptionsUpdateBar","DiagramDialogManager","DiagramCommandsManager","NodesOption","EdgesOption","DIAGRAM_CLASS","DIAGRAM_FULLSCREEN_CLASS","DIAGRAM_TOOLBAR_WRAPPER_CLASS","DIAGRAM_CONTENT_WRAPPER_CLASS","DIAGRAM_CONTENT_CLASS","DIAGRAM_SCROLL_VIEW_CLASS","DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS","DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS","DIAGRAM_LOADING_INDICATOR_CLASS","DIAGRAM_FLOATING_PANEL_OFFSET","DIAGRAM_DEFAULT_UNIT","DIAGRAM_DEFAULT_ZOOMLEVEL","DIAGRAM_DEFAULT_AUTOZOOM_MODE","DIAGRAM_DEFAULT_PAGE_ORIENTATION","DIAGRAM_DEFAULT_PAGE_COLOR","DIAGRAM_MAX_MOBILE_WINDOW_WIDTH","DIAGRAM_TOOLBOX_SHAPE_SPACING","DIAGRAM_TOOLBOX_SHAPES_PER_ROW","DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING","DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW","DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH","DIAGRAM_NAMESPACE","FULLSCREEN_CHANGE_EVENT_NAME","IE_FULLSCREEN_CHANGE_EVENT_NAME","WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME","MOZ_FULLSCREEN_CHANGE_EVENT_NAME","Diagram","_updateDiagramLockCount","toggleFullscreenLock","_browserResizeTimer","_toolbars","_initDiagram","_createCustomCommand","_isMobileScreenSize","isServerSide","$element","addClass","_mainToolbar","option","_renderMainToolbar","$contentWrapper","appendTo","_historyToolbar","_historyToolbarResizeCallback","_isHistoryToolbarVisible","_renderHistoryToolbar","_propertiesToolbar","_propertiesToolbarResizeCallback","_isPropertiesPanelEnabled","_renderPropertiesToolbar","_viewToolbar","_viewToolbarResizeCallback","_renderViewToolbar","_toolbox","_toolboxResizeCallback","_isToolboxEnabled","_renderToolbox","_propertiesPanel","_propertiesPanelResizeCallback","_renderPropertiesPanel","_$content","_contextMenu","_diagramInstance","settings","contextMenuEnabled","_renderContextMenu","_contextToolbox","_renderContextToolbox","_renderDialog","$scrollViewWrapper","_createComponent","onCreateDiagram","e","createDocument","$parent","scrollView","add","_killBrowserResizeTimer","setTimeout","_processBrowserResize","_setCustomCommandChecked","SHOW_PROPERTIES_PANEL_COMMAND_NAME","_isPropertiesPanelVisible","SHOW_TOOLBOX_COMMAND_NAME","_isToolboxVisible","_processDiagramResize","call","clearTimeout","outerWidth","captureFocus","_captureFocusTimeout","_captureFocus","_captureFocusOnTimeout","component","_registerBar","push","bar","onChanged","registerBar","excludeCommands","onContentReady","_ref","_registerToolbar","onSubMenuVisibilityChanging","_ref2","updateBarItemsState","onPointerUp","_onPanelPointerUp","bind","export","container","_getExcludeCommands","onInternalCommand","_onInternalCommand","onCustomCommand","_onCustomCommand","isMobileView","isMobileScreenSize","command","toggle","_customCommandAction","name","$toolbarWrapper","_getToolbarBaseOptions","commands","skipAdjustSize","isReadOnlyMode","$container","locateInMenu","_updateHistoryToolbarPosition","setup","my","at","of","offset","$toolBox","bounds","_getToolboxBounds","isVisible","height","offsetParent","offsetX","offsetY","showSearch","toolboxGroups","_getToolboxGroups","toolboxWidth","onShapeCategoryRendered","createToolbox","displayMode","shapes","category","shapeIconSpacing","shapeIconCountInRow","shapeIconAttributes","dataToggle","onFilterChanged","applyToolboxFilter","text","filteringToolboxes","onVisibilityChanging","visible","hide","_historyToolbarZIndex","create","baseZIndex","css","onVisibilityChanged","_textInputStarted","remove","prevIsMobileView","updateMaxHeight","result","outerHeight","_getViewToolbarYOffset","_updateViewToolbarPosition","buttonStylingMode","buttonType","_updatePropertiesToolbarPosition","$propertiesPanel","propertyTabs","onCreateToolbar","toolbar","editorStylingMode","_updatePropertiesPanelGroupBars","onSelectedGroupChanged","_ref3","getActiveToolbars","forEach","$contextMenu","DiagramContextMenuWrapper","_ref4","_ref5","onItemClick","itemData","_onBeforeCommandExecuted","$contextToolbox","onShown","$toolboxContainer","isTextGroup","group","filter","g","createContextToolbox","shapeType","callback","checked","tb","setCommandChecked","dialogParameters","getDialogParameters","_showDialog","$dialogElement","_dialogInstance","onGetContent","getCommand","title","_show","_loadingIndicator","append","DiagramControl","_raiseDataChangeAction","onEdgeInserted","_raiseEdgeInsertedAction","onEdgeUpdated","_raiseEdgeUpdatedAction","onEdgeRemoved","_raiseEdgeRemovedAction","onNodeInserted","_raiseNodeInsertedAction","onNodeUpdated","_raiseNodeUpdatedAction","onNodeRemoved","_raiseNodeRemovedAction","onToolboxDragStart","_raiseToolboxDragStart","onToolboxDragEnd","_raiseToolboxDragEnd","onTextInputStart","_raiseTextInputStart","onTextInputEnd","_raiseTextInputEnd","onToggleFullscreen","_onToggleFullScreen","onShowContextMenu","_onShowContextMenu","onHideContextMenu","_onHideContextMenu","onShowContextToolbox","_onShowContextToolbox","onHideContextToolbox","_onHideContextToolbox","onNativeAction","notifyItemClick","_raiseItemClickAction","notifyItemDblClick","_raiseItemDblClickAction","notifySelectionChanged","_raiseSelectionChanged","onRequestOperation","_raiseRequestEditOperation","_updateEventSubscriptionMethods","_updateDefaultItemProperties","_updateEditingSettings","_updateShapeTexts","_updateUnitItems","_updateFormatUnitsMethod","_updateUnitsState","_updateReadOnlyState","_updatePageSizeItemsState","_updatePageSizeState","_updatePageOrientationState","_updatePageColorState","_updateViewUnitsState","_updateShowGridState","_updateSnapToGridState","_updateGridSizeState","_updateZoomLevelState","_updateSimpleViewState","_updateAutoZoomState","window","self","top","_updateFullscreenState","optionsUpdateBar","initMeasurer","_updateCustomShapes","_getCustomShapes","_refreshDataSources","cleanMarkup","element","empty","_killCaptureFocusTimeout","parameter","execute","_nodesOption","getDataSource","_edgesOption","_beginUpdateDiagram","_refreshNodesDataSource","_refreshEdgesDataSource","_endUpdateDiagram","_disposeDataSource","_refreshDataSource","value","DiagramCommand","_executeDiagramCommand","Export","data","keepExistingItems","Import","_bindDiagramData","changes","map","change","internalKey","key","optionName","expr","_requestLayoutUpdateAction","_createRequestLayoutUpdateAction","eventArgs","allowed","_isBindingMode","ConnectorLineOption","ConnectorLineEnding","lineOptionGetter","lineOptionSetter","startLineEndingGetter","startLineEndingSetter","endLineEndingGetter","endLineEndingSetter","containerKeyGetter","containerKeySetter","nodeDataSource","getItems","edgeDataSource","nodeDataImporter","getKey","_createOptionGetter","setKey","_createOptionSetter","getCustomData","setCustomData","getLocked","setLocked","getStyle","setStyle","getStyleText","setStyleText","getZIndex","setZIndex","getType","setType","getText","setText","getImage","setImage","getLeft","setLeft","getTop","setTop","getWidth","setWidth","getHeight","setHeight","getParentKey","setParentKey","setItems","getContainerKey","setContainerKey","getChildren","setChildren","edgeDataImporter","getFrom","setFrom","getFromPointIndex","setFromPointIndex","getTo","setTo","getToPointIndex","setToPointIndex","getPoints","setPoints","getLineOption","obj","lineType","_getConnectorLineOption","setLineOption","Straight","Orthogonal","getStartLineEnding","lineEnd","_getConnectorLineEnding","setStartLineEnding","Arrow","OutlinedTriangle","FilledTriangle","None","getEndLineEnding","setEndLineEnding","layoutParameters","_getDataBindingLayoutParameters","BindDocument","isExternalChanges","keys","_getChangesKeys","applyLayout","_onRequestUpdateLayout","_reloadContent","itemKeys","reloadContent","DataLayoutType","DataLayoutOrientation","layoutParametersOption","layoutType","type","parameters","_hasNodePositionExprs","Tree","Sugiyama","orientation","Vertical","Horizontal","skipPointIndices","autoSizeEnabled","AutoZoomMode","FitContent","FitToWidth","Disabled","hasItems","Math","max","getGroups","customShapes","prevCustomShapes","Array","isArray","removeCustomShapes","s","addCustomShapes","templateOption","template","_getTemplate","toolboxTemplateOption","toolboxTemplate","baseType","svgUrl","backgroundImageUrl","svgToolboxUrl","backgroundImageToolboxUrl","svgLeft","backgroundImageLeft","svgTop","backgroundImageTop","svgWidth","backgroundImageWidth","svgHeight","backgroundImageHeight","defaultWidth","defaultHeight","toolboxWidthToHeightRatio","minWidth","minHeight","maxWidth","maxHeight","allowResize","defaultText","allowEditText","textLeft","textTop","textWidth","textHeight","defaultImageUrl","allowEditImage","imageLeft","imageTop","imageWidth","imageHeight","connectionPoints","pt","x","y","createTemplate","item","render","model","_nativeItemToDiagramItem","createToolboxTemplate","destroyTemplate","templateLeft","templateTop","templateWidth","templateHeight","keepRatioOnAutoSize","fullScreen","_changeNativeFullscreen","toggleClass","updateLayout","repaint","setModeOn","_inNativeFullscreen","_subscribeFullscreenNativeChanged","_unsubscribeFullscreenNativeChanged","_setNativeFullscreen","on","document","body","requestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullscreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","msFullscreenElement","webkitFullscreenElement","isInFullscreen","webkitIsFullscreen","handler","_onNativeFullscreenChangeHandler","off","fullscreen","Fullscreen","selection","_hide","side","DiagramUnit","In","Cm","Px","readOnly","ToggleReadOnly","_updateZoomLevelItemsState","zoomLevel","ZoomLevel","_zoomLevel","_DiagramCommand","zoomLevelItems","ZoomLevelItems","SwitchAutoZoom","_getAutoZoomValue","ToggleSimpleView","_executeDiagramFullscreenCommand","ShowGrid","SnapToGrid","_updateGridSizeItemsState","gridSize","GridSize","_gridSize","_DiagramCommand2","gridSizeItems","GridSizeItems","DiagramLocalizationService","items","_getUnitItems","_unitItems","unitItems","format","formatUnit","ViewUnits","_getDiagramUnitValue","Units","pageSize","width","PageSize","pageSizeItems","PageSizeItems","PageLandscape","PageColor","texts","_getShapeTexts","_shapeTexts","shapeTexts","ShapeTypes","Text","Rectangle","Ellipse","Cross","Triangle","Diamond","Heart","Pentagon","Hexagon","Octagon","Star","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","ArrowUpDown","ArrowLeftRight","Process","Decision","Terminator","PredefinedProcess","Document","MultipleDocuments","ManualInput","Preparation","Data","Database","HardDisk","InternalStorage","PaperTape","ManualOperation","Delay","StoredData","Display","Merge","Connector","Or","SummingJunction","Container","VerticalContainer","HorizontalContainer","Card","CardWithImageOnLeft","CardWithImageOnTop","CardWithImageOnRight","RenderHelper","addEventListener","eventName","removeEventListener","setInitialStyleProperties","setInitialTextStyleProperties","setInitialConnectorProperties","lineOption","startLineEnding","endLineEnding","applyShapeSizeSettings","shapeMinWidth","shapeMaxWidth","shapeMinHeight","shapeMaxHeight","applyOperationSettings","addShape","addShapeFromToolbox","deleteShape","deleteConnector","changeConnection","changeConnectorPoints","changeShapeText","changeConnectorText","resizeShape","moveShape","_getDiagramData","_getDiagramExportToCommand","ExportPng","ExportJpg","ExportSvg","updateExistingItemsOnly","_setDiagramData","refreshToolbox","simpleView","autoZoomMode","showGrid","snapToGrid","units","viewUnits","pageOrientation","pageColor","hasChanges","nodes","dataSource","keyExpr","customDataExpr","lockedExpr","styleExpr","textStyleExpr","zIndexExpr","typeExpr","textExpr","imageUrlExpr","parentKeyExpr","itemsExpr","leftExpr","topExpr","widthExpr","heightExpr","containerKeyExpr","containerChildrenExpr","autoLayout","edges","fromExpr","fromPointIndexExpr","toExpr","toPointIndexExpr","pointsExpr","lineTypeExpr","fromLineEndExpr","toLineEndExpr","toolbox","visibility","shapeIconsPerRow","mainToolbar","historyToolbar","viewToolbar","contextMenu","enabled","contextToolbox","propertiesPanel","defaultItemProperties","connectorLineType","connectorLineStart","connectorLineEnd","editing","allowAddShape","allowDeleteShape","allowDeleteConnector","allowChangeConnection","allowChangeConnectorPoints","allowChangeShapeText","allowChangeConnectorText","allowResizeShape","allowMoveShape","fileName","proxyUrl","onItemDblClick","onSelectionChanged","onRequestEditOperation","onRequestLayoutUpdate","_initialized","errorCallback","insert","update","_toolboxDragHidden","show","_propertiesPanelTextInputHidden","_toolboxTextInputHidden","_itemClickAction","_createActionByOption","_itemDblClickAction","_selectionChangedAction","_requestEditOperationAction","nativeItem","_createItemClickAction","_createItemDblClickAction","nativeItems","_createSelectionChangedAction","operation","args","_createRequestEditOperationAction","_getRequestEditOperationEventArgs","DiagramModelOperation","AddShape","AddShapeFromToolbox","DeleteShape","DeleteConnector","ChangeConnection","ChangeConnectorPoints","BeforeChangeShapeText","ChangeShapeText","BeforeChangeConnectorText","ChangeConnectorText","ResizeShape","MoveShape","ConnectorPosition","_getModelOperation","updateUI","reason","shape","position","connector","newShape","oldShape","connectionPointIndex","connectorPosition","Begin","newPoints","points","oldPoints","index","newSize","size","oldSize","newPosition","oldPosition","NativeShape","createMethod","_nativeShapeToDiagramShape","_nativeConnectorToDiagramConnector","id","dataItem","nativeShape","findItem","itemType","attachedConnectorIds","containerId","containerChildItemIds","containerExpanded","nativeConnector","fromKey","toKey","fromId","fromPointIndex","toId","toPointIndex","getNativeItemByDataKey","getNativeItemByKey","getNativeItems","getNativeSelectedItems","setSelectedItems","scrollToItems","isUpdateLocked","beginUpdate","_optionChangedCore","endUpdate","_invalidate","fullName","previousValue","_invalidateContextMenuCommands","_invalidatePropertiesPanelTabs","_invalidateToolboxGroups","_invalidateMainToolbarCommands","_invalidateHistoryToolbarCommands","_invalidateViewToolbarCommands"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileSetter,\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport resizeCallbacks from \"../../core/utils/resize_callbacks\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport * as zIndexPool from \"../overlay/z_index\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport DiagramToolbar from \"./ui.diagram.toolbar\";\r\nimport DiagramMainToolbar from \"./ui.diagram.main_toolbar\";\r\nimport DiagramHistoryToolbar from \"./ui.diagram.history_toolbar\";\r\nimport DiagramViewToolbar from \"./ui.diagram.view_toolbar\";\r\nimport DiagramPropertiesToolbar from \"./ui.diagram.properties_toolbar\";\r\nimport diagramContextMenuModule from \"./ui.diagram.context_menu\";\r\nimport DiagramContextToolbox from \"./ui.diagram.context_toolbox\";\r\nimport DiagramDialog from \"./ui.diagram.dialogs\";\r\nimport DiagramScrollView from \"./ui.diagram.scroll_view\";\r\nimport DiagramToolboxManager from \"./diagram.toolbox_manager\";\r\nimport DiagramToolbox from \"./ui.diagram.toolbox\";\r\nimport DiagramPropertiesPanel from \"./ui.diagram.properties_panel\";\r\nimport DiagramOptionsUpdateBar from \"./diagram.options_update\";\r\nimport DiagramDialogManager from \"./ui.diagram.dialog_manager\";\r\nimport DiagramCommandsManager from \"./diagram.commands_manager\";\r\nimport NodesOption from \"./diagram.nodes_option\";\r\nimport EdgesOption from \"./diagram.edges_option\";\r\nvar DIAGRAM_CLASS = \"dx-diagram\";\r\nvar DIAGRAM_FULLSCREEN_CLASS = \"dx-diagram-fullscreen\";\r\nvar DIAGRAM_TOOLBAR_WRAPPER_CLASS = DIAGRAM_CLASS + \"-toolbar-wrapper\";\r\nvar DIAGRAM_CONTENT_WRAPPER_CLASS = DIAGRAM_CLASS + \"-content-wrapper\";\r\nvar DIAGRAM_CONTENT_CLASS = DIAGRAM_CLASS + \"-content\";\r\nvar DIAGRAM_SCROLL_VIEW_CLASS = DIAGRAM_CLASS + \"-scroll-view\";\r\nvar DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-floating-toolbar-container\";\r\nvar DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-properties-panel-toolbar-container\";\r\nvar DIAGRAM_LOADING_INDICATOR_CLASS = DIAGRAM_CLASS + \"-loading-indicator\";\r\nvar DIAGRAM_FLOATING_PANEL_OFFSET = 12;\r\nvar DIAGRAM_DEFAULT_UNIT = \"in\";\r\nvar DIAGRAM_DEFAULT_ZOOMLEVEL = 1;\r\nvar DIAGRAM_DEFAULT_AUTOZOOM_MODE = \"disabled\";\r\nvar DIAGRAM_DEFAULT_PAGE_ORIENTATION = \"portrait\";\r\nvar DIAGRAM_DEFAULT_PAGE_COLOR = \"#ffffff\";\r\nvar DIAGRAM_MAX_MOBILE_WINDOW_WIDTH = 576;\r\nvar DIAGRAM_TOOLBOX_SHAPE_SPACING = 12;\r\nvar DIAGRAM_TOOLBOX_SHAPES_PER_ROW = 3;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING = 12;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW = 4;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH = 152;\r\nvar DIAGRAM_NAMESPACE = \"dxDiagramEvent\";\r\nvar FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"fullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar IE_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"msfullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"webkitfullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar MOZ_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"mozfullscreenchange\", DIAGRAM_NAMESPACE);\r\nclass Diagram extends Widget {\r\n    _init() {\r\n        this._updateDiagramLockCount = 0;\r\n        this.toggleFullscreenLock = 0;\r\n        this._browserResizeTimer = -1;\r\n        this._toolbars = [];\r\n        super._init();\r\n        this._initDiagram();\r\n        this._createCustomCommand()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._toolbars = [];\r\n        delete this._isMobileScreenSize;\r\n        var isServerSide = !hasWindow();\r\n        this.$element().addClass(DIAGRAM_CLASS);\r\n        delete this._mainToolbar;\r\n        if (this.option(\"mainToolbar.visible\")) {\r\n            this._renderMainToolbar()\r\n        }\r\n        var $contentWrapper = $(\"<div>\").addClass(DIAGRAM_CONTENT_WRAPPER_CLASS).appendTo(this.$element());\r\n        delete this._historyToolbar;\r\n        delete this._historyToolbarResizeCallback;\r\n        if (this._isHistoryToolbarVisible()) {\r\n            this._renderHistoryToolbar($contentWrapper)\r\n        }\r\n        delete this._propertiesToolbar;\r\n        delete this._propertiesToolbarResizeCallback;\r\n        if (this._isPropertiesPanelEnabled()) {\r\n            this._renderPropertiesToolbar($contentWrapper)\r\n        }\r\n        delete this._viewToolbar;\r\n        delete this._viewToolbarResizeCallback;\r\n        if (this.option(\"viewToolbar.visible\")) {\r\n            this._renderViewToolbar($contentWrapper)\r\n        }\r\n        delete this._toolbox;\r\n        delete this._toolboxResizeCallback;\r\n        if (this._isToolboxEnabled()) {\r\n            this._renderToolbox($contentWrapper)\r\n        }\r\n        delete this._propertiesPanel;\r\n        delete this._propertiesPanelResizeCallback;\r\n        if (this._isPropertiesPanelEnabled()) {\r\n            this._renderPropertiesPanel($contentWrapper)\r\n        }\r\n        this._$content = $(\"<div>\").addClass(DIAGRAM_CONTENT_CLASS).appendTo($contentWrapper);\r\n        delete this._contextMenu;\r\n        this._diagramInstance.settings.contextMenuEnabled = this.option(\"contextMenu.enabled\");\r\n        if (this._diagramInstance.settings.contextMenuEnabled) {\r\n            this._renderContextMenu($contentWrapper)\r\n        }\r\n        delete this._contextToolbox;\r\n        if (this.option(\"contextToolbox.enabled\")) {\r\n            this._renderContextToolbox($contentWrapper)\r\n        }\r\n        this._renderDialog($contentWrapper);\r\n        if (!isServerSide) {\r\n            var $scrollViewWrapper = $(\"<div>\").addClass(DIAGRAM_SCROLL_VIEW_CLASS).appendTo(this._$content);\r\n            this._createComponent($scrollViewWrapper, DiagramScrollView, {\r\n                onCreateDiagram: e => {\r\n                    this._diagramInstance.createDocument(e.$parent[0], e.scrollView)\r\n                }\r\n            })\r\n        }\r\n        if (hasWindow()) {\r\n            resizeCallbacks.add(() => {\r\n                this._killBrowserResizeTimer();\r\n                this._browserResizeTimer = setTimeout(() => this._processBrowserResize(), 100)\r\n            })\r\n        }\r\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible());\r\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible())\r\n    }\r\n    _processBrowserResize() {\r\n        this._isMobileScreenSize = void 0;\r\n        this._processDiagramResize();\r\n        this._killBrowserResizeTimer()\r\n    }\r\n    _processDiagramResize() {\r\n        if (this._historyToolbarResizeCallback) {\r\n            this._historyToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._propertiesToolbarResizeCallback) {\r\n            this._propertiesToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._propertiesPanelResizeCallback) {\r\n            this._propertiesPanelResizeCallback.call(this)\r\n        }\r\n        if (this._viewToolbarResizeCallback) {\r\n            this._viewToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._toolboxResizeCallback) {\r\n            this._toolboxResizeCallback.call(this)\r\n        }\r\n    }\r\n    _killBrowserResizeTimer() {\r\n        if (this._browserResizeTimer > -1) {\r\n            clearTimeout(this._browserResizeTimer)\r\n        }\r\n        this._browserResizeTimer = -1\r\n    }\r\n    isMobileScreenSize() {\r\n        if (void 0 === this._isMobileScreenSize) {\r\n            this._isMobileScreenSize = hasWindow() && this.$element().outerWidth() < DIAGRAM_MAX_MOBILE_WINDOW_WIDTH\r\n        }\r\n        return this._isMobileScreenSize\r\n    }\r\n    _captureFocus() {\r\n        if (this._diagramInstance) {\r\n            this._diagramInstance.captureFocus()\r\n        }\r\n    }\r\n    _captureFocusOnTimeout() {\r\n        this._captureFocusTimeout = setTimeout(() => {\r\n            this._captureFocus();\r\n            delete this._captureFocusTimeout\r\n        }, 100)\r\n    }\r\n    _killCaptureFocusTimeout() {\r\n        if (this._captureFocusTimeout) {\r\n            clearTimeout(this._captureFocusTimeout);\r\n            delete this._captureFocusTimeout\r\n        }\r\n    }\r\n    notifyBarCommandExecuted() {\r\n        this._captureFocusOnTimeout()\r\n    }\r\n    _registerToolbar(component) {\r\n        this._registerBar(component);\r\n        this._toolbars.push(component)\r\n    }\r\n    _registerBar(component) {\r\n        component.bar.onChanged.add(this);\r\n        this._diagramInstance.registerBar(component.bar)\r\n    }\r\n    _getExcludeCommands() {\r\n        var excludeCommands = [];\r\n        if (!this._isToolboxEnabled()) {\r\n            excludeCommands.push(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME)\r\n        }\r\n        if (!this._isPropertiesPanelEnabled()) {\r\n            excludeCommands.push(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME)\r\n        }\r\n        return excludeCommands\r\n    }\r\n    _getToolbarBaseOptions() {\r\n        return {\r\n            onContentReady: _ref => {\r\n                var {\r\n                    component: component\r\n                } = _ref;\r\n                return this._registerToolbar(component)\r\n            },\r\n            onSubMenuVisibilityChanging: _ref2 => {\r\n                var {\r\n                    component: component\r\n                } = _ref2;\r\n                return this._diagramInstance.updateBarItemsState(component.bar)\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this),\r\n            export: this.option(\"export\"),\r\n            container: this.$element(),\r\n            excludeCommands: this._getExcludeCommands(),\r\n            onInternalCommand: this._onInternalCommand.bind(this),\r\n            onCustomCommand: this._onCustomCommand.bind(this),\r\n            isMobileView: this.isMobileScreenSize()\r\n        }\r\n    }\r\n    _onInternalCommand(e) {\r\n        switch (e.command) {\r\n            case DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME:\r\n                if (this._toolbox) {\r\n                    this._toolbox.toggle()\r\n                }\r\n                break;\r\n            case DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME:\r\n                if (this._propertiesPanel) {\r\n                    this._propertiesPanel.toggle()\r\n                }\r\n        }\r\n    }\r\n    _onCustomCommand(e) {\r\n        this._customCommandAction({\r\n            name: e.name\r\n        })\r\n    }\r\n    _renderMainToolbar() {\r\n        var $toolbarWrapper = $(\"<div>\").addClass(DIAGRAM_TOOLBAR_WRAPPER_CLASS).appendTo(this.$element());\r\n        this._mainToolbar = this._createComponent($toolbarWrapper, DiagramMainToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"mainToolbar.commands\"),\r\n            skipAdjustSize: true\r\n        }))\r\n    }\r\n    _isHistoryToolbarVisible() {\r\n        return this.option(\"historyToolbar.visible\") && !this.isReadOnlyMode()\r\n    }\r\n    _renderHistoryToolbar($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._historyToolbar = this._createComponent($container, DiagramHistoryToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"historyToolbar.commands\"),\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updateHistoryToolbarPosition($container, $parent, isServerSide);\r\n        this._historyToolbarResizeCallback = () => {\r\n            this._historyToolbar.option(\"isMobileView\", this.isMobileScreenSize())\r\n        }\r\n    }\r\n    _updateHistoryToolbarPosition($container, $parent, isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        positionUtils.setup($container, {\r\n            my: \"left top\",\r\n            at: \"left top\",\r\n            of: $parent,\r\n            offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" \" + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        })\r\n    }\r\n    _isToolboxEnabled() {\r\n        return \"disabled\" !== this.option(\"toolbox.visibility\") && !this.isReadOnlyMode()\r\n    }\r\n    _isToolboxVisible() {\r\n        return \"visible\" === this.option(\"toolbox.visibility\") || \"auto\" === this.option(\"toolbox.visibility\") && !this.isMobileScreenSize()\r\n    }\r\n    _renderToolbox($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $toolBox = $(\"<div>\").appendTo($parent);\r\n        var bounds = this._getToolboxBounds($parent, isServerSide);\r\n        this._toolbox = this._createComponent($toolBox, DiagramToolbox, {\r\n            isMobileView: this.isMobileScreenSize(),\r\n            isVisible: this._isToolboxVisible(),\r\n            container: this.$element(),\r\n            height: bounds.height,\r\n            offsetParent: $parent,\r\n            offsetX: bounds.offsetX,\r\n            offsetY: bounds.offsetY,\r\n            showSearch: this.option(\"toolbox.showSearch\"),\r\n            toolboxGroups: this._getToolboxGroups(),\r\n            toolboxWidth: this.option(\"toolbox.width\"),\r\n            onShapeCategoryRendered: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._diagramInstance.createToolbox(e.$element[0], \"texts\" === e.displayMode, e.shapes || e.category, {\r\n                    shapeIconSpacing: DIAGRAM_TOOLBOX_SHAPE_SPACING,\r\n                    shapeIconCountInRow: this.option(\"toolbox.shapeIconsPerRow\"),\r\n                    shapeIconAttributes: {\r\n                        \"data-toggle\": e.dataToggle\r\n                    }\r\n                })\r\n            },\r\n            onFilterChanged: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._diagramInstance.applyToolboxFilter(e.text, e.filteringToolboxes)\r\n            },\r\n            onVisibilityChanging: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, e.visible);\r\n                if (this._propertiesPanel) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._propertiesPanel.hide()\r\n                    }\r\n                }\r\n                if (this._historyToolbar) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._historyToolbarZIndex = zIndexPool.create(Overlay.baseZIndex());\r\n                        this._historyToolbar.$element().css(\"zIndex\", this._historyToolbarZIndex);\r\n                        this._historyToolbar.$element().css(\"boxShadow\", \"none\")\r\n                    }\r\n                }\r\n                if (this._viewToolbar) {\r\n                    this._viewToolbar.$element().css(\"opacity\", e.visible && this.isMobileScreenSize() ? \"0\" : \"1\");\r\n                    this._viewToolbar.$element().css(\"pointerEvents\", e.visible && this.isMobileScreenSize() ? \"none\" : \"\")\r\n                }\r\n            },\r\n            onVisibilityChanged: e => {\r\n                if (!e.visible && !this._textInputStarted) {\r\n                    this._captureFocus()\r\n                }\r\n                if (!isServerSide) {\r\n                    if (this._historyToolbar) {\r\n                        if (!e.visible && this.isMobileScreenSize() && this._historyToolbarZIndex) {\r\n                            zIndexPool.remove(this._historyToolbarZIndex);\r\n                            this._historyToolbar.$element().css(\"zIndex\", \"\");\r\n                            this._historyToolbar.$element().css(\"boxShadow\", \"\");\r\n                            this._historyToolbarZIndex = void 0\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this)\r\n        });\r\n        this._toolboxResizeCallback = () => {\r\n            var bounds = this._getToolboxBounds($parent, isServerSide);\r\n            this._toolbox.option(\"height\", bounds.height);\r\n            var prevIsMobileView = this._toolbox.option(\"isMobileView\");\r\n            if (prevIsMobileView !== this.isMobileScreenSize()) {\r\n                this._toolbox.option({\r\n                    isMobileView: this.isMobileScreenSize(),\r\n                    isVisible: this._isToolboxVisible()\r\n                });\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible())\r\n            }\r\n            this._toolbox.updateMaxHeight()\r\n        }\r\n    }\r\n    _getToolboxBounds($parent, isServerSide) {\r\n        var result = {\r\n            offsetX: DIAGRAM_FLOATING_PANEL_OFFSET,\r\n            offsetY: DIAGRAM_FLOATING_PANEL_OFFSET,\r\n            height: !isServerSide ? $parent.height() - 2 * DIAGRAM_FLOATING_PANEL_OFFSET : 0\r\n        };\r\n        if (this._historyToolbar && !isServerSide) {\r\n            result.offsetY += this._historyToolbar.$element().outerHeight() + DIAGRAM_FLOATING_PANEL_OFFSET;\r\n            result.height -= this._historyToolbar.$element().outerHeight() + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        }\r\n        if (this._viewToolbar && !isServerSide) {\r\n            result.height -= this._viewToolbar.$element().outerHeight() + this._getViewToolbarYOffset(isServerSide)\r\n        }\r\n        return result\r\n    }\r\n    _renderViewToolbar($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._viewToolbar = this._createComponent($container, DiagramViewToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"viewToolbar.commands\"),\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updateViewToolbarPosition($container, $parent, isServerSide);\r\n        this._viewToolbarResizeCallback = () => {\r\n            this._updateViewToolbarPosition($container, $parent, isServerSide)\r\n        }\r\n    }\r\n    _getViewToolbarYOffset(isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        var result = DIAGRAM_FLOATING_PANEL_OFFSET;\r\n        if (this._viewToolbar && this._propertiesToolbar) {\r\n            result += (this._propertiesToolbar.$element().outerHeight() - this._viewToolbar.$element().outerHeight()) / 2\r\n        }\r\n        return result\r\n    }\r\n    _updateViewToolbarPosition($container, $parent, isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        positionUtils.setup($container, {\r\n            my: \"left bottom\",\r\n            at: \"left bottom\",\r\n            of: $parent,\r\n            offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + this._getViewToolbarYOffset(isServerSide)\r\n        })\r\n    }\r\n    _isPropertiesPanelEnabled() {\r\n        return \"disabled\" !== this.option(\"propertiesPanel.visibility\") && !this.isReadOnlyMode()\r\n    }\r\n    _isPropertiesPanelVisible() {\r\n        return \"visible\" === this.option(\"propertiesPanel.visibility\")\r\n    }\r\n    _renderPropertiesToolbar($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).addClass(DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._propertiesToolbar = this._createComponent($container, DiagramPropertiesToolbar, extend(this._getToolbarBaseOptions(), {\r\n            buttonStylingMode: \"contained\",\r\n            buttonType: \"default\",\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updatePropertiesToolbarPosition($container, $parent, isServerSide);\r\n        this._propertiesToolbarResizeCallback = () => {\r\n            this._updatePropertiesToolbarPosition($container, $parent, isServerSide)\r\n        }\r\n    }\r\n    _updatePropertiesToolbarPosition($container, $parent, isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        positionUtils.setup($container, {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: $parent,\r\n            offset: \"-\" + DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        })\r\n    }\r\n    _renderPropertiesPanel($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $propertiesPanel = $(\"<div>\").appendTo($parent);\r\n        var offsetX = DIAGRAM_FLOATING_PANEL_OFFSET;\r\n        var offsetY = 2 * DIAGRAM_FLOATING_PANEL_OFFSET + (!isServerSide ? this._propertiesToolbar.$element().outerHeight() : 0);\r\n        this._propertiesPanel = this._createComponent($propertiesPanel, DiagramPropertiesPanel, {\r\n            isMobileView: this.isMobileScreenSize(),\r\n            isVisible: this._isPropertiesPanelVisible(),\r\n            container: this.$element(),\r\n            offsetParent: $parent,\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            propertyTabs: this.option(\"propertiesPanel.tabs\"),\r\n            onCreateToolbar: e => {\r\n                e.toolbar = this._createComponent(e.$parent, DiagramToolbar, extend(this._getToolbarBaseOptions(), {\r\n                    commands: e.commands,\r\n                    locateInMenu: \"never\",\r\n                    editorStylingMode: \"outlined\"\r\n                }))\r\n            },\r\n            onVisibilityChanging: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._updatePropertiesPanelGroupBars(e.component);\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, e.visible);\r\n                if (this._toolbox) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._toolbox.hide()\r\n                    }\r\n                }\r\n            },\r\n            onVisibilityChanged: e => {\r\n                if (!e.visible && !this._textInputStarted) {\r\n                    this._captureFocus()\r\n                }\r\n            },\r\n            onSelectedGroupChanged: _ref3 => {\r\n                var {\r\n                    component: component\r\n                } = _ref3;\r\n                return this._updatePropertiesPanelGroupBars(component)\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this)\r\n        });\r\n        this._propertiesPanelResizeCallback = () => {\r\n            var prevIsMobileView = this._propertiesPanel.option(\"isMobileView\");\r\n            if (prevIsMobileView !== this.isMobileScreenSize()) {\r\n                this._propertiesPanel.option({\r\n                    isMobileView: this.isMobileScreenSize(),\r\n                    isVisible: this._isPropertiesPanelVisible()\r\n                });\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible())\r\n            }\r\n        }\r\n    }\r\n    _updatePropertiesPanelGroupBars(component) {\r\n        component.getActiveToolbars().forEach(toolbar => {\r\n            this._diagramInstance.updateBarItemsState(toolbar.bar)\r\n        })\r\n    }\r\n    _onPanelPointerUp() {\r\n        this._captureFocusOnTimeout()\r\n    }\r\n    _renderContextMenu($parent) {\r\n        var $contextMenu = $(\"<div>\").appendTo($parent);\r\n        this._contextMenu = this._createComponent($contextMenu, diagramContextMenuModule.DiagramContextMenuWrapper, {\r\n            commands: this.option(\"contextMenu.commands\"),\r\n            onContentReady: _ref4 => {\r\n                var {\r\n                    component: component\r\n                } = _ref4;\r\n                return this._registerBar(component)\r\n            },\r\n            onVisibilityChanging: _ref5 => {\r\n                var {\r\n                    component: component\r\n                } = _ref5;\r\n                return this._diagramInstance.updateBarItemsState(component.bar)\r\n            },\r\n            onItemClick: itemData => this._onBeforeCommandExecuted(itemData.command),\r\n            export: this.option(\"export\"),\r\n            excludeCommands: this._getExcludeCommands(),\r\n            onInternalCommand: this._onInternalCommand.bind(this),\r\n            onCustomCommand: this._onCustomCommand.bind(this)\r\n        })\r\n    }\r\n    _renderContextToolbox($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var category = this.option(\"contextToolbox.category\");\r\n        var displayMode = this.option(\"contextToolbox.displayMode\");\r\n        var shapes = this.option(\"contextToolbox.shapes\");\r\n        var $contextToolbox = $(\"<div>\").appendTo($parent);\r\n        this._contextToolbox = this._createComponent($contextToolbox, DiagramContextToolbox, {\r\n            toolboxWidth: this.option(\"contextToolbox.width\"),\r\n            onShown: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                var $toolboxContainer = $(e.$element);\r\n                var isTextGroup = \"texts\" === displayMode;\r\n                if (!shapes && !category && !isTextGroup) {\r\n                    var group = this._getToolboxGroups().filter((function(g) {\r\n                        return g.category === e.category\r\n                    }))[0];\r\n                    if (group) {\r\n                        isTextGroup = \"texts\" === group.displayMode\r\n                    }\r\n                }\r\n                this._diagramInstance.createContextToolbox($toolboxContainer[0], isTextGroup, shapes || category || e.category, {\r\n                    shapeIconSpacing: DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING,\r\n                    shapeIconCountInRow: this.option(\"contextToolbox.shapeIconsPerRow\")\r\n                }, shapeType => {\r\n                    e.callback(shapeType);\r\n                    this._captureFocus();\r\n                    e.hide()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _setCustomCommandChecked(command, checked) {\r\n        this._toolbars.forEach(tb => {\r\n            tb.setCommandChecked(command, checked)\r\n        })\r\n    }\r\n    _onBeforeCommandExecuted(command) {\r\n        var dialogParameters = DiagramDialogManager.getDialogParameters(command);\r\n        if (dialogParameters) {\r\n            this._showDialog(dialogParameters)\r\n        }\r\n        return !!dialogParameters\r\n    }\r\n    _renderDialog($parent) {\r\n        var $dialogElement = $(\"<div>\").appendTo($parent);\r\n        this._dialogInstance = this._createComponent($dialogElement, DiagramDialog, {})\r\n    }\r\n    _showDialog(dialogParameters) {\r\n        if (this._dialogInstance) {\r\n            this._dialogInstance.option(\"onGetContent\", dialogParameters.onGetContent);\r\n            this._dialogInstance.option(\"onHidden\", function() {\r\n                this._captureFocus()\r\n            }.bind(this));\r\n            this._dialogInstance.option(\"command\", this._diagramInstance.getCommand(dialogParameters.command));\r\n            this._dialogInstance.option(\"title\", dialogParameters.title);\r\n            this._dialogInstance._show()\r\n        }\r\n    }\r\n    _showLoadingIndicator() {\r\n        this._loadingIndicator = $(\"<div>\").addClass(DIAGRAM_LOADING_INDICATOR_CLASS);\r\n        this._createComponent(this._loadingIndicator, LoadIndicator, {});\r\n        var $parent = this._$content || this.$element();\r\n        $parent.append(this._loadingIndicator)\r\n    }\r\n    _hideLoadingIndicator() {\r\n        if (!this._loadingIndicator) {\r\n            return\r\n        }\r\n        this._loadingIndicator.remove();\r\n        this._loadingIndicator = null\r\n    }\r\n    _initDiagram() {\r\n        var {\r\n            DiagramControl: DiagramControl\r\n        } = getDiagram();\r\n        this._diagramInstance = new DiagramControl;\r\n        this._diagramInstance.onChanged = this._raiseDataChangeAction.bind(this);\r\n        this._diagramInstance.onEdgeInserted = this._raiseEdgeInsertedAction.bind(this);\r\n        this._diagramInstance.onEdgeUpdated = this._raiseEdgeUpdatedAction.bind(this);\r\n        this._diagramInstance.onEdgeRemoved = this._raiseEdgeRemovedAction.bind(this);\r\n        this._diagramInstance.onNodeInserted = this._raiseNodeInsertedAction.bind(this);\r\n        this._diagramInstance.onNodeUpdated = this._raiseNodeUpdatedAction.bind(this);\r\n        this._diagramInstance.onNodeRemoved = this._raiseNodeRemovedAction.bind(this);\r\n        this._diagramInstance.onToolboxDragStart = this._raiseToolboxDragStart.bind(this);\r\n        this._diagramInstance.onToolboxDragEnd = this._raiseToolboxDragEnd.bind(this);\r\n        this._diagramInstance.onTextInputStart = this._raiseTextInputStart.bind(this);\r\n        this._diagramInstance.onTextInputEnd = this._raiseTextInputEnd.bind(this);\r\n        this._diagramInstance.onToggleFullscreen = this._onToggleFullScreen.bind(this);\r\n        this._diagramInstance.onShowContextMenu = this._onShowContextMenu.bind(this);\r\n        this._diagramInstance.onHideContextMenu = this._onHideContextMenu.bind(this);\r\n        this._diagramInstance.onShowContextToolbox = this._onShowContextToolbox.bind(this);\r\n        this._diagramInstance.onHideContextToolbox = this._onHideContextToolbox.bind(this);\r\n        this._diagramInstance.onNativeAction.add({\r\n            notifyItemClick: this._raiseItemClickAction.bind(this),\r\n            notifyItemDblClick: this._raiseItemDblClickAction.bind(this),\r\n            notifySelectionChanged: this._raiseSelectionChanged.bind(this)\r\n        });\r\n        this._diagramInstance.onRequestOperation = this._raiseRequestEditOperation.bind(this);\r\n        this._updateEventSubscriptionMethods();\r\n        this._updateDefaultItemProperties();\r\n        this._updateEditingSettings();\r\n        this._updateShapeTexts();\r\n        this._updateUnitItems();\r\n        this._updateFormatUnitsMethod();\r\n        if (this.option(\"units\") !== DIAGRAM_DEFAULT_UNIT) {\r\n            this._updateUnitsState()\r\n        }\r\n        if (this.isReadOnlyMode()) {\r\n            this._updateReadOnlyState()\r\n        }\r\n        if (this.option(\"pageSize\")) {\r\n            if (this.option(\"pageSize.items\")) {\r\n                this._updatePageSizeItemsState()\r\n            }\r\n            if (this.option(\"pageSize.width\") && this.option(\"pageSize.height\")) {\r\n                this._updatePageSizeState()\r\n            }\r\n        }\r\n        if (this.option(\"pageOrientation\") !== DIAGRAM_DEFAULT_PAGE_ORIENTATION) {\r\n            this._updatePageOrientationState()\r\n        }\r\n        if (this.option(\"pageColor\") !== DIAGRAM_DEFAULT_PAGE_COLOR) {\r\n            this._updatePageColorState()\r\n        }\r\n        if (this.option(\"viewUnits\") !== DIAGRAM_DEFAULT_UNIT) {\r\n            this._updateViewUnitsState()\r\n        }\r\n        if (!this.option(\"showGrid\")) {\r\n            this._updateShowGridState()\r\n        }\r\n        if (!this.option(\"snapToGrid\")) {\r\n            this._updateSnapToGridState()\r\n        }\r\n        if (this.option(\"gridSize\")) {\r\n            this._updateGridSizeState()\r\n        }\r\n        if (this.option(\"zoomLevel\") !== DIAGRAM_DEFAULT_ZOOMLEVEL) {\r\n            this._updateZoomLevelState()\r\n        }\r\n        if (this.option(\"simpleView\")) {\r\n            this._updateSimpleViewState()\r\n        }\r\n        if (this.option(\"autoZoomMode\") !== DIAGRAM_DEFAULT_AUTOZOOM_MODE) {\r\n            this._updateAutoZoomState()\r\n        }\r\n        if (this.option(\"fullScreen\")) {\r\n            var window = getWindow();\r\n            if (window && window.self !== window.top) {\r\n                this.option(\"fullScreen\", false)\r\n            } else {\r\n                this._updateFullscreenState()\r\n            }\r\n        }\r\n        this.optionsUpdateBar = new DiagramOptionsUpdateBar(this);\r\n        this._diagramInstance.registerBar(this.optionsUpdateBar);\r\n        if (hasWindow()) {\r\n            this._diagramInstance.initMeasurer(this.$element()[0])\r\n        }\r\n        this._updateCustomShapes(this._getCustomShapes());\r\n        this._refreshDataSources()\r\n    }\r\n    _clean() {\r\n        if (this._diagramInstance) {\r\n            this._diagramInstance.cleanMarkup(element => {\r\n                $(element).empty()\r\n            })\r\n        }\r\n        super._clean()\r\n    }\r\n    _dispose() {\r\n        this._killCaptureFocusTimeout();\r\n        super._dispose();\r\n        this._diagramInstance = void 0\r\n    }\r\n    _executeDiagramCommand(command, parameter) {\r\n        this._diagramInstance.getCommand(command).execute(parameter)\r\n    }\r\n    getNodeDataSource() {\r\n        return this._nodesOption && this._nodesOption.getDataSource()\r\n    }\r\n    getEdgeDataSource() {\r\n        return this._edgesOption && this._edgesOption.getDataSource()\r\n    }\r\n    _refreshDataSources() {\r\n        this._beginUpdateDiagram();\r\n        this._refreshNodesDataSource();\r\n        this._refreshEdgesDataSource();\r\n        this._endUpdateDiagram()\r\n    }\r\n    _refreshNodesDataSource() {\r\n        if (this._nodesOption) {\r\n            this._nodesOption._disposeDataSource();\r\n            delete this._nodesOption\r\n        }\r\n        if (this.option(\"nodes.dataSource\")) {\r\n            this._nodesOption = new NodesOption(this);\r\n            this._nodesOption.option(\"dataSource\", this.option(\"nodes.dataSource\"));\r\n            this._nodesOption._refreshDataSource()\r\n        }\r\n    }\r\n    _refreshEdgesDataSource() {\r\n        if (this._edgesOption) {\r\n            this._edgesOption._disposeDataSource();\r\n            delete this._edgesOption\r\n        }\r\n        if (this.option(\"edges.dataSource\")) {\r\n            this._edgesOption = new EdgesOption(this);\r\n            this._edgesOption.option(\"dataSource\", this.option(\"edges.dataSource\"));\r\n            this._edgesOption._refreshDataSource()\r\n        }\r\n    }\r\n    _getDiagramData() {\r\n        var value;\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Export, (function(data) {\r\n            value = data\r\n        }));\r\n        return value\r\n    }\r\n    _setDiagramData(data, keepExistingItems) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Import, {\r\n            data: data,\r\n            keepExistingItems: keepExistingItems\r\n        })\r\n    }\r\n    isReadOnlyMode() {\r\n        return this.option(\"readOnly\") || this.option(\"disabled\")\r\n    }\r\n    _onDataSourceChanged() {\r\n        this._bindDiagramData()\r\n    }\r\n    _getChangesKeys(changes) {\r\n        return changes.map(change => change.internalKey || change.key).filter(key => !!key)\r\n    }\r\n    _createOptionGetter(optionName) {\r\n        var expr = this.option(optionName);\r\n        return expr && compileGetter(expr)\r\n    }\r\n    _onRequestUpdateLayout(changes) {\r\n        if (!this._requestLayoutUpdateAction) {\r\n            this._createRequestLayoutUpdateAction()\r\n        }\r\n        var eventArgs = {\r\n            changes: changes,\r\n            allowed: false\r\n        };\r\n        this._requestLayoutUpdateAction(eventArgs);\r\n        return eventArgs.allowed\r\n    }\r\n    _createOptionSetter(optionName) {\r\n        var expr = this.option(optionName);\r\n        if (isFunction(expr)) {\r\n            return expr\r\n        }\r\n        return expr && compileSetter(expr)\r\n    }\r\n    _bindDiagramData() {\r\n        if (this._updateDiagramLockCount || !this._isBindingMode()) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand,\r\n            ConnectorLineOption: ConnectorLineOption,\r\n            ConnectorLineEnding: ConnectorLineEnding\r\n        } = getDiagram();\r\n        var lineOptionGetter;\r\n        var lineOptionSetter;\r\n        var startLineEndingGetter;\r\n        var startLineEndingSetter;\r\n        var endLineEndingGetter;\r\n        var endLineEndingSetter;\r\n        var containerKeyGetter;\r\n        var containerKeySetter;\r\n        var data = {\r\n            nodeDataSource: this._nodesOption && this._nodesOption.getItems(),\r\n            edgeDataSource: this._edgesOption && this._edgesOption.getItems(),\r\n            nodeDataImporter: {\r\n                getKey: this._createOptionGetter(\"nodes.keyExpr\"),\r\n                setKey: this._createOptionSetter(\"nodes.keyExpr\"),\r\n                getCustomData: this._createOptionGetter(\"nodes.customDataExpr\"),\r\n                setCustomData: this._createOptionSetter(\"nodes.customDataExpr\"),\r\n                getLocked: this._createOptionGetter(\"nodes.lockedExpr\"),\r\n                setLocked: this._createOptionSetter(\"nodes.lockedExpr\"),\r\n                getStyle: this._createOptionGetter(\"nodes.styleExpr\"),\r\n                setStyle: this._createOptionSetter(\"nodes.styleExpr\"),\r\n                getStyleText: this._createOptionGetter(\"nodes.textStyleExpr\"),\r\n                setStyleText: this._createOptionSetter(\"nodes.textStyleExpr\"),\r\n                getZIndex: this._createOptionGetter(\"nodes.zIndexExpr\"),\r\n                setZIndex: this._createOptionSetter(\"nodes.zIndexExpr\"),\r\n                getType: this._createOptionGetter(\"nodes.typeExpr\"),\r\n                setType: this._createOptionSetter(\"nodes.typeExpr\"),\r\n                getText: this._createOptionGetter(\"nodes.textExpr\"),\r\n                setText: this._createOptionSetter(\"nodes.textExpr\"),\r\n                getImage: this._createOptionGetter(\"nodes.imageUrlExpr\"),\r\n                setImage: this._createOptionSetter(\"nodes.imageUrlExpr\"),\r\n                getLeft: this._createOptionGetter(\"nodes.leftExpr\"),\r\n                setLeft: this._createOptionSetter(\"nodes.leftExpr\"),\r\n                getTop: this._createOptionGetter(\"nodes.topExpr\"),\r\n                setTop: this._createOptionSetter(\"nodes.topExpr\"),\r\n                getWidth: this._createOptionGetter(\"nodes.widthExpr\"),\r\n                setWidth: this._createOptionSetter(\"nodes.widthExpr\"),\r\n                getHeight: this._createOptionGetter(\"nodes.heightExpr\"),\r\n                setHeight: this._createOptionSetter(\"nodes.heightExpr\"),\r\n                getParentKey: this._createOptionGetter(\"nodes.parentKeyExpr\"),\r\n                setParentKey: this._createOptionSetter(\"nodes.parentKeyExpr\"),\r\n                getItems: this._createOptionGetter(\"nodes.itemsExpr\"),\r\n                setItems: this._createOptionSetter(\"nodes.itemsExpr\"),\r\n                getContainerKey: containerKeyGetter = this._createOptionGetter(\"nodes.containerKeyExpr\"),\r\n                setContainerKey: containerKeySetter = this._createOptionSetter(\"nodes.containerKeyExpr\"),\r\n                getChildren: !containerKeyGetter && !containerKeySetter && this._createOptionGetter(\"nodes.containerChildrenExpr\"),\r\n                setChildren: !containerKeyGetter && !containerKeySetter && this._createOptionSetter(\"nodes.containerChildrenExpr\")\r\n            },\r\n            edgeDataImporter: {\r\n                getKey: this._createOptionGetter(\"edges.keyExpr\"),\r\n                setKey: this._createOptionSetter(\"edges.keyExpr\"),\r\n                getCustomData: this._createOptionGetter(\"edges.customDataExpr\"),\r\n                setCustomData: this._createOptionSetter(\"edges.customDataExpr\"),\r\n                getLocked: this._createOptionGetter(\"edges.lockedExpr\"),\r\n                setLocked: this._createOptionSetter(\"edges.lockedExpr\"),\r\n                getStyle: this._createOptionGetter(\"edges.styleExpr\"),\r\n                setStyle: this._createOptionSetter(\"edges.styleExpr\"),\r\n                getStyleText: this._createOptionGetter(\"edges.textStyleExpr\"),\r\n                setStyleText: this._createOptionSetter(\"edges.textStyleExpr\"),\r\n                getZIndex: this._createOptionGetter(\"edges.zIndexExpr\"),\r\n                setZIndex: this._createOptionSetter(\"edges.zIndexExpr\"),\r\n                getFrom: this._createOptionGetter(\"edges.fromExpr\"),\r\n                setFrom: this._createOptionSetter(\"edges.fromExpr\"),\r\n                getFromPointIndex: this._createOptionGetter(\"edges.fromPointIndexExpr\"),\r\n                setFromPointIndex: this._createOptionSetter(\"edges.fromPointIndexExpr\"),\r\n                getTo: this._createOptionGetter(\"edges.toExpr\"),\r\n                setTo: this._createOptionSetter(\"edges.toExpr\"),\r\n                getToPointIndex: this._createOptionGetter(\"edges.toPointIndexExpr\"),\r\n                setToPointIndex: this._createOptionSetter(\"edges.toPointIndexExpr\"),\r\n                getPoints: this._createOptionGetter(\"edges.pointsExpr\"),\r\n                setPoints: this._createOptionSetter(\"edges.pointsExpr\"),\r\n                getText: this._createOptionGetter(\"edges.textExpr\"),\r\n                setText: this._createOptionSetter(\"edges.textExpr\"),\r\n                getLineOption: (lineOptionGetter = this._createOptionGetter(\"edges.lineTypeExpr\")) && function(obj) {\r\n                    var lineType = lineOptionGetter(obj);\r\n                    return this._getConnectorLineOption(lineType)\r\n                }.bind(this),\r\n                setLineOption: (lineOptionSetter = this._createOptionSetter(\"edges.lineTypeExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineOption.Straight:\r\n                            value = \"straight\";\r\n                            break;\r\n                        case ConnectorLineOption.Orthogonal:\r\n                            value = \"orthogonal\"\r\n                    }\r\n                    lineOptionSetter(obj, value)\r\n                }.bind(this),\r\n                getStartLineEnding: (startLineEndingGetter = this._createOptionGetter(\"edges.fromLineEndExpr\")) && function(obj) {\r\n                    var lineEnd = startLineEndingGetter(obj);\r\n                    return this._getConnectorLineEnding(lineEnd)\r\n                }.bind(this),\r\n                setStartLineEnding: (startLineEndingSetter = this._createOptionSetter(\"edges.fromLineEndExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineEnding.Arrow:\r\n                            value = \"arrow\";\r\n                            break;\r\n                        case ConnectorLineEnding.OutlinedTriangle:\r\n                            value = \"outlinedTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.FilledTriangle:\r\n                            value = \"filledTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.None:\r\n                            value = \"none\"\r\n                    }\r\n                    startLineEndingSetter(obj, value)\r\n                }.bind(this),\r\n                getEndLineEnding: (endLineEndingGetter = this._createOptionGetter(\"edges.toLineEndExpr\")) && function(obj) {\r\n                    var lineEnd = endLineEndingGetter(obj);\r\n                    return this._getConnectorLineEnding(lineEnd)\r\n                }.bind(this),\r\n                setEndLineEnding: (endLineEndingSetter = this._createOptionSetter(\"edges.toLineEndExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineEnding.Arrow:\r\n                            value = \"arrow\";\r\n                            break;\r\n                        case ConnectorLineEnding.OutlinedTriangle:\r\n                            value = \"outlinedTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.FilledTriangle:\r\n                            value = \"filledTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.None:\r\n                            value = \"none\"\r\n                    }\r\n                    endLineEndingSetter(obj, value)\r\n                }.bind(this)\r\n            },\r\n            layoutParameters: this._getDataBindingLayoutParameters()\r\n        };\r\n        this._executeDiagramCommand(DiagramCommand.BindDocument, data)\r\n    }\r\n    _reloadContentByChanges(changes, isExternalChanges) {\r\n        var keys = this._getChangesKeys(changes);\r\n        var applyLayout = this._onRequestUpdateLayout(changes);\r\n        this._reloadContent(keys, applyLayout, isExternalChanges)\r\n    }\r\n    _reloadContent(itemKeys, applyLayout, isExternalChanges) {\r\n        this._diagramInstance.reloadContent(itemKeys, () => {\r\n            var nodeDataSource;\r\n            var edgeDataSource;\r\n            if (this._nodesOption && isExternalChanges) {\r\n                nodeDataSource = this._nodesOption.getItems()\r\n            }\r\n            if (this._edgesOption && isExternalChanges) {\r\n                edgeDataSource = this._edgesOption.getItems()\r\n            }\r\n            return {\r\n                nodeDataSource: nodeDataSource,\r\n                edgeDataSource: edgeDataSource\r\n            }\r\n        }, applyLayout && this._getDataBindingLayoutParameters(), isExternalChanges)\r\n    }\r\n    _getConnectorLineOption(lineType) {\r\n        var {\r\n            ConnectorLineOption: ConnectorLineOption\r\n        } = getDiagram();\r\n        switch (lineType) {\r\n            case \"straight\":\r\n                return ConnectorLineOption.Straight;\r\n            default:\r\n                return ConnectorLineOption.Orthogonal\r\n        }\r\n    }\r\n    _getConnectorLineEnding(lineEnd) {\r\n        var {\r\n            ConnectorLineEnding: ConnectorLineEnding\r\n        } = getDiagram();\r\n        switch (lineEnd) {\r\n            case \"arrow\":\r\n                return ConnectorLineEnding.Arrow;\r\n            case \"outlinedTriangle\":\r\n                return ConnectorLineEnding.OutlinedTriangle;\r\n            case \"filledTriangle\":\r\n                return ConnectorLineEnding.FilledTriangle;\r\n            default:\r\n                return ConnectorLineEnding.None\r\n        }\r\n    }\r\n    _getDataBindingLayoutParameters() {\r\n        var {\r\n            DataLayoutType: DataLayoutType,\r\n            DataLayoutOrientation: DataLayoutOrientation\r\n        } = getDiagram();\r\n        var layoutParametersOption = this.option(\"nodes.autoLayout\") || \"off\";\r\n        var layoutType = layoutParametersOption.type || layoutParametersOption;\r\n        var parameters = {};\r\n        if (\"off\" !== layoutType && (\"auto\" !== layoutType || !this._hasNodePositionExprs())) {\r\n            switch (layoutType) {\r\n                case \"tree\":\r\n                    parameters.type = DataLayoutType.Tree;\r\n                    break;\r\n                default:\r\n                    parameters.type = DataLayoutType.Sugiyama\r\n            }\r\n            switch (layoutParametersOption.orientation) {\r\n                case \"vertical\":\r\n                    parameters.orientation = DataLayoutOrientation.Vertical;\r\n                    break;\r\n                case \"horizontal\":\r\n                    parameters.orientation = DataLayoutOrientation.Horizontal\r\n            }\r\n            if (this.option(\"edges.fromPointIndexExpr\") || this.option(\"edges.toPointIndexExpr\")) {\r\n                parameters.skipPointIndices = true\r\n            }\r\n        }\r\n        parameters.autoSizeEnabled = !!this.option(\"nodes.autoSizeEnabled\");\r\n        return parameters\r\n    }\r\n    _hasNodePositionExprs() {\r\n        return this.option(\"nodes.topExpr\") && this.option(\"nodes.leftExpr\")\r\n    }\r\n    _getAutoZoomValue(option) {\r\n        var {\r\n            AutoZoomMode: AutoZoomMode\r\n        } = getDiagram();\r\n        switch (option) {\r\n            case \"fitContent\":\r\n                return AutoZoomMode.FitContent;\r\n            case \"fitWidth\":\r\n                return AutoZoomMode.FitToWidth;\r\n            default:\r\n                return AutoZoomMode.Disabled\r\n        }\r\n    }\r\n    _isBindingMode() {\r\n        return this._nodesOption && this._nodesOption.hasItems() || this._edgesOption && this._nodesOption.hasItems()\r\n    }\r\n    _beginUpdateDiagram() {\r\n        this._updateDiagramLockCount++\r\n    }\r\n    _endUpdateDiagram() {\r\n        this._updateDiagramLockCount = Math.max(this._updateDiagramLockCount - 1, 0);\r\n        if (!this._updateDiagramLockCount) {\r\n            this._bindDiagramData()\r\n        }\r\n    }\r\n    _getCustomShapes() {\r\n        return this.option(\"customShapes\") || []\r\n    }\r\n    _getToolboxGroups() {\r\n        return DiagramToolboxManager.getGroups(this.option(\"toolbox.groups\"))\r\n    }\r\n    _updateCustomShapes(customShapes, prevCustomShapes) {\r\n        if (Array.isArray(prevCustomShapes)) {\r\n            this._diagramInstance.removeCustomShapes(prevCustomShapes.map(s => s.type))\r\n        }\r\n        if (Array.isArray(customShapes)) {\r\n            this._diagramInstance.addCustomShapes(customShapes.map(s => {\r\n                var templateOption = s.template || this.option(\"customShapeTemplate\");\r\n                var template = templateOption && this._getTemplate(templateOption);\r\n                var toolboxTemplateOption = s.toolboxTemplate || this.option(\"customShapeToolboxTemplate\");\r\n                var toolboxTemplate = toolboxTemplateOption && this._getTemplate(toolboxTemplateOption);\r\n                return {\r\n                    category: s.category,\r\n                    type: s.type,\r\n                    baseType: s.baseType,\r\n                    title: s.title,\r\n                    svgUrl: s.backgroundImageUrl,\r\n                    svgToolboxUrl: s.backgroundImageToolboxUrl,\r\n                    svgLeft: s.backgroundImageLeft,\r\n                    svgTop: s.backgroundImageTop,\r\n                    svgWidth: s.backgroundImageWidth,\r\n                    svgHeight: s.backgroundImageHeight,\r\n                    defaultWidth: s.defaultWidth,\r\n                    defaultHeight: s.defaultHeight,\r\n                    toolboxWidthToHeightRatio: s.toolboxWidthToHeightRatio,\r\n                    minWidth: s.minWidth,\r\n                    minHeight: s.minHeight,\r\n                    maxWidth: s.maxWidth,\r\n                    maxHeight: s.maxHeight,\r\n                    allowResize: s.allowResize,\r\n                    defaultText: s.defaultText,\r\n                    allowEditText: s.allowEditText,\r\n                    textLeft: s.textLeft,\r\n                    textTop: s.textTop,\r\n                    textWidth: s.textWidth,\r\n                    textHeight: s.textHeight,\r\n                    defaultImageUrl: s.defaultImageUrl,\r\n                    allowEditImage: s.allowEditImage,\r\n                    imageLeft: s.imageLeft,\r\n                    imageTop: s.imageTop,\r\n                    imageWidth: s.imageWidth,\r\n                    imageHeight: s.imageHeight,\r\n                    connectionPoints: s.connectionPoints && s.connectionPoints.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    })),\r\n                    createTemplate: template && ((container, item) => {\r\n                        template.render({\r\n                            model: this._nativeItemToDiagramItem(item),\r\n                            container: getPublicElement($(container))\r\n                        })\r\n                    }),\r\n                    createToolboxTemplate: toolboxTemplate && ((container, item) => {\r\n                        toolboxTemplate.render({\r\n                            model: this._nativeItemToDiagramItem(item),\r\n                            container: getPublicElement($(container))\r\n                        })\r\n                    }),\r\n                    destroyTemplate: template && (container => {\r\n                        $(container).empty()\r\n                    }),\r\n                    templateLeft: s.templateLeft,\r\n                    templateTop: s.templateTop,\r\n                    templateWidth: s.templateWidth,\r\n                    templateHeight: s.templateHeight,\r\n                    keepRatioOnAutoSize: s.keepRatioOnAutoSize\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    _onToggleFullScreen(fullScreen) {\r\n        if (this.toggleFullscreenLock > 0) {\r\n            return\r\n        }\r\n        this._changeNativeFullscreen(fullScreen);\r\n        this.$element().toggleClass(DIAGRAM_FULLSCREEN_CLASS, fullScreen);\r\n        this._diagramInstance.updateLayout(true);\r\n        this._processDiagramResize();\r\n        if (this._toolbox) {\r\n            this._toolbox.repaint()\r\n        }\r\n        if (this._propertiesPanel) {\r\n            this._propertiesPanel.repaint()\r\n        }\r\n    }\r\n    _changeNativeFullscreen(setModeOn) {\r\n        var window = getWindow();\r\n        if (window.self === window.top || setModeOn === this._inNativeFullscreen()) {\r\n            return\r\n        }\r\n        if (setModeOn) {\r\n            this._subscribeFullscreenNativeChanged()\r\n        } else {\r\n            this._unsubscribeFullscreenNativeChanged()\r\n        }\r\n        this._setNativeFullscreen(setModeOn)\r\n    }\r\n    _setNativeFullscreen(on) {\r\n        var window = getWindow();\r\n        var document = window.self.document;\r\n        var body = window.self.document.body;\r\n        if (on) {\r\n            if (body.requestFullscreen) {\r\n                body.requestFullscreen()\r\n            } else if (body.mozRequestFullscreen) {\r\n                body.mozRequestFullscreen()\r\n            } else if (body.webkitRequestFullscreen) {\r\n                body.webkitRequestFullscreen()\r\n            } else if (body.msRequestFullscreen) {\r\n                body.msRequestFullscreen()\r\n            }\r\n        } else if (document.exitFullscreen) {\r\n            document.exitFullscreen()\r\n        } else if (document.mozCancelFullscreen) {\r\n            document.mozCancelFullscreen()\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen()\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen()\r\n        }\r\n    }\r\n    _inNativeFullscreen() {\r\n        var document = getWindow().document;\r\n        var fullscreenElement = document.fullscreenElement || document.msFullscreenElement || document.webkitFullscreenElement;\r\n        var isInFullscreen = fullscreenElement === document.body || document.webkitIsFullscreen;\r\n        return !!isInFullscreen\r\n    }\r\n    _subscribeFullscreenNativeChanged() {\r\n        var document = getWindow().document;\r\n        var handler = this._onNativeFullscreenChangeHandler.bind(this);\r\n        eventsEngine.on(document, FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, IE_FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME, handler)\r\n    }\r\n    _unsubscribeFullscreenNativeChanged() {\r\n        var document = getWindow().document;\r\n        eventsEngine.off(document, FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, IE_FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME)\r\n    }\r\n    _onNativeFullscreenChangeHandler() {\r\n        if (!this._inNativeFullscreen()) {\r\n            this._unsubscribeFullscreenNativeChanged();\r\n            this.option(\"fullScreen\", false)\r\n        }\r\n    }\r\n    _executeDiagramFullscreenCommand(fullscreen) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this.toggleFullscreenLock++;\r\n        this._executeDiagramCommand(DiagramCommand.Fullscreen, fullscreen);\r\n        this.toggleFullscreenLock--\r\n    }\r\n    _onShowContextMenu(x, y, selection) {\r\n        if (this._contextMenu) {\r\n            this._contextMenu._show(x, y, selection)\r\n        }\r\n    }\r\n    _onHideContextMenu() {\r\n        if (this._contextMenu) {\r\n            this._contextMenu._hide()\r\n        }\r\n    }\r\n    _onShowContextToolbox(x, y, side, category, callback) {\r\n        if (this._contextToolbox) {\r\n            this._contextToolbox._show(x, y, side, category, callback)\r\n        }\r\n    }\r\n    _onHideContextToolbox() {\r\n        if (this._contextToolbox) {\r\n            this._contextToolbox._hide()\r\n        }\r\n    }\r\n    _getDiagramUnitValue(value) {\r\n        var {\r\n            DiagramUnit: DiagramUnit\r\n        } = getDiagram();\r\n        switch (value) {\r\n            case \"in\":\r\n                return DiagramUnit.In;\r\n            case \"cm\":\r\n                return DiagramUnit.Cm;\r\n            case \"px\":\r\n                return DiagramUnit.Px;\r\n            default:\r\n                return DiagramUnit.In\r\n        }\r\n    }\r\n    _updateReadOnlyState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        var readOnly = this.isReadOnlyMode();\r\n        this._executeDiagramCommand(DiagramCommand.ToggleReadOnly, readOnly)\r\n    }\r\n    _updateZoomLevelState() {\r\n        if (this.option(\"zoomLevel.items\")) {\r\n            this._updateZoomLevelItemsState();\r\n            var zoomLevel = this.option(\"zoomLevel.value\");\r\n            if (!zoomLevel) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(DiagramCommand.ZoomLevel, zoomLevel)\r\n        } else {\r\n            var _zoomLevel = this.option(\"zoomLevel.value\") || this.option(\"zoomLevel\");\r\n            if (!_zoomLevel) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: _DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(_DiagramCommand.ZoomLevel, _zoomLevel)\r\n        }\r\n    }\r\n    _updateZoomLevelItemsState() {\r\n        var zoomLevelItems = this.option(\"zoomLevel.items\");\r\n        if (!Array.isArray(zoomLevelItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ZoomLevelItems, zoomLevelItems)\r\n    }\r\n    _updateAutoZoomState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.SwitchAutoZoom, this._getAutoZoomValue(this.option(\"autoZoomMode\")))\r\n    }\r\n    _updateSimpleViewState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ToggleSimpleView, this.option(\"simpleView\"))\r\n    }\r\n    _updateFullscreenState() {\r\n        var fullscreen = this.option(\"fullScreen\");\r\n        this._executeDiagramFullscreenCommand(fullscreen);\r\n        this._onToggleFullScreen(fullscreen)\r\n    }\r\n    _updateShowGridState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ShowGrid, this.option(\"showGrid\"))\r\n    }\r\n    _updateSnapToGridState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.SnapToGrid, this.option(\"snapToGrid\"))\r\n    }\r\n    _updateGridSizeState() {\r\n        if (this.option(\"gridSize.items\")) {\r\n            this._updateGridSizeItemsState();\r\n            var gridSize = this.option(\"gridSize.value\");\r\n            if (!gridSize) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(DiagramCommand.GridSize, gridSize)\r\n        } else {\r\n            var _gridSize = this.option(\"gridSize.value\") || this.option(\"gridSize\");\r\n            if (!_gridSize) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: _DiagramCommand2\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(_DiagramCommand2.GridSize, _gridSize)\r\n        }\r\n    }\r\n    _updateGridSizeItemsState() {\r\n        var gridSizeItems = this.option(\"gridSize.items\");\r\n        if (!Array.isArray(gridSizeItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.GridSizeItems, gridSizeItems)\r\n    }\r\n    _updateUnitItems() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        var items = this._getUnitItems();\r\n        if (this._unitItems !== items) {\r\n            this._unitItems = items;\r\n            DiagramLocalizationService.unitItems = items\r\n        }\r\n    }\r\n    _getUnitItems() {\r\n        var {\r\n            DiagramUnit: DiagramUnit\r\n        } = getDiagram();\r\n        var items = {};\r\n        items[DiagramUnit.In] = messageLocalization.format(\"dxDiagram-unitIn\");\r\n        items[DiagramUnit.Cm] = messageLocalization.format(\"dxDiagram-unitCm\");\r\n        items[DiagramUnit.Px] = messageLocalization.format(\"dxDiagram-unitPx\");\r\n        return items\r\n    }\r\n    _updateFormatUnitsMethod() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        DiagramLocalizationService.formatUnit = function(value) {\r\n            return numberLocalization.format(value)\r\n        }\r\n    }\r\n    _updateViewUnitsState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ViewUnits, this._getDiagramUnitValue(this.option(\"viewUnits\")))\r\n    }\r\n    _updateUnitsState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Units, this._getDiagramUnitValue(this.option(\"units\")))\r\n    }\r\n    _updatePageSizeState() {\r\n        var pageSize = this.option(\"pageSize\");\r\n        if (!pageSize || !pageSize.width || !pageSize.height) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageSize, pageSize)\r\n    }\r\n    _updatePageSizeItemsState() {\r\n        var pageSizeItems = this.option(\"pageSize.items\");\r\n        if (!Array.isArray(pageSizeItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageSizeItems, pageSizeItems)\r\n    }\r\n    _updatePageOrientationState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageLandscape, \"landscape\" === this.option(\"pageOrientation\"))\r\n    }\r\n    _updatePageColorState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageColor, this.option(\"pageColor\"))\r\n    }\r\n    _updateShapeTexts() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        var texts = this._getShapeTexts();\r\n        if (this._shapeTexts !== texts) {\r\n            this._shapeTexts = texts;\r\n            DiagramLocalizationService.shapeTexts = texts\r\n        }\r\n    }\r\n    _getShapeTexts() {\r\n        var {\r\n            ShapeTypes: ShapeTypes\r\n        } = getDiagram();\r\n        var texts = {};\r\n        texts[ShapeTypes.Text] = messageLocalization.format(\"dxDiagram-shapeText\");\r\n        texts[ShapeTypes.Rectangle] = messageLocalization.format(\"dxDiagram-shapeRectangle\");\r\n        texts[ShapeTypes.Ellipse] = messageLocalization.format(\"dxDiagram-shapeEllipse\");\r\n        texts[ShapeTypes.Cross] = messageLocalization.format(\"dxDiagram-shapeCross\");\r\n        texts[ShapeTypes.Triangle] = messageLocalization.format(\"dxDiagram-shapeTriangle\");\r\n        texts[ShapeTypes.Diamond] = messageLocalization.format(\"dxDiagram-shapeDiamond\");\r\n        texts[ShapeTypes.Heart] = messageLocalization.format(\"dxDiagram-shapeHeart\");\r\n        texts[ShapeTypes.Pentagon] = messageLocalization.format(\"dxDiagram-shapePentagon\");\r\n        texts[ShapeTypes.Hexagon] = messageLocalization.format(\"dxDiagram-shapeHexagon\");\r\n        texts[ShapeTypes.Octagon] = messageLocalization.format(\"dxDiagram-shapeOctagon\");\r\n        texts[ShapeTypes.Star] = messageLocalization.format(\"dxDiagram-shapeStar\");\r\n        texts[ShapeTypes.ArrowLeft] = messageLocalization.format(\"dxDiagram-shapeArrowLeft\");\r\n        texts[ShapeTypes.ArrowUp] = messageLocalization.format(\"dxDiagram-shapeArrowUp\");\r\n        texts[ShapeTypes.ArrowRight] = messageLocalization.format(\"dxDiagram-shapeArrowRight\");\r\n        texts[ShapeTypes.ArrowDown] = messageLocalization.format(\"dxDiagram-shapeArrowDown\");\r\n        texts[ShapeTypes.ArrowUpDown] = messageLocalization.format(\"dxDiagram-shapeArrowUpDown\");\r\n        texts[ShapeTypes.ArrowLeftRight] = messageLocalization.format(\"dxDiagram-shapeArrowLeftRight\");\r\n        texts[ShapeTypes.Process] = messageLocalization.format(\"dxDiagram-shapeProcess\");\r\n        texts[ShapeTypes.Decision] = messageLocalization.format(\"dxDiagram-shapeDecision\");\r\n        texts[ShapeTypes.Terminator] = messageLocalization.format(\"dxDiagram-shapeTerminator\");\r\n        texts[ShapeTypes.PredefinedProcess] = messageLocalization.format(\"dxDiagram-shapePredefinedProcess\");\r\n        texts[ShapeTypes.Document] = messageLocalization.format(\"dxDiagram-shapeDocument\");\r\n        texts[ShapeTypes.MultipleDocuments] = messageLocalization.format(\"dxDiagram-shapeMultipleDocuments\");\r\n        texts[ShapeTypes.ManualInput] = messageLocalization.format(\"dxDiagram-shapeManualInput\");\r\n        texts[ShapeTypes.Preparation] = messageLocalization.format(\"dxDiagram-shapePreparation\");\r\n        texts[ShapeTypes.Data] = messageLocalization.format(\"dxDiagram-shapeData\");\r\n        texts[ShapeTypes.Database] = messageLocalization.format(\"dxDiagram-shapeDatabase\");\r\n        texts[ShapeTypes.HardDisk] = messageLocalization.format(\"dxDiagram-shapeHardDisk\");\r\n        texts[ShapeTypes.InternalStorage] = messageLocalization.format(\"dxDiagram-shapeInternalStorage\");\r\n        texts[ShapeTypes.PaperTape] = messageLocalization.format(\"dxDiagram-shapePaperTape\");\r\n        texts[ShapeTypes.ManualOperation] = messageLocalization.format(\"dxDiagram-shapeManualOperation\");\r\n        texts[ShapeTypes.Delay] = messageLocalization.format(\"dxDiagram-shapeDelay\");\r\n        texts[ShapeTypes.StoredData] = messageLocalization.format(\"dxDiagram-shapeStoredData\");\r\n        texts[ShapeTypes.Display] = messageLocalization.format(\"dxDiagram-shapeDisplay\");\r\n        texts[ShapeTypes.Merge] = messageLocalization.format(\"dxDiagram-shapeMerge\");\r\n        texts[ShapeTypes.Connector] = messageLocalization.format(\"dxDiagram-shapeConnector\");\r\n        texts[ShapeTypes.Or] = messageLocalization.format(\"dxDiagram-shapeOr\");\r\n        texts[ShapeTypes.SummingJunction] = messageLocalization.format(\"dxDiagram-shapeSummingJunction\");\r\n        texts[ShapeTypes.Container] = messageLocalization.format(\"dxDiagram-shapeContainerDefaultText\");\r\n        texts[ShapeTypes.VerticalContainer] = messageLocalization.format(\"dxDiagram-shapeVerticalContainer\");\r\n        texts[ShapeTypes.HorizontalContainer] = messageLocalization.format(\"dxDiagram-shapeHorizontalContainer\");\r\n        texts[ShapeTypes.Card] = messageLocalization.format(\"dxDiagram-shapeCardDefaultText\");\r\n        texts[ShapeTypes.CardWithImageOnLeft] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnLeft\");\r\n        texts[ShapeTypes.CardWithImageOnTop] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnTop\");\r\n        texts[ShapeTypes.CardWithImageOnRight] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnRight\");\r\n        return texts\r\n    }\r\n    _updateEventSubscriptionMethods() {\r\n        var {\r\n            RenderHelper: RenderHelper\r\n        } = getDiagram();\r\n        RenderHelper.addEventListener = (element, eventName, handler) => {\r\n            eventsEngine.on(element, eventName, handler)\r\n        };\r\n        RenderHelper.removeEventListener = (element, eventName, handler) => {\r\n            eventsEngine.off(element, eventName, handler)\r\n        }\r\n    }\r\n    _updateDefaultItemProperties() {\r\n        if (this.option(\"defaultItemProperties.style\")) {\r\n            this._diagramInstance.setInitialStyleProperties(this.option(\"defaultItemProperties.style\"))\r\n        }\r\n        if (this.option(\"defaultItemProperties.textStyle\")) {\r\n            this._diagramInstance.setInitialTextStyleProperties(this.option(\"defaultItemProperties.textStyle\"))\r\n        }\r\n        this._diagramInstance.setInitialConnectorProperties({\r\n            lineOption: this._getConnectorLineOption(this.option(\"defaultItemProperties.connectorLineType\")),\r\n            startLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineStart\")),\r\n            endLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineEnd\"))\r\n        });\r\n        this._diagramInstance.applyShapeSizeSettings({\r\n            shapeMinWidth: this.option(\"defaultItemProperties.shapeMinWidth\"),\r\n            shapeMaxWidth: this.option(\"defaultItemProperties.shapeMaxWidth\"),\r\n            shapeMinHeight: this.option(\"defaultItemProperties.shapeMinHeight\"),\r\n            shapeMaxHeight: this.option(\"defaultItemProperties.shapeMaxHeight\")\r\n        })\r\n    }\r\n    _updateEditingSettings() {\r\n        this._diagramInstance.applyOperationSettings({\r\n            addShape: this.option(\"editing.allowAddShape\"),\r\n            addShapeFromToolbox: this.option(\"editing.allowAddShape\"),\r\n            deleteShape: this.option(\"editing.allowDeleteShape\"),\r\n            deleteConnector: this.option(\"editing.allowDeleteConnector\"),\r\n            changeConnection: this.option(\"editing.allowChangeConnection\"),\r\n            changeConnectorPoints: this.option(\"editing.allowChangeConnectorPoints\"),\r\n            changeShapeText: this.option(\"editing.allowChangeShapeText\"),\r\n            changeConnectorText: this.option(\"editing.allowChangeConnectorText\"),\r\n            resizeShape: this.option(\"editing.allowResizeShape\"),\r\n            moveShape: this.option(\"editing.allowMoveShape\")\r\n        })\r\n    }\r\n    focus() {\r\n        this._captureFocus()\r\n    }\r\n    export () {\r\n        return this._getDiagramData()\r\n    }\r\n    exportTo(format, callback) {\r\n        var command = this._getDiagramExportToCommand(format);\r\n        this._executeDiagramCommand(command, callback)\r\n    }\r\n    _getDiagramExportToCommand(format) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        switch (format) {\r\n            case \"png\":\r\n                return DiagramCommand.ExportPng;\r\n            case \"jpg\":\r\n                return DiagramCommand.ExportJpg;\r\n            default:\r\n                return DiagramCommand.ExportSvg\r\n        }\r\n    }\r\n    import(data, updateExistingItemsOnly) {\r\n        this._setDiagramData(data, updateExistingItemsOnly);\r\n        this._raiseDataChangeAction()\r\n    }\r\n    updateToolbox() {\r\n        this._diagramInstance && this._diagramInstance.refreshToolbox();\r\n        this._toolbox && this._toolbox.updateMaxHeight()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            readOnly: false,\r\n            zoomLevel: DIAGRAM_DEFAULT_ZOOMLEVEL,\r\n            simpleView: false,\r\n            autoZoomMode: DIAGRAM_DEFAULT_AUTOZOOM_MODE,\r\n            fullScreen: false,\r\n            showGrid: true,\r\n            snapToGrid: true,\r\n            units: DIAGRAM_DEFAULT_UNIT,\r\n            viewUnits: DIAGRAM_DEFAULT_UNIT,\r\n            pageOrientation: DIAGRAM_DEFAULT_PAGE_ORIENTATION,\r\n            pageColor: DIAGRAM_DEFAULT_PAGE_COLOR,\r\n            hasChanges: false,\r\n            nodes: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                customDataExpr: void 0,\r\n                lockedExpr: void 0,\r\n                styleExpr: void 0,\r\n                textStyleExpr: void 0,\r\n                zIndexExpr: void 0,\r\n                typeExpr: \"type\",\r\n                textExpr: \"text\",\r\n                imageUrlExpr: void 0,\r\n                parentKeyExpr: void 0,\r\n                itemsExpr: void 0,\r\n                leftExpr: void 0,\r\n                topExpr: void 0,\r\n                widthExpr: void 0,\r\n                heightExpr: void 0,\r\n                containerKeyExpr: void 0,\r\n                containerChildrenExpr: \"children\",\r\n                autoLayout: \"auto\",\r\n                autoSizeEnabled: true\r\n            },\r\n            edges: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                customDataExpr: void 0,\r\n                lockedExpr: void 0,\r\n                styleExpr: void 0,\r\n                textStyleExpr: void 0,\r\n                zIndexExpr: void 0,\r\n                fromExpr: \"from\",\r\n                fromPointIndexExpr: void 0,\r\n                toExpr: \"to\",\r\n                toPointIndexExpr: void 0,\r\n                pointsExpr: void 0,\r\n                textExpr: void 0,\r\n                lineTypeExpr: void 0,\r\n                fromLineEndExpr: void 0,\r\n                toLineEndExpr: void 0\r\n            },\r\n            customShapes: [],\r\n            toolbox: {\r\n                visibility: \"auto\",\r\n                shapeIconsPerRow: DIAGRAM_TOOLBOX_SHAPES_PER_ROW,\r\n                showSearch: true\r\n            },\r\n            mainToolbar: {\r\n                visible: false\r\n            },\r\n            historyToolbar: {\r\n                visible: true\r\n            },\r\n            viewToolbar: {\r\n                visible: true\r\n            },\r\n            contextMenu: {\r\n                enabled: true\r\n            },\r\n            contextToolbox: {\r\n                enabled: true,\r\n                shapeIconsPerRow: DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW,\r\n                width: DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH\r\n            },\r\n            propertiesPanel: {\r\n                visibility: \"auto\"\r\n            },\r\n            defaultItemProperties: {\r\n                connectorLineType: \"orthogonal\",\r\n                connectorLineStart: \"none\",\r\n                connectorLineEnd: \"arrow\"\r\n            },\r\n            editing: {\r\n                allowAddShape: true,\r\n                allowDeleteShape: true,\r\n                allowDeleteConnector: true,\r\n                allowChangeConnection: true,\r\n                allowChangeConnectorPoints: true,\r\n                allowChangeShapeText: true,\r\n                allowChangeConnectorText: true,\r\n                allowResizeShape: true,\r\n                allowMoveShape: true\r\n            },\r\n            export: {\r\n                fileName: \"Diagram\",\r\n                proxyUrl: void 0\r\n            },\r\n            onItemClick: null,\r\n            onItemDblClick: null,\r\n            onSelectionChanged: null,\r\n            onRequestEditOperation: null,\r\n            onRequestLayoutUpdate: null\r\n        })\r\n    }\r\n    _raiseDataChangeAction() {\r\n        if (this._initialized) {\r\n            this.option(\"hasChanges\", true)\r\n        }\r\n    }\r\n    _raiseEdgeInsertedAction(data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.insert(data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseEdgeUpdatedAction(key, data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.update(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseEdgeRemovedAction(key, data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.remove(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeInsertedAction(data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.insert(data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeUpdatedAction(key, data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.update(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeRemovedAction(key, data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.remove(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseToolboxDragStart() {\r\n        if (this._toolbox) {\r\n            this._toolbox._raiseToolboxDragStart();\r\n            if (this.isMobileScreenSize()) {\r\n                this._toolbox.hide();\r\n                this._toolboxDragHidden = true\r\n            }\r\n        }\r\n    }\r\n    _raiseToolboxDragEnd() {\r\n        if (this._toolbox) {\r\n            this._toolbox._raiseToolboxDragEnd();\r\n            if (this._toolboxDragHidden) {\r\n                this._toolbox.show();\r\n                delete this._toolboxDragHidden\r\n            }\r\n        }\r\n    }\r\n    _raiseTextInputStart() {\r\n        this._textInputStarted = true;\r\n        if (this._propertiesPanel) {\r\n            if (this.isMobileScreenSize() && this._propertiesPanel.isVisible()) {\r\n                this._propertiesPanel.hide();\r\n                this._propertiesPanelTextInputHidden = true\r\n            }\r\n        }\r\n        if (this._toolbox) {\r\n            if (this.isMobileScreenSize() && this._toolbox.isVisible()) {\r\n                this._toolbox.hide();\r\n                this._toolboxTextInputHidden = true\r\n            }\r\n        }\r\n    }\r\n    _raiseTextInputEnd() {\r\n        if (this._propertiesPanel) {\r\n            if (this._propertiesPanelTextInputHidden) {\r\n                this._propertiesPanel.show();\r\n                delete this._propertiesPanelTextInputHidden\r\n            }\r\n        }\r\n        if (this._toolbox) {\r\n            if (this._toolboxTextInputHidden) {\r\n                this._toolbox.show();\r\n                delete this._toolboxTextInputHidden\r\n            }\r\n        }\r\n        this._textInputStarted = false\r\n    }\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    }\r\n    _createItemDblClickAction() {\r\n        this._itemDblClickAction = this._createActionByOption(\"onItemDblClick\")\r\n    }\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    }\r\n    _createRequestEditOperationAction() {\r\n        this._requestEditOperationAction = this._createActionByOption(\"onRequestEditOperation\")\r\n    }\r\n    _createRequestLayoutUpdateAction() {\r\n        this._requestLayoutUpdateAction = this._createActionByOption(\"onRequestLayoutUpdate\")\r\n    }\r\n    _createCustomCommand() {\r\n        this._customCommandAction = this._createActionByOption(\"onCustomCommand\")\r\n    }\r\n    _raiseItemClickAction(nativeItem) {\r\n        if (!this._itemClickAction) {\r\n            this._createItemClickAction()\r\n        }\r\n        this._itemClickAction({\r\n            item: this._nativeItemToDiagramItem(nativeItem)\r\n        })\r\n    }\r\n    _raiseItemDblClickAction(nativeItem) {\r\n        if (!this._itemDblClickAction) {\r\n            this._createItemDblClickAction()\r\n        }\r\n        this._itemDblClickAction({\r\n            item: this._nativeItemToDiagramItem(nativeItem)\r\n        })\r\n    }\r\n    _raiseSelectionChanged(nativeItems) {\r\n        if (!this._selectionChangedAction) {\r\n            this._createSelectionChangedAction()\r\n        }\r\n        this._selectionChangedAction({\r\n            items: nativeItems.map(this._nativeItemToDiagramItem.bind(this))\r\n        })\r\n    }\r\n    _raiseRequestEditOperation(operation, args) {\r\n        if (!this._requestEditOperationAction) {\r\n            this._createRequestEditOperationAction()\r\n        }\r\n        var eventArgs = this._getRequestEditOperationEventArgs(operation, args);\r\n        this._requestEditOperationAction(eventArgs);\r\n        args.allowed = eventArgs.allowed\r\n    }\r\n    _getModelOperation(operation) {\r\n        var {\r\n            DiagramModelOperation: DiagramModelOperation\r\n        } = getDiagram();\r\n        switch (operation) {\r\n            case DiagramModelOperation.AddShape:\r\n                return \"addShape\";\r\n            case DiagramModelOperation.AddShapeFromToolbox:\r\n                return \"addShapeFromToolbox\";\r\n            case DiagramModelOperation.DeleteShape:\r\n                return \"deleteShape\";\r\n            case DiagramModelOperation.DeleteConnector:\r\n                return \"deleteConnector\";\r\n            case DiagramModelOperation.ChangeConnection:\r\n                return \"changeConnection\";\r\n            case DiagramModelOperation.ChangeConnectorPoints:\r\n                return \"changeConnectorPoints\";\r\n            case DiagramModelOperation.BeforeChangeShapeText:\r\n                return \"beforeChangeShapeText\";\r\n            case DiagramModelOperation.ChangeShapeText:\r\n                return \"changeShapeText\";\r\n            case DiagramModelOperation.BeforeChangeConnectorText:\r\n                return \"beforeChangeConnectorText\";\r\n            case DiagramModelOperation.ChangeConnectorText:\r\n                return \"changeConnectorText\";\r\n            case DiagramModelOperation.ResizeShape:\r\n                return \"resizeShape\";\r\n            case DiagramModelOperation.MoveShape:\r\n                return \"moveShape\"\r\n        }\r\n    }\r\n    _getRequestEditOperationEventArgs(operation, args) {\r\n        var {\r\n            DiagramModelOperation: DiagramModelOperation,\r\n            ConnectorPosition: ConnectorPosition\r\n        } = getDiagram();\r\n        var eventArgs = {\r\n            operation: this._getModelOperation(operation),\r\n            allowed: args.allowed,\r\n            updateUI: args.updateUI,\r\n            reason: args.updateUI ? \"checkUIElementAvailability\" : \"modelModification\"\r\n        };\r\n        switch (operation) {\r\n            case DiagramModelOperation.AddShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    position: args.position && {\r\n                        x: args.position.x,\r\n                        y: args.position.y\r\n                    }\r\n                };\r\n                break;\r\n            case DiagramModelOperation.AddShapeFromToolbox:\r\n                eventArgs.args = {\r\n                    shapeType: args.shapeType\r\n                };\r\n                break;\r\n            case DiagramModelOperation.DeleteShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.DeleteConnector:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnection:\r\n                eventArgs.args = {\r\n                    newShape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    oldShape: args.oldShape && this._nativeItemToDiagramItem(args.oldShape),\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    connectionPointIndex: args.connectionPointIndex,\r\n                    connectorPosition: args.position === ConnectorPosition.Begin ? \"start\" : \"end\"\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnectorPoints:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    newPoints: args.points && args.points.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    })),\r\n                    oldPoints: args.oldPoints && args.oldPoints.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    }))\r\n                };\r\n                break;\r\n            case DiagramModelOperation.BeforeChangeShapeText:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeShapeText:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    text: args.text\r\n                };\r\n                break;\r\n            case DiagramModelOperation.BeforeChangeConnectorText:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    index: args.index\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnectorText:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    index: args.index,\r\n                    text: args.text\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ResizeShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    newSize: args.size && {\r\n                        width: args.size.width,\r\n                        height: args.size.height\r\n                    },\r\n                    oldSize: args.oldSize && {\r\n                        width: args.oldSize.width,\r\n                        height: args.oldSize.height\r\n                    }\r\n                };\r\n                break;\r\n            case DiagramModelOperation.MoveShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    newPosition: args.position && {\r\n                        x: args.position.x,\r\n                        y: args.position.y\r\n                    },\r\n                    oldPosition: args.oldPosition && {\r\n                        x: args.oldPosition.x,\r\n                        y: args.oldPosition.y\r\n                    }\r\n                }\r\n        }\r\n        return eventArgs\r\n    }\r\n    _nativeItemToDiagramItem(nativeItem) {\r\n        var {\r\n            NativeShape: NativeShape\r\n        } = getDiagram();\r\n        var createMethod = nativeItem instanceof NativeShape ? this._nativeShapeToDiagramShape.bind(this) : this._nativeConnectorToDiagramConnector.bind(this);\r\n        return extend({\r\n            id: nativeItem.id,\r\n            key: nativeItem.key,\r\n            dataItem: void 0\r\n        }, createMethod(nativeItem))\r\n    }\r\n    _nativeShapeToDiagramShape(nativeShape) {\r\n        return {\r\n            dataItem: this._nodesOption && this._nodesOption.findItem(nativeShape.key),\r\n            itemType: \"shape\",\r\n            text: nativeShape.text,\r\n            type: nativeShape.type,\r\n            position: {\r\n                x: nativeShape.position.x,\r\n                y: nativeShape.position.y\r\n            },\r\n            size: {\r\n                width: nativeShape.size.width,\r\n                height: nativeShape.size.height\r\n            },\r\n            attachedConnectorIds: nativeShape.attachedConnectorIds,\r\n            containerId: nativeShape.containerId,\r\n            containerChildItemIds: nativeShape.containerChildItemIds,\r\n            containerExpanded: nativeShape.containerExpanded\r\n        }\r\n    }\r\n    _nativeConnectorToDiagramConnector(nativeConnector) {\r\n        return {\r\n            dataItem: this._edgesOption && this._edgesOption.findItem(nativeConnector.key),\r\n            itemType: \"connector\",\r\n            texts: nativeConnector.texts,\r\n            fromKey: nativeConnector.fromKey,\r\n            toKey: nativeConnector.toKey,\r\n            fromId: nativeConnector.fromId,\r\n            fromPointIndex: nativeConnector.fromPointIndex,\r\n            toId: nativeConnector.toId,\r\n            toPointIndex: nativeConnector.toPointIndex,\r\n            points: nativeConnector.points.map(pt => ({\r\n                x: pt.x,\r\n                y: pt.y\r\n            }))\r\n        }\r\n    }\r\n    getItemByKey(key) {\r\n        var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByDataKey(key);\r\n        return nativeItem && this._nativeItemToDiagramItem(nativeItem)\r\n    }\r\n    getItemById(id) {\r\n        var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByKey(id);\r\n        return nativeItem && this._nativeItemToDiagramItem(nativeItem)\r\n    }\r\n    getItems() {\r\n        return this._diagramInstance.getNativeItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem))\r\n    }\r\n    getSelectedItems() {\r\n        return this._diagramInstance.getNativeSelectedItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem))\r\n    }\r\n    setSelectedItems(items) {\r\n        return this._diagramInstance.setSelectedItems(items.map(item => item.id))\r\n    }\r\n    scrollToItem(item) {\r\n        return this._diagramInstance.scrollToItems([item.id])\r\n    }\r\n    _invalidateContextMenuCommands() {\r\n        if (this._contextMenu) {\r\n            this._contextMenu.option({\r\n                commands: this.option(\"contextMenu.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidatePropertiesPanelTabs() {\r\n        if (this._propertiesPanel) {\r\n            this._propertiesPanel.option({\r\n                propertyTabs: this.option(\"propertiesPanel.tabs\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateMainToolbarCommands() {\r\n        if (this._mainToolbar) {\r\n            this._mainToolbar.option({\r\n                commands: this.option(\"mainToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateHistoryToolbarCommands() {\r\n        if (this._historyToolbar) {\r\n            this._historyToolbar.option({\r\n                commands: this.option(\"historyToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateViewToolbarCommands() {\r\n        if (this._viewToolbar) {\r\n            this._viewToolbar.option({\r\n                commands: this.option(\"viewToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateToolboxGroups() {\r\n        if (this._toolbox) {\r\n            this._toolbox.option({\r\n                toolboxGroups: this._getToolboxGroups()\r\n            })\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (this.optionsUpdateBar.isUpdateLocked()) {\r\n            return\r\n        }\r\n        this.optionsUpdateBar.beginUpdate();\r\n        try {\r\n            this._optionChangedCore(args)\r\n        } finally {\r\n            this.optionsUpdateBar.endUpdate()\r\n        }\r\n    }\r\n    _optionChangedCore(args) {\r\n        switch (args.name) {\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateReadOnlyState();\r\n                this._invalidate();\r\n                break;\r\n            case \"zoomLevel\":\r\n                if (\"zoomLevel\" === args.fullName || \"zoomLevel.items\" === args.fullName || \"zoomLevel.value\" === args.fullName) {\r\n                    this._updateZoomLevelState()\r\n                }\r\n                break;\r\n            case \"autoZoomMode\":\r\n                this._updateAutoZoomState();\r\n                break;\r\n            case \"simpleView\":\r\n                this._updateSimpleViewState();\r\n                break;\r\n            case \"fullScreen\":\r\n                this._updateFullscreenState();\r\n                break;\r\n            case \"showGrid\":\r\n                this._updateShowGridState();\r\n                break;\r\n            case \"snapToGrid\":\r\n                this._updateSnapToGridState();\r\n                break;\r\n            case \"gridSize\":\r\n                if (\"gridSize\" === args.fullName || \"gridSize.items\" === args.fullName || \"gridSize.value\" === args.fullName) {\r\n                    this._updateGridSizeState()\r\n                }\r\n                break;\r\n            case \"viewUnits\":\r\n                this._updateViewUnitsState();\r\n                break;\r\n            case \"units\":\r\n                this._updateUnitsState();\r\n                break;\r\n            case \"pageSize\":\r\n                if (\"pageSize\" === args.fullName || \"pageSize.items\" === args.fullName) {\r\n                    this._updatePageSizeItemsState()\r\n                }\r\n                if (\"pageSize\" === args.fullName || \"pageSize.width\" === args.fullName || \"pageSize.height\" === args.fullName) {\r\n                    this._updatePageSizeState()\r\n                }\r\n                break;\r\n            case \"pageOrientation\":\r\n                this._updatePageOrientationState();\r\n                break;\r\n            case \"pageColor\":\r\n                this._updatePageColorState();\r\n                break;\r\n            case \"nodes\":\r\n                if (\"nodes.autoLayout\" === args.fullName) {\r\n                    this._refreshDataSources()\r\n                } else {\r\n                    this._refreshNodesDataSource()\r\n                }\r\n                break;\r\n            case \"edges\":\r\n                this._refreshEdgesDataSource();\r\n                break;\r\n            case \"customShapes\":\r\n                this._updateCustomShapes(args.value, args.previousValue);\r\n                this._invalidate();\r\n                break;\r\n            case \"contextMenu\":\r\n                if (\"contextMenu.commands\" === args.fullName) {\r\n                    this._invalidateContextMenuCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"contextToolbox\":\r\n                this._invalidate();\r\n                break;\r\n            case \"propertiesPanel\":\r\n                if (\"propertiesPanel.tabs\" === args.name) {\r\n                    this._invalidatePropertiesPanelTabs()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"toolbox\":\r\n                if (\"toolbox.groups\" === args.fullName) {\r\n                    this._invalidateToolboxGroups()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"mainToolbar\":\r\n                if (\"mainToolbar.commands\" === args.fullName) {\r\n                    this._invalidateMainToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"historyToolbar\":\r\n                if (\"historyToolbar.commands\" === args.fullName) {\r\n                    this._invalidateHistoryToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"viewToolbar\":\r\n                if (\"viewToolbar.commands\" === args.fullName) {\r\n                    this._invalidateViewToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onItemDblClick\":\r\n                this._createItemDblClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onRequestEditOperation\":\r\n                this._createRequestEditOperationAction();\r\n                break;\r\n            case \"onRequestLayoutUpdate\":\r\n                this._createRequestLayoutUpdateAction();\r\n                break;\r\n            case \"onCustomCommand\":\r\n                this._createCustomCommand();\r\n                break;\r\n            case \"defaultItemProperties\":\r\n                this._updateDefaultItemProperties();\r\n                break;\r\n            case \"editing\":\r\n                this._updateEditingSettings();\r\n                break;\r\n            case \"export\":\r\n                this._toolbars.forEach(toolbar => {\r\n                    toolbar.option(\"export\", this.option(\"export\"))\r\n                });\r\n                if (this._contextMenu) {\r\n                    this._contextMenu.option(\"export\", this.option(\"export\"))\r\n                }\r\n                break;\r\n            case \"hasChanges\":\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxDiagram\", Diagram);\r\nexport default Diagram;\r\n"]},"metadata":{},"sourceType":"module"}