{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/dom_adapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport injector from \"./utils/dependency_injector\";\nimport { noop } from \"./utils/common\";\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar DOCUMENT_NODE = 9;\nvar nativeDOMAdapterStrategy = {\n  querySelectorAll: function querySelectorAll(element, selector) {\n    return element.querySelectorAll(selector);\n  },\n  elementMatches: function elementMatches(element, selector) {\n    var _this = this;\n\n    var matches = element.matches || element.matchesSelector || element.mozMatchesSelector || element.msMatchesSelector || element.oMatchesSelector || element.webkitMatchesSelector || function (selector) {\n      var doc = element.document || element.ownerDocument;\n\n      if (!doc) {\n        return false;\n      }\n\n      var items = _this.querySelectorAll(doc, selector);\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === element) {\n          return true;\n        }\n      }\n    };\n\n    return matches.call(element, selector);\n  },\n  createElement: function createElement(tagName, context) {\n    context = context || this._document;\n    return context.createElement(tagName);\n  },\n  createElementNS: function createElementNS(ns, tagName, context) {\n    context = context || this._document;\n    return context.createElementNS(ns, tagName);\n  },\n  createTextNode: function createTextNode(text, context) {\n    context = context || this._document;\n    return context.createTextNode(text);\n  },\n  isNode: function isNode(element) {\n    return element && \"object\" === typeof element && \"nodeType\" in element && \"nodeName\" in element;\n  },\n  isElementNode: function isElementNode(element) {\n    return element && element.nodeType === ELEMENT_NODE;\n  },\n  isTextNode: function isTextNode(element) {\n    return element && element.nodeType === TEXT_NODE;\n  },\n  isDocument: function isDocument(element) {\n    return element && element.nodeType === DOCUMENT_NODE;\n  },\n  removeElement: function removeElement(element) {\n    var parentNode = element && element.parentNode;\n\n    if (parentNode) {\n      parentNode.removeChild(element);\n    }\n  },\n  insertElement: function insertElement(parentElement, newElement, nextSiblingElement) {\n    if (parentElement && newElement && parentElement !== newElement) {\n      if (nextSiblingElement) {\n        parentElement.insertBefore(newElement, nextSiblingElement);\n      } else {\n        parentElement.appendChild(newElement);\n      }\n    }\n  },\n  getAttribute: function getAttribute(element, name) {\n    return element.getAttribute(name);\n  },\n  setAttribute: function setAttribute(element, name, value) {\n    element.setAttribute(name, value);\n  },\n  removeAttribute: function removeAttribute(element, name) {\n    element.removeAttribute(name);\n  },\n  setProperty: function setProperty(element, name, value) {\n    element[name] = value;\n  },\n  setText: function setText(element, text) {\n    if (element) {\n      element.textContent = text;\n    }\n  },\n  setClass: function setClass(element, className, isAdd) {\n    if (1 === element.nodeType && className) {\n      if (element.classList) {\n        if (isAdd) {\n          element.classList.add(className);\n        } else {\n          element.classList.remove(className);\n        }\n      } else {\n        var classNameSupported = \"string\" === typeof element.className;\n        var elementClass = classNameSupported ? element.className : this.getAttribute(element, \"class\") || \"\";\n        var classNames = elementClass.split(\" \");\n        var classIndex = classNames.indexOf(className);\n        var resultClassName;\n\n        if (isAdd && classIndex < 0) {\n          resultClassName = elementClass ? elementClass + \" \" + className : className;\n        }\n\n        if (!isAdd && classIndex >= 0) {\n          classNames.splice(classIndex, 1);\n          resultClassName = classNames.join(\" \");\n        }\n\n        if (void 0 !== resultClassName) {\n          if (classNameSupported) {\n            element.className = resultClassName;\n          } else {\n            this.setAttribute(element, \"class\", resultClassName);\n          }\n        }\n      }\n    }\n  },\n  setStyle: function setStyle(element, name, value) {\n    element.style[name] = value || \"\";\n  },\n  _document: \"undefined\" === typeof document ? void 0 : document,\n  getDocument: function getDocument() {\n    return this._document;\n  },\n  getActiveElement: function getActiveElement() {\n    return this._document.activeElement;\n  },\n  getBody: function getBody() {\n    return this._document.body;\n  },\n  createDocumentFragment: function createDocumentFragment() {\n    return this._document.createDocumentFragment();\n  },\n  getDocumentElement: function getDocumentElement() {\n    return this._document.documentElement;\n  },\n  getLocation: function getLocation() {\n    return this._document.location;\n  },\n  getSelection: function getSelection() {\n    return this._document.selection;\n  },\n  getReadyState: function getReadyState() {\n    return this._document.readyState;\n  },\n  getHead: function getHead() {\n    return this._document.head;\n  },\n  hasDocumentProperty: function hasDocumentProperty(property) {\n    return property in this._document;\n  },\n  listen: function listen(element, event, callback, options) {\n    if (!element || !(\"addEventListener\" in element)) {\n      return noop;\n    }\n\n    element.addEventListener(event, callback, options);\n    return function () {\n      element.removeEventListener(event, callback);\n    };\n  }\n};\nexport default injector(nativeDOMAdapterStrategy);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/core/dom_adapter.js"],"names":["injector","noop","ELEMENT_NODE","TEXT_NODE","DOCUMENT_NODE","nativeDOMAdapterStrategy","querySelectorAll","element","selector","elementMatches","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","doc","document","ownerDocument","items","i","length","call","createElement","tagName","context","_document","createElementNS","ns","createTextNode","text","isNode","isElementNode","nodeType","isTextNode","isDocument","removeElement","parentNode","removeChild","insertElement","parentElement","newElement","nextSiblingElement","insertBefore","appendChild","getAttribute","name","setAttribute","value","removeAttribute","setProperty","setText","textContent","setClass","className","isAdd","classList","add","remove","classNameSupported","elementClass","classNames","split","classIndex","indexOf","resultClassName","splice","join","setStyle","style","getDocument","getActiveElement","activeElement","getBody","body","createDocumentFragment","getDocumentElement","documentElement","getLocation","location","getSelection","selection","getReadyState","readyState","getHead","head","hasDocumentProperty","property","listen","event","callback","options","addEventListener","removeEventListener"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,6BAArB;AACA,SACIC,IADJ,QAEO,gBAFP;AAGA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,wBAAwB,GAAG;AAC3BC,EAAAA,gBAAgB,EAAE,0BAACC,OAAD,EAAUC,QAAV;AAAA,WAAuBD,OAAO,CAACD,gBAAR,CAAyBE,QAAzB,CAAvB;AAAA,GADS;AAE3BC,EAAAA,cAF2B,0BAEZF,OAFY,EAEHC,QAFG,EAEO;AAAA;;AAC9B,QAAIE,OAAO,GAAGH,OAAO,CAACG,OAAR,IAAmBH,OAAO,CAACI,eAA3B,IAA8CJ,OAAO,CAACK,kBAAtD,IAA4EL,OAAO,CAACM,iBAApF,IAAyGN,OAAO,CAACO,gBAAjH,IAAqIP,OAAO,CAACQ,qBAA7I,IAAuK,UAAAP,QAAQ,EAAI;AAC7L,UAAIQ,GAAG,GAAGT,OAAO,CAACU,QAAR,IAAoBV,OAAO,CAACW,aAAtC;;AACA,UAAI,CAACF,GAAL,EAAU;AACN,eAAO,KAAP;AACH;;AACD,UAAIG,KAAK,GAAG,KAAI,CAACb,gBAAL,CAAsBU,GAAtB,EAA2BR,QAA3B,CAAZ;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,YAAID,KAAK,CAACC,CAAD,CAAL,KAAab,OAAjB,EAA0B;AACtB,iBAAO,IAAP;AACH;AACJ;AACJ,KAXD;;AAYA,WAAOG,OAAO,CAACY,IAAR,CAAaf,OAAb,EAAsBC,QAAtB,CAAP;AACH,GAhB0B;AAiB3Be,EAAAA,aAjB2B,yBAiBbC,OAjBa,EAiBJC,OAjBI,EAiBK;AAC5BA,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKC,SAA1B;AACA,WAAOD,OAAO,CAACF,aAAR,CAAsBC,OAAtB,CAAP;AACH,GApB0B;AAqB3BG,EAAAA,eArB2B,2BAqBXC,EArBW,EAqBPJ,OArBO,EAqBEC,OArBF,EAqBW;AAClCA,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKC,SAA1B;AACA,WAAOD,OAAO,CAACE,eAAR,CAAwBC,EAAxB,EAA4BJ,OAA5B,CAAP;AACH,GAxB0B;AAyB3BK,EAAAA,cAzB2B,0BAyBZC,IAzBY,EAyBNL,OAzBM,EAyBG;AAC1BA,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKC,SAA1B;AACA,WAAOD,OAAO,CAACI,cAAR,CAAuBC,IAAvB,CAAP;AACH,GA5B0B;AA6B3BC,EAAAA,MAAM,EAAE,gBAAAxB,OAAO;AAAA,WAAIA,OAAO,IAAI,aAAa,OAAOA,OAA/B,IAA0C,cAAcA,OAAxD,IAAmE,cAAcA,OAArF;AAAA,GA7BY;AA8B3ByB,EAAAA,aAAa,EAAE,uBAAAzB,OAAO;AAAA,WAAIA,OAAO,IAAIA,OAAO,CAAC0B,QAAR,KAAqB/B,YAApC;AAAA,GA9BK;AA+B3BgC,EAAAA,UAAU,EAAE,oBAAA3B,OAAO;AAAA,WAAIA,OAAO,IAAIA,OAAO,CAAC0B,QAAR,KAAqB9B,SAApC;AAAA,GA/BQ;AAgC3BgC,EAAAA,UAAU,EAAE,oBAAA5B,OAAO;AAAA,WAAIA,OAAO,IAAIA,OAAO,CAAC0B,QAAR,KAAqB7B,aAApC;AAAA,GAhCQ;AAiC3BgC,EAAAA,aAjC2B,yBAiCb7B,OAjCa,EAiCJ;AACnB,QAAI8B,UAAU,GAAG9B,OAAO,IAAIA,OAAO,CAAC8B,UAApC;;AACA,QAAIA,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACC,WAAX,CAAuB/B,OAAvB;AACH;AACJ,GAtC0B;AAuC3BgC,EAAAA,aAvC2B,yBAuCbC,aAvCa,EAuCEC,UAvCF,EAuCcC,kBAvCd,EAuCkC;AACzD,QAAIF,aAAa,IAAIC,UAAjB,IAA+BD,aAAa,KAAKC,UAArD,EAAiE;AAC7D,UAAIC,kBAAJ,EAAwB;AACpBF,QAAAA,aAAa,CAACG,YAAd,CAA2BF,UAA3B,EAAuCC,kBAAvC;AACH,OAFD,MAEO;AACHF,QAAAA,aAAa,CAACI,WAAd,CAA0BH,UAA1B;AACH;AACJ;AACJ,GA/C0B;AAgD3BI,EAAAA,YAAY,EAAE,sBAACtC,OAAD,EAAUuC,IAAV;AAAA,WAAmBvC,OAAO,CAACsC,YAAR,CAAqBC,IAArB,CAAnB;AAAA,GAhDa;AAiD3BC,EAAAA,YAjD2B,wBAiDdxC,OAjDc,EAiDLuC,IAjDK,EAiDCE,KAjDD,EAiDQ;AAC/BzC,IAAAA,OAAO,CAACwC,YAAR,CAAqBD,IAArB,EAA2BE,KAA3B;AACH,GAnD0B;AAoD3BC,EAAAA,eApD2B,2BAoDX1C,OApDW,EAoDFuC,IApDE,EAoDI;AAC3BvC,IAAAA,OAAO,CAAC0C,eAAR,CAAwBH,IAAxB;AACH,GAtD0B;AAuD3BI,EAAAA,WAvD2B,uBAuDf3C,OAvDe,EAuDNuC,IAvDM,EAuDAE,KAvDA,EAuDO;AAC9BzC,IAAAA,OAAO,CAACuC,IAAD,CAAP,GAAgBE,KAAhB;AACH,GAzD0B;AA0D3BG,EAAAA,OA1D2B,mBA0DnB5C,OA1DmB,EA0DVuB,IA1DU,EA0DJ;AACnB,QAAIvB,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAAC6C,WAAR,GAAsBtB,IAAtB;AACH;AACJ,GA9D0B;AA+D3BuB,EAAAA,QA/D2B,oBA+DlB9C,OA/DkB,EA+DT+C,SA/DS,EA+DEC,KA/DF,EA+DS;AAChC,QAAI,MAAMhD,OAAO,CAAC0B,QAAd,IAA0BqB,SAA9B,EAAyC;AACrC,UAAI/C,OAAO,CAACiD,SAAZ,EAAuB;AACnB,YAAID,KAAJ,EAAW;AACPhD,UAAAA,OAAO,CAACiD,SAAR,CAAkBC,GAAlB,CAAsBH,SAAtB;AACH,SAFD,MAEO;AACH/C,UAAAA,OAAO,CAACiD,SAAR,CAAkBE,MAAlB,CAAyBJ,SAAzB;AACH;AACJ,OAND,MAMO;AACH,YAAIK,kBAAkB,GAAG,aAAa,OAAOpD,OAAO,CAAC+C,SAArD;AACA,YAAIM,YAAY,GAAGD,kBAAkB,GAAGpD,OAAO,CAAC+C,SAAX,GAAuB,KAAKT,YAAL,CAAkBtC,OAAlB,EAA2B,OAA3B,KAAuC,EAAnG;AACA,YAAIsD,UAAU,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAjB;AACA,YAAIC,UAAU,GAAGF,UAAU,CAACG,OAAX,CAAmBV,SAAnB,CAAjB;AACA,YAAIW,eAAJ;;AACA,YAAIV,KAAK,IAAIQ,UAAU,GAAG,CAA1B,EAA6B;AACzBE,UAAAA,eAAe,GAAGL,YAAY,GAAGA,YAAY,GAAG,GAAf,GAAqBN,SAAxB,GAAoCA,SAAlE;AACH;;AACD,YAAI,CAACC,KAAD,IAAUQ,UAAU,IAAI,CAA5B,EAA+B;AAC3BF,UAAAA,UAAU,CAACK,MAAX,CAAkBH,UAAlB,EAA8B,CAA9B;AACAE,UAAAA,eAAe,GAAGJ,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAAlB;AACH;;AACD,YAAI,KAAK,CAAL,KAAWF,eAAf,EAAgC;AAC5B,cAAIN,kBAAJ,EAAwB;AACpBpD,YAAAA,OAAO,CAAC+C,SAAR,GAAoBW,eAApB;AACH,WAFD,MAEO;AACH,iBAAKlB,YAAL,CAAkBxC,OAAlB,EAA2B,OAA3B,EAAoC0D,eAApC;AACH;AACJ;AACJ;AACJ;AACJ,GA7F0B;AA8F3BG,EAAAA,QA9F2B,oBA8FlB7D,OA9FkB,EA8FTuC,IA9FS,EA8FHE,KA9FG,EA8FI;AAC3BzC,IAAAA,OAAO,CAAC8D,KAAR,CAAcvB,IAAd,IAAsBE,KAAK,IAAI,EAA/B;AACH,GAhG0B;AAiG3BtB,EAAAA,SAAS,EAAE,gBAAgB,OAAOT,QAAvB,GAAkC,KAAK,CAAvC,GAA2CA,QAjG3B;AAkG3BqD,EAAAA,WAlG2B,yBAkGb;AACV,WAAO,KAAK5C,SAAZ;AACH,GApG0B;AAqG3B6C,EAAAA,gBArG2B,8BAqGR;AACf,WAAO,KAAK7C,SAAL,CAAe8C,aAAtB;AACH,GAvG0B;AAwG3BC,EAAAA,OAxG2B,qBAwGjB;AACN,WAAO,KAAK/C,SAAL,CAAegD,IAAtB;AACH,GA1G0B;AA2G3BC,EAAAA,sBA3G2B,oCA2GF;AACrB,WAAO,KAAKjD,SAAL,CAAeiD,sBAAf,EAAP;AACH,GA7G0B;AA8G3BC,EAAAA,kBA9G2B,gCA8GN;AACjB,WAAO,KAAKlD,SAAL,CAAemD,eAAtB;AACH,GAhH0B;AAiH3BC,EAAAA,WAjH2B,yBAiHb;AACV,WAAO,KAAKpD,SAAL,CAAeqD,QAAtB;AACH,GAnH0B;AAoH3BC,EAAAA,YApH2B,0BAoHZ;AACX,WAAO,KAAKtD,SAAL,CAAeuD,SAAtB;AACH,GAtH0B;AAuH3BC,EAAAA,aAvH2B,2BAuHX;AACZ,WAAO,KAAKxD,SAAL,CAAeyD,UAAtB;AACH,GAzH0B;AA0H3BC,EAAAA,OA1H2B,qBA0HjB;AACN,WAAO,KAAK1D,SAAL,CAAe2D,IAAtB;AACH,GA5H0B;AA6H3BC,EAAAA,mBA7H2B,+BA6HPC,QA7HO,EA6HG;AAC1B,WAAOA,QAAQ,IAAI,KAAK7D,SAAxB;AACH,GA/H0B;AAgI3B8D,EAAAA,MAhI2B,kBAgIpBjF,OAhIoB,EAgIXkF,KAhIW,EAgIJC,QAhII,EAgIMC,OAhIN,EAgIe;AACtC,QAAI,CAACpF,OAAD,IAAY,EAAE,sBAAsBA,OAAxB,CAAhB,EAAkD;AAC9C,aAAON,IAAP;AACH;;AACDM,IAAAA,OAAO,CAACqF,gBAAR,CAAyBH,KAAzB,EAAgCC,QAAhC,EAA0CC,OAA1C;AACA,WAAO,YAAM;AACTpF,MAAAA,OAAO,CAACsF,mBAAR,CAA4BJ,KAA5B,EAAmCC,QAAnC;AACH,KAFD;AAGH;AAxI0B,CAA/B;AA0IA,eAAe1F,QAAQ,CAACK,wBAAD,CAAvB","sourcesContent":["/**\r\n * DevExtreme (esm/core/dom_adapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport injector from \"./utils/dependency_injector\";\r\nimport {\r\n    noop\r\n} from \"./utils/common\";\r\nvar ELEMENT_NODE = 1;\r\nvar TEXT_NODE = 3;\r\nvar DOCUMENT_NODE = 9;\r\nvar nativeDOMAdapterStrategy = {\r\n    querySelectorAll: (element, selector) => element.querySelectorAll(selector),\r\n    elementMatches(element, selector) {\r\n        var matches = element.matches || element.matchesSelector || element.mozMatchesSelector || element.msMatchesSelector || element.oMatchesSelector || element.webkitMatchesSelector || (selector => {\r\n            var doc = element.document || element.ownerDocument;\r\n            if (!doc) {\r\n                return false\r\n            }\r\n            var items = this.querySelectorAll(doc, selector);\r\n            for (var i = 0; i < items.length; i++) {\r\n                if (items[i] === element) {\r\n                    return true\r\n                }\r\n            }\r\n        });\r\n        return matches.call(element, selector)\r\n    },\r\n    createElement(tagName, context) {\r\n        context = context || this._document;\r\n        return context.createElement(tagName)\r\n    },\r\n    createElementNS(ns, tagName, context) {\r\n        context = context || this._document;\r\n        return context.createElementNS(ns, tagName)\r\n    },\r\n    createTextNode(text, context) {\r\n        context = context || this._document;\r\n        return context.createTextNode(text)\r\n    },\r\n    isNode: element => element && \"object\" === typeof element && \"nodeType\" in element && \"nodeName\" in element,\r\n    isElementNode: element => element && element.nodeType === ELEMENT_NODE,\r\n    isTextNode: element => element && element.nodeType === TEXT_NODE,\r\n    isDocument: element => element && element.nodeType === DOCUMENT_NODE,\r\n    removeElement(element) {\r\n        var parentNode = element && element.parentNode;\r\n        if (parentNode) {\r\n            parentNode.removeChild(element)\r\n        }\r\n    },\r\n    insertElement(parentElement, newElement, nextSiblingElement) {\r\n        if (parentElement && newElement && parentElement !== newElement) {\r\n            if (nextSiblingElement) {\r\n                parentElement.insertBefore(newElement, nextSiblingElement)\r\n            } else {\r\n                parentElement.appendChild(newElement)\r\n            }\r\n        }\r\n    },\r\n    getAttribute: (element, name) => element.getAttribute(name),\r\n    setAttribute(element, name, value) {\r\n        element.setAttribute(name, value)\r\n    },\r\n    removeAttribute(element, name) {\r\n        element.removeAttribute(name)\r\n    },\r\n    setProperty(element, name, value) {\r\n        element[name] = value\r\n    },\r\n    setText(element, text) {\r\n        if (element) {\r\n            element.textContent = text\r\n        }\r\n    },\r\n    setClass(element, className, isAdd) {\r\n        if (1 === element.nodeType && className) {\r\n            if (element.classList) {\r\n                if (isAdd) {\r\n                    element.classList.add(className)\r\n                } else {\r\n                    element.classList.remove(className)\r\n                }\r\n            } else {\r\n                var classNameSupported = \"string\" === typeof element.className;\r\n                var elementClass = classNameSupported ? element.className : this.getAttribute(element, \"class\") || \"\";\r\n                var classNames = elementClass.split(\" \");\r\n                var classIndex = classNames.indexOf(className);\r\n                var resultClassName;\r\n                if (isAdd && classIndex < 0) {\r\n                    resultClassName = elementClass ? elementClass + \" \" + className : className\r\n                }\r\n                if (!isAdd && classIndex >= 0) {\r\n                    classNames.splice(classIndex, 1);\r\n                    resultClassName = classNames.join(\" \")\r\n                }\r\n                if (void 0 !== resultClassName) {\r\n                    if (classNameSupported) {\r\n                        element.className = resultClassName\r\n                    } else {\r\n                        this.setAttribute(element, \"class\", resultClassName)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setStyle(element, name, value) {\r\n        element.style[name] = value || \"\"\r\n    },\r\n    _document: \"undefined\" === typeof document ? void 0 : document,\r\n    getDocument() {\r\n        return this._document\r\n    },\r\n    getActiveElement() {\r\n        return this._document.activeElement\r\n    },\r\n    getBody() {\r\n        return this._document.body\r\n    },\r\n    createDocumentFragment() {\r\n        return this._document.createDocumentFragment()\r\n    },\r\n    getDocumentElement() {\r\n        return this._document.documentElement\r\n    },\r\n    getLocation() {\r\n        return this._document.location\r\n    },\r\n    getSelection() {\r\n        return this._document.selection\r\n    },\r\n    getReadyState() {\r\n        return this._document.readyState\r\n    },\r\n    getHead() {\r\n        return this._document.head\r\n    },\r\n    hasDocumentProperty(property) {\r\n        return property in this._document\r\n    },\r\n    listen(element, event, callback, options) {\r\n        if (!element || !(\"addEventListener\" in element)) {\r\n            return noop\r\n        }\r\n        element.addEventListener(event, callback, options);\r\n        return () => {\r\n            element.removeEventListener(event, callback)\r\n        }\r\n    }\r\n};\r\nexport default injector(nativeDOMAdapterStrategy);\r\n"]},"metadata":{},"sourceType":"module"}