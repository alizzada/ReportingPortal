{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointment_model.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport config from \"../../core/config\";\nimport { map, each } from \"../../core/utils/iterator\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport dateUtils from \"../../core/utils/date\";\nimport { equalByValue } from \"../../core/utils/common\";\nimport { isFunction, isDefined, isString } from \"../../core/utils/type\";\nimport { inArray, wrapToArray } from \"../../core/utils/array\";\nimport { extend } from \"../../core/utils/extend\";\nimport query from \"../../data/query\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar DATE_FILTER_POSITION = 0;\nvar USER_FILTER_POSITION = 1;\n\nvar FilterMaker = /*#__PURE__*/function () {\n  function FilterMaker(dataAccessors) {\n    _classCallCheck(this, FilterMaker);\n\n    this._filterRegistry = null;\n    this._dataAccessors = dataAccessors;\n  }\n\n  _createClass(FilterMaker, [{\n    key: \"isRegistered\",\n    value: function isRegistered() {\n      return !!this._filterRegistry;\n    }\n  }, {\n    key: \"clearRegistry\",\n    value: function clearRegistry() {\n      delete this._filterRegistry;\n    }\n  }, {\n    key: \"make\",\n    value: function make(type, args) {\n      if (!this._filterRegistry) {\n        this._filterRegistry = {};\n      }\n\n      this._make(type).apply(this, args);\n    }\n  }, {\n    key: \"_make\",\n    value: function _make(type) {\n      var _this = this;\n\n      switch (type) {\n        case \"date\":\n          return function (min, max, useAccessors) {\n            var startDate = useAccessors ? _this._dataAccessors.getter.startDate : _this._dataAccessors.expr.startDateExpr;\n            var endDate = useAccessors ? _this._dataAccessors.getter.endDate : _this._dataAccessors.expr.endDateExpr;\n            var recurrenceRule = _this._dataAccessors.expr.recurrenceRuleExpr;\n            _this._filterRegistry.date = [[[endDate, \">\", min], [startDate, \"<\", max]], \"or\", [recurrenceRule, \"startswith\", \"freq\"], \"or\", [[endDate, min], [startDate, min]]];\n\n            if (!recurrenceRule) {\n              _this._filterRegistry.date.splice(1, 2);\n            }\n          };\n\n        case \"user\":\n          return function (userFilter) {\n            _this._filterRegistry.user = userFilter;\n          };\n      }\n    }\n  }, {\n    key: \"combine\",\n    value: function combine() {\n      var filter = [];\n      this._filterRegistry.date && filter.push(this._filterRegistry.date);\n      this._filterRegistry.user && filter.push(this._filterRegistry.user);\n      return filter;\n    }\n  }, {\n    key: \"dateFilter\",\n    value: function dateFilter() {\n      return this._filterRegistry.date;\n    }\n  }]);\n\n  return FilterMaker;\n}();\n\nvar compareDateWithStartDayHour = function compareDateWithStartDayHour(startDate, endDate, startDayHour, allDay, severalDays) {\n  var startTime = dateUtils.dateTimeFromDecimal(startDayHour);\n  var result = startDate.getHours() >= startTime.hours && startDate.getMinutes() >= startTime.minutes || endDate.getHours() === startTime.hours && endDate.getMinutes() > startTime.minutes || endDate.getHours() > startTime.hours || severalDays || allDay;\n  return result;\n};\n\nvar compareDateWithEndDayHour = function compareDateWithEndDayHour(options) {\n  var startDate = options.startDate,\n      endDate = options.endDate,\n      startDayHour = options.startDayHour,\n      endDayHour = options.endDayHour,\n      viewStartDayHour = options.viewStartDayHour,\n      viewEndDayHour = options.viewEndDayHour,\n      allDay = options.allDay,\n      severalDays = options.severalDays,\n      min = options.min,\n      max = options.max,\n      checkIntersectViewport = options.checkIntersectViewport;\n  var hiddenInterval = (24 - viewEndDayHour + viewStartDayHour) * toMs(\"hour\");\n  var apptDuration = endDate.getTime() - startDate.getTime();\n  var delta = (hiddenInterval - apptDuration) / toMs(\"hour\");\n  var apptStartHour = startDate.getHours();\n  var apptStartMinutes = startDate.getMinutes();\n  var result;\n  var endTime = dateUtils.dateTimeFromDecimal(endDayHour);\n  var startTime = dateUtils.dateTimeFromDecimal(startDayHour);\n  var apptIntersectViewport = startDate < max && endDate > min;\n  result = checkIntersectViewport && apptIntersectViewport || apptStartHour < endTime.hours || apptStartHour === endTime.hours && apptStartMinutes < endTime.minutes || allDay && startDate <= max || severalDays && apptIntersectViewport && (apptStartHour < endTime.hours || 60 * endDate.getHours() + endDate.getMinutes() > 60 * startTime.hours);\n\n  if (apptDuration < hiddenInterval) {\n    if (apptStartHour > endTime.hours && apptStartMinutes > endTime.minutes && delta <= apptStartHour - endDayHour) {\n      result = false;\n    }\n  }\n\n  return result;\n};\n\nvar AppointmentModel = /*#__PURE__*/function () {\n  function AppointmentModel(dataSource, dataAccessors, baseAppointmentDuration) {\n    _classCallCheck(this, AppointmentModel);\n\n    this.setDataAccessors(dataAccessors);\n    this.setDataSource(dataSource);\n    this._updatedAppointmentKeys = [];\n    this._filterMaker = new FilterMaker(dataAccessors);\n    this._baseAppointmentDuration = baseAppointmentDuration;\n  }\n\n  _createClass(AppointmentModel, [{\n    key: \"keyName\",\n    get: function get() {\n      var store = this._dataSource.store();\n\n      return store.key();\n    }\n  }, {\n    key: \"_createFilter\",\n    value: function _createFilter(min, max, remoteFiltering, dateSerializationFormat) {\n      this._filterMaker.make(\"date\", [min, max]);\n\n      var userFilterPosition = this._excessFiltering() ? this._dataSource.filter()[USER_FILTER_POSITION] : this._dataSource.filter();\n\n      this._filterMaker.make(\"user\", [userFilterPosition]);\n\n      if (remoteFiltering) {\n        this._dataSource.filter(this._combineRemoteFilter(dateSerializationFormat));\n      }\n    }\n  }, {\n    key: \"_excessFiltering\",\n    value: function _excessFiltering() {\n      var dateFilter = this._filterMaker.dateFilter();\n\n      var dataSourceFilter = this._dataSource.filter();\n\n      return dataSourceFilter && (equalByValue(dataSourceFilter, dateFilter) || dataSourceFilter.length && equalByValue(dataSourceFilter[DATE_FILTER_POSITION], dateFilter));\n    }\n  }, {\n    key: \"_combineFilter\",\n    value: function _combineFilter() {\n      return this._filterMaker.combine();\n    }\n  }, {\n    key: \"_getStoreKey\",\n    value: function _getStoreKey(target) {\n      var store = this._dataSource.store();\n\n      return store.keyOf(target);\n    }\n  }, {\n    key: \"_filterAppointmentByResources\",\n    value: function _filterAppointmentByResources(appointment, resources) {\n      var _this2 = this;\n\n      var checkAppointmentResourceValues = function checkAppointmentResourceValues(resourceName, resourceIndex) {\n        var resourceGetter = _this2._dataAccessors.getter.resources[resourceName];\n        var resource;\n\n        if (isFunction(resourceGetter)) {\n          resource = resourceGetter(appointment);\n        }\n\n        var appointmentResourceValues = wrapToArray(resource);\n        var resourceData = map(resources[resourceIndex].items, function (item) {\n          return item.id;\n        });\n\n        for (var j = 0; j < appointmentResourceValues.length; j++) {\n          if (inArray(appointmentResourceValues[j], resourceData) > -1) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      var result = false;\n\n      for (var i = 0; i < resources.length; i++) {\n        var resourceName = resources[i].name;\n        result = checkAppointmentResourceValues(resourceName, i);\n\n        if (!result) {\n          return false;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_filterAppointmentByRRule\",\n    value: function _filterAppointmentByRRule(appointment, min, max, startDayHour, endDayHour, firstDayOfWeek) {\n      var recurrenceRule = appointment.recurrenceRule;\n      var recurrenceException = appointment.recurrenceException;\n      var allDay = appointment.allDay;\n      var result = true;\n      var appointmentStartDate = appointment.startDate;\n      var appointmentEndDate = appointment.endDate;\n      var recurrenceProcessor = getRecurrenceProcessor();\n\n      if (allDay || this._appointmentPartInInterval(appointmentStartDate, appointmentEndDate, startDayHour, endDayHour)) {\n        var trimmedDates = this._trimDates(min, max);\n\n        min = trimmedDates.min;\n        max = new Date(trimmedDates.max.getTime() - toMs(\"minute\"));\n      }\n\n      if (recurrenceRule && !recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {\n        result = appointmentEndDate > min && appointmentStartDate <= max;\n      }\n\n      if (result && recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {\n        result = recurrenceProcessor.hasRecurrence({\n          rule: recurrenceRule,\n          exception: recurrenceException,\n          start: appointmentStartDate,\n          end: appointmentEndDate,\n          min: min,\n          max: max,\n          firstDayOfWeek: firstDayOfWeek\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_appointmentPartInInterval\",\n    value: function _appointmentPartInInterval(startDate, endDate, startDayHour, endDayHour) {\n      var apptStartDayHour = startDate.getHours();\n      var apptEndDayHour = endDate.getHours();\n      return apptStartDayHour <= startDayHour && apptEndDayHour <= endDayHour && apptEndDayHour >= startDayHour || apptEndDayHour >= endDayHour && apptStartDayHour <= endDayHour && apptStartDayHour >= startDayHour;\n    }\n  }, {\n    key: \"_createAllDayAppointmentFilter\",\n    value: function _createAllDayAppointmentFilter(filterOptions) {\n      var viewStartDayHour = filterOptions.viewStartDayHour,\n          viewEndDayHour = filterOptions.viewEndDayHour;\n      var that = this;\n      return [[function (appointment) {\n        return that.appointmentTakesAllDay(appointment, viewStartDayHour, viewEndDayHour);\n      }]];\n    }\n  }, {\n    key: \"_createCombinedFilter\",\n    value: function _createCombinedFilter(filterOptions, timeZoneCalculator) {\n      var dataAccessors = this._dataAccessors;\n      var min = new Date(filterOptions.min);\n      var max = new Date(filterOptions.max);\n      var getRecurrenceException = filterOptions.recurrenceException;\n      var startDayHour = filterOptions.startDayHour,\n          endDayHour = filterOptions.endDayHour,\n          viewStartDayHour = filterOptions.viewStartDayHour,\n          viewEndDayHour = filterOptions.viewEndDayHour,\n          resources = filterOptions.resources,\n          firstDayOfWeek = filterOptions.firstDayOfWeek,\n          checkIntersectViewport = filterOptions.checkIntersectViewport;\n      var that = this;\n      return [[function (appointment) {\n        var result = true;\n        var startDate = new Date(dataAccessors.getter.startDate(appointment));\n        var endDate = new Date(dataAccessors.getter.endDate(appointment));\n        var appointmentTakesAllDay = that.appointmentTakesAllDay(appointment, viewStartDayHour, viewEndDayHour);\n        var appointmentTakesSeveralDays = that.appointmentTakesSeveralDays(appointment);\n        var isAllDay = dataAccessors.getter.allDay(appointment);\n        var appointmentIsLong = appointmentTakesSeveralDays || appointmentTakesAllDay;\n        var useRecurrence = isDefined(dataAccessors.getter.recurrenceRule);\n        var recurrenceRule;\n\n        if (useRecurrence) {\n          recurrenceRule = dataAccessors.getter.recurrenceRule(appointment);\n        }\n\n        if (resources && resources.length) {\n          result = that._filterAppointmentByResources(appointment, resources);\n        }\n\n        if (appointmentTakesAllDay && false === filterOptions.allDay) {\n          result = false;\n        }\n\n        var startDateTimeZone = dataAccessors.getter.startDateTimeZone(appointment);\n        var endDateTimeZone = dataAccessors.getter.endDateTimeZone(appointment);\n        var comparableStartDate = timeZoneCalculator.createDate(startDate, {\n          appointmentTimeZone: startDateTimeZone,\n          path: \"toGrid\"\n        });\n        var comparableEndDate = timeZoneCalculator.createDate(endDate, {\n          appointmentTimeZone: endDateTimeZone,\n          path: \"toGrid\"\n        });\n\n        if (result && useRecurrence) {\n          var recurrenceException = getRecurrenceException ? getRecurrenceException(appointment) : dataAccessors.getter.recurrenceException(appointment);\n          result = that._filterAppointmentByRRule({\n            startDate: comparableStartDate,\n            endDate: comparableEndDate,\n            recurrenceRule: recurrenceRule,\n            recurrenceException: recurrenceException,\n            allDay: appointmentTakesAllDay\n          }, min, max, startDayHour, endDayHour, firstDayOfWeek);\n        }\n\n        if (result && comparableEndDate < min && appointmentIsLong && !isAllDay && (!useRecurrence || useRecurrence && !recurrenceRule)) {\n          result = false;\n        }\n\n        if (result && isDefined(startDayHour) && (!useRecurrence || !filterOptions.isVirtualScrolling)) {\n          result = compareDateWithStartDayHour(comparableStartDate, comparableEndDate, startDayHour, appointmentTakesAllDay, appointmentTakesSeveralDays);\n        }\n\n        if (result && isDefined(endDayHour)) {\n          result = compareDateWithEndDayHour({\n            startDate: comparableStartDate,\n            endDate: comparableEndDate,\n            startDayHour: startDayHour,\n            endDayHour: endDayHour,\n            viewStartDayHour: viewStartDayHour,\n            viewEndDayHour: viewEndDayHour,\n            allDay: appointmentTakesAllDay,\n            severalDays: appointmentTakesSeveralDays,\n            min: min,\n            max: max,\n            checkIntersectViewport: checkIntersectViewport\n          });\n        }\n\n        if (result && useRecurrence && !recurrenceRule) {\n          if (comparableEndDate < min && !isAllDay) {\n            result = false;\n          }\n        }\n\n        return result;\n      }]];\n    }\n  }, {\n    key: \"setDataSource\",\n    value: function setDataSource(dataSource) {\n      this._dataSource = dataSource;\n      this.cleanModelState();\n\n      this._initStoreChangeHandlers();\n\n      this._filterMaker && this._filterMaker.clearRegistry();\n    }\n  }, {\n    key: \"_initStoreChangeHandlers\",\n    value: function _initStoreChangeHandlers() {\n      var _this3 = this;\n\n      var dataSource = this._dataSource;\n      var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();\n\n      if (store) {\n        store.on(\"updating\", function (newItem) {\n          _this3._updatedAppointment = newItem;\n        });\n        store.on(\"push\", function (pushItems) {\n          var items = dataSource.items();\n          var keyName = store.key();\n          pushItems.forEach(function (pushItem) {\n            var itemExists = 0 !== items.filter(function (item) {\n              return item[keyName] === pushItem.key;\n            }).length;\n\n            if (itemExists) {\n              _this3._updatedAppointmentKeys.push({\n                key: keyName,\n                value: pushItem.key\n              });\n            } else {\n              var data = pushItem.data;\n              data && items.push(data);\n            }\n          });\n          dataSource.load();\n        });\n      }\n    }\n  }, {\n    key: \"getUpdatedAppointment\",\n    value: function getUpdatedAppointment() {\n      return this._updatedAppointment;\n    }\n  }, {\n    key: \"getUpdatedAppointmentKeys\",\n    value: function getUpdatedAppointmentKeys() {\n      return this._updatedAppointmentKeys;\n    }\n  }, {\n    key: \"cleanModelState\",\n    value: function cleanModelState() {\n      this._updatedAppointment = null;\n      this._updatedAppointmentKeys = [];\n    }\n  }, {\n    key: \"setDataAccessors\",\n    value: function setDataAccessors(dataAccessors) {\n      this._dataAccessors = dataAccessors;\n      this._filterMaker = new FilterMaker(dataAccessors);\n    }\n  }, {\n    key: \"filterByDate\",\n    value: function filterByDate(min, max, remoteFiltering, dateSerializationFormat) {\n      if (!this._dataSource) {\n        return;\n      }\n\n      var trimmedDates = this._trimDates(min, max);\n\n      if (!this._filterMaker.isRegistered()) {\n        this._createFilter(trimmedDates.min, trimmedDates.max, remoteFiltering, dateSerializationFormat);\n      } else {\n        var _this$_dataSource$fil;\n\n        this._filterMaker.make(\"date\", [trimmedDates.min, trimmedDates.max]);\n\n        if ((null === (_this$_dataSource$fil = this._dataSource.filter()) || void 0 === _this$_dataSource$fil ? void 0 : _this$_dataSource$fil.length) > 1) {\n          var userFilter = this._serializeRemoteFilter([this._dataSource.filter()[1]], dateSerializationFormat);\n\n          this._filterMaker.make(\"user\", userFilter);\n        }\n\n        if (remoteFiltering) {\n          this._dataSource.filter(this._combineRemoteFilter(dateSerializationFormat));\n        }\n      }\n    }\n  }, {\n    key: \"_combineRemoteFilter\",\n    value: function _combineRemoteFilter(dateSerializationFormat) {\n      var combinedFilter = this._filterMaker.combine();\n\n      return this._serializeRemoteFilter(combinedFilter, dateSerializationFormat);\n    }\n  }, {\n    key: \"_serializeRemoteFilter\",\n    value: function _serializeRemoteFilter(filter, dateSerializationFormat) {\n      if (!Array.isArray(filter)) {\n        return filter;\n      }\n\n      filter = extend([], filter);\n      var startDate = this._dataAccessors.expr.startDateExpr;\n      var endDate = this._dataAccessors.expr.endDateExpr;\n\n      if (isString(filter[0])) {\n        if (config().forceIsoDateParsing && filter.length > 1) {\n          if (filter[0] === startDate || filter[0] === endDate) {\n            filter[filter.length - 1] = dateSerialization.serializeDate(new Date(filter[filter.length - 1]), dateSerializationFormat);\n          }\n        }\n      }\n\n      for (var i = 0; i < filter.length; i++) {\n        filter[i] = this._serializeRemoteFilter(filter[i], dateSerializationFormat);\n      }\n\n      return filter;\n    }\n  }, {\n    key: \"_createAppointmentFilter\",\n    value: function _createAppointmentFilter(filterOptions, timeZoneCalculator) {\n      var combinedFilter = this._createCombinedFilter(filterOptions, timeZoneCalculator);\n\n      if (this._filterMaker.isRegistered()) {\n        this._filterMaker.make(\"user\", void 0);\n\n        var trimmedDates = this._trimDates(filterOptions.min, filterOptions.max);\n\n        this._filterMaker.make(\"date\", [trimmedDates.min, trimmedDates.max, true]);\n\n        var dateFilter = this.customizeDateFilter(this._filterMaker.combine(), timeZoneCalculator);\n        combinedFilter.push([dateFilter]);\n      }\n\n      return combinedFilter;\n    }\n  }, {\n    key: \"filterLoadedAppointments\",\n    value: function filterLoadedAppointments(filterOption, timeZoneCalculator) {\n      var combinedFilter = this._createAppointmentFilter(filterOption, timeZoneCalculator);\n\n      return query(this.getPreparedDataItems()).filter(combinedFilter).toArray();\n    }\n  }, {\n    key: \"filterAllDayAppointments\",\n    value: function filterAllDayAppointments(filterOption) {\n      var combinedFilter = this._createAllDayAppointmentFilter(filterOption);\n\n      return query(this.getPreparedDataItems()).filter(combinedFilter).toArray();\n    }\n  }, {\n    key: \"getPreparedDataItems\",\n    value: function getPreparedDataItems() {\n      var _this4 = this;\n\n      var _this$_dataSource;\n\n      var dataItems = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.items();\n\n      if (!dataItems) {\n        return [];\n      }\n\n      return map(dataItems, function (item) {\n        var startDate = new Date(_this4._dataAccessors.getter.startDate(item));\n        var endDate = new Date(_this4._dataAccessors.getter.endDate(item));\n\n        _this4.replaceWrongEndDate(item, startDate, endDate);\n\n        return item;\n      });\n    }\n  }, {\n    key: \"replaceWrongEndDate\",\n    value: function replaceWrongEndDate(appointment, startDate, endDate) {\n      if (this._isEndDateWrong(startDate, endDate)) {\n        var isAllDay = this._dataAccessors.getter.allDay(appointment);\n\n        var calculatedEndDate = this._calculateAppointmentEndDate(isAllDay, startDate);\n\n        this._dataAccessors.setter.endDate(appointment, calculatedEndDate);\n      }\n    }\n  }, {\n    key: \"filterLoadedVirtualAppointments\",\n    value: function filterLoadedVirtualAppointments(filterOptions, timeZoneCalculator, groupCount) {\n      var _this5 = this;\n\n      var combinedFilters = [];\n      var itemsToFilter = this.getPreparedDataItems();\n      var needPreFilter = groupCount > 0;\n\n      if (needPreFilter) {\n        itemsToFilter = itemsToFilter.filter(function (item) {\n          for (var i = 0; i < filterOptions.length; ++i) {\n            var resources = filterOptions[i].resources;\n\n            if (_this5._filterAppointmentByResources(item, resources)) {\n              return true;\n            }\n          }\n        });\n      }\n\n      filterOptions.forEach(function (filterOption) {\n        combinedFilters.length && combinedFilters.push(\"or\");\n\n        var filter = _this5._createAppointmentFilter(filterOption, timeZoneCalculator);\n\n        combinedFilters.push(filter);\n      });\n      return query(itemsToFilter).filter(combinedFilters).toArray();\n    }\n  }, {\n    key: \"_trimDates\",\n    value: function _trimDates(min, max) {\n      var minCopy = dateUtils.trimTime(new Date(min));\n      var maxCopy = dateUtils.trimTime(new Date(max));\n      maxCopy.setDate(maxCopy.getDate() + 1);\n      return {\n        min: minCopy,\n        max: maxCopy\n      };\n    }\n  }, {\n    key: \"hasAllDayAppointments\",\n    value: function hasAllDayAppointments(items, startDayHour, endDayHour) {\n      if (!items) {\n        return false;\n      }\n\n      var that = this;\n      var result = false;\n      each(items, function (index, item) {\n        if (that.appointmentTakesAllDay(item, startDayHour, endDayHour)) {\n          result = true;\n          return false;\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"appointmentTakesAllDay\",\n    value: function appointmentTakesAllDay(appointment, startDayHour, endDayHour) {\n      var dataAccessors = this._dataAccessors;\n      var startDate = dataAccessors.getter.startDate(appointment);\n      var endDate = dataAccessors.getter.endDate(appointment);\n      var allDay = dataAccessors.getter.allDay(appointment);\n      return allDay || this._appointmentHasAllDayDuration(startDate, endDate, startDayHour, endDayHour);\n    }\n  }, {\n    key: \"_appointmentHasAllDayDuration\",\n    value: function _appointmentHasAllDayDuration(startDate, endDate, startDayHour, endDayHour) {\n      startDate = new Date(startDate);\n      endDate = new Date(endDate);\n\n      var appointmentDurationInHours = this._getAppointmentDurationInHours(startDate, endDate);\n\n      return appointmentDurationInHours >= 24 || this._appointmentHasShortDayDuration(startDate, endDate, startDayHour, endDayHour);\n    }\n  }, {\n    key: \"_appointmentHasShortDayDuration\",\n    value: function _appointmentHasShortDayDuration(startDate, endDate, startDayHour, endDayHour) {\n      var appointmentDurationInHours = this._getAppointmentDurationInHours(startDate, endDate);\n\n      var shortDayDurationInHours = endDayHour - startDayHour;\n      return appointmentDurationInHours >= shortDayDurationInHours && startDate.getHours() === startDayHour && endDate.getHours() === endDayHour;\n    }\n  }, {\n    key: \"_getAppointmentDurationInHours\",\n    value: function _getAppointmentDurationInHours(startDate, endDate) {\n      return (endDate.getTime() - startDate.getTime()) / toMs(\"hour\");\n    }\n  }, {\n    key: \"appointmentTakesSeveralDays\",\n    value: function appointmentTakesSeveralDays(appointment) {\n      var dataAccessors = this._dataAccessors;\n      var startDate = new Date(dataAccessors.getter.startDate(appointment));\n      var endDate = new Date(dataAccessors.getter.endDate(appointment));\n      return !dateUtils.sameDate(startDate, endDate);\n    }\n  }, {\n    key: \"customizeDateFilter\",\n    value: function customizeDateFilter(dateFilter, timeZoneCalculator) {\n      var _this6 = this;\n\n      var currentFilter = extend(true, [], dateFilter);\n      return function (appointment) {\n        var startDate = new Date(_this6._dataAccessors.getter.startDate(appointment));\n        var endDate = new Date(_this6._dataAccessors.getter.endDate(appointment));\n        appointment = extend(true, {}, appointment);\n\n        var startDateTimeZone = _this6._dataAccessors.getter.startDateTimeZone(appointment);\n\n        var endDateTimeZone = _this6._dataAccessors.getter.endDateTimeZone(appointment);\n\n        var comparableStartDate = timeZoneCalculator.createDate(startDate, {\n          appointmentTimeZone: startDateTimeZone,\n          path: \"toGrid\"\n        });\n        var comparableEndDate = timeZoneCalculator.createDate(endDate, {\n          appointmentTimeZone: endDateTimeZone,\n          path: \"toGrid\"\n        });\n\n        _this6._dataAccessors.setter.startDate(appointment, comparableStartDate);\n\n        _this6._dataAccessors.setter.endDate(appointment, comparableEndDate);\n\n        return query([appointment]).filter(currentFilter).toArray().length > 0;\n      }.bind(this);\n    }\n  }, {\n    key: \"_calculateAppointmentEndDate\",\n    value: function _calculateAppointmentEndDate(isAllDay, startDate) {\n      if (isAllDay) {\n        return dateUtils.setToDayEnd(new Date(startDate));\n      }\n\n      return new Date(startDate.getTime() + this._baseAppointmentDuration * toMs(\"minute\"));\n    }\n  }, {\n    key: \"_isEndDateWrong\",\n    value: function _isEndDateWrong(startDate, endDate) {\n      return !endDate || isNaN(endDate.getTime()) || startDate.getTime() > endDate.getTime();\n    }\n  }, {\n    key: \"add\",\n    value: function add(rawAppointment) {\n      var _this7 = this;\n\n      return this._dataSource.store().insert(rawAppointment).done(function () {\n        return _this7._dataSource.load();\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, data) {\n      var _this8 = this;\n\n      var key = this._getStoreKey(target);\n\n      var d = new Deferred();\n\n      this._dataSource.store().update(key, data).done(function (result) {\n        return _this8._dataSource.load().done(function () {\n          return d.resolve(result);\n        }).fail(d.reject);\n      }).fail(d.reject);\n\n      return d.promise();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(rawAppointment) {\n      var _this9 = this;\n\n      var key = this._getStoreKey(rawAppointment);\n\n      return this._dataSource.store().remove(key).done(function () {\n        return _this9._dataSource.load();\n      });\n    }\n  }]);\n\n  return AppointmentModel;\n}();\n\nexport default AppointmentModel;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/appointment_model.js"],"names":["config","map","each","dateSerialization","getRecurrenceProcessor","dateUtils","equalByValue","isFunction","isDefined","isString","inArray","wrapToArray","extend","query","Deferred","toMs","dateToMilliseconds","DATE_FILTER_POSITION","USER_FILTER_POSITION","FilterMaker","dataAccessors","_filterRegistry","_dataAccessors","type","args","_make","apply","min","max","useAccessors","startDate","getter","expr","startDateExpr","endDate","endDateExpr","recurrenceRule","recurrenceRuleExpr","date","splice","userFilter","user","filter","push","compareDateWithStartDayHour","startDayHour","allDay","severalDays","startTime","dateTimeFromDecimal","result","getHours","hours","getMinutes","minutes","compareDateWithEndDayHour","options","endDayHour","viewStartDayHour","viewEndDayHour","checkIntersectViewport","hiddenInterval","apptDuration","getTime","delta","apptStartHour","apptStartMinutes","endTime","apptIntersectViewport","AppointmentModel","dataSource","baseAppointmentDuration","setDataAccessors","setDataSource","_updatedAppointmentKeys","_filterMaker","_baseAppointmentDuration","store","_dataSource","key","remoteFiltering","dateSerializationFormat","make","userFilterPosition","_excessFiltering","_combineRemoteFilter","dateFilter","dataSourceFilter","length","combine","target","keyOf","appointment","resources","checkAppointmentResourceValues","resourceName","resourceIndex","resourceGetter","resource","appointmentResourceValues","resourceData","items","item","id","j","i","name","firstDayOfWeek","recurrenceException","appointmentStartDate","appointmentEndDate","recurrenceProcessor","_appointmentPartInInterval","trimmedDates","_trimDates","Date","isValidRecurrenceRule","hasRecurrence","rule","exception","start","end","apptStartDayHour","apptEndDayHour","filterOptions","that","appointmentTakesAllDay","timeZoneCalculator","getRecurrenceException","appointmentTakesSeveralDays","isAllDay","appointmentIsLong","useRecurrence","_filterAppointmentByResources","startDateTimeZone","endDateTimeZone","comparableStartDate","createDate","appointmentTimeZone","path","comparableEndDate","_filterAppointmentByRRule","isVirtualScrolling","cleanModelState","_initStoreChangeHandlers","clearRegistry","on","newItem","_updatedAppointment","pushItems","keyName","forEach","pushItem","itemExists","value","data","load","isRegistered","_createFilter","_this$_dataSource$fil","_serializeRemoteFilter","combinedFilter","Array","isArray","forceIsoDateParsing","serializeDate","_createCombinedFilter","customizeDateFilter","filterOption","_createAppointmentFilter","getPreparedDataItems","toArray","_createAllDayAppointmentFilter","_this$_dataSource","dataItems","replaceWrongEndDate","_isEndDateWrong","calculatedEndDate","_calculateAppointmentEndDate","setter","groupCount","combinedFilters","itemsToFilter","needPreFilter","minCopy","trimTime","maxCopy","setDate","getDate","index","_appointmentHasAllDayDuration","appointmentDurationInHours","_getAppointmentDurationInHours","_appointmentHasShortDayDuration","shortDayDurationInHours","sameDate","currentFilter","bind","setToDayEnd","isNaN","rawAppointment","insert","done","_getStoreKey","d","update","resolve","fail","reject","promise","remove"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointment_model.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport config from \"../../core/config\";\r\nimport {\r\n    map,\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray,\r\n    wrapToArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport query from \"../../data/query\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar DATE_FILTER_POSITION = 0;\r\nvar USER_FILTER_POSITION = 1;\r\nclass FilterMaker {\r\n    constructor(dataAccessors) {\r\n        this._filterRegistry = null;\r\n        this._dataAccessors = dataAccessors\r\n    }\r\n    isRegistered() {\r\n        return !!this._filterRegistry\r\n    }\r\n    clearRegistry() {\r\n        delete this._filterRegistry\r\n    }\r\n    make(type, args) {\r\n        if (!this._filterRegistry) {\r\n            this._filterRegistry = {}\r\n        }\r\n        this._make(type).apply(this, args)\r\n    }\r\n    _make(type) {\r\n        switch (type) {\r\n            case \"date\":\r\n                return (min, max, useAccessors) => {\r\n                    var startDate = useAccessors ? this._dataAccessors.getter.startDate : this._dataAccessors.expr.startDateExpr;\r\n                    var endDate = useAccessors ? this._dataAccessors.getter.endDate : this._dataAccessors.expr.endDateExpr;\r\n                    var recurrenceRule = this._dataAccessors.expr.recurrenceRuleExpr;\r\n                    this._filterRegistry.date = [\r\n                        [\r\n                            [endDate, \">\", min],\r\n                            [startDate, \"<\", max]\r\n                        ], \"or\", [recurrenceRule, \"startswith\", \"freq\"], \"or\", [\r\n                            [endDate, min],\r\n                            [startDate, min]\r\n                        ]\r\n                    ];\r\n                    if (!recurrenceRule) {\r\n                        this._filterRegistry.date.splice(1, 2)\r\n                    }\r\n                };\r\n            case \"user\":\r\n                return userFilter => {\r\n                    this._filterRegistry.user = userFilter\r\n                }\r\n        }\r\n    }\r\n    combine() {\r\n        var filter = [];\r\n        this._filterRegistry.date && filter.push(this._filterRegistry.date);\r\n        this._filterRegistry.user && filter.push(this._filterRegistry.user);\r\n        return filter\r\n    }\r\n    dateFilter() {\r\n        return this._filterRegistry.date\r\n    }\r\n}\r\nvar compareDateWithStartDayHour = (startDate, endDate, startDayHour, allDay, severalDays) => {\r\n    var startTime = dateUtils.dateTimeFromDecimal(startDayHour);\r\n    var result = startDate.getHours() >= startTime.hours && startDate.getMinutes() >= startTime.minutes || endDate.getHours() === startTime.hours && endDate.getMinutes() > startTime.minutes || endDate.getHours() > startTime.hours || severalDays || allDay;\r\n    return result\r\n};\r\nvar compareDateWithEndDayHour = options => {\r\n    var {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        startDayHour: startDayHour,\r\n        endDayHour: endDayHour,\r\n        viewStartDayHour: viewStartDayHour,\r\n        viewEndDayHour: viewEndDayHour,\r\n        allDay: allDay,\r\n        severalDays: severalDays,\r\n        min: min,\r\n        max: max,\r\n        checkIntersectViewport: checkIntersectViewport\r\n    } = options;\r\n    var hiddenInterval = (24 - viewEndDayHour + viewStartDayHour) * toMs(\"hour\");\r\n    var apptDuration = endDate.getTime() - startDate.getTime();\r\n    var delta = (hiddenInterval - apptDuration) / toMs(\"hour\");\r\n    var apptStartHour = startDate.getHours();\r\n    var apptStartMinutes = startDate.getMinutes();\r\n    var result;\r\n    var endTime = dateUtils.dateTimeFromDecimal(endDayHour);\r\n    var startTime = dateUtils.dateTimeFromDecimal(startDayHour);\r\n    var apptIntersectViewport = startDate < max && endDate > min;\r\n    result = checkIntersectViewport && apptIntersectViewport || apptStartHour < endTime.hours || apptStartHour === endTime.hours && apptStartMinutes < endTime.minutes || allDay && startDate <= max || severalDays && apptIntersectViewport && (apptStartHour < endTime.hours || 60 * endDate.getHours() + endDate.getMinutes() > 60 * startTime.hours);\r\n    if (apptDuration < hiddenInterval) {\r\n        if (apptStartHour > endTime.hours && apptStartMinutes > endTime.minutes && delta <= apptStartHour - endDayHour) {\r\n            result = false\r\n        }\r\n    }\r\n    return result\r\n};\r\nclass AppointmentModel {\r\n    constructor(dataSource, dataAccessors, baseAppointmentDuration) {\r\n        this.setDataAccessors(dataAccessors);\r\n        this.setDataSource(dataSource);\r\n        this._updatedAppointmentKeys = [];\r\n        this._filterMaker = new FilterMaker(dataAccessors);\r\n        this._baseAppointmentDuration = baseAppointmentDuration\r\n    }\r\n    get keyName() {\r\n        var store = this._dataSource.store();\r\n        return store.key()\r\n    }\r\n    _createFilter(min, max, remoteFiltering, dateSerializationFormat) {\r\n        this._filterMaker.make(\"date\", [min, max]);\r\n        var userFilterPosition = this._excessFiltering() ? this._dataSource.filter()[USER_FILTER_POSITION] : this._dataSource.filter();\r\n        this._filterMaker.make(\"user\", [userFilterPosition]);\r\n        if (remoteFiltering) {\r\n            this._dataSource.filter(this._combineRemoteFilter(dateSerializationFormat))\r\n        }\r\n    }\r\n    _excessFiltering() {\r\n        var dateFilter = this._filterMaker.dateFilter();\r\n        var dataSourceFilter = this._dataSource.filter();\r\n        return dataSourceFilter && (equalByValue(dataSourceFilter, dateFilter) || dataSourceFilter.length && equalByValue(dataSourceFilter[DATE_FILTER_POSITION], dateFilter))\r\n    }\r\n    _combineFilter() {\r\n        return this._filterMaker.combine()\r\n    }\r\n    _getStoreKey(target) {\r\n        var store = this._dataSource.store();\r\n        return store.keyOf(target)\r\n    }\r\n    _filterAppointmentByResources(appointment, resources) {\r\n        var checkAppointmentResourceValues = (resourceName, resourceIndex) => {\r\n            var resourceGetter = this._dataAccessors.getter.resources[resourceName];\r\n            var resource;\r\n            if (isFunction(resourceGetter)) {\r\n                resource = resourceGetter(appointment)\r\n            }\r\n            var appointmentResourceValues = wrapToArray(resource);\r\n            var resourceData = map(resources[resourceIndex].items, item => item.id);\r\n            for (var j = 0; j < appointmentResourceValues.length; j++) {\r\n                if (inArray(appointmentResourceValues[j], resourceData) > -1) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        };\r\n        var result = false;\r\n        for (var i = 0; i < resources.length; i++) {\r\n            var resourceName = resources[i].name;\r\n            result = checkAppointmentResourceValues(resourceName, i);\r\n            if (!result) {\r\n                return false\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _filterAppointmentByRRule(appointment, min, max, startDayHour, endDayHour, firstDayOfWeek) {\r\n        var recurrenceRule = appointment.recurrenceRule;\r\n        var recurrenceException = appointment.recurrenceException;\r\n        var allDay = appointment.allDay;\r\n        var result = true;\r\n        var appointmentStartDate = appointment.startDate;\r\n        var appointmentEndDate = appointment.endDate;\r\n        var recurrenceProcessor = getRecurrenceProcessor();\r\n        if (allDay || this._appointmentPartInInterval(appointmentStartDate, appointmentEndDate, startDayHour, endDayHour)) {\r\n            var trimmedDates = this._trimDates(min, max);\r\n            min = trimmedDates.min;\r\n            max = new Date(trimmedDates.max.getTime() - toMs(\"minute\"))\r\n        }\r\n        if (recurrenceRule && !recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {\r\n            result = appointmentEndDate > min && appointmentStartDate <= max\r\n        }\r\n        if (result && recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {\r\n            result = recurrenceProcessor.hasRecurrence({\r\n                rule: recurrenceRule,\r\n                exception: recurrenceException,\r\n                start: appointmentStartDate,\r\n                end: appointmentEndDate,\r\n                min: min,\r\n                max: max,\r\n                firstDayOfWeek: firstDayOfWeek\r\n            })\r\n        }\r\n        return result\r\n    }\r\n    _appointmentPartInInterval(startDate, endDate, startDayHour, endDayHour) {\r\n        var apptStartDayHour = startDate.getHours();\r\n        var apptEndDayHour = endDate.getHours();\r\n        return apptStartDayHour <= startDayHour && apptEndDayHour <= endDayHour && apptEndDayHour >= startDayHour || apptEndDayHour >= endDayHour && apptStartDayHour <= endDayHour && apptStartDayHour >= startDayHour\r\n    }\r\n    _createAllDayAppointmentFilter(filterOptions) {\r\n        var {\r\n            viewStartDayHour: viewStartDayHour,\r\n            viewEndDayHour: viewEndDayHour\r\n        } = filterOptions;\r\n        var that = this;\r\n        return [\r\n            [appointment => that.appointmentTakesAllDay(appointment, viewStartDayHour, viewEndDayHour)]\r\n        ]\r\n    }\r\n    _createCombinedFilter(filterOptions, timeZoneCalculator) {\r\n        var dataAccessors = this._dataAccessors;\r\n        var min = new Date(filterOptions.min);\r\n        var max = new Date(filterOptions.max);\r\n        var getRecurrenceException = filterOptions.recurrenceException;\r\n        var {\r\n            startDayHour: startDayHour,\r\n            endDayHour: endDayHour,\r\n            viewStartDayHour: viewStartDayHour,\r\n            viewEndDayHour: viewEndDayHour,\r\n            resources: resources,\r\n            firstDayOfWeek: firstDayOfWeek,\r\n            checkIntersectViewport: checkIntersectViewport\r\n        } = filterOptions;\r\n        var that = this;\r\n        return [\r\n            [appointment => {\r\n                var result = true;\r\n                var startDate = new Date(dataAccessors.getter.startDate(appointment));\r\n                var endDate = new Date(dataAccessors.getter.endDate(appointment));\r\n                var appointmentTakesAllDay = that.appointmentTakesAllDay(appointment, viewStartDayHour, viewEndDayHour);\r\n                var appointmentTakesSeveralDays = that.appointmentTakesSeveralDays(appointment);\r\n                var isAllDay = dataAccessors.getter.allDay(appointment);\r\n                var appointmentIsLong = appointmentTakesSeveralDays || appointmentTakesAllDay;\r\n                var useRecurrence = isDefined(dataAccessors.getter.recurrenceRule);\r\n                var recurrenceRule;\r\n                if (useRecurrence) {\r\n                    recurrenceRule = dataAccessors.getter.recurrenceRule(appointment)\r\n                }\r\n                if (resources && resources.length) {\r\n                    result = that._filterAppointmentByResources(appointment, resources)\r\n                }\r\n                if (appointmentTakesAllDay && false === filterOptions.allDay) {\r\n                    result = false\r\n                }\r\n                var startDateTimeZone = dataAccessors.getter.startDateTimeZone(appointment);\r\n                var endDateTimeZone = dataAccessors.getter.endDateTimeZone(appointment);\r\n                var comparableStartDate = timeZoneCalculator.createDate(startDate, {\r\n                    appointmentTimeZone: startDateTimeZone,\r\n                    path: \"toGrid\"\r\n                });\r\n                var comparableEndDate = timeZoneCalculator.createDate(endDate, {\r\n                    appointmentTimeZone: endDateTimeZone,\r\n                    path: \"toGrid\"\r\n                });\r\n                if (result && useRecurrence) {\r\n                    var recurrenceException = getRecurrenceException ? getRecurrenceException(appointment) : dataAccessors.getter.recurrenceException(appointment);\r\n                    result = that._filterAppointmentByRRule({\r\n                        startDate: comparableStartDate,\r\n                        endDate: comparableEndDate,\r\n                        recurrenceRule: recurrenceRule,\r\n                        recurrenceException: recurrenceException,\r\n                        allDay: appointmentTakesAllDay\r\n                    }, min, max, startDayHour, endDayHour, firstDayOfWeek)\r\n                }\r\n                if (result && comparableEndDate < min && appointmentIsLong && !isAllDay && (!useRecurrence || useRecurrence && !recurrenceRule)) {\r\n                    result = false\r\n                }\r\n                if (result && isDefined(startDayHour) && (!useRecurrence || !filterOptions.isVirtualScrolling)) {\r\n                    result = compareDateWithStartDayHour(comparableStartDate, comparableEndDate, startDayHour, appointmentTakesAllDay, appointmentTakesSeveralDays)\r\n                }\r\n                if (result && isDefined(endDayHour)) {\r\n                    result = compareDateWithEndDayHour({\r\n                        startDate: comparableStartDate,\r\n                        endDate: comparableEndDate,\r\n                        startDayHour: startDayHour,\r\n                        endDayHour: endDayHour,\r\n                        viewStartDayHour: viewStartDayHour,\r\n                        viewEndDayHour: viewEndDayHour,\r\n                        allDay: appointmentTakesAllDay,\r\n                        severalDays: appointmentTakesSeveralDays,\r\n                        min: min,\r\n                        max: max,\r\n                        checkIntersectViewport: checkIntersectViewport\r\n                    })\r\n                }\r\n                if (result && useRecurrence && !recurrenceRule) {\r\n                    if (comparableEndDate < min && !isAllDay) {\r\n                        result = false\r\n                    }\r\n                }\r\n                return result\r\n            }]\r\n        ]\r\n    }\r\n    setDataSource(dataSource) {\r\n        this._dataSource = dataSource;\r\n        this.cleanModelState();\r\n        this._initStoreChangeHandlers();\r\n        this._filterMaker && this._filterMaker.clearRegistry()\r\n    }\r\n    _initStoreChangeHandlers() {\r\n        var dataSource = this._dataSource;\r\n        var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();\r\n        if (store) {\r\n            store.on(\"updating\", newItem => {\r\n                this._updatedAppointment = newItem\r\n            });\r\n            store.on(\"push\", pushItems => {\r\n                var items = dataSource.items();\r\n                var keyName = store.key();\r\n                pushItems.forEach(pushItem => {\r\n                    var itemExists = 0 !== items.filter(item => item[keyName] === pushItem.key).length;\r\n                    if (itemExists) {\r\n                        this._updatedAppointmentKeys.push({\r\n                            key: keyName,\r\n                            value: pushItem.key\r\n                        })\r\n                    } else {\r\n                        var {\r\n                            data: data\r\n                        } = pushItem;\r\n                        data && items.push(data)\r\n                    }\r\n                });\r\n                dataSource.load()\r\n            })\r\n        }\r\n    }\r\n    getUpdatedAppointment() {\r\n        return this._updatedAppointment\r\n    }\r\n    getUpdatedAppointmentKeys() {\r\n        return this._updatedAppointmentKeys\r\n    }\r\n    cleanModelState() {\r\n        this._updatedAppointment = null;\r\n        this._updatedAppointmentKeys = []\r\n    }\r\n    setDataAccessors(dataAccessors) {\r\n        this._dataAccessors = dataAccessors;\r\n        this._filterMaker = new FilterMaker(dataAccessors)\r\n    }\r\n    filterByDate(min, max, remoteFiltering, dateSerializationFormat) {\r\n        if (!this._dataSource) {\r\n            return\r\n        }\r\n        var trimmedDates = this._trimDates(min, max);\r\n        if (!this._filterMaker.isRegistered()) {\r\n            this._createFilter(trimmedDates.min, trimmedDates.max, remoteFiltering, dateSerializationFormat)\r\n        } else {\r\n            var _this$_dataSource$fil;\r\n            this._filterMaker.make(\"date\", [trimmedDates.min, trimmedDates.max]);\r\n            if ((null === (_this$_dataSource$fil = this._dataSource.filter()) || void 0 === _this$_dataSource$fil ? void 0 : _this$_dataSource$fil.length) > 1) {\r\n                var userFilter = this._serializeRemoteFilter([this._dataSource.filter()[1]], dateSerializationFormat);\r\n                this._filterMaker.make(\"user\", userFilter)\r\n            }\r\n            if (remoteFiltering) {\r\n                this._dataSource.filter(this._combineRemoteFilter(dateSerializationFormat))\r\n            }\r\n        }\r\n    }\r\n    _combineRemoteFilter(dateSerializationFormat) {\r\n        var combinedFilter = this._filterMaker.combine();\r\n        return this._serializeRemoteFilter(combinedFilter, dateSerializationFormat)\r\n    }\r\n    _serializeRemoteFilter(filter, dateSerializationFormat) {\r\n        if (!Array.isArray(filter)) {\r\n            return filter\r\n        }\r\n        filter = extend([], filter);\r\n        var startDate = this._dataAccessors.expr.startDateExpr;\r\n        var endDate = this._dataAccessors.expr.endDateExpr;\r\n        if (isString(filter[0])) {\r\n            if (config().forceIsoDateParsing && filter.length > 1) {\r\n                if (filter[0] === startDate || filter[0] === endDate) {\r\n                    filter[filter.length - 1] = dateSerialization.serializeDate(new Date(filter[filter.length - 1]), dateSerializationFormat)\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < filter.length; i++) {\r\n            filter[i] = this._serializeRemoteFilter(filter[i], dateSerializationFormat)\r\n        }\r\n        return filter\r\n    }\r\n    _createAppointmentFilter(filterOptions, timeZoneCalculator) {\r\n        var combinedFilter = this._createCombinedFilter(filterOptions, timeZoneCalculator);\r\n        if (this._filterMaker.isRegistered()) {\r\n            this._filterMaker.make(\"user\", void 0);\r\n            var trimmedDates = this._trimDates(filterOptions.min, filterOptions.max);\r\n            this._filterMaker.make(\"date\", [trimmedDates.min, trimmedDates.max, true]);\r\n            var dateFilter = this.customizeDateFilter(this._filterMaker.combine(), timeZoneCalculator);\r\n            combinedFilter.push([dateFilter])\r\n        }\r\n        return combinedFilter\r\n    }\r\n    filterLoadedAppointments(filterOption, timeZoneCalculator) {\r\n        var combinedFilter = this._createAppointmentFilter(filterOption, timeZoneCalculator);\r\n        return query(this.getPreparedDataItems()).filter(combinedFilter).toArray()\r\n    }\r\n    filterAllDayAppointments(filterOption) {\r\n        var combinedFilter = this._createAllDayAppointmentFilter(filterOption);\r\n        return query(this.getPreparedDataItems()).filter(combinedFilter).toArray()\r\n    }\r\n    getPreparedDataItems() {\r\n        var _this$_dataSource;\r\n        var dataItems = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.items();\r\n        if (!dataItems) {\r\n            return []\r\n        }\r\n        return map(dataItems, item => {\r\n            var startDate = new Date(this._dataAccessors.getter.startDate(item));\r\n            var endDate = new Date(this._dataAccessors.getter.endDate(item));\r\n            this.replaceWrongEndDate(item, startDate, endDate);\r\n            return item\r\n        })\r\n    }\r\n    replaceWrongEndDate(appointment, startDate, endDate) {\r\n        if (this._isEndDateWrong(startDate, endDate)) {\r\n            var isAllDay = this._dataAccessors.getter.allDay(appointment);\r\n            var calculatedEndDate = this._calculateAppointmentEndDate(isAllDay, startDate);\r\n            this._dataAccessors.setter.endDate(appointment, calculatedEndDate)\r\n        }\r\n    }\r\n    filterLoadedVirtualAppointments(filterOptions, timeZoneCalculator, groupCount) {\r\n        var combinedFilters = [];\r\n        var itemsToFilter = this.getPreparedDataItems();\r\n        var needPreFilter = groupCount > 0;\r\n        if (needPreFilter) {\r\n            itemsToFilter = itemsToFilter.filter(item => {\r\n                for (var i = 0; i < filterOptions.length; ++i) {\r\n                    var {\r\n                        resources: resources\r\n                    } = filterOptions[i];\r\n                    if (this._filterAppointmentByResources(item, resources)) {\r\n                        return true\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        filterOptions.forEach(filterOption => {\r\n            combinedFilters.length && combinedFilters.push(\"or\");\r\n            var filter = this._createAppointmentFilter(filterOption, timeZoneCalculator);\r\n            combinedFilters.push(filter)\r\n        });\r\n        return query(itemsToFilter).filter(combinedFilters).toArray()\r\n    }\r\n    _trimDates(min, max) {\r\n        var minCopy = dateUtils.trimTime(new Date(min));\r\n        var maxCopy = dateUtils.trimTime(new Date(max));\r\n        maxCopy.setDate(maxCopy.getDate() + 1);\r\n        return {\r\n            min: minCopy,\r\n            max: maxCopy\r\n        }\r\n    }\r\n    hasAllDayAppointments(items, startDayHour, endDayHour) {\r\n        if (!items) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var result = false;\r\n        each(items, (index, item) => {\r\n            if (that.appointmentTakesAllDay(item, startDayHour, endDayHour)) {\r\n                result = true;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    }\r\n    appointmentTakesAllDay(appointment, startDayHour, endDayHour) {\r\n        var dataAccessors = this._dataAccessors;\r\n        var startDate = dataAccessors.getter.startDate(appointment);\r\n        var endDate = dataAccessors.getter.endDate(appointment);\r\n        var allDay = dataAccessors.getter.allDay(appointment);\r\n        return allDay || this._appointmentHasAllDayDuration(startDate, endDate, startDayHour, endDayHour)\r\n    }\r\n    _appointmentHasAllDayDuration(startDate, endDate, startDayHour, endDayHour) {\r\n        startDate = new Date(startDate);\r\n        endDate = new Date(endDate);\r\n        var appointmentDurationInHours = this._getAppointmentDurationInHours(startDate, endDate);\r\n        return appointmentDurationInHours >= 24 || this._appointmentHasShortDayDuration(startDate, endDate, startDayHour, endDayHour)\r\n    }\r\n    _appointmentHasShortDayDuration(startDate, endDate, startDayHour, endDayHour) {\r\n        var appointmentDurationInHours = this._getAppointmentDurationInHours(startDate, endDate);\r\n        var shortDayDurationInHours = endDayHour - startDayHour;\r\n        return appointmentDurationInHours >= shortDayDurationInHours && startDate.getHours() === startDayHour && endDate.getHours() === endDayHour\r\n    }\r\n    _getAppointmentDurationInHours(startDate, endDate) {\r\n        return (endDate.getTime() - startDate.getTime()) / toMs(\"hour\")\r\n    }\r\n    appointmentTakesSeveralDays(appointment) {\r\n        var dataAccessors = this._dataAccessors;\r\n        var startDate = new Date(dataAccessors.getter.startDate(appointment));\r\n        var endDate = new Date(dataAccessors.getter.endDate(appointment));\r\n        return !dateUtils.sameDate(startDate, endDate)\r\n    }\r\n    customizeDateFilter(dateFilter, timeZoneCalculator) {\r\n        var currentFilter = extend(true, [], dateFilter);\r\n        return (appointment => {\r\n            var startDate = new Date(this._dataAccessors.getter.startDate(appointment));\r\n            var endDate = new Date(this._dataAccessors.getter.endDate(appointment));\r\n            appointment = extend(true, {}, appointment);\r\n            var startDateTimeZone = this._dataAccessors.getter.startDateTimeZone(appointment);\r\n            var endDateTimeZone = this._dataAccessors.getter.endDateTimeZone(appointment);\r\n            var comparableStartDate = timeZoneCalculator.createDate(startDate, {\r\n                appointmentTimeZone: startDateTimeZone,\r\n                path: \"toGrid\"\r\n            });\r\n            var comparableEndDate = timeZoneCalculator.createDate(endDate, {\r\n                appointmentTimeZone: endDateTimeZone,\r\n                path: \"toGrid\"\r\n            });\r\n            this._dataAccessors.setter.startDate(appointment, comparableStartDate);\r\n            this._dataAccessors.setter.endDate(appointment, comparableEndDate);\r\n            return query([appointment]).filter(currentFilter).toArray().length > 0\r\n        }).bind(this)\r\n    }\r\n    _calculateAppointmentEndDate(isAllDay, startDate) {\r\n        if (isAllDay) {\r\n            return dateUtils.setToDayEnd(new Date(startDate))\r\n        }\r\n        return new Date(startDate.getTime() + this._baseAppointmentDuration * toMs(\"minute\"))\r\n    }\r\n    _isEndDateWrong(startDate, endDate) {\r\n        return !endDate || isNaN(endDate.getTime()) || startDate.getTime() > endDate.getTime()\r\n    }\r\n    add(rawAppointment) {\r\n        return this._dataSource.store().insert(rawAppointment).done(() => this._dataSource.load())\r\n    }\r\n    update(target, data) {\r\n        var key = this._getStoreKey(target);\r\n        var d = new Deferred;\r\n        this._dataSource.store().update(key, data).done(result => this._dataSource.load().done(() => d.resolve(result)).fail(d.reject)).fail(d.reject);\r\n        return d.promise()\r\n    }\r\n    remove(rawAppointment) {\r\n        var key = this._getStoreKey(rawAppointment);\r\n        return this._dataSource.store().remove(key).done(() => this._dataSource.load())\r\n    }\r\n}\r\nexport default AppointmentModel;\r\n"]},"metadata":{},"sourceType":"module"}