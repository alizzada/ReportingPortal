{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nvar colorizers = {};\nvar defaultColorizerName;\n\nfunction wrapLeafColorGetter(getter) {\n  return function (node) {\n    return !node.isNode() ? getter(node) : void 0;\n  };\n}\n\nfunction wrapGroupColorGetter(getter) {\n  return function (node) {\n    var parent = !node.isNode() && node.parent;\n    return parent ? parent._groupColor = parent._groupColor || getter(parent) : void 0;\n  };\n}\n\nexport function getColorizer(options, themeManager, root) {\n  var type = _normalizeEnum(options.type || defaultColorizerName);\n\n  var colorizer = colorizers[type] && colorizers[type](options, themeManager, root);\n  return colorizer ? (options.colorizeGroups ? wrapGroupColorGetter : wrapLeafColorGetter)(colorizer) : _noop;\n}\nexport function addColorizer(name, colorizer) {\n  colorizers[name] = colorizer;\n}\nexport function setDefaultColorizer(name) {\n  defaultColorizerName = name;\n}\n\nfunction getValueAsColorCode(node) {\n  return node.value;\n}\n\nfunction createColorCode(colorCodeField) {\n  return function (node) {\n    return Number(node.data[colorCodeField]);\n  };\n}\n\nexport function createColorCodeGetter(options) {\n  return options.colorCodeField ? createColorCode(options.colorCodeField) : getValueAsColorCode;\n}","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/tree_map/colorizing.js"],"names":["normalizeEnum","_normalizeEnum","noop","_noop","colorizers","defaultColorizerName","wrapLeafColorGetter","getter","node","isNode","wrapGroupColorGetter","parent","_groupColor","getColorizer","options","themeManager","root","type","colorizer","colorizeGroups","addColorizer","name","setDefaultColorizer","getValueAsColorCode","value","createColorCode","colorCodeField","Number","data","createColorCodeGetter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aAAa,IAAIC,cADrB,QAEO,eAFP;AAGA,SACIC,IAAI,IAAIC,KADZ,QAEO,yBAFP;AAGA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,oBAAJ;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACjC,SAAO,UAASC,IAAT,EAAe;AAClB,WAAO,CAACA,IAAI,CAACC,MAAL,EAAD,GAAiBF,MAAM,CAACC,IAAD,CAAvB,GAAgC,KAAK,CAA5C;AACH,GAFD;AAGH;;AAED,SAASE,oBAAT,CAA8BH,MAA9B,EAAsC;AAClC,SAAO,UAASC,IAAT,EAAe;AAClB,QAAIG,MAAM,GAAG,CAACH,IAAI,CAACC,MAAL,EAAD,IAAkBD,IAAI,CAACG,MAApC;AACA,WAAOA,MAAM,GAAGA,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,IAAsBL,MAAM,CAACI,MAAD,CAApD,GAA+D,KAAK,CAAjF;AACH,GAHD;AAIH;;AACD,OAAO,SAASE,YAAT,CAAsBC,OAAtB,EAA+BC,YAA/B,EAA6CC,IAA7C,EAAmD;AACtD,MAAIC,IAAI,GAAGhB,cAAc,CAACa,OAAO,CAACG,IAAR,IAAgBZ,oBAAjB,CAAzB;;AACA,MAAIa,SAAS,GAAGd,UAAU,CAACa,IAAD,CAAV,IAAoBb,UAAU,CAACa,IAAD,CAAV,CAAiBH,OAAjB,EAA0BC,YAA1B,EAAwCC,IAAxC,CAApC;AACA,SAAOE,SAAS,GAAG,CAACJ,OAAO,CAACK,cAAR,GAAyBT,oBAAzB,GAAgDJ,mBAAjD,EAAsEY,SAAtE,CAAH,GAAsFf,KAAtG;AACH;AACD,OAAO,SAASiB,YAAT,CAAsBC,IAAtB,EAA4BH,SAA5B,EAAuC;AAC1Cd,EAAAA,UAAU,CAACiB,IAAD,CAAV,GAAmBH,SAAnB;AACH;AACD,OAAO,SAASI,mBAAT,CAA6BD,IAA7B,EAAmC;AACtChB,EAAAA,oBAAoB,GAAGgB,IAAvB;AACH;;AAED,SAASE,mBAAT,CAA6Bf,IAA7B,EAAmC;AAC/B,SAAOA,IAAI,CAACgB,KAAZ;AACH;;AAED,SAASC,eAAT,CAAyBC,cAAzB,EAAyC;AACrC,SAAO,UAASlB,IAAT,EAAe;AAClB,WAAOmB,MAAM,CAACnB,IAAI,CAACoB,IAAL,CAAUF,cAAV,CAAD,CAAb;AACH,GAFD;AAGH;;AACD,OAAO,SAASG,qBAAT,CAA+Bf,OAA/B,EAAwC;AAC3C,SAAOA,OAAO,CAACY,cAAR,GAAyBD,eAAe,CAACX,OAAO,CAACY,cAAT,CAAxC,GAAmEH,mBAA1E;AACH","sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nvar colorizers = {};\r\nvar defaultColorizerName;\r\n\r\nfunction wrapLeafColorGetter(getter) {\r\n    return function(node) {\r\n        return !node.isNode() ? getter(node) : void 0\r\n    }\r\n}\r\n\r\nfunction wrapGroupColorGetter(getter) {\r\n    return function(node) {\r\n        var parent = !node.isNode() && node.parent;\r\n        return parent ? parent._groupColor = parent._groupColor || getter(parent) : void 0\r\n    }\r\n}\r\nexport function getColorizer(options, themeManager, root) {\r\n    var type = _normalizeEnum(options.type || defaultColorizerName);\r\n    var colorizer = colorizers[type] && colorizers[type](options, themeManager, root);\r\n    return colorizer ? (options.colorizeGroups ? wrapGroupColorGetter : wrapLeafColorGetter)(colorizer) : _noop\r\n}\r\nexport function addColorizer(name, colorizer) {\r\n    colorizers[name] = colorizer\r\n}\r\nexport function setDefaultColorizer(name) {\r\n    defaultColorizerName = name\r\n}\r\n\r\nfunction getValueAsColorCode(node) {\r\n    return node.value\r\n}\r\n\r\nfunction createColorCode(colorCodeField) {\r\n    return function(node) {\r\n        return Number(node.data[colorCodeField])\r\n    }\r\n}\r\nexport function createColorCodeGetter(options) {\r\n    return options.colorCodeField ? createColorCode(options.colorCodeField) : getValueAsColorCode\r\n}\r\n"]},"metadata":{},"sourceType":"module"}