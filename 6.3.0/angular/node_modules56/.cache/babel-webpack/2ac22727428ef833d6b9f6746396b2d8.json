{"ast":null,"code":"import _defineProperty from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getElementsFromPoint, getBoundingRect } from \"../core/utils/position\";\nvar window = getWindow();\nimport eventsEngine from \"../events/core/events_engine\";\nimport { quadToObject } from \"../core/utils/string\";\nimport registerComponent from \"../core/component_registrator\";\nimport { locate, move } from \"../animation/translator\";\nimport Animator from \"./scroll_view/animator\";\nimport { dasherize } from \"../core/utils/inflector\";\nimport { extend } from \"../core/utils/extend\";\nimport DOMComponent from \"../core/dom_component\";\nimport { getPublicElement } from \"../core/element\";\nimport { addNamespace, needSkipEvent } from \"../events/utils/index\";\nimport pointerEvents from \"../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd, enter as dragEventEnter, leave as dragEventLeave } from \"../events/drag\";\nimport positionUtils from \"../animation/position\";\nimport { isFunction, isObject } from \"../core/utils/type\";\nimport { noop, splitPair } from \"../core/utils/common\";\nimport { value as viewPort } from \"../core/utils/view_port\";\nimport { EmptyTemplate } from \"../core/templates/empty_template\";\nimport { when, fromPromise, Deferred } from \"../core/utils/deferred\";\nvar DRAGGABLE = \"dxDraggable\";\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\nvar CLONE_CLASS = \"clone\";\nvar targetDraggable;\nvar sourceDraggable;\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\n\nvar getMousePosition = function getMousePosition(event) {\n  return {\n    x: event.pageX - $(window).scrollLeft(),\n    y: event.pageY - $(window).scrollTop()\n  };\n};\n\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\n\nvar ScrollHelper = /*#__PURE__*/function () {\n  function ScrollHelper(orientation, component) {\n    _classCallCheck(this, ScrollHelper);\n\n    this._preventScroll = true;\n    this._component = component;\n\n    if (\"vertical\" === orientation) {\n      this._scrollValue = \"scrollTop\";\n      this._overFlowAttr = \"overflowY\";\n      this._sizeAttr = \"height\";\n      this._scrollSizeProp = \"scrollHeight\";\n      this._clientSizeProp = \"clientHeight\";\n      this._limitProps = {\n        start: \"top\",\n        end: \"bottom\"\n      };\n    } else {\n      this._scrollValue = \"scrollLeft\";\n      this._overFlowAttr = \"overflowX\";\n      this._sizeAttr = \"width\";\n      this._scrollSizeProp = \"scrollWidth\";\n      this._clientSizeProp = \"clientWidth\";\n      this._limitProps = {\n        start: \"left\",\n        end: \"right\"\n      };\n    }\n  }\n\n  _createClass(ScrollHelper, [{\n    key: \"updateScrollable\",\n    value: function updateScrollable(elements, mousePosition) {\n      var that = this;\n\n      if (!elements.some(function (element) {\n        return that._trySetScrollable(element, mousePosition);\n      })) {\n        that._$scrollableAtPointer = null;\n        that._scrollSpeed = 0;\n      }\n    }\n  }, {\n    key: \"isScrolling\",\n    value: function isScrolling() {\n      return !!this._scrollSpeed;\n    }\n  }, {\n    key: \"isScrollable\",\n    value: function isScrollable($element) {\n      return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > $element[this._sizeAttr]();\n    }\n  }, {\n    key: \"_trySetScrollable\",\n    value: function _trySetScrollable(element, mousePosition) {\n      var $element = $(element);\n      var distanceToBorders;\n\n      var sensitivity = this._component.option(\"scrollSensitivity\");\n\n      var isScrollable = this.isScrollable($element);\n\n      if (isScrollable) {\n        distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\n\n        if (sensitivity > distanceToBorders[this._limitProps.start]) {\n          if (!this._preventScroll) {\n            this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\n            this._$scrollableAtPointer = $element;\n          }\n        } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\n          if (!this._preventScroll) {\n            this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\n            this._$scrollableAtPointer = $element;\n          }\n        } else {\n          isScrollable = false;\n          this._preventScroll = false;\n        }\n      }\n\n      return isScrollable;\n    }\n  }, {\n    key: \"_calculateDistanceToBorders\",\n    value: function _calculateDistanceToBorders($area, mousePosition) {\n      var area = $area.get(0);\n      var areaBoundingRect;\n\n      if (area) {\n        areaBoundingRect = getBoundingRect(area);\n        return {\n          left: mousePosition.x - areaBoundingRect.left,\n          top: mousePosition.y - areaBoundingRect.top,\n          right: areaBoundingRect.right - mousePosition.x,\n          bottom: areaBoundingRect.bottom - mousePosition.y\n        };\n      } else {\n        return {};\n      }\n    }\n  }, {\n    key: \"_calculateScrollSpeed\",\n    value: function _calculateScrollSpeed(distance) {\n      var component = this._component;\n      var sensitivity = component.option(\"scrollSensitivity\");\n      var maxSpeed = component.option(\"scrollSpeed\");\n      return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);\n    }\n  }, {\n    key: \"scrollByStep\",\n    value: function scrollByStep() {\n      if (this._$scrollableAtPointer && this._scrollSpeed) {\n        if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\n          var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\n\n          var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\n\n          if (scrollableInstance) {\n            var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\n\n            scrollableInstance.scrollTo(_defineProperty({}, this._limitProps.start, nextScrollPosition));\n          }\n        } else {\n          var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\n\n          this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition);\n        }\n\n        var dragMoveArgs = this._component._dragMoveArgs;\n\n        if (dragMoveArgs) {\n          this._component._dragMoveHandler(dragMoveArgs);\n        }\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._$scrollableAtPointer = null;\n      this._scrollSpeed = 0;\n      this._preventScroll = true;\n    }\n  }, {\n    key: \"isOutsideScrollable\",\n    value: function isOutsideScrollable($scrollable, event) {\n      if (!$scrollable) {\n        return false;\n      }\n\n      var scrollableSize = getBoundingRect($scrollable.get(0));\n      var start = scrollableSize[this._limitProps.start];\n      var size = scrollableSize[this._sizeAttr];\n      var mousePosition = getMousePosition(event);\n      var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\n      return location < start || location > start + size;\n    }\n  }]);\n\n  return ScrollHelper;\n}();\n\nvar ScrollAnimator = Animator.inherit({\n  ctor: function ctor(strategy) {\n    this.callBase();\n    this._strategy = strategy;\n  },\n  _step: function _step() {\n    var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\n    var verticalScrollHelper = this._strategy._verticalScrollHelper;\n    horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\n    verticalScrollHelper && verticalScrollHelper.scrollByStep();\n  }\n});\nvar Draggable = DOMComponent.inherit({\n  reset: noop,\n  dragMove: noop,\n  dragEnter: noop,\n  dragLeave: noop,\n  dragEnd: function dragEnd(sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable._fireRemoveEvent(sourceEvent);\n\n    return new Deferred().resolve();\n  },\n  _fireRemoveEvent: noop,\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      onDragStart: null,\n      onDragMove: null,\n      onDragEnd: null,\n      onDragEnter: null,\n      onDragLeave: null,\n      onDrop: null,\n      immediate: true,\n      dragDirection: \"both\",\n      boundary: void 0,\n      boundOffset: 0,\n      allowMoveByClick: false,\n      itemData: null,\n      container: void 0,\n      dragTemplate: void 0,\n      contentTemplate: \"content\",\n      handle: \"\",\n      filter: \"\",\n      clone: false,\n      autoScroll: true,\n      scrollSpeed: 30,\n      scrollSensitivity: 60,\n      group: void 0,\n      data: void 0\n    });\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase.apply(this, arguments);\n    extend(this._optionsByReference, {\n      component: true,\n      group: true,\n      itemData: true,\n      data: true\n    });\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._attachEventHandlers();\n\n    this._scrollAnimator = new ScrollAnimator(this);\n    this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\n    this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\n  },\n  _normalizeCursorOffset: function _normalizeCursorOffset(offset) {\n    if (isObject(offset)) {\n      offset = {\n        h: offset.x,\n        v: offset.y\n      };\n    }\n\n    offset = splitPair(offset).map(function (value) {\n      return parseFloat(value);\n    });\n    return {\n      left: offset[0],\n      top: 1 === offset.length ? offset[0] : offset[1]\n    };\n  },\n  _getNormalizedCursorOffset: function _getNormalizedCursorOffset(offset, options) {\n    if (isFunction(offset)) {\n      offset = offset.call(this, options);\n    }\n\n    return this._normalizeCursorOffset(offset);\n  },\n  _calculateElementOffset: function _calculateElementOffset(options) {\n    var elementOffset;\n    var dragElementOffset;\n    var event = options.event;\n    var $element = $(options.itemElement);\n    var $dragElement = $(options.dragElement);\n\n    var isCloned = this._dragElementIsCloned();\n\n    var cursorOffset = this.option(\"cursorOffset\");\n    var normalizedCursorOffset = {\n      left: 0,\n      top: 0\n    };\n    var currentLocate = this._initialLocate = locate($dragElement);\n\n    if (isCloned || options.initialOffset || cursorOffset) {\n      elementOffset = options.initialOffset || $element.offset();\n\n      if (cursorOffset) {\n        normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\n\n        if (isFinite(normalizedCursorOffset.left)) {\n          elementOffset.left = event.pageX;\n        }\n\n        if (isFinite(normalizedCursorOffset.top)) {\n          elementOffset.top = event.pageY;\n        }\n      }\n\n      dragElementOffset = $dragElement.offset();\n      elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\n      elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;\n    }\n\n    return elementOffset;\n  },\n  _initPosition: function _initPosition(options) {\n    var $dragElement = $(options.dragElement);\n\n    var elementOffset = this._calculateElementOffset(options);\n\n    if (elementOffset) {\n      this._move(elementOffset, $dragElement);\n    }\n\n    this._startPosition = locate($dragElement);\n  },\n  _startAnimator: function _startAnimator() {\n    if (!this._scrollAnimator.inProgress()) {\n      this._scrollAnimator.start();\n    }\n  },\n  _stopAnimator: function _stopAnimator() {\n    this._scrollAnimator.stop();\n  },\n  _addWidgetPrefix: function _addWidgetPrefix(className) {\n    var componentName = this.NAME;\n    return dasherize(componentName) + (className ? \"-\" + className : \"\");\n  },\n  _getItemsSelector: function _getItemsSelector() {\n    return this.option(\"filter\") || \"\";\n  },\n  _$content: function _$content() {\n    var $element = this.$element();\n    var $wrapper = $element.children(\".dx-template-wrapper\");\n    return $wrapper.length ? $wrapper : $element;\n  },\n  _attachEventHandlers: function _attachEventHandlers() {\n    var _this = this;\n\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var $element = this._$content();\n\n    var itemsSelector = this._getItemsSelector();\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    var data = {\n      direction: this.option(\"dragDirection\"),\n      immediate: this.option(\"immediate\"),\n      checkDropTarget: function checkDropTarget($target, event) {\n        var targetGroup = _this.option(\"group\");\n\n        var sourceGroup = _this._getSourceDraggable().option(\"group\");\n\n        var $scrollable = _this._getScrollable($target);\n\n        if (_this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || _this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\n          return false;\n        }\n\n        return sourceGroup && sourceGroup === targetGroup;\n      }\n    };\n\n    if (allowMoveByClick) {\n      $element = this._getArea();\n      eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));\n    }\n\n    if (\">\" === itemsSelector[0]) {\n      itemsSelector = itemsSelector.slice(1);\n    }\n\n    eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\n    eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\n    eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\n  },\n  _dragElementIsCloned: function _dragElementIsCloned() {\n    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));\n  },\n  _getDragTemplateArgs: function _getDragTemplateArgs($element, $container) {\n    return {\n      container: getPublicElement($container),\n      model: {\n        itemData: this.option(\"itemData\"),\n        itemElement: getPublicElement($element)\n      }\n    };\n  },\n  _createDragElement: function _createDragElement($element) {\n    var result = $element;\n    var clone = this.option(\"clone\");\n\n    var $container = this._getContainer();\n\n    var template = this.option(\"dragTemplate\");\n\n    if (template) {\n      template = this._getTemplate(template);\n      result = $(\"<div>\").appendTo($container);\n      template.render(this._getDragTemplateArgs($element, result));\n    } else if (clone) {\n      result = $(\"<div>\").appendTo($container);\n      $element.clone().css({\n        width: $element.css(\"width\"),\n        height: $element.css(\"height\")\n      }).appendTo(result);\n    }\n\n    return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"));\n  },\n  _resetDragElement: function _resetDragElement() {\n    if (this._dragElementIsCloned()) {\n      this._$dragElement.remove();\n    } else {\n      this._toggleDraggingClass(false);\n    }\n\n    this._$dragElement = null;\n  },\n  _resetSourceElement: function _resetSourceElement() {\n    this._toggleDragSourceClass(false);\n\n    this._$sourceElement = null;\n  },\n  _detachEventHandlers: function _detachEventHandlers() {\n    eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\n    eventsEngine.off(this._getArea(), \".\" + DRAGGABLE);\n  },\n  _move: function _move(position, $element) {\n    move($element || this._$dragElement, position);\n  },\n  _getDraggableElement: function _getDraggableElement(e) {\n    var $sourceElement = this._getSourceElement();\n\n    if ($sourceElement) {\n      return $sourceElement;\n    }\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n\n    if (allowMoveByClick) {\n      return this.$element();\n    }\n\n    var $target = $(e && e.target);\n\n    var itemsSelector = this._getItemsSelector();\n\n    if (\">\" === itemsSelector[0]) {\n      var $items = this._$content().find(itemsSelector);\n\n      if (!$items.is($target)) {\n        $target = $target.closest($items);\n      }\n    }\n\n    return $target;\n  },\n  _getSourceElement: function _getSourceElement() {\n    var draggable = this._getSourceDraggable();\n\n    return draggable._$sourceElement;\n  },\n  _pointerDownHandler: function _pointerDownHandler(e) {\n    if (needSkipEvent(e)) {\n      return;\n    }\n\n    var position = {};\n    var $element = this.$element();\n    var dragDirection = this.option(\"dragDirection\");\n\n    if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\n      position.left = e.pageX - $element.offset().left + locate($element).left - $element.width() / 2;\n    }\n\n    if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\n      position.top = e.pageY - $element.offset().top + locate($element).top - $element.height() / 2;\n    }\n\n    this._move(position, $element);\n\n    this._getAction(\"onDragMove\")(this._getEventArgs(e));\n  },\n  _isValidElement: function _isValidElement(event, $element) {\n    var handle = this.option(\"handle\");\n    var $target = $(event.originalEvent && event.originalEvent.target);\n\n    if (handle && !$target.closest(handle).length) {\n      return false;\n    }\n\n    if (!$element.length) {\n      return false;\n    }\n\n    return !$element.is(\".dx-state-disabled, .dx-state-disabled *\");\n  },\n  _dragStartHandler: function _dragStartHandler(e) {\n    var $element = this._getDraggableElement(e);\n\n    if (this._$sourceElement) {\n      return;\n    }\n\n    if (!this._isValidElement(e, $element)) {\n      e.cancel = true;\n      return;\n    }\n\n    var dragStartArgs = this._getDragStartArgs(e, $element);\n\n    this._getAction(\"onDragStart\")(dragStartArgs);\n\n    if (dragStartArgs.cancel) {\n      e.cancel = true;\n      return;\n    }\n\n    this.option(\"itemData\", dragStartArgs.itemData);\n\n    this._setSourceDraggable();\n\n    this._$sourceElement = $element;\n    var initialOffset = $element.offset();\n\n    var $dragElement = this._$dragElement = this._createDragElement($element);\n\n    this._toggleDraggingClass(true);\n\n    this._toggleDragSourceClass(true);\n\n    this._setGestureCoverCursor($dragElement.children());\n\n    var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\n\n    this._initPosition(extend({}, dragStartArgs, {\n      dragElement: $dragElement.get(0),\n      initialOffset: isFixedPosition && initialOffset\n    }));\n\n    var $area = this._getArea();\n\n    var areaOffset = this._getAreaOffset($area);\n\n    var boundOffset = this._getBoundOffset();\n\n    var areaWidth = $area.outerWidth();\n    var areaHeight = $area.outerHeight();\n    var elementWidth = $dragElement.width();\n    var elementHeight = $dragElement.height();\n    var startOffset_left = $dragElement.offset().left - areaOffset.left,\n        startOffset_top = $dragElement.offset().top - areaOffset.top;\n\n    if ($area.length) {\n      e.maxLeftOffset = startOffset_left - boundOffset.left;\n      e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\n      e.maxTopOffset = startOffset_top - boundOffset.top;\n      e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom;\n    }\n\n    if (this.option(\"autoScroll\")) {\n      this._startAnimator();\n    }\n  },\n  _getAreaOffset: function _getAreaOffset($area) {\n    var offset = $area && positionUtils.offset($area);\n    return offset ? offset : {\n      left: 0,\n      top: 0\n    };\n  },\n  _toggleDraggingClass: function _toggleDraggingClass(value) {\n    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value);\n  },\n  _toggleDragSourceClass: function _toggleDragSourceClass(value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value);\n  },\n  _setGestureCoverCursor: function _setGestureCoverCursor($element) {\n    $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"));\n  },\n  _getBoundOffset: function _getBoundOffset() {\n    var boundOffset = this.option(\"boundOffset\");\n\n    if (isFunction(boundOffset)) {\n      boundOffset = boundOffset.call(this);\n    }\n\n    return quadToObject(boundOffset);\n  },\n  _getArea: function _getArea() {\n    var area = this.option(\"boundary\");\n\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n\n    return $(area);\n  },\n  _getContainer: function _getContainer() {\n    var container = this.option(\"container\");\n\n    if (void 0 === container) {\n      container = viewPort();\n    }\n\n    return $(container);\n  },\n  _dragMoveHandler: function _dragMoveHandler(e, scrollBy) {\n    this._dragMoveArgs = e;\n\n    if (!this._$dragElement) {\n      e.cancel = true;\n      return;\n    }\n\n    var offset = e.offset;\n    var startPosition = this._startPosition;\n\n    this._move({\n      left: startPosition.left + offset.x,\n      top: startPosition.top + offset.y\n    });\n\n    if (!scrollBy) {\n      this._updateScrollable(e);\n    }\n\n    var eventArgs = this._getEventArgs(e);\n\n    this._getAction(\"onDragMove\")(eventArgs);\n\n    if (true === eventArgs.cancel) {\n      return;\n    }\n\n    var targetDraggable = this._getTargetDraggable();\n\n    targetDraggable.dragMove(e, scrollBy);\n  },\n  _updateScrollable: function _updateScrollable(e) {\n    if (this.option(\"autoScroll\")) {\n      var mousePosition = getMousePosition(e);\n      var allObjects = getElementsFromPoint(mousePosition.x, mousePosition.y);\n\n      this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\n\n      this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);\n    }\n  },\n  _getScrollable: function _getScrollable($element) {\n    var _this2 = this;\n\n    var $scrollable;\n    $element.parents().toArray().some(function (parent) {\n      var $parent = $(parent);\n\n      if (_this2._horizontalScrollHelper.isScrollable($parent) || _this2._verticalScrollHelper.isScrollable($parent)) {\n        $scrollable = $parent;\n        return true;\n      }\n    });\n    return $scrollable;\n  },\n  _defaultActionArgs: function _defaultActionArgs() {\n    var args = this.callBase.apply(this, arguments);\n    var component = this.option(\"component\");\n\n    if (component) {\n      args.component = component;\n      args.element = component.element();\n    }\n\n    return args;\n  },\n  _getEventArgs: function _getEventArgs(e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return {\n      event: e,\n      itemData: sourceDraggable.option(\"itemData\"),\n      itemElement: getPublicElement(sourceDraggable._$sourceElement),\n      fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\n      toComponent: targetDraggable.option(\"component\") || targetDraggable,\n      fromData: sourceDraggable.option(\"data\"),\n      toData: targetDraggable.option(\"data\")\n    };\n  },\n  _getDragStartArgs: function _getDragStartArgs(e, $itemElement) {\n    var args = this._getEventArgs(e);\n\n    return {\n      event: args.event,\n      itemData: args.itemData,\n      itemElement: $itemElement,\n      fromData: args.fromData\n    };\n  },\n  _revertItemToInitialPosition: function _revertItemToInitialPosition() {\n    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);\n  },\n  _dragEndHandler: function _dragEndHandler(e) {\n    var _this3 = this;\n\n    var d = new Deferred();\n\n    var dragEndEventArgs = this._getEventArgs(e);\n\n    var dropEventArgs = this._getEventArgs(e);\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var needRevertPosition = true;\n\n    try {\n      this._getAction(\"onDragEnd\")(dragEndEventArgs);\n    } finally {\n      when(fromPromise(dragEndEventArgs.cancel)).done(function (cancel) {\n        if (!cancel) {\n          if (targetDraggable !== _this3) {\n            targetDraggable._getAction(\"onDrop\")(dropEventArgs);\n          }\n\n          if (!dropEventArgs.cancel) {\n            needRevertPosition = false;\n            when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\n            return;\n          }\n        }\n\n        d.resolve();\n      }).fail(d.resolve);\n      d.done(function () {\n        if (needRevertPosition) {\n          _this3._revertItemToInitialPosition();\n        }\n\n        _this3.reset();\n\n        targetDraggable.reset();\n\n        _this3._stopAnimator();\n\n        _this3._horizontalScrollHelper.reset();\n\n        _this3._verticalScrollHelper.reset();\n\n        _this3._resetDragElement();\n\n        _this3._resetSourceElement();\n\n        _this3._resetTargetDraggable();\n\n        _this3._resetSourceDraggable();\n      });\n    }\n  },\n  _isTargetOverAnotherDraggable: function _isTargetOverAnotherDraggable(e) {\n    var _this4 = this;\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (this === sourceDraggable) {\n      return false;\n    }\n\n    var $dragElement = sourceDraggable._$dragElement;\n    var $sourceDraggableElement = sourceDraggable.$element();\n    var $targetDraggableElement = this.$element();\n    var mousePosition = getMousePosition(e);\n    var elements = getElementsFromPoint(mousePosition.x, mousePosition.y);\n    var firstWidgetElement = elements.filter(function (element) {\n      var $element = $(element);\n\n      if ($element.hasClass(_this4._addWidgetPrefix())) {\n        return !$element.closest($dragElement).length;\n      }\n    })[0];\n\n    var $sourceElement = this._getSourceElement();\n\n    var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\n    var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\n    return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;\n  },\n  _dragEnterHandler: function _dragEnterHandler(e) {\n    this._fireDragEnterEvent(e);\n\n    if (this._isTargetOverAnotherDraggable(e)) {\n      this._setTargetDraggable();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragEnter(e);\n  },\n  _dragLeaveHandler: function _dragLeaveHandler(e) {\n    this._fireDragLeaveEvent(e);\n\n    this._resetTargetDraggable();\n\n    if (this !== this._getSourceDraggable()) {\n      this.reset();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragLeave(e);\n  },\n  _getAction: function _getAction(name) {\n    return this[\"_\" + name + \"Action\"] || this._createActionByOption(name);\n  },\n  _getAnonymousTemplateName: function _getAnonymousTemplateName() {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initTemplates: function _initTemplates() {\n    if (!this.option(\"contentTemplate\")) {\n      return;\n    }\n\n    this._templateManager.addDefaultTemplates({\n      content: new EmptyTemplate()\n    });\n\n    this.callBase.apply(this, arguments);\n  },\n  _render: function _render() {\n    this.callBase();\n    this.$element().addClass(this._addWidgetPrefix());\n    var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\n\n    var template = this._getTemplateByOption(\"contentTemplate\");\n\n    if (template) {\n      $(template.render({\n        container: this.element(),\n        transclude: transclude\n      }));\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragStart\":\n      case \"onDragMove\":\n      case \"onDragEnd\":\n      case \"onDrop\":\n      case \"onDragEnter\":\n      case \"onDragLeave\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"dragTemplate\":\n      case \"contentTemplate\":\n      case \"container\":\n      case \"clone\":\n        break;\n\n      case \"allowMoveByClick\":\n      case \"dragDirection\":\n      case \"disabled\":\n      case \"boundary\":\n      case \"filter\":\n      case \"immediate\":\n        this._resetDragElement();\n\n        this._detachEventHandlers();\n\n        this._attachEventHandlers();\n\n        break;\n\n      case \"autoScroll\":\n        this._verticalScrollHelper.reset();\n\n        this._horizontalScrollHelper.reset();\n\n        break;\n\n      case \"scrollSensitivity\":\n      case \"scrollSpeed\":\n      case \"boundOffset\":\n      case \"handle\":\n      case \"group\":\n      case \"data\":\n      case \"itemData\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _getTargetDraggable: function _getTargetDraggable() {\n    return targetDraggable || this;\n  },\n  _getSourceDraggable: function _getSourceDraggable() {\n    return sourceDraggable || this;\n  },\n  _setTargetDraggable: function _setTargetDraggable() {\n    var currentGroup = this.option(\"group\");\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\n      targetDraggable = this;\n    }\n  },\n  _setSourceDraggable: function _setSourceDraggable() {\n    sourceDraggable = this;\n  },\n  _resetSourceDraggable: function _resetSourceDraggable() {\n    sourceDraggable = null;\n  },\n  _resetTargetDraggable: function _resetTargetDraggable() {\n    targetDraggable = null;\n  },\n  _dispose: function _dispose() {\n    this.callBase();\n\n    this._detachEventHandlers();\n\n    this._resetDragElement();\n\n    this._resetTargetDraggable();\n\n    this._resetSourceDraggable();\n\n    this._$sourceElement = null;\n\n    this._stopAnimator();\n  },\n  _fireDragEnterEvent: function _fireDragEnterEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onDragEnter\")(args);\n  },\n  _fireDragLeaveEvent: function _fireDragLeaveEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onDragLeave\")(args);\n  }\n});\nregisterComponent(DRAGGABLE, Draggable);\nexport default Draggable;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/draggable.js"],"names":["$","getWindow","getElementsFromPoint","getBoundingRect","window","eventsEngine","quadToObject","registerComponent","locate","move","Animator","dasherize","extend","DOMComponent","getPublicElement","addNamespace","needSkipEvent","pointerEvents","start","dragEventStart","dragEventMove","end","dragEventEnd","enter","dragEventEnter","leave","dragEventLeave","positionUtils","isFunction","isObject","noop","splitPair","value","viewPort","EmptyTemplate","when","fromPromise","Deferred","DRAGGABLE","DRAGSTART_EVENT_NAME","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","DRAG_ENTER_EVENT_NAME","DRAGEND_LEAVE_EVENT_NAME","POINTERDOWN_EVENT_NAME","down","CLONE_CLASS","targetDraggable","sourceDraggable","ANONYMOUS_TEMPLATE_NAME","getMousePosition","event","x","pageX","scrollLeft","y","pageY","scrollTop","GESTURE_COVER_CLASS","ScrollHelper","orientation","component","_preventScroll","_component","_scrollValue","_overFlowAttr","_sizeAttr","_scrollSizeProp","_clientSizeProp","_limitProps","elements","mousePosition","that","some","element","_trySetScrollable","_$scrollableAtPointer","_scrollSpeed","$element","css","hasClass","prop","distanceToBorders","sensitivity","option","isScrollable","_calculateDistanceToBorders","_calculateScrollSpeed","$area","area","get","areaBoundingRect","left","top","right","bottom","distance","maxSpeed","Math","ceil","pow","$scrollable","closest","scrollableInstance","data","nextScrollPosition","scrollOffset","scrollTo","_nextScrollPosition","dragMoveArgs","_dragMoveArgs","_dragMoveHandler","scrollableSize","size","location","ScrollAnimator","inherit","ctor","strategy","callBase","_strategy","_step","horizontalScrollHelper","_horizontalScrollHelper","verticalScrollHelper","_verticalScrollHelper","scrollByStep","Draggable","reset","dragMove","dragEnter","dragLeave","dragEnd","sourceEvent","_getSourceDraggable","_fireRemoveEvent","resolve","_getDefaultOptions","onDragStart","onDragMove","onDragEnd","onDragEnter","onDragLeave","onDrop","immediate","dragDirection","boundary","boundOffset","allowMoveByClick","itemData","container","dragTemplate","contentTemplate","handle","filter","clone","autoScroll","scrollSpeed","scrollSensitivity","group","_setOptionsByReference","apply","arguments","_optionsByReference","_init","_attachEventHandlers","_scrollAnimator","_normalizeCursorOffset","offset","h","v","map","parseFloat","length","_getNormalizedCursorOffset","options","call","_calculateElementOffset","elementOffset","dragElementOffset","itemElement","$dragElement","dragElement","isCloned","_dragElementIsCloned","cursorOffset","normalizedCursorOffset","currentLocate","_initialLocate","initialOffset","isFinite","_initPosition","_move","_startPosition","_startAnimator","inProgress","_stopAnimator","stop","_addWidgetPrefix","className","componentName","NAME","_getItemsSelector","_$content","$wrapper","children","itemsSelector","direction","checkDropTarget","$target","targetGroup","sourceGroup","_getScrollable","isOutsideScrollable","_getArea","on","_pointerDownHandler","bind","slice","_dragStartHandler","_dragEndHandler","_dragEnterHandler","_dragLeaveHandler","_$dragElement","_getDragTemplateArgs","$container","model","_createDragElement","result","_getContainer","template","_getTemplate","appendTo","render","width","height","toggleClass","_resetDragElement","remove","_toggleDraggingClass","_resetSourceElement","_toggleDragSourceClass","_$sourceElement","_detachEventHandlers","off","position","_getDraggableElement","e","$sourceElement","_getSourceElement","target","$items","find","is","draggable","_getAction","_getEventArgs","_isValidElement","originalEvent","cancel","dragStartArgs","_getDragStartArgs","_setSourceDraggable","_setGestureCoverCursor","isFixedPosition","areaOffset","_getAreaOffset","_getBoundOffset","areaWidth","outerWidth","areaHeight","outerHeight","elementWidth","elementHeight","startOffset_left","startOffset_top","maxLeftOffset","maxRightOffset","maxTopOffset","maxBottomOffset","concat","scrollBy","startPosition","_updateScrollable","eventArgs","_getTargetDraggable","allObjects","updateScrollable","parents","toArray","parent","$parent","_defaultActionArgs","args","fromComponent","toComponent","fromData","toData","$itemElement","_revertItemToInitialPosition","d","dragEndEventArgs","dropEventArgs","needRevertPosition","done","always","fail","_resetTargetDraggable","_resetSourceDraggable","_isTargetOverAnotherDraggable","$sourceDraggableElement","$targetDraggableElement","firstWidgetElement","isTargetOverItself","isTargetOverNestedDraggable","_fireDragEnterEvent","_setTargetDraggable","_fireDragLeaveEvent","name","_createActionByOption","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_render","addClass","transclude","anonymousTemplateName","_getTemplateByOption","_optionChanged","currentGroup","_dispose"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getElementsFromPoint,\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nvar window = getWindow();\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    quadToObject\r\n} from \"../core/utils/string\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport Animator from \"./scroll_view/animator\";\r\nimport {\r\n    dasherize\r\n} from \"../core/utils/inflector\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    addNamespace,\r\n    needSkipEvent\r\n} from \"../events/utils/index\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd,\r\n    enter as dragEventEnter,\r\n    leave as dragEventLeave\r\n} from \"../events/drag\";\r\nimport positionUtils from \"../animation/position\";\r\nimport {\r\n    isFunction,\r\n    isObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    noop,\r\n    splitPair\r\n} from \"../core/utils/common\";\r\nimport {\r\n    value as viewPort\r\n} from \"../core/utils/view_port\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../core/templates/empty_template\";\r\nimport {\r\n    when,\r\n    fromPromise,\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = event => ({\r\n    x: event.pageX - $(window).scrollLeft(),\r\n    y: event.pageY - $(window).scrollTop()\r\n});\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nclass ScrollHelper {\r\n    constructor(orientation, component) {\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._clientSizeProp = \"clientHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._clientSizeProp = \"clientWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    updateScrollable(elements, mousePosition) {\r\n        var that = this;\r\n        if (!elements.some(element => that._trySetScrollable(element, mousePosition))) {\r\n            that._$scrollableAtPointer = null;\r\n            that._scrollSpeed = 0\r\n        }\r\n    }\r\n    isScrolling() {\r\n        return !!this._scrollSpeed\r\n    }\r\n    isScrollable($element) {\r\n        return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > $element[this._sizeAttr]()\r\n    }\r\n    _trySetScrollable(element, mousePosition) {\r\n        var $element = $(element);\r\n        var distanceToBorders;\r\n        var sensitivity = this._component.option(\"scrollSensitivity\");\r\n        var isScrollable = this.isScrollable($element);\r\n        if (isScrollable) {\r\n            distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\r\n            if (sensitivity > distanceToBorders[this._limitProps.start]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else {\r\n                isScrollable = false;\r\n                this._preventScroll = false\r\n            }\r\n        }\r\n        return isScrollable\r\n    }\r\n    _calculateDistanceToBorders($area, mousePosition) {\r\n        var area = $area.get(0);\r\n        var areaBoundingRect;\r\n        if (area) {\r\n            areaBoundingRect = getBoundingRect(area);\r\n            return {\r\n                left: mousePosition.x - areaBoundingRect.left,\r\n                top: mousePosition.y - areaBoundingRect.top,\r\n                right: areaBoundingRect.right - mousePosition.x,\r\n                bottom: areaBoundingRect.bottom - mousePosition.y\r\n            }\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n    _calculateScrollSpeed(distance) {\r\n        var component = this._component;\r\n        var sensitivity = component.option(\"scrollSensitivity\");\r\n        var maxSpeed = component.option(\"scrollSpeed\");\r\n        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n    }\r\n    scrollByStep() {\r\n        if (this._$scrollableAtPointer && this._scrollSpeed) {\r\n            if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                if (scrollableInstance) {\r\n                    var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\r\n                    scrollableInstance.scrollTo({\r\n                        [this._limitProps.start]: nextScrollPosition\r\n                    })\r\n                }\r\n            } else {\r\n                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\r\n                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition)\r\n            }\r\n            var dragMoveArgs = this._component._dragMoveArgs;\r\n            if (dragMoveArgs) {\r\n                this._component._dragMoveHandler(dragMoveArgs)\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this._$scrollableAtPointer = null;\r\n        this._scrollSpeed = 0;\r\n        this._preventScroll = true\r\n    }\r\n    isOutsideScrollable($scrollable, event) {\r\n        if (!$scrollable) {\r\n            return false\r\n        }\r\n        var scrollableSize = getBoundingRect($scrollable.get(0));\r\n        var start = scrollableSize[this._limitProps.start];\r\n        var size = scrollableSize[this._sizeAttr];\r\n        var mousePosition = getMousePosition(event);\r\n        var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n        return location < start || location > start + size\r\n    }\r\n}\r\nvar ScrollAnimator = Animator.inherit({\r\n    ctor: function(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step: function() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = DOMComponent.inherit({\r\n    reset: noop,\r\n    dragMove: noop,\r\n    dragEnter: noop,\r\n    dragLeave: noop,\r\n    dragEnd: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return (new Deferred).resolve()\r\n    },\r\n    _fireRemoveEvent: noop,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDragEnter: null,\r\n            onDragLeave: null,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase.apply(this, arguments);\r\n        extend(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this)\r\n    },\r\n    _normalizeCursorOffset: function(offset) {\r\n        if (isObject(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = splitPair(offset).map(value => parseFloat(value));\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset: function(offset, options) {\r\n        if (isFunction(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset: function(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var event = options.event;\r\n        var $element = $(options.itemElement);\r\n        var $dragElement = $(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = locate($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition: function(options) {\r\n        var $dragElement = $(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = locate($dragElement)\r\n    },\r\n    _startAnimator: function() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator: function() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix: function(className) {\r\n        var componentName = this.NAME;\r\n        return dasherize(componentName) + (className ? \"-\" + className : \"\")\r\n    },\r\n    _getItemsSelector: function() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content: function() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: ($target, event) => {\r\n                var targetGroup = this.option(\"group\");\r\n                var sourceGroup = this._getSourceDraggable().option(\"group\");\r\n                var $scrollable = this._getScrollable($target);\r\n                if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this))\r\n    },\r\n    _dragElementIsCloned: function() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs: function($element, $container) {\r\n        return {\r\n            container: getPublicElement($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: getPublicElement($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement: function($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = $(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else if (clone) {\r\n            result = $(\"<div>\").appendTo($container);\r\n            $element.clone().css({\r\n                width: $element.css(\"width\"),\r\n                height: $element.css(\"height\")\r\n            }).appendTo(result)\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement: function() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement: function() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position, $element) {\r\n        move($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement: function(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = $(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement: function() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + locate($element).left - $element.width() / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + locate($element).top - $element.height() / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement: function(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = $(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        this._setGestureCoverCursor($dragElement.children());\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition(extend({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = $area.outerWidth();\r\n        var areaHeight = $area.outerHeight();\r\n        var elementWidth = $dragElement.width();\r\n        var elementHeight = $dragElement.height();\r\n        var startOffset_left = $dragElement.offset().left - areaOffset.left,\r\n            startOffset_top = $dragElement.offset().top - areaOffset.top;\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset_left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset_top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _setGestureCoverCursor: function($element) {\r\n        $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"))\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"boundary\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _getContainer: function() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = viewPort()\r\n        }\r\n        return $(container)\r\n    },\r\n    _dragMoveHandler: function(e, scrollBy) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = e.offset;\r\n        var startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        if (!scrollBy) {\r\n            this._updateScrollable(e)\r\n        }\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e, scrollBy)\r\n    },\r\n    _updateScrollable: function(e) {\r\n        if (this.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = getElementsFromPoint(mousePosition.x, mousePosition.y);\r\n            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    _getScrollable: function($element) {\r\n        var $scrollable;\r\n        $element.parents().toArray().some(parent => {\r\n            var $parent = $(parent);\r\n            if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n        });\r\n        return $scrollable\r\n    },\r\n    _defaultActionArgs: function() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: getPublicElement(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition: function() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var d = new Deferred;\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== this) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(() => {\r\n                if (needRevertPosition) {\r\n                    this._revertItemToInitialPosition()\r\n                }\r\n                this.reset();\r\n                targetDraggable.reset();\r\n                this._stopAnimator();\r\n                this._horizontalScrollHelper.reset();\r\n                this._verticalScrollHelper.reset();\r\n                this._resetDragElement();\r\n                this._resetSourceElement();\r\n                this._resetTargetDraggable();\r\n                this._resetSourceDraggable()\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = getElementsFromPoint(mousePosition.x, mousePosition.y);\r\n        var firstWidgetElement = elements.filter(element => {\r\n            var $element = $(element);\r\n            if ($element.hasClass(this._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this._fireDragEnterEvent(e);\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler: function(e) {\r\n        this._fireDragLeaveEvent(e);\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            $(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n            case \"onDragEnter\":\r\n            case \"onDragLeave\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable: function() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable: function() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable: function() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable: function() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable: function() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable: function() {\r\n        targetDraggable = null\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    },\r\n    _fireDragEnterEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragEnter\")(args)\r\n    },\r\n    _fireDragLeaveEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragLeave\")(args)\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nexport default Draggable;\r\n"]},"metadata":{},"sourceType":"module"}