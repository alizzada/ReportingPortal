{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { animation } from \"./ui.drawer.animation\";\nimport DrawerStrategy from \"./ui.drawer.rendering.strategy\";\nimport $ from \"../../core/renderer\";\nimport { camelize } from \"../../core/utils/inflector\";\n\nvar ShrinkStrategy = /*#__PURE__*/function (_DrawerStrategy) {\n  _inherits(ShrinkStrategy, _DrawerStrategy);\n\n  var _super = _createSuper(ShrinkStrategy);\n\n  function ShrinkStrategy() {\n    _classCallCheck(this, ShrinkStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShrinkStrategy, [{\n    key: \"_internalRenderPosition\",\n    value: function _internalRenderPosition(changePositionUsingFxAnimation, whenAnimationCompleted) {\n      var drawer = this.getDrawerInstance();\n      var direction = drawer.calcTargetPosition();\n      var $panel = $(drawer.content());\n\n      var panelSize = this._getPanelSize(drawer.option(\"opened\"));\n\n      var panelOffset = this._getPanelOffset(drawer.option(\"opened\"));\n\n      var revealMode = drawer.option(\"revealMode\");\n\n      if (changePositionUsingFxAnimation) {\n        if (\"slide\" === revealMode) {\n          animation.margin({\n            complete: function complete() {\n              whenAnimationCompleted.resolve();\n            },\n            $element: $panel,\n            duration: drawer.option(\"animationDuration\"),\n            direction: direction,\n            margin: panelOffset\n          });\n        } else if (\"expand\" === revealMode) {\n          animation.size({\n            complete: function complete() {\n              whenAnimationCompleted.resolve();\n            },\n            $element: $panel,\n            duration: drawer.option(\"animationDuration\"),\n            direction: direction,\n            size: panelSize\n          });\n        }\n      } else if (\"slide\" === revealMode) {\n        $panel.css(\"margin\" + camelize(direction, true), panelOffset);\n      } else if (\"expand\" === revealMode) {\n        $panel.css(drawer.isHorizontalDirection() ? \"width\" : \"height\", panelSize);\n      }\n    }\n  }, {\n    key: \"isViewContentFirst\",\n    value: function isViewContentFirst(position, isRtl) {\n      return (isRtl ? \"left\" === position : \"right\" === position) || \"bottom\" === position;\n    }\n  }]);\n\n  return ShrinkStrategy;\n}(DrawerStrategy);\n\nexport default ShrinkStrategy;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js"],"names":["animation","DrawerStrategy","$","camelize","ShrinkStrategy","changePositionUsingFxAnimation","whenAnimationCompleted","drawer","getDrawerInstance","direction","calcTargetPosition","$panel","content","panelSize","_getPanelSize","option","panelOffset","_getPanelOffset","revealMode","margin","complete","resolve","$element","duration","size","css","isHorizontalDirection","position","isRtl"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,QAEO,uBAFP;AAGA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SACIC,QADJ,QAEO,4BAFP;;IAGMC,c;;;;;;;;;;;;;WACF,iCAAwBC,8BAAxB,EAAwDC,sBAAxD,EAAgF;AAC5E,UAAIC,MAAM,GAAG,KAAKC,iBAAL,EAAb;AACA,UAAIC,SAAS,GAAGF,MAAM,CAACG,kBAAP,EAAhB;AACA,UAAIC,MAAM,GAAGT,CAAC,CAACK,MAAM,CAACK,OAAP,EAAD,CAAd;;AACA,UAAIC,SAAS,GAAG,KAAKC,aAAL,CAAmBP,MAAM,CAACQ,MAAP,CAAc,QAAd,CAAnB,CAAhB;;AACA,UAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBV,MAAM,CAACQ,MAAP,CAAc,QAAd,CAArB,CAAlB;;AACA,UAAIG,UAAU,GAAGX,MAAM,CAACQ,MAAP,CAAc,YAAd,CAAjB;;AACA,UAAIV,8BAAJ,EAAoC;AAChC,YAAI,YAAYa,UAAhB,EAA4B;AACxBlB,UAAAA,SAAS,CAACmB,MAAV,CAAiB;AACbC,YAAAA,QAAQ,EAAE,oBAAM;AACZd,cAAAA,sBAAsB,CAACe,OAAvB;AACH,aAHY;AAIbC,YAAAA,QAAQ,EAAEX,MAJG;AAKbY,YAAAA,QAAQ,EAAEhB,MAAM,CAACQ,MAAP,CAAc,mBAAd,CALG;AAMbN,YAAAA,SAAS,EAAEA,SANE;AAObU,YAAAA,MAAM,EAAEH;AAPK,WAAjB;AASH,SAVD,MAUO,IAAI,aAAaE,UAAjB,EAA6B;AAChClB,UAAAA,SAAS,CAACwB,IAAV,CAAe;AACXJ,YAAAA,QAAQ,EAAE,oBAAM;AACZd,cAAAA,sBAAsB,CAACe,OAAvB;AACH,aAHU;AAIXC,YAAAA,QAAQ,EAAEX,MAJC;AAKXY,YAAAA,QAAQ,EAAEhB,MAAM,CAACQ,MAAP,CAAc,mBAAd,CALC;AAMXN,YAAAA,SAAS,EAAEA,SANA;AAOXe,YAAAA,IAAI,EAAEX;AAPK,WAAf;AASH;AACJ,OAtBD,MAsBO,IAAI,YAAYK,UAAhB,EAA4B;AAC/BP,QAAAA,MAAM,CAACc,GAAP,CAAW,WAAWtB,QAAQ,CAACM,SAAD,EAAY,IAAZ,CAA9B,EAAiDO,WAAjD;AACH,OAFM,MAEA,IAAI,aAAaE,UAAjB,EAA6B;AAChCP,QAAAA,MAAM,CAACc,GAAP,CAAWlB,MAAM,CAACmB,qBAAP,KAAiC,OAAjC,GAA2C,QAAtD,EAAgEb,SAAhE;AACH;AACJ;;;WACD,4BAAmBc,QAAnB,EAA6BC,KAA7B,EAAoC;AAChC,aAAO,CAACA,KAAK,GAAG,WAAWD,QAAd,GAAyB,YAAYA,QAA3C,KAAwD,aAAaA,QAA5E;AACH;;;;EAtCwB1B,c;;AAwC7B,eAAeG,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    animation\r\n} from \"./ui.drawer.animation\";\r\nimport DrawerStrategy from \"./ui.drawer.rendering.strategy\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    camelize\r\n} from \"../../core/utils/inflector\";\r\nclass ShrinkStrategy extends DrawerStrategy {\r\n    _internalRenderPosition(changePositionUsingFxAnimation, whenAnimationCompleted) {\r\n        var drawer = this.getDrawerInstance();\r\n        var direction = drawer.calcTargetPosition();\r\n        var $panel = $(drawer.content());\r\n        var panelSize = this._getPanelSize(drawer.option(\"opened\"));\r\n        var panelOffset = this._getPanelOffset(drawer.option(\"opened\"));\r\n        var revealMode = drawer.option(\"revealMode\");\r\n        if (changePositionUsingFxAnimation) {\r\n            if (\"slide\" === revealMode) {\r\n                animation.margin({\r\n                    complete: () => {\r\n                        whenAnimationCompleted.resolve()\r\n                    },\r\n                    $element: $panel,\r\n                    duration: drawer.option(\"animationDuration\"),\r\n                    direction: direction,\r\n                    margin: panelOffset\r\n                })\r\n            } else if (\"expand\" === revealMode) {\r\n                animation.size({\r\n                    complete: () => {\r\n                        whenAnimationCompleted.resolve()\r\n                    },\r\n                    $element: $panel,\r\n                    duration: drawer.option(\"animationDuration\"),\r\n                    direction: direction,\r\n                    size: panelSize\r\n                })\r\n            }\r\n        } else if (\"slide\" === revealMode) {\r\n            $panel.css(\"margin\" + camelize(direction, true), panelOffset)\r\n        } else if (\"expand\" === revealMode) {\r\n            $panel.css(drawer.isHorizontalDirection() ? \"width\" : \"height\", panelSize)\r\n        }\r\n    }\r\n    isViewContentFirst(position, isRtl) {\r\n        return (isRtl ? \"left\" === position : \"right\" === position) || \"bottom\" === position\r\n    }\r\n}\r\nexport default ShrinkStrategy;\r\n"]},"metadata":{},"sourceType":"module"}