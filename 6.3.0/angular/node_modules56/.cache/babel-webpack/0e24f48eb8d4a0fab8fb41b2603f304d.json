{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxSparkline from 'devextreme/viz/sparkline';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Sparkline UI component is a compact chart that contains only one series. Owing to their size, sparklines occupy very little space and can be easily collected in a table or embedded straight in text.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxSparklineComponent = /*#__PURE__*/function (_DxComponent) {\n  _inherits(DxSparklineComponent, _DxComponent);\n\n  var _super = _createSuper(DxSparklineComponent);\n\n  function DxSparklineComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    var _this;\n\n    _classCallCheck(this, DxSparklineComponent);\n\n    _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    _this._watcherHelper = _watcherHelper;\n    _this._idh = _idh;\n\n    _this._createEventEmitters([{\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'drawn',\n      emit: 'onDrawn'\n    }, {\n      subscribe: 'exported',\n      emit: 'onExported'\n    }, {\n      subscribe: 'exporting',\n      emit: 'onExporting'\n    }, {\n      subscribe: 'fileSaving',\n      emit: 'onFileSaving'\n    }, {\n      subscribe: 'incidentOccurred',\n      emit: 'onIncidentOccurred'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'tooltipHidden',\n      emit: 'onTooltipHidden'\n    }, {\n      subscribe: 'tooltipShown',\n      emit: 'onTooltipShown'\n    }, {\n      emit: 'argumentFieldChange'\n    }, {\n      emit: 'barNegativeColorChange'\n    }, {\n      emit: 'barPositiveColorChange'\n    }, {\n      emit: 'dataSourceChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'firstLastColorChange'\n    }, {\n      emit: 'ignoreEmptyPointsChange'\n    }, {\n      emit: 'lineColorChange'\n    }, {\n      emit: 'lineWidthChange'\n    }, {\n      emit: 'lossColorChange'\n    }, {\n      emit: 'marginChange'\n    }, {\n      emit: 'maxColorChange'\n    }, {\n      emit: 'maxValueChange'\n    }, {\n      emit: 'minColorChange'\n    }, {\n      emit: 'minValueChange'\n    }, {\n      emit: 'pathModifiedChange'\n    }, {\n      emit: 'pointColorChange'\n    }, {\n      emit: 'pointSizeChange'\n    }, {\n      emit: 'pointSymbolChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'showFirstLastChange'\n    }, {\n      emit: 'showMinMaxChange'\n    }, {\n      emit: 'sizeChange'\n    }, {\n      emit: 'themeChange'\n    }, {\n      emit: 'tooltipChange'\n    }, {\n      emit: 'typeChange'\n    }, {\n      emit: 'valueFieldChange'\n    }, {\n      emit: 'winColorChange'\n    }, {\n      emit: 'winlossThresholdChange'\n    }]);\n\n    _this._idh.setHost(_assertThisInitialized(_this));\n\n    optionHost.setHost(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\r\n   * \r\n  \r\n   */\n\n\n  _createClass(DxSparklineComponent, [{\n    key: \"argumentField\",\n    get: function get() {\n      return this._getOption('argumentField');\n    },\n    set: function set(value) {\n      this._setOption('argumentField', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"barNegativeColor\",\n    get: function get() {\n      return this._getOption('barNegativeColor');\n    },\n    set: function set(value) {\n      this._setOption('barNegativeColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"barPositiveColor\",\n    get: function get() {\n      return this._getOption('barPositiveColor');\n    },\n    set: function set(value) {\n      this._setOption('barPositiveColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"dataSource\",\n    get: function get() {\n      return this._getOption('dataSource');\n    },\n    set: function set(value) {\n      this._setOption('dataSource', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._getOption('disabled');\n    },\n    set: function set(value) {\n      this._setOption('disabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"elementAttr\",\n    get: function get() {\n      return this._getOption('elementAttr');\n    },\n    set: function set(value) {\n      this._setOption('elementAttr', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"firstLastColor\",\n    get: function get() {\n      return this._getOption('firstLastColor');\n    },\n    set: function set(value) {\n      this._setOption('firstLastColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"ignoreEmptyPoints\",\n    get: function get() {\n      return this._getOption('ignoreEmptyPoints');\n    },\n    set: function set(value) {\n      this._setOption('ignoreEmptyPoints', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"lineColor\",\n    get: function get() {\n      return this._getOption('lineColor');\n    },\n    set: function set(value) {\n      this._setOption('lineColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"lineWidth\",\n    get: function get() {\n      return this._getOption('lineWidth');\n    },\n    set: function set(value) {\n      this._setOption('lineWidth', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"lossColor\",\n    get: function get() {\n      return this._getOption('lossColor');\n    },\n    set: function set(value) {\n      this._setOption('lossColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"margin\",\n    get: function get() {\n      return this._getOption('margin');\n    },\n    set: function set(value) {\n      this._setOption('margin', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"maxColor\",\n    get: function get() {\n      return this._getOption('maxColor');\n    },\n    set: function set(value) {\n      this._setOption('maxColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"maxValue\",\n    get: function get() {\n      return this._getOption('maxValue');\n    },\n    set: function set(value) {\n      this._setOption('maxValue', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"minColor\",\n    get: function get() {\n      return this._getOption('minColor');\n    },\n    set: function set(value) {\n      this._setOption('minColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"minValue\",\n    get: function get() {\n      return this._getOption('minValue');\n    },\n    set: function set(value) {\n      this._setOption('minValue', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"pathModified\",\n    get: function get() {\n      return this._getOption('pathModified');\n    },\n    set: function set(value) {\n      this._setOption('pathModified', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"pointColor\",\n    get: function get() {\n      return this._getOption('pointColor');\n    },\n    set: function set(value) {\n      this._setOption('pointColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"pointSize\",\n    get: function get() {\n      return this._getOption('pointSize');\n    },\n    set: function set(value) {\n      this._setOption('pointSize', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"pointSymbol\",\n    get: function get() {\n      return this._getOption('pointSymbol');\n    },\n    set: function set(value) {\n      this._setOption('pointSymbol', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"rtlEnabled\",\n    get: function get() {\n      return this._getOption('rtlEnabled');\n    },\n    set: function set(value) {\n      this._setOption('rtlEnabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showFirstLast\",\n    get: function get() {\n      return this._getOption('showFirstLast');\n    },\n    set: function set(value) {\n      this._setOption('showFirstLast', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showMinMax\",\n    get: function get() {\n      return this._getOption('showMinMax');\n    },\n    set: function set(value) {\n      this._setOption('showMinMax', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._getOption('size');\n    },\n    set: function set(value) {\n      this._setOption('size', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"theme\",\n    get: function get() {\n      return this._getOption('theme');\n    },\n    set: function set(value) {\n      this._setOption('theme', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"tooltip\",\n    get: function get() {\n      return this._getOption('tooltip');\n    },\n    set: function set(value) {\n      this._setOption('tooltip', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._getOption('type');\n    },\n    set: function set(value) {\n      this._setOption('type', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this._getOption('valueField');\n    },\n    set: function set(value) {\n      this._setOption('valueField', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"winColor\",\n    get: function get() {\n      return this._getOption('winColor');\n    },\n    set: function set(value) {\n      this._setOption('winColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"winlossThreshold\",\n    get: function get() {\n      return this._getOption('winlossThreshold');\n    },\n    set: function set(value) {\n      this._setOption('winlossThreshold', value);\n    }\n  }, {\n    key: \"_createInstance\",\n    value: function _createInstance(element, options) {\n      return new DxSparkline(element, options);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyWidget();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(DxSparklineComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n      this.setupChanges('dataSource', changes);\n    }\n  }, {\n    key: \"setupChanges\",\n    value: function setupChanges(prop, changes) {\n      if (!(prop in this._optionsToUpdate)) {\n        this._idh.setup(prop, changes);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this._idh.doCheck('dataSource');\n\n      this._watcherHelper.checkWatchers();\n\n      _get(_getPrototypeOf(DxSparklineComponent.prototype), \"ngDoCheck\", this).call(this);\n\n      _get(_getPrototypeOf(DxSparklineComponent.prototype), \"clearChangedOptions\", this).call(this);\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      var isSetup = this._idh.setupSingle(name, value);\n\n      var isChanged = this._idh.getChanges(name, value) !== null;\n\n      if (isSetup || isChanged) {\n        _get(_getPrototypeOf(DxSparklineComponent.prototype), \"_setOption\", this).call(this, name, value);\n      }\n    }\n  }]);\n\n  return DxSparklineComponent;\n}(DxComponent);\n\nDxSparklineComponent.ɵfac = function DxSparklineComponent_Factory(t) {\n  return new (t || DxSparklineComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nDxSparklineComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DxSparklineComponent,\n  selectors: [[\"dx-sparkline\"]],\n  inputs: {\n    argumentField: \"argumentField\",\n    barNegativeColor: \"barNegativeColor\",\n    barPositiveColor: \"barPositiveColor\",\n    dataSource: \"dataSource\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    firstLastColor: \"firstLastColor\",\n    ignoreEmptyPoints: \"ignoreEmptyPoints\",\n    lineColor: \"lineColor\",\n    lineWidth: \"lineWidth\",\n    lossColor: \"lossColor\",\n    margin: \"margin\",\n    maxColor: \"maxColor\",\n    maxValue: \"maxValue\",\n    minColor: \"minColor\",\n    minValue: \"minValue\",\n    pathModified: \"pathModified\",\n    pointColor: \"pointColor\",\n    pointSize: \"pointSize\",\n    pointSymbol: \"pointSymbol\",\n    rtlEnabled: \"rtlEnabled\",\n    showFirstLast: \"showFirstLast\",\n    showMinMax: \"showMinMax\",\n    size: \"size\",\n    theme: \"theme\",\n    tooltip: \"tooltip\",\n    type: \"type\",\n    valueField: \"valueField\",\n    winColor: \"winColor\",\n    winlossThreshold: \"winlossThreshold\"\n  },\n  outputs: {\n    onDisposing: \"onDisposing\",\n    onDrawn: \"onDrawn\",\n    onExported: \"onExported\",\n    onExporting: \"onExporting\",\n    onFileSaving: \"onFileSaving\",\n    onIncidentOccurred: \"onIncidentOccurred\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    onTooltipHidden: \"onTooltipHidden\",\n    onTooltipShown: \"onTooltipShown\",\n    argumentFieldChange: \"argumentFieldChange\",\n    barNegativeColorChange: \"barNegativeColorChange\",\n    barPositiveColorChange: \"barPositiveColorChange\",\n    dataSourceChange: \"dataSourceChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    firstLastColorChange: \"firstLastColorChange\",\n    ignoreEmptyPointsChange: \"ignoreEmptyPointsChange\",\n    lineColorChange: \"lineColorChange\",\n    lineWidthChange: \"lineWidthChange\",\n    lossColorChange: \"lossColorChange\",\n    marginChange: \"marginChange\",\n    maxColorChange: \"maxColorChange\",\n    maxValueChange: \"maxValueChange\",\n    minColorChange: \"minColorChange\",\n    minValueChange: \"minValueChange\",\n    pathModifiedChange: \"pathModifiedChange\",\n    pointColorChange: \"pointColorChange\",\n    pointSizeChange: \"pointSizeChange\",\n    pointSymbolChange: \"pointSymbolChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    showFirstLastChange: \"showFirstLastChange\",\n    showMinMaxChange: \"showMinMaxChange\",\n    sizeChange: \"sizeChange\",\n    themeChange: \"themeChange\",\n    tooltipChange: \"tooltipChange\",\n    typeChange: \"typeChange\",\n    valueFieldChange: \"valueFieldChange\",\n    winColorChange: \"winColorChange\",\n    winlossThresholdChange: \"winlossThresholdChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxSparklineComponent_Template(rf, ctx) {},\n  styles: [\"[_nghost-%COMP%] {  display: block; }\"]\n});\n\nDxSparklineComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: DxTemplateHost\n  }, {\n    type: WatcherHelper\n  }, {\n    type: IterableDifferHelper\n  }, {\n    type: NestedOptionHost\n  }, {\n    type: TransferState\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"argumentField\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"barNegativeColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"barPositiveColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSparklineComponent.prototype, \"dataSource\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"disabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSparklineComponent.prototype, \"elementAttr\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"firstLastColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"ignoreEmptyPoints\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"lineColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxSparklineComponent.prototype, \"lineWidth\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"lossColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSparklineComponent.prototype, \"margin\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"maxColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxSparklineComponent.prototype, \"maxValue\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"minColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxSparklineComponent.prototype, \"minValue\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"pathModified\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"pointColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxSparklineComponent.prototype, \"pointSize\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"pointSymbol\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"rtlEnabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"showFirstLast\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSparklineComponent.prototype, \"showMinMax\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSparklineComponent.prototype, \"size\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"theme\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSparklineComponent.prototype, \"tooltip\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"type\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"valueField\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSparklineComponent.prototype, \"winColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxSparklineComponent.prototype, \"winlossThreshold\", null);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onDisposing\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onDrawn\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onExported\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onExporting\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onFileSaving\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onIncidentOccurred\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onInitialized\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onOptionChanged\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onTooltipHidden\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"onTooltipShown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"argumentFieldChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"barNegativeColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"barPositiveColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"dataSourceChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"disabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"elementAttrChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"firstLastColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"ignoreEmptyPointsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"lineColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"lineWidthChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"lossColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"marginChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"maxColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"maxValueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"minColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"minValueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"pathModifiedChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"pointColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"pointSizeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"pointSymbolChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"rtlEnabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"showFirstLastChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"showMinMaxChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"sizeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"themeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"tooltipChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"typeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"valueFieldChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"winColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSparklineComponent.prototype, \"winlossThresholdChange\", void 0);\n\nDxSparklineComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxSparklineComponent);\n\nvar DxSparklineModule = function DxSparklineModule() {\n  _classCallCheck(this, DxSparklineModule);\n};\n\nDxSparklineModule.ɵfac = function DxSparklineModule_Factory(t) {\n  return new (t || DxSparklineModule)();\n};\n\nDxSparklineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DxSparklineModule\n});\nDxSparklineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxSparklineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-sparkline',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper],\n      styles: [' :host {  display: block; }']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.DxTemplateHost\n    }, {\n      type: ɵngcc1.WatcherHelper\n    }, {\n      type: ɵngcc1.IterableDifferHelper\n    }, {\n      type: ɵngcc1.NestedOptionHost\n    }, {\n      type: ɵngcc2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    argumentField: [{\n      type: Input\n    }],\n    barNegativeColor: [{\n      type: Input\n    }],\n    barPositiveColor: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    firstLastColor: [{\n      type: Input\n    }],\n    ignoreEmptyPoints: [{\n      type: Input\n    }],\n    lineColor: [{\n      type: Input\n    }],\n    lineWidth: [{\n      type: Input\n    }],\n    lossColor: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    maxColor: [{\n      type: Input\n    }],\n    maxValue: [{\n      type: Input\n    }],\n    minColor: [{\n      type: Input\n    }],\n    minValue: [{\n      type: Input\n    }],\n    pathModified: [{\n      type: Input\n    }],\n    pointColor: [{\n      type: Input\n    }],\n    pointSize: [{\n      type: Input\n    }],\n    pointSymbol: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    showFirstLast: [{\n      type: Input\n    }],\n    showMinMax: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    winColor: [{\n      type: Input\n    }],\n    winlossThreshold: [{\n      type: Input\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onDrawn: [{\n      type: Output\n    }],\n    onExported: [{\n      type: Output\n    }],\n    onExporting: [{\n      type: Output\n    }],\n    onFileSaving: [{\n      type: Output\n    }],\n    onIncidentOccurred: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onTooltipHidden: [{\n      type: Output\n    }],\n    onTooltipShown: [{\n      type: Output\n    }],\n    argumentFieldChange: [{\n      type: Output\n    }],\n    barNegativeColorChange: [{\n      type: Output\n    }],\n    barPositiveColorChange: [{\n      type: Output\n    }],\n    dataSourceChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    firstLastColorChange: [{\n      type: Output\n    }],\n    ignoreEmptyPointsChange: [{\n      type: Output\n    }],\n    lineColorChange: [{\n      type: Output\n    }],\n    lineWidthChange: [{\n      type: Output\n    }],\n    lossColorChange: [{\n      type: Output\n    }],\n    marginChange: [{\n      type: Output\n    }],\n    maxColorChange: [{\n      type: Output\n    }],\n    maxValueChange: [{\n      type: Output\n    }],\n    minColorChange: [{\n      type: Output\n    }],\n    minValueChange: [{\n      type: Output\n    }],\n    pathModifiedChange: [{\n      type: Output\n    }],\n    pointColorChange: [{\n      type: Output\n    }],\n    pointSizeChange: [{\n      type: Output\n    }],\n    pointSymbolChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    showFirstLastChange: [{\n      type: Output\n    }],\n    showMinMaxChange: [{\n      type: Output\n    }],\n    sizeChange: [{\n      type: Output\n    }],\n    themeChange: [{\n      type: Output\n    }],\n    tooltipChange: [{\n      type: Output\n    }],\n    typeChange: [{\n      type: Output\n    }],\n    valueFieldChange: [{\n      type: Output\n    }],\n    winColorChange: [{\n      type: Output\n    }],\n    winlossThresholdChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxSparklineModule, {\n    declarations: function declarations() {\n      return [DxSparklineComponent];\n    },\n    imports: function imports() {\n      return [DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxSparklineComponent, DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxTemplateModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxSparklineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxSparklineComponent],\n      exports: [DxSparklineComponent, DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxSparklineComponent, DxSparklineModule };","map":{"version":3,"sources":["devextreme-angular/ui/sparkline/index.ts","devextreme-angular/ui/sparkline/devextreme-angular-ui-sparkline.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { UserDefinedElement } from 'devextreme/core/element';\r\nimport { format } from 'devextreme/ui/widget/ui.widget';\r\nimport { Font } from 'devextreme/viz/core/base_widget';\r\n\r\nimport DxSparkline from 'devextreme/viz/sparkline';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Sparkline UI component is a compact chart that contains only one series. Owing to their size, sparklines occupy very little space and can be easily collected in a table or embedded straight in text.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-sparkline',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxSparklineComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxSparkline;\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get argumentField(): string {\r\n        return this._getOption('argumentField');\r\n    }\r\n    set argumentField(value: string) {\r\n        this._setOption('argumentField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get barNegativeColor(): string {\r\n        return this._getOption('barNegativeColor');\r\n    }\r\n    set barNegativeColor(value: string) {\r\n        this._setOption('barNegativeColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get barPositiveColor(): string {\r\n        return this._getOption('barPositiveColor');\r\n    }\r\n    set barPositiveColor(value: string) {\r\n        this._setOption('barPositiveColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get firstLastColor(): string {\r\n        return this._getOption('firstLastColor');\r\n    }\r\n    set firstLastColor(value: string) {\r\n        this._setOption('firstLastColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get ignoreEmptyPoints(): boolean {\r\n        return this._getOption('ignoreEmptyPoints');\r\n    }\r\n    set ignoreEmptyPoints(value: boolean) {\r\n        this._setOption('ignoreEmptyPoints', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get lineColor(): string {\r\n        return this._getOption('lineColor');\r\n    }\r\n    set lineColor(value: string) {\r\n        this._setOption('lineColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get lineWidth(): number {\r\n        return this._getOption('lineWidth');\r\n    }\r\n    set lineWidth(value: number) {\r\n        this._setOption('lineWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get lossColor(): string {\r\n        return this._getOption('lossColor');\r\n    }\r\n    set lossColor(value: string) {\r\n        this._setOption('lossColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get maxColor(): string {\r\n        return this._getOption('maxColor');\r\n    }\r\n    set maxColor(value: string) {\r\n        this._setOption('maxColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get maxValue(): number {\r\n        return this._getOption('maxValue');\r\n    }\r\n    set maxValue(value: number) {\r\n        this._setOption('maxValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get minColor(): string {\r\n        return this._getOption('minColor');\r\n    }\r\n    set minColor(value: string) {\r\n        this._setOption('minColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get minValue(): number {\r\n        return this._getOption('minValue');\r\n    }\r\n    set minValue(value: number) {\r\n        this._setOption('minValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get pointColor(): string {\r\n        return this._getOption('pointColor');\r\n    }\r\n    set pointColor(value: string) {\r\n        this._setOption('pointColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get pointSize(): number {\r\n        return this._getOption('pointSize');\r\n    }\r\n    set pointSize(value: number) {\r\n        this._setOption('pointSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get pointSymbol(): string {\r\n        return this._getOption('pointSymbol');\r\n    }\r\n    set pointSymbol(value: string) {\r\n        this._setOption('pointSymbol', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showFirstLast(): boolean {\r\n        return this._getOption('showFirstLast');\r\n    }\r\n    set showFirstLast(value: boolean) {\r\n        this._setOption('showFirstLast', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showMinMax(): boolean {\r\n        return this._getOption('showMinMax');\r\n    }\r\n    set showMinMax(value: boolean) {\r\n        this._setOption('showMinMax', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get type(): string {\r\n        return this._getOption('type');\r\n    }\r\n    set type(value: string) {\r\n        this._setOption('type', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get valueField(): string {\r\n        return this._getOption('valueField');\r\n    }\r\n    set valueField(value: string) {\r\n        this._setOption('valueField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get winColor(): string {\r\n        return this._getOption('winColor');\r\n    }\r\n    set winColor(value: string) {\r\n        this._setOption('winColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get winlossThreshold(): number {\r\n        return this._getOption('winlossThreshold');\r\n    }\r\n    set winlossThreshold(value: number) {\r\n        this._setOption('winlossThreshold', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() argumentFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barNegativeColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barPositiveColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() firstLastColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() ignoreEmptyPointsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lineColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lineWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() lossColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointSymbolChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showFirstLastChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showMinMaxChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() typeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() valueFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() winColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() winlossThresholdChange: EventEmitter<number>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'argumentFieldChange' },\r\n            { emit: 'barNegativeColorChange' },\r\n            { emit: 'barPositiveColorChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'firstLastColorChange' },\r\n            { emit: 'ignoreEmptyPointsChange' },\r\n            { emit: 'lineColorChange' },\r\n            { emit: 'lineWidthChange' },\r\n            { emit: 'lossColorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'maxColorChange' },\r\n            { emit: 'maxValueChange' },\r\n            { emit: 'minColorChange' },\r\n            { emit: 'minValueChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointColorChange' },\r\n            { emit: 'pointSizeChange' },\r\n            { emit: 'pointSymbolChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showFirstLastChange' },\r\n            { emit: 'showMinMaxChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'valueFieldChange' },\r\n            { emit: 'winColorChange' },\r\n            { emit: 'winlossThresholdChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxSparkline(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxSparklineComponent\r\n  ],\r\n  exports: [\r\n    DxSparklineComponent,\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxSparklineModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}