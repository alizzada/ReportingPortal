{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxBarGauge from 'devextreme/viz/bar_gauge';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The BarGauge UI component contains several circular bars that each indicates a single value.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxBarGaugeComponent = /*#__PURE__*/function (_DxComponent) {\n  _inherits(DxBarGaugeComponent, _DxComponent);\n\n  var _super = _createSuper(DxBarGaugeComponent);\n\n  function DxBarGaugeComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    var _this;\n\n    _classCallCheck(this, DxBarGaugeComponent);\n\n    _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    _this._watcherHelper = _watcherHelper;\n    _this._idh = _idh;\n\n    _this._createEventEmitters([{\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'drawn',\n      emit: 'onDrawn'\n    }, {\n      subscribe: 'exported',\n      emit: 'onExported'\n    }, {\n      subscribe: 'exporting',\n      emit: 'onExporting'\n    }, {\n      subscribe: 'fileSaving',\n      emit: 'onFileSaving'\n    }, {\n      subscribe: 'incidentOccurred',\n      emit: 'onIncidentOccurred'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'tooltipHidden',\n      emit: 'onTooltipHidden'\n    }, {\n      subscribe: 'tooltipShown',\n      emit: 'onTooltipShown'\n    }, {\n      emit: 'animationChange'\n    }, {\n      emit: 'backgroundColorChange'\n    }, {\n      emit: 'barSpacingChange'\n    }, {\n      emit: 'baseValueChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'endValueChange'\n    }, {\n      emit: 'exportChange'\n    }, {\n      emit: 'geometryChange'\n    }, {\n      emit: 'labelChange'\n    }, {\n      emit: 'legendChange'\n    }, {\n      emit: 'loadingIndicatorChange'\n    }, {\n      emit: 'marginChange'\n    }, {\n      emit: 'paletteChange'\n    }, {\n      emit: 'paletteExtensionModeChange'\n    }, {\n      emit: 'pathModifiedChange'\n    }, {\n      emit: 'redrawOnResizeChange'\n    }, {\n      emit: 'relativeInnerRadiusChange'\n    }, {\n      emit: 'resolveLabelOverlappingChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'sizeChange'\n    }, {\n      emit: 'startValueChange'\n    }, {\n      emit: 'themeChange'\n    }, {\n      emit: 'titleChange'\n    }, {\n      emit: 'tooltipChange'\n    }, {\n      emit: 'valuesChange'\n    }]);\n\n    _this._idh.setHost(_assertThisInitialized(_this));\n\n    optionHost.setHost(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\r\n   * \r\n  \r\n   */\n\n\n  _createClass(DxBarGaugeComponent, [{\n    key: \"animation\",\n    get: function get() {\n      return this._getOption('animation');\n    },\n    set: function set(value) {\n      this._setOption('animation', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"backgroundColor\",\n    get: function get() {\n      return this._getOption('backgroundColor');\n    },\n    set: function set(value) {\n      this._setOption('backgroundColor', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"barSpacing\",\n    get: function get() {\n      return this._getOption('barSpacing');\n    },\n    set: function set(value) {\n      this._setOption('barSpacing', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"baseValue\",\n    get: function get() {\n      return this._getOption('baseValue');\n    },\n    set: function set(value) {\n      this._setOption('baseValue', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._getOption('disabled');\n    },\n    set: function set(value) {\n      this._setOption('disabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"elementAttr\",\n    get: function get() {\n      return this._getOption('elementAttr');\n    },\n    set: function set(value) {\n      this._setOption('elementAttr', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"endValue\",\n    get: function get() {\n      return this._getOption('endValue');\n    },\n    set: function set(value) {\n      this._setOption('endValue', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"export\",\n    get: function get() {\n      return this._getOption('export');\n    },\n    set: function set(value) {\n      this._setOption('export', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"geometry\",\n    get: function get() {\n      return this._getOption('geometry');\n    },\n    set: function set(value) {\n      this._setOption('geometry', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._getOption('label');\n    },\n    set: function set(value) {\n      this._setOption('label', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"legend\",\n    get: function get() {\n      return this._getOption('legend');\n    },\n    set: function set(value) {\n      this._setOption('legend', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"loadingIndicator\",\n    get: function get() {\n      return this._getOption('loadingIndicator');\n    },\n    set: function set(value) {\n      this._setOption('loadingIndicator', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"margin\",\n    get: function get() {\n      return this._getOption('margin');\n    },\n    set: function set(value) {\n      this._setOption('margin', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"palette\",\n    get: function get() {\n      return this._getOption('palette');\n    },\n    set: function set(value) {\n      this._setOption('palette', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"paletteExtensionMode\",\n    get: function get() {\n      return this._getOption('paletteExtensionMode');\n    },\n    set: function set(value) {\n      this._setOption('paletteExtensionMode', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"pathModified\",\n    get: function get() {\n      return this._getOption('pathModified');\n    },\n    set: function set(value) {\n      this._setOption('pathModified', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"redrawOnResize\",\n    get: function get() {\n      return this._getOption('redrawOnResize');\n    },\n    set: function set(value) {\n      this._setOption('redrawOnResize', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"relativeInnerRadius\",\n    get: function get() {\n      return this._getOption('relativeInnerRadius');\n    },\n    set: function set(value) {\n      this._setOption('relativeInnerRadius', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"resolveLabelOverlapping\",\n    get: function get() {\n      return this._getOption('resolveLabelOverlapping');\n    },\n    set: function set(value) {\n      this._setOption('resolveLabelOverlapping', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"rtlEnabled\",\n    get: function get() {\n      return this._getOption('rtlEnabled');\n    },\n    set: function set(value) {\n      this._setOption('rtlEnabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._getOption('size');\n    },\n    set: function set(value) {\n      this._setOption('size', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"startValue\",\n    get: function get() {\n      return this._getOption('startValue');\n    },\n    set: function set(value) {\n      this._setOption('startValue', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"theme\",\n    get: function get() {\n      return this._getOption('theme');\n    },\n    set: function set(value) {\n      this._setOption('theme', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._getOption('title');\n    },\n    set: function set(value) {\n      this._setOption('title', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"tooltip\",\n    get: function get() {\n      return this._getOption('tooltip');\n    },\n    set: function set(value) {\n      this._setOption('tooltip', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"values\",\n    get: function get() {\n      return this._getOption('values');\n    },\n    set: function set(value) {\n      this._setOption('values', value);\n    }\n  }, {\n    key: \"_createInstance\",\n    value: function _createInstance(element, options) {\n      return new DxBarGauge(element, options);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyWidget();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(DxBarGaugeComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n      this.setupChanges('palette', changes);\n      this.setupChanges('values', changes);\n    }\n  }, {\n    key: \"setupChanges\",\n    value: function setupChanges(prop, changes) {\n      if (!(prop in this._optionsToUpdate)) {\n        this._idh.setup(prop, changes);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this._idh.doCheck('palette');\n\n      this._idh.doCheck('values');\n\n      this._watcherHelper.checkWatchers();\n\n      _get(_getPrototypeOf(DxBarGaugeComponent.prototype), \"ngDoCheck\", this).call(this);\n\n      _get(_getPrototypeOf(DxBarGaugeComponent.prototype), \"clearChangedOptions\", this).call(this);\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      var isSetup = this._idh.setupSingle(name, value);\n\n      var isChanged = this._idh.getChanges(name, value) !== null;\n\n      if (isSetup || isChanged) {\n        _get(_getPrototypeOf(DxBarGaugeComponent.prototype), \"_setOption\", this).call(this, name, value);\n      }\n    }\n  }]);\n\n  return DxBarGaugeComponent;\n}(DxComponent);\n\nDxBarGaugeComponent.ɵfac = function DxBarGaugeComponent_Factory(t) {\n  return new (t || DxBarGaugeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nDxBarGaugeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DxBarGaugeComponent,\n  selectors: [[\"dx-bar-gauge\"]],\n  inputs: {\n    animation: \"animation\",\n    backgroundColor: \"backgroundColor\",\n    barSpacing: \"barSpacing\",\n    baseValue: \"baseValue\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    endValue: \"endValue\",\n    export: \"export\",\n    geometry: \"geometry\",\n    label: \"label\",\n    legend: \"legend\",\n    loadingIndicator: \"loadingIndicator\",\n    margin: \"margin\",\n    palette: \"palette\",\n    paletteExtensionMode: \"paletteExtensionMode\",\n    pathModified: \"pathModified\",\n    redrawOnResize: \"redrawOnResize\",\n    relativeInnerRadius: \"relativeInnerRadius\",\n    resolveLabelOverlapping: \"resolveLabelOverlapping\",\n    rtlEnabled: \"rtlEnabled\",\n    size: \"size\",\n    startValue: \"startValue\",\n    theme: \"theme\",\n    title: \"title\",\n    tooltip: \"tooltip\",\n    values: \"values\"\n  },\n  outputs: {\n    onDisposing: \"onDisposing\",\n    onDrawn: \"onDrawn\",\n    onExported: \"onExported\",\n    onExporting: \"onExporting\",\n    onFileSaving: \"onFileSaving\",\n    onIncidentOccurred: \"onIncidentOccurred\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    onTooltipHidden: \"onTooltipHidden\",\n    onTooltipShown: \"onTooltipShown\",\n    animationChange: \"animationChange\",\n    backgroundColorChange: \"backgroundColorChange\",\n    barSpacingChange: \"barSpacingChange\",\n    baseValueChange: \"baseValueChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    endValueChange: \"endValueChange\",\n    exportChange: \"exportChange\",\n    geometryChange: \"geometryChange\",\n    labelChange: \"labelChange\",\n    legendChange: \"legendChange\",\n    loadingIndicatorChange: \"loadingIndicatorChange\",\n    marginChange: \"marginChange\",\n    paletteChange: \"paletteChange\",\n    paletteExtensionModeChange: \"paletteExtensionModeChange\",\n    pathModifiedChange: \"pathModifiedChange\",\n    redrawOnResizeChange: \"redrawOnResizeChange\",\n    relativeInnerRadiusChange: \"relativeInnerRadiusChange\",\n    resolveLabelOverlappingChange: \"resolveLabelOverlappingChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    sizeChange: \"sizeChange\",\n    startValueChange: \"startValueChange\",\n    themeChange: \"themeChange\",\n    titleChange: \"titleChange\",\n    tooltipChange: \"tooltipChange\",\n    valuesChange: \"valuesChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxBarGaugeComponent_Template(rf, ctx) {},\n  styles: [\"[_nghost-%COMP%] {  display: block; }\"]\n});\n\nDxBarGaugeComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: DxTemplateHost\n  }, {\n    type: WatcherHelper\n  }, {\n    type: IterableDifferHelper\n  }, {\n    type: NestedOptionHost\n  }, {\n    type: TransferState\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"animation\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBarGaugeComponent.prototype, \"backgroundColor\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBarGaugeComponent.prototype, \"barSpacing\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBarGaugeComponent.prototype, \"baseValue\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBarGaugeComponent.prototype, \"disabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"elementAttr\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBarGaugeComponent.prototype, \"endValue\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"export\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"geometry\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"label\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"legend\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"loadingIndicator\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"margin\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"palette\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBarGaugeComponent.prototype, \"paletteExtensionMode\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBarGaugeComponent.prototype, \"pathModified\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBarGaugeComponent.prototype, \"redrawOnResize\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBarGaugeComponent.prototype, \"relativeInnerRadius\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBarGaugeComponent.prototype, \"resolveLabelOverlapping\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBarGaugeComponent.prototype, \"rtlEnabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"size\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBarGaugeComponent.prototype, \"startValue\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBarGaugeComponent.prototype, \"theme\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"title\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBarGaugeComponent.prototype, \"tooltip\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DxBarGaugeComponent.prototype, \"values\", null);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onDisposing\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onDrawn\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onExported\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onExporting\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onFileSaving\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onIncidentOccurred\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onInitialized\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onOptionChanged\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onTooltipHidden\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"onTooltipShown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"animationChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"backgroundColorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"barSpacingChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"baseValueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"disabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"elementAttrChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"endValueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"exportChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"geometryChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"labelChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"legendChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"loadingIndicatorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"marginChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"paletteChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"paletteExtensionModeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"pathModifiedChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"redrawOnResizeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"relativeInnerRadiusChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"resolveLabelOverlappingChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"rtlEnabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"sizeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"startValueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"themeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"titleChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"tooltipChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBarGaugeComponent.prototype, \"valuesChange\", void 0);\n\nDxBarGaugeComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxBarGaugeComponent);\n\nvar DxBarGaugeModule = function DxBarGaugeModule() {\n  _classCallCheck(this, DxBarGaugeModule);\n};\n\nDxBarGaugeModule.ɵfac = function DxBarGaugeModule_Factory(t) {\n  return new (t || DxBarGaugeModule)();\n};\n\nDxBarGaugeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DxBarGaugeModule\n});\nDxBarGaugeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxBarGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-bar-gauge',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper],\n      styles: [' :host {  display: block; }']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.DxTemplateHost\n    }, {\n      type: ɵngcc1.WatcherHelper\n    }, {\n      type: ɵngcc1.IterableDifferHelper\n    }, {\n      type: ɵngcc1.NestedOptionHost\n    }, {\n      type: ɵngcc2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    barSpacing: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    endValue: [{\n      type: Input\n    }],\n    export: [{\n      type: Input\n    }],\n    geometry: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    loadingIndicator: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    palette: [{\n      type: Input\n    }],\n    paletteExtensionMode: [{\n      type: Input\n    }],\n    pathModified: [{\n      type: Input\n    }],\n    redrawOnResize: [{\n      type: Input\n    }],\n    relativeInnerRadius: [{\n      type: Input\n    }],\n    resolveLabelOverlapping: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    startValue: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    values: [{\n      type: Input\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onDrawn: [{\n      type: Output\n    }],\n    onExported: [{\n      type: Output\n    }],\n    onExporting: [{\n      type: Output\n    }],\n    onFileSaving: [{\n      type: Output\n    }],\n    onIncidentOccurred: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onTooltipHidden: [{\n      type: Output\n    }],\n    onTooltipShown: [{\n      type: Output\n    }],\n    animationChange: [{\n      type: Output\n    }],\n    backgroundColorChange: [{\n      type: Output\n    }],\n    barSpacingChange: [{\n      type: Output\n    }],\n    baseValueChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    endValueChange: [{\n      type: Output\n    }],\n    exportChange: [{\n      type: Output\n    }],\n    geometryChange: [{\n      type: Output\n    }],\n    labelChange: [{\n      type: Output\n    }],\n    legendChange: [{\n      type: Output\n    }],\n    loadingIndicatorChange: [{\n      type: Output\n    }],\n    marginChange: [{\n      type: Output\n    }],\n    paletteChange: [{\n      type: Output\n    }],\n    paletteExtensionModeChange: [{\n      type: Output\n    }],\n    pathModifiedChange: [{\n      type: Output\n    }],\n    redrawOnResizeChange: [{\n      type: Output\n    }],\n    relativeInnerRadiusChange: [{\n      type: Output\n    }],\n    resolveLabelOverlappingChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    sizeChange: [{\n      type: Output\n    }],\n    startValueChange: [{\n      type: Output\n    }],\n    themeChange: [{\n      type: Output\n    }],\n    titleChange: [{\n      type: Output\n    }],\n    tooltipChange: [{\n      type: Output\n    }],\n    valuesChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxBarGaugeModule, {\n    declarations: function declarations() {\n      return [DxBarGaugeComponent];\n    },\n    imports: function imports() {\n      return [DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxBarGaugeComponent, DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxTemplateModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxBarGaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxBarGaugeComponent],\n      exports: [DxBarGaugeComponent, DxoAnimationModule, DxoExportModule, DxoGeometryModule, DxoLabelModule, DxoFontModule, DxoFormatModule, DxoLegendModule, DxoBorderModule, DxoItemTextFormatModule, DxoMarginModule, DxoTitleModule, DxoSubtitleModule, DxoLoadingIndicatorModule, DxoSizeModule, DxoTooltipModule, DxoShadowModule, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxBarGaugeComponent, DxBarGaugeModule };","map":{"version":3,"sources":["devextreme-angular/ui/bar-gauge/index.ts","devextreme-angular/ui/bar-gauge/devextreme-angular-ui-bar-gauge.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;;;;;;;AAAA;AACC;AACC;AACC;AAEF;AAAI;AAEF;AAAI;AACC;AAEF;AAAI;AAGJ;;AA6DN;AACA;AACA;AACA;;;;;;AACA,IAWa,mBAAb;AAAA;;AAAA;;AAgmBI,+BAAY,UAAZ,EAAoC,MAApC,EAAoD,YAApD,EACgB,cADhB,EAEgB,IAFhB,EAGQ,UAHR,EAIQ,aAJR,EAK6B,UAL7B,EAK4C;AAAA;;AAAA;;AAExC,8BAAM,UAAN,EAAkB,MAAlB,EAA0B,YAA1B,EAAwC,cAAxC,EAAwD,aAAxD,EAAuE,UAAvE;AANY,UAAA,cAAA,GAAA,cAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AAOZ,UAAK,oBAAL,CAA0B,CACtB;AAAE,MAAA,SAAS,EAAE,WAAb;AAA0B,MAAA,IAAI,EAAE;AAAhC,KADsB,EAEtB;AAAE,MAAA,SAAS,EAAE,OAAb;AAAsB,MAAA,IAAI,EAAE;AAA5B,KAFsB,EAGtB;AAAE,MAAA,SAAS,EAAE,UAAb;AAAyB,MAAA,IAAI,EAAE;AAA/B,KAHsB,EAItB;AAAE,MAAA,SAAS,EAAE,WAAb;AAA0B,MAAA,IAAI,EAAE;AAAhC,KAJsB,EAKtB;AAAE,MAAA,SAAS,EAAE,YAAb;AAA2B,MAAA,IAAI,EAAE;AAAjC,KALsB,EAMtB;AAAE,MAAA,SAAS,EAAE,kBAAb;AAAiC,MAAA,IAAI,EAAE;AAAvC,KANsB,EAOtB;AAAE,MAAA,SAAS,EAAE,aAAb;AAA4B,MAAA,IAAI,EAAE;AAAlC,KAPsB,EAQtB;AAAE,MAAA,SAAS,EAAE,eAAb;AAA8B,MAAA,IAAI,EAAE;AAApC,KARsB,EAStB;AAAE,MAAA,SAAS,EAAE,eAAb;AAA8B,MAAA,IAAI,EAAE;AAApC,KATsB,EAUtB;AAAE,MAAA,SAAS,EAAE,cAAb;AAA6B,MAAA,IAAI,EAAE;AAAnC,KAVsB,EAWtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAXsB,EAYtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAZsB,EAatB;AAAE,MAAA,IAAI,EAAE;AAAR,KAbsB,EActB;AAAE,MAAA,IAAI,EAAE;AAAR,KAdsB,EAetB;AAAE,MAAA,IAAI,EAAE;AAAR,KAfsB,EAgBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAhBsB,EAiBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAjBsB,EAkBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAlBsB,EAmBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAnBsB,EAoBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KApBsB,EAqBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KArBsB,EAsBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAtBsB,EAuBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAvBsB,EAwBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAxBsB,EAyBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAzBsB,EA0BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA1BsB,EA2BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA3BsB,EA4BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA5BsB,EA6BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA7BsB,EA8BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA9BsB,EA+BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA/BsB,EAgCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAhCsB,EAiCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAjCsB,EAkCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAlCsB,EAmCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAnCsB,EAoCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KApCsB,CAA1B;;AAuCA,UAAK,IAAL,CAAU,OAAV;;AACA,IAAA,UAAU,CAAC,OAAX;AA5CwC;AA6C3C;AACL;AACO;AAAS;AAAM;;;AAppBtB;AAAA;AAAA,SAQIA,eAAa;AACT,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACH,KAVL;AAAA,SAWI,aAAc,KAAd,EAA8E;AAC1E,WAAK,UAAL,CAAgB,WAAhB,EAA6B,KAA7B;AACH;AACL;AAEK;AACA;AACH;;AAlBF;AAAA;AAAA,SAqBIA,eAAmB;AACf,aAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAP;AACH,KAvBL;AAAA,SAwBI,aAAoB,KAApB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,iBAAhB,EAAmC,KAAnC;AACH;AACL;AAEK;AACA;AACH;;AA/BF;AAAA;AAAA,SAkCIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KApCL;AAAA,SAqCI,aAAe,KAAf,EAA4B;AACxB,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AA5CF;AAAA;AAAA,SA+CIA,eAAa;AACT,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACH,KAjDL;AAAA,SAkDI,aAAc,KAAd,EAA2B;AACvB,WAAK,UAAL,CAAgB,WAAhB,EAA6B,KAA7B;AACH;AACL;AAEK;AACA;AACH;;AAzDF;AAAA;AAAA,SA4DIA,eAAY;AACR,aAAO,KAAK,UAAL,CAAgB,UAAhB,CAAP;AACH,KA9DL;AAAA,SA+DI,aAAa,KAAb,EAA2B;AACvB,WAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B;AACH;AACL;AAEK;AACA;AACH;;AAtEF;AAAA;AAAA,SAyEIA,eAAe;AACX,aAAO,KAAK,UAAL,CAAgB,aAAhB,CAAP;AACH,KA3EL;AAAA,SA4EI,aAAgB,KAAhB,EAA0B;AACtB,WAAK,UAAL,CAAgB,aAAhB,EAA+B,KAA/B;AACH;AACL;AAEK;AACA;AACH;;AAnFF;AAAA;AAAA,SAsFIA,eAAY;AACR,aAAO,KAAK,UAAL,CAAgB,UAAhB,CAAP;AACH,KAxFL;AAAA,SAyFI,aAAa,KAAb,EAA0B;AACtB,WAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B;AACH;AACL;AAEK;AACA;AACH;;AAhGF;AAAA;AAAA,SAmGIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KArGL;AAAA,SAsGI,aAAW,KAAX,EAAoM;AAChM,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AACL;AAEK;AACA;AACH;;AA7GF;AAAA;AAAA,SAgHIA,eAAY;AACR,aAAO,KAAK,UAAL,CAAgB,UAAhB,CAAP;AACH,KAlHL;AAAA,SAmHI,aAAa,KAAb,EAA8D;AAC1D,WAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B;AACH;AACL;AAEK;AACA;AACH;;AA1HF;AAAA;AAAA,SA6HIA,eAAS;AACL,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KA/HL;AAAA,SAgII,aAAU,KAAV,EAA0K;AACtK,WAAK,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACH;AACL;AAEK;AACA;AACH;;AAvIF;AAAA;AAAA,SA0IIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KA5IL;AAAA,SA6II,aAAW,KAAX,EAAw+B;AACp+B,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AACL;AAEK;AACA;AACH;;AApJF;AAAA;AAAA,SAuJIA,eAAoB;AAChB,aAAO,KAAK,UAAL,CAAgB,kBAAhB,CAAP;AACH,KAzJL;AAAA,SA0JI,aAAqB,KAArB,EAAoG;AAChG,WAAK,UAAL,CAAgB,kBAAhB,EAAoC,KAApC;AACH;AACL;AAEK;AACA;AACH;;AAjKF;AAAA;AAAA,SAoKIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KAtKL;AAAA,SAuKI,aAAW,KAAX,EAAkF;AAC9E,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AACL;AAEK;AACA;AACH;;AA9KF;AAAA;AAAA,SAiLIA,eAAW;AACP,aAAO,KAAK,UAAL,CAAgB,SAAhB,CAAP;AACH,KAnLL;AAAA,SAoLI,aAAY,KAAZ,EAAyC;AACrC,WAAK,UAAL,CAAgB,SAAhB,EAA2B,KAA3B;AACH;AACL;AAEK;AACA;AACH;;AA3LF;AAAA;AAAA,SA8LIA,eAAwB;AACpB,aAAO,KAAK,UAAL,CAAgB,sBAAhB,CAAP;AACH,KAhML;AAAA,SAiMI,aAAyB,KAAzB,EAAsC;AAClC,WAAK,UAAL,CAAgB,sBAAhB,EAAwC,KAAxC;AACH;AACL;AAEK;AACA;AACH;;AAxMF;AAAA;AAAA,SA2MIA,eAAgB;AACZ,aAAO,KAAK,UAAL,CAAgB,cAAhB,CAAP;AACH,KA7ML;AAAA,SA8MI,aAAiB,KAAjB,EAA+B;AAC3B,WAAK,UAAL,CAAgB,cAAhB,EAAgC,KAAhC;AACH;AACL;AAEK;AACA;AACH;;AArNF;AAAA;AAAA,SAwNIA,eAAkB;AACd,aAAO,KAAK,UAAL,CAAgB,gBAAhB,CAAP;AACH,KA1NL;AAAA,SA2NI,aAAmB,KAAnB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,gBAAhB,EAAkC,KAAlC;AACH;AACL;AAEK;AACA;AACH;;AAlOF;AAAA;AAAA,SAqOIA,eAAuB;AACnB,aAAO,KAAK,UAAL,CAAgB,qBAAhB,CAAP;AACH,KAvOL;AAAA,SAwOI,aAAwB,KAAxB,EAAqC;AACjC,WAAK,UAAL,CAAgB,qBAAhB,EAAuC,KAAvC;AACH;AACL;AAEK;AACA;AACH;;AA/OF;AAAA;AAAA,SAkPIA,eAA2B;AACvB,aAAO,KAAK,UAAL,CAAgB,yBAAhB,CAAP;AACH,KApPL;AAAA,SAqPI,aAA4B,KAA5B,EAAyC;AACrC,WAAK,UAAL,CAAgB,yBAAhB,EAA2C,KAA3C;AACH;AACL;AAEK;AACA;AACH;;AA5PF;AAAA;AAAA,SA+PIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KAjQL;AAAA,SAkQI,aAAe,KAAf,EAA6B;AACzB,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AAzQF;AAAA;AAAA,SA4QIA,eAAQ;AACJ,aAAO,KAAK,UAAL,CAAgB,MAAhB,CAAP;AACH,KA9QL;AAAA,SA+QI,aAAS,KAAT,EAAmD;AAC/C,WAAK,UAAL,CAAgB,MAAhB,EAAwB,KAAxB;AACH;AACL;AAEK;AACA;AACH;;AAtRF;AAAA;AAAA,SAyRIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KA3RL;AAAA,SA4RI,aAAe,KAAf,EAA4B;AACxB,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AAnSF;AAAA;AAAA,SAsSIA,eAAS;AACL,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KAxSL;AAAA,SAySI,aAAU,KAAV,EAAuB;AACnB,WAAK,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACH;AACL;AAEK;AACA;AACH;;AAhTF;AAAA;AAAA,SAmTIA,eAAS;AACL,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KArTL;AAAA,SAsTI,aAAU,KAAV,EAAyX;AACrX,WAAK,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACH;AACL;AAEK;AACA;AACH;;AA7TF;AAAA;AAAA,SAgUIA,eAAW;AACP,aAAO,KAAK,UAAL,CAAgB,SAAhB,CAAP;AACH,KAlUL;AAAA,SAmUI,aAAY,KAAZ,EAAiiB;AAC7hB,WAAK,UAAL,CAAgB,SAAhB,EAA2B,KAA3B;AACH;AACL;AAEK;AACA;AACH;;AA1UF;AAAA;AAAA,SA6UIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KA/UL;AAAA,SAgVI,aAAW,KAAX,EAA+B;AAC3B,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AAlVL;AAAA;AAAA,WAopBc,yBAAgB,OAAhB,EAAyB,OAAzB,EAAgC;AAEtC,aAAO,IAAI,UAAJ,CAAe,OAAf,EAAwB,OAAxB,CAAP;AACH;AAvpBL;AAAA;AAAA,WA0pBI,uBAAW;AACP,WAAK,cAAL;AACH;AA5pBL;AAAA;AAAA,WA8pBI,qBAAY,OAAZ,EAAkC;AAC9B,2FAAkB,OAAlB;;AACA,WAAK,YAAL,CAAkB,SAAlB,EAA6B,OAA7B;AACA,WAAK,YAAL,CAAkB,QAAlB,EAA4B,OAA5B;AACH;AAlqBL;AAAA;AAAA,WAoqBI,sBAAa,IAAb,EAA2B,OAA3B,EAAiD;AAC7C,UAAI,EAAE,IAAI,IAAI,KAAK,gBAAf,CAAJ,EAAsC;AAClC,aAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,OAAtB;AACH;AACJ;AAxqBL;AAAA;AAAA,WA0qBI,qBAAS;AACL,WAAK,IAAL,CAAU,OAAV,CAAkB,SAAlB;;AACA,WAAK,IAAL,CAAU,OAAV,CAAkB,QAAlB;;AACA,WAAK,cAAL,CAAoB,aAApB;;AACA;;AACA;AACH;AAhrBL;AAAA;AAAA,WAkrBI,oBAAW,IAAX,EAAyB,KAAzB,EAAmC;AAC/B,UAAI,OAAO,GAAG,KAAK,IAAL,CAAU,WAAV,CAAsB,IAAtB,EAA4B,KAA5B,CAAd;;AACA,UAAI,SAAS,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,IAArB,EAA2B,KAA3B,MAAsC,IAAtD;;AAEA,UAAI,OAAO,IAAI,SAAf,EAA0B;AACtB,4FAAiB,IAAjB,EAAuB,KAAvB;AACH;AACJ;AAzrBL;;AAAA;AAAA,EAAyC,WAAzC,CAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAqsBC,uC;;;AACD,mBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAGiB;AAAA,IAAA,IAAA,EA9FW;AA8FX,GAHjB,EA3F2C;AAAA,IAAA,IAAA,EAAK;AAAL,GA2F3C,EA3F2D;AAAA,IAAA,IAAA,EAAW;AAAX,GA2F3D,EA1FE;AAAA,IAAA,IAAA,EAAkC;AAAlC,GA0FF,EAzFE;AAAA,IAAA,IAAA,EAAwB;AAAxB,GAyFF,EAxFE;AAAA,IAAA,IAAA,EAAsB;AAAtB,GAwFF,EAvFE;AAAA,IAAA,IAAA,EAAyB;AAAzB,GAuFF,EAtFE;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAWC,MAAX;AAAiB,MAAA,IAAA,EAAA,CAAC,WAAD;AAAjB,KAAA;AAAA,GAsFF,CAAA;AAAA,CAAA;;AAnrBID,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACE,mBAAA,CAAA,SADFA,EACE,WADFA,EACE,IADFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADAA,CAAAA,EAC+C,mBAAA,CAAA,SAD/CA,EAC+C,iBAD/CA,EAC+C,IAD/CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADLA,CAAAA,EAGF,mBAAA,CAAA,SAHEA,EAGF,YAHEA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACM,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADNA,CAAAA,EAGA,mBAAA,CAAA,SAHAA,EAGA,WAHAA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADPA,CAAAA,EAGG,mBAAA,CAAA,SAHHA,EAGG,UAHHA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADPA,CAAAA,EAGD,mBAAA,CAAA,SAHCA,EAGD,aAHCA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADPA,CAAAA,EAGE,mBAAA,CAAA,SAHFA,EAGE,UAHFA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,QAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACkB,mBAAA,CAAA,SADlBA,EACkB,UADlBA,EACkB,IADlBA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,OAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,QAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,kBAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACF,mBAAA,CAAA,SADEA,EACF,QADEA,EACF,IADEA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACuC,mBAAA,CAAA,SADvCA,EACuC,SADvCA,EACuC,IADvCA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAC0C,mBAAA,CAAA,SAD1CA,EAC0C,sBAD1CA,EAC0C,IAD1CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACG,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADHA,CAAAA,EAEE,mBAAA,CAAA,SAFFA,EAEE,cAFFA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADDA,CAAAA,EAEF,mBAAA,CAAA,SAFEA,EAEF,gBAFEA,EAEF,IAFEA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACJ,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADIA,CAAAA,EAC2C,mBAAA,CAAA,SAD3CA,EAC2C,qBAD3CA,EAC2C,IAD3CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACuC,mBAAA,CAAA,SADvCA,EACuC,yBADvCA,EACuC,IADvCA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADLA,CAAAA,EAGD,mBAAA,CAAA,SAHCA,EAGD,YAHCA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAC6B,mBAAA,CAAA,SAD7BA,EAC6B,MAD7BA,EAC6B,IAD7BA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADLA,CAAAA,EAGF,mBAAA,CAAA,SAHEA,EAGF,YAHEA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACU,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADVA,CAAAA,EAGQ,mBAAA,CAAA,SAHRA,EAGQ,OAHRA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,OAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,mBAAA,CAAA,SAApFA,EAAoF,SAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAGqB,KAHrB,CAAGA,EAG2B,UAAA,CAAA,mBAAA,EAAA,CAAT,KAAS,CAAA,CAH3BA,CAAAA,EAG2B,mBAAA,CAAA,SAH3BA,EAG2B,QAH3BA,EAEC,IAFDA,CAAAA;;AAaUA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,mBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAO,YAAP,CAAFA,CAAAA,EAAwB,mBAAA,CAAA,SAAxBA,EAAwB,SAAxBA,EAAwB,KAAA,CAAxBA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAU,YAAV,CAAFA,CAAAA,EAA2B,mBAAA,CAAA,SAA3BA,EAA2B,YAA3BA,EAA2B,KAAA,CAA3BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,mBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,mBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,mBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAa,YAAb,CAAFA,CAAAA,EAA8B,mBAAA,CAAA,SAA9BA,EAA8B,eAA9BA,EAA8B,KAAA,CAA9BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,mBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,mBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,mBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,mBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAqB,YAArB,CAAFA,CAAAA,EAAsC,mBAAA,CAAA,SAAtCA,EAAsC,uBAAtCA,EAAsC,KAAA,CAAtCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,mBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,mBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,mBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAiB,YAAjB,CAAFA,CAAAA,EAAkC,mBAAA,CAAA,SAAlCA,EAAkC,mBAAlCA,EAAkC,KAAA,CAAlCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,mBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,mBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,mBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,mBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,mBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAsB,YAAtB,CAAFA,CAAAA,EAAuC,mBAAA,CAAA,SAAvCA,EAAuC,wBAAvCA,EAAuC,KAAA,CAAvCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,mBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAa,YAAb,CAAFA,CAAAA,EAA8B,mBAAA,CAAA,SAA9BA,EAA8B,eAA9BA,EAA8B,KAAA,CAA9BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAA0B,YAA1B,CAAFA,CAAAA,EAA2C,mBAAA,CAAA,SAA3CA,EAA2C,4BAA3CA,EAA2C,KAAA,CAA3CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,mBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAoB,YAApB,CAAFA,CAAAA,EAAqC,mBAAA,CAAA,SAArCA,EAAqC,sBAArCA,EAAqC,KAAA,CAArCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAyB,YAAzB,CAAFA,CAAAA,EAA0C,mBAAA,CAAA,SAA1CA,EAA0C,2BAA1CA,EAA0C,KAAA,CAA1CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAA6B,YAA7B,CAAFA,CAAAA,EAA8C,mBAAA,CAAA,SAA9CA,EAA8C,+BAA9CA,EAA8C,KAAA,CAA9CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,mBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAU,YAAV,CAAFA,CAAAA,EAA2B,mBAAA,CAAA,SAA3BA,EAA2B,YAA3BA,EAA2B,KAAA,CAA3BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,mBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,mBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,mBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAa,YAAb,CAAFA,CAAAA,EAA8B,mBAAA,CAAA,SAA9BA,EAA8B,eAA9BA,EAA8B,KAAA,CAA9BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,mBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAxlBD,mBAAmB,GAAA,UAAA,CAA5B,CAXH,OAAA,CAAA,CAAA,EAAS,MAgnBS,CA/mBf,WA+mBe,CAhnBlB,CAWG,EAVU,UAAA,CAAA,mBAAA,EACF,CAAI,UAAJ,EAER,MAFQ,EAEC,cAFD,EAGU,aAHV,EAIS,oBAJT,EAKY,gBALZ,EA6mBe,aA7mBf,EAMgB,MANhB,CADE,CAUV,CAA4B,EAF3B,mBAE2B,CAAnB;;AA2rBZ,IA+CY,gBAlvB8B;AAAA;AAAA,CAmsB1C;;AA+CY,gBAAA,CAAgB,IAAhB,GAAgB,SA9C5B,wBA8C4B,CA7C3B,CA6C2B,EA7C3B;AAAA,SAAS,KAAA,CAAA,IAAA,gBAAA,GAAT;AACoB,CA4CT;;AA3CT,gBAAA,CAAA,IAAA,GAAA,MAAe,CAAA,gBAAf,CACA;AAAA,EAAA,IAAA,EAAA;AAAA,CADA,CAAA;AAEc,gBAAA,CAAA,IAAA,GAAA,MACd,CAAA,gBADc,CACD;AAAA,EAAA,OACb,EAAA,CAAA,CAAe,kBAAf,EACe,eADf,EAEe,iBAFf,EAGuB,cAHvB,EAIe,aAJf,EAKA,eALA,EAMA,eANA,EAOA,eAPA,EAOyB,uBAPzB,EASA,eATA,EAUA,cAVA,EAWA,iBAXA,EAYA,yBAZA,EAaA,aAbA,EAa0B,gBAb1B,EAeY,eAfZ,EAgBmB,mBAhBnB,EAkBK,gBAlBL,EAmBmB,0BAnBnB,CAAA,EAoBkB,kBApBlB,EAqBe,eArBf,EAsBA,iBAtBA,EAuBA,cAvBA,EAwBA,aAxBA,EAwBa,eAxBb,EAyBe,eAzBf,EA0Be,eA1Bf,EA2BA,uBA3BA,EA4BuB,eA5BvB,EA6BA,cA7BA,EA6Be,iBA7Bf,EA8Bc,yBA9Bd,EA+BiB,aA/BjB,EAgCyB,gBAhCzB,EAiCA,eAjCA,EAkCA,gBAlCA;AADa,CADC,CAAA;;CAqCd,YAAA;AAAA,GAAA,OAAA,SAAA,KAAe,WAAf,IACA,SADA,KACgB,MACjB,CAAA,iBADiB,CAGP,mBAHO,EAGa,CAAA;mBAAA;;;;;;;AAAA,GAAA,CAHb,E;;;;;;;;;;;;;;;;;;;;;;GAAA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,CADhB;;;;;;;;;;;;;;;;;;;;;;;;;;AAI8B,C;ACn0BlC;AACC;AACC;;;AAEF,SAAA,mBAAA,EAAA,gBAAA","sourcesContent":["/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport { UserDefinedElement } from 'devextreme/core/element';\r\nimport { format } from 'devextreme/ui/widget/ui.widget';\r\nimport { Font } from 'devextreme/viz/core/base_widget';\r\n\r\nimport DxBarGauge from 'devextreme/viz/bar_gauge';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoAnimationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGeometryModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLabelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLegendModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoItemTextFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSubtitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadingIndicatorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The BarGauge UI component contains several circular bars that each indicates a single value.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-bar-gauge',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxBarGaugeComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxBarGauge;\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get animation(): { duration?: number, easing?: string, enabled?: boolean } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: { duration?: number, easing?: string, enabled?: boolean }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get backgroundColor(): string {\r\n        return this._getOption('backgroundColor');\r\n    }\r\n    set backgroundColor(value: string) {\r\n        this._setOption('backgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get barSpacing(): number {\r\n        return this._getOption('barSpacing');\r\n    }\r\n    set barSpacing(value: number) {\r\n        this._setOption('barSpacing', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get baseValue(): number {\r\n        return this._getOption('baseValue');\r\n    }\r\n    set baseValue(value: number) {\r\n        this._setOption('baseValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get endValue(): number {\r\n        return this._getOption('endValue');\r\n    }\r\n    set endValue(value: number) {\r\n        this._setOption('endValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get geometry(): { endAngle?: number, startAngle?: number } {\r\n        return this._getOption('geometry');\r\n    }\r\n    set geometry(value: { endAngle?: number, startAngle?: number }) {\r\n        this._setOption('geometry', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get label(): { connectorColor?: string, connectorWidth?: number, customizeText?: Function, font?: Font, format?: format | string, indent?: number, visible?: boolean } {\r\n        return this._getOption('label');\r\n    }\r\n    set label(value: { connectorColor?: string, connectorWidth?: number, customizeText?: Function, font?: Font, format?: format | string, indent?: number, visible?: boolean }) {\r\n        this._setOption('label', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get legend(): { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, itemsAlignment?: string, itemTextFormat?: format | string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean } {\r\n        return this._getOption('legend');\r\n    }\r\n    set legend(value: { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, itemsAlignment?: string, itemTextFormat?: format | string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }) {\r\n        this._setOption('legend', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, font?: Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, font?: Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get palette(): string | Array<string> {\r\n        return this._getOption('palette');\r\n    }\r\n    set palette(value: string | Array<string>) {\r\n        this._setOption('palette', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get paletteExtensionMode(): string {\r\n        return this._getOption('paletteExtensionMode');\r\n    }\r\n    set paletteExtensionMode(value: string) {\r\n        this._setOption('paletteExtensionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get relativeInnerRadius(): number {\r\n        return this._getOption('relativeInnerRadius');\r\n    }\r\n    set relativeInnerRadius(value: number) {\r\n        this._setOption('relativeInnerRadius', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get resolveLabelOverlapping(): string {\r\n        return this._getOption('resolveLabelOverlapping');\r\n    }\r\n    set resolveLabelOverlapping(value: string) {\r\n        this._setOption('resolveLabelOverlapping', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get startValue(): number {\r\n        return this._getOption('startValue');\r\n    }\r\n    set startValue(value: number) {\r\n        this._setOption('startValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get title(): string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get values(): Array<number> {\r\n        return this._getOption('values');\r\n    }\r\n    set values(value: Array<number>) {\r\n        this._setOption('values', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() animationChange: EventEmitter<{ duration?: number, easing?: string, enabled?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() backgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barSpacingChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() baseValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() endValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() geometryChange: EventEmitter<{ endAngle?: number, startAngle?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() labelChange: EventEmitter<{ connectorColor?: string, connectorWidth?: number, customizeText?: Function, font?: Font, format?: format | string, indent?: number, visible?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() legendChange: EventEmitter<{ backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, itemsAlignment?: string, itemTextFormat?: format | string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, font?: Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() paletteChange: EventEmitter<string | Array<string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() paletteExtensionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() relativeInnerRadiusChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() resolveLabelOverlappingChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() startValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() valuesChange: EventEmitter<Array<number>>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'backgroundColorChange' },\r\n            { emit: 'barSpacingChange' },\r\n            { emit: 'baseValueChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'endValueChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'geometryChange' },\r\n            { emit: 'labelChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'relativeInnerRadiusChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'startValueChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'valuesChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxBarGauge(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('values', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('values');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAnimationModule,\r\n    DxoExportModule,\r\n    DxoGeometryModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoLegendModule,\r\n    DxoBorderModule,\r\n    DxoItemTextFormatModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoShadowModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxBarGaugeComponent\r\n  ],\r\n  exports: [\r\n    DxBarGaugeComponent,\r\n    DxoAnimationModule,\r\n    DxoExportModule,\r\n    DxoGeometryModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoLegendModule,\r\n    DxoBorderModule,\r\n    DxoItemTextFormatModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoShadowModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxBarGaugeModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}