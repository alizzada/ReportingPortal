{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/core/events_strategy.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Callbacks from \"./utils/callbacks\";\nimport { each } from \"./utils/iterator\";\nimport { isFunction, isPlainObject } from \"./utils/type\";\nexport var EventsStrategy = /*#__PURE__*/function () {\n  function EventsStrategy(owner) {\n    _classCallCheck(this, EventsStrategy);\n\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    this._events = {};\n    this._owner = owner;\n    this._options = options;\n  }\n\n  _createClass(EventsStrategy, [{\n    key: \"hasEvent\",\n    value: function hasEvent(eventName) {\n      var callbacks = this._events[eventName];\n      return callbacks ? callbacks.has() : false;\n    }\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(eventName, eventArgs) {\n      var callbacks = this._events[eventName];\n\n      if (callbacks) {\n        callbacks.fireWith(this._owner, eventArgs);\n      }\n\n      return this._owner;\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, eventHandler) {\n      var _this = this;\n\n      if (isPlainObject(eventName)) {\n        each(eventName, function (e, h) {\n          _this.on(e, h);\n        });\n      } else {\n        var callbacks = this._events[eventName];\n\n        if (!callbacks) {\n          callbacks = Callbacks({\n            syncStrategy: this._options.syncStrategy\n          });\n          this._events[eventName] = callbacks;\n        }\n\n        var addFn = callbacks.originalAdd || callbacks.add;\n        addFn.call(callbacks, eventHandler);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventName, eventHandler) {\n      var callbacks = this._events[eventName];\n\n      if (callbacks) {\n        if (isFunction(eventHandler)) {\n          callbacks.remove(eventHandler);\n        } else {\n          callbacks.empty();\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      each(this._events, function (eventName, event) {\n        event.empty();\n      });\n    }\n  }], [{\n    key: \"create\",\n    value: function create(owner, strategy) {\n      if (strategy) {\n        return isFunction(strategy) ? strategy(owner) : strategy;\n      } else {\n        return new EventsStrategy(owner);\n      }\n    }\n  }]);\n\n  return EventsStrategy;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/core/events_strategy.js"],"names":["Callbacks","each","isFunction","isPlainObject","EventsStrategy","owner","options","arguments","length","_events","_owner","_options","eventName","callbacks","has","eventArgs","fireWith","eventHandler","e","h","on","syncStrategy","addFn","originalAdd","add","call","remove","empty","event","strategy"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SACIC,IADJ,QAEO,kBAFP;AAGA,SACIC,UADJ,EAEIC,aAFJ,QAGO,cAHP;AAIA,WAAaC,cAAb;AACI,0BAAYC,KAAZ,EAAmB;AAAA;;AACf,QAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,EAA/E;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKC,MAAL,GAAcL,KAAd;AACA,SAAKM,QAAL,GAAgBL,OAAhB;AACH;;AANL;AAAA;AAAA,WAcI,kBAASM,SAAT,EAAoB;AAChB,UAAIC,SAAS,GAAG,KAAKJ,OAAL,CAAaG,SAAb,CAAhB;AACA,aAAOC,SAAS,GAAGA,SAAS,CAACC,GAAV,EAAH,GAAqB,KAArC;AACH;AAjBL;AAAA;AAAA,WAkBI,mBAAUF,SAAV,EAAqBG,SAArB,EAAgC;AAC5B,UAAIF,SAAS,GAAG,KAAKJ,OAAL,CAAaG,SAAb,CAAhB;;AACA,UAAIC,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACG,QAAV,CAAmB,KAAKN,MAAxB,EAAgCK,SAAhC;AACH;;AACD,aAAO,KAAKL,MAAZ;AACH;AAxBL;AAAA;AAAA,WAyBI,YAAGE,SAAH,EAAcK,YAAd,EAA4B;AAAA;;AACxB,UAAId,aAAa,CAACS,SAAD,CAAjB,EAA8B;AAC1BX,QAAAA,IAAI,CAACW,SAAD,EAAY,UAACM,CAAD,EAAIC,CAAJ,EAAU;AACtB,UAAA,KAAI,CAACC,EAAL,CAAQF,CAAR,EAAWC,CAAX;AACH,SAFG,CAAJ;AAGH,OAJD,MAIO;AACH,YAAIN,SAAS,GAAG,KAAKJ,OAAL,CAAaG,SAAb,CAAhB;;AACA,YAAI,CAACC,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAGb,SAAS,CAAC;AAClBqB,YAAAA,YAAY,EAAE,KAAKV,QAAL,CAAcU;AADV,WAAD,CAArB;AAGA,eAAKZ,OAAL,CAAaG,SAAb,IAA0BC,SAA1B;AACH;;AACD,YAAIS,KAAK,GAAGT,SAAS,CAACU,WAAV,IAAyBV,SAAS,CAACW,GAA/C;AACAF,QAAAA,KAAK,CAACG,IAAN,CAAWZ,SAAX,EAAsBI,YAAtB;AACH;AACJ;AAzCL;AAAA;AAAA,WA0CI,aAAIL,SAAJ,EAAeK,YAAf,EAA6B;AACzB,UAAIJ,SAAS,GAAG,KAAKJ,OAAL,CAAaG,SAAb,CAAhB;;AACA,UAAIC,SAAJ,EAAe;AACX,YAAIX,UAAU,CAACe,YAAD,CAAd,EAA8B;AAC1BJ,UAAAA,SAAS,CAACa,MAAV,CAAiBT,YAAjB;AACH,SAFD,MAEO;AACHJ,UAAAA,SAAS,CAACc,KAAV;AACH;AACJ;AACJ;AAnDL;AAAA;AAAA,WAoDI,mBAAU;AACN1B,MAAAA,IAAI,CAAC,KAAKQ,OAAN,EAAe,UAACG,SAAD,EAAYgB,KAAZ,EAAsB;AACrCA,QAAAA,KAAK,CAACD,KAAN;AACH,OAFG,CAAJ;AAGH;AAxDL;AAAA;AAAA,WAOI,gBAActB,KAAd,EAAqBwB,QAArB,EAA+B;AAC3B,UAAIA,QAAJ,EAAc;AACV,eAAO3B,UAAU,CAAC2B,QAAD,CAAV,GAAuBA,QAAQ,CAACxB,KAAD,CAA/B,GAAyCwB,QAAhD;AACH,OAFD,MAEO;AACH,eAAO,IAAIzB,cAAJ,CAAmBC,KAAnB,CAAP;AACH;AACJ;AAbL;;AAAA;AAAA","sourcesContent":["/**\r\n * DevExtreme (esm/core/events_strategy.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Callbacks from \"./utils/callbacks\";\r\nimport {\r\n    each\r\n} from \"./utils/iterator\";\r\nimport {\r\n    isFunction,\r\n    isPlainObject\r\n} from \"./utils/type\";\r\nexport class EventsStrategy {\r\n    constructor(owner) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        this._events = {};\r\n        this._owner = owner;\r\n        this._options = options\r\n    }\r\n    static create(owner, strategy) {\r\n        if (strategy) {\r\n            return isFunction(strategy) ? strategy(owner) : strategy\r\n        } else {\r\n            return new EventsStrategy(owner)\r\n        }\r\n    }\r\n    hasEvent(eventName) {\r\n        var callbacks = this._events[eventName];\r\n        return callbacks ? callbacks.has() : false\r\n    }\r\n    fireEvent(eventName, eventArgs) {\r\n        var callbacks = this._events[eventName];\r\n        if (callbacks) {\r\n            callbacks.fireWith(this._owner, eventArgs)\r\n        }\r\n        return this._owner\r\n    }\r\n    on(eventName, eventHandler) {\r\n        if (isPlainObject(eventName)) {\r\n            each(eventName, (e, h) => {\r\n                this.on(e, h)\r\n            })\r\n        } else {\r\n            var callbacks = this._events[eventName];\r\n            if (!callbacks) {\r\n                callbacks = Callbacks({\r\n                    syncStrategy: this._options.syncStrategy\r\n                });\r\n                this._events[eventName] = callbacks\r\n            }\r\n            var addFn = callbacks.originalAdd || callbacks.add;\r\n            addFn.call(callbacks, eventHandler)\r\n        }\r\n    }\r\n    off(eventName, eventHandler) {\r\n        var callbacks = this._events[eventName];\r\n        if (callbacks) {\r\n            if (isFunction(eventHandler)) {\r\n                callbacks.remove(eventHandler)\r\n            } else {\r\n                callbacks.empty()\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        each(this._events, (eventName, event) => {\r\n            event.empty()\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}