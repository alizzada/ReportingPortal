{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/range_selector/sliders_controller.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport { utils, consts } from \"./common\";\nimport Slider from \"./slider\";\nimport { normalizeEnum as _normalizeEnum, rangesAreEqual, adjustVisualRange } from \"../core/utils\";\nimport { isNumeric, isDefined } from \"../../core/utils/type\";\nimport { adjust } from \"../../core/utils/math\";\nvar animationSettings = utils.animationSettings;\nvar emptySliderMarkerText = consts.emptySliderMarkerText;\n\nfunction buildRectPoints(left, top, right, bottom) {\n  return [left, top, right, top, right, bottom, left, bottom];\n}\n\nfunction isLess(a, b) {\n  return a < b;\n}\n\nfunction isGreater(a, b) {\n  return a > b;\n}\n\nfunction selectClosestValue(target, values) {\n  var start = 0;\n  var end = values ? values.length - 1 : 0;\n  var middle;\n  var val = target;\n\n  while (end - start > 1) {\n    middle = start + end >> 1;\n    val = values[middle];\n\n    if (val === target) {\n      return target;\n    } else if (target < val) {\n      end = middle;\n    } else {\n      start = middle;\n    }\n  }\n\n  if (values) {\n    val = values[target - values[start] <= values[end] - target ? start : end];\n  }\n\n  return val;\n}\n\nfunction dummyProcessSelectionChanged() {\n  this._lastSelectedRange = this.getSelectedRange();\n  delete this._processSelectionChanged;\n}\n\nfunction suppressSetSelectedRange(controller) {\n  controller.setSelectedRange = noop;\n\n  if (controller._processSelectionChanged === dummyProcessSelectionChanged) {\n    controller._processSelectionChanged();\n  }\n}\n\nfunction restoreSetSelectedRange(controller) {\n  delete controller.setSelectedRange;\n}\n\nexport function SlidersController(params) {\n  var sliderParams = {\n    renderer: params.renderer,\n    root: params.root,\n    trackersGroup: params.trackersGroup,\n    translator: params.translator\n  };\n  this._params = params;\n  this._areaTracker = params.renderer.path(null, \"area\").attr({\n    class: \"area-tracker\",\n    fill: \"#000000\",\n    opacity: 1e-4\n  }).append(params.trackersGroup);\n  this._selectedAreaTracker = params.renderer.path(null, \"area\").attr({\n    class: \"selected-area-tracker\",\n    fill: \"#000000\",\n    opacity: 1e-4\n  }).append(params.trackersGroup);\n  this._shutter = params.renderer.path(null, \"area\").append(params.root);\n  this._sliders = [new Slider(sliderParams, 0), new Slider(sliderParams, 1)];\n  this._processSelectionChanged = dummyProcessSelectionChanged;\n}\nSlidersController.prototype = {\n  constructor: SlidersController,\n  dispose: function dispose() {\n    this._sliders[0].dispose();\n\n    this._sliders[1].dispose();\n  },\n  getTrackerTargets: function getTrackerTargets() {\n    return {\n      area: this._areaTracker,\n      selectedArea: this._selectedAreaTracker,\n      sliders: this._sliders\n    };\n  },\n  _processSelectionChanged: function _processSelectionChanged(e) {\n    var selectedRange = this.getSelectedRange();\n\n    if (!rangesAreEqual(selectedRange, this._lastSelectedRange)) {\n      this._params.updateSelectedRange(selectedRange, this._lastSelectedRange, e);\n\n      this._lastSelectedRange = selectedRange;\n    }\n  },\n  update: function update(verticalRange, behavior, isCompactMode, sliderHandleOptions, sliderMarkerOptions, shutterOptions, rangeBounds, fullTicks, selectedRangeColor) {\n    var screenRange = this._params.translator.getScreenRange();\n\n    this._verticalRange = verticalRange;\n    this._minRange = rangeBounds.minRange;\n    this._maxRange = rangeBounds.maxRange;\n    this._animationEnabled = behavior.animationEnabled && this._params.renderer.animationEnabled();\n    this._allowSlidersSwap = behavior.allowSlidersSwap;\n\n    this._sliders[0].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\n\n    this._sliders[1].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\n\n    this._sliders[0]._position = this._sliders[1]._position = screenRange[0];\n    this._values = !this._params.translator.isValueProlonged && behavior.snapToTicks ? fullTicks : null;\n\n    this._areaTracker.attr({\n      points: buildRectPoints(screenRange[0], verticalRange[0], screenRange[1], verticalRange[1])\n    });\n\n    this._isCompactMode = isCompactMode;\n    this._shutterOffset = sliderHandleOptions.width / 2;\n\n    this._updateSelectedView(shutterOptions, selectedRangeColor);\n\n    this._isOnMoving = \"onmoving\" === _normalizeEnum(behavior.callValueChanged);\n\n    this._updateSelectedRange();\n\n    this._applyTotalPosition(false);\n  },\n  _updateSelectedView: function _updateSelectedView(shutterOptions, selectedRangeColor) {\n    var settings = {\n      fill: null,\n      \"fill-opacity\": null,\n      stroke: null,\n      \"stroke-width\": null\n    };\n\n    if (this._isCompactMode) {\n      settings.stroke = selectedRangeColor;\n      settings[\"stroke-width\"] = 3;\n      settings.sharp = \"v\";\n    } else {\n      settings.fill = shutterOptions.color;\n      settings[\"fill-opacity\"] = shutterOptions.opacity;\n    }\n\n    this._shutter.attr(settings);\n  },\n  _updateSelectedRange: function _updateSelectedRange() {\n    var sliders = this._sliders;\n    sliders[0].cancelAnimation();\n    sliders[1].cancelAnimation();\n\n    this._shutter.stopAnimation();\n\n    if (this._params.translator.getBusinessRange().isEmpty()) {\n      sliders[0]._setText(emptySliderMarkerText);\n\n      sliders[1]._setText(emptySliderMarkerText);\n\n      sliders[0]._value = sliders[1]._value = void 0;\n      sliders[0]._position = this._params.translator.getScreenRange()[0];\n      sliders[1]._position = this._params.translator.getScreenRange()[1];\n\n      this._applyTotalPosition(false);\n\n      suppressSetSelectedRange(this);\n    } else {\n      restoreSetSelectedRange(this);\n    }\n  },\n  _applyTotalPosition: function _applyTotalPosition(isAnimated) {\n    var sliders = this._sliders;\n    isAnimated = this._animationEnabled && isAnimated;\n    sliders[0].applyPosition(isAnimated);\n    sliders[1].applyPosition(isAnimated);\n    var areOverlapped = sliders[0].getCloudBorder() > sliders[1].getCloudBorder();\n    sliders[0].setOverlapped(areOverlapped);\n    sliders[1].setOverlapped(areOverlapped);\n\n    this._applyAreaTrackersPosition();\n\n    this._applySelectedRangePosition(isAnimated);\n  },\n  _applyAreaTrackersPosition: function _applyAreaTrackersPosition() {\n    var position1 = this._sliders[0].getPosition();\n\n    var position2 = this._sliders[1].getPosition();\n\n    this._selectedAreaTracker.attr({\n      points: buildRectPoints(position1, this._verticalRange[0], position2, this._verticalRange[1])\n    }).css({\n      cursor: Math.abs(this._params.translator.getScreenRange()[1] - this._params.translator.getScreenRange()[0] - position2 + position1) < .001 ? \"default\" : \"pointer\"\n    });\n  },\n  _applySelectedRangePosition: function _applySelectedRangePosition(isAnimated) {\n    var verticalRange = this._verticalRange;\n\n    var pos1 = this._sliders[0].getPosition();\n\n    var pos2 = this._sliders[1].getPosition();\n\n    var screenRange;\n    var points;\n\n    if (this._isCompactMode) {\n      points = [pos1 + Math.ceil(this._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2, pos2 - Math.floor(this._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2];\n    } else {\n      screenRange = this._params.axis.getVisibleArea();\n      points = [buildRectPoints(screenRange[0], verticalRange[0], Math.max(pos1 - Math.floor(this._shutterOffset), screenRange[0]), verticalRange[1]), buildRectPoints(screenRange[1], verticalRange[0], Math.min(pos2 + Math.ceil(this._shutterOffset), screenRange[1]), verticalRange[1])];\n    }\n\n    if (isAnimated) {\n      this._shutter.animate({\n        points: points\n      }, animationSettings);\n    } else {\n      this._shutter.attr({\n        points: points\n      });\n    }\n  },\n  getSelectedRange: function getSelectedRange() {\n    return {\n      startValue: this._sliders[0].getValue(),\n      endValue: this._sliders[1].getValue()\n    };\n  },\n  setSelectedRange: function setSelectedRange(visualRange, e) {\n    visualRange = visualRange || {};\n    var translator = this._params.translator;\n    var businessRange = translator.getBusinessRange();\n    var compare = \"discrete\" === businessRange.axisType ? function (a, b) {\n      return a < b;\n    } : function (a, b) {\n      return a <= b;\n    };\n\n    var _adjustVisualRange = adjustVisualRange({\n      dataType: businessRange.dataType,\n      axisType: businessRange.axisType,\n      base: businessRange.base\n    }, {\n      startValue: translator.isValid(visualRange.startValue) ? translator.getCorrectValue(visualRange.startValue, 1) : void 0,\n      endValue: translator.isValid(visualRange.endValue) ? translator.getCorrectValue(visualRange.endValue, -1) : void 0,\n      length: visualRange.length\n    }, {\n      min: businessRange.minVisible,\n      max: businessRange.maxVisible,\n      categories: businessRange.categories\n    }),\n        startValue = _adjustVisualRange.startValue,\n        endValue = _adjustVisualRange.endValue;\n\n    startValue = isNumeric(startValue) ? adjust(startValue) : startValue;\n    endValue = isNumeric(endValue) ? adjust(endValue) : endValue;\n    var values = compare(translator.to(startValue, -1), translator.to(endValue, 1)) ? [startValue, endValue] : [endValue, startValue];\n\n    this._sliders[0].setDisplayValue(values[0]);\n\n    this._sliders[1].setDisplayValue(values[1]);\n\n    this._sliders[0]._position = translator.to(values[0], -1);\n    this._sliders[1]._position = translator.to(values[1], 1);\n\n    this._applyTotalPosition(true);\n\n    this._processSelectionChanged(e);\n  },\n  beginSelectedAreaMoving: function beginSelectedAreaMoving(initialPosition) {\n    var that = this;\n    var sliders = that._sliders;\n    var offset = (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - initialPosition;\n    var currentPosition = initialPosition;\n\n    move.complete = function (e) {\n      that._dockSelectedArea(e);\n    };\n\n    return move;\n\n    function move(position, e) {\n      if (position !== currentPosition && position > currentPosition === position > (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - offset) {\n        that._moveSelectedArea(position + offset, false, e);\n      }\n\n      currentPosition = position;\n    }\n  },\n  _dockSelectedArea: function _dockSelectedArea(e) {\n    var translator = this._params.translator;\n    var sliders = this._sliders;\n    sliders[0]._position = translator.to(sliders[0].getValue(), -1);\n    sliders[1]._position = translator.to(sliders[1].getValue(), 1);\n\n    this._applyTotalPosition(true);\n\n    this._processSelectionChanged(e);\n  },\n  moveSelectedArea: function moveSelectedArea(screenPosition, e) {\n    this._moveSelectedArea(screenPosition, true, e);\n\n    this._dockSelectedArea(e);\n  },\n  _moveSelectedArea: function _moveSelectedArea(screenPosition, isAnimated, e) {\n    var translator = this._params.translator;\n    var sliders = this._sliders;\n    var interval = sliders[1].getPosition() - sliders[0].getPosition();\n    var startPosition = screenPosition - interval / 2;\n    var endPosition = screenPosition + interval / 2;\n\n    if (startPosition < translator.getScreenRange()[0]) {\n      startPosition = translator.getScreenRange()[0];\n      endPosition = startPosition + interval;\n    }\n\n    if (endPosition > translator.getScreenRange()[1]) {\n      endPosition = translator.getScreenRange()[1];\n      startPosition = endPosition - interval;\n    }\n\n    var startValue = selectClosestValue(translator.from(startPosition, -1), this._values);\n    sliders[0].setDisplayValue(startValue);\n    sliders[1].setDisplayValue(selectClosestValue(translator.from(translator.to(startValue, -1) + interval, 1), this._values));\n    sliders[0]._position = startPosition;\n    sliders[1]._position = endPosition;\n\n    this._applyTotalPosition(isAnimated);\n\n    if (this._isOnMoving) {\n      this._processSelectionChanged(e);\n    }\n  },\n  placeSliderAndBeginMoving: function placeSliderAndBeginMoving(firstPosition, secondPosition, e) {\n    var translator = this._params.translator;\n    var sliders = this._sliders;\n    var index = firstPosition < secondPosition ? 0 : 1;\n    var dir = index > 0 ? 1 : -1;\n    var compare = index > 0 ? isGreater : isLess;\n    var antiCompare = index > 0 ? isLess : isGreater;\n    var thresholdPosition;\n    var positions = [];\n    var values = [];\n    values[index] = translator.from(firstPosition, dir);\n    values[1 - index] = translator.from(secondPosition, -dir);\n    positions[1 - index] = secondPosition;\n\n    if (translator.isValueProlonged) {\n      if (compare(firstPosition, translator.to(values[index], dir))) {\n        values[index] = translator.from(firstPosition, -dir);\n      }\n\n      if (compare(secondPosition, translator.to(values[index], -dir))) {\n        values[1 - index] = values[index];\n      }\n    }\n\n    if (this._minRange) {\n      thresholdPosition = translator.to(translator.add(selectClosestValue(values[index], this._values), this._minRange, -dir), -dir);\n\n      if (compare(secondPosition, thresholdPosition)) {\n        values[1 - index] = translator.add(values[index], this._minRange, -dir);\n      }\n\n      thresholdPosition = translator.to(translator.add(translator.getRange()[1 - index], this._minRange, dir), -dir);\n\n      if (antiCompare(firstPosition, thresholdPosition)) {\n        values[1 - index] = translator.getRange()[1 - index];\n        values[index] = translator.add(values[1 - index], this._minRange, dir);\n        positions[1 - index] = firstPosition;\n      }\n    }\n\n    values[0] = selectClosestValue(values[0], this._values);\n    values[1] = selectClosestValue(values[1], this._values);\n    positions[index] = translator.to(values[index], dir);\n    sliders[0].setDisplayValue(values[0]);\n    sliders[1].setDisplayValue(values[1]);\n    sliders[0]._position = positions[0];\n    sliders[1]._position = positions[1];\n\n    this._applyTotalPosition(true);\n\n    if (this._isOnMoving) {\n      this._processSelectionChanged(e);\n    }\n\n    var handler = this.beginSliderMoving(1 - index, secondPosition);\n\n    sliders[1 - index]._sliderGroup.stopAnimation();\n\n    this._shutter.stopAnimation();\n\n    handler(secondPosition);\n    return handler;\n  },\n  beginSliderMoving: function beginSliderMoving(initialIndex, initialPosition) {\n    var that = this;\n    var translator = that._params.translator;\n    var sliders = that._sliders;\n    var minPosition = translator.getScreenRange()[0];\n    var maxPosition = translator.getScreenRange()[1];\n    var index = initialIndex;\n    var staticPosition = sliders[1 - index].getPosition();\n    var currentPosition = initialPosition;\n    var dir = index > 0 ? 1 : -1;\n    var compareMin = index > 0 ? isLess : isGreater;\n    var compareMax = index > 0 ? isGreater : isLess;\n    var moveOffset = sliders[index].getPosition() - initialPosition;\n    var swapOffset = compareMin(sliders[index].getPosition(), initialPosition) ? -moveOffset : moveOffset;\n\n    move.complete = function (e) {\n      sliders[index]._setValid(true);\n\n      that._dockSelectedArea(e);\n    };\n\n    return move;\n\n    function move(position, e) {\n      var isValid;\n      var temp;\n      var pos;\n      var slider;\n      var value;\n\n      if (position !== currentPosition) {\n        if (compareMin(position + swapOffset, staticPosition)) {\n          isValid = that._allowSlidersSwap;\n\n          if (isValid && !translator.isValueProlonged && that._minRange) {\n            isValid = translator.isValid(translator.add(sliders[1 - index].getValue(), that._minRange, -dir));\n          }\n\n          if (isValid) {\n            that._changeMovingSlider(index);\n\n            index = 1 - index;\n            dir = -dir;\n            temp = compareMin;\n            compareMin = compareMax;\n            compareMax = temp;\n            moveOffset = -dir * Math.abs(moveOffset);\n            swapOffset = -moveOffset;\n          }\n        }\n\n        if (compareMax(position + moveOffset, staticPosition)) {\n          slider = sliders[index];\n          value = sliders[1 - index].getValue();\n          pos = Math.max(Math.min(position + moveOffset, maxPosition), minPosition);\n          isValid = translator.isValueProlonged ? !compareMin(pos, translator.to(value, dir)) : true;\n          var invalidStateValue;\n\n          if (isValid && that._minRange) {\n            isValid = !compareMin(pos, translator.to(translator.add(value, that._minRange, dir), dir));\n\n            if (!isValid) {\n              invalidStateValue = translator.add(value, that._minRange, dir);\n            }\n          }\n\n          if (isValid && that._maxRange) {\n            isValid = !compareMax(pos, translator.to(translator.add(value, that._maxRange, dir), dir));\n\n            if (!isValid) {\n              invalidStateValue = translator.add(value, that._maxRange, dir);\n            }\n          }\n\n          slider._setValid(isValid);\n\n          slider.setDisplayValue(isValid ? selectClosestValue(translator.from(pos, dir), that._values) : isDefined(invalidStateValue) ? invalidStateValue : slider.getValue());\n          slider._position = pos;\n\n          that._applyTotalPosition(false);\n\n          slider.toForeground();\n\n          if (that._isOnMoving) {\n            that._processSelectionChanged(e);\n          }\n        }\n      }\n\n      currentPosition = position;\n    }\n  },\n  _changeMovingSlider: function _changeMovingSlider(index) {\n    var translator = this._params.translator;\n    var sliders = this._sliders;\n    var position = sliders[1 - index].getPosition();\n    var dir = index > 0 ? 1 : -1;\n    var newValue;\n    sliders[index].setDisplayValue(selectClosestValue(translator.from(position, dir), this._values));\n    newValue = translator.from(position, -dir);\n\n    if (translator.isValueProlonged) {\n      newValue = translator.from(position, dir);\n    } else if (this._minRange) {\n      newValue = translator.add(newValue, this._minRange, -dir);\n    }\n\n    sliders[1 - index].setDisplayValue(selectClosestValue(newValue, this._values));\n\n    sliders[index]._setValid(true);\n\n    sliders[index]._marker._update();\n\n    sliders[0]._position = sliders[1]._position = position;\n  },\n  foregroundSlider: function foregroundSlider(index) {\n    this._sliders[index].toForeground();\n  }\n};","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/range_selector/sliders_controller.js"],"names":["noop","utils","consts","Slider","normalizeEnum","_normalizeEnum","rangesAreEqual","adjustVisualRange","isNumeric","isDefined","adjust","animationSettings","emptySliderMarkerText","buildRectPoints","left","top","right","bottom","isLess","a","b","isGreater","selectClosestValue","target","values","start","end","length","middle","val","dummyProcessSelectionChanged","_lastSelectedRange","getSelectedRange","_processSelectionChanged","suppressSetSelectedRange","controller","setSelectedRange","restoreSetSelectedRange","SlidersController","params","sliderParams","renderer","root","trackersGroup","translator","_params","_areaTracker","path","attr","class","fill","opacity","append","_selectedAreaTracker","_shutter","_sliders","prototype","constructor","dispose","getTrackerTargets","area","selectedArea","sliders","e","selectedRange","updateSelectedRange","update","verticalRange","behavior","isCompactMode","sliderHandleOptions","sliderMarkerOptions","shutterOptions","rangeBounds","fullTicks","selectedRangeColor","screenRange","getScreenRange","_verticalRange","_minRange","minRange","_maxRange","maxRange","_animationEnabled","animationEnabled","_allowSlidersSwap","allowSlidersSwap","_position","_values","isValueProlonged","snapToTicks","points","_isCompactMode","_shutterOffset","width","_updateSelectedView","_isOnMoving","callValueChanged","_updateSelectedRange","_applyTotalPosition","settings","stroke","sharp","color","cancelAnimation","stopAnimation","getBusinessRange","isEmpty","_setText","_value","isAnimated","applyPosition","areOverlapped","getCloudBorder","setOverlapped","_applyAreaTrackersPosition","_applySelectedRangePosition","position1","getPosition","position2","css","cursor","Math","abs","pos1","pos2","ceil","floor","axis","getVisibleArea","max","min","animate","startValue","getValue","endValue","visualRange","businessRange","compare","axisType","dataType","base","isValid","getCorrectValue","minVisible","maxVisible","categories","to","setDisplayValue","beginSelectedAreaMoving","initialPosition","that","offset","currentPosition","move","complete","_dockSelectedArea","position","_moveSelectedArea","moveSelectedArea","screenPosition","interval","startPosition","endPosition","from","placeSliderAndBeginMoving","firstPosition","secondPosition","index","dir","antiCompare","thresholdPosition","positions","add","getRange","handler","beginSliderMoving","_sliderGroup","initialIndex","minPosition","maxPosition","staticPosition","compareMin","compareMax","moveOffset","swapOffset","_setValid","temp","pos","slider","value","_changeMovingSlider","invalidStateValue","toForeground","newValue","_marker","_update","foregroundSlider"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/range_selector/sliders_controller.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    utils,\r\n    consts\r\n} from \"./common\";\r\nimport Slider from \"./slider\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum,\r\n    rangesAreEqual,\r\n    adjustVisualRange\r\n} from \"../core/utils\";\r\nimport {\r\n    isNumeric,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    adjust\r\n} from \"../../core/utils/math\";\r\nvar animationSettings = utils.animationSettings;\r\nvar emptySliderMarkerText = consts.emptySliderMarkerText;\r\n\r\nfunction buildRectPoints(left, top, right, bottom) {\r\n    return [left, top, right, top, right, bottom, left, bottom]\r\n}\r\n\r\nfunction isLess(a, b) {\r\n    return a < b\r\n}\r\n\r\nfunction isGreater(a, b) {\r\n    return a > b\r\n}\r\n\r\nfunction selectClosestValue(target, values) {\r\n    var start = 0;\r\n    var end = values ? values.length - 1 : 0;\r\n    var middle;\r\n    var val = target;\r\n    while (end - start > 1) {\r\n        middle = start + end >> 1;\r\n        val = values[middle];\r\n        if (val === target) {\r\n            return target\r\n        } else if (target < val) {\r\n            end = middle\r\n        } else {\r\n            start = middle\r\n        }\r\n    }\r\n    if (values) {\r\n        val = values[target - values[start] <= values[end] - target ? start : end]\r\n    }\r\n    return val\r\n}\r\n\r\nfunction dummyProcessSelectionChanged() {\r\n    this._lastSelectedRange = this.getSelectedRange();\r\n    delete this._processSelectionChanged\r\n}\r\n\r\nfunction suppressSetSelectedRange(controller) {\r\n    controller.setSelectedRange = noop;\r\n    if (controller._processSelectionChanged === dummyProcessSelectionChanged) {\r\n        controller._processSelectionChanged()\r\n    }\r\n}\r\n\r\nfunction restoreSetSelectedRange(controller) {\r\n    delete controller.setSelectedRange\r\n}\r\nexport function SlidersController(params) {\r\n    var sliderParams = {\r\n        renderer: params.renderer,\r\n        root: params.root,\r\n        trackersGroup: params.trackersGroup,\r\n        translator: params.translator\r\n    };\r\n    this._params = params;\r\n    this._areaTracker = params.renderer.path(null, \"area\").attr({\r\n        class: \"area-tracker\",\r\n        fill: \"#000000\",\r\n        opacity: 1e-4\r\n    }).append(params.trackersGroup);\r\n    this._selectedAreaTracker = params.renderer.path(null, \"area\").attr({\r\n        class: \"selected-area-tracker\",\r\n        fill: \"#000000\",\r\n        opacity: 1e-4\r\n    }).append(params.trackersGroup);\r\n    this._shutter = params.renderer.path(null, \"area\").append(params.root);\r\n    this._sliders = [new Slider(sliderParams, 0), new Slider(sliderParams, 1)];\r\n    this._processSelectionChanged = dummyProcessSelectionChanged\r\n}\r\nSlidersController.prototype = {\r\n    constructor: SlidersController,\r\n    dispose: function() {\r\n        this._sliders[0].dispose();\r\n        this._sliders[1].dispose()\r\n    },\r\n    getTrackerTargets: function() {\r\n        return {\r\n            area: this._areaTracker,\r\n            selectedArea: this._selectedAreaTracker,\r\n            sliders: this._sliders\r\n        }\r\n    },\r\n    _processSelectionChanged: function(e) {\r\n        var selectedRange = this.getSelectedRange();\r\n        if (!rangesAreEqual(selectedRange, this._lastSelectedRange)) {\r\n            this._params.updateSelectedRange(selectedRange, this._lastSelectedRange, e);\r\n            this._lastSelectedRange = selectedRange\r\n        }\r\n    },\r\n    update: function(verticalRange, behavior, isCompactMode, sliderHandleOptions, sliderMarkerOptions, shutterOptions, rangeBounds, fullTicks, selectedRangeColor) {\r\n        var screenRange = this._params.translator.getScreenRange();\r\n        this._verticalRange = verticalRange;\r\n        this._minRange = rangeBounds.minRange;\r\n        this._maxRange = rangeBounds.maxRange;\r\n        this._animationEnabled = behavior.animationEnabled && this._params.renderer.animationEnabled();\r\n        this._allowSlidersSwap = behavior.allowSlidersSwap;\r\n        this._sliders[0].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\r\n        this._sliders[1].update(verticalRange, sliderHandleOptions, sliderMarkerOptions);\r\n        this._sliders[0]._position = this._sliders[1]._position = screenRange[0];\r\n        this._values = !this._params.translator.isValueProlonged && behavior.snapToTicks ? fullTicks : null;\r\n        this._areaTracker.attr({\r\n            points: buildRectPoints(screenRange[0], verticalRange[0], screenRange[1], verticalRange[1])\r\n        });\r\n        this._isCompactMode = isCompactMode;\r\n        this._shutterOffset = sliderHandleOptions.width / 2;\r\n        this._updateSelectedView(shutterOptions, selectedRangeColor);\r\n        this._isOnMoving = \"onmoving\" === _normalizeEnum(behavior.callValueChanged);\r\n        this._updateSelectedRange();\r\n        this._applyTotalPosition(false)\r\n    },\r\n    _updateSelectedView: function(shutterOptions, selectedRangeColor) {\r\n        var settings = {\r\n            fill: null,\r\n            \"fill-opacity\": null,\r\n            stroke: null,\r\n            \"stroke-width\": null\r\n        };\r\n        if (this._isCompactMode) {\r\n            settings.stroke = selectedRangeColor;\r\n            settings[\"stroke-width\"] = 3;\r\n            settings.sharp = \"v\"\r\n        } else {\r\n            settings.fill = shutterOptions.color;\r\n            settings[\"fill-opacity\"] = shutterOptions.opacity\r\n        }\r\n        this._shutter.attr(settings)\r\n    },\r\n    _updateSelectedRange: function() {\r\n        var sliders = this._sliders;\r\n        sliders[0].cancelAnimation();\r\n        sliders[1].cancelAnimation();\r\n        this._shutter.stopAnimation();\r\n        if (this._params.translator.getBusinessRange().isEmpty()) {\r\n            sliders[0]._setText(emptySliderMarkerText);\r\n            sliders[1]._setText(emptySliderMarkerText);\r\n            sliders[0]._value = sliders[1]._value = void 0;\r\n            sliders[0]._position = this._params.translator.getScreenRange()[0];\r\n            sliders[1]._position = this._params.translator.getScreenRange()[1];\r\n            this._applyTotalPosition(false);\r\n            suppressSetSelectedRange(this)\r\n        } else {\r\n            restoreSetSelectedRange(this)\r\n        }\r\n    },\r\n    _applyTotalPosition: function(isAnimated) {\r\n        var sliders = this._sliders;\r\n        isAnimated = this._animationEnabled && isAnimated;\r\n        sliders[0].applyPosition(isAnimated);\r\n        sliders[1].applyPosition(isAnimated);\r\n        var areOverlapped = sliders[0].getCloudBorder() > sliders[1].getCloudBorder();\r\n        sliders[0].setOverlapped(areOverlapped);\r\n        sliders[1].setOverlapped(areOverlapped);\r\n        this._applyAreaTrackersPosition();\r\n        this._applySelectedRangePosition(isAnimated)\r\n    },\r\n    _applyAreaTrackersPosition: function() {\r\n        var position1 = this._sliders[0].getPosition();\r\n        var position2 = this._sliders[1].getPosition();\r\n        this._selectedAreaTracker.attr({\r\n            points: buildRectPoints(position1, this._verticalRange[0], position2, this._verticalRange[1])\r\n        }).css({\r\n            cursor: Math.abs(this._params.translator.getScreenRange()[1] - this._params.translator.getScreenRange()[0] - position2 + position1) < .001 ? \"default\" : \"pointer\"\r\n        })\r\n    },\r\n    _applySelectedRangePosition: function(isAnimated) {\r\n        var verticalRange = this._verticalRange;\r\n        var pos1 = this._sliders[0].getPosition();\r\n        var pos2 = this._sliders[1].getPosition();\r\n        var screenRange;\r\n        var points;\r\n        if (this._isCompactMode) {\r\n            points = [pos1 + Math.ceil(this._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2, pos2 - Math.floor(this._shutterOffset), (verticalRange[0] + verticalRange[1]) / 2]\r\n        } else {\r\n            screenRange = this._params.axis.getVisibleArea();\r\n            points = [buildRectPoints(screenRange[0], verticalRange[0], Math.max(pos1 - Math.floor(this._shutterOffset), screenRange[0]), verticalRange[1]), buildRectPoints(screenRange[1], verticalRange[0], Math.min(pos2 + Math.ceil(this._shutterOffset), screenRange[1]), verticalRange[1])]\r\n        }\r\n        if (isAnimated) {\r\n            this._shutter.animate({\r\n                points: points\r\n            }, animationSettings)\r\n        } else {\r\n            this._shutter.attr({\r\n                points: points\r\n            })\r\n        }\r\n    },\r\n    getSelectedRange: function() {\r\n        return {\r\n            startValue: this._sliders[0].getValue(),\r\n            endValue: this._sliders[1].getValue()\r\n        }\r\n    },\r\n    setSelectedRange: function(visualRange, e) {\r\n        visualRange = visualRange || {};\r\n        var translator = this._params.translator;\r\n        var businessRange = translator.getBusinessRange();\r\n        var compare = \"discrete\" === businessRange.axisType ? function(a, b) {\r\n            return a < b\r\n        } : function(a, b) {\r\n            return a <= b\r\n        };\r\n        var {\r\n            startValue: startValue,\r\n            endValue: endValue\r\n        } = adjustVisualRange({\r\n            dataType: businessRange.dataType,\r\n            axisType: businessRange.axisType,\r\n            base: businessRange.base\r\n        }, {\r\n            startValue: translator.isValid(visualRange.startValue) ? translator.getCorrectValue(visualRange.startValue, 1) : void 0,\r\n            endValue: translator.isValid(visualRange.endValue) ? translator.getCorrectValue(visualRange.endValue, -1) : void 0,\r\n            length: visualRange.length\r\n        }, {\r\n            min: businessRange.minVisible,\r\n            max: businessRange.maxVisible,\r\n            categories: businessRange.categories\r\n        });\r\n        startValue = isNumeric(startValue) ? adjust(startValue) : startValue;\r\n        endValue = isNumeric(endValue) ? adjust(endValue) : endValue;\r\n        var values = compare(translator.to(startValue, -1), translator.to(endValue, 1)) ? [startValue, endValue] : [endValue, startValue];\r\n        this._sliders[0].setDisplayValue(values[0]);\r\n        this._sliders[1].setDisplayValue(values[1]);\r\n        this._sliders[0]._position = translator.to(values[0], -1);\r\n        this._sliders[1]._position = translator.to(values[1], 1);\r\n        this._applyTotalPosition(true);\r\n        this._processSelectionChanged(e)\r\n    },\r\n    beginSelectedAreaMoving: function(initialPosition) {\r\n        var that = this;\r\n        var sliders = that._sliders;\r\n        var offset = (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - initialPosition;\r\n        var currentPosition = initialPosition;\r\n        move.complete = function(e) {\r\n            that._dockSelectedArea(e)\r\n        };\r\n        return move;\r\n\r\n        function move(position, e) {\r\n            if (position !== currentPosition && position > currentPosition === position > (sliders[0].getPosition() + sliders[1].getPosition()) / 2 - offset) {\r\n                that._moveSelectedArea(position + offset, false, e)\r\n            }\r\n            currentPosition = position\r\n        }\r\n    },\r\n    _dockSelectedArea: function(e) {\r\n        var translator = this._params.translator;\r\n        var sliders = this._sliders;\r\n        sliders[0]._position = translator.to(sliders[0].getValue(), -1);\r\n        sliders[1]._position = translator.to(sliders[1].getValue(), 1);\r\n        this._applyTotalPosition(true);\r\n        this._processSelectionChanged(e)\r\n    },\r\n    moveSelectedArea: function(screenPosition, e) {\r\n        this._moveSelectedArea(screenPosition, true, e);\r\n        this._dockSelectedArea(e)\r\n    },\r\n    _moveSelectedArea: function(screenPosition, isAnimated, e) {\r\n        var translator = this._params.translator;\r\n        var sliders = this._sliders;\r\n        var interval = sliders[1].getPosition() - sliders[0].getPosition();\r\n        var startPosition = screenPosition - interval / 2;\r\n        var endPosition = screenPosition + interval / 2;\r\n        if (startPosition < translator.getScreenRange()[0]) {\r\n            startPosition = translator.getScreenRange()[0];\r\n            endPosition = startPosition + interval\r\n        }\r\n        if (endPosition > translator.getScreenRange()[1]) {\r\n            endPosition = translator.getScreenRange()[1];\r\n            startPosition = endPosition - interval\r\n        }\r\n        var startValue = selectClosestValue(translator.from(startPosition, -1), this._values);\r\n        sliders[0].setDisplayValue(startValue);\r\n        sliders[1].setDisplayValue(selectClosestValue(translator.from(translator.to(startValue, -1) + interval, 1), this._values));\r\n        sliders[0]._position = startPosition;\r\n        sliders[1]._position = endPosition;\r\n        this._applyTotalPosition(isAnimated);\r\n        if (this._isOnMoving) {\r\n            this._processSelectionChanged(e)\r\n        }\r\n    },\r\n    placeSliderAndBeginMoving: function(firstPosition, secondPosition, e) {\r\n        var translator = this._params.translator;\r\n        var sliders = this._sliders;\r\n        var index = firstPosition < secondPosition ? 0 : 1;\r\n        var dir = index > 0 ? 1 : -1;\r\n        var compare = index > 0 ? isGreater : isLess;\r\n        var antiCompare = index > 0 ? isLess : isGreater;\r\n        var thresholdPosition;\r\n        var positions = [];\r\n        var values = [];\r\n        values[index] = translator.from(firstPosition, dir);\r\n        values[1 - index] = translator.from(secondPosition, -dir);\r\n        positions[1 - index] = secondPosition;\r\n        if (translator.isValueProlonged) {\r\n            if (compare(firstPosition, translator.to(values[index], dir))) {\r\n                values[index] = translator.from(firstPosition, -dir)\r\n            }\r\n            if (compare(secondPosition, translator.to(values[index], -dir))) {\r\n                values[1 - index] = values[index]\r\n            }\r\n        }\r\n        if (this._minRange) {\r\n            thresholdPosition = translator.to(translator.add(selectClosestValue(values[index], this._values), this._minRange, -dir), -dir);\r\n            if (compare(secondPosition, thresholdPosition)) {\r\n                values[1 - index] = translator.add(values[index], this._minRange, -dir)\r\n            }\r\n            thresholdPosition = translator.to(translator.add(translator.getRange()[1 - index], this._minRange, dir), -dir);\r\n            if (antiCompare(firstPosition, thresholdPosition)) {\r\n                values[1 - index] = translator.getRange()[1 - index];\r\n                values[index] = translator.add(values[1 - index], this._minRange, dir);\r\n                positions[1 - index] = firstPosition\r\n            }\r\n        }\r\n        values[0] = selectClosestValue(values[0], this._values);\r\n        values[1] = selectClosestValue(values[1], this._values);\r\n        positions[index] = translator.to(values[index], dir);\r\n        sliders[0].setDisplayValue(values[0]);\r\n        sliders[1].setDisplayValue(values[1]);\r\n        sliders[0]._position = positions[0];\r\n        sliders[1]._position = positions[1];\r\n        this._applyTotalPosition(true);\r\n        if (this._isOnMoving) {\r\n            this._processSelectionChanged(e)\r\n        }\r\n        var handler = this.beginSliderMoving(1 - index, secondPosition);\r\n        sliders[1 - index]._sliderGroup.stopAnimation();\r\n        this._shutter.stopAnimation();\r\n        handler(secondPosition);\r\n        return handler\r\n    },\r\n    beginSliderMoving: function(initialIndex, initialPosition) {\r\n        var that = this;\r\n        var translator = that._params.translator;\r\n        var sliders = that._sliders;\r\n        var minPosition = translator.getScreenRange()[0];\r\n        var maxPosition = translator.getScreenRange()[1];\r\n        var index = initialIndex;\r\n        var staticPosition = sliders[1 - index].getPosition();\r\n        var currentPosition = initialPosition;\r\n        var dir = index > 0 ? 1 : -1;\r\n        var compareMin = index > 0 ? isLess : isGreater;\r\n        var compareMax = index > 0 ? isGreater : isLess;\r\n        var moveOffset = sliders[index].getPosition() - initialPosition;\r\n        var swapOffset = compareMin(sliders[index].getPosition(), initialPosition) ? -moveOffset : moveOffset;\r\n        move.complete = function(e) {\r\n            sliders[index]._setValid(true);\r\n            that._dockSelectedArea(e)\r\n        };\r\n        return move;\r\n\r\n        function move(position, e) {\r\n            var isValid;\r\n            var temp;\r\n            var pos;\r\n            var slider;\r\n            var value;\r\n            if (position !== currentPosition) {\r\n                if (compareMin(position + swapOffset, staticPosition)) {\r\n                    isValid = that._allowSlidersSwap;\r\n                    if (isValid && !translator.isValueProlonged && that._minRange) {\r\n                        isValid = translator.isValid(translator.add(sliders[1 - index].getValue(), that._minRange, -dir))\r\n                    }\r\n                    if (isValid) {\r\n                        that._changeMovingSlider(index);\r\n                        index = 1 - index;\r\n                        dir = -dir;\r\n                        temp = compareMin;\r\n                        compareMin = compareMax;\r\n                        compareMax = temp;\r\n                        moveOffset = -dir * Math.abs(moveOffset);\r\n                        swapOffset = -moveOffset\r\n                    }\r\n                }\r\n                if (compareMax(position + moveOffset, staticPosition)) {\r\n                    slider = sliders[index];\r\n                    value = sliders[1 - index].getValue();\r\n                    pos = Math.max(Math.min(position + moveOffset, maxPosition), minPosition);\r\n                    isValid = translator.isValueProlonged ? !compareMin(pos, translator.to(value, dir)) : true;\r\n                    var invalidStateValue;\r\n                    if (isValid && that._minRange) {\r\n                        isValid = !compareMin(pos, translator.to(translator.add(value, that._minRange, dir), dir));\r\n                        if (!isValid) {\r\n                            invalidStateValue = translator.add(value, that._minRange, dir)\r\n                        }\r\n                    }\r\n                    if (isValid && that._maxRange) {\r\n                        isValid = !compareMax(pos, translator.to(translator.add(value, that._maxRange, dir), dir));\r\n                        if (!isValid) {\r\n                            invalidStateValue = translator.add(value, that._maxRange, dir)\r\n                        }\r\n                    }\r\n                    slider._setValid(isValid);\r\n                    slider.setDisplayValue(isValid ? selectClosestValue(translator.from(pos, dir), that._values) : isDefined(invalidStateValue) ? invalidStateValue : slider.getValue());\r\n                    slider._position = pos;\r\n                    that._applyTotalPosition(false);\r\n                    slider.toForeground();\r\n                    if (that._isOnMoving) {\r\n                        that._processSelectionChanged(e)\r\n                    }\r\n                }\r\n            }\r\n            currentPosition = position\r\n        }\r\n    },\r\n    _changeMovingSlider: function(index) {\r\n        var translator = this._params.translator;\r\n        var sliders = this._sliders;\r\n        var position = sliders[1 - index].getPosition();\r\n        var dir = index > 0 ? 1 : -1;\r\n        var newValue;\r\n        sliders[index].setDisplayValue(selectClosestValue(translator.from(position, dir), this._values));\r\n        newValue = translator.from(position, -dir);\r\n        if (translator.isValueProlonged) {\r\n            newValue = translator.from(position, dir)\r\n        } else if (this._minRange) {\r\n            newValue = translator.add(newValue, this._minRange, -dir)\r\n        }\r\n        sliders[1 - index].setDisplayValue(selectClosestValue(newValue, this._values));\r\n        sliders[index]._setValid(true);\r\n        sliders[index]._marker._update();\r\n        sliders[0]._position = sliders[1]._position = position\r\n    },\r\n    foregroundSlider: function(index) {\r\n        this._sliders[index].toForeground()\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}