{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxToast from 'devextreme/ui/toast';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The Toast is a UI component that provides pop-up notifications.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxToastComponent = /*@__PURE__*/function () {\n  var DxToastComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxToastComponent, _DxComponent);\n\n    var _super = _createSuper(DxToastComponent);\n\n    function DxToastComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxToastComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'hidden',\n        emit: 'onHidden'\n      }, {\n        subscribe: 'hiding',\n        emit: 'onHiding'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'showing',\n        emit: 'onShowing'\n      }, {\n        subscribe: 'shown',\n        emit: 'onShown'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'animationChange'\n      }, {\n        emit: 'closeOnClickChange'\n      }, {\n        emit: 'closeOnOutsideClickChange'\n      }, {\n        emit: 'closeOnSwipeChange'\n      }, {\n        emit: 'contentTemplateChange'\n      }, {\n        emit: 'deferRenderingChange'\n      }, {\n        emit: 'displayTimeChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'maxHeightChange'\n      }, {\n        emit: 'maxWidthChange'\n      }, {\n        emit: 'messageChange'\n      }, {\n        emit: 'minHeightChange'\n      }, {\n        emit: 'minWidthChange'\n      }, {\n        emit: 'positionChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'shadingChange'\n      }, {\n        emit: 'shadingColorChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'typeChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxToastComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"animation\",\n      get: function get() {\n        return this._getOption('animation');\n      },\n      set: function set(value) {\n        this._setOption('animation', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"closeOnClick\",\n      get: function get() {\n        return this._getOption('closeOnClick');\n      },\n      set: function set(value) {\n        this._setOption('closeOnClick', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"closeOnOutsideClick\",\n      get: function get() {\n        return this._getOption('closeOnOutsideClick');\n      },\n      set: function set(value) {\n        this._setOption('closeOnOutsideClick', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"closeOnSwipe\",\n      get: function get() {\n        return this._getOption('closeOnSwipe');\n      },\n      set: function set(value) {\n        this._setOption('closeOnSwipe', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"contentTemplate\",\n      get: function get() {\n        return this._getOption('contentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('contentTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"deferRendering\",\n      get: function get() {\n        return this._getOption('deferRendering');\n      },\n      set: function set(value) {\n        this._setOption('deferRendering', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"displayTime\",\n      get: function get() {\n        return this._getOption('displayTime');\n      },\n      set: function set(value) {\n        this._setOption('displayTime', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"maxHeight\",\n      get: function get() {\n        return this._getOption('maxHeight');\n      },\n      set: function set(value) {\n        this._setOption('maxHeight', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"maxWidth\",\n      get: function get() {\n        return this._getOption('maxWidth');\n      },\n      set: function set(value) {\n        this._setOption('maxWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"message\",\n      get: function get() {\n        return this._getOption('message');\n      },\n      set: function set(value) {\n        this._setOption('message', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"minHeight\",\n      get: function get() {\n        return this._getOption('minHeight');\n      },\n      set: function set(value) {\n        this._setOption('minHeight', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"minWidth\",\n      get: function get() {\n        return this._getOption('minWidth');\n      },\n      set: function set(value) {\n        this._setOption('minWidth', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"position\",\n      get: function get() {\n        return this._getOption('position');\n      },\n      set: function set(value) {\n        this._setOption('position', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"shading\",\n      get: function get() {\n        return this._getOption('shading');\n      },\n      set: function set(value) {\n        this._setOption('shading', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"shadingColor\",\n      get: function get() {\n        return this._getOption('shadingColor');\n      },\n      set: function set(value) {\n        this._setOption('shadingColor', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"type\",\n      get: function get() {\n        return this._getOption('type');\n      },\n      set: function set(value) {\n        this._setOption('type', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxToast(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }]);\n\n    return DxToastComponent;\n  }(DxComponent);\n\n  DxToastComponent.ɵfac = function DxToastComponent_Factory(t) {\n    return new (t || DxToastComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxToastComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxToastComponent,\n    selectors: [[\"dx-toast\"]],\n    inputs: {\n      accessKey: \"accessKey\",\n      animation: \"animation\",\n      closeOnClick: \"closeOnClick\",\n      closeOnOutsideClick: \"closeOnOutsideClick\",\n      closeOnSwipe: \"closeOnSwipe\",\n      contentTemplate: \"contentTemplate\",\n      deferRendering: \"deferRendering\",\n      displayTime: \"displayTime\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      maxHeight: \"maxHeight\",\n      maxWidth: \"maxWidth\",\n      message: \"message\",\n      minHeight: \"minHeight\",\n      minWidth: \"minWidth\",\n      position: \"position\",\n      rtlEnabled: \"rtlEnabled\",\n      shading: \"shading\",\n      shadingColor: \"shadingColor\",\n      tabIndex: \"tabIndex\",\n      type: \"type\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onHidden: \"onHidden\",\n      onHiding: \"onHiding\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onShowing: \"onShowing\",\n      onShown: \"onShown\",\n      accessKeyChange: \"accessKeyChange\",\n      animationChange: \"animationChange\",\n      closeOnClickChange: \"closeOnClickChange\",\n      closeOnOutsideClickChange: \"closeOnOutsideClickChange\",\n      closeOnSwipeChange: \"closeOnSwipeChange\",\n      contentTemplateChange: \"contentTemplateChange\",\n      deferRenderingChange: \"deferRenderingChange\",\n      displayTimeChange: \"displayTimeChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      maxHeightChange: \"maxHeightChange\",\n      maxWidthChange: \"maxWidthChange\",\n      messageChange: \"messageChange\",\n      minHeightChange: \"minHeightChange\",\n      minWidthChange: \"minWidthChange\",\n      positionChange: \"positionChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      shadingChange: \"shadingChange\",\n      shadingColorChange: \"shadingColorChange\",\n      tabIndexChange: \"tabIndexChange\",\n      typeChange: \"typeChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxToastComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxToastComponent = __decorate([__param(6, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, NestedOptionHost, TransferState, Object])], DxToastComponent);\n  return DxToastComponent;\n}();\n\nvar DxToastModule = /*@__PURE__*/function () {\n  var DxToastModule = function DxToastModule() {\n    _classCallCheck(this, DxToastModule);\n  };\n\n  DxToastModule.ɵfac = function DxToastModule_Factory(t) {\n    return new (t || DxToastModule)();\n  };\n\n  DxToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxToastModule\n  });\n  DxToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxTemplateModule]\n  });\n  return DxToastModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxToastModule, {\n    declarations: function declarations() {\n      return [DxToastComponent];\n    },\n    imports: function imports() {\n      return [DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxToastComponent, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxToastComponent, DxToastModule };","map":null,"metadata":{},"sourceType":"module"}