{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport workWeekUtils from \"./utils.work_week\";\nimport SchedulerWorkSpaceWeek from \"./ui.scheduler.work_space_week\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar WORK_WEEK_CLASS = \"dx-scheduler-work-space-work-week\";\nvar dayIndexes = [1, 2, 3, 4, 5];\nvar weekCounter = 0;\n\nvar SchedulerWorkSpaceWorkWeek = /*#__PURE__*/function (_SchedulerWorkSpaceWe) {\n  _inherits(SchedulerWorkSpaceWorkWeek, _SchedulerWorkSpaceWe);\n\n  var _super = _createSuper(SchedulerWorkSpaceWorkWeek);\n\n  function SchedulerWorkSpaceWorkWeek() {\n    var _this;\n\n    _classCallCheck(this, SchedulerWorkSpaceWorkWeek);\n\n    _this = _super.apply(this, arguments);\n    _this._isSkippedData = workWeekUtils.isDataOnWeekend;\n    _this._getWeekendsCount = workWeekUtils.getWeekendsCount;\n    return _this;\n  }\n\n  _createClass(SchedulerWorkSpaceWorkWeek, [{\n    key: \"_getElementClass\",\n    value: function _getElementClass() {\n      return WORK_WEEK_CLASS;\n    }\n  }, {\n    key: \"_getCellCount\",\n    value: function _getCellCount() {\n      return 5 * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"_firstDayOfWeek\",\n    value: function _firstDayOfWeek() {\n      return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n    }\n  }, {\n    key: \"_getDateByIndex\",\n    value: function _getDateByIndex(headerIndex) {\n      var resultDate = new Date(this._firstViewDate);\n\n      if (headerIndex % this._getCellCount() === 0) {\n        weekCounter = 0;\n      }\n\n      resultDate.setDate(this._firstViewDate.getDate() + headerIndex + weekCounter);\n      var index = resultDate.getDay();\n\n      while (-1 === dayIndexes.indexOf(index)) {\n        resultDate.setDate(resultDate.getDate() + 1);\n        index = resultDate.getDay();\n        weekCounter++;\n      }\n\n      return resultDate;\n    }\n  }, {\n    key: \"_renderView\",\n    value: function _renderView() {\n      weekCounter = 0;\n\n      _get(_getPrototypeOf(SchedulerWorkSpaceWorkWeek.prototype), \"_renderView\", this).call(this);\n    }\n  }, {\n    key: \"_setFirstViewDate\",\n    value: function _setFirstViewDate() {\n      this._firstViewDate = workWeekUtils.getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\n\n      this._setStartDayHour(this._firstViewDate);\n    }\n  }, {\n    key: \"_getOffsetByCount\",\n    value: function _getOffsetByCount(cellIndex) {\n      var cellsInGroup = this._getCellCount();\n\n      var inGroup = Math.floor(cellIndex / cellsInGroup);\n      cellIndex -= cellsInGroup * inGroup;\n      var weekendCount = Math.floor(cellIndex / 5);\n      return toMs(\"day\") * weekendCount * 2;\n    }\n  }]);\n\n  return SchedulerWorkSpaceWorkWeek;\n}(SchedulerWorkSpaceWeek);\n\nregisterComponent(\"dxSchedulerWorkSpaceWorkWeek\", SchedulerWorkSpaceWorkWeek);\nexport default SchedulerWorkSpaceWorkWeek;","map":null,"metadata":{},"sourceType":"module"}