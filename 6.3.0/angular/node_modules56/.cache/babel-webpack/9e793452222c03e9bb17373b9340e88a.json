{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/vdom\";\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\nimport { getElementWidth, getElementStyle } from \"./utils/get_element_width\";\nimport { isDefined } from \"../../../core/utils/type\";\nexport var viewFunction = function viewFunction(_ref) {\n  var infoTextRef = _ref.infoTextRef,\n      infoTextVisible = _ref.infoTextVisible,\n      isLargeDisplayMode = _ref.isLargeDisplayMode,\n      pageSizesRef = _ref.pageSizesRef,\n      pagesRef = _ref.pagesRef,\n      parentRef = _ref.parentRef,\n      _ref$props = _ref.props,\n      Content = _ref$props.contentTemplate,\n      pagerProps = _ref$props.pagerProps,\n      restAttributes = _ref.restAttributes;\n  return Content(_extends({\n    rootElementRef: parentRef,\n    pageSizesRef: pageSizesRef,\n    infoTextRef: infoTextRef,\n    pagesRef: pagesRef,\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  }, _extends({}, pagerProps, restAttributes)));\n};\nexport function calculateAdaptivityProps(_ref2) {\n  var infoWidth = _ref2.info,\n      pageSizesWidth = _ref2.pageSizes,\n      pagesWidth = _ref2.pages,\n      parentWidth = _ref2.parent;\n  var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\n  var infoTextVisible = parentWidth - minimalWidth > 0;\n  var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\n  return {\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  };\n}\n\nfunction getElementsWidth(_ref3) {\n  var info = _ref3.info,\n      pageSizes = _ref3.pageSizes,\n      pages = _ref3.pages,\n      parent = _ref3.parent;\n  var parentWidth = getElementWidth(parent);\n  var pageSizesWidth = getElementWidth(pageSizes);\n  var infoWidth = getElementWidth(info);\n  var pagesHtmlWidth = getElementWidth(pages);\n  return {\n    parent: parentWidth,\n    pageSizes: pageSizesWidth,\n    info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\n    pages: pagesHtmlWidth\n  };\n}\n\nexport var ResizableContainerProps = {};\nimport { createRef as infernoCreateRef } from \"inferno\";\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var ResizableContainer = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(ResizableContainer, _InfernoComponent);\n\n  var _super = _createSuper(ResizableContainer);\n\n  function ResizableContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ResizableContainer);\n\n    _this = _super.call(this, props);\n    _this._currentState = null;\n    _this.parentRef = infernoCreateRef();\n    _this.pageSizesRef = infernoCreateRef();\n    _this.infoTextRef = infernoCreateRef();\n    _this.pagesRef = infernoCreateRef();\n    _this.state = {\n      infoTextVisible: true,\n      isLargeDisplayMode: true\n    };\n    _this.subscribeToResize = _this.subscribeToResize.bind(_assertThisInitialized(_this));\n    _this.effectUpdateChildProps = _this.effectUpdateChildProps.bind(_assertThisInitialized(_this));\n    _this.updateAdaptivityProps = _this.updateAdaptivityProps.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ResizableContainer, [{\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [new InfernoEffect(this.subscribeToResize, [this.infoTextVisible, this.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.infoTextVisible, this.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {\n      var _this$_effects$, _this$_effects$2;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.infoTextVisible, this.isLargeDisplayMode]);\n      null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.infoTextVisible, this.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate]);\n    }\n  }, {\n    key: \"infoTextVisible\",\n    get: function get() {\n      var state = this._currentState || this.state;\n      return state.infoTextVisible;\n    }\n  }, {\n    key: \"set_infoTextVisible\",\n    value: function set_infoTextVisible(value) {\n      var _this2 = this;\n\n      this.setState(function (state) {\n        _this2._currentState = state;\n        var newValue = value();\n        _this2._currentState = null;\n        return {\n          infoTextVisible: newValue\n        };\n      });\n    }\n  }, {\n    key: \"isLargeDisplayMode\",\n    get: function get() {\n      var state = this._currentState || this.state;\n      return state.isLargeDisplayMode;\n    }\n  }, {\n    key: \"set_isLargeDisplayMode\",\n    value: function set_isLargeDisplayMode(value) {\n      var _this3 = this;\n\n      this.setState(function (state) {\n        _this3._currentState = state;\n        var newValue = value();\n        _this3._currentState = null;\n        return {\n          isLargeDisplayMode: newValue\n        };\n      });\n    }\n  }, {\n    key: \"subscribeToResize\",\n    value: function subscribeToResize() {\n      var _this4 = this;\n\n      var callback = function callback() {\n        _this4.updateAdaptivityProps();\n      };\n\n      resizeCallbacks.add(callback);\n      return function () {\n        resizeCallbacks.remove(callback);\n      };\n    }\n  }, {\n    key: \"effectUpdateChildProps\",\n    value: function effectUpdateChildProps() {\n      var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\n\n      if (parentWidth > 0) {\n        this.updateAdaptivityProps();\n      }\n    }\n  }, {\n    key: \"updateAdaptivityProps\",\n    value: function updateAdaptivityProps() {\n      var _this5 = this;\n\n      var currentElementsWidth = getElementsWidth({\n        parent: this.parentRef.current,\n        pageSizes: this.pageSizesRef.current,\n        info: this.infoTextRef.current,\n        pages: this.pagesRef.current\n      });\n\n      if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.isLargeDisplayMode)) {\n        return;\n      }\n\n      var isEmpty = !isDefined(this.elementsWidth);\n\n      if (isEmpty) {\n        this.elementsWidth = {};\n      }\n\n      if (isEmpty || this.isLargeDisplayMode) {\n        this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\n        this.elementsWidth.pages = currentElementsWidth.pages;\n      }\n\n      if (isEmpty || this.infoTextVisible) {\n        this.elementsWidth.info = currentElementsWidth.info;\n      }\n\n      this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\n        parent: currentElementsWidth.parent\n      }, this.elementsWidth));\n      this.set_infoTextVisible(function () {\n        return _this5.actualAdaptivityProps.infoTextVisible;\n      });\n      this.set_isLargeDisplayMode(function () {\n        return _this5.actualAdaptivityProps.isLargeDisplayMode;\n      });\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, [\"contentTemplate\", \"pagerProps\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          contentTemplate: getTemplate(props.contentTemplate)\n        }),\n        infoTextVisible: this.infoTextVisible,\n        isLargeDisplayMode: this.isLargeDisplayMode,\n        parentRef: this.parentRef,\n        pageSizesRef: this.pageSizesRef,\n        infoTextRef: this.infoTextRef,\n        pagesRef: this.pagesRef,\n        updateAdaptivityProps: this.updateAdaptivityProps,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return ResizableContainer;\n}(InfernoComponent);\nResizableContainer.defaultProps = _extends({}, ResizableContainerProps);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js"],"names":["_objectWithoutPropertiesLoose","_extends","createComponentVNode","normalizeProps","InfernoEffect","InfernoComponent","resizeCallbacks","getElementWidth","getElementStyle","isDefined","viewFunction","_ref","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","props","Content","contentTemplate","pagerProps","restAttributes","rootElementRef","calculateAdaptivityProps","_ref2","infoWidth","info","pageSizesWidth","pageSizes","pagesWidth","pages","parentWidth","parent","minimalWidth","getElementsWidth","_ref3","pagesHtmlWidth","ResizableContainerProps","createRef","infernoCreateRef","getTemplate","TemplateProp","defaultProps","ResizableContainer","_currentState","state","subscribeToResize","bind","effectUpdateChildProps","updateAdaptivityProps","_this$_effects$","_this$_effects$2","_effects","update","value","setState","newValue","callback","add","remove","current","currentElementsWidth","actualAdaptivityProps","isEmpty","elementsWidth","set_infoTextVisible","set_isLargeDisplayMode","_this$props","restProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content,\r\n            pagerProps: pagerProps\r\n        },\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, _extends({}, pagerProps, restAttributes)))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this._currentState = null;\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.infoTextVisible, this.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.infoTextVisible, this.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.infoTextVisible, this.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.infoTextVisible, this.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    get infoTextVisible() {\r\n        var state = this._currentState || this.state;\r\n        return state.infoTextVisible\r\n    }\r\n    set_infoTextVisible(value) {\r\n        this.setState(state => {\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            this._currentState = null;\r\n            return {\r\n                infoTextVisible: newValue\r\n            }\r\n        })\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var state = this._currentState || this.state;\r\n        return state.isLargeDisplayMode\r\n    }\r\n    set_isLargeDisplayMode(value) {\r\n        this.setState(state => {\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            this._currentState = null;\r\n            return {\r\n                isLargeDisplayMode: newValue\r\n            }\r\n        })\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\r\n        if (parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.set_infoTextVisible(() => this.actualAdaptivityProps.infoTextVisible);\r\n        this.set_isLargeDisplayMode(() => this.actualAdaptivityProps.isLargeDisplayMode)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, [\"contentTemplate\", \"pagerProps\"]);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.infoTextVisible,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = _extends({}, ResizableContainerProps);\r\n"]},"metadata":{},"sourceType":"module"}