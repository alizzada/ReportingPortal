{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var InfernoEffect = /*#__PURE__*/function () {\n  function InfernoEffect(effect, dependency) {\n    _classCallCheck(this, InfernoEffect);\n\n    this.effect = effect;\n    this.dependency = dependency;\n    this.destroy = effect();\n  }\n\n  _createClass(InfernoEffect, [{\n    key: \"update\",\n    value: function update(dependency) {\n      var _this = this;\n\n      if (!dependency || dependency.some(function (d, i) {\n        return _this.dependency[i] !== d;\n      })) {\n        this.dispose();\n        this.destroy = this.effect();\n      }\n\n      if (dependency) {\n        this.dependency = dependency;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.destroy) {\n        this.destroy();\n      }\n    }\n  }]);\n\n  return InfernoEffect;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@devextreme/vdom/dist/esm/effect.js"],"names":["InfernoEffect","effect","dependency","destroy","some","d","i","dispose"],"mappings":";;AAAA,WAAaA,aAAb;AACI,yBAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAC5B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAeF,MAAM,EAArB;AACH;;AALL;AAAA;AAAA,WAMI,gBAAOC,UAAP,EAAmB;AAAA;;AACf,UAAI,CAACA,UAAD,IAAeA,UAAU,CAACE,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAU,KAAI,CAACJ,UAAL,CAAgBI,CAAhB,MAAuBD,CAAjC;AAAA,OAAhB,CAAnB,EAAwE;AACpE,aAAKE,OAAL;AACA,aAAKJ,OAAL,GAAe,KAAKF,MAAL,EAAf;AACH;;AACD,UAAIC,UAAJ,EAAgB;AACZ,aAAKA,UAAL,GAAkBA,UAAlB;AACH;AACJ;AAdL;AAAA;AAAA,WAeI,mBAAU;AACN,UAAI,KAAKC,OAAT,EAAkB;AACd,aAAKA,OAAL;AACH;AACJ;AAnBL;;AAAA;AAAA","sourcesContent":["export class InfernoEffect {\n    constructor(effect, dependency) {\n        this.effect = effect;\n        this.dependency = dependency;\n        this.destroy = effect();\n    }\n    update(dependency) {\n        if (!dependency || dependency.some((d, i) => this.dependency[i] !== d)) {\n            this.dispose();\n            this.destroy = this.effect();\n        }\n        if (dependency) {\n            this.dependency = dependency;\n        }\n    }\n    dispose() {\n        if (this.destroy) {\n            this.destroy();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}