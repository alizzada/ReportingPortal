{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog_manager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport messageLocalization from \"../../localization/message\";\nimport FileManagerNameEditorDialog from \"./ui.file_manager.dialog.name_editor\";\nimport FileManagerFolderChooserDialog from \"./ui.file_manager.dialog.folder_chooser\";\nimport FileManagerDeleteItemDialog from \"./ui.file_manager.dialog.delete_item\";\n\nvar FileManagerDialogManager = /*#__PURE__*/function () {\n  function FileManagerDialogManager($element, options) {\n    _classCallCheck(this, FileManagerDialogManager);\n\n    this._$element = $element;\n    this._options = options;\n    var baseDialogOptions = {\n      onClosed: this._options.onDialogClosed,\n      rtlEnabled: this._options.rtlEnabled\n    };\n    var $chooseFolderDialog = $(\"<div>\").appendTo(this._$element);\n    this._chooseDirectoryDialog = new FileManagerFolderChooserDialog($chooseFolderDialog, extend(baseDialogOptions, this._options.chooseDirectoryDialog));\n    var $renameDialog = $(\"<div>\").appendTo(this._$element);\n    this._renameItemDialog = new FileManagerNameEditorDialog($renameDialog, extend(baseDialogOptions, {\n      title: messageLocalization.format(\"dxFileManager-dialogRenameItemTitle\"),\n      buttonText: messageLocalization.format(\"dxFileManager-dialogRenameItemButtonText\")\n    }));\n    var $createDialog = $(\"<div>\").appendTo(this._$element);\n    this._createItemDialog = new FileManagerNameEditorDialog($createDialog, extend(baseDialogOptions, {\n      title: messageLocalization.format(\"dxFileManager-dialogCreateDirectoryTitle\"),\n      buttonText: messageLocalization.format(\"dxFileManager-dialogCreateDirectoryButtonText\")\n    }));\n    var $deleteItemDialog = $(\"<div>\").appendTo(this._$element);\n    this._deleteItemDialog = new FileManagerDeleteItemDialog($deleteItemDialog, baseDialogOptions);\n  }\n\n  _createClass(FileManagerDialogManager, [{\n    key: \"getCopyDialog\",\n    value: function getCopyDialog(targetItemInfos) {\n      this._chooseDirectoryDialog.switchToCopyDialog(targetItemInfos);\n\n      return this._chooseDirectoryDialog;\n    }\n  }, {\n    key: \"getMoveDialog\",\n    value: function getMoveDialog(targetItemInfos) {\n      this._chooseDirectoryDialog.switchToMoveDialog(targetItemInfos);\n\n      return this._chooseDirectoryDialog;\n    }\n  }, {\n    key: \"getRenameItemDialog\",\n    value: function getRenameItemDialog() {\n      return this._renameItemDialog;\n    }\n  }, {\n    key: \"getCreateItemDialog\",\n    value: function getCreateItemDialog() {\n      return this._createItemDialog;\n    }\n  }, {\n    key: \"getDeleteItemDialog\",\n    value: function getDeleteItemDialog() {\n      return this._deleteItemDialog;\n    }\n  }, {\n    key: \"updateDialogRtl\",\n    value: function updateDialogRtl(value) {\n      [this._chooseDirectoryDialog, this._renameItemDialog, this._createItemDialog, this._deleteItemDialog].forEach(function (dialog) {\n        dialog.option(\"rtlEnabled\", value);\n      });\n    }\n  }]);\n\n  return FileManagerDialogManager;\n}();\n\nexport default FileManagerDialogManager;","map":null,"metadata":{},"sourceType":"module"}