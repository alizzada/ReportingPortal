{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.name_editor.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport TextBox from \"../text_box\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog.js\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR = \"dx-filemanager-dialog-name-editor\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP = \"dx-filemanager-dialog-name-editor-popup\";\n\nvar FileManagerNameEditorDialog = /*#__PURE__*/function (_FileManagerDialogBas) {\n  _inherits(FileManagerNameEditorDialog, _FileManagerDialogBas);\n\n  var _super = _createSuper(FileManagerNameEditorDialog);\n\n  function FileManagerNameEditorDialog() {\n    _classCallCheck(this, FileManagerNameEditorDialog);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerNameEditorDialog, [{\n    key: \"show\",\n    value: function show(name) {\n      name = name || \"\";\n\n      if (this._nameTextBox) {\n        this._nameTextBox.option(\"value\", name);\n      } else {\n        this._initialNameValue = name;\n      }\n\n      _get(_getPrototypeOf(FileManagerNameEditorDialog.prototype), \"show\", this).call(this);\n    }\n  }, {\n    key: \"_onPopupShown\",\n    value: function _onPopupShown() {\n      if (!this._nameTextBox) {\n        return;\n      }\n\n      var $textBoxInput = this._nameTextBox._input();\n\n      $textBoxInput.length && $textBoxInput[0].select();\n\n      this._nameTextBox.focus();\n    }\n  }, {\n    key: \"_getDialogOptions\",\n    value: function _getDialogOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerNameEditorDialog.prototype), \"_getDialogOptions\", this).call(this), {\n        title: this.option(\"title\"),\n        buttonText: this.option(\"buttonText\"),\n        contentCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR,\n        popupCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP\n      });\n    }\n  }, {\n    key: \"_createContentTemplate\",\n    value: function _createContentTemplate(element) {\n      _get(_getPrototypeOf(FileManagerNameEditorDialog.prototype), \"_createContentTemplate\", this).call(this, element);\n\n      this._nameTextBox = this._createComponent($(\"<div>\"), TextBox, {\n        value: this._initialNameValue,\n        onEnterKey: this._applyDialogChanges.bind(this)\n      });\n\n      this._$contentElement.append(this._nameTextBox.$element());\n    }\n  }, {\n    key: \"_getDialogResult\",\n    value: function _getDialogResult() {\n      var nameValue = this._nameTextBox.option(\"value\");\n\n      return nameValue ? {\n        name: nameValue\n      } : null;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerNameEditorDialog.prototype), \"_getDefaultOptions\", this).call(this), {\n        title: \"\",\n        buttonText: \"\"\n      });\n    }\n  }]);\n\n  return FileManagerNameEditorDialog;\n}(FileManagerDialogBase);\n\nexport default FileManagerNameEditorDialog;","map":null,"metadata":{},"sourceType":"module"}