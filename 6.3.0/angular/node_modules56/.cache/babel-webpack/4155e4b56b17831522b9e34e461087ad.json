{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/vdom\";\nimport { Row } from \"../row\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel } from \"../../utils\";\nimport { AllDayPanelTableBody } from \"./all_day_panel/table_body\";\nimport { DateTableLayoutProps } from \"./layout_props\";\nexport var viewFunction = function viewFunction(_ref) {\n  var _ref$props = _ref.props,\n      Cell = _ref$props.cellTemplate,\n      dataCellTemplate = _ref$props.dataCellTemplate,\n      groupOrientation = _ref$props.groupOrientation,\n      viewData = _ref$props.viewData;\n  return createFragment(viewData.groupedData.map(function (_ref2, index) {\n    var allDayPanel = _ref2.allDayPanel,\n        dateTable = _ref2.dateTable,\n        groupIndex = _ref2.groupIndex;\n    return createFragment([getIsGroupedAllDayPanel(viewData, index) && createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanel,\n      dataCellTemplate: dataCellTemplate,\n      isVerticalGroupOrientation: true,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount\n    }), dateTable.map(function (cellsRow) {\n      return createComponentVNode(2, Row, {\n        className: \"dx-scheduler-date-table-row\",\n        leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n        rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n        leftVirtualCellCount: viewData.leftVirtualCellCount,\n        rightVirtualCellCount: viewData.rightVirtualCellCount,\n        children: cellsRow.map(function (_ref3) {\n          var endDate = _ref3.endDate,\n              firstDayOfMonth = _ref3.firstDayOfMonth,\n              cellGroupIndex = _ref3.groupIndex,\n              groups = _ref3.groups,\n              cellIndex = _ref3.index,\n              isFirstGroupCell = _ref3.isFirstGroupCell,\n              isLastGroupCell = _ref3.isLastGroupCell,\n              key = _ref3.key,\n              otherMonth = _ref3.otherMonth,\n              startDate = _ref3.startDate,\n              text = _ref3.text,\n              today = _ref3.today;\n          return Cell({\n            isFirstGroupCell: isFirstGroupCell,\n            isLastGroupCell: isLastGroupCell,\n            startDate: startDate,\n            endDate: endDate,\n            groups: groups,\n            groupIndex: cellGroupIndex,\n            index: cellIndex,\n            dataCellTemplate: dataCellTemplate,\n            key: key,\n            text: text,\n            today: today,\n            otherMonth: otherMonth,\n            firstDayOfMonth: firstDayOfMonth\n          });\n        })\n      }, cellsRow[0].key - viewData.leftVirtualCellCount);\n    })], 0, getKeyByGroup(groupIndex, groupOrientation));\n  }), 0);\n};\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var DateTableBody = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(DateTableBody, _BaseInfernoComponent);\n\n  var _super = _createSuper(DateTableBody);\n\n  function DateTableBody(props) {\n    var _this;\n\n    _classCallCheck(this, DateTableBody);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DateTableBody, [{\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, [\"addDateTableClass\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          cellTemplate: getTemplate(props.cellTemplate),\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return DateTableBody;\n}(BaseInfernoComponent);\nDateTableBody.defaultProps = _extends({}, DateTableLayoutProps);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js"],"names":["_objectWithoutPropertiesLoose","_extends","createFragment","createComponentVNode","normalizeProps","Fragment","BaseInfernoComponent","Row","getKeyByGroup","getIsGroupedAllDayPanel","AllDayPanelTableBody","DateTableLayoutProps","viewFunction","_ref","props","Cell","cellTemplate","dataCellTemplate","groupOrientation","viewData","groupedData","map","_ref2","index","allDayPanel","dateTable","groupIndex","isVerticalGroupOrientation","leftVirtualCellWidth","rightVirtualCellWidth","leftVirtualCellCount","rightVirtualCellCount","cellsRow","className","children","_ref3","endDate","firstDayOfMonth","cellGroupIndex","groups","cellIndex","isFirstGroupCell","isLastGroupCell","key","otherMonth","startDate","text","today","getTemplate","TemplateProp","defaultProps","DateTableBody","state","_this$props","restProps","restAttributes"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    Row\r\n} from \"../row\";\r\nimport {\r\n    getKeyByGroup,\r\n    getIsGroupedAllDayPanel\r\n} from \"../../utils\";\r\nimport {\r\n    AllDayPanelTableBody\r\n} from \"./all_day_panel/table_body\";\r\nimport {\r\n    DateTableLayoutProps\r\n} from \"./layout_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            cellTemplate: Cell,\r\n            dataCellTemplate: dataCellTemplate,\r\n            groupOrientation: groupOrientation,\r\n            viewData: viewData\r\n        }\r\n    } = _ref;\r\n    return createFragment(viewData.groupedData.map((_ref2, index) => {\r\n        var {\r\n            allDayPanel: allDayPanel,\r\n            dateTable: dateTable,\r\n            groupIndex: groupIndex\r\n        } = _ref2;\r\n        return createFragment([getIsGroupedAllDayPanel(viewData, index) && createComponentVNode(2, AllDayPanelTableBody, {\r\n            viewData: allDayPanel,\r\n            dataCellTemplate: dataCellTemplate,\r\n            isVerticalGroupOrientation: true,\r\n            leftVirtualCellWidth: viewData.leftVirtualCellWidth,\r\n            rightVirtualCellWidth: viewData.rightVirtualCellWidth,\r\n            leftVirtualCellCount: viewData.leftVirtualCellCount,\r\n            rightVirtualCellCount: viewData.rightVirtualCellCount\r\n        }), dateTable.map(cellsRow => createComponentVNode(2, Row, {\r\n            className: \"dx-scheduler-date-table-row\",\r\n            leftVirtualCellWidth: viewData.leftVirtualCellWidth,\r\n            rightVirtualCellWidth: viewData.rightVirtualCellWidth,\r\n            leftVirtualCellCount: viewData.leftVirtualCellCount,\r\n            rightVirtualCellCount: viewData.rightVirtualCellCount,\r\n            children: cellsRow.map(_ref3 => {\r\n                var {\r\n                    endDate: endDate,\r\n                    firstDayOfMonth: firstDayOfMonth,\r\n                    groupIndex: cellGroupIndex,\r\n                    groups: groups,\r\n                    index: cellIndex,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    key: key,\r\n                    otherMonth: otherMonth,\r\n                    startDate: startDate,\r\n                    text: text,\r\n                    today: today\r\n                } = _ref3;\r\n                return Cell({\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    groups: groups,\r\n                    groupIndex: cellGroupIndex,\r\n                    index: cellIndex,\r\n                    dataCellTemplate: dataCellTemplate,\r\n                    key: key,\r\n                    text: text,\r\n                    today: today,\r\n                    otherMonth: otherMonth,\r\n                    firstDayOfMonth: firstDayOfMonth\r\n                })\r\n            })\r\n        }, cellsRow[0].key - viewData.leftVirtualCellCount))], 0, getKeyByGroup(groupIndex, groupOrientation))\r\n    }), 0)\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class DateTableBody extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, [\"addDateTableClass\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\"]);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                cellTemplate: getTemplate(props.cellTemplate),\r\n                dataCellTemplate: getTemplate(props.dataCellTemplate)\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nDateTableBody.defaultProps = _extends({}, DateTableLayoutProps);\r\n"]},"metadata":{},"sourceType":"module"}