{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/core/templates/template.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../renderer\";\nimport { TemplateBase } from \"./template_base\";\nimport { normalizeTemplateElement } from \"../utils/dom\";\nimport { getCurrentTemplateEngine, registerTemplateEngine, setTemplateEngine } from \"./template_engine_registry\";\nimport \"./template_engines\";\nregisterTemplateEngine(\"default\", {\n  compile: function compile(element) {\n    return normalizeTemplateElement(element);\n  },\n  render: function render(template, model, index) {\n    return template.clone();\n  }\n});\nsetTemplateEngine(\"default\");\nexport var Template = /*#__PURE__*/function (_TemplateBase) {\n  _inherits(Template, _TemplateBase);\n\n  var _super = _createSuper(Template);\n\n  function Template(element) {\n    var _this;\n\n    _classCallCheck(this, Template);\n\n    _this = _super.call(this);\n    _this._element = element;\n    return _this;\n  }\n\n  _createClass(Template, [{\n    key: \"_renderCore\",\n    value: function _renderCore(options) {\n      var transclude = options.transclude;\n\n      if (!transclude && !this._compiledTemplate) {\n        this._compiledTemplate = getCurrentTemplateEngine().compile(this._element);\n      }\n\n      return $(\"<div>\").append(transclude ? this._element : getCurrentTemplateEngine().render(this._compiledTemplate, options.model, options.index)).contents();\n    }\n  }, {\n    key: \"source\",\n    value: function source() {\n      return $(this._element).clone();\n    }\n  }]);\n\n  return Template;\n}(TemplateBase);","map":null,"metadata":{},"sourceType":"module"}