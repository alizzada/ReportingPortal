{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/index.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport CustomButton from \"./custom\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { find } from \"../../../core/utils/array\";\nimport errors from \"../../widget/ui.errors\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\n\nfunction checkButtonInfo(buttonInfo) {\n  (function () {\n    if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\n      throw errors.Error(\"E1053\");\n    }\n  })();\n\n  (function () {\n    if (!(\"name\" in buttonInfo)) {\n      throw errors.Error(\"E1054\");\n    }\n  })();\n\n  (function () {\n    var name = buttonInfo.name;\n\n    if (\"string\" !== typeof name) {\n      throw errors.Error(\"E1055\");\n    }\n  })();\n\n  (function () {\n    var location = buttonInfo.location;\n\n    if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\n      buttonInfo.location = \"after\";\n    }\n  })();\n}\n\nfunction checkNamesUniqueness(existingNames, newName) {\n  if (-1 !== existingNames.indexOf(newName)) {\n    throw errors.Error(\"E1055\", newName);\n  }\n\n  existingNames.push(newName);\n}\n\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\n  return !!find(predefinedButtonsInfo, function (info) {\n    return info.name === name;\n  });\n}\n\nvar TextEditorButtonCollection = /*#__PURE__*/function () {\n  function TextEditorButtonCollection(editor, defaultButtonsInfo) {\n    _classCallCheck(this, TextEditorButtonCollection);\n\n    this.buttons = [];\n    this.defaultButtonsInfo = defaultButtonsInfo;\n    this.editor = editor;\n  }\n\n  _createClass(TextEditorButtonCollection, [{\n    key: \"_compileButtonInfo\",\n    value: function _compileButtonInfo(buttons) {\n      var _this = this;\n\n      var names = [];\n      return buttons.map(function (button) {\n        var isStringButton = \"string\" === typeof button;\n\n        if (!isStringButton) {\n          checkButtonInfo(button);\n        }\n\n        var isDefaultButton = isStringButton || isPredefinedButtonName(button.name, _this.defaultButtonsInfo);\n\n        if (isDefaultButton) {\n          var defaultButtonInfo = find(_this.defaultButtonsInfo, function (_ref) {\n            var name = _ref.name;\n            return name === button || name === button.name;\n          });\n\n          if (!defaultButtonInfo) {\n            throw errors.Error(\"E1056\", _this.editor.NAME, button);\n          }\n\n          checkNamesUniqueness(names, button);\n          return defaultButtonInfo;\n        } else {\n          var name = button.name;\n          checkNamesUniqueness(names, name);\n          return extend(button, {\n            Ctor: CustomButton\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_createButton\",\n    value: function _createButton(buttonsInfo) {\n      var Ctor = buttonsInfo.Ctor,\n          options = buttonsInfo.options,\n          name = buttonsInfo.name;\n      var button = new Ctor(name, this.editor, options);\n      this.buttons.push(button);\n      return button;\n    }\n  }, {\n    key: \"_renderButtons\",\n    value: function _renderButtons(buttons, $container, targetLocation) {\n      var _this2 = this;\n\n      var $buttonsContainer = null;\n      var buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\n      buttonsInfo.forEach(function (buttonsInfo) {\n        var _buttonsInfo$location = buttonsInfo.location,\n            location = _buttonsInfo$location === void 0 ? \"after\" : _buttonsInfo$location;\n\n        if (location === targetLocation) {\n          _this2._createButton(buttonsInfo).render(function () {\n            $buttonsContainer = $buttonsContainer || $(\"<div>\").addClass(TEXTEDITOR_BUTTONS_CONTAINER_CLASS);\n            \"before\" === targetLocation ? $container.prepend($buttonsContainer) : $container.append($buttonsContainer);\n            return $buttonsContainer;\n          }());\n        }\n      });\n      return $buttonsContainer;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.buttons.forEach(function (button) {\n        return button.dispose();\n      });\n      this.buttons = [];\n    }\n  }, {\n    key: \"getButton\",\n    value: function getButton(buttonName) {\n      var button = find(this.buttons, function (_ref2) {\n        var name = _ref2.name;\n        return name === buttonName;\n      });\n      return button && button.instance;\n    }\n  }, {\n    key: \"renderAfterButtons\",\n    value: function renderAfterButtons(buttons, $container) {\n      return this._renderButtons(buttons, $container, \"after\");\n    }\n  }, {\n    key: \"renderBeforeButtons\",\n    value: function renderBeforeButtons(buttons, $container) {\n      return this._renderButtons(buttons, $container, \"before\");\n    }\n  }, {\n    key: \"updateButtons\",\n    value: function updateButtons(names) {\n      this.buttons.forEach(function (button) {\n        if (!names || -1 !== names.indexOf(button.name)) {\n          button.update();\n        }\n      });\n    }\n  }]);\n\n  return TextEditorButtonCollection;\n}();\n\nexport { TextEditorButtonCollection as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/text_box/texteditor_button_collection/index.js"],"names":["$","CustomButton","extend","find","errors","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","checkButtonInfo","buttonInfo","Array","isArray","Error","name","location","checkNamesUniqueness","existingNames","newName","indexOf","push","isPredefinedButtonName","predefinedButtonsInfo","info","TextEditorButtonCollection","editor","defaultButtonsInfo","buttons","names","map","button","isStringButton","isDefaultButton","defaultButtonInfo","_ref","NAME","Ctor","buttonsInfo","options","$container","targetLocation","$buttonsContainer","_compileButtonInfo","forEach","_createButton","render","addClass","prepend","append","dispose","buttonName","_ref2","instance","_renderButtons","update"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,wBAAd;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,SACIC,MADJ,QAEO,4BAFP;AAGA,SACIC,IADJ,QAEO,2BAFP;AAGA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,IAAIC,kCAAkC,GAAG,iCAAzC;;AAEA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AACjC,GAAC,YAAM;AACH,QAAI,CAACA,UAAD,IAAe,aAAa,OAAOA,UAAnC,IAAiDC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAArD,EAAgF;AAC5E,YAAMH,MAAM,CAACM,KAAP,CAAa,OAAb,CAAN;AACH;AACJ,GAJD;;AAKA,GAAC,YAAM;AACH,QAAI,EAAE,UAAUH,UAAZ,CAAJ,EAA6B;AACzB,YAAMH,MAAM,CAACM,KAAP,CAAa,OAAb,CAAN;AACH;AACJ,GAJD;;AAKA,GAAC,YAAM;AACH,QACUC,IADV,GAEIJ,UAFJ,CACII,IADJ;;AAGA,QAAI,aAAa,OAAOA,IAAxB,EAA8B;AAC1B,YAAMP,MAAM,CAACM,KAAP,CAAa,OAAb,CAAN;AACH;AACJ,GAPD;;AAQA,GAAC,YAAM;AACH,QACcE,QADd,GAEIL,UAFJ,CACIK,QADJ;;AAGA,QAAI,cAAcL,UAAd,IAA4B,YAAYK,QAAxC,IAAoD,aAAaA,QAArE,EAA+E;AAC3EL,MAAAA,UAAU,CAACK,QAAX,GAAsB,OAAtB;AACH;AACJ,GAPD;AAQH;;AAED,SAASC,oBAAT,CAA8BC,aAA9B,EAA6CC,OAA7C,EAAsD;AAClD,MAAI,CAAC,CAAD,KAAOD,aAAa,CAACE,OAAd,CAAsBD,OAAtB,CAAX,EAA2C;AACvC,UAAMX,MAAM,CAACM,KAAP,CAAa,OAAb,EAAsBK,OAAtB,CAAN;AACH;;AACDD,EAAAA,aAAa,CAACG,IAAd,CAAmBF,OAAnB;AACH;;AAED,SAASG,sBAAT,CAAgCP,IAAhC,EAAsCQ,qBAAtC,EAA6D;AACzD,SAAO,CAAC,CAAChB,IAAI,CAACgB,qBAAD,EAAwB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACT,IAAL,KAAcA,IAAlB;AAAA,GAA5B,CAAb;AACH;;IACoBU,0B;AACjB,sCAAYC,MAAZ,EAAoBC,kBAApB,EAAwC;AAAA;;AACpC,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKD,kBAAL,GAA0BA,kBAA1B;AACA,SAAKD,MAAL,GAAcA,MAAd;AACH;;;;WACD,4BAAmBE,OAAnB,EAA4B;AAAA;;AACxB,UAAIC,KAAK,GAAG,EAAZ;AACA,aAAOD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM,EAAI;AACzB,YAAIC,cAAc,GAAG,aAAa,OAAOD,MAAzC;;AACA,YAAI,CAACC,cAAL,EAAqB;AACjBtB,UAAAA,eAAe,CAACqB,MAAD,CAAf;AACH;;AACD,YAAIE,eAAe,GAAGD,cAAc,IAAIV,sBAAsB,CAACS,MAAM,CAAChB,IAAR,EAAc,KAAI,CAACY,kBAAnB,CAA9D;;AACA,YAAIM,eAAJ,EAAqB;AACjB,cAAIC,iBAAiB,GAAG3B,IAAI,CAAC,KAAI,CAACoB,kBAAN,EAA0B,UAAAQ,IAAI,EAAI;AAC1D,gBACUpB,IADV,GAEIoB,IAFJ,CACIpB,IADJ;AAGA,mBAAOA,IAAI,KAAKgB,MAAT,IAAmBhB,IAAI,KAAKgB,MAAM,CAAChB,IAA1C;AACH,WAL2B,CAA5B;;AAMA,cAAI,CAACmB,iBAAL,EAAwB;AACpB,kBAAM1B,MAAM,CAACM,KAAP,CAAa,OAAb,EAAsB,KAAI,CAACY,MAAL,CAAYU,IAAlC,EAAwCL,MAAxC,CAAN;AACH;;AACDd,UAAAA,oBAAoB,CAACY,KAAD,EAAQE,MAAR,CAApB;AACA,iBAAOG,iBAAP;AACH,SAZD,MAYO;AACH,cACUnB,IADV,GAEIgB,MAFJ,CACIhB,IADJ;AAGAE,UAAAA,oBAAoB,CAACY,KAAD,EAAQd,IAAR,CAApB;AACA,iBAAOT,MAAM,CAACyB,MAAD,EAAS;AAClBM,YAAAA,IAAI,EAAEhC;AADY,WAAT,CAAb;AAGH;AACJ,OA3BM,CAAP;AA4BH;;;WACD,uBAAciC,WAAd,EAA2B;AACvB,UACUD,IADV,GAIIC,WAJJ,CACID,IADJ;AAAA,UAEaE,OAFb,GAIID,WAJJ,CAEIC,OAFJ;AAAA,UAGUxB,IAHV,GAIIuB,WAJJ,CAGIvB,IAHJ;AAKA,UAAIgB,MAAM,GAAG,IAAIM,IAAJ,CAAStB,IAAT,EAAe,KAAKW,MAApB,EAA4Ba,OAA5B,CAAb;AACA,WAAKX,OAAL,CAAaP,IAAb,CAAkBU,MAAlB;AACA,aAAOA,MAAP;AACH;;;WACD,wBAAeH,OAAf,EAAwBY,UAAxB,EAAoCC,cAApC,EAAoD;AAAA;;AAChD,UAAIC,iBAAiB,GAAG,IAAxB;AACA,UAAIJ,WAAW,GAAGV,OAAO,GAAG,KAAKe,kBAAL,CAAwBf,OAAxB,CAAH,GAAsC,KAAKD,kBAApE;AACAW,MAAAA,WAAW,CAACM,OAAZ,CAAoB,UAAAN,WAAW,EAAI;AAC/B,oCAEIA,WAFJ,CACItB,QADJ;AAAA,YACcA,QADd,sCACyB,OADzB;;AAGA,YAAIA,QAAQ,KAAKyB,cAAjB,EAAiC;AAC7B,UAAA,MAAI,CAACI,aAAL,CAAmBP,WAAnB,EAAgCQ,MAAhC,CAAwC,YAAM;AAC1CJ,YAAAA,iBAAiB,GAAGA,iBAAiB,IAAItC,CAAC,CAAC,OAAD,CAAD,CAAW2C,QAAX,CAAoBtC,kCAApB,CAAzC;AACA,yBAAagC,cAAb,GAA8BD,UAAU,CAACQ,OAAX,CAAmBN,iBAAnB,CAA9B,GAAsEF,UAAU,CAACS,MAAX,CAAkBP,iBAAlB,CAAtE;AACA,mBAAOA,iBAAP;AACH,WAJsC,EAAvC;AAKH;AACJ,OAXD;AAYA,aAAOA,iBAAP;AACH;;;WACD,iBAAQ;AACJ,WAAKd,OAAL,CAAagB,OAAb,CAAqB,UAAAb,MAAM;AAAA,eAAIA,MAAM,CAACmB,OAAP,EAAJ;AAAA,OAA3B;AACA,WAAKtB,OAAL,GAAe,EAAf;AACH;;;WACD,mBAAUuB,UAAV,EAAsB;AAClB,UAAIpB,MAAM,GAAGxB,IAAI,CAAC,KAAKqB,OAAN,EAAe,UAAAwB,KAAK,EAAI;AACrC,YACUrC,IADV,GAEIqC,KAFJ,CACIrC,IADJ;AAGA,eAAOA,IAAI,KAAKoC,UAAhB;AACH,OALgB,CAAjB;AAMA,aAAOpB,MAAM,IAAIA,MAAM,CAACsB,QAAxB;AACH;;;WACD,4BAAmBzB,OAAnB,EAA4BY,UAA5B,EAAwC;AACpC,aAAO,KAAKc,cAAL,CAAoB1B,OAApB,EAA6BY,UAA7B,EAAyC,OAAzC,CAAP;AACH;;;WACD,6BAAoBZ,OAApB,EAA6BY,UAA7B,EAAyC;AACrC,aAAO,KAAKc,cAAL,CAAoB1B,OAApB,EAA6BY,UAA7B,EAAyC,QAAzC,CAAP;AACH;;;WACD,uBAAcX,KAAd,EAAqB;AACjB,WAAKD,OAAL,CAAagB,OAAb,CAAqB,UAAAb,MAAM,EAAI;AAC3B,YAAI,CAACF,KAAD,IAAU,CAAC,CAAD,KAAOA,KAAK,CAACT,OAAN,CAAcW,MAAM,CAAChB,IAArB,CAArB,EAAiD;AAC7CgB,UAAAA,MAAM,CAACwB,MAAP;AACH;AACJ,OAJD;AAKH;;;;;;SAzFgB9B,0B","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/index.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport CustomButton from \"./custom\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    find\r\n} from \"../../../core/utils/array\";\r\nimport errors from \"../../widget/ui.errors\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\n\r\nfunction checkButtonInfo(buttonInfo) {\r\n    (() => {\r\n        if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\r\n            throw errors.Error(\"E1053\")\r\n        }\r\n    })();\r\n    (() => {\r\n        if (!(\"name\" in buttonInfo)) {\r\n            throw errors.Error(\"E1054\")\r\n        }\r\n    })();\r\n    (() => {\r\n        var {\r\n            name: name\r\n        } = buttonInfo;\r\n        if (\"string\" !== typeof name) {\r\n            throw errors.Error(\"E1055\")\r\n        }\r\n    })();\r\n    (() => {\r\n        var {\r\n            location: location\r\n        } = buttonInfo;\r\n        if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\r\n            buttonInfo.location = \"after\"\r\n        }\r\n    })()\r\n}\r\n\r\nfunction checkNamesUniqueness(existingNames, newName) {\r\n    if (-1 !== existingNames.indexOf(newName)) {\r\n        throw errors.Error(\"E1055\", newName)\r\n    }\r\n    existingNames.push(newName)\r\n}\r\n\r\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\r\n    return !!find(predefinedButtonsInfo, info => info.name === name)\r\n}\r\nexport default class TextEditorButtonCollection {\r\n    constructor(editor, defaultButtonsInfo) {\r\n        this.buttons = [];\r\n        this.defaultButtonsInfo = defaultButtonsInfo;\r\n        this.editor = editor\r\n    }\r\n    _compileButtonInfo(buttons) {\r\n        var names = [];\r\n        return buttons.map(button => {\r\n            var isStringButton = \"string\" === typeof button;\r\n            if (!isStringButton) {\r\n                checkButtonInfo(button)\r\n            }\r\n            var isDefaultButton = isStringButton || isPredefinedButtonName(button.name, this.defaultButtonsInfo);\r\n            if (isDefaultButton) {\r\n                var defaultButtonInfo = find(this.defaultButtonsInfo, _ref => {\r\n                    var {\r\n                        name: name\r\n                    } = _ref;\r\n                    return name === button || name === button.name\r\n                });\r\n                if (!defaultButtonInfo) {\r\n                    throw errors.Error(\"E1056\", this.editor.NAME, button)\r\n                }\r\n                checkNamesUniqueness(names, button);\r\n                return defaultButtonInfo\r\n            } else {\r\n                var {\r\n                    name: name\r\n                } = button;\r\n                checkNamesUniqueness(names, name);\r\n                return extend(button, {\r\n                    Ctor: CustomButton\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _createButton(buttonsInfo) {\r\n        var {\r\n            Ctor: Ctor,\r\n            options: options,\r\n            name: name\r\n        } = buttonsInfo;\r\n        var button = new Ctor(name, this.editor, options);\r\n        this.buttons.push(button);\r\n        return button\r\n    }\r\n    _renderButtons(buttons, $container, targetLocation) {\r\n        var $buttonsContainer = null;\r\n        var buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\r\n        buttonsInfo.forEach(buttonsInfo => {\r\n            var {\r\n                location: location = \"after\"\r\n            } = buttonsInfo;\r\n            if (location === targetLocation) {\r\n                this._createButton(buttonsInfo).render((() => {\r\n                    $buttonsContainer = $buttonsContainer || $(\"<div>\").addClass(TEXTEDITOR_BUTTONS_CONTAINER_CLASS);\r\n                    \"before\" === targetLocation ? $container.prepend($buttonsContainer) : $container.append($buttonsContainer);\r\n                    return $buttonsContainer\r\n                })())\r\n            }\r\n        });\r\n        return $buttonsContainer\r\n    }\r\n    clean() {\r\n        this.buttons.forEach(button => button.dispose());\r\n        this.buttons = []\r\n    }\r\n    getButton(buttonName) {\r\n        var button = find(this.buttons, _ref2 => {\r\n            var {\r\n                name: name\r\n            } = _ref2;\r\n            return name === buttonName\r\n        });\r\n        return button && button.instance\r\n    }\r\n    renderAfterButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"after\")\r\n    }\r\n    renderBeforeButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"before\")\r\n    }\r\n    updateButtons(names) {\r\n        this.buttons.forEach(button => {\r\n            if (!names || -1 !== names.indexOf(button.name)) {\r\n                button.update()\r\n            }\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}