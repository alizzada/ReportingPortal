{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport $ from \"../../../core/renderer\";\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\n\nvar CurrentTimeShader = /*#__PURE__*/function () {\n  function CurrentTimeShader(workSpace) {\n    _classCallCheck(this, CurrentTimeShader);\n\n    this._workSpace = workSpace;\n    this._$container = this._workSpace._dateTableScrollable.$content();\n  }\n\n  _createClass(CurrentTimeShader, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.initShaderElements();\n      this.renderShader();\n      this.applyShaderMargin(this._$shader);\n\n      this._shader.forEach(function (shader, index) {\n        _this._$container.append(shader);\n      });\n    }\n  }, {\n    key: \"initShaderElements\",\n    value: function initShaderElements() {\n      this._$shader = this.createShader();\n      this._shader = [];\n\n      this._shader.push(this._$shader);\n    }\n  }, {\n    key: \"renderShader\",\n    value: function renderShader() {}\n  }, {\n    key: \"applyShaderMargin\",\n    value: function applyShaderMargin($shader) {\n      if ($shader && this._workSpace.option(\"crossScrollingEnabled\")) {\n        $shader.css(\"marginTop\", -getBoundingRect(this._$container.get(0)).height);\n        $shader.css(\"height\", getBoundingRect(this._$container.get(0)).height);\n      }\n    }\n  }, {\n    key: \"createShader\",\n    value: function createShader() {\n      return $(\"<div>\").addClass(DATE_TIME_SHADER_CLASS);\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove();\n    }\n  }]);\n\n  return CurrentTimeShader;\n}();\n\nexport default CurrentTimeShader;","map":null,"metadata":{},"sourceType":"module"}