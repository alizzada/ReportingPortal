{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/vdom\";\nimport { PageSizeSmall } from \"./small\";\nimport { PageSizeLarge } from \"./large\";\nimport { PagerProps } from \"../common/pager_props\";\nimport messageLocalization from \"../../../../localization/message\";\nimport { PAGER_PAGE_SIZES_CLASS } from \"../common/consts\";\nexport var viewFunction = function viewFunction(_ref) {\n  var htmlRef = _ref.htmlRef,\n      normalizedPageSizes = _ref.normalizedPageSizes,\n      _ref$props = _ref.props,\n      isLargeDisplayMode = _ref$props.isLargeDisplayMode,\n      pageSize = _ref$props.pageSize,\n      pageSizeChange = _ref$props.pageSizeChange;\n  return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\n    pageSizes: normalizedPageSizes,\n    pageSize: pageSize,\n    pageSizeChange: pageSizeChange\n  }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\n    parentRef: htmlRef,\n    pageSizes: normalizedPageSizes,\n    pageSize: pageSize,\n    pageSizeChange: pageSizeChange\n  })], 0, null, null, htmlRef);\n};\n\nfunction getAllText() {\n  return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")();\n}\n\nvar PageSizeSelectorProps = {\n  isLargeDisplayMode: true\n};\nvar PageSizeSelectorPropsType = {\n  pageSizes: PagerProps.pageSizes,\n  isLargeDisplayMode: PageSizeSelectorProps.isLargeDisplayMode,\n  defaultPageSize: PagerProps.pageSize\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport var PageSizeSelector = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(PageSizeSelector, _InfernoComponent);\n\n  var _super = _createSuper(PageSizeSelector);\n\n  function PageSizeSelector(props) {\n    var _this;\n\n    _classCallCheck(this, PageSizeSelector);\n\n    _this = _super.call(this, props);\n    _this._currentState = null;\n    _this.htmlRef = infernoCreateRef();\n    _this.state = {\n      pageSize: void 0 !== _this.props.pageSize ? _this.props.pageSize : _this.props.defaultPageSize\n    };\n    _this.setRootElementRef = _this.setRootElementRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PageSizeSelector, [{\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [new InfernoEffect(this.setRootElementRef, [])];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {}\n  }, {\n    key: \"__state_pageSize\",\n    get: function get() {\n      var state = this._currentState || this.state;\n      return void 0 !== this.props.pageSize ? this.props.pageSize : state.pageSize;\n    }\n  }, {\n    key: \"set_pageSize\",\n    value: function set_pageSize(value) {\n      var _this2 = this;\n\n      this.setState(function (state) {\n        var _this$props$pageSizeC, _this$props;\n\n        _this2._currentState = state;\n        var newValue = value();\n        null === (_this$props$pageSizeC = (_this$props = _this2.props).pageSizeChange) || void 0 === _this$props$pageSizeC ? void 0 : _this$props$pageSizeC.call(_this$props, newValue);\n        _this2._currentState = null;\n        return {\n          pageSize: newValue\n        };\n      });\n    }\n  }, {\n    key: \"setRootElementRef\",\n    value: function setRootElementRef() {\n      var rootElementRef = this.props.rootElementRef;\n\n      if (rootElementRef) {\n        rootElementRef.current = this.htmlRef.current;\n      }\n    }\n  }, {\n    key: \"normalizedPageSizes\",\n    get: function get() {\n      var pageSizes = this.props.pageSizes;\n      return pageSizes.map(function (p) {\n        return \"all\" === p || 0 === p ? {\n          text: getAllText(),\n          value: 0\n        } : {\n          text: String(p),\n          value: p\n        };\n      });\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props$pageSize = _extends({}, this.props, {\n        pageSize: this.__state_pageSize\n      }),\n          restProps = _objectWithoutPropertiesLoose(_this$props$pageSize, [\"defaultPageSize\", \"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          pageSize: this.__state_pageSize\n        }),\n        htmlRef: this.htmlRef,\n        normalizedPageSizes: this.normalizedPageSizes,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return PageSizeSelector;\n}(InfernoComponent);\nPageSizeSelector.defaultProps = _extends({}, PageSizeSelectorPropsType);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js"],"names":["_extends","_objectWithoutPropertiesLoose","createVNode","createComponentVNode","InfernoEffect","InfernoComponent","PageSizeSmall","PageSizeLarge","PagerProps","messageLocalization","PAGER_PAGE_SIZES_CLASS","viewFunction","_ref","htmlRef","normalizedPageSizes","props","isLargeDisplayMode","pageSize","pageSizeChange","pageSizes","parentRef","getAllText","getFormatter","PageSizeSelectorProps","PageSizeSelectorPropsType","defaultPageSize","createRef","infernoCreateRef","PageSizeSelector","_currentState","state","setRootElementRef","bind","value","setState","_this$props$pageSizeC","_this$props","newValue","call","rootElementRef","current","map","p","text","String","_this$props$pageSize","__state_pageSize","restProps","restAttributes","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    PagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    pageSizes: PagerProps.pageSizes,\r\n    isLargeDisplayMode: PageSizeSelectorProps.isLargeDisplayMode,\r\n    defaultPageSize: PagerProps.pageSize\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this._currentState = null;\r\n        this.htmlRef = infernoCreateRef();\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize\r\n        };\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    updateEffects() {}\r\n    get __state_pageSize() {\r\n        var state = this._currentState || this.state;\r\n        return void 0 !== this.props.pageSize ? this.props.pageSize : state.pageSize\r\n    }\r\n    set_pageSize(value) {\r\n        this.setState(state => {\r\n            var _this$props$pageSizeC, _this$props;\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            null === (_this$props$pageSizeC = (_this$props = this.props).pageSizeChange) || void 0 === _this$props$pageSizeC ? void 0 : _this$props$pageSizeC.call(_this$props, newValue);\r\n            this._currentState = null;\r\n            return {\r\n                pageSize: newValue\r\n            }\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        var {\r\n            pageSizes: pageSizes\r\n        } = this.props;\r\n        return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n            text: getAllText(),\r\n            value: 0\r\n        } : {\r\n            text: String(p),\r\n            value: p\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize = _extends({}, this.props, {\r\n                pageSize: this.__state_pageSize\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize, [\"defaultPageSize\", \"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"]);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: this.__state_pageSize\r\n            }),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = _extends({}, PageSizeSelectorPropsType);\r\n"]},"metadata":{},"sourceType":"module"}