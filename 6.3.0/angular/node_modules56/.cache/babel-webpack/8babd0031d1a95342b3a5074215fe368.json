{"ast":null,"code":"import _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.dialogs.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Popup from \"../popup\";\nimport Form from \"../form\";\nimport \"../tag_box\";\nimport \"../radio_group\";\nimport messageLocalization from \"../../localization/message\";\nexport var GanttDialog = /*#__PURE__*/function () {\n  function GanttDialog(owner, $element) {\n    _classCallCheck(this, GanttDialog);\n\n    this._popupInstance = owner._createComponent($element, Popup);\n    this.infoMap = {\n      TaskEdit: TaskEditDialogInfo,\n      Resources: ResourcesEditDialogInfo,\n      Confirmation: ConfirmDialogInfo,\n      ConstraintViolation: ConstraintViolationDialogInfo\n    };\n  }\n\n  _createClass(GanttDialog, [{\n    key: \"_apply\",\n    value: function _apply() {\n      if (this._dialogInfo.isValidated()) {\n        var result = this._dialogInfo.getResult();\n\n        this._callback(result);\n\n        this.hide();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(name, parameters, callback, afterClosing, editingOptions) {\n      this._callback = callback;\n      this._afterClosing = afterClosing;\n\n      if (!this.infoMap[name]) {\n        return;\n      }\n\n      this._dialogInfo = new this.infoMap[name](parameters, this._apply.bind(this), this.hide.bind(this), editingOptions);\n\n      this._popupInstance.option({\n        showTitle: !!this._dialogInfo.getTitle(),\n        title: this._dialogInfo.getTitle(),\n        toolbarItems: this._dialogInfo.getToolbarItems(),\n        maxWidth: this._dialogInfo.getMaxWidth(),\n        height: this._dialogInfo.getHeight(),\n        contentTemplate: this._dialogInfo.getContentTemplate()\n      });\n\n      this._popupInstance.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._popupInstance.hide();\n\n      if (this._afterClosing) {\n        this._afterClosing();\n      }\n    }\n  }]);\n\n  return GanttDialog;\n}();\n\nvar DialogInfoBase = /*#__PURE__*/function () {\n  function DialogInfoBase(parameters, applyAction, hideAction, editingOptions) {\n    _classCallCheck(this, DialogInfoBase);\n\n    this._parameters = parameters;\n    this._applyAction = applyAction;\n    this._hideAction = hideAction;\n    this._editingOptions = editingOptions;\n  }\n\n  _createClass(DialogInfoBase, [{\n    key: \"_getFormItems\",\n    value: function _getFormItems() {\n      return {};\n    }\n  }, {\n    key: \"_getFormCssClass\",\n    value: function _getFormCssClass() {\n      return \"\";\n    }\n  }, {\n    key: \"_getFormData\",\n    value: function _getFormData() {\n      return this._parameters;\n    }\n  }, {\n    key: \"_updateParameters\",\n    value: function _updateParameters() {}\n  }, {\n    key: \"_getOkToolbarItem\",\n    value: function _getOkToolbarItem() {\n      return this._getToolbarItem(\"OK\", this._applyAction);\n    }\n  }, {\n    key: \"_getCancelToolbarItem\",\n    value: function _getCancelToolbarItem() {\n      return this._getToolbarItem(\"Cancel\", this._hideAction);\n    }\n  }, {\n    key: \"_getYesToolbarItem\",\n    value: function _getYesToolbarItem() {\n      return this._getToolbarItem(\"Yes\", this._applyAction);\n    }\n  }, {\n    key: \"_getNoToolbarItem\",\n    value: function _getNoToolbarItem() {\n      return this._getToolbarItem(\"No\", this._hideAction);\n    }\n  }, {\n    key: \"_getToolbarItem\",\n    value: function _getToolbarItem(localizationText, action) {\n      return {\n        widget: \"dxButton\",\n        toolbar: \"bottom\",\n        options: {\n          text: messageLocalization.format(localizationText),\n          onClick: action\n        }\n      };\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return \"\";\n    }\n  }, {\n    key: \"getToolbarItems\",\n    value: function getToolbarItems() {\n      return this._editingOptions.enabled ? [this._getOkToolbarItem(), this._getCancelToolbarItem()] : [this._getCancelToolbarItem()];\n    }\n  }, {\n    key: \"getMaxWidth\",\n    value: function getMaxWidth() {\n      return 400;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return \"auto\";\n    }\n  }, {\n    key: \"getContentTemplate\",\n    value: function getContentTemplate() {\n      var _this = this;\n\n      return function (content) {\n        _this._form = new Form(content, {\n          formData: _this._getFormData(),\n          items: _this._getFormItems(),\n          elementAttr: {\n            class: _this._getFormCssClass()\n          }\n        });\n        return content;\n      };\n    }\n  }, {\n    key: \"getResult\",\n    value: function getResult() {\n      var formData = this._form && this._form.option(\"formData\");\n\n      this._updateParameters(formData);\n\n      return this._parameters;\n    }\n  }, {\n    key: \"isValidated\",\n    value: function isValidated() {\n      return true;\n    }\n  }]);\n\n  return DialogInfoBase;\n}();\n\nvar TaskEditDialogInfo = /*#__PURE__*/function (_DialogInfoBase) {\n  _inherits(TaskEditDialogInfo, _DialogInfoBase);\n\n  var _super = _createSuper(TaskEditDialogInfo);\n\n  function TaskEditDialogInfo() {\n    _classCallCheck(this, TaskEditDialogInfo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TaskEditDialogInfo, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return messageLocalization.format(\"dxGantt-dialogTaskDetailsTitle\");\n    }\n  }, {\n    key: \"_getFormItems\",\n    value: function _getFormItems() {\n      var _this2 = this;\n\n      var readOnly = !this._editingOptions.enabled || !this._editingOptions.allowTaskUpdating;\n      var readOnlyRange = readOnly || !this._parameters.enableRangeEdit;\n      return [{\n        dataField: \"title\",\n        editorType: \"dxTextBox\",\n        label: {\n          text: messageLocalization.format(\"dxGantt-dialogTitle\")\n        },\n        editorOptions: {\n          readOnly: readOnly || this._isReadOnlyField(\"title\")\n        },\n        visible: !this._isHiddenField(\"title\")\n      }, {\n        dataField: \"start\",\n        editorType: \"dxDateBox\",\n        label: {\n          text: messageLocalization.format(\"dxGantt-dialogStartTitle\")\n        },\n        editorOptions: {\n          type: \"datetime\",\n          width: \"100%\",\n          readOnly: readOnlyRange || this._isReadOnlyField(\"start\")\n        },\n        visible: !this._isHiddenField(\"start\"),\n        validationRules: [{\n          type: \"required\",\n          message: messageLocalization.format(\"validation-required-formatted\", messageLocalization.format(\"dxGantt-dialogStartTitle\"))\n        }]\n      }, {\n        dataField: \"end\",\n        editorType: \"dxDateBox\",\n        label: {\n          text: messageLocalization.format(\"dxGantt-dialogEndTitle\")\n        },\n        editorOptions: {\n          type: \"datetime\",\n          width: \"100%\",\n          readOnly: readOnlyRange || this._isReadOnlyField(\"end\")\n        },\n        visible: !this._isHiddenField(\"end\"),\n        validationRules: [{\n          type: \"required\",\n          message: messageLocalization.format(\"validation-required-formatted\", messageLocalization.format(\"dxGantt-dialogEndTitle\"))\n        }]\n      }, {\n        dataField: \"progress\",\n        editorType: \"dxNumberBox\",\n        label: {\n          text: messageLocalization.format(\"dxGantt-dialogProgressTitle\")\n        },\n        editorOptions: {\n          showSpinButtons: true,\n          min: 0,\n          max: 1,\n          format: \"#0%\",\n          step: .01,\n          readOnly: readOnlyRange || this._isReadOnlyField(\"progress\")\n        },\n        visible: !this._isHiddenField(\"progress\")\n      }, {\n        dataField: \"assigned.items\",\n        editorType: \"dxTagBox\",\n        label: {\n          text: messageLocalization.format(\"dxGantt-dialogResourcesTitle\")\n        },\n        editorOptions: {\n          readOnly: readOnly || !this._editingOptions.allowTaskResourceUpdating,\n          dataSource: this._parameters.resources.items,\n          displayExpr: \"text\",\n          buttons: [{\n            name: \"editResources\",\n            location: \"after\",\n            options: {\n              disabled: !this._editingOptions.allowResourceAdding && !this._editingOptions.allowResourceDeleting,\n              text: \"...\",\n              hint: messageLocalization.format(\"dxGantt-dialogEditResourceListHint\"),\n              onClick: function onClick() {\n                _this2._parameters.showResourcesDialogCommand.execute(function () {\n                  _this2._parameters.showTaskEditDialogCommand.execute();\n                });\n              }\n            }\n          }]\n        }\n      }];\n    }\n  }, {\n    key: \"_isReadOnlyField\",\n    value: function _isReadOnlyField(field) {\n      return this._parameters.readOnlyFields.indexOf(field) > -1;\n    }\n  }, {\n    key: \"_isHiddenField\",\n    value: function _isHiddenField(field) {\n      return this._parameters.hiddenFields.indexOf(field) > -1;\n    }\n  }, {\n    key: \"_getFormData\",\n    value: function _getFormData() {\n      var data = {};\n\n      for (var field in this._parameters) {\n        data[field] = \"progress\" === field ? this._parameters[field] / 100 : this._parameters[field];\n      }\n\n      return data;\n    }\n  }, {\n    key: \"_updateParameters\",\n    value: function _updateParameters(formData) {\n      this._parameters.title = formData.title;\n      this._parameters.start = formData.start;\n      this._parameters.end = formData.end;\n      this._parameters.progress = 100 * formData.progress;\n      this._parameters.assigned = formData.assigned;\n    }\n  }, {\n    key: \"isValidated\",\n    value: function isValidated() {\n      var _this$_form;\n\n      var validationResult = null === (_this$_form = this._form) || void 0 === _this$_form ? void 0 : _this$_form.validate();\n      return null === validationResult || void 0 === validationResult ? void 0 : validationResult.isValid;\n    }\n  }]);\n\n  return TaskEditDialogInfo;\n}(DialogInfoBase);\n\nvar ResourcesEditDialogInfo = /*#__PURE__*/function (_DialogInfoBase2) {\n  _inherits(ResourcesEditDialogInfo, _DialogInfoBase2);\n\n  var _super2 = _createSuper(ResourcesEditDialogInfo);\n\n  function ResourcesEditDialogInfo() {\n    _classCallCheck(this, ResourcesEditDialogInfo);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ResourcesEditDialogInfo, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return messageLocalization.format(\"dxGantt-dialogResourceManagerTitle\");\n    }\n  }, {\n    key: \"_getFormItems\",\n    value: function _getFormItems() {\n      var _this3 = this;\n\n      return [{\n        label: {\n          visible: false\n        },\n        dataField: \"resources.items\",\n        editorType: \"dxList\",\n        editorOptions: {\n          allowItemDeleting: this._editingOptions.enabled && this._editingOptions.allowResourceDeleting,\n          itemDeleteMode: \"static\",\n          selectionMode: \"none\",\n          items: this._parameters.resources.items,\n          height: 250,\n          noDataText: messageLocalization.format(\"dxGantt-dialogEditNoResources\"),\n          onInitialized: function onInitialized(e) {\n            _this3.list = e.component;\n          },\n          onItemDeleted: function onItemDeleted(e) {\n            _this3._parameters.resources.remove(e.itemData);\n          }\n        }\n      }, {\n        label: {\n          visible: false\n        },\n        editorType: \"dxTextBox\",\n        editorOptions: {\n          readOnly: !this._editingOptions.enabled || !this._editingOptions.allowResourceAdding,\n          onInitialized: function onInitialized(e) {\n            _this3.textBox = e.component;\n          },\n          onInput: function onInput(e) {\n            var addButton = e.component.getButton(\"addResource\");\n            var resourceName = e.component.option(\"text\");\n            addButton.option(\"disabled\", 0 === resourceName.length);\n          },\n          buttons: [{\n            name: \"addResource\",\n            location: \"after\",\n            options: {\n              text: messageLocalization.format(\"dxGantt-dialogButtonAdd\"),\n              disabled: true,\n              onClick: function onClick(e) {\n                var newItem = _this3._parameters.resources.createItem();\n\n                newItem.text = _this3.textBox.option(\"text\");\n\n                _this3._parameters.resources.add(newItem);\n\n                _this3.list.option(\"items\", _this3._parameters.resources.items);\n\n                _this3.list.scrollToItem(newItem);\n\n                _this3.textBox.reset();\n\n                e.component.option(\"disabled\", true);\n              }\n            }\n          }]\n        }\n      }];\n    }\n  }]);\n\n  return ResourcesEditDialogInfo;\n}(DialogInfoBase);\n\nvar ConfirmDialogInfo = /*#__PURE__*/function (_DialogInfoBase3) {\n  _inherits(ConfirmDialogInfo, _DialogInfoBase3);\n\n  var _super3 = _createSuper(ConfirmDialogInfo);\n\n  function ConfirmDialogInfo() {\n    _classCallCheck(this, ConfirmDialogInfo);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(ConfirmDialogInfo, [{\n    key: \"getContentTemplate\",\n    value: function getContentTemplate() {\n      var _this4 = this;\n\n      return function (content) {\n        return _this4._getConfirmMessage();\n      };\n    }\n  }, {\n    key: \"_getConfirmMessage\",\n    value: function _getConfirmMessage() {\n      switch (this._parameters.type) {\n        case 0:\n          return messageLocalization.format(\"dxGantt-dialogTaskDeleteConfirmation\");\n\n        case 1:\n          return messageLocalization.format(\"dxGantt-dialogDependencyDeleteConfirmation\");\n\n        case 2:\n          return messageLocalization.format(\"dxGantt-dialogResourcesDeleteConfirmation\", this._parameters.message);\n\n        default:\n          return \"\";\n      }\n    }\n  }, {\n    key: \"getToolbarItems\",\n    value: function getToolbarItems() {\n      return [this._getYesToolbarItem(), this._getNoToolbarItem()];\n    }\n  }]);\n\n  return ConfirmDialogInfo;\n}(DialogInfoBase);\n\nvar ConstraintViolationDialogInfo = /*#__PURE__*/function (_DialogInfoBase4) {\n  _inherits(ConstraintViolationDialogInfo, _DialogInfoBase4);\n\n  var _super4 = _createSuper(ConstraintViolationDialogInfo);\n\n  function ConstraintViolationDialogInfo() {\n    _classCallCheck(this, ConstraintViolationDialogInfo);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(ConstraintViolationDialogInfo, [{\n    key: \"_getFormItems\",\n    value: function _getFormItems() {\n      var items = [];\n      items.push({\n        text: messageLocalization.format(\"dxGantt-dialogCancelOperationMessage\"),\n        value: 0\n      });\n      items.push({\n        text: messageLocalization.format(\"dxGantt-dialogDeleteDependencyMessage\"),\n        value: 1\n      });\n\n      if (!this._parameters.validationError.critical) {\n        items.push({\n          text: messageLocalization.format(\"dxGantt-dialogMoveTaskAndKeepDependencyMessage\"),\n          value: 2\n        });\n      }\n\n      return [{\n        template: this._parameters.validationError.critical ? messageLocalization.format(\"dxGantt-dialogConstraintCriticalViolationMessage\") : messageLocalization.format(\"dxGantt-dialogConstraintViolationMessage\")\n      }, {\n        cssClass: \"dx-cv-dialog-row\",\n        dataField: \"option\",\n        label: {\n          visible: false\n        },\n        editorType: \"dxRadioGroup\",\n        editorOptions: {\n          items: items,\n          valueExpr: \"value\",\n          value: 0\n        }\n      }];\n    }\n  }, {\n    key: \"_getFormCssClass\",\n    value: function _getFormCssClass() {\n      return \"dx-cv-dialog\";\n    }\n  }, {\n    key: \"_updateParameters\",\n    value: function _updateParameters(formData) {\n      this._parameters.option = formData.option;\n    }\n  }]);\n\n  return ConstraintViolationDialogInfo;\n}(DialogInfoBase);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/gantt/ui.gantt.dialogs.js"],"names":["Popup","Form","messageLocalization","GanttDialog","owner","$element","_popupInstance","_createComponent","infoMap","TaskEdit","TaskEditDialogInfo","Resources","ResourcesEditDialogInfo","Confirmation","ConfirmDialogInfo","ConstraintViolation","ConstraintViolationDialogInfo","_dialogInfo","isValidated","result","getResult","_callback","hide","name","parameters","callback","afterClosing","editingOptions","_afterClosing","_apply","bind","option","showTitle","getTitle","title","toolbarItems","getToolbarItems","maxWidth","getMaxWidth","height","getHeight","contentTemplate","getContentTemplate","show","DialogInfoBase","applyAction","hideAction","_parameters","_applyAction","_hideAction","_editingOptions","_getToolbarItem","localizationText","action","widget","toolbar","options","text","format","onClick","enabled","_getOkToolbarItem","_getCancelToolbarItem","content","_form","formData","_getFormData","items","_getFormItems","elementAttr","class","_getFormCssClass","_updateParameters","readOnly","allowTaskUpdating","readOnlyRange","enableRangeEdit","dataField","editorType","label","editorOptions","_isReadOnlyField","visible","_isHiddenField","type","width","validationRules","message","showSpinButtons","min","max","step","allowTaskResourceUpdating","dataSource","resources","displayExpr","buttons","location","disabled","allowResourceAdding","allowResourceDeleting","hint","showResourcesDialogCommand","execute","showTaskEditDialogCommand","field","readOnlyFields","indexOf","hiddenFields","data","start","end","progress","assigned","_this$_form","validationResult","validate","isValid","allowItemDeleting","itemDeleteMode","selectionMode","noDataText","onInitialized","e","list","component","onItemDeleted","remove","itemData","textBox","onInput","addButton","getButton","resourceName","length","newItem","createItem","add","scrollToItem","reset","_getConfirmMessage","_getYesToolbarItem","_getNoToolbarItem","push","value","validationError","critical","template","cssClass","valueExpr"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.dialogs.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Popup from \"../popup\";\r\nimport Form from \"../form\";\r\nimport \"../tag_box\";\r\nimport \"../radio_group\";\r\nimport messageLocalization from \"../../localization/message\";\r\nexport class GanttDialog {\r\n    constructor(owner, $element) {\r\n        this._popupInstance = owner._createComponent($element, Popup);\r\n        this.infoMap = {\r\n            TaskEdit: TaskEditDialogInfo,\r\n            Resources: ResourcesEditDialogInfo,\r\n            Confirmation: ConfirmDialogInfo,\r\n            ConstraintViolation: ConstraintViolationDialogInfo\r\n        }\r\n    }\r\n    _apply() {\r\n        if (this._dialogInfo.isValidated()) {\r\n            var result = this._dialogInfo.getResult();\r\n            this._callback(result);\r\n            this.hide()\r\n        }\r\n    }\r\n    show(name, parameters, callback, afterClosing, editingOptions) {\r\n        this._callback = callback;\r\n        this._afterClosing = afterClosing;\r\n        if (!this.infoMap[name]) {\r\n            return\r\n        }\r\n        this._dialogInfo = new this.infoMap[name](parameters, this._apply.bind(this), this.hide.bind(this), editingOptions);\r\n        this._popupInstance.option({\r\n            showTitle: !!this._dialogInfo.getTitle(),\r\n            title: this._dialogInfo.getTitle(),\r\n            toolbarItems: this._dialogInfo.getToolbarItems(),\r\n            maxWidth: this._dialogInfo.getMaxWidth(),\r\n            height: this._dialogInfo.getHeight(),\r\n            contentTemplate: this._dialogInfo.getContentTemplate()\r\n        });\r\n        this._popupInstance.show()\r\n    }\r\n    hide() {\r\n        this._popupInstance.hide();\r\n        if (this._afterClosing) {\r\n            this._afterClosing()\r\n        }\r\n    }\r\n}\r\nclass DialogInfoBase {\r\n    constructor(parameters, applyAction, hideAction, editingOptions) {\r\n        this._parameters = parameters;\r\n        this._applyAction = applyAction;\r\n        this._hideAction = hideAction;\r\n        this._editingOptions = editingOptions\r\n    }\r\n    _getFormItems() {\r\n        return {}\r\n    }\r\n    _getFormCssClass() {\r\n        return \"\"\r\n    }\r\n    _getFormData() {\r\n        return this._parameters\r\n    }\r\n    _updateParameters() {}\r\n    _getOkToolbarItem() {\r\n        return this._getToolbarItem(\"OK\", this._applyAction)\r\n    }\r\n    _getCancelToolbarItem() {\r\n        return this._getToolbarItem(\"Cancel\", this._hideAction)\r\n    }\r\n    _getYesToolbarItem() {\r\n        return this._getToolbarItem(\"Yes\", this._applyAction)\r\n    }\r\n    _getNoToolbarItem() {\r\n        return this._getToolbarItem(\"No\", this._hideAction)\r\n    }\r\n    _getToolbarItem(localizationText, action) {\r\n        return {\r\n            widget: \"dxButton\",\r\n            toolbar: \"bottom\",\r\n            options: {\r\n                text: messageLocalization.format(localizationText),\r\n                onClick: action\r\n            }\r\n        }\r\n    }\r\n    getTitle() {\r\n        return \"\"\r\n    }\r\n    getToolbarItems() {\r\n        return this._editingOptions.enabled ? [this._getOkToolbarItem(), this._getCancelToolbarItem()] : [this._getCancelToolbarItem()]\r\n    }\r\n    getMaxWidth() {\r\n        return 400\r\n    }\r\n    getHeight() {\r\n        return \"auto\"\r\n    }\r\n    getContentTemplate() {\r\n        return content => {\r\n            this._form = new Form(content, {\r\n                formData: this._getFormData(),\r\n                items: this._getFormItems(),\r\n                elementAttr: {\r\n                    class: this._getFormCssClass()\r\n                }\r\n            });\r\n            return content\r\n        }\r\n    }\r\n    getResult() {\r\n        var formData = this._form && this._form.option(\"formData\");\r\n        this._updateParameters(formData);\r\n        return this._parameters\r\n    }\r\n    isValidated() {\r\n        return true\r\n    }\r\n}\r\nclass TaskEditDialogInfo extends DialogInfoBase {\r\n    getTitle() {\r\n        return messageLocalization.format(\"dxGantt-dialogTaskDetailsTitle\")\r\n    }\r\n    _getFormItems() {\r\n        var readOnly = !this._editingOptions.enabled || !this._editingOptions.allowTaskUpdating;\r\n        var readOnlyRange = readOnly || !this._parameters.enableRangeEdit;\r\n        return [{\r\n            dataField: \"title\",\r\n            editorType: \"dxTextBox\",\r\n            label: {\r\n                text: messageLocalization.format(\"dxGantt-dialogTitle\")\r\n            },\r\n            editorOptions: {\r\n                readOnly: readOnly || this._isReadOnlyField(\"title\")\r\n            },\r\n            visible: !this._isHiddenField(\"title\")\r\n        }, {\r\n            dataField: \"start\",\r\n            editorType: \"dxDateBox\",\r\n            label: {\r\n                text: messageLocalization.format(\"dxGantt-dialogStartTitle\")\r\n            },\r\n            editorOptions: {\r\n                type: \"datetime\",\r\n                width: \"100%\",\r\n                readOnly: readOnlyRange || this._isReadOnlyField(\"start\")\r\n            },\r\n            visible: !this._isHiddenField(\"start\"),\r\n            validationRules: [{\r\n                type: \"required\",\r\n                message: messageLocalization.format(\"validation-required-formatted\", messageLocalization.format(\"dxGantt-dialogStartTitle\"))\r\n            }]\r\n        }, {\r\n            dataField: \"end\",\r\n            editorType: \"dxDateBox\",\r\n            label: {\r\n                text: messageLocalization.format(\"dxGantt-dialogEndTitle\")\r\n            },\r\n            editorOptions: {\r\n                type: \"datetime\",\r\n                width: \"100%\",\r\n                readOnly: readOnlyRange || this._isReadOnlyField(\"end\")\r\n            },\r\n            visible: !this._isHiddenField(\"end\"),\r\n            validationRules: [{\r\n                type: \"required\",\r\n                message: messageLocalization.format(\"validation-required-formatted\", messageLocalization.format(\"dxGantt-dialogEndTitle\"))\r\n            }]\r\n        }, {\r\n            dataField: \"progress\",\r\n            editorType: \"dxNumberBox\",\r\n            label: {\r\n                text: messageLocalization.format(\"dxGantt-dialogProgressTitle\")\r\n            },\r\n            editorOptions: {\r\n                showSpinButtons: true,\r\n                min: 0,\r\n                max: 1,\r\n                format: \"#0%\",\r\n                step: .01,\r\n                readOnly: readOnlyRange || this._isReadOnlyField(\"progress\")\r\n            },\r\n            visible: !this._isHiddenField(\"progress\")\r\n        }, {\r\n            dataField: \"assigned.items\",\r\n            editorType: \"dxTagBox\",\r\n            label: {\r\n                text: messageLocalization.format(\"dxGantt-dialogResourcesTitle\")\r\n            },\r\n            editorOptions: {\r\n                readOnly: readOnly || !this._editingOptions.allowTaskResourceUpdating,\r\n                dataSource: this._parameters.resources.items,\r\n                displayExpr: \"text\",\r\n                buttons: [{\r\n                    name: \"editResources\",\r\n                    location: \"after\",\r\n                    options: {\r\n                        disabled: !this._editingOptions.allowResourceAdding && !this._editingOptions.allowResourceDeleting,\r\n                        text: \"...\",\r\n                        hint: messageLocalization.format(\"dxGantt-dialogEditResourceListHint\"),\r\n                        onClick: () => {\r\n                            this._parameters.showResourcesDialogCommand.execute(() => {\r\n                                this._parameters.showTaskEditDialogCommand.execute()\r\n                            })\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }]\r\n    }\r\n    _isReadOnlyField(field) {\r\n        return this._parameters.readOnlyFields.indexOf(field) > -1\r\n    }\r\n    _isHiddenField(field) {\r\n        return this._parameters.hiddenFields.indexOf(field) > -1\r\n    }\r\n    _getFormData() {\r\n        var data = {};\r\n        for (var field in this._parameters) {\r\n            data[field] = \"progress\" === field ? this._parameters[field] / 100 : this._parameters[field]\r\n        }\r\n        return data\r\n    }\r\n    _updateParameters(formData) {\r\n        this._parameters.title = formData.title;\r\n        this._parameters.start = formData.start;\r\n        this._parameters.end = formData.end;\r\n        this._parameters.progress = 100 * formData.progress;\r\n        this._parameters.assigned = formData.assigned\r\n    }\r\n    isValidated() {\r\n        var _this$_form;\r\n        var validationResult = null === (_this$_form = this._form) || void 0 === _this$_form ? void 0 : _this$_form.validate();\r\n        return null === validationResult || void 0 === validationResult ? void 0 : validationResult.isValid\r\n    }\r\n}\r\nclass ResourcesEditDialogInfo extends DialogInfoBase {\r\n    getTitle() {\r\n        return messageLocalization.format(\"dxGantt-dialogResourceManagerTitle\")\r\n    }\r\n    _getFormItems() {\r\n        return [{\r\n            label: {\r\n                visible: false\r\n            },\r\n            dataField: \"resources.items\",\r\n            editorType: \"dxList\",\r\n            editorOptions: {\r\n                allowItemDeleting: this._editingOptions.enabled && this._editingOptions.allowResourceDeleting,\r\n                itemDeleteMode: \"static\",\r\n                selectionMode: \"none\",\r\n                items: this._parameters.resources.items,\r\n                height: 250,\r\n                noDataText: messageLocalization.format(\"dxGantt-dialogEditNoResources\"),\r\n                onInitialized: e => {\r\n                    this.list = e.component\r\n                },\r\n                onItemDeleted: e => {\r\n                    this._parameters.resources.remove(e.itemData)\r\n                }\r\n            }\r\n        }, {\r\n            label: {\r\n                visible: false\r\n            },\r\n            editorType: \"dxTextBox\",\r\n            editorOptions: {\r\n                readOnly: !this._editingOptions.enabled || !this._editingOptions.allowResourceAdding,\r\n                onInitialized: e => {\r\n                    this.textBox = e.component\r\n                },\r\n                onInput: e => {\r\n                    var addButton = e.component.getButton(\"addResource\");\r\n                    var resourceName = e.component.option(\"text\");\r\n                    addButton.option(\"disabled\", 0 === resourceName.length)\r\n                },\r\n                buttons: [{\r\n                    name: \"addResource\",\r\n                    location: \"after\",\r\n                    options: {\r\n                        text: messageLocalization.format(\"dxGantt-dialogButtonAdd\"),\r\n                        disabled: true,\r\n                        onClick: e => {\r\n                            var newItem = this._parameters.resources.createItem();\r\n                            newItem.text = this.textBox.option(\"text\");\r\n                            this._parameters.resources.add(newItem);\r\n                            this.list.option(\"items\", this._parameters.resources.items);\r\n                            this.list.scrollToItem(newItem);\r\n                            this.textBox.reset();\r\n                            e.component.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }]\r\n    }\r\n}\r\nclass ConfirmDialogInfo extends DialogInfoBase {\r\n    getContentTemplate() {\r\n        return content => this._getConfirmMessage()\r\n    }\r\n    _getConfirmMessage() {\r\n        switch (this._parameters.type) {\r\n            case 0:\r\n                return messageLocalization.format(\"dxGantt-dialogTaskDeleteConfirmation\");\r\n            case 1:\r\n                return messageLocalization.format(\"dxGantt-dialogDependencyDeleteConfirmation\");\r\n            case 2:\r\n                return messageLocalization.format(\"dxGantt-dialogResourcesDeleteConfirmation\", this._parameters.message);\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n    getToolbarItems() {\r\n        return [this._getYesToolbarItem(), this._getNoToolbarItem()]\r\n    }\r\n}\r\nclass ConstraintViolationDialogInfo extends DialogInfoBase {\r\n    _getFormItems() {\r\n        var items = [];\r\n        items.push({\r\n            text: messageLocalization.format(\"dxGantt-dialogCancelOperationMessage\"),\r\n            value: 0\r\n        });\r\n        items.push({\r\n            text: messageLocalization.format(\"dxGantt-dialogDeleteDependencyMessage\"),\r\n            value: 1\r\n        });\r\n        if (!this._parameters.validationError.critical) {\r\n            items.push({\r\n                text: messageLocalization.format(\"dxGantt-dialogMoveTaskAndKeepDependencyMessage\"),\r\n                value: 2\r\n            })\r\n        }\r\n        return [{\r\n            template: this._parameters.validationError.critical ? messageLocalization.format(\"dxGantt-dialogConstraintCriticalViolationMessage\") : messageLocalization.format(\"dxGantt-dialogConstraintViolationMessage\")\r\n        }, {\r\n            cssClass: \"dx-cv-dialog-row\",\r\n            dataField: \"option\",\r\n            label: {\r\n                visible: false\r\n            },\r\n            editorType: \"dxRadioGroup\",\r\n            editorOptions: {\r\n                items: items,\r\n                valueExpr: \"value\",\r\n                value: 0\r\n            }\r\n        }]\r\n    }\r\n    _getFormCssClass() {\r\n        return \"dx-cv-dialog\"\r\n    }\r\n    _updateParameters(formData) {\r\n        this._parameters.option = formData.option\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}