{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month_line.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport HorizontalAppointmentsStrategy from \"./ui.scheduler.appointments.strategy.horizontal\";\nimport dateUtils from \"../../../core/utils/date\";\nimport query from \"../../../data/query\";\nvar HOURS_IN_DAY = 24;\nvar MINUTES_IN_HOUR = 60;\nvar MILLISECONDS_IN_MINUTE = 6e4;\nvar ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;\n\nvar HorizontalMonthLineRenderingStrategy = /*#__PURE__*/function (_HorizontalAppointmen) {\n  _inherits(HorizontalMonthLineRenderingStrategy, _HorizontalAppointmen);\n\n  var _super = _createSuper(HorizontalMonthLineRenderingStrategy);\n\n  function HorizontalMonthLineRenderingStrategy() {\n    _classCallCheck(this, HorizontalMonthLineRenderingStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HorizontalMonthLineRenderingStrategy, [{\n    key: \"calculateAppointmentWidth\",\n    value: function calculateAppointmentWidth(appointment, position) {\n      var startDate = dateUtils.trimTime(position.info.appointment.startDate);\n      var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\n      var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n      var duration = Math.ceil(this._getDurationInDays(startDate, endDate));\n      var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);\n\n      if (this.instance.isVirtualScrolling()) {\n        var workSpace = this.instance.getWorkSpace();\n        var skippedDays = workSpace.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, endDate, duration);\n        width -= skippedDays * cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getDurationInDays\",\n    value: function _getDurationInDays(startDate, endDate) {\n      var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);\n\n      return adjustedDuration / dateUtils.dateToMilliseconds(\"day\") || ZERO_APPOINTMENT_DURATION_IN_DAYS;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function getDeltaTime(args, initialSize) {\n      return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize);\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function isAllDay() {\n      return false;\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function createTaskPositionMap(items, skipSorting) {\n      if (!skipSorting) {\n        this.instance.getAppointmentsInstance()._sortAppointmentsByStartDate(items);\n      }\n\n      return _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"createTaskPositionMap\", this).call(this, items);\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function _getSortedPositions(map, skipSorting) {\n      var result = _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"_getSortedPositions\", this).call(this, map);\n\n      if (!skipSorting) {\n        result = query(result).sortBy(\"top\").thenBy(\"left\").thenBy(\"cellPosition\").thenBy(\"i\").toArray();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function needCorrectAppointmentDates() {\n      return false;\n    }\n  }]);\n\n  return HorizontalMonthLineRenderingStrategy;\n}(HorizontalAppointmentsStrategy);\n\nexport default HorizontalMonthLineRenderingStrategy;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month_line.js"],"names":["HorizontalAppointmentsStrategy","dateUtils","query","HOURS_IN_DAY","MINUTES_IN_HOUR","MILLISECONDS_IN_MINUTE","ZERO_APPOINTMENT_DURATION_IN_DAYS","HorizontalMonthLineRenderingStrategy","appointment","position","startDate","trimTime","info","endDate","normalizeEndDateByViewEnd","cellWidth","getDefaultCellWidth","getAppointmentMinSize","duration","Math","ceil","_getDurationInDays","width","cropAppointmentWidth","instance","isVirtualScrolling","workSpace","getWorkSpace","skippedDays","viewDataProvider","getSkippedDaysCount","groupIndex","adjustedDuration","_adjustDurationByDaylightDiff","getTime","dateToMilliseconds","args","initialSize","_getDeltaWidth","items","skipSorting","getAppointmentsInstance","_sortAppointmentsByStartDate","map","result","sortBy","thenBy","toArray"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,8BAAP,MAA2C,iDAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,sBAAsB,GAAG,GAA7B;AACA,IAAIC,iCAAiC,GAAG,CAAxC;;IACMC,oC;;;;;;;;;;;;;WACF,mCAA0BC,WAA1B,EAAuCC,QAAvC,EAAiD;AAC7C,UAAIC,SAAS,GAAGT,SAAS,CAACU,QAAV,CAAmBF,QAAQ,CAACG,IAAT,CAAcJ,WAAd,CAA0BE,SAA7C,CAAhB;AACA,UAAIG,OAAO,GAAG,KAAKC,yBAAL,CAA+BN,WAA/B,EAA4CC,QAAQ,CAACG,IAAT,CAAcJ,WAAd,CAA0BK,OAAtE,CAAd;AACA,UAAIE,SAAS,GAAG,KAAKC,mBAAL,MAA8B,KAAKC,qBAAL,EAA9C;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKC,kBAAL,CAAwBX,SAAxB,EAAmCG,OAAnC,CAAV,CAAf;AACA,UAAIS,KAAK,GAAG,KAAKC,oBAAL,CAA0BL,QAAQ,GAAGH,SAArC,EAAgDA,SAAhD,CAAZ;;AACA,UAAI,KAAKS,QAAL,CAAcC,kBAAd,EAAJ,EAAwC;AACpC,YAAIC,SAAS,GAAG,KAAKF,QAAL,CAAcG,YAAd,EAAhB;AACA,YAAIC,WAAW,GAAGF,SAAS,CAACG,gBAAV,CAA2BC,mBAA3B,CAA+CrB,QAAQ,CAACsB,UAAxD,EAAoErB,SAApE,EAA+EG,OAA/E,EAAwFK,QAAxF,CAAlB;AACAI,QAAAA,KAAK,IAAIM,WAAW,GAAGb,SAAvB;AACH;;AACD,aAAOO,KAAP;AACH;;;WACD,4BAAmBZ,SAAnB,EAA8BG,OAA9B,EAAuC;AACnC,UAAImB,gBAAgB,GAAG,KAAKC,6BAAL,CAAmCpB,OAAO,CAACqB,OAAR,KAAoBxB,SAAS,CAACwB,OAAV,EAAvD,EAA4ExB,SAA5E,EAAuFG,OAAvF,CAAvB;;AACA,aAAOmB,gBAAgB,GAAG/B,SAAS,CAACkC,kBAAV,CAA6B,KAA7B,CAAnB,IAA0D7B,iCAAjE;AACH;;;WACD,sBAAa8B,IAAb,EAAmBC,WAAnB,EAAgC;AAC5B,aAAOlC,YAAY,GAAGC,eAAf,GAAiCC,sBAAjC,GAA0D,KAAKiC,cAAL,CAAoBF,IAApB,EAA0BC,WAA1B,CAAjE;AACH;;;WACD,oBAAW;AACP,aAAO,KAAP;AACH;;;WACD,+BAAsBE,KAAtB,EAA6BC,WAA7B,EAA0C;AACtC,UAAI,CAACA,WAAL,EAAkB;AACd,aAAKhB,QAAL,CAAciB,uBAAd,GAAwCC,4BAAxC,CAAqEH,KAArE;AACH;;AACD,6HAAmCA,KAAnC;AACH;;;WACD,6BAAoBI,GAApB,EAAyBH,WAAzB,EAAsC;AAClC,UAAII,MAAM,iHAA6BD,GAA7B,CAAV;;AACA,UAAI,CAACH,WAAL,EAAkB;AACdI,QAAAA,MAAM,GAAG1C,KAAK,CAAC0C,MAAD,CAAL,CAAcC,MAAd,CAAqB,KAArB,EAA4BC,MAA5B,CAAmC,MAAnC,EAA2CA,MAA3C,CAAkD,cAAlD,EAAkEA,MAAlE,CAAyE,GAAzE,EAA8EC,OAA9E,EAAT;AACH;;AACD,aAAOH,MAAP;AACH;;;WACD,uCAA8B;AAC1B,aAAO,KAAP;AACH;;;;EAvC8C5C,8B;;AAyCnD,eAAeO,oCAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month_line.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport HorizontalAppointmentsStrategy from \"./ui.scheduler.appointments.strategy.horizontal\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport query from \"../../../data/query\";\r\nvar HOURS_IN_DAY = 24;\r\nvar MINUTES_IN_HOUR = 60;\r\nvar MILLISECONDS_IN_MINUTE = 6e4;\r\nvar ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;\r\nclass HorizontalMonthLineRenderingStrategy extends HorizontalAppointmentsStrategy {\r\n    calculateAppointmentWidth(appointment, position) {\r\n        var startDate = dateUtils.trimTime(position.info.appointment.startDate);\r\n        var endDate = this.normalizeEndDateByViewEnd(appointment, position.info.appointment.endDate);\r\n        var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n        var duration = Math.ceil(this._getDurationInDays(startDate, endDate));\r\n        var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);\r\n        if (this.instance.isVirtualScrolling()) {\r\n            var workSpace = this.instance.getWorkSpace();\r\n            var skippedDays = workSpace.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, endDate, duration);\r\n            width -= skippedDays * cellWidth\r\n        }\r\n        return width\r\n    }\r\n    _getDurationInDays(startDate, endDate) {\r\n        var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);\r\n        return adjustedDuration / dateUtils.dateToMilliseconds(\"day\") || ZERO_APPOINTMENT_DURATION_IN_DAYS\r\n    }\r\n    getDeltaTime(args, initialSize) {\r\n        return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize)\r\n    }\r\n    isAllDay() {\r\n        return false\r\n    }\r\n    createTaskPositionMap(items, skipSorting) {\r\n        if (!skipSorting) {\r\n            this.instance.getAppointmentsInstance()._sortAppointmentsByStartDate(items)\r\n        }\r\n        return super.createTaskPositionMap(items)\r\n    }\r\n    _getSortedPositions(map, skipSorting) {\r\n        var result = super._getSortedPositions(map);\r\n        if (!skipSorting) {\r\n            result = query(result).sortBy(\"top\").thenBy(\"left\").thenBy(\"cellPosition\").thenBy(\"i\").toArray()\r\n        }\r\n        return result\r\n    }\r\n    needCorrectAppointmentDates() {\r\n        return false\r\n    }\r\n}\r\nexport default HorizontalMonthLineRenderingStrategy;\r\n"]},"metadata":{},"sourceType":"module"}