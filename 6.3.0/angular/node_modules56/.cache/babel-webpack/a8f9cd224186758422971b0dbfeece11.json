{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/widget_collector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../../../core/utils/iterator\";\n\nvar WidgetCollector = /*#__PURE__*/function () {\n  function WidgetCollector() {\n    _classCallCheck(this, WidgetCollector);\n\n    this._collection = [];\n  }\n\n  _createClass(WidgetCollector, [{\n    key: \"clear\",\n    value: function clear() {\n      this._collection = [];\n    }\n  }, {\n    key: \"add\",\n    value: function add(name, instance) {\n      this._collection.push({\n        name: name,\n        instance: instance\n      });\n    }\n  }, {\n    key: \"getByName\",\n    value: function getByName(widgetName) {\n      var widget = null;\n      each(this._collection, function (index, _ref) {\n        var name = _ref.name,\n            instance = _ref.instance;\n\n        if (name === widgetName) {\n          widget = instance;\n          return false;\n        }\n      });\n      return widget;\n    }\n  }, {\n    key: \"each\",\n    value: function each(handler) {\n      this._collection.forEach(function (_ref2) {\n        var name = _ref2.name,\n            instance = _ref2.instance;\n        return instance && handler(name, instance);\n      });\n    }\n  }]);\n\n  return WidgetCollector;\n}();\n\nexport { WidgetCollector as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/html_editor/modules/widget_collector.js"],"names":["each","WidgetCollector","_collection","name","instance","push","widgetName","widget","index","_ref","handler","forEach","_ref2"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,IADJ,QAEO,8BAFP;;IAGqBC,e;AACjB,6BAAc;AAAA;;AACV,SAAKC,WAAL,GAAmB,EAAnB;AACH;;;;WACD,iBAAQ;AACJ,WAAKA,WAAL,GAAmB,EAAnB;AACH;;;WACD,aAAIC,IAAJ,EAAUC,QAAV,EAAoB;AAChB,WAAKF,WAAL,CAAiBG,IAAjB,CAAsB;AAClBF,QAAAA,IAAI,EAAEA,IADY;AAElBC,QAAAA,QAAQ,EAAEA;AAFQ,OAAtB;AAIH;;;WACD,mBAAUE,UAAV,EAAsB;AAClB,UAAIC,MAAM,GAAG,IAAb;AACAP,MAAAA,IAAI,CAAC,KAAKE,WAAN,EAAmB,UAACM,KAAD,EAAQC,IAAR,EAAiB;AACpC,YACUN,IADV,GAGIM,IAHJ,CACIN,IADJ;AAAA,YAEcC,QAFd,GAGIK,IAHJ,CAEIL,QAFJ;;AAIA,YAAID,IAAI,KAAKG,UAAb,EAAyB;AACrBC,UAAAA,MAAM,GAAGH,QAAT;AACA,iBAAO,KAAP;AACH;AACJ,OATG,CAAJ;AAUA,aAAOG,MAAP;AACH;;;WACD,cAAKG,OAAL,EAAc;AACV,WAAKR,WAAL,CAAiBS,OAAjB,CAAyB,UAAAC,KAAK,EAAI;AAC9B,YACUT,IADV,GAGIS,KAHJ,CACIT,IADJ;AAAA,YAEcC,QAFd,GAGIQ,KAHJ,CAEIR,QAFJ;AAIA,eAAOA,QAAQ,IAAIM,OAAO,CAACP,IAAD,EAAOC,QAAP,CAA1B;AACH,OAND;AAOH;;;;;;SAnCgBH,e","sourcesContent":["/**\r\n * DevExtreme (esm/ui/html_editor/modules/widget_collector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nexport default class WidgetCollector {\r\n    constructor() {\r\n        this._collection = []\r\n    }\r\n    clear() {\r\n        this._collection = []\r\n    }\r\n    add(name, instance) {\r\n        this._collection.push({\r\n            name: name,\r\n            instance: instance\r\n        })\r\n    }\r\n    getByName(widgetName) {\r\n        var widget = null;\r\n        each(this._collection, (index, _ref) => {\r\n            var {\r\n                name: name,\r\n                instance: instance\r\n            } = _ref;\r\n            if (name === widgetName) {\r\n                widget = instance;\r\n                return false\r\n            }\r\n        });\r\n        return widget\r\n    }\r\n    each(handler) {\r\n        this._collection.forEach(_ref2 => {\r\n            var {\r\n                name: name,\r\n                instance: instance\r\n            } = _ref2;\r\n            return instance && handler(name, instance)\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}