{"ast":null,"code":"import _defineProperty from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inArray } from \"../../core/utils/array\";\nimport { map, each } from \"../../core/utils/iterator\";\nimport Class from \"../../core/class\";\nimport { format } from \"../../core/utils/string\";\nimport { deferUpdate } from \"../../core/utils/common\";\nimport { isDefined, isString } from \"../../core/utils/type\";\nimport { VirtualScrollController } from \"../grid_core/ui.grid_core.virtual_scrolling_core\";\nimport { foreachColumnInfo, createColumnsInfo } from \"../grid_core/ui.grid_core.virtual_columns_core\";\nimport { StateStoringController } from \"../grid_core/ui.grid_core.state_storing_core\";\nimport PivotGridDataSource from \"./data_source\";\nimport { findField, foreachTree, foreachTreeAsync, createPath, formatValue } from \"./ui.pivot_grid.utils\";\nvar math = Math;\nvar GRAND_TOTAL_TYPE = \"GT\";\nvar TOTAL_TYPE = \"T\";\nvar DATA_TYPE = \"D\";\nvar NOT_AVAILABLE = \"#N/A\";\nvar CHANGING_DURATION_IF_PAGINATE = 300;\n\nvar proxyMethod = function proxyMethod(instance, methodName, defaultResult) {\n  if (!instance[methodName]) {\n    instance[methodName] = function () {\n      var dataSource = this._dataSource;\n      return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult;\n    };\n  }\n};\n\nexport var DataController = Class.inherit(function () {\n  function formatCellValue(value, dataField, errorText) {\n    return value === NOT_AVAILABLE ? errorText : formatValue(value, dataField);\n  }\n\n  var createHeaderInfo = function () {\n    var addInfoItem = function addInfoItem(info, options) {\n      var breadth = options.lastIndex - options.index || 1;\n\n      var itemInfo = function (headerItem, breadth, isHorizontal, isTree) {\n        var infoItem = {\n          type: headerItem.type,\n          text: headerItem.text\n        };\n\n        if (headerItem.path) {\n          infoItem.path = headerItem.path;\n        }\n\n        if (headerItem.width) {\n          infoItem.width = headerItem.width;\n        }\n\n        if (isDefined(headerItem.wordWrapEnabled)) {\n          infoItem.wordWrapEnabled = headerItem.wordWrapEnabled;\n        }\n\n        if (headerItem.isLast) {\n          infoItem.isLast = true;\n        }\n\n        if (headerItem.sorted) {\n          infoItem.sorted = true;\n        }\n\n        if (headerItem.isMetric) {\n          infoItem.dataIndex = headerItem.dataIndex;\n        }\n\n        if (isDefined(headerItem.expanded)) {\n          infoItem.expanded = headerItem.expanded;\n        }\n\n        if (breadth > 1) {\n          infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth;\n        }\n\n        if (headerItem.depthSize && headerItem.depthSize > 1) {\n          infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize;\n        }\n\n        if (headerItem.index >= 0) {\n          infoItem.dataSourceIndex = headerItem.index;\n        }\n\n        if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\n          infoItem.width = null;\n          infoItem.isWhiteSpace = true;\n        }\n\n        return infoItem;\n      }(options.headerItem, breadth, options.isHorizontal, options.isTree);\n\n      !function (info, infoItem, itemIndex, depthIndex, isHorizontal) {\n        var index = isHorizontal ? depthIndex : itemIndex;\n\n        while (!info[index]) {\n          info.push([]);\n        }\n\n        if (isHorizontal) {\n          info[index].push(infoItem);\n        } else {\n          info[index].unshift(infoItem);\n        }\n      }(info, itemInfo, options.index, options.depth, options.isHorizontal);\n\n      if (!options.headerItem.children || 0 === options.headerItem.children.length) {\n        return options.lastIndex + 1;\n      }\n\n      return options.lastIndex;\n    };\n\n    var getViewHeaderItems = function getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\n      var cellDescriptionsCount = cellDescriptions.length;\n\n      var viewHeaderItems = function (headerItems, headerDescriptions) {\n        var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\n        var childrenStack = [];\n        var d = new Deferred();\n        var headerItem;\n        when(foreachTreeAsync(headerItems, function (items, index) {\n          var item = items[0];\n          var path = createPath(items);\n          headerItem = createHeaderItem(childrenStack, path.length, index);\n          headerItem.type = DATA_TYPE;\n          headerItem.value = item.value;\n          headerItem.path = path;\n          headerItem.text = item.text;\n          headerItem.index = item.index;\n          headerItem.displayText = item.displayText;\n          headerItem.key = item.key;\n          headerItem.isEmpty = item.isEmpty;\n\n          if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\n            headerItem.expanded = !!item.children;\n          }\n        })).done(function () {\n          d.resolve(createHeaderItem(childrenStack, 0, 0).children || []);\n        });\n        return d;\n      }(headerItems, headerDescriptions);\n\n      var dataFields = options.dataFields;\n      var d = new Deferred();\n      when(viewHeaderItems).done(function (viewHeaderItems) {\n        options.notifyProgress(.5);\n\n        if (options.showGrandTotals) {\n          viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\n            type: GRAND_TOTAL_TYPE,\n            isEmpty: options.isEmptyGrandTotal\n          });\n        }\n\n        var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\n        var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\n\n        if (hideData && hideTotals) {\n          depthSize = 1;\n        }\n\n        if (!hideTotals || \"tree\" === options.layout) {\n          !function (headerItems, headerDescriptions, showTotalsPrior, isTree) {\n            showTotalsPrior = showTotalsPrior || isTree;\n            foreachTree(headerItems, function (items, index) {\n              var item = items[0];\n              var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n              var dataField = headerDescriptions[items.length - 1];\n\n              if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\n                -1 !== index && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, extend({}, item, {\n                  children: null,\n                  type: TOTAL_TYPE,\n                  expanded: showTotalsPrior ? true : null,\n                  isAdditionalTotal: true\n                }));\n\n                if (showTotalsPrior) {\n                  item.expanded = null;\n                }\n              }\n            });\n          }(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout);\n        }\n\n        when(foreachTreeAsync(viewHeaderItems, function (items) {\n          var item = items[0];\n\n          if (!item.children || 0 === item.children.length) {\n            item.depthSize = depthSize - items.length + 1;\n          }\n        })).done(function () {\n          if (cellDescriptionsCount > 1) {\n            !function (headerItems, cellDescriptions, options) {\n              foreachTree(headerItems, function (items) {\n                var item = items[0];\n                var i;\n\n                if (!item.children || 0 === item.children.length) {\n                  item.children = [];\n\n                  for (i = 0; i < cellDescriptions.length; i++) {\n                    var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\n                    var isTotal = item.type === TOTAL_TYPE;\n                    var isValue = item.type === DATA_TYPE;\n                    var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && -1 !== inArray(i, options.hiddenGrandTotals) || isTotal && -1 !== inArray(i, options.hiddenTotals) || isValue && -1 !== inArray(i, options.hiddenValues);\n\n                    if (columnIsHidden) {\n                      continue;\n                    }\n\n                    item.children.push({\n                      caption: cellDescriptions[i].caption,\n                      path: item.path,\n                      type: item.type,\n                      value: i,\n                      index: item.index,\n                      dataIndex: i,\n                      isMetric: true,\n                      isEmpty: item.isEmpty && item.isEmpty[i]\n                    });\n                  }\n                }\n              });\n            }(viewHeaderItems, cellDescriptions, options);\n          }\n\n          !options.showEmpty && function (headerItems) {\n            foreachTree([{\n              children: headerItems\n            }], function (items, index) {\n              var item = items[0];\n              var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n              var isEmpty = item.isEmpty;\n\n              if (isEmpty && isEmpty.length) {\n                isEmpty = item.isEmpty.filter(function (isEmpty) {\n                  return isEmpty;\n                }).length === isEmpty.length;\n              }\n\n              if (item && !item.children && isEmpty) {\n                parentChildren.splice(index, 1);\n                !function removeEmptyParent(items, index) {\n                  var parent = items[index + 1];\n\n                  if (!items[index].children.length && parent && parent.children) {\n                    parent.children.splice(inArray(items[index], parent.children), 1);\n                    removeEmptyParent(items, index + 1);\n                  }\n                }(items, 1);\n              }\n            });\n          }(viewHeaderItems);\n          options.notifyProgress(.75);\n          when(foreachTreeAsync(viewHeaderItems, function (items) {\n            var item = items[0];\n            var isMetric = item.isMetric;\n            var field = headerDescriptions[items.length - 1] || {};\n\n            if (item.type === DATA_TYPE && !isMetric) {\n              item.width = field.width;\n            }\n\n            if (true === hideData && item.type === DATA_TYPE) {\n              var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\n              parentChildren.splice(inArray(item, parentChildren), 1);\n              return;\n            }\n\n            if (isMetric) {\n              item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled;\n            } else {\n              item.wordWrapEnabled = field.wordWrapEnabled;\n            }\n\n            item.isLast = !item.children || !item.children.length;\n\n            if (item.isLast) {\n              each(options.sortBySummaryPaths, function (index, sortBySummaryPath) {\n                if (!isDefined(item.dataIndex)) {\n                  sortBySummaryPath = sortBySummaryPath.slice(0);\n                  sortBySummaryPath.pop();\n                }\n\n                if (function (items, sortBySummaryPath) {\n                  var path;\n                  var item = items[0];\n                  var stringValuesUsed = isString(sortBySummaryPath[0]);\n                  var headerItem = item.dataIndex >= 0 ? items[1] : item;\n\n                  if (stringValuesUsed && -1 !== sortBySummaryPath[0].indexOf(\"&[\") && headerItem.key || !headerItem.key) {\n                    path = createPath(items);\n                  } else {\n                    path = map(items, function (item) {\n                      return item.dataIndex >= 0 ? item.value : item.text;\n                    }).reverse();\n                  }\n\n                  if (item.type === GRAND_TOTAL_TYPE) {\n                    path = path.slice(1);\n                  }\n\n                  return path.join(\"/\") === sortBySummaryPath.join(\"/\");\n                }(items, sortBySummaryPath)) {\n                  item.sorted = true;\n                  return false;\n                }\n              });\n            }\n\n            item.text = function (item, description, options) {\n              var text = item.text;\n\n              if (isDefined(item.displayText)) {\n                text = item.displayText;\n              } else if (isDefined(item.caption)) {\n                text = item.caption;\n              } else if (item.type === GRAND_TOTAL_TYPE) {\n                text = options.texts.grandTotal;\n              }\n\n              if (item.isAdditionalTotal) {\n                text = format(options.texts.total || \"\", text);\n              }\n\n              return text;\n            }(item, 0, options);\n          })).done(function () {\n            if (!viewHeaderItems.length) {\n              viewHeaderItems.push({});\n            }\n\n            options.notifyProgress(1);\n            d.resolve(viewHeaderItems);\n          });\n        });\n      });\n      return d;\n    };\n\n    function createHeaderItem(childrenStack, depth, index) {\n      var parent = childrenStack[depth] = childrenStack[depth] || [];\n      var node = parent[index] = {};\n\n      if (childrenStack[depth + 1]) {\n        node.children = childrenStack[depth + 1];\n\n        for (var i = depth + 1; i < childrenStack.length; i++) {\n          childrenStack[i] = void 0;\n        }\n\n        childrenStack.length = depth + 1;\n      }\n\n      return node;\n    }\n\n    return function (headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\n      var info = [];\n\n      var depthSize = function (headerItems) {\n        var depth = 0;\n        foreachTree(headerItems, function (items) {\n          depth = math.max(depth, items.length);\n        });\n        return depth;\n      }(headerItems) || 1;\n\n      var d = new Deferred();\n      getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done(function (viewHeaderItems) {\n        !function (info, viewHeaderItems, depthSize, isHorizontal, isTree) {\n          var lastIndex = 0;\n          var index;\n          var depth;\n          var indexesByDepth = [0];\n          foreachTree(viewHeaderItems, function (items) {\n            var headerItem = items[0];\n            depth = headerItem.isMetric ? depthSize : items.length - 1;\n\n            while (indexesByDepth.length - 1 < depth) {\n              indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1]);\n            }\n\n            index = indexesByDepth[depth] || 0;\n            lastIndex = addInfoItem(info, {\n              headerItem: headerItem,\n              index: index,\n              lastIndex: lastIndex,\n              depth: depth,\n              isHorizontal: isHorizontal,\n              isTree: isTree\n            });\n            indexesByDepth.length = depth;\n            indexesByDepth.push(lastIndex);\n          });\n        }(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\n        options.notifyProgress(1);\n        d.resolve(info);\n      });\n      return d;\n    };\n  }();\n\n  function createSortPaths(headerFields, dataFields) {\n    var sortBySummaryPaths = [];\n    each(headerFields, function (index, headerField) {\n      var fieldIndex = findField(dataFields, headerField.sortBySummaryField);\n\n      if (fieldIndex >= 0) {\n        sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]));\n      }\n    });\n    return sortBySummaryPaths;\n  }\n\n  function foreachRowInfo(rowsInfo, callback) {\n    var columnOffset = 0;\n    var columnOffsetResetIndexes = [];\n\n    for (var i = 0; i < rowsInfo.length; i++) {\n      for (var j = 0; j < rowsInfo[i].length; j++) {\n        var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\n        var visibleIndex = i + rowSpanOffset;\n\n        if (columnOffsetResetIndexes[i]) {\n          columnOffset -= columnOffsetResetIndexes[i];\n          columnOffsetResetIndexes[i] = 0;\n        }\n\n        if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\n          break;\n        }\n\n        columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\n        columnOffset++;\n      }\n    }\n  }\n\n  function getHeaderIndexedItems(headerItems, options) {\n    var visibleIndex = 0;\n    var indexedItems = [];\n    foreachTree(headerItems, function (items) {\n      var headerItem = items[0];\n      var path = createPath(items);\n\n      if (headerItem.children && false === options.showTotals) {\n        return;\n      }\n\n      var indexedItem = extend(true, {}, headerItem, {\n        visibleIndex: visibleIndex++,\n        path: path\n      });\n\n      if (isDefined(indexedItem.index)) {\n        indexedItems[indexedItem.index] = indexedItem;\n      } else {\n        indexedItems.push(indexedItem);\n      }\n    });\n    return indexedItems;\n  }\n\n  function createScrollController(dataController, component, dataAdapter) {\n    if (component && \"virtual\" === component.option(\"scrolling.mode\")) {\n      return new VirtualScrollController(component, extend({\n        hasKnownLastPage: function hasKnownLastPage() {\n          return true;\n        },\n        pageCount: function pageCount() {\n          return math.ceil(this.totalItemsCount() / this.pageSize());\n        },\n        updateLoading: function updateLoading() {},\n        itemsCount: function itemsCount() {\n          if (this.pageIndex() < this.pageCount() - 1) {\n            return this.pageSize();\n          } else {\n            return this.totalItemsCount() % this.pageSize();\n          }\n        },\n        items: function items() {\n          return [];\n        },\n        viewportItems: function viewportItems() {\n          return [];\n        },\n        onChanged: function onChanged() {},\n        isLoading: function isLoading() {\n          return dataController.isLoading();\n        },\n        changingDuration: function changingDuration() {\n          var dataSource = dataController._dataSource;\n\n          if (dataSource.paginate()) {\n            return CHANGING_DURATION_IF_PAGINATE;\n          }\n\n          return dataController._changingDuration || 0;\n        }\n      }, dataAdapter));\n    }\n  }\n\n  var members = {\n    ctor: function ctor(options) {\n      var that = this;\n\n      var virtualScrollControllerChanged = that._fireChanged.bind(that);\n\n      options = that._options = options || {};\n      that.dataSourceChanged = Callbacks();\n      that._dataSource = that._createDataSource(options);\n      that._rowsScrollController = createScrollController(that, options.component, {\n        totalItemsCount: function totalItemsCount() {\n          return that.totalRowCount();\n        },\n        pageIndex: function pageIndex(index) {\n          return that.rowPageIndex(index);\n        },\n        pageSize: function pageSize() {\n          return that.rowPageSize();\n        },\n        load: function load() {\n          if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\n            that._rowsScrollController.pageIndex(this.pageCount() - 1);\n          }\n\n          return that._rowsScrollController.handleDataChanged(function () {\n            if (that._dataSource.paginate()) {\n              that._dataSource.load();\n            } else {\n              virtualScrollControllerChanged.apply(this, arguments);\n            }\n          });\n        }\n      });\n      that._columnsScrollController = createScrollController(that, options.component, {\n        totalItemsCount: function totalItemsCount() {\n          return that.totalColumnCount();\n        },\n        pageIndex: function pageIndex(index) {\n          return that.columnPageIndex(index);\n        },\n        pageSize: function pageSize() {\n          return that.columnPageSize();\n        },\n        load: function load() {\n          if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\n            that._columnsScrollController.pageIndex(this.pageCount() - 1);\n          }\n\n          return that._columnsScrollController.handleDataChanged(function () {\n            if (that._dataSource.paginate()) {\n              that._dataSource.load();\n            } else {\n              virtualScrollControllerChanged.apply(this, arguments);\n            }\n          });\n        }\n      });\n      that._stateStoringController = new StateStoringController(options.component).init();\n      that._columnsInfo = [];\n      that._rowsInfo = [];\n      that._cellsInfo = [];\n      that.expandValueChanging = Callbacks();\n      that.loadingChanged = Callbacks();\n      that.progressChanged = Callbacks();\n      that.scrollChanged = Callbacks();\n      that.load();\n\n      that._update();\n\n      that.changed = Callbacks();\n    },\n    _fireChanged: function _fireChanged() {\n      var startChanging = new Date();\n      this.changed && !this._lockChanged && this.changed.fire();\n      this._changingDuration = new Date() - startChanging;\n    },\n    _correctSkipsTakes: function _correctSkipsTakes(rowIndex, rowSkip, rowSpan, levels, skips, takes) {\n      var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\n      skips[levels.length] = skips[levels.length] || 0;\n      takes[levels.length] = takes[levels.length] || 0;\n\n      if (endIndex < rowSkip) {\n        skips[levels.length]++;\n      } else {\n        takes[levels.length]++;\n      }\n    },\n    _calculatePagingForRowExpandedPaths: function _calculatePagingForRowExpandedPaths(options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\n      var rows = this._rowsInfo;\n      var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\n      var rowExpandedPaths = options.rowExpandedPaths;\n      var levels = [];\n      var expandedPathIndexes = {};\n      var i;\n      var j;\n      var path;\n      rowExpandedPaths.forEach(function (path, index) {\n        expandedPathIndexes[path] = index;\n      });\n\n      for (i = 0; i < rowCount; i++) {\n        takes.length = skips.length = levels.length + 1;\n\n        for (j = 0; j < rows[i].length; j++) {\n          var cell = rows[i][j];\n\n          if (\"D\" === cell.type) {\n            this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\n\n            path = cell.path || path;\n            var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\n\n            if (expandIndex >= 0) {\n              rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\n              rowExpandedTakes[expandIndex] = takes[levels.length] || 0;\n            }\n\n            if (cell.rowspan) {\n              levels.push(cell.rowspan);\n            }\n          }\n        }\n\n        levels = levels.map(function (level) {\n          return level - 1;\n        }).filter(function (level) {\n          return level > 0;\n        });\n      }\n    },\n    _calculatePagingForColumnExpandedPaths: function _calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes) {\n      var skipByPath = {};\n      var takeByPath = {};\n      foreachColumnInfo(this._columnsInfo, function (columnInfo, columnIndex) {\n        if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\n          var colspan = columnInfo.colspan || 1;\n          var path = columnInfo.path.slice(0, -1).toString();\n          skipByPath[path] = skipByPath[path] || 0;\n          takeByPath[path] = takeByPath[path] || 0;\n\n          if (columnIndex + colspan <= options.columnSkip) {\n            skipByPath[path]++;\n          } else if (columnIndex < options.columnSkip + options.columnTake) {\n            takeByPath[path]++;\n          }\n        }\n      });\n      skips[0] = skipByPath[[]];\n      takes[0] = takeByPath[[]];\n      options.columnExpandedPaths.forEach(function (path, index) {\n        var skip = skipByPath[path];\n        var take = takeByPath[path];\n\n        if (void 0 !== skip) {\n          expandedSkips[index] = skip;\n        }\n\n        if (void 0 !== take) {\n          expandedTakes[index] = take;\n        }\n      });\n    },\n    _processPagingForExpandedPaths: function _processPagingForExpandedPaths(options, area, storeLoadOptions, reload) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      var expandedSkips = expandedPaths.map(function () {\n        return 0;\n      });\n      var expandedTakes = expandedPaths.map(function () {\n        return reload ? options.pageSize : 0;\n      });\n      var skips = [];\n      var takes = [];\n\n      if (!reload) {\n        if (\"row\" === area) {\n          this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        } else {\n          this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        }\n      }\n\n      this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes);\n    },\n    _savePagingForExpandedPaths: function _savePagingForExpandedPaths(options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      options[area + \"ExpandedPaths\"] = [];\n      options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\n      options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\n\n      for (var i = 0; i < expandedPaths.length; i++) {\n        if (expandedTakes[i]) {\n          var _extend;\n\n          var isOppositeArea = options.area && options.area !== area;\n          storeLoadOptions.push(extend({\n            area: area,\n            headerName: area + \"s\"\n          }, options, (_extend = {}, _defineProperty(_extend, area + \"Skip\", expandedSkips[i]), _defineProperty(_extend, area + \"Take\", expandedTakes[i]), _defineProperty(_extend, isOppositeArea ? \"oppositePath\" : \"path\", expandedPaths[i]), _extend)));\n        }\n      }\n    },\n    _handleCustomizeStoreLoadOptions: function _handleCustomizeStoreLoadOptions(storeLoadOptions, reload) {\n      var _this = this;\n\n      var options = storeLoadOptions[0];\n      var rowsScrollController = this._rowsScrollController;\n\n      if (this._dataSource.paginate() && rowsScrollController) {\n        var rowPageSize = rowsScrollController.pageSize();\n\n        if (\"rows\" === options.headerName) {\n          options.rowSkip = 0;\n          options.rowTake = rowPageSize;\n          options.rowExpandedPaths = [];\n        } else {\n          options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\n          options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\n\n          this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload);\n        }\n      }\n\n      var columnsScrollController = this._columnsScrollController;\n\n      if (this._dataSource.paginate() && columnsScrollController) {\n        var columnPageSize = columnsScrollController.pageSize();\n        storeLoadOptions.forEach(function (options, index) {\n          if (\"columns\" === options.headerName) {\n            options.columnSkip = 0;\n            options.columnTake = columnPageSize;\n            options.columnExpandedPaths = [];\n          } else {\n            options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\n            options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\n\n            _this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload);\n          }\n        });\n      }\n    },\n    load: function load() {\n      var that = this;\n      var stateStoringController = this._stateStoringController;\n\n      if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\n        stateStoringController.load().always(function (state) {\n          if (state) {\n            that._dataSource.state(state);\n          } else {\n            that._dataSource.load();\n          }\n        });\n      } else {\n        that._dataSource.load();\n      }\n    },\n    calculateVirtualContentParams: function calculateVirtualContentParams(contentParams) {\n      var rowsScrollController = this._rowsScrollController;\n      var columnsScrollController = this._columnsScrollController;\n\n      if (rowsScrollController && columnsScrollController) {\n        rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\n        rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\n        rowsScrollController.setContentItemSizes(contentParams.itemHeights);\n        columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\n        columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\n        columnsScrollController.setContentItemSizes(contentParams.itemWidths);\n        deferUpdate(function () {\n          columnsScrollController.loadIfNeed();\n          rowsScrollController.loadIfNeed();\n        });\n        this.scrollChanged.fire({\n          left: columnsScrollController.getViewportPosition(),\n          top: rowsScrollController.getViewportPosition()\n        });\n        return {\n          contentTop: rowsScrollController.getContentOffset(),\n          contentLeft: columnsScrollController.getContentOffset(),\n          width: columnsScrollController.getVirtualContentSize(),\n          height: rowsScrollController.getVirtualContentSize()\n        };\n      }\n    },\n    setViewportPosition: function setViewportPosition(left, top) {\n      this._rowsScrollController.setViewportPosition(top || 0);\n\n      this._columnsScrollController.setViewportPosition(left || 0);\n    },\n    subscribeToWindowScrollEvents: function subscribeToWindowScrollEvents($element) {\n      this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element);\n    },\n    updateWindowScrollPosition: function updateWindowScrollPosition(position) {\n      this._rowsScrollController && this._rowsScrollController.scrollTo(position);\n    },\n    updateViewOptions: function updateViewOptions(options) {\n      extend(this._options, options);\n\n      this._update();\n    },\n    _handleExpandValueChanging: function _handleExpandValueChanging(e) {\n      this.expandValueChanging.fire(e);\n    },\n    _handleLoadingChanged: function _handleLoadingChanged(isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleProgressChanged: function _handleProgressChanged(progress) {\n      this.progressChanged.fire(progress);\n    },\n    _handleFieldsPrepared: function _handleFieldsPrepared(e) {\n      this._options.onFieldsPrepared && this._options.onFieldsPrepared(e);\n    },\n    _createDataSource: function _createDataSource(options) {\n      var that = this;\n      var dataSourceOptions = options.dataSource;\n      var dataSource;\n      that._isSharedDataSource = dataSourceOptions instanceof PivotGridDataSource;\n\n      if (that._isSharedDataSource) {\n        dataSource = dataSourceOptions;\n      } else {\n        dataSource = new PivotGridDataSource(dataSourceOptions);\n      }\n\n      that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\n      that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\n\n      that._changedHandler = function () {\n        that._update();\n\n        that.dataSourceChanged.fire();\n      };\n\n      that._progressChangedHandler = function (progress) {\n        that._handleProgressChanged(.8 * progress);\n      };\n\n      dataSource.on(\"changed\", that._changedHandler);\n      dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"progressChanged\", that._progressChangedHandler);\n      dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      return dataSource;\n    },\n    getDataSource: function getDataSource() {\n      return this._dataSource;\n    },\n    isLoading: function isLoading() {\n      return this._dataSource.isLoading();\n    },\n    beginLoading: function beginLoading() {\n      this._dataSource.beginLoading();\n    },\n    endLoading: function endLoading() {\n      this._dataSource.endLoading();\n    },\n    _update: function _update() {\n      var that = this;\n      var dataSource = that._dataSource;\n      var options = that._options;\n      var columnFields = dataSource.getAreaFields(\"column\");\n      var rowFields = dataSource.getAreaFields(\"row\");\n      var dataFields = dataSource.getAreaFields(\"data\");\n      var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\n      var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\n      var data = dataSource.getData();\n\n      var hiddenTotals = function (dataFields) {\n        var result = [];\n        each(dataFields, function (index, field) {\n          if (false === field.showTotals) {\n            result.push(index);\n          }\n        });\n        return result;\n      }(dataFields);\n\n      var hiddenValues = function (dataFields) {\n        var result = [];\n        dataFields.forEach(function (field, index) {\n          if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\n            result.push(index);\n          }\n        });\n        return result;\n      }(dataFields);\n\n      var hiddenGrandTotals = function (dataFields, columnFields) {\n        var result = [];\n        each(dataFields, function (index, field) {\n          if (false === field.showGrandTotals) {\n            result.push(index);\n          }\n        });\n\n        if (0 === columnFields.length && result.length === dataFields.length) {\n          result = [];\n        }\n\n        return result;\n      }(dataFields, columnFields);\n\n      var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\n      var rowOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalRow,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: [],\n        showTotals: options.showRowTotals,\n        showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(columnFields, dataFields),\n        showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showEmpty: !options.hideEmptySummaryCells,\n        layout: options.rowHeaderLayout,\n        fields: rowFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n      var columnOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: hiddenGrandTotals,\n        showTotals: options.showColumnTotals,\n        showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(rowFields, dataFields),\n        showEmpty: !options.hideEmptySummaryCells,\n        fields: columnFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n\n      var notifyProgress = function notifyProgress(progress) {\n        this.progress = progress;\n\n        that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress);\n      };\n\n      rowOptions.notifyProgress = notifyProgress;\n      columnOptions.notifyProgress = notifyProgress;\n\n      if (!isDefined(data.grandTotalRowIndex)) {\n        data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length;\n      }\n\n      if (!isDefined(data.grandTotalColumnIndex)) {\n        data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length;\n      }\n\n      dataSource._changeLoadingCount(1);\n\n      when(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always(function () {\n        dataSource._changeLoadingCount(-1);\n      }).done(function (columnsInfo, rowsInfo) {\n        that._columnsInfo = columnsInfo;\n        that._rowsInfo = rowsInfo;\n\n        if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\n          that._lockChanged = true;\n\n          that._rowsScrollController.load();\n\n          that._columnsScrollController.load();\n\n          that._lockChanged = false;\n        }\n      }).done(function () {\n        that._fireChanged();\n\n        if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\n          that._stateStoringController.state(that._dataSource.state());\n\n          that._stateStoringController.save();\n        }\n      });\n    },\n    getRowsInfo: function getRowsInfo(getAllData) {\n      var rowsInfo = this._rowsInfo;\n      var scrollController = this._rowsScrollController;\n      var rowspan;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * this.rowPageSize();\n        var endIndex = scrollController.endPageIndex() * this.rowPageSize() + this.rowPageSize();\n        var newRowsInfo = [];\n        var maxDepth = 1;\n        foreachRowInfo(rowsInfo, function (rowInfo, visibleIndex, rowIndex, _, columnIndex) {\n          var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\n          var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\n          var cell = rowInfo;\n\n          if (isVisible) {\n            newRowsInfo[index] = newRowsInfo[index] || [];\n            rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\n\n            if (startIndex + index + rowspan > endIndex) {\n              rowspan = endIndex - (index + startIndex) || 1;\n            }\n\n            if (rowspan !== rowInfo.rowspan) {\n              cell = extend({}, cell, {\n                rowspan: rowspan\n              });\n            }\n\n            newRowsInfo[index].push(cell);\n            maxDepth = math.max(maxDepth, columnIndex + 1);\n          } else if (void 0 > endIndex) {\n            return false;\n          }\n        });\n        foreachRowInfo(newRowsInfo, function (rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\n          var colspan = rowInfo.colspan || 1;\n\n          if (realColumnIndex + colspan > maxDepth) {\n            newRowsInfo[rowIndex][columnIndex] = extend({}, rowInfo, {\n              colspan: maxDepth - realColumnIndex || 1\n            });\n          }\n        });\n        return newRowsInfo;\n      }\n\n      return rowsInfo;\n    },\n    getColumnsInfo: function getColumnsInfo(getAllData) {\n      var info = this._columnsInfo;\n      var scrollController = this._columnsScrollController;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * this.columnPageSize();\n        var endIndex = scrollController.endPageIndex() * this.columnPageSize() + this.columnPageSize();\n        info = createColumnsInfo(info, startIndex, endIndex);\n      }\n\n      return info;\n    },\n    totalRowCount: function totalRowCount() {\n      return this._rowsInfo.length;\n    },\n    rowPageIndex: function rowPageIndex(index) {\n      if (void 0 !== index) {\n        this._rowPageIndex = index;\n      }\n\n      return this._rowPageIndex || 0;\n    },\n    totalColumnCount: function totalColumnCount() {\n      var count = 0;\n\n      if (this._columnsInfo && this._columnsInfo.length) {\n        for (var i = 0; i < this._columnsInfo[0].length; i++) {\n          count += this._columnsInfo[0][i].colspan || 1;\n        }\n      }\n\n      return count;\n    },\n    rowPageSize: function rowPageSize(size) {\n      if (void 0 !== size) {\n        this._rowPageSize = size;\n      }\n\n      return this._rowPageSize || 20;\n    },\n    columnPageSize: function columnPageSize(size) {\n      if (void 0 !== size) {\n        this._columnPageSize = size;\n      }\n\n      return this._columnPageSize || 20;\n    },\n    columnPageIndex: function columnPageIndex(index) {\n      if (void 0 !== index) {\n        this._columnPageIndex = index;\n      }\n\n      return this._columnPageIndex || 0;\n    },\n    getCellsInfo: function getCellsInfo(getAllData) {\n      var rowsInfo = this.getRowsInfo(getAllData);\n      var columnsInfo = this.getColumnsInfo(getAllData);\n\n      var data = this._dataSource.getData();\n\n      var texts = this._options.texts || {};\n      return function (rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\n        var info = [];\n        var dataFieldAreaInRows = \"row\" === dataFieldArea;\n        var dataSourceCells = data.values;\n        dataSourceCells.length && foreachRowInfo(rowsInfo, function (rowInfo, rowIndex) {\n          var row = info[rowIndex] = [];\n          var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\n          rowInfo.isLast && foreachColumnInfo(columnsInfo, function (columnInfo, columnIndex) {\n            var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\n            var dataField = dataFields[dataIndex];\n\n            if (columnInfo.isLast && dataField) {\n              var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\n\n              if (!Array.isArray(cell)) {\n                cell = [cell];\n              }\n\n              var cellValue = cell[dataIndex];\n              row[columnIndex] = {\n                text: formatCellValue(cellValue, dataField, errorText),\n                value: cellValue,\n                format: dataField.format,\n                dataType: dataField.dataType,\n                columnType: columnInfo.type,\n                rowType: rowInfo.type,\n                rowPath: rowInfo.path || [],\n                columnPath: columnInfo.path || [],\n                dataIndex: dataIndex\n              };\n\n              if (dataField.width) {\n                row[columnIndex].width = dataField.width;\n              }\n            }\n          });\n        });\n        return info;\n      }(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable);\n    },\n    dispose: function dispose() {\n      if (this._isSharedDataSource) {\n        this._dataSource.off(\"changed\", this._changedHandler);\n\n        this._dataSource.off(\"expandValueChanging\", this._expandValueChangingHandler);\n\n        this._dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\n\n        this._dataSource.off(\"progressChanged\", this._progressChangedHandler);\n\n        this._dataSource.off(\"fieldsPrepared\", this._fieldsPreparedHandler);\n\n        this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\n      } else {\n        this._dataSource.dispose();\n      }\n\n      this._columnsScrollController && this._columnsScrollController.dispose();\n      this._rowsScrollController && this._rowsScrollController.dispose();\n\n      this._stateStoringController.dispose();\n\n      this.expandValueChanging.empty();\n      this.changed.empty();\n      this.loadingChanged.empty();\n      this.progressChanged.empty();\n      this.scrollChanged.empty();\n      this.dataSourceChanged.empty();\n    }\n  };\n  proxyMethod(members, \"applyPartialDataSource\");\n  proxyMethod(members, \"collapseHeaderItem\");\n  proxyMethod(members, \"expandHeaderItem\");\n  proxyMethod(members, \"getData\");\n  proxyMethod(members, \"isEmpty\");\n  return members;\n}());","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.data_controller.js"],"names":["Callbacks","when","Deferred","extend","inArray","map","each","Class","format","deferUpdate","isDefined","isString","VirtualScrollController","foreachColumnInfo","createColumnsInfo","StateStoringController","PivotGridDataSource","findField","foreachTree","foreachTreeAsync","createPath","formatValue","math","Math","GRAND_TOTAL_TYPE","TOTAL_TYPE","DATA_TYPE","NOT_AVAILABLE","CHANGING_DURATION_IF_PAGINATE","proxyMethod","instance","methodName","defaultResult","dataSource","_dataSource","apply","arguments","DataController","inherit","formatCellValue","value","dataField","errorText","createHeaderInfo","addInfoItem","info","options","breadth","lastIndex","index","itemInfo","headerItem","isHorizontal","isTree","infoItem","type","text","path","width","wordWrapEnabled","isLast","sorted","isMetric","dataIndex","expanded","depthSize","dataSourceIndex","children","length","isWhiteSpace","itemIndex","depthIndex","push","unshift","depth","getViewHeaderItems","headerItems","headerDescriptions","cellDescriptions","cellDescriptionsCount","viewHeaderItems","headerDescriptionsCount","childrenStack","d","items","item","createHeaderItem","displayText","key","isEmpty","done","resolve","dataFields","notifyProgress","showGrandTotals","showTotalsPrior","isEmptyGrandTotal","hideTotals","showTotals","hiddenTotals","hideData","hiddenValues","layout","parentChildren","splice","isAdditionalTotal","i","isGrandTotal","isTotal","isValue","columnIsHidden","visible","hiddenGrandTotals","caption","showEmpty","filter","removeEmptyParent","parent","field","sortBySummaryPaths","sortBySummaryPath","slice","pop","stringValuesUsed","indexOf","reverse","join","description","texts","grandTotal","total","node","max","indexesByDepth","createSortPaths","headerFields","headerField","fieldIndex","sortBySummaryField","concat","foreachRowInfo","rowsInfo","callback","columnOffset","columnOffsetResetIndexes","j","rowSpanOffset","rowspan","visibleIndex","getHeaderIndexedItems","indexedItems","indexedItem","createScrollController","dataController","component","dataAdapter","option","hasKnownLastPage","pageCount","ceil","totalItemsCount","pageSize","updateLoading","itemsCount","pageIndex","viewportItems","onChanged","isLoading","changingDuration","paginate","_changingDuration","members","ctor","that","virtualScrollControllerChanged","_fireChanged","bind","_options","dataSourceChanged","_createDataSource","_rowsScrollController","totalRowCount","rowPageIndex","rowPageSize","load","handleDataChanged","_columnsScrollController","totalColumnCount","columnPageIndex","columnPageSize","_stateStoringController","init","_columnsInfo","_rowsInfo","_cellsInfo","expandValueChanging","loadingChanged","progressChanged","scrollChanged","_update","changed","startChanging","Date","_lockChanged","fire","_correctSkipsTakes","rowIndex","rowSkip","rowSpan","levels","skips","takes","endIndex","_calculatePagingForRowExpandedPaths","rowExpandedSkips","rowExpandedTakes","rows","rowCount","min","rowTake","rowExpandedPaths","expandedPathIndexes","forEach","cell","expandIndex","level","_calculatePagingForColumnExpandedPaths","expandedSkips","expandedTakes","skipByPath","takeByPath","columnInfo","columnIndex","colspan","toString","columnSkip","columnTake","columnExpandedPaths","skip","take","_processPagingForExpandedPaths","area","storeLoadOptions","reload","expandedPaths","_savePagingForExpandedPaths","isOppositeArea","headerName","_handleCustomizeStoreLoadOptions","rowsScrollController","beginPageIndex","endPageIndex","columnsScrollController","stateStoringController","isEnabled","isLoaded","always","state","calculateVirtualContentParams","contentParams","viewportItemSize","virtualRowHeight","viewportSize","viewportHeight","setContentItemSizes","itemHeights","virtualColumnWidth","viewportWidth","itemWidths","loadIfNeed","left","getViewportPosition","top","contentTop","getContentOffset","contentLeft","getVirtualContentSize","height","setViewportPosition","subscribeToWindowScrollEvents","$element","updateWindowScrollPosition","position","scrollTo","updateViewOptions","_handleExpandValueChanging","e","_handleLoadingChanged","_handleProgressChanged","progress","_handleFieldsPrepared","onFieldsPrepared","dataSourceOptions","_isSharedDataSource","_expandValueChangingHandler","_loadingChangedHandler","_fieldsPreparedHandler","_customizeStoreLoadOptionsHandler","_changedHandler","_progressChangedHandler","on","getDataSource","beginLoading","endLoading","columnFields","getAreaFields","rowFields","dataFieldsForRows","dataFieldArea","dataFieldsForColumns","data","getData","result","showValues","grandTotalsAreHiddenForNotAllDataFields","rowOptions","isEmptyGrandTotalRow","showRowTotals","showRowGrandTotals","hideEmptySummaryCells","rowHeaderLayout","fields","columnOptions","isEmptyGrandTotalColumn","showColumnTotals","showColumnGrandTotals","grandTotalRowIndex","grandTotalColumnIndex","columns","_changeLoadingCount","columnsInfo","save","getRowsInfo","getAllData","scrollController","startIndex","newRowsInfo","maxDepth","rowInfo","_","isVisible","realColumnIndex","getColumnsInfo","_rowPageIndex","count","size","_rowPageSize","_columnPageSize","_columnPageIndex","getCellsInfo","dataFieldAreaInRows","dataSourceCells","values","row","dataRow","Array","isArray","cellValue","dataType","columnType","rowType","rowPath","columnPath","dataNotAvailable","dispose","off","empty"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map,\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    VirtualScrollController\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling_core\";\r\nimport {\r\n    foreachColumnInfo,\r\n    createColumnsInfo\r\n} from \"../grid_core/ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    StateStoringController\r\n} from \"../grid_core/ui.grid_core.state_storing_core\";\r\nimport PivotGridDataSource from \"./data_source\";\r\nimport {\r\n    findField,\r\n    foreachTree,\r\n    foreachTreeAsync,\r\n    createPath,\r\n    formatValue\r\n} from \"./ui.pivot_grid.utils\";\r\nvar math = Math;\r\nvar GRAND_TOTAL_TYPE = \"GT\";\r\nvar TOTAL_TYPE = \"T\";\r\nvar DATA_TYPE = \"D\";\r\nvar NOT_AVAILABLE = \"#N/A\";\r\nvar CHANGING_DURATION_IF_PAGINATE = 300;\r\nvar proxyMethod = function(instance, methodName, defaultResult) {\r\n    if (!instance[methodName]) {\r\n        instance[methodName] = function() {\r\n            var dataSource = this._dataSource;\r\n            return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n        }\r\n    }\r\n};\r\nexport var DataController = Class.inherit(function() {\r\n    function formatCellValue(value, dataField, errorText) {\r\n        return value === NOT_AVAILABLE ? errorText : formatValue(value, dataField)\r\n    }\r\n    var createHeaderInfo = function() {\r\n        var addInfoItem = function(info, options) {\r\n            var breadth = options.lastIndex - options.index || 1;\r\n            var itemInfo = function(headerItem, breadth, isHorizontal, isTree) {\r\n                var infoItem = {\r\n                    type: headerItem.type,\r\n                    text: headerItem.text\r\n                };\r\n                if (headerItem.path) {\r\n                    infoItem.path = headerItem.path\r\n                }\r\n                if (headerItem.width) {\r\n                    infoItem.width = headerItem.width\r\n                }\r\n                if (isDefined(headerItem.wordWrapEnabled)) {\r\n                    infoItem.wordWrapEnabled = headerItem.wordWrapEnabled\r\n                }\r\n                if (headerItem.isLast) {\r\n                    infoItem.isLast = true\r\n                }\r\n                if (headerItem.sorted) {\r\n                    infoItem.sorted = true\r\n                }\r\n                if (headerItem.isMetric) {\r\n                    infoItem.dataIndex = headerItem.dataIndex\r\n                }\r\n                if (isDefined(headerItem.expanded)) {\r\n                    infoItem.expanded = headerItem.expanded\r\n                }\r\n                if (breadth > 1) {\r\n                    infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth\r\n                }\r\n                if (headerItem.depthSize && headerItem.depthSize > 1) {\r\n                    infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize\r\n                }\r\n                if (headerItem.index >= 0) {\r\n                    infoItem.dataSourceIndex = headerItem.index\r\n                }\r\n                if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\r\n                    infoItem.width = null;\r\n                    infoItem.isWhiteSpace = true\r\n                }\r\n                return infoItem\r\n            }(options.headerItem, breadth, options.isHorizontal, options.isTree);\r\n            ! function(info, infoItem, itemIndex, depthIndex, isHorizontal) {\r\n                var index = isHorizontal ? depthIndex : itemIndex;\r\n                while (!info[index]) {\r\n                    info.push([])\r\n                }\r\n                if (isHorizontal) {\r\n                    info[index].push(infoItem)\r\n                } else {\r\n                    info[index].unshift(infoItem)\r\n                }\r\n            }(info, itemInfo, options.index, options.depth, options.isHorizontal);\r\n            if (!options.headerItem.children || 0 === options.headerItem.children.length) {\r\n                return options.lastIndex + 1\r\n            }\r\n            return options.lastIndex\r\n        };\r\n        var getViewHeaderItems = function(headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\r\n            var cellDescriptionsCount = cellDescriptions.length;\r\n            var viewHeaderItems = function(headerItems, headerDescriptions) {\r\n                var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\r\n                var childrenStack = [];\r\n                var d = new Deferred;\r\n                var headerItem;\r\n                when(foreachTreeAsync(headerItems, (function(items, index) {\r\n                    var item = items[0];\r\n                    var path = createPath(items);\r\n                    headerItem = createHeaderItem(childrenStack, path.length, index);\r\n                    headerItem.type = DATA_TYPE;\r\n                    headerItem.value = item.value;\r\n                    headerItem.path = path;\r\n                    headerItem.text = item.text;\r\n                    headerItem.index = item.index;\r\n                    headerItem.displayText = item.displayText;\r\n                    headerItem.key = item.key;\r\n                    headerItem.isEmpty = item.isEmpty;\r\n                    if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\r\n                        headerItem.expanded = !!item.children\r\n                    }\r\n                }))).done((function() {\r\n                    d.resolve(createHeaderItem(childrenStack, 0, 0).children || [])\r\n                }));\r\n                return d\r\n            }(headerItems, headerDescriptions);\r\n            var dataFields = options.dataFields;\r\n            var d = new Deferred;\r\n            when(viewHeaderItems).done((function(viewHeaderItems) {\r\n                options.notifyProgress(.5);\r\n                if (options.showGrandTotals) {\r\n                    viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\r\n                        type: GRAND_TOTAL_TYPE,\r\n                        isEmpty: options.isEmptyGrandTotal\r\n                    })\r\n                }\r\n                var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\r\n                var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\r\n                if (hideData && hideTotals) {\r\n                    depthSize = 1\r\n                }\r\n                if (!hideTotals || \"tree\" === options.layout) {\r\n                    ! function(headerItems, headerDescriptions, showTotalsPrior, isTree) {\r\n                        showTotalsPrior = showTotalsPrior || isTree;\r\n                        foreachTree(headerItems, (function(items, index) {\r\n                            var item = items[0];\r\n                            var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                            var dataField = headerDescriptions[items.length - 1];\r\n                            if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\r\n                                -1 !== index && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, extend({}, item, {\r\n                                    children: null,\r\n                                    type: TOTAL_TYPE,\r\n                                    expanded: showTotalsPrior ? true : null,\r\n                                    isAdditionalTotal: true\r\n                                }));\r\n                                if (showTotalsPrior) {\r\n                                    item.expanded = null\r\n                                }\r\n                            }\r\n                        }))\r\n                    }(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout)\r\n                }\r\n                when(foreachTreeAsync(viewHeaderItems, (function(items) {\r\n                    var item = items[0];\r\n                    if (!item.children || 0 === item.children.length) {\r\n                        item.depthSize = depthSize - items.length + 1\r\n                    }\r\n                }))).done((function() {\r\n                    if (cellDescriptionsCount > 1) {\r\n                        ! function(headerItems, cellDescriptions, options) {\r\n                            foreachTree(headerItems, (function(items) {\r\n                                var item = items[0];\r\n                                var i;\r\n                                if (!item.children || 0 === item.children.length) {\r\n                                    item.children = [];\r\n                                    for (i = 0; i < cellDescriptions.length; i++) {\r\n                                        var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\r\n                                        var isTotal = item.type === TOTAL_TYPE;\r\n                                        var isValue = item.type === DATA_TYPE;\r\n                                        var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && -1 !== inArray(i, options.hiddenGrandTotals) || isTotal && -1 !== inArray(i, options.hiddenTotals) || isValue && -1 !== inArray(i, options.hiddenValues);\r\n                                        if (columnIsHidden) {\r\n                                            continue\r\n                                        }\r\n                                        item.children.push({\r\n                                            caption: cellDescriptions[i].caption,\r\n                                            path: item.path,\r\n                                            type: item.type,\r\n                                            value: i,\r\n                                            index: item.index,\r\n                                            dataIndex: i,\r\n                                            isMetric: true,\r\n                                            isEmpty: item.isEmpty && item.isEmpty[i]\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }(viewHeaderItems, cellDescriptions, options)\r\n                    }!options.showEmpty && function(headerItems) {\r\n                        foreachTree([{\r\n                            children: headerItems\r\n                        }], (function(items, index) {\r\n                            var item = items[0];\r\n                            var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                            var isEmpty = item.isEmpty;\r\n                            if (isEmpty && isEmpty.length) {\r\n                                isEmpty = item.isEmpty.filter((function(isEmpty) {\r\n                                    return isEmpty\r\n                                })).length === isEmpty.length\r\n                            }\r\n                            if (item && !item.children && isEmpty) {\r\n                                parentChildren.splice(index, 1);\r\n                                ! function removeEmptyParent(items, index) {\r\n                                    var parent = items[index + 1];\r\n                                    if (!items[index].children.length && parent && parent.children) {\r\n                                        parent.children.splice(inArray(items[index], parent.children), 1);\r\n                                        removeEmptyParent(items, index + 1)\r\n                                    }\r\n                                }(items, 1)\r\n                            }\r\n                        }))\r\n                    }(viewHeaderItems);\r\n                    options.notifyProgress(.75);\r\n                    when(foreachTreeAsync(viewHeaderItems, (function(items) {\r\n                        var item = items[0];\r\n                        var isMetric = item.isMetric;\r\n                        var field = headerDescriptions[items.length - 1] || {};\r\n                        if (item.type === DATA_TYPE && !isMetric) {\r\n                            item.width = field.width\r\n                        }\r\n                        if (true === hideData && item.type === DATA_TYPE) {\r\n                            var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\r\n                            parentChildren.splice(inArray(item, parentChildren), 1);\r\n                            return\r\n                        }\r\n                        if (isMetric) {\r\n                            item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled\r\n                        } else {\r\n                            item.wordWrapEnabled = field.wordWrapEnabled\r\n                        }\r\n                        item.isLast = !item.children || !item.children.length;\r\n                        if (item.isLast) {\r\n                            each(options.sortBySummaryPaths, (function(index, sortBySummaryPath) {\r\n                                if (!isDefined(item.dataIndex)) {\r\n                                    sortBySummaryPath = sortBySummaryPath.slice(0);\r\n                                    sortBySummaryPath.pop()\r\n                                }\r\n                                if (function(items, sortBySummaryPath) {\r\n                                        var path;\r\n                                        var item = items[0];\r\n                                        var stringValuesUsed = isString(sortBySummaryPath[0]);\r\n                                        var headerItem = item.dataIndex >= 0 ? items[1] : item;\r\n                                        if (stringValuesUsed && -1 !== sortBySummaryPath[0].indexOf(\"&[\") && headerItem.key || !headerItem.key) {\r\n                                            path = createPath(items)\r\n                                        } else {\r\n                                            path = map(items, (function(item) {\r\n                                                return item.dataIndex >= 0 ? item.value : item.text\r\n                                            })).reverse()\r\n                                        }\r\n                                        if (item.type === GRAND_TOTAL_TYPE) {\r\n                                            path = path.slice(1)\r\n                                        }\r\n                                        return path.join(\"/\") === sortBySummaryPath.join(\"/\")\r\n                                    }(items, sortBySummaryPath)) {\r\n                                    item.sorted = true;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        item.text = function(item, description, options) {\r\n                            var text = item.text;\r\n                            if (isDefined(item.displayText)) {\r\n                                text = item.displayText\r\n                            } else if (isDefined(item.caption)) {\r\n                                text = item.caption\r\n                            } else if (item.type === GRAND_TOTAL_TYPE) {\r\n                                text = options.texts.grandTotal\r\n                            }\r\n                            if (item.isAdditionalTotal) {\r\n                                text = format(options.texts.total || \"\", text)\r\n                            }\r\n                            return text\r\n                        }(item, 0, options)\r\n                    }))).done((function() {\r\n                        if (!viewHeaderItems.length) {\r\n                            viewHeaderItems.push({})\r\n                        }\r\n                        options.notifyProgress(1);\r\n                        d.resolve(viewHeaderItems)\r\n                    }))\r\n                }))\r\n            }));\r\n            return d\r\n        };\r\n\r\n        function createHeaderItem(childrenStack, depth, index) {\r\n            var parent = childrenStack[depth] = childrenStack[depth] || [];\r\n            var node = parent[index] = {};\r\n            if (childrenStack[depth + 1]) {\r\n                node.children = childrenStack[depth + 1];\r\n                for (var i = depth + 1; i < childrenStack.length; i++) {\r\n                    childrenStack[i] = void 0\r\n                }\r\n                childrenStack.length = depth + 1\r\n            }\r\n            return node\r\n        }\r\n        return function(headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\r\n            var info = [];\r\n            var depthSize = function(headerItems) {\r\n                var depth = 0;\r\n                foreachTree(headerItems, (function(items) {\r\n                    depth = math.max(depth, items.length)\r\n                }));\r\n                return depth\r\n            }(headerItems) || 1;\r\n            var d = new Deferred;\r\n            getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done((function(viewHeaderItems) {\r\n                ! function(info, viewHeaderItems, depthSize, isHorizontal, isTree) {\r\n                    var lastIndex = 0;\r\n                    var index;\r\n                    var depth;\r\n                    var indexesByDepth = [0];\r\n                    foreachTree(viewHeaderItems, (function(items) {\r\n                        var headerItem = items[0];\r\n                        depth = headerItem.isMetric ? depthSize : items.length - 1;\r\n                        while (indexesByDepth.length - 1 < depth) {\r\n                            indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1])\r\n                        }\r\n                        index = indexesByDepth[depth] || 0;\r\n                        lastIndex = addInfoItem(info, {\r\n                            headerItem: headerItem,\r\n                            index: index,\r\n                            lastIndex: lastIndex,\r\n                            depth: depth,\r\n                            isHorizontal: isHorizontal,\r\n                            isTree: isTree\r\n                        });\r\n                        indexesByDepth.length = depth;\r\n                        indexesByDepth.push(lastIndex)\r\n                    }))\r\n                }(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\r\n                options.notifyProgress(1);\r\n                d.resolve(info)\r\n            }));\r\n            return d\r\n        }\r\n    }();\r\n\r\n    function createSortPaths(headerFields, dataFields) {\r\n        var sortBySummaryPaths = [];\r\n        each(headerFields, (function(index, headerField) {\r\n            var fieldIndex = findField(dataFields, headerField.sortBySummaryField);\r\n            if (fieldIndex >= 0) {\r\n                sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]))\r\n            }\r\n        }));\r\n        return sortBySummaryPaths\r\n    }\r\n\r\n    function foreachRowInfo(rowsInfo, callback) {\r\n        var columnOffset = 0;\r\n        var columnOffsetResetIndexes = [];\r\n        for (var i = 0; i < rowsInfo.length; i++) {\r\n            for (var j = 0; j < rowsInfo[i].length; j++) {\r\n                var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\r\n                var visibleIndex = i + rowSpanOffset;\r\n                if (columnOffsetResetIndexes[i]) {\r\n                    columnOffset -= columnOffsetResetIndexes[i];\r\n                    columnOffsetResetIndexes[i] = 0\r\n                }\r\n                if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\r\n                    break\r\n                }\r\n                columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\r\n                columnOffset++\r\n            }\r\n        }\r\n    }\r\n\r\n    function getHeaderIndexedItems(headerItems, options) {\r\n        var visibleIndex = 0;\r\n        var indexedItems = [];\r\n        foreachTree(headerItems, (function(items) {\r\n            var headerItem = items[0];\r\n            var path = createPath(items);\r\n            if (headerItem.children && false === options.showTotals) {\r\n                return\r\n            }\r\n            var indexedItem = extend(true, {}, headerItem, {\r\n                visibleIndex: visibleIndex++,\r\n                path: path\r\n            });\r\n            if (isDefined(indexedItem.index)) {\r\n                indexedItems[indexedItem.index] = indexedItem\r\n            } else {\r\n                indexedItems.push(indexedItem)\r\n            }\r\n        }));\r\n        return indexedItems\r\n    }\r\n\r\n    function createScrollController(dataController, component, dataAdapter) {\r\n        if (component && \"virtual\" === component.option(\"scrolling.mode\")) {\r\n            return new VirtualScrollController(component, extend({\r\n                hasKnownLastPage: function() {\r\n                    return true\r\n                },\r\n                pageCount: function() {\r\n                    return math.ceil(this.totalItemsCount() / this.pageSize())\r\n                },\r\n                updateLoading: function() {},\r\n                itemsCount: function() {\r\n                    if (this.pageIndex() < this.pageCount() - 1) {\r\n                        return this.pageSize()\r\n                    } else {\r\n                        return this.totalItemsCount() % this.pageSize()\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return []\r\n                },\r\n                viewportItems: function() {\r\n                    return []\r\n                },\r\n                onChanged: function() {},\r\n                isLoading: function() {\r\n                    return dataController.isLoading()\r\n                },\r\n                changingDuration: function() {\r\n                    var dataSource = dataController._dataSource;\r\n                    if (dataSource.paginate()) {\r\n                        return CHANGING_DURATION_IF_PAGINATE\r\n                    }\r\n                    return dataController._changingDuration || 0\r\n                }\r\n            }, dataAdapter))\r\n        }\r\n    }\r\n    var members = {\r\n        ctor: function(options) {\r\n            var that = this;\r\n            var virtualScrollControllerChanged = that._fireChanged.bind(that);\r\n            options = that._options = options || {};\r\n            that.dataSourceChanged = Callbacks();\r\n            that._dataSource = that._createDataSource(options);\r\n            that._rowsScrollController = createScrollController(that, options.component, {\r\n                totalItemsCount: function() {\r\n                    return that.totalRowCount()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that.rowPageIndex(index)\r\n                },\r\n                pageSize: function() {\r\n                    return that.rowPageSize()\r\n                },\r\n                load: function() {\r\n                    if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                        that._rowsScrollController.pageIndex(this.pageCount() - 1)\r\n                    }\r\n                    return that._rowsScrollController.handleDataChanged((function() {\r\n                        if (that._dataSource.paginate()) {\r\n                            that._dataSource.load()\r\n                        } else {\r\n                            virtualScrollControllerChanged.apply(this, arguments)\r\n                        }\r\n                    }))\r\n                }\r\n            });\r\n            that._columnsScrollController = createScrollController(that, options.component, {\r\n                totalItemsCount: function() {\r\n                    return that.totalColumnCount()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that.columnPageIndex(index)\r\n                },\r\n                pageSize: function() {\r\n                    return that.columnPageSize()\r\n                },\r\n                load: function() {\r\n                    if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\r\n                        that._columnsScrollController.pageIndex(this.pageCount() - 1)\r\n                    }\r\n                    return that._columnsScrollController.handleDataChanged((function() {\r\n                        if (that._dataSource.paginate()) {\r\n                            that._dataSource.load()\r\n                        } else {\r\n                            virtualScrollControllerChanged.apply(this, arguments)\r\n                        }\r\n                    }))\r\n                }\r\n            });\r\n            that._stateStoringController = new StateStoringController(options.component).init();\r\n            that._columnsInfo = [];\r\n            that._rowsInfo = [];\r\n            that._cellsInfo = [];\r\n            that.expandValueChanging = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.progressChanged = Callbacks();\r\n            that.scrollChanged = Callbacks();\r\n            that.load();\r\n            that._update();\r\n            that.changed = Callbacks()\r\n        },\r\n        _fireChanged: function() {\r\n            var startChanging = new Date;\r\n            this.changed && !this._lockChanged && this.changed.fire();\r\n            this._changingDuration = new Date - startChanging\r\n        },\r\n        _correctSkipsTakes: function(rowIndex, rowSkip, rowSpan, levels, skips, takes) {\r\n            var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\r\n            skips[levels.length] = skips[levels.length] || 0;\r\n            takes[levels.length] = takes[levels.length] || 0;\r\n            if (endIndex < rowSkip) {\r\n                skips[levels.length]++\r\n            } else {\r\n                takes[levels.length]++\r\n            }\r\n        },\r\n        _calculatePagingForRowExpandedPaths: function(options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\r\n            var rows = this._rowsInfo;\r\n            var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\r\n            var rowExpandedPaths = options.rowExpandedPaths;\r\n            var levels = [];\r\n            var expandedPathIndexes = {};\r\n            var i;\r\n            var j;\r\n            var path;\r\n            rowExpandedPaths.forEach((path, index) => {\r\n                expandedPathIndexes[path] = index\r\n            });\r\n            for (i = 0; i < rowCount; i++) {\r\n                takes.length = skips.length = levels.length + 1;\r\n                for (j = 0; j < rows[i].length; j++) {\r\n                    var cell = rows[i][j];\r\n                    if (\"D\" === cell.type) {\r\n                        this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\r\n                        path = cell.path || path;\r\n                        var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\r\n                        if (expandIndex >= 0) {\r\n                            rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\r\n                            rowExpandedTakes[expandIndex] = takes[levels.length] || 0\r\n                        }\r\n                        if (cell.rowspan) {\r\n                            levels.push(cell.rowspan)\r\n                        }\r\n                    }\r\n                }\r\n                levels = levels.map(level => level - 1).filter(level => level > 0)\r\n            }\r\n        },\r\n        _calculatePagingForColumnExpandedPaths: function(options, skips, takes, expandedSkips, expandedTakes) {\r\n            var skipByPath = {};\r\n            var takeByPath = {};\r\n            foreachColumnInfo(this._columnsInfo, (function(columnInfo, columnIndex) {\r\n                if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\r\n                    var colspan = columnInfo.colspan || 1;\r\n                    var path = columnInfo.path.slice(0, -1).toString();\r\n                    skipByPath[path] = skipByPath[path] || 0;\r\n                    takeByPath[path] = takeByPath[path] || 0;\r\n                    if (columnIndex + colspan <= options.columnSkip) {\r\n                        skipByPath[path]++\r\n                    } else if (columnIndex < options.columnSkip + options.columnTake) {\r\n                        takeByPath[path]++\r\n                    }\r\n                }\r\n            }));\r\n            skips[0] = skipByPath[[]];\r\n            takes[0] = takeByPath[[]];\r\n            options.columnExpandedPaths.forEach((function(path, index) {\r\n                var skip = skipByPath[path];\r\n                var take = takeByPath[path];\r\n                if (void 0 !== skip) {\r\n                    expandedSkips[index] = skip\r\n                }\r\n                if (void 0 !== take) {\r\n                    expandedTakes[index] = take\r\n                }\r\n            }))\r\n        },\r\n        _processPagingForExpandedPaths: function(options, area, storeLoadOptions, reload) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            var expandedSkips = expandedPaths.map(() => 0);\r\n            var expandedTakes = expandedPaths.map(() => reload ? options.pageSize : 0);\r\n            var skips = [];\r\n            var takes = [];\r\n            if (!reload) {\r\n                if (\"row\" === area) {\r\n                    this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                } else {\r\n                    this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                }\r\n            }\r\n            this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes)\r\n        },\r\n        _savePagingForExpandedPaths: function(options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            options[area + \"ExpandedPaths\"] = [];\r\n            options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\r\n            options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\r\n            for (var i = 0; i < expandedPaths.length; i++) {\r\n                if (expandedTakes[i]) {\r\n                    var isOppositeArea = options.area && options.area !== area;\r\n                    storeLoadOptions.push(extend({\r\n                        area: area,\r\n                        headerName: area + \"s\"\r\n                    }, options, {\r\n                        [area + \"Skip\"]: expandedSkips[i],\r\n                        [area + \"Take\"]: expandedTakes[i],\r\n                        [isOppositeArea ? \"oppositePath\" : \"path\"]: expandedPaths[i]\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions: function(storeLoadOptions, reload) {\r\n            var options = storeLoadOptions[0];\r\n            var rowsScrollController = this._rowsScrollController;\r\n            if (this._dataSource.paginate() && rowsScrollController) {\r\n                var rowPageSize = rowsScrollController.pageSize();\r\n                if (\"rows\" === options.headerName) {\r\n                    options.rowSkip = 0;\r\n                    options.rowTake = rowPageSize;\r\n                    options.rowExpandedPaths = []\r\n                } else {\r\n                    options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\r\n                    options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\r\n                    this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload)\r\n                }\r\n            }\r\n            var columnsScrollController = this._columnsScrollController;\r\n            if (this._dataSource.paginate() && columnsScrollController) {\r\n                var columnPageSize = columnsScrollController.pageSize();\r\n                storeLoadOptions.forEach((options, index) => {\r\n                    if (\"columns\" === options.headerName) {\r\n                        options.columnSkip = 0;\r\n                        options.columnTake = columnPageSize;\r\n                        options.columnExpandedPaths = []\r\n                    } else {\r\n                        options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\r\n                        options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\r\n                        this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var stateStoringController = this._stateStoringController;\r\n            if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                stateStoringController.load().always((function(state) {\r\n                    if (state) {\r\n                        that._dataSource.state(state)\r\n                    } else {\r\n                        that._dataSource.load()\r\n                    }\r\n                }))\r\n            } else {\r\n                that._dataSource.load()\r\n            }\r\n        },\r\n        calculateVirtualContentParams: function(contentParams) {\r\n            var rowsScrollController = this._rowsScrollController;\r\n            var columnsScrollController = this._columnsScrollController;\r\n            if (rowsScrollController && columnsScrollController) {\r\n                rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\r\n                rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\r\n                rowsScrollController.setContentItemSizes(contentParams.itemHeights);\r\n                columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\r\n                columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\r\n                columnsScrollController.setContentItemSizes(contentParams.itemWidths);\r\n                deferUpdate((function() {\r\n                    columnsScrollController.loadIfNeed();\r\n                    rowsScrollController.loadIfNeed()\r\n                }));\r\n                this.scrollChanged.fire({\r\n                    left: columnsScrollController.getViewportPosition(),\r\n                    top: rowsScrollController.getViewportPosition()\r\n                });\r\n                return {\r\n                    contentTop: rowsScrollController.getContentOffset(),\r\n                    contentLeft: columnsScrollController.getContentOffset(),\r\n                    width: columnsScrollController.getVirtualContentSize(),\r\n                    height: rowsScrollController.getVirtualContentSize()\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(left, top) {\r\n            this._rowsScrollController.setViewportPosition(top || 0);\r\n            this._columnsScrollController.setViewportPosition(left || 0)\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element)\r\n        },\r\n        updateWindowScrollPosition: function(position) {\r\n            this._rowsScrollController && this._rowsScrollController.scrollTo(position)\r\n        },\r\n        updateViewOptions: function(options) {\r\n            extend(this._options, options);\r\n            this._update()\r\n        },\r\n        _handleExpandValueChanging: function(e) {\r\n            this.expandValueChanging.fire(e)\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleProgressChanged: function(progress) {\r\n            this.progressChanged.fire(progress)\r\n        },\r\n        _handleFieldsPrepared: function(e) {\r\n            this._options.onFieldsPrepared && this._options.onFieldsPrepared(e)\r\n        },\r\n        _createDataSource: function(options) {\r\n            var that = this;\r\n            var dataSourceOptions = options.dataSource;\r\n            var dataSource;\r\n            that._isSharedDataSource = dataSourceOptions instanceof PivotGridDataSource;\r\n            if (that._isSharedDataSource) {\r\n                dataSource = dataSourceOptions\r\n            } else {\r\n                dataSource = new PivotGridDataSource(dataSourceOptions)\r\n            }\r\n            that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._changedHandler = function() {\r\n                that._update();\r\n                that.dataSourceChanged.fire()\r\n            };\r\n            that._progressChangedHandler = function(progress) {\r\n                that._handleProgressChanged(.8 * progress)\r\n            };\r\n            dataSource.on(\"changed\", that._changedHandler);\r\n            dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"progressChanged\", that._progressChangedHandler);\r\n            dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            return dataSource\r\n        },\r\n        getDataSource: function() {\r\n            return this._dataSource\r\n        },\r\n        isLoading: function() {\r\n            return this._dataSource.isLoading()\r\n        },\r\n        beginLoading: function() {\r\n            this._dataSource.beginLoading()\r\n        },\r\n        endLoading: function() {\r\n            this._dataSource.endLoading()\r\n        },\r\n        _update: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var options = that._options;\r\n            var columnFields = dataSource.getAreaFields(\"column\");\r\n            var rowFields = dataSource.getAreaFields(\"row\");\r\n            var dataFields = dataSource.getAreaFields(\"data\");\r\n            var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\r\n            var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\r\n            var data = dataSource.getData();\r\n            var hiddenTotals = function(dataFields) {\r\n                var result = [];\r\n                each(dataFields, (function(index, field) {\r\n                    if (false === field.showTotals) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                return result\r\n            }(dataFields);\r\n            var hiddenValues = function(dataFields) {\r\n                var result = [];\r\n                dataFields.forEach((function(field, index) {\r\n                    if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                return result\r\n            }(dataFields);\r\n            var hiddenGrandTotals = function(dataFields, columnFields) {\r\n                var result = [];\r\n                each(dataFields, (function(index, field) {\r\n                    if (false === field.showGrandTotals) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                if (0 === columnFields.length && result.length === dataFields.length) {\r\n                    result = []\r\n                }\r\n                return result\r\n            }(dataFields, columnFields);\r\n            var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\r\n            var rowOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalRow,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: [],\r\n                showTotals: options.showRowTotals,\r\n                showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(columnFields, dataFields),\r\n                showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                layout: options.rowHeaderLayout,\r\n                fields: rowFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var columnOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: hiddenGrandTotals,\r\n                showTotals: options.showColumnTotals,\r\n                showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(rowFields, dataFields),\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                fields: columnFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var notifyProgress = function(progress) {\r\n                this.progress = progress;\r\n                that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress)\r\n            };\r\n            rowOptions.notifyProgress = notifyProgress;\r\n            columnOptions.notifyProgress = notifyProgress;\r\n            if (!isDefined(data.grandTotalRowIndex)) {\r\n                data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length\r\n            }\r\n            if (!isDefined(data.grandTotalColumnIndex)) {\r\n                data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length\r\n            }\r\n            dataSource._changeLoadingCount(1);\r\n            when(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always((function() {\r\n                dataSource._changeLoadingCount(-1)\r\n            })).done((function(columnsInfo, rowsInfo) {\r\n                that._columnsInfo = columnsInfo;\r\n                that._rowsInfo = rowsInfo;\r\n                if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\r\n                    that._lockChanged = true;\r\n                    that._rowsScrollController.load();\r\n                    that._columnsScrollController.load();\r\n                    that._lockChanged = false\r\n                }\r\n            })).done((function() {\r\n                that._fireChanged();\r\n                if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\r\n                    that._stateStoringController.state(that._dataSource.state());\r\n                    that._stateStoringController.save()\r\n                }\r\n            }))\r\n        },\r\n        getRowsInfo: function(getAllData) {\r\n            var rowsInfo = this._rowsInfo;\r\n            var scrollController = this._rowsScrollController;\r\n            var rowspan;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * this.rowPageSize();\r\n                var endIndex = scrollController.endPageIndex() * this.rowPageSize() + this.rowPageSize();\r\n                var newRowsInfo = [];\r\n                var maxDepth = 1;\r\n                foreachRowInfo(rowsInfo, (function(rowInfo, visibleIndex, rowIndex, _, columnIndex) {\r\n                    var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\r\n                    var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\r\n                    var cell = rowInfo;\r\n                    if (isVisible) {\r\n                        newRowsInfo[index] = newRowsInfo[index] || [];\r\n                        rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\r\n                        if (startIndex + index + rowspan > endIndex) {\r\n                            rowspan = endIndex - (index + startIndex) || 1\r\n                        }\r\n                        if (rowspan !== rowInfo.rowspan) {\r\n                            cell = extend({}, cell, {\r\n                                rowspan: rowspan\r\n                            })\r\n                        }\r\n                        newRowsInfo[index].push(cell);\r\n                        maxDepth = math.max(maxDepth, columnIndex + 1)\r\n                    } else if (void 0 > endIndex) {\r\n                        return false\r\n                    }\r\n                }));\r\n                foreachRowInfo(newRowsInfo, (function(rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\r\n                    var colspan = rowInfo.colspan || 1;\r\n                    if (realColumnIndex + colspan > maxDepth) {\r\n                        newRowsInfo[rowIndex][columnIndex] = extend({}, rowInfo, {\r\n                            colspan: maxDepth - realColumnIndex || 1\r\n                        })\r\n                    }\r\n                }));\r\n                return newRowsInfo\r\n            }\r\n            return rowsInfo\r\n        },\r\n        getColumnsInfo: function(getAllData) {\r\n            var info = this._columnsInfo;\r\n            var scrollController = this._columnsScrollController;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * this.columnPageSize();\r\n                var endIndex = scrollController.endPageIndex() * this.columnPageSize() + this.columnPageSize();\r\n                info = createColumnsInfo(info, startIndex, endIndex)\r\n            }\r\n            return info\r\n        },\r\n        totalRowCount: function() {\r\n            return this._rowsInfo.length\r\n        },\r\n        rowPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._rowPageIndex = index\r\n            }\r\n            return this._rowPageIndex || 0\r\n        },\r\n        totalColumnCount: function() {\r\n            var count = 0;\r\n            if (this._columnsInfo && this._columnsInfo.length) {\r\n                for (var i = 0; i < this._columnsInfo[0].length; i++) {\r\n                    count += this._columnsInfo[0][i].colspan || 1\r\n                }\r\n            }\r\n            return count\r\n        },\r\n        rowPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._rowPageSize = size\r\n            }\r\n            return this._rowPageSize || 20\r\n        },\r\n        columnPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._columnPageSize = size\r\n            }\r\n            return this._columnPageSize || 20\r\n        },\r\n        columnPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._columnPageIndex = index\r\n            }\r\n            return this._columnPageIndex || 0\r\n        },\r\n        getCellsInfo: function(getAllData) {\r\n            var rowsInfo = this.getRowsInfo(getAllData);\r\n            var columnsInfo = this.getColumnsInfo(getAllData);\r\n            var data = this._dataSource.getData();\r\n            var texts = this._options.texts || {};\r\n            return function(rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\r\n                var info = [];\r\n                var dataFieldAreaInRows = \"row\" === dataFieldArea;\r\n                var dataSourceCells = data.values;\r\n                dataSourceCells.length && foreachRowInfo(rowsInfo, (function(rowInfo, rowIndex) {\r\n                    var row = info[rowIndex] = [];\r\n                    var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\r\n                    rowInfo.isLast && foreachColumnInfo(columnsInfo, (function(columnInfo, columnIndex) {\r\n                        var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\r\n                        var dataField = dataFields[dataIndex];\r\n                        if (columnInfo.isLast && dataField) {\r\n                            var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\r\n                            if (!Array.isArray(cell)) {\r\n                                cell = [cell]\r\n                            }\r\n                            var cellValue = cell[dataIndex];\r\n                            row[columnIndex] = {\r\n                                text: formatCellValue(cellValue, dataField, errorText),\r\n                                value: cellValue,\r\n                                format: dataField.format,\r\n                                dataType: dataField.dataType,\r\n                                columnType: columnInfo.type,\r\n                                rowType: rowInfo.type,\r\n                                rowPath: rowInfo.path || [],\r\n                                columnPath: columnInfo.path || [],\r\n                                dataIndex: dataIndex\r\n                            };\r\n                            if (dataField.width) {\r\n                                row[columnIndex].width = dataField.width\r\n                            }\r\n                        }\r\n                    }))\r\n                }));\r\n                return info\r\n            }(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable)\r\n        },\r\n        dispose: function() {\r\n            if (this._isSharedDataSource) {\r\n                this._dataSource.off(\"changed\", this._changedHandler);\r\n                this._dataSource.off(\"expandValueChanging\", this._expandValueChangingHandler);\r\n                this._dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n                this._dataSource.off(\"progressChanged\", this._progressChangedHandler);\r\n                this._dataSource.off(\"fieldsPrepared\", this._fieldsPreparedHandler);\r\n                this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler)\r\n            } else {\r\n                this._dataSource.dispose()\r\n            }\r\n            this._columnsScrollController && this._columnsScrollController.dispose();\r\n            this._rowsScrollController && this._rowsScrollController.dispose();\r\n            this._stateStoringController.dispose();\r\n            this.expandValueChanging.empty();\r\n            this.changed.empty();\r\n            this.loadingChanged.empty();\r\n            this.progressChanged.empty();\r\n            this.scrollChanged.empty();\r\n            this.dataSourceChanged.empty()\r\n        }\r\n    };\r\n    proxyMethod(members, \"applyPartialDataSource\");\r\n    proxyMethod(members, \"collapseHeaderItem\");\r\n    proxyMethod(members, \"expandHeaderItem\");\r\n    proxyMethod(members, \"getData\");\r\n    proxyMethod(members, \"isEmpty\");\r\n    return members\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}