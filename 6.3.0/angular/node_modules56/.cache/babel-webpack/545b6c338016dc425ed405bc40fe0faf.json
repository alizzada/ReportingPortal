{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, HostListener, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxAutocomplete from 'devextreme/ui/autocomplete';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiButtonComponent, DxiItemComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxiItemModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DxAutocompleteComponent;\n  }),\n  multi: true\n};\n\nvar DxAutocompleteComponent = /*@__PURE__*/function () {\n  /**\n   * The Autocomplete UI component is a textbox that provides suggestions while a user types into it.\n  \r\n   */\n  var DxAutocompleteComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxAutocompleteComponent, _DxComponent);\n\n    var _super = _createSuper(DxAutocompleteComponent);\n\n    function DxAutocompleteComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxAutocompleteComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this.touched = function (_) {};\n\n      _this._createEventEmitters([{\n        subscribe: 'change',\n        emit: 'onChange'\n      }, {\n        subscribe: 'closed',\n        emit: 'onClosed'\n      }, {\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'copy',\n        emit: 'onCopy'\n      }, {\n        subscribe: 'cut',\n        emit: 'onCut'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'enterKey',\n        emit: 'onEnterKey'\n      }, {\n        subscribe: 'focusIn',\n        emit: 'onFocusIn'\n      }, {\n        subscribe: 'focusOut',\n        emit: 'onFocusOut'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'input',\n        emit: 'onInput'\n      }, {\n        subscribe: 'itemClick',\n        emit: 'onItemClick'\n      }, {\n        subscribe: 'keyDown',\n        emit: 'onKeyDown'\n      }, {\n        subscribe: 'keyPress',\n        emit: 'onKeyPress'\n      }, {\n        subscribe: 'keyUp',\n        emit: 'onKeyUp'\n      }, {\n        subscribe: 'opened',\n        emit: 'onOpened'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'paste',\n        emit: 'onPaste'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        subscribe: 'valueChanged',\n        emit: 'onValueChanged'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'buttonsChange'\n      }, {\n        emit: 'dataSourceChange'\n      }, {\n        emit: 'deferRenderingChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'displayValueChange'\n      }, {\n        emit: 'dropDownButtonTemplateChange'\n      }, {\n        emit: 'dropDownOptionsChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'groupedChange'\n      }, {\n        emit: 'groupTemplateChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'inputAttrChange'\n      }, {\n        emit: 'isValidChange'\n      }, {\n        emit: 'itemsChange'\n      }, {\n        emit: 'itemTemplateChange'\n      }, {\n        emit: 'maxItemCountChange'\n      }, {\n        emit: 'maxLengthChange'\n      }, {\n        emit: 'minSearchLengthChange'\n      }, {\n        emit: 'nameChange'\n      }, {\n        emit: 'openedChange'\n      }, {\n        emit: 'openOnFieldClickChange'\n      }, {\n        emit: 'placeholderChange'\n      }, {\n        emit: 'readOnlyChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'searchExprChange'\n      }, {\n        emit: 'searchModeChange'\n      }, {\n        emit: 'searchTimeoutChange'\n      }, {\n        emit: 'selectedItemChange'\n      }, {\n        emit: 'showClearButtonChange'\n      }, {\n        emit: 'showDropDownButtonChange'\n      }, {\n        emit: 'spellcheckChange'\n      }, {\n        emit: 'stylingModeChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'textChange'\n      }, {\n        emit: 'useItemTextAsTitleChange'\n      }, {\n        emit: 'validationErrorChange'\n      }, {\n        emit: 'validationErrorsChange'\n      }, {\n        emit: 'validationMessageModeChange'\n      }, {\n        emit: 'validationStatusChange'\n      }, {\n        emit: 'valueChange'\n      }, {\n        emit: 'valueChangeEventChange'\n      }, {\n        emit: 'valueExprChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'wrapItemTextChange'\n      }, {\n        emit: 'onBlur'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxAutocompleteComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"buttons\",\n      get: function get() {\n        return this._getOption('buttons');\n      },\n      set: function set(value) {\n        this._setOption('buttons', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dataSource\",\n      get: function get() {\n        return this._getOption('dataSource');\n      },\n      set: function set(value) {\n        this._setOption('dataSource', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"deferRendering\",\n      get: function get() {\n        return this._getOption('deferRendering');\n      },\n      set: function set(value) {\n        this._setOption('deferRendering', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"displayValue\",\n      get: function get() {\n        return this._getOption('displayValue');\n      },\n      set: function set(value) {\n        this._setOption('displayValue', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dropDownButtonTemplate\",\n      get: function get() {\n        return this._getOption('dropDownButtonTemplate');\n      },\n      set: function set(value) {\n        this._setOption('dropDownButtonTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dropDownOptions\",\n      get: function get() {\n        return this._getOption('dropDownOptions');\n      },\n      set: function set(value) {\n        this._setOption('dropDownOptions', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"grouped\",\n      get: function get() {\n        return this._getOption('grouped');\n      },\n      set: function set(value) {\n        this._setOption('grouped', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"groupTemplate\",\n      get: function get() {\n        return this._getOption('groupTemplate');\n      },\n      set: function set(value) {\n        this._setOption('groupTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"inputAttr\",\n      get: function get() {\n        return this._getOption('inputAttr');\n      },\n      set: function set(value) {\n        this._setOption('inputAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this._getOption('isValid');\n      },\n      set: function set(value) {\n        this._setOption('isValid', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"items\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this._setOption('items', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"itemTemplate\",\n      get: function get() {\n        return this._getOption('itemTemplate');\n      },\n      set: function set(value) {\n        this._setOption('itemTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"maxItemCount\",\n      get: function get() {\n        return this._getOption('maxItemCount');\n      },\n      set: function set(value) {\n        this._setOption('maxItemCount', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"maxLength\",\n      get: function get() {\n        return this._getOption('maxLength');\n      },\n      set: function set(value) {\n        this._setOption('maxLength', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"minSearchLength\",\n      get: function get() {\n        return this._getOption('minSearchLength');\n      },\n      set: function set(value) {\n        this._setOption('minSearchLength', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"name\",\n      get: function get() {\n        return this._getOption('name');\n      },\n      set: function set(value) {\n        this._setOption('name', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"opened\",\n      get: function get() {\n        return this._getOption('opened');\n      },\n      set: function set(value) {\n        this._setOption('opened', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"openOnFieldClick\",\n      get: function get() {\n        return this._getOption('openOnFieldClick');\n      },\n      set: function set(value) {\n        this._setOption('openOnFieldClick', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"placeholder\",\n      get: function get() {\n        return this._getOption('placeholder');\n      },\n      set: function set(value) {\n        this._setOption('placeholder', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"readOnly\",\n      get: function get() {\n        return this._getOption('readOnly');\n      },\n      set: function set(value) {\n        this._setOption('readOnly', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchExpr\",\n      get: function get() {\n        return this._getOption('searchExpr');\n      },\n      set: function set(value) {\n        this._setOption('searchExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchMode\",\n      get: function get() {\n        return this._getOption('searchMode');\n      },\n      set: function set(value) {\n        this._setOption('searchMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchTimeout\",\n      get: function get() {\n        return this._getOption('searchTimeout');\n      },\n      set: function set(value) {\n        this._setOption('searchTimeout', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectedItem\",\n      get: function get() {\n        return this._getOption('selectedItem');\n      },\n      set: function set(value) {\n        this._setOption('selectedItem', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showClearButton\",\n      get: function get() {\n        return this._getOption('showClearButton');\n      },\n      set: function set(value) {\n        this._setOption('showClearButton', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showDropDownButton\",\n      get: function get() {\n        return this._getOption('showDropDownButton');\n      },\n      set: function set(value) {\n        this._setOption('showDropDownButton', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"spellcheck\",\n      get: function get() {\n        return this._getOption('spellcheck');\n      },\n      set: function set(value) {\n        this._setOption('spellcheck', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"stylingMode\",\n      get: function get() {\n        return this._getOption('stylingMode');\n      },\n      set: function set(value) {\n        this._setOption('stylingMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"text\",\n      get: function get() {\n        return this._getOption('text');\n      },\n      set: function set(value) {\n        this._setOption('text', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"useItemTextAsTitle\",\n      get: function get() {\n        return this._getOption('useItemTextAsTitle');\n      },\n      set: function set(value) {\n        this._setOption('useItemTextAsTitle', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationError\",\n      get: function get() {\n        return this._getOption('validationError');\n      },\n      set: function set(value) {\n        this._setOption('validationError', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationErrors\",\n      get: function get() {\n        return this._getOption('validationErrors');\n      },\n      set: function set(value) {\n        this._setOption('validationErrors', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationMessageMode\",\n      get: function get() {\n        return this._getOption('validationMessageMode');\n      },\n      set: function set(value) {\n        this._setOption('validationMessageMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationStatus\",\n      get: function get() {\n        return this._getOption('validationStatus');\n      },\n      set: function set(value) {\n        this._setOption('validationStatus', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._getOption('value');\n      },\n      set: function set(value) {\n        this._setOption('value', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"valueChangeEvent\",\n      get: function get() {\n        return this._getOption('valueChangeEvent');\n      },\n      set: function set(value) {\n        this._setOption('valueChangeEvent', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"valueExpr\",\n      get: function get() {\n        return this._getOption('valueExpr');\n      },\n      set: function set(value) {\n        this._setOption('valueExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"wrapItemText\",\n      get: function get() {\n        return this._getOption('wrapItemText');\n      },\n      set: function set(value) {\n        this._setOption('wrapItemText', value);\n      }\n    }, {\n      key: \"change\",\n      value: function change(_) {}\n    }, {\n      key: \"buttonsChildren\",\n      get: function get() {\n        return this._getOption('buttons');\n      },\n      set: function set(value) {\n        this.setChildren('buttons', value);\n      }\n    }, {\n      key: \"itemsChildren\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this.setChildren('items', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxAutocomplete(element, options);\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.eventHelper.lockedValueChangeEvent = true;\n        this.value = value;\n        this.eventHelper.lockedValueChangeEvent = false;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.change = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.touched = fn;\n      }\n    }, {\n      key: \"_createWidget\",\n      value: function _createWidget(element) {\n        var _this2 = this;\n\n        _get(_getPrototypeOf(DxAutocompleteComponent.prototype), \"_createWidget\", this).call(this, element);\n\n        this.instance.on('focusOut', function (e) {\n          _this2.eventHelper.fireNgEvent('onBlur', [e]);\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxAutocompleteComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('buttons', changes);\n        this.setupChanges('dataSource', changes);\n        this.setupChanges('items', changes);\n        this.setupChanges('searchExpr', changes);\n        this.setupChanges('validationErrors', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('buttons');\n\n        this._idh.doCheck('dataSource');\n\n        this._idh.doCheck('items');\n\n        this._idh.doCheck('searchExpr');\n\n        this._idh.doCheck('validationErrors');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxAutocompleteComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxAutocompleteComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxAutocompleteComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxAutocompleteComponent;\n  }(DxComponent);\n\n  DxAutocompleteComponent.ɵfac = function DxAutocompleteComponent_Factory(t) {\n    return new (t || DxAutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxAutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxAutocompleteComponent,\n    selectors: [[\"dx-autocomplete\"]],\n    contentQueries: function DxAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiButtonComponent, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);\n      }\n    },\n    hostBindings: function DxAutocompleteComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"onBlur\", function DxAutocompleteComponent_onBlur_HostBindingHandler($event) {\n          return ctx.touched($event);\n        })(\"valueChange\", function DxAutocompleteComponent_valueChange_HostBindingHandler($event) {\n          return ctx.change($event);\n        });\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      buttons: \"buttons\",\n      dataSource: \"dataSource\",\n      deferRendering: \"deferRendering\",\n      disabled: \"disabled\",\n      displayValue: \"displayValue\",\n      dropDownButtonTemplate: \"dropDownButtonTemplate\",\n      dropDownOptions: \"dropDownOptions\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      grouped: \"grouped\",\n      groupTemplate: \"groupTemplate\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      inputAttr: \"inputAttr\",\n      isValid: \"isValid\",\n      items: \"items\",\n      itemTemplate: \"itemTemplate\",\n      maxItemCount: \"maxItemCount\",\n      maxLength: \"maxLength\",\n      minSearchLength: \"minSearchLength\",\n      name: \"name\",\n      opened: \"opened\",\n      openOnFieldClick: \"openOnFieldClick\",\n      placeholder: \"placeholder\",\n      readOnly: \"readOnly\",\n      rtlEnabled: \"rtlEnabled\",\n      searchExpr: \"searchExpr\",\n      searchMode: \"searchMode\",\n      searchTimeout: \"searchTimeout\",\n      selectedItem: \"selectedItem\",\n      showClearButton: \"showClearButton\",\n      showDropDownButton: \"showDropDownButton\",\n      spellcheck: \"spellcheck\",\n      stylingMode: \"stylingMode\",\n      tabIndex: \"tabIndex\",\n      text: \"text\",\n      useItemTextAsTitle: \"useItemTextAsTitle\",\n      validationError: \"validationError\",\n      validationErrors: \"validationErrors\",\n      validationMessageMode: \"validationMessageMode\",\n      validationStatus: \"validationStatus\",\n      value: \"value\",\n      valueChangeEvent: \"valueChangeEvent\",\n      valueExpr: \"valueExpr\",\n      visible: \"visible\",\n      width: \"width\",\n      wrapItemText: \"wrapItemText\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onClosed: \"onClosed\",\n      onContentReady: \"onContentReady\",\n      onCopy: \"onCopy\",\n      onCut: \"onCut\",\n      onDisposing: \"onDisposing\",\n      onEnterKey: \"onEnterKey\",\n      onFocusIn: \"onFocusIn\",\n      onFocusOut: \"onFocusOut\",\n      onInitialized: \"onInitialized\",\n      onInput: \"onInput\",\n      onItemClick: \"onItemClick\",\n      onKeyDown: \"onKeyDown\",\n      onKeyPress: \"onKeyPress\",\n      onKeyUp: \"onKeyUp\",\n      onOpened: \"onOpened\",\n      onOptionChanged: \"onOptionChanged\",\n      onPaste: \"onPaste\",\n      onSelectionChanged: \"onSelectionChanged\",\n      onValueChanged: \"onValueChanged\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      buttonsChange: \"buttonsChange\",\n      dataSourceChange: \"dataSourceChange\",\n      deferRenderingChange: \"deferRenderingChange\",\n      disabledChange: \"disabledChange\",\n      displayValueChange: \"displayValueChange\",\n      dropDownButtonTemplateChange: \"dropDownButtonTemplateChange\",\n      dropDownOptionsChange: \"dropDownOptionsChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      groupedChange: \"groupedChange\",\n      groupTemplateChange: \"groupTemplateChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      inputAttrChange: \"inputAttrChange\",\n      isValidChange: \"isValidChange\",\n      itemsChange: \"itemsChange\",\n      itemTemplateChange: \"itemTemplateChange\",\n      maxItemCountChange: \"maxItemCountChange\",\n      maxLengthChange: \"maxLengthChange\",\n      minSearchLengthChange: \"minSearchLengthChange\",\n      nameChange: \"nameChange\",\n      openedChange: \"openedChange\",\n      openOnFieldClickChange: \"openOnFieldClickChange\",\n      placeholderChange: \"placeholderChange\",\n      readOnlyChange: \"readOnlyChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      searchExprChange: \"searchExprChange\",\n      searchModeChange: \"searchModeChange\",\n      searchTimeoutChange: \"searchTimeoutChange\",\n      selectedItemChange: \"selectedItemChange\",\n      showClearButtonChange: \"showClearButtonChange\",\n      showDropDownButtonChange: \"showDropDownButtonChange\",\n      spellcheckChange: \"spellcheckChange\",\n      stylingModeChange: \"stylingModeChange\",\n      tabIndexChange: \"tabIndexChange\",\n      textChange: \"textChange\",\n      useItemTextAsTitleChange: \"useItemTextAsTitleChange\",\n      validationErrorChange: \"validationErrorChange\",\n      validationErrorsChange: \"validationErrorsChange\",\n      validationMessageModeChange: \"validationMessageModeChange\",\n      validationStatusChange: \"validationStatusChange\",\n      valueChange: \"valueChange\",\n      valueChangeEventChange: \"valueChangeEventChange\",\n      valueExprChange: \"valueExprChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      wrapItemTextChange: \"wrapItemTextChange\",\n      onBlur: \"onBlur\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxAutocompleteComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxAutocompleteComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxAutocompleteComponent);\n  return DxAutocompleteComponent;\n}();\n\nvar DxAutocompleteModule = /*@__PURE__*/function () {\n  var DxAutocompleteModule = function DxAutocompleteModule() {\n    _classCallCheck(this, DxAutocompleteModule);\n  };\n\n  DxAutocompleteModule.ɵfac = function DxAutocompleteModule_Factory(t) {\n    return new (t || DxAutocompleteModule)();\n  };\n\n  DxAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxAutocompleteModule\n  });\n  DxAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxiItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxiItemModule, DxTemplateModule]\n  });\n  return DxAutocompleteModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxAutocompleteModule, {\n    declarations: function declarations() {\n      return [DxAutocompleteComponent];\n    },\n    imports: function imports() {\n      return [DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxiItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxAutocompleteComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoShowModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxiToolbarItemModule, DxiItemModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxAutocompleteComponent, DxAutocompleteModule };","map":null,"metadata":{},"sourceType":"module"}