{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/viz/core/plaque.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined } from \"../../core/utils/type\";\nvar math = Math;\nvar round = math.round;\nvar max = math.max;\nvar min = math.min;\nvar sin = math.sin;\nvar cos = math.cos;\nvar asin = math.asin;\nvar PI = math.PI;\n\nvar buildPath = function buildPath() {\n  for (var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++) {\n    points[_key] = arguments[_key];\n  }\n\n  return points.join(\"\");\n};\n\nfunction getArc(cornerRadius, xDirection, yDirection) {\n  return \"a \".concat(cornerRadius, \" \").concat(cornerRadius, \" 0 0 1 \").concat(xDirection * cornerRadius, \" \").concat(yDirection * cornerRadius);\n}\n\nfunction getAbsoluteArc(cornerRadius, x, y) {\n  return \"A \".concat(cornerRadius, \" \").concat(cornerRadius, \" 0 0 1 \").concat(x, \" \").concat(y);\n}\n\nfunction rotateX(x, y, angle, x0, y0) {\n  return (x - x0) * round(cos(angle)) + (y - y0) * round(sin(angle)) + x0;\n}\n\nfunction rotateY(x, y, angle, x0, y0) {\n  return -(x - x0) * round(sin(angle)) + (y - y0) * round(cos(angle)) + y0;\n}\n\nfunction rotateSize(options, angle) {\n  if (angle % 90 === 0 && angle % 180 !== 0) {\n    return {\n      width: options.height,\n      height: options.width\n    };\n  }\n\n  return options;\n}\n\nfunction getCloudAngle(_ref, x, y, anchorX, anchorY) {\n  var width = _ref.width,\n      height = _ref.height;\n  var halfWidth = width / 2;\n  var halfHeight = height / 2;\n  var xr = Math.ceil(x + halfWidth);\n  var xl = Math.floor(x - halfWidth);\n  var yt = Math.floor(y - halfHeight);\n  var yb = Math.ceil(y + halfHeight);\n\n  if (anchorX < xl && anchorY < yt || anchorX >= xl && anchorX <= xr && anchorY < yt) {\n    return 270;\n  }\n\n  if (anchorX > xr && anchorY > yb || anchorX >= xl && anchorX <= xr && anchorY > yb) {\n    return 90;\n  } else if (anchorX < xl && anchorY > yb || anchorX < xl && anchorY >= yt && anchorY <= yb) {\n    return 180;\n  }\n\n  return 0;\n}\n\nfunction getCloudPoints(_ref2, x, y, anchorX, anchorY, _ref3, bounded) {\n  var width = _ref2.width,\n      height = _ref2.height;\n  var arrowWidth = _ref3.arrowWidth,\n      _ref3$cornerRadius = _ref3.cornerRadius,\n      cornerRadius = _ref3$cornerRadius === void 0 ? 0 : _ref3$cornerRadius;\n  var halfArrowWidth = arrowWidth / 2;\n  var halfWidth = width / 2;\n  var halfHeight = height / 2;\n  var xr = Math.ceil(x + halfWidth);\n  var xl = Math.floor(x - halfWidth);\n  var yt = Math.floor(y - halfHeight);\n  var yb = Math.ceil(y + halfHeight);\n  var leftTopCorner = [xl, yt];\n  var rightTopCorner = [xr, yt];\n  var rightBottomCorner = [xr, yb];\n  var leftBottomCorner = [xl, yb];\n  var arrowX = anchorX <= xl ? xl : xr <= anchorX ? xr : anchorX;\n  var arrowY = anchorY <= yt ? yt : yb <= anchorY ? yb : anchorY;\n  var arrowBaseBottom = min(arrowY + halfArrowWidth, yb);\n  var arrowBaseTop = max(arrowY - halfArrowWidth, yt);\n  var arrowBaseLeft = max(arrowX - halfArrowWidth, xl);\n  cornerRadius = Math.min(width / 2, height / 2, cornerRadius);\n  var points;\n  leftTopCorner[1] += cornerRadius;\n  rightTopCorner[0] -= cornerRadius;\n  rightBottomCorner[1] -= cornerRadius;\n  leftBottomCorner[0] += cornerRadius;\n\n  if (!bounded || xl <= anchorX && anchorX <= xr && yt <= anchorY && anchorY <= yb) {\n    points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), \"L\", rightTopCorner, getArc(cornerRadius, 1, 1), \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1), \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1));\n  } else if (anchorX > xr && anchorY < yt) {\n    var arrowAngle = arrowWidth / cornerRadius || 0;\n    var angle = PI / 4 + arrowAngle / 2;\n    var endAngle = PI / 4 - arrowAngle / 2;\n    var arrowEndPointX = rightTopCorner[0] + cos(endAngle) * cornerRadius;\n    var arrowEndPointY = rightTopCorner[1] + (1 - sin(endAngle)) * cornerRadius;\n    var arrowArc = buildPath(\"L\", rightTopCorner, getArc(cornerRadius, cos(angle), 1 - sin(angle)), \"L\", [anchorX, anchorY, arrowEndPointX, arrowEndPointY], getAbsoluteArc(cornerRadius, rightTopCorner[0] + cornerRadius, rightTopCorner[1] + cornerRadius));\n\n    if (Math.abs(angle) > PI / 2) {\n      arrowArc = buildPath(\"L\", [arrowBaseLeft, yt, anchorX, anchorY, xr, arrowBaseBottom]);\n    }\n\n    points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), arrowArc, \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1), \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1));\n  } else if (anchorX > xr && anchorY >= yt && anchorY <= yb) {\n    var _arrowArc;\n\n    if (arrowBaseTop >= rightTopCorner[1] + cornerRadius && arrowBaseBottom <= rightBottomCorner[1]) {\n      _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", [xr, arrowBaseTop, anchorX, anchorY, xr, arrowBaseBottom], \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1));\n    } else if (arrowBaseTop < rightTopCorner[1] + cornerRadius && arrowBaseBottom >= rightTopCorner[1] + cornerRadius && arrowBaseBottom <= rightBottomCorner[1]) {\n      var arrowWidthRest = rightTopCorner[1] + cornerRadius - arrowBaseTop;\n\n      var _angle = arrowWidthRest / cornerRadius;\n\n      var arrowBaseTopX = rightTopCorner[0] + cos(_angle) * cornerRadius;\n      var arrowBaseTopY = rightTopCorner[1] + (1 - sin(_angle)) * cornerRadius;\n      _arrowArc = buildPath(getArc(cornerRadius, cos(_angle), 1 - sin(_angle)), \"L\", [arrowBaseTopX, arrowBaseTopY, anchorX, anchorY, xr, arrowBaseBottom], \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1));\n    } else if (arrowBaseTop < rightTopCorner[1] + cornerRadius && arrowBaseBottom < rightTopCorner[1] + cornerRadius) {\n      var _arrowWidthRest = rightTopCorner[1] + cornerRadius - arrowBaseTop;\n\n      var _arrowAngle = _arrowWidthRest / cornerRadius;\n\n      var _angle2 = _arrowAngle;\n\n      var _arrowBaseTopX = rightTopCorner[0] + cos(_angle2) * cornerRadius;\n\n      var _arrowBaseTopY = rightTopCorner[1] + (1 - sin(_angle2)) * cornerRadius;\n\n      var bottomAngle = Math.sin((rightTopCorner[1] + cornerRadius - arrowBaseBottom) / cornerRadius);\n      var arrowBaseBottomX = rightTopCorner[0] + cornerRadius * cos(bottomAngle);\n      var arrowBaseBottomY = rightTopCorner[1] + cornerRadius * (1 - sin(bottomAngle));\n      _arrowArc = buildPath(getArc(cornerRadius, cos(_angle2), 1 - sin(_angle2)), \"L\", [_arrowBaseTopX, _arrowBaseTopY, anchorX, anchorY, arrowBaseBottomX, arrowBaseBottomY], getAbsoluteArc(cornerRadius, rightTopCorner[0] + cornerRadius, rightTopCorner[1] + cornerRadius), \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1));\n    } else if (arrowBaseTop <= rightTopCorner[1] + cornerRadius && arrowBaseBottom >= rightBottomCorner[1]) {\n      var topAngle = asin((rightTopCorner[1] + cornerRadius - arrowBaseTop) / cornerRadius);\n\n      var _arrowBaseTopX2 = rightTopCorner[0] + cornerRadius * cos(topAngle);\n\n      var _arrowBaseTopY2 = rightTopCorner[1] + cornerRadius * (1 - sin(topAngle));\n\n      var _bottomAngle = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\n\n      var _arrowBaseBottomX = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle) - 1);\n\n      var _arrowBaseBottomY = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle);\n\n      _arrowArc = buildPath(getArc(cornerRadius, cos(topAngle), 1 - sin(topAngle)), \"L\", [_arrowBaseTopX2, _arrowBaseTopY2, anchorX, anchorY, _arrowBaseBottomX, _arrowBaseBottomY], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius));\n    } else if (arrowBaseTop > rightTopCorner[1] + cornerRadius && arrowBaseTop <= rightBottomCorner[1] && arrowBaseBottom > rightBottomCorner[1]) {\n      var _bottomAngle2 = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\n\n      var _arrowBaseBottomX2 = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle2) - 1);\n\n      var _arrowBaseBottomY2 = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle2);\n\n      _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", [xr, arrowBaseTop, anchorX, anchorY, _arrowBaseBottomX2, _arrowBaseBottomY2], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius));\n    } else if (arrowBaseTop > rightTopCorner[1] + cornerRadius && arrowBaseBottom > rightBottomCorner[1]) {\n      var _bottomAngle3 = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\n\n      var _arrowBaseBottomX3 = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle3) - 1);\n\n      var _arrowBaseBottomY3 = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle3);\n\n      var _topAngle = asin((arrowBaseTop - rightBottomCorner[1]) / cornerRadius);\n\n      var _arrowBaseTopX3 = rightBottomCorner[0] + cornerRadius * (cos(_topAngle) - 1);\n\n      var _arrowBaseTopY3 = rightBottomCorner[1] + cornerRadius * sin(_topAngle);\n\n      _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", rightBottomCorner, getArc(cornerRadius, cos(_topAngle) - 1, sin(_topAngle)), \"L\", [_arrowBaseTopX3, _arrowBaseTopY3, anchorX, anchorY, _arrowBaseBottomX3, _arrowBaseBottomY3], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius));\n    }\n\n    points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), \"L\", rightTopCorner, _arrowArc, \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1));\n  }\n\n  return buildPath(\"M\", points, \"Z\");\n}\n\nexport var Plaque = /*#__PURE__*/function () {\n  function Plaque(options, widget, root, contentTemplate) {\n    _classCallCheck(this, Plaque);\n\n    var bounded = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : true;\n    var measureContent = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : function (_, g) {\n      return g.getBBox();\n    };\n    var moveContentGroup = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : function (_, g, x, y) {\n      return g.move(x, y);\n    };\n    this.widget = widget;\n    this.options = options;\n    this.root = root;\n    this.contentTemplate = contentTemplate;\n    this.bonded = bounded;\n    this.measureContent = measureContent;\n    this.moveContentGroup = moveContentGroup;\n  }\n\n  _createClass(Plaque, [{\n    key: \"draw\",\n    value: function draw(_ref4) {\n      var _this = this;\n\n      var anchorX = _ref4.x,\n          anchorY = _ref4.y,\n          _ref4$canvas = _ref4.canvas,\n          canvas = _ref4$canvas === void 0 ? {} : _ref4$canvas,\n          offsetX = _ref4.offsetX,\n          offsetY = _ref4.offsetY,\n          _ref4$offset = _ref4.offset,\n          offset = _ref4$offset === void 0 ? 0 : _ref4$offset,\n          restProps = _objectWithoutPropertiesLoose(_ref4, [\"x\", \"y\", \"canvas\", \"offsetX\", \"offsetY\", \"offset\"]);\n\n      var options = this.options;\n      var x = options.x,\n          y = options.y;\n      var bounds_xl = canvas.left,\n          bounds_xr = canvas.width - canvas.right,\n          bounds_width = canvas.width - canvas.right - canvas.left,\n          bounds_yt = canvas.top,\n          bounds_yb = canvas.height - canvas.bottom,\n          bounds_height = canvas.height - canvas.bottom - canvas.top;\n\n      if (!(isDefined(anchorX) && isDefined(anchorY)) && !(isDefined(x) && isDefined(y))) {\n        return false;\n      }\n\n      if (isDefined(anchorX) && (anchorX < bounds_xl || bounds_xr < anchorX || anchorY < bounds_yt || bounds_yb < anchorY)) {\n        return false;\n      }\n\n      if (!this._root) {\n        this._draw();\n      }\n\n      var shadowSettings = extend({\n        x: \"-50%\",\n        y: \"-50%\",\n        width: \"200%\",\n        height: \"200%\"\n      }, options.shadow);\n      var contentWidth = options.width > 0 ? options.width : null;\n      var contentHeight = options.height > 0 ? options.height : null;\n\n      var onRender = function onRender() {\n        var _this$_root;\n\n        var bBox = _this._contentBBox = _this.measureContent(_this.widget, _this._contentGroup);\n\n        var size = _this._size = {\n          width: max(contentWidth, bBox.width) + 2 * options.paddingLeftRight,\n          height: max(contentHeight, bBox.height) + 2 * options.paddingTopBottom,\n          offset: offset\n        };\n        var xOff = shadowSettings.offsetX;\n        var yOff = shadowSettings.offsetY;\n        var blur = 2 * shadowSettings.blur + 1;\n        var lm = max(blur - xOff, 0);\n        var rm = max(blur + xOff, 0);\n        var tm = max(blur - yOff, 0);\n        var bm = max(blur + yOff, 0);\n        _this.margins = {\n          lm: lm,\n          rm: rm,\n          tm: tm,\n          bm: bm\n        };\n\n        if (!isDefined(x)) {\n          if (isDefined(offsetX)) {\n            x = anchorX + offsetX;\n          } else if (bounds_width < size.width) {\n            x = round(bounds_xl + bounds_width / 2);\n          } else {\n            x = min(max(anchorX, Math.ceil(bounds_xl + size.width / 2 + lm)), Math.floor(bounds_xr - size.width / 2 - rm));\n          }\n        } else {\n          x += offsetX || 0;\n\n          if (!isDefined(anchorX)) {\n            anchorX = x;\n          }\n        }\n\n        if (!isDefined(y)) {\n          if (isDefined(offsetY)) {\n            y = anchorY + offsetY;\n          } else {\n            var y_top = anchorY - options.arrowLength - size.height / 2 - offset;\n            var y_bottom = anchorY + options.arrowLength + size.height / 2 + offset;\n\n            if (bounds_height < size.height + options.arrowLength) {\n              y = round(bounds_yt + size.height / 2);\n            } else if (y_top - size.height / 2 - tm < bounds_yt) {\n              if (y_bottom + size.height / 2 + bm < bounds_yb) {\n                y = y_bottom;\n                anchorY += offset;\n              } else {\n                y = round(bounds_yt + size.height / 2);\n              }\n            } else {\n              y = y_top;\n              anchorY -= offset;\n            }\n          }\n        } else {\n          y += offsetY || 0;\n\n          if (!isDefined(anchorY)) {\n            anchorY = y + size.height / 2;\n          }\n        }\n\n        _this.anchorX = anchorX;\n        _this.anchorY = anchorY;\n\n        _this.move(x, y);\n\n        null === (_this$_root = _this._root) || void 0 === _this$_root ? void 0 : _this$_root.append(_this.root);\n      };\n\n      if (this.contentTemplate.render) {\n        this.contentTemplate.render({\n          model: options,\n          container: this._contentGroup.element,\n          onRendered: onRender\n        });\n      } else {\n        return this.contentTemplate(_extends({\n          group: this._contentGroup,\n          onRender: onRender\n        }, restProps));\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var renderer = this.widget._renderer;\n      var options = this.options;\n      var shadowSettings = extend({\n        x: \"-50%\",\n        y: \"-50%\",\n        width: \"200%\",\n        height: \"200%\"\n      }, options.shadow);\n      var shadow = this._shadow = renderer.shadowFilter().attr(shadowSettings);\n      var cloudSettings = {\n        opacity: options.opacity,\n        \"stroke-width\": 0,\n        fill: options.color\n      };\n      var borderOptions = options.border || {};\n\n      if (borderOptions.visible) {\n        extend(cloudSettings, {\n          \"stroke-width\": borderOptions.width,\n          stroke: borderOptions.color,\n          \"stroke-opacity\": borderOptions.opacity,\n          dashStyle: borderOptions.dashStyle\n        });\n      }\n\n      var group = this._root = renderer.g().append(this.root);\n\n      if (options.type) {\n        group.attr({\n          class: \"dxc-\".concat(options.type, \"-annotation\")\n        });\n      }\n\n      var cloudGroup = renderer.g().attr({\n        filter: shadow.id\n      }).append(group);\n      this._cloud = renderer.path([], \"area\").attr(cloudSettings).sharp().append(cloudGroup);\n      this._contentGroup = renderer.g().append(group);\n    }\n  }, {\n    key: \"getBBox\",\n    value: function getBBox() {\n      var size = this._size || {};\n      var margins = this.margins || {};\n      var rotationAngle = getCloudAngle(size, this.x, this.y, this.anchorX, this.anchorY);\n      return {\n        x: Math.floor(this.x - size.width / 2 - margins.lm),\n        y: Math.floor(this.y - size.height / 2 - margins.tm - (270 === rotationAngle ? this.options.arrowLength : 0)),\n        width: size.width + margins.lm + margins.rm,\n        height: size.height + margins.tm + margins.bm + (90 === rotationAngle || 270 === rotationAngle ? this.options.arrowLength : 0)\n      };\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this._root) {\n        this._root.remove();\n\n        this._shadow.remove();\n\n        this._root = null;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"customizeCloud\",\n    value: function customizeCloud(attr) {\n      if (this._cloud) {\n        this._cloud.attr(attr);\n      }\n    }\n  }, {\n    key: \"moveRoot\",\n    value: function moveRoot(x, y) {\n      if (this._root) {\n        this._root.move(x, y);\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(x, y) {\n      x = round(x);\n      y = round(y);\n      this.x = x;\n      this.y = y;\n      var rotationAngle = getCloudAngle(this._size, x, y, this.anchorX, this.anchorY);\n      var radRotationAngle = rotationAngle * PI / 180;\n\n      this._cloud.attr({\n        d: getCloudPoints(rotateSize(this._size, rotationAngle), x, y, rotateX(this.anchorX, this.anchorY, radRotationAngle, x, y), rotateY(this.anchorX, this.anchorY, radRotationAngle, x, y), this.options, this.bonded)\n      }).rotate(rotationAngle, x, y);\n\n      this.moveContentGroup(this.widget, this._contentGroup, x - this._contentBBox.x - this._contentBBox.width / 2, y - this._contentBBox.y - this._contentBBox.height / 2);\n    }\n  }, {\n    key: \"hitTest\",\n    value: function hitTest(x, y) {\n      var _ref5 = this._size || {},\n          width = _ref5.width,\n          height = _ref5.height;\n\n      return Math.abs(x - this.x) <= width / 2 && Math.abs(y - this.y) <= height / 2;\n    }\n  }]);\n\n  return Plaque;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/core/plaque.js"],"names":["_extends","_objectWithoutPropertiesLoose","extend","isDefined","math","Math","round","max","min","sin","cos","asin","PI","buildPath","_len","arguments","length","points","Array","_key","join","getArc","cornerRadius","xDirection","yDirection","concat","getAbsoluteArc","x","y","rotateX","angle","x0","y0","rotateY","rotateSize","options","width","height","getCloudAngle","_ref","anchorX","anchorY","halfWidth","halfHeight","xr","ceil","xl","floor","yt","yb","getCloudPoints","_ref2","_ref3","bounded","arrowWidth","halfArrowWidth","leftTopCorner","rightTopCorner","rightBottomCorner","leftBottomCorner","arrowX","arrowY","arrowBaseBottom","arrowBaseTop","arrowBaseLeft","arrowAngle","endAngle","arrowEndPointX","arrowEndPointY","arrowArc","abs","_arrowArc","arrowWidthRest","_angle","arrowBaseTopX","arrowBaseTopY","_arrowWidthRest","_arrowAngle","_angle2","_arrowBaseTopX","_arrowBaseTopY","bottomAngle","arrowBaseBottomX","arrowBaseBottomY","topAngle","_arrowBaseTopX2","_arrowBaseTopY2","_bottomAngle","_arrowBaseBottomX","_arrowBaseBottomY","_bottomAngle2","_arrowBaseBottomX2","_arrowBaseBottomY2","_bottomAngle3","_arrowBaseBottomX3","_arrowBaseBottomY3","_topAngle","_arrowBaseTopX3","_arrowBaseTopY3","Plaque","widget","root","contentTemplate","measureContent","_","g","getBBox","moveContentGroup","move","bonded","_ref4","canvas","offsetX","offsetY","offset","restProps","bounds_xl","left","bounds_xr","right","bounds_width","bounds_yt","top","bounds_yb","bottom","bounds_height","_root","_draw","shadowSettings","shadow","contentWidth","contentHeight","onRender","_this$_root","bBox","_contentBBox","_contentGroup","size","_size","paddingLeftRight","paddingTopBottom","xOff","yOff","blur","lm","rm","tm","bm","margins","y_top","arrowLength","y_bottom","append","render","model","container","element","onRendered","group","renderer","_renderer","_shadow","shadowFilter","attr","cloudSettings","opacity","fill","color","borderOptions","border","visible","stroke","dashStyle","type","class","cloudGroup","filter","id","_cloud","path","sharp","rotationAngle","remove","radRotationAngle","d","rotate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/core/plaque.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar math = Math;\r\nvar round = math.round;\r\nvar max = math.max;\r\nvar min = math.min;\r\nvar sin = math.sin;\r\nvar cos = math.cos;\r\nvar asin = math.asin;\r\nvar PI = math.PI;\r\nvar buildPath = function() {\r\n    for (var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        points[_key] = arguments[_key]\r\n    }\r\n    return points.join(\"\")\r\n};\r\n\r\nfunction getArc(cornerRadius, xDirection, yDirection) {\r\n    return \"a \".concat(cornerRadius, \" \").concat(cornerRadius, \" 0 0 1 \").concat(xDirection * cornerRadius, \" \").concat(yDirection * cornerRadius)\r\n}\r\n\r\nfunction getAbsoluteArc(cornerRadius, x, y) {\r\n    return \"A \".concat(cornerRadius, \" \").concat(cornerRadius, \" 0 0 1 \").concat(x, \" \").concat(y)\r\n}\r\n\r\nfunction rotateX(x, y, angle, x0, y0) {\r\n    return (x - x0) * round(cos(angle)) + (y - y0) * round(sin(angle)) + x0\r\n}\r\n\r\nfunction rotateY(x, y, angle, x0, y0) {\r\n    return -(x - x0) * round(sin(angle)) + (y - y0) * round(cos(angle)) + y0\r\n}\r\n\r\nfunction rotateSize(options, angle) {\r\n    if (angle % 90 === 0 && angle % 180 !== 0) {\r\n        return {\r\n            width: options.height,\r\n            height: options.width\r\n        }\r\n    }\r\n    return options\r\n}\r\n\r\nfunction getCloudAngle(_ref, x, y, anchorX, anchorY) {\r\n    var {\r\n        width: width,\r\n        height: height\r\n    } = _ref;\r\n    var halfWidth = width / 2;\r\n    var halfHeight = height / 2;\r\n    var xr = Math.ceil(x + halfWidth);\r\n    var xl = Math.floor(x - halfWidth);\r\n    var yt = Math.floor(y - halfHeight);\r\n    var yb = Math.ceil(y + halfHeight);\r\n    if (anchorX < xl && anchorY < yt || anchorX >= xl && anchorX <= xr && anchorY < yt) {\r\n        return 270\r\n    }\r\n    if (anchorX > xr && anchorY > yb || anchorX >= xl && anchorX <= xr && anchorY > yb) {\r\n        return 90\r\n    } else if (anchorX < xl && anchorY > yb || anchorX < xl && anchorY >= yt && anchorY <= yb) {\r\n        return 180\r\n    }\r\n    return 0\r\n}\r\n\r\nfunction getCloudPoints(_ref2, x, y, anchorX, anchorY, _ref3, bounded) {\r\n    var {\r\n        width: width,\r\n        height: height\r\n    } = _ref2;\r\n    var {\r\n        arrowWidth: arrowWidth,\r\n        cornerRadius: cornerRadius = 0\r\n    } = _ref3;\r\n    var halfArrowWidth = arrowWidth / 2;\r\n    var halfWidth = width / 2;\r\n    var halfHeight = height / 2;\r\n    var xr = Math.ceil(x + halfWidth);\r\n    var xl = Math.floor(x - halfWidth);\r\n    var yt = Math.floor(y - halfHeight);\r\n    var yb = Math.ceil(y + halfHeight);\r\n    var leftTopCorner = [xl, yt];\r\n    var rightTopCorner = [xr, yt];\r\n    var rightBottomCorner = [xr, yb];\r\n    var leftBottomCorner = [xl, yb];\r\n    var arrowX = anchorX <= xl ? xl : xr <= anchorX ? xr : anchorX;\r\n    var arrowY = anchorY <= yt ? yt : yb <= anchorY ? yb : anchorY;\r\n    var arrowBaseBottom = min(arrowY + halfArrowWidth, yb);\r\n    var arrowBaseTop = max(arrowY - halfArrowWidth, yt);\r\n    var arrowBaseLeft = max(arrowX - halfArrowWidth, xl);\r\n    cornerRadius = Math.min(width / 2, height / 2, cornerRadius);\r\n    var points;\r\n    leftTopCorner[1] += cornerRadius;\r\n    rightTopCorner[0] -= cornerRadius;\r\n    rightBottomCorner[1] -= cornerRadius;\r\n    leftBottomCorner[0] += cornerRadius;\r\n    if (!bounded || xl <= anchorX && anchorX <= xr && yt <= anchorY && anchorY <= yb) {\r\n        points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), \"L\", rightTopCorner, getArc(cornerRadius, 1, 1), \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1), \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1))\r\n    } else if (anchorX > xr && anchorY < yt) {\r\n        var arrowAngle = arrowWidth / cornerRadius || 0;\r\n        var angle = PI / 4 + arrowAngle / 2;\r\n        var endAngle = PI / 4 - arrowAngle / 2;\r\n        var arrowEndPointX = rightTopCorner[0] + cos(endAngle) * cornerRadius;\r\n        var arrowEndPointY = rightTopCorner[1] + (1 - sin(endAngle)) * cornerRadius;\r\n        var arrowArc = buildPath(\"L\", rightTopCorner, getArc(cornerRadius, cos(angle), 1 - sin(angle)), \"L\", [anchorX, anchorY, arrowEndPointX, arrowEndPointY], getAbsoluteArc(cornerRadius, rightTopCorner[0] + cornerRadius, rightTopCorner[1] + cornerRadius));\r\n        if (Math.abs(angle) > PI / 2) {\r\n            arrowArc = buildPath(\"L\", [arrowBaseLeft, yt, anchorX, anchorY, xr, arrowBaseBottom])\r\n        }\r\n        points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), arrowArc, \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1), \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1))\r\n    } else if (anchorX > xr && anchorY >= yt && anchorY <= yb) {\r\n        var _arrowArc;\r\n        if (arrowBaseTop >= rightTopCorner[1] + cornerRadius && arrowBaseBottom <= rightBottomCorner[1]) {\r\n            _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", [xr, arrowBaseTop, anchorX, anchorY, xr, arrowBaseBottom], \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1))\r\n        } else if (arrowBaseTop < rightTopCorner[1] + cornerRadius && arrowBaseBottom >= rightTopCorner[1] + cornerRadius && arrowBaseBottom <= rightBottomCorner[1]) {\r\n            var arrowWidthRest = rightTopCorner[1] + cornerRadius - arrowBaseTop;\r\n            var _angle = arrowWidthRest / cornerRadius;\r\n            var arrowBaseTopX = rightTopCorner[0] + cos(_angle) * cornerRadius;\r\n            var arrowBaseTopY = rightTopCorner[1] + (1 - sin(_angle)) * cornerRadius;\r\n            _arrowArc = buildPath(getArc(cornerRadius, cos(_angle), 1 - sin(_angle)), \"L\", [arrowBaseTopX, arrowBaseTopY, anchorX, anchorY, xr, arrowBaseBottom], \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1))\r\n        } else if (arrowBaseTop < rightTopCorner[1] + cornerRadius && arrowBaseBottom < rightTopCorner[1] + cornerRadius) {\r\n            var _arrowWidthRest = rightTopCorner[1] + cornerRadius - arrowBaseTop;\r\n            var _arrowAngle = _arrowWidthRest / cornerRadius;\r\n            var _angle2 = _arrowAngle;\r\n            var _arrowBaseTopX = rightTopCorner[0] + cos(_angle2) * cornerRadius;\r\n            var _arrowBaseTopY = rightTopCorner[1] + (1 - sin(_angle2)) * cornerRadius;\r\n            var bottomAngle = Math.sin((rightTopCorner[1] + cornerRadius - arrowBaseBottom) / cornerRadius);\r\n            var arrowBaseBottomX = rightTopCorner[0] + cornerRadius * cos(bottomAngle);\r\n            var arrowBaseBottomY = rightTopCorner[1] + cornerRadius * (1 - sin(bottomAngle));\r\n            _arrowArc = buildPath(getArc(cornerRadius, cos(_angle2), 1 - sin(_angle2)), \"L\", [_arrowBaseTopX, _arrowBaseTopY, anchorX, anchorY, arrowBaseBottomX, arrowBaseBottomY], getAbsoluteArc(cornerRadius, rightTopCorner[0] + cornerRadius, rightTopCorner[1] + cornerRadius), \"L\", rightBottomCorner, getArc(cornerRadius, -1, 1))\r\n        } else if (arrowBaseTop <= rightTopCorner[1] + cornerRadius && arrowBaseBottom >= rightBottomCorner[1]) {\r\n            var topAngle = asin((rightTopCorner[1] + cornerRadius - arrowBaseTop) / cornerRadius);\r\n            var _arrowBaseTopX2 = rightTopCorner[0] + cornerRadius * cos(topAngle);\r\n            var _arrowBaseTopY2 = rightTopCorner[1] + cornerRadius * (1 - sin(topAngle));\r\n            var _bottomAngle = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\r\n            var _arrowBaseBottomX = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle) - 1);\r\n            var _arrowBaseBottomY = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle);\r\n            _arrowArc = buildPath(getArc(cornerRadius, cos(topAngle), 1 - sin(topAngle)), \"L\", [_arrowBaseTopX2, _arrowBaseTopY2, anchorX, anchorY, _arrowBaseBottomX, _arrowBaseBottomY], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius))\r\n        } else if (arrowBaseTop > rightTopCorner[1] + cornerRadius && arrowBaseTop <= rightBottomCorner[1] && arrowBaseBottom > rightBottomCorner[1]) {\r\n            var _bottomAngle2 = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\r\n            var _arrowBaseBottomX2 = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle2) - 1);\r\n            var _arrowBaseBottomY2 = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle2);\r\n            _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", [xr, arrowBaseTop, anchorX, anchorY, _arrowBaseBottomX2, _arrowBaseBottomY2], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius))\r\n        } else if (arrowBaseTop > rightTopCorner[1] + cornerRadius && arrowBaseBottom > rightBottomCorner[1]) {\r\n            var _bottomAngle3 = asin((arrowBaseBottom - rightBottomCorner[1]) / cornerRadius);\r\n            var _arrowBaseBottomX3 = rightBottomCorner[0] + cornerRadius * (cos(_bottomAngle3) - 1);\r\n            var _arrowBaseBottomY3 = rightBottomCorner[1] + cornerRadius * sin(_bottomAngle3);\r\n            var _topAngle = asin((arrowBaseTop - rightBottomCorner[1]) / cornerRadius);\r\n            var _arrowBaseTopX3 = rightBottomCorner[0] + cornerRadius * (cos(_topAngle) - 1);\r\n            var _arrowBaseTopY3 = rightBottomCorner[1] + cornerRadius * sin(_topAngle);\r\n            _arrowArc = buildPath(getArc(cornerRadius, 1, 1), \"L\", rightBottomCorner, getArc(cornerRadius, cos(_topAngle) - 1, sin(_topAngle)), \"L\", [_arrowBaseTopX3, _arrowBaseTopY3, anchorX, anchorY, _arrowBaseBottomX3, _arrowBaseBottomY3], getAbsoluteArc(cornerRadius, rightBottomCorner[0] - cornerRadius, rightBottomCorner[1] + cornerRadius))\r\n        }\r\n        points = buildPath(leftTopCorner, getArc(cornerRadius, 1, -1), \"L\", rightTopCorner, _arrowArc, \"L\", leftBottomCorner, getArc(cornerRadius, -1, -1))\r\n    }\r\n    return buildPath(\"M\", points, \"Z\")\r\n}\r\nexport class Plaque {\r\n    constructor(options, widget, root, contentTemplate) {\r\n        var bounded = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : true;\r\n        var measureContent = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : (_, g) => g.getBBox();\r\n        var moveContentGroup = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : (_, g, x, y) => g.move(x, y);\r\n        this.widget = widget;\r\n        this.options = options;\r\n        this.root = root;\r\n        this.contentTemplate = contentTemplate;\r\n        this.bonded = bounded;\r\n        this.measureContent = measureContent;\r\n        this.moveContentGroup = moveContentGroup\r\n    }\r\n    draw(_ref4) {\r\n        var {\r\n            x: anchorX,\r\n            y: anchorY,\r\n            canvas: canvas = {},\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            offset: offset = 0\r\n        } = _ref4, restProps = _objectWithoutPropertiesLoose(_ref4, [\"x\", \"y\", \"canvas\", \"offsetX\", \"offsetY\", \"offset\"]);\r\n        var options = this.options;\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = options;\r\n        var bounds_xl = canvas.left,\r\n            bounds_xr = canvas.width - canvas.right,\r\n            bounds_width = canvas.width - canvas.right - canvas.left,\r\n            bounds_yt = canvas.top,\r\n            bounds_yb = canvas.height - canvas.bottom,\r\n            bounds_height = canvas.height - canvas.bottom - canvas.top;\r\n        if (!(isDefined(anchorX) && isDefined(anchorY)) && !(isDefined(x) && isDefined(y))) {\r\n            return false\r\n        }\r\n        if (isDefined(anchorX) && (anchorX < bounds_xl || bounds_xr < anchorX || anchorY < bounds_yt || bounds_yb < anchorY)) {\r\n            return false\r\n        }\r\n        if (!this._root) {\r\n            this._draw()\r\n        }\r\n        var shadowSettings = extend({\r\n            x: \"-50%\",\r\n            y: \"-50%\",\r\n            width: \"200%\",\r\n            height: \"200%\"\r\n        }, options.shadow);\r\n        var contentWidth = options.width > 0 ? options.width : null;\r\n        var contentHeight = options.height > 0 ? options.height : null;\r\n        var onRender = () => {\r\n            var _this$_root;\r\n            var bBox = this._contentBBox = this.measureContent(this.widget, this._contentGroup);\r\n            var size = this._size = {\r\n                width: max(contentWidth, bBox.width) + 2 * options.paddingLeftRight,\r\n                height: max(contentHeight, bBox.height) + 2 * options.paddingTopBottom,\r\n                offset: offset\r\n            };\r\n            var xOff = shadowSettings.offsetX;\r\n            var yOff = shadowSettings.offsetY;\r\n            var blur = 2 * shadowSettings.blur + 1;\r\n            var lm = max(blur - xOff, 0);\r\n            var rm = max(blur + xOff, 0);\r\n            var tm = max(blur - yOff, 0);\r\n            var bm = max(blur + yOff, 0);\r\n            this.margins = {\r\n                lm: lm,\r\n                rm: rm,\r\n                tm: tm,\r\n                bm: bm\r\n            };\r\n            if (!isDefined(x)) {\r\n                if (isDefined(offsetX)) {\r\n                    x = anchorX + offsetX\r\n                } else if (bounds_width < size.width) {\r\n                    x = round(bounds_xl + bounds_width / 2)\r\n                } else {\r\n                    x = min(max(anchorX, Math.ceil(bounds_xl + size.width / 2 + lm)), Math.floor(bounds_xr - size.width / 2 - rm))\r\n                }\r\n            } else {\r\n                x += offsetX || 0;\r\n                if (!isDefined(anchorX)) {\r\n                    anchorX = x\r\n                }\r\n            }\r\n            if (!isDefined(y)) {\r\n                if (isDefined(offsetY)) {\r\n                    y = anchorY + offsetY\r\n                } else {\r\n                    var y_top = anchorY - options.arrowLength - size.height / 2 - offset;\r\n                    var y_bottom = anchorY + options.arrowLength + size.height / 2 + offset;\r\n                    if (bounds_height < size.height + options.arrowLength) {\r\n                        y = round(bounds_yt + size.height / 2)\r\n                    } else if (y_top - size.height / 2 - tm < bounds_yt) {\r\n                        if (y_bottom + size.height / 2 + bm < bounds_yb) {\r\n                            y = y_bottom;\r\n                            anchorY += offset\r\n                        } else {\r\n                            y = round(bounds_yt + size.height / 2)\r\n                        }\r\n                    } else {\r\n                        y = y_top;\r\n                        anchorY -= offset\r\n                    }\r\n                }\r\n            } else {\r\n                y += offsetY || 0;\r\n                if (!isDefined(anchorY)) {\r\n                    anchorY = y + size.height / 2\r\n                }\r\n            }\r\n            this.anchorX = anchorX;\r\n            this.anchorY = anchorY;\r\n            this.move(x, y);\r\n            null === (_this$_root = this._root) || void 0 === _this$_root ? void 0 : _this$_root.append(this.root)\r\n        };\r\n        if (this.contentTemplate.render) {\r\n            this.contentTemplate.render({\r\n                model: options,\r\n                container: this._contentGroup.element,\r\n                onRendered: onRender\r\n            })\r\n        } else {\r\n            return this.contentTemplate(_extends({\r\n                group: this._contentGroup,\r\n                onRender: onRender\r\n            }, restProps))\r\n        }\r\n        return true\r\n    }\r\n    _draw() {\r\n        var renderer = this.widget._renderer;\r\n        var options = this.options;\r\n        var shadowSettings = extend({\r\n            x: \"-50%\",\r\n            y: \"-50%\",\r\n            width: \"200%\",\r\n            height: \"200%\"\r\n        }, options.shadow);\r\n        var shadow = this._shadow = renderer.shadowFilter().attr(shadowSettings);\r\n        var cloudSettings = {\r\n            opacity: options.opacity,\r\n            \"stroke-width\": 0,\r\n            fill: options.color\r\n        };\r\n        var borderOptions = options.border || {};\r\n        if (borderOptions.visible) {\r\n            extend(cloudSettings, {\r\n                \"stroke-width\": borderOptions.width,\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                dashStyle: borderOptions.dashStyle\r\n            })\r\n        }\r\n        var group = this._root = renderer.g().append(this.root);\r\n        if (options.type) {\r\n            group.attr({\r\n                class: \"dxc-\".concat(options.type, \"-annotation\")\r\n            })\r\n        }\r\n        var cloudGroup = renderer.g().attr({\r\n            filter: shadow.id\r\n        }).append(group);\r\n        this._cloud = renderer.path([], \"area\").attr(cloudSettings).sharp().append(cloudGroup);\r\n        this._contentGroup = renderer.g().append(group)\r\n    }\r\n    getBBox() {\r\n        var size = this._size || {};\r\n        var margins = this.margins || {};\r\n        var rotationAngle = getCloudAngle(size, this.x, this.y, this.anchorX, this.anchorY);\r\n        return {\r\n            x: Math.floor(this.x - size.width / 2 - margins.lm),\r\n            y: Math.floor(this.y - size.height / 2 - margins.tm - (270 === rotationAngle ? this.options.arrowLength : 0)),\r\n            width: size.width + margins.lm + margins.rm,\r\n            height: size.height + margins.tm + margins.bm + (90 === rotationAngle || 270 === rotationAngle ? this.options.arrowLength : 0)\r\n        }\r\n    }\r\n    clear() {\r\n        if (this._root) {\r\n            this._root.remove();\r\n            this._shadow.remove();\r\n            this._root = null\r\n        }\r\n        return this\r\n    }\r\n    customizeCloud(attr) {\r\n        if (this._cloud) {\r\n            this._cloud.attr(attr)\r\n        }\r\n    }\r\n    moveRoot(x, y) {\r\n        if (this._root) {\r\n            this._root.move(x, y)\r\n        }\r\n    }\r\n    move(x, y) {\r\n        x = round(x);\r\n        y = round(y);\r\n        this.x = x;\r\n        this.y = y;\r\n        var rotationAngle = getCloudAngle(this._size, x, y, this.anchorX, this.anchorY);\r\n        var radRotationAngle = rotationAngle * PI / 180;\r\n        this._cloud.attr({\r\n            d: getCloudPoints(rotateSize(this._size, rotationAngle), x, y, rotateX(this.anchorX, this.anchorY, radRotationAngle, x, y), rotateY(this.anchorX, this.anchorY, radRotationAngle, x, y), this.options, this.bonded)\r\n        }).rotate(rotationAngle, x, y);\r\n        this.moveContentGroup(this.widget, this._contentGroup, x - this._contentBBox.x - this._contentBBox.width / 2, y - this._contentBBox.y - this._contentBBox.height / 2)\r\n    }\r\n    hitTest(x, y) {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = this._size || {};\r\n        return Math.abs(x - this.x) <= width / 2 && Math.abs(y - this.y) <= height / 2\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}