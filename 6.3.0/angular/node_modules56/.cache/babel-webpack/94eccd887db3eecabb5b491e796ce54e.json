{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointmentDragBehavior.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Draggable from \"../draggable\";\nimport { extend } from \"../../core/utils/extend\";\nimport { LIST_ITEM_DATA_KEY } from \"./constants\";\nvar APPOINTMENT_ITEM_CLASS = \"dx-scheduler-appointment\";\n\nvar AppointmentDragBehavior = /*#__PURE__*/function () {\n  function AppointmentDragBehavior(scheduler) {\n    _classCallCheck(this, AppointmentDragBehavior);\n\n    this.scheduler = scheduler;\n    this.appointments = scheduler._appointments;\n    this.initialPosition = {\n      left: 0,\n      top: 0\n    };\n    this.appointmentInfo = null;\n  }\n\n  _createClass(AppointmentDragBehavior, [{\n    key: \"isAllDay\",\n    value: function isAllDay(appointment) {\n      return appointment.data(\"dxAppointmentSettings\").allDay;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(e) {\n      var itemSettings = e.itemSettings,\n          itemData = e.itemData,\n          initialPosition = e.initialPosition;\n      this.initialPosition = initialPosition;\n      this.appointmentInfo = {\n        appointment: itemData,\n        settings: itemSettings\n      };\n      this.appointments.notifyObserver(\"hideAppointmentTooltip\");\n    }\n  }, {\n    key: \"onDragMove\",\n    value: function onDragMove(e) {\n      if (e.fromComponent !== e.toComponent) {\n        this.appointments.notifyObserver(\"removeDroppableCellClass\");\n      }\n    }\n  }, {\n    key: \"getAppointmentElement\",\n    value: function getAppointmentElement(e) {\n      var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;\n      return $(itemElement);\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(e) {\n      var element = this.getAppointmentElement(e);\n\n      var rawAppointment = this.appointments._getItemData(element);\n\n      var container = this.appointments._getAppointmentContainer(this.isAllDay(element));\n\n      container.append(element);\n      this.appointments.notifyObserver(\"updateAppointmentAfterDrag\", {\n        event: e,\n        element: element,\n        rawAppointment: rawAppointment,\n        coordinates: this.initialPosition\n      });\n    }\n  }, {\n    key: \"getItemData\",\n    value: function getItemData(appointmentElement) {\n      var dataFromTooltip = $(appointmentElement).data(LIST_ITEM_DATA_KEY);\n      var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;\n\n      var itemDataFromGrid = this.appointments._getItemData(appointmentElement);\n\n      return itemDataFromTooltip || itemDataFromGrid;\n    }\n  }, {\n    key: \"getItemSettings\",\n    value: function getItemSettings(appointment) {\n      var itemData = $(appointment).data(LIST_ITEM_DATA_KEY);\n      return itemData && itemData.settings || [];\n    }\n  }, {\n    key: \"createDragStartHandler\",\n    value: function createDragStartHandler(options, appointmentDragging) {\n      var _this = this;\n\n      return function (e) {\n        e.itemData = _this.getItemData(e.itemElement);\n        e.itemSettings = _this.getItemSettings(e.itemElement);\n        appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);\n\n        if (!e.cancel) {\n          options.onDragStart(e);\n        }\n      };\n    }\n  }, {\n    key: \"createDragMoveHandler\",\n    value: function createDragMoveHandler(options, appointmentDragging) {\n      return function (e) {\n        appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);\n\n        if (!e.cancel) {\n          options.onDragMove(e);\n        }\n      };\n    }\n  }, {\n    key: \"createDragEndHandler\",\n    value: function createDragEndHandler(options, appointmentDragging) {\n      var _this2 = this;\n\n      return function (e) {\n        _this2.appointmentInfo = null;\n        appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);\n\n        if (!e.cancel) {\n          options.onDragEnd(e);\n\n          if (e.fromComponent !== e.toComponent) {\n            appointmentDragging.onRemove && appointmentDragging.onRemove(e);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"createDropHandler\",\n    value: function createDropHandler(appointmentDragging) {\n      var _this3 = this;\n\n      return function (e) {\n        var updatedData = _this3.appointments.invoke(\"getUpdatedData\", e.itemData);\n\n        e.itemData = extend({}, e.itemData, updatedData);\n\n        if (e.fromComponent !== e.toComponent) {\n          appointmentDragging.onAdd && appointmentDragging.onAdd(e);\n        }\n      };\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(container, config) {\n      var appointmentDragging = this.scheduler.option(\"appointmentDragging\") || {};\n      var options = extend({\n        component: this.scheduler,\n        contentTemplate: null,\n        filter: \".\".concat(APPOINTMENT_ITEM_CLASS),\n        immediate: false,\n        onDragStart: this.onDragStart.bind(this),\n        onDragMove: this.onDragMove.bind(this),\n        onDragEnd: this.onDragEnd.bind(this)\n      }, config);\n\n      this.appointments._createComponent(container, Draggable, extend({}, options, appointmentDragging, {\n        onDragStart: this.createDragStartHandler(options, appointmentDragging),\n        onDragMove: this.createDragMoveHandler(options, appointmentDragging),\n        onDragEnd: this.createDragEndHandler(options, appointmentDragging),\n        onDrop: this.createDropHandler(appointmentDragging)\n      }));\n    }\n  }, {\n    key: \"updateDragSource\",\n    value: function updateDragSource(appointment, settings) {\n      var appointmentInfo = this.appointmentInfo;\n\n      if (appointmentInfo || appointment) {\n        var currentAppointment = appointment || appointmentInfo.appointment;\n        var currentSettings = settings || appointmentInfo.settings;\n\n        this.appointments._setDragSourceAppointment(currentAppointment, currentSettings);\n      }\n    }\n  }]);\n\n  return AppointmentDragBehavior;\n}();\n\nexport { AppointmentDragBehavior as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/appointmentDragBehavior.js"],"names":["$","Draggable","extend","LIST_ITEM_DATA_KEY","APPOINTMENT_ITEM_CLASS","AppointmentDragBehavior","scheduler","appointments","_appointments","initialPosition","left","top","appointmentInfo","appointment","data","allDay","e","itemSettings","itemData","settings","notifyObserver","fromComponent","toComponent","itemElement","event","element","getAppointmentElement","rawAppointment","_getItemData","container","_getAppointmentContainer","isAllDay","append","coordinates","appointmentElement","dataFromTooltip","itemDataFromTooltip","itemDataFromGrid","options","appointmentDragging","getItemData","getItemSettings","onDragStart","cancel","onDragMove","onDragEnd","onRemove","updatedData","invoke","onAdd","config","option","component","contentTemplate","filter","concat","immediate","bind","_createComponent","createDragStartHandler","createDragMoveHandler","createDragEndHandler","onDrop","createDropHandler","currentAppointment","currentSettings","_setDragSourceAppointment"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentDragBehavior.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Draggable from \"../draggable\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    LIST_ITEM_DATA_KEY\r\n} from \"./constants\";\r\nvar APPOINTMENT_ITEM_CLASS = \"dx-scheduler-appointment\";\r\nexport default class AppointmentDragBehavior {\r\n    constructor(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this.appointments = scheduler._appointments;\r\n        this.initialPosition = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        this.appointmentInfo = null\r\n    }\r\n    isAllDay(appointment) {\r\n        return appointment.data(\"dxAppointmentSettings\").allDay\r\n    }\r\n    onDragStart(e) {\r\n        var {\r\n            itemSettings: itemSettings,\r\n            itemData: itemData,\r\n            initialPosition: initialPosition\r\n        } = e;\r\n        this.initialPosition = initialPosition;\r\n        this.appointmentInfo = {\r\n            appointment: itemData,\r\n            settings: itemSettings\r\n        };\r\n        this.appointments.notifyObserver(\"hideAppointmentTooltip\")\r\n    }\r\n    onDragMove(e) {\r\n        if (e.fromComponent !== e.toComponent) {\r\n            this.appointments.notifyObserver(\"removeDroppableCellClass\")\r\n        }\r\n    }\r\n    getAppointmentElement(e) {\r\n        var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;\r\n        return $(itemElement)\r\n    }\r\n    onDragEnd(e) {\r\n        var element = this.getAppointmentElement(e);\r\n        var rawAppointment = this.appointments._getItemData(element);\r\n        var container = this.appointments._getAppointmentContainer(this.isAllDay(element));\r\n        container.append(element);\r\n        this.appointments.notifyObserver(\"updateAppointmentAfterDrag\", {\r\n            event: e,\r\n            element: element,\r\n            rawAppointment: rawAppointment,\r\n            coordinates: this.initialPosition\r\n        })\r\n    }\r\n    getItemData(appointmentElement) {\r\n        var dataFromTooltip = $(appointmentElement).data(LIST_ITEM_DATA_KEY);\r\n        var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;\r\n        var itemDataFromGrid = this.appointments._getItemData(appointmentElement);\r\n        return itemDataFromTooltip || itemDataFromGrid\r\n    }\r\n    getItemSettings(appointment) {\r\n        var itemData = $(appointment).data(LIST_ITEM_DATA_KEY);\r\n        return itemData && itemData.settings || []\r\n    }\r\n    createDragStartHandler(options, appointmentDragging) {\r\n        return e => {\r\n            e.itemData = this.getItemData(e.itemElement);\r\n            e.itemSettings = this.getItemSettings(e.itemElement);\r\n            appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);\r\n            if (!e.cancel) {\r\n                options.onDragStart(e)\r\n            }\r\n        }\r\n    }\r\n    createDragMoveHandler(options, appointmentDragging) {\r\n        return e => {\r\n            appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);\r\n            if (!e.cancel) {\r\n                options.onDragMove(e)\r\n            }\r\n        }\r\n    }\r\n    createDragEndHandler(options, appointmentDragging) {\r\n        return e => {\r\n            this.appointmentInfo = null;\r\n            appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);\r\n            if (!e.cancel) {\r\n                options.onDragEnd(e);\r\n                if (e.fromComponent !== e.toComponent) {\r\n                    appointmentDragging.onRemove && appointmentDragging.onRemove(e)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    createDropHandler(appointmentDragging) {\r\n        return e => {\r\n            var updatedData = this.appointments.invoke(\"getUpdatedData\", e.itemData);\r\n            e.itemData = extend({}, e.itemData, updatedData);\r\n            if (e.fromComponent !== e.toComponent) {\r\n                appointmentDragging.onAdd && appointmentDragging.onAdd(e)\r\n            }\r\n        }\r\n    }\r\n    addTo(container, config) {\r\n        var appointmentDragging = this.scheduler.option(\"appointmentDragging\") || {};\r\n        var options = extend({\r\n            component: this.scheduler,\r\n            contentTemplate: null,\r\n            filter: \".\".concat(APPOINTMENT_ITEM_CLASS),\r\n            immediate: false,\r\n            onDragStart: this.onDragStart.bind(this),\r\n            onDragMove: this.onDragMove.bind(this),\r\n            onDragEnd: this.onDragEnd.bind(this)\r\n        }, config);\r\n        this.appointments._createComponent(container, Draggable, extend({}, options, appointmentDragging, {\r\n            onDragStart: this.createDragStartHandler(options, appointmentDragging),\r\n            onDragMove: this.createDragMoveHandler(options, appointmentDragging),\r\n            onDragEnd: this.createDragEndHandler(options, appointmentDragging),\r\n            onDrop: this.createDropHandler(appointmentDragging)\r\n        }))\r\n    }\r\n    updateDragSource(appointment, settings) {\r\n        var {\r\n            appointmentInfo: appointmentInfo\r\n        } = this;\r\n        if (appointmentInfo || appointment) {\r\n            var currentAppointment = appointment || appointmentInfo.appointment;\r\n            var currentSettings = settings || appointmentInfo.settings;\r\n            this.appointments._setDragSourceAppointment(currentAppointment, currentSettings)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}