{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/matchers/wordLists.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nfunction getListType(matches) {\n  var prefix = matches[1];\n  return prefix.match(/\\S+\\./) ? \"ordered\" : \"bullet\";\n}\n\nfunction getIndent(node) {\n  var style = node.getAttribute(\"style\");\n\n  if (style) {\n    var level = style.replace(/\\n+/g, \"\").match(/level(\\d+)/);\n    return level ? level[1] - 1 : 0;\n  } else {\n    return false;\n  }\n}\n\nfunction removeNewLineChar(operations) {\n  var newLineOperation = operations[operations.length - 1];\n  newLineOperation.insert = newLineOperation.insert.trim();\n}\n\nvar getMatcher = function getMatcher(quill) {\n  var Delta = quill.import(\"delta\");\n  return function (node, delta) {\n    var ops = delta.ops.slice();\n    var insertOperation = ops[0];\n    insertOperation.insert = insertOperation.insert.replace(/^\\s+/, \"\");\n    var listDecoratorMatches = insertOperation.insert.match(/^(\\S+)\\s+/);\n    var indent = listDecoratorMatches && getIndent(node);\n\n    if (!listDecoratorMatches || false === indent) {\n      return delta;\n    }\n\n    insertOperation.insert = insertOperation.insert.substring(listDecoratorMatches[0].length, insertOperation.insert.length);\n    removeNewLineChar(ops);\n    ops.push({\n      insert: \"\\n\",\n      attributes: {\n        list: getListType(listDecoratorMatches),\n        indent: indent\n      }\n    });\n    return new Delta(ops);\n  };\n};\n\nexport default getMatcher;","map":null,"metadata":{},"sourceType":"module"}