{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxTreeView from 'devextreme/ui/tree_view';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxiItemModule, DxoSearchEditorOptionsModule, DxiButtonModule, DxoOptionsModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The TreeView UI component is a tree-like representation of textual data.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxTreeViewComponent = /*@__PURE__*/function () {\n  var DxTreeViewComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxTreeViewComponent, _DxComponent);\n\n    var _super = _createSuper(DxTreeViewComponent);\n\n    function DxTreeViewComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxTreeViewComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'itemClick',\n        emit: 'onItemClick'\n      }, {\n        subscribe: 'itemCollapsed',\n        emit: 'onItemCollapsed'\n      }, {\n        subscribe: 'itemContextMenu',\n        emit: 'onItemContextMenu'\n      }, {\n        subscribe: 'itemExpanded',\n        emit: 'onItemExpanded'\n      }, {\n        subscribe: 'itemHold',\n        emit: 'onItemHold'\n      }, {\n        subscribe: 'itemRendered',\n        emit: 'onItemRendered'\n      }, {\n        subscribe: 'itemSelectionChanged',\n        emit: 'onItemSelectionChanged'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'selectAllValueChanged',\n        emit: 'onSelectAllValueChanged'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'animationEnabledChange'\n      }, {\n        emit: 'createChildrenChange'\n      }, {\n        emit: 'dataSourceChange'\n      }, {\n        emit: 'dataStructureChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'disabledExprChange'\n      }, {\n        emit: 'displayExprChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'expandAllEnabledChange'\n      }, {\n        emit: 'expandedExprChange'\n      }, {\n        emit: 'expandEventChange'\n      }, {\n        emit: 'expandNodesRecursiveChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'hasItemsExprChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'itemHoldTimeoutChange'\n      }, {\n        emit: 'itemsChange'\n      }, {\n        emit: 'itemsExprChange'\n      }, {\n        emit: 'itemTemplateChange'\n      }, {\n        emit: 'keyExprChange'\n      }, {\n        emit: 'noDataTextChange'\n      }, {\n        emit: 'parentIdExprChange'\n      }, {\n        emit: 'rootValueChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'scrollDirectionChange'\n      }, {\n        emit: 'searchEditorOptionsChange'\n      }, {\n        emit: 'searchEnabledChange'\n      }, {\n        emit: 'searchExprChange'\n      }, {\n        emit: 'searchModeChange'\n      }, {\n        emit: 'searchTimeoutChange'\n      }, {\n        emit: 'searchValueChange'\n      }, {\n        emit: 'selectAllTextChange'\n      }, {\n        emit: 'selectByClickChange'\n      }, {\n        emit: 'selectedExprChange'\n      }, {\n        emit: 'selectionModeChange'\n      }, {\n        emit: 'selectNodesRecursiveChange'\n      }, {\n        emit: 'showCheckBoxesModeChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'virtualModeEnabledChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxTreeViewComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"animationEnabled\",\n      get: function get() {\n        return this._getOption('animationEnabled');\n      },\n      set: function set(value) {\n        this._setOption('animationEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"createChildren\",\n      get: function get() {\n        return this._getOption('createChildren');\n      },\n      set: function set(value) {\n        this._setOption('createChildren', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dataSource\",\n      get: function get() {\n        return this._getOption('dataSource');\n      },\n      set: function set(value) {\n        this._setOption('dataSource', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"dataStructure\",\n      get: function get() {\n        return this._getOption('dataStructure');\n      },\n      set: function set(value) {\n        this._setOption('dataStructure', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabledExpr\",\n      get: function get() {\n        return this._getOption('disabledExpr');\n      },\n      set: function set(value) {\n        this._setOption('disabledExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"displayExpr\",\n      get: function get() {\n        return this._getOption('displayExpr');\n      },\n      set: function set(value) {\n        this._setOption('displayExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"expandAllEnabled\",\n      get: function get() {\n        return this._getOption('expandAllEnabled');\n      },\n      set: function set(value) {\n        this._setOption('expandAllEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"expandedExpr\",\n      get: function get() {\n        return this._getOption('expandedExpr');\n      },\n      set: function set(value) {\n        this._setOption('expandedExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"expandEvent\",\n      get: function get() {\n        return this._getOption('expandEvent');\n      },\n      set: function set(value) {\n        this._setOption('expandEvent', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"expandNodesRecursive\",\n      get: function get() {\n        return this._getOption('expandNodesRecursive');\n      },\n      set: function set(value) {\n        this._setOption('expandNodesRecursive', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hasItemsExpr\",\n      get: function get() {\n        return this._getOption('hasItemsExpr');\n      },\n      set: function set(value) {\n        this._setOption('hasItemsExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"itemHoldTimeout\",\n      get: function get() {\n        return this._getOption('itemHoldTimeout');\n      },\n      set: function set(value) {\n        this._setOption('itemHoldTimeout', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"items\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this._setOption('items', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"itemsExpr\",\n      get: function get() {\n        return this._getOption('itemsExpr');\n      },\n      set: function set(value) {\n        this._setOption('itemsExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"itemTemplate\",\n      get: function get() {\n        return this._getOption('itemTemplate');\n      },\n      set: function set(value) {\n        this._setOption('itemTemplate', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"keyExpr\",\n      get: function get() {\n        return this._getOption('keyExpr');\n      },\n      set: function set(value) {\n        this._setOption('keyExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"noDataText\",\n      get: function get() {\n        return this._getOption('noDataText');\n      },\n      set: function set(value) {\n        this._setOption('noDataText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"parentIdExpr\",\n      get: function get() {\n        return this._getOption('parentIdExpr');\n      },\n      set: function set(value) {\n        this._setOption('parentIdExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rootValue\",\n      get: function get() {\n        return this._getOption('rootValue');\n      },\n      set: function set(value) {\n        this._setOption('rootValue', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"scrollDirection\",\n      get: function get() {\n        return this._getOption('scrollDirection');\n      },\n      set: function set(value) {\n        this._setOption('scrollDirection', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchEditorOptions\",\n      get: function get() {\n        return this._getOption('searchEditorOptions');\n      },\n      set: function set(value) {\n        this._setOption('searchEditorOptions', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchEnabled\",\n      get: function get() {\n        return this._getOption('searchEnabled');\n      },\n      set: function set(value) {\n        this._setOption('searchEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchExpr\",\n      get: function get() {\n        return this._getOption('searchExpr');\n      },\n      set: function set(value) {\n        this._setOption('searchExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchMode\",\n      get: function get() {\n        return this._getOption('searchMode');\n      },\n      set: function set(value) {\n        this._setOption('searchMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchTimeout\",\n      get: function get() {\n        return this._getOption('searchTimeout');\n      },\n      set: function set(value) {\n        this._setOption('searchTimeout', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"searchValue\",\n      get: function get() {\n        return this._getOption('searchValue');\n      },\n      set: function set(value) {\n        this._setOption('searchValue', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectAllText\",\n      get: function get() {\n        return this._getOption('selectAllText');\n      },\n      set: function set(value) {\n        this._setOption('selectAllText', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectByClick\",\n      get: function get() {\n        return this._getOption('selectByClick');\n      },\n      set: function set(value) {\n        this._setOption('selectByClick', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectedExpr\",\n      get: function get() {\n        return this._getOption('selectedExpr');\n      },\n      set: function set(value) {\n        this._setOption('selectedExpr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectionMode\",\n      get: function get() {\n        return this._getOption('selectionMode');\n      },\n      set: function set(value) {\n        this._setOption('selectionMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"selectNodesRecursive\",\n      get: function get() {\n        return this._getOption('selectNodesRecursive');\n      },\n      set: function set(value) {\n        this._setOption('selectNodesRecursive', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showCheckBoxesMode\",\n      get: function get() {\n        return this._getOption('showCheckBoxesMode');\n      },\n      set: function set(value) {\n        this._setOption('showCheckBoxesMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"virtualModeEnabled\",\n      get: function get() {\n        return this._getOption('virtualModeEnabled');\n      },\n      set: function set(value) {\n        this._setOption('virtualModeEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"itemsChildren\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this.setChildren('items', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxTreeView(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxTreeViewComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('dataSource', changes);\n        this.setupChanges('items', changes);\n        this.setupChanges('searchExpr', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('dataSource');\n\n        this._idh.doCheck('items');\n\n        this._idh.doCheck('searchExpr');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxTreeViewComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxTreeViewComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxTreeViewComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxTreeViewComponent;\n  }(DxComponent);\n\n  DxTreeViewComponent.ɵfac = function DxTreeViewComponent_Factory(t) {\n    return new (t || DxTreeViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxTreeViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxTreeViewComponent,\n    selectors: [[\"dx-tree-view\"]],\n    contentQueries: function DxTreeViewComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      animationEnabled: \"animationEnabled\",\n      createChildren: \"createChildren\",\n      dataSource: \"dataSource\",\n      dataStructure: \"dataStructure\",\n      disabled: \"disabled\",\n      disabledExpr: \"disabledExpr\",\n      displayExpr: \"displayExpr\",\n      elementAttr: \"elementAttr\",\n      expandAllEnabled: \"expandAllEnabled\",\n      expandedExpr: \"expandedExpr\",\n      expandEvent: \"expandEvent\",\n      expandNodesRecursive: \"expandNodesRecursive\",\n      focusStateEnabled: \"focusStateEnabled\",\n      hasItemsExpr: \"hasItemsExpr\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      itemHoldTimeout: \"itemHoldTimeout\",\n      items: \"items\",\n      itemsExpr: \"itemsExpr\",\n      itemTemplate: \"itemTemplate\",\n      keyExpr: \"keyExpr\",\n      noDataText: \"noDataText\",\n      parentIdExpr: \"parentIdExpr\",\n      rootValue: \"rootValue\",\n      rtlEnabled: \"rtlEnabled\",\n      scrollDirection: \"scrollDirection\",\n      searchEditorOptions: \"searchEditorOptions\",\n      searchEnabled: \"searchEnabled\",\n      searchExpr: \"searchExpr\",\n      searchMode: \"searchMode\",\n      searchTimeout: \"searchTimeout\",\n      searchValue: \"searchValue\",\n      selectAllText: \"selectAllText\",\n      selectByClick: \"selectByClick\",\n      selectedExpr: \"selectedExpr\",\n      selectionMode: \"selectionMode\",\n      selectNodesRecursive: \"selectNodesRecursive\",\n      showCheckBoxesMode: \"showCheckBoxesMode\",\n      tabIndex: \"tabIndex\",\n      virtualModeEnabled: \"virtualModeEnabled\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onItemClick: \"onItemClick\",\n      onItemCollapsed: \"onItemCollapsed\",\n      onItemContextMenu: \"onItemContextMenu\",\n      onItemExpanded: \"onItemExpanded\",\n      onItemHold: \"onItemHold\",\n      onItemRendered: \"onItemRendered\",\n      onItemSelectionChanged: \"onItemSelectionChanged\",\n      onOptionChanged: \"onOptionChanged\",\n      onSelectAllValueChanged: \"onSelectAllValueChanged\",\n      onSelectionChanged: \"onSelectionChanged\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      animationEnabledChange: \"animationEnabledChange\",\n      createChildrenChange: \"createChildrenChange\",\n      dataSourceChange: \"dataSourceChange\",\n      dataStructureChange: \"dataStructureChange\",\n      disabledChange: \"disabledChange\",\n      disabledExprChange: \"disabledExprChange\",\n      displayExprChange: \"displayExprChange\",\n      elementAttrChange: \"elementAttrChange\",\n      expandAllEnabledChange: \"expandAllEnabledChange\",\n      expandedExprChange: \"expandedExprChange\",\n      expandEventChange: \"expandEventChange\",\n      expandNodesRecursiveChange: \"expandNodesRecursiveChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      hasItemsExprChange: \"hasItemsExprChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      itemHoldTimeoutChange: \"itemHoldTimeoutChange\",\n      itemsChange: \"itemsChange\",\n      itemsExprChange: \"itemsExprChange\",\n      itemTemplateChange: \"itemTemplateChange\",\n      keyExprChange: \"keyExprChange\",\n      noDataTextChange: \"noDataTextChange\",\n      parentIdExprChange: \"parentIdExprChange\",\n      rootValueChange: \"rootValueChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      scrollDirectionChange: \"scrollDirectionChange\",\n      searchEditorOptionsChange: \"searchEditorOptionsChange\",\n      searchEnabledChange: \"searchEnabledChange\",\n      searchExprChange: \"searchExprChange\",\n      searchModeChange: \"searchModeChange\",\n      searchTimeoutChange: \"searchTimeoutChange\",\n      searchValueChange: \"searchValueChange\",\n      selectAllTextChange: \"selectAllTextChange\",\n      selectByClickChange: \"selectByClickChange\",\n      selectedExprChange: \"selectedExprChange\",\n      selectionModeChange: \"selectionModeChange\",\n      selectNodesRecursiveChange: \"selectNodesRecursiveChange\",\n      showCheckBoxesModeChange: \"showCheckBoxesModeChange\",\n      tabIndexChange: \"tabIndexChange\",\n      virtualModeEnabledChange: \"virtualModeEnabledChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxTreeViewComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxTreeViewComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxTreeViewComponent);\n  return DxTreeViewComponent;\n}();\n\nvar DxTreeViewModule = /*@__PURE__*/function () {\n  var DxTreeViewModule = function DxTreeViewModule() {\n    _classCallCheck(this, DxTreeViewModule);\n  };\n\n  DxTreeViewModule.ɵfac = function DxTreeViewModule_Factory(t) {\n    return new (t || DxTreeViewModule)();\n  };\n\n  DxTreeViewModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxTreeViewModule\n  });\n  DxTreeViewModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxiItemModule, DxoSearchEditorOptionsModule, DxiButtonModule, DxoOptionsModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxiItemModule, DxoSearchEditorOptionsModule, DxiButtonModule, DxoOptionsModule, DxTemplateModule]\n  });\n  return DxTreeViewModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxTreeViewModule, {\n    declarations: function declarations() {\n      return [DxTreeViewComponent];\n    },\n    imports: function imports() {\n      return [DxiItemModule, DxoSearchEditorOptionsModule, DxiButtonModule, DxoOptionsModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxTreeViewComponent, DxiItemModule, DxoSearchEditorOptionsModule, DxiButtonModule, DxoOptionsModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxTreeViewComponent, DxTreeViewModule };","map":null,"metadata":{},"sourceType":"module"}