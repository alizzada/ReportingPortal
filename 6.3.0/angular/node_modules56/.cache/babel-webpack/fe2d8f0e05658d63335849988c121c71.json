{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../core/utils/date\";\n\nvar VirtualSelectionState = /*#__PURE__*/function () {\n  function VirtualSelectionState(viewDataProvider) {\n    _classCallCheck(this, VirtualSelectionState);\n\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n\n  _createClass(VirtualSelectionState, [{\n    key: \"viewDataProvider\",\n    get: function get() {\n      return this._viewDataProvider;\n    }\n  }, {\n    key: \"focusedCell\",\n    get: function get() {\n      return this._focusedCell;\n    }\n  }, {\n    key: \"setFocusedCell\",\n    value: function setFocusedCell(rowIndex, columnIndex, isAllDay) {\n      if (rowIndex >= 0) {\n        var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n\n        this._focusedCell = cell;\n      }\n    }\n  }, {\n    key: \"getFocusedCell\",\n    value: function getFocusedCell() {\n      var focusedCell = this.focusedCell;\n\n      if (!focusedCell) {\n        return;\n      }\n\n      var groupIndex = focusedCell.groupIndex,\n          startDate = focusedCell.startDate,\n          allDay = focusedCell.allDay;\n      var cellInfo = {\n        groupIndex: groupIndex,\n        startDate: startDate,\n        isAllDay: allDay,\n        index: focusedCell.index\n      };\n      var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\n      return {\n        coordinates: cellPosition,\n        cellData: focusedCell\n      };\n    }\n  }, {\n    key: \"setSelectedCells\",\n    value: function setSelectedCells(lastCellCoordinates) {\n      var _this = this;\n\n      var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n      var viewDataProvider = this._viewDataProvider;\n      var lastRowIndex = lastCellCoordinates.rowIndex,\n          lastColumnIndex = lastCellCoordinates.columnIndex,\n          isLastCellAllDay = lastCellCoordinates.allDay;\n\n      if (lastRowIndex < 0) {\n        return;\n      }\n\n      var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n      var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n      this._firstSelectedCell = firstCell;\n\n      if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\n        var _ref = [lastCell, firstCell];\n        firstCell = _ref[0];\n        lastCell = _ref[1];\n      }\n\n      var _firstCell = firstCell,\n          firstStartDate = _firstCell.startDate,\n          firstGroupIndex = _firstCell.groupIndex,\n          firstCellIndex = _firstCell.index;\n      var _lastCell = lastCell,\n          lastStartDate = _lastCell.startDate,\n          lastCellIndex = _lastCell.index;\n      var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\n      var filteredCells = cells.reduce(function (selectedCells, cellsRow) {\n        var filterData = {\n          firstDate: firstStartDate,\n          lastDate: lastStartDate,\n          firstIndex: firstCellIndex,\n          lastIndex: lastCellIndex\n        };\n\n        var filteredRow = _this._filterCellsByDateAndIndex(cellsRow, filterData);\n\n        selectedCells.push.apply(selectedCells, _toConsumableArray(filteredRow));\n        return selectedCells;\n      }, []);\n      this._selectedCells = filteredCells.sort(function (firstCell, secondCell) {\n        return firstCell.startDate.getTime() - secondCell.startDate.getTime();\n      });\n    }\n  }, {\n    key: \"getSelectedCells\",\n    value: function getSelectedCells() {\n      return this._selectedCells;\n    }\n  }, {\n    key: \"releaseSelectedAndFocusedCells\",\n    value: function releaseSelectedAndFocusedCells() {\n      this.releaseSelectedCells();\n      this.releaseFocusedCell();\n    }\n  }, {\n    key: \"releaseSelectedCells\",\n    value: function releaseSelectedCells() {\n      this._selectedCells = null;\n      this._firstSelectedCell = null;\n    }\n  }, {\n    key: \"releaseFocusedCell\",\n    value: function releaseFocusedCell() {\n      this._focusedCell = null;\n    }\n  }, {\n    key: \"isValidFocusedCell\",\n    value: function isValidFocusedCell(nextFocusedCellData) {\n      var focusedCell = this._focusedCell;\n\n      if (!focusedCell) {\n        return true;\n      }\n\n      var groupIndex = focusedCell.groupIndex,\n          allDay = focusedCell.allDay;\n      var nextGroupIndex = nextFocusedCellData.groupIndex,\n          nextAllDay = nextFocusedCellData.allDay;\n      return groupIndex === nextGroupIndex && allDay === nextAllDay;\n    }\n  }, {\n    key: \"_filterCellsByDateAndIndex\",\n    value: function _filterCellsByDateAndIndex(cellsRow, filterData) {\n      var _this2 = this;\n\n      var firstDate = filterData.firstDate,\n          lastDate = filterData.lastDate,\n          firstIndex = filterData.firstIndex,\n          lastIndex = filterData.lastIndex;\n      var firstDay = dateUtils.trimTime(firstDate).getTime();\n      var lastDay = dateUtils.trimTime(lastDate).getTime();\n      return cellsRow.filter(function (cell) {\n        var startDate = cell.startDate,\n            index = cell.index;\n        var day = dateUtils.trimTime(startDate).getTime();\n        var daysAndIndexes = {\n          day: day,\n          index: index,\n          firstDay: firstDay,\n          firstIndex: firstIndex,\n          lastDay: lastDay,\n          lastIndex: lastIndex\n        };\n        return _this2._compareCellsByDateAndIndex(daysAndIndexes);\n      });\n    }\n  }, {\n    key: \"_compareCellsByDateAndIndex\",\n    value: function _compareCellsByDateAndIndex(daysAndIndexes) {\n      var day = daysAndIndexes.day,\n          index = daysAndIndexes.index,\n          firstDay = daysAndIndexes.firstDay,\n          firstIndex = daysAndIndexes.firstIndex,\n          lastDay = daysAndIndexes.lastDay,\n          lastIndex = daysAndIndexes.lastIndex;\n\n      if (firstDay === lastDay) {\n        var validFirstIndex = firstIndex;\n        var validLastIndex = lastIndex;\n\n        if (validFirstIndex > validLastIndex) {\n          var _ref2 = [validLastIndex, validFirstIndex];\n          validFirstIndex = _ref2[0];\n          validLastIndex = _ref2[1];\n        }\n\n        return firstDay === day && index >= validFirstIndex && index <= validLastIndex;\n      } else {\n        return day === firstDay && index >= firstIndex || day === lastDay && index <= lastIndex || firstDay < day && day < lastDay;\n      }\n    }\n  }]);\n\n  return VirtualSelectionState;\n}();\n\nexport { VirtualSelectionState as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/workspaces/virtual_selection_state.js"],"names":["dateUtils","VirtualSelectionState","viewDataProvider","_viewDataProvider","_focusedCell","_selectedCells","_firstSelectedCell","rowIndex","columnIndex","isAllDay","cell","getCellData","focusedCell","groupIndex","startDate","allDay","cellInfo","index","cellPosition","findCellPositionInMap","coordinates","cellData","lastCellCoordinates","firstCellCoordinates","arguments","length","lastRowIndex","lastColumnIndex","isLastCellAllDay","firstCell","lastCell","getTime","firstStartDate","firstGroupIndex","firstCellIndex","lastStartDate","lastCellIndex","cells","getCellsByGroupIndexAndAllDay","filteredCells","reduce","selectedCells","cellsRow","filterData","firstDate","lastDate","firstIndex","lastIndex","filteredRow","_filterCellsByDateAndIndex","push","sort","secondCell","releaseSelectedCells","releaseFocusedCell","nextFocusedCellData","nextGroupIndex","nextAllDay","firstDay","trimTime","lastDay","filter","day","daysAndIndexes","_compareCellsByDateAndIndex","validFirstIndex","validLastIndex"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../core/utils/date\";\r\nexport default class VirtualSelectionState {\r\n    constructor(viewDataProvider) {\r\n        this._viewDataProvider = viewDataProvider;\r\n        this._focusedCell = null;\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    get viewDataProvider() {\r\n        return this._viewDataProvider\r\n    }\r\n    get focusedCell() {\r\n        return this._focusedCell\r\n    }\r\n    setFocusedCell(rowIndex, columnIndex, isAllDay) {\r\n        if (rowIndex >= 0) {\r\n            var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\r\n            this._focusedCell = cell\r\n        }\r\n    }\r\n    getFocusedCell() {\r\n        var {\r\n            focusedCell: focusedCell\r\n        } = this;\r\n        if (!focusedCell) {\r\n            return\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            allDay: allDay\r\n        } = focusedCell;\r\n        var cellInfo = {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            isAllDay: allDay,\r\n            index: focusedCell.index\r\n        };\r\n        var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\r\n        return {\r\n            coordinates: cellPosition,\r\n            cellData: focusedCell\r\n        }\r\n    }\r\n    setSelectedCells(lastCellCoordinates) {\r\n        var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\r\n        var viewDataProvider = this._viewDataProvider;\r\n        var {\r\n            rowIndex: lastRowIndex,\r\n            columnIndex: lastColumnIndex,\r\n            allDay: isLastCellAllDay\r\n        } = lastCellCoordinates;\r\n        if (lastRowIndex < 0) {\r\n            return\r\n        }\r\n        var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\r\n        var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\r\n        this._firstSelectedCell = firstCell;\r\n        if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\r\n            [firstCell, lastCell] = [lastCell, firstCell]\r\n        }\r\n        var {\r\n            startDate: firstStartDate,\r\n            groupIndex: firstGroupIndex,\r\n            index: firstCellIndex\r\n        } = firstCell;\r\n        var {\r\n            startDate: lastStartDate,\r\n            index: lastCellIndex\r\n        } = lastCell;\r\n        var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\r\n        var filteredCells = cells.reduce((selectedCells, cellsRow) => {\r\n            var filterData = {\r\n                firstDate: firstStartDate,\r\n                lastDate: lastStartDate,\r\n                firstIndex: firstCellIndex,\r\n                lastIndex: lastCellIndex\r\n            };\r\n            var filteredRow = this._filterCellsByDateAndIndex(cellsRow, filterData);\r\n            selectedCells.push(...filteredRow);\r\n            return selectedCells\r\n        }, []);\r\n        this._selectedCells = filteredCells.sort((firstCell, secondCell) => firstCell.startDate.getTime() - secondCell.startDate.getTime())\r\n    }\r\n    getSelectedCells() {\r\n        return this._selectedCells\r\n    }\r\n    releaseSelectedAndFocusedCells() {\r\n        this.releaseSelectedCells();\r\n        this.releaseFocusedCell()\r\n    }\r\n    releaseSelectedCells() {\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    releaseFocusedCell() {\r\n        this._focusedCell = null\r\n    }\r\n    isValidFocusedCell(nextFocusedCellData) {\r\n        var focusedCell = this._focusedCell;\r\n        if (!focusedCell) {\r\n            return true\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            allDay: allDay\r\n        } = focusedCell;\r\n        var {\r\n            groupIndex: nextGroupIndex,\r\n            allDay: nextAllDay\r\n        } = nextFocusedCellData;\r\n        return groupIndex === nextGroupIndex && allDay === nextAllDay\r\n    }\r\n    _filterCellsByDateAndIndex(cellsRow, filterData) {\r\n        var {\r\n            firstDate: firstDate,\r\n            lastDate: lastDate,\r\n            firstIndex: firstIndex,\r\n            lastIndex: lastIndex\r\n        } = filterData;\r\n        var firstDay = dateUtils.trimTime(firstDate).getTime();\r\n        var lastDay = dateUtils.trimTime(lastDate).getTime();\r\n        return cellsRow.filter(cell => {\r\n            var {\r\n                startDate: startDate,\r\n                index: index\r\n            } = cell;\r\n            var day = dateUtils.trimTime(startDate).getTime();\r\n            var daysAndIndexes = {\r\n                day: day,\r\n                index: index,\r\n                firstDay: firstDay,\r\n                firstIndex: firstIndex,\r\n                lastDay: lastDay,\r\n                lastIndex: lastIndex\r\n            };\r\n            return this._compareCellsByDateAndIndex(daysAndIndexes)\r\n        })\r\n    }\r\n    _compareCellsByDateAndIndex(daysAndIndexes) {\r\n        var {\r\n            day: day,\r\n            index: index,\r\n            firstDay: firstDay,\r\n            firstIndex: firstIndex,\r\n            lastDay: lastDay,\r\n            lastIndex: lastIndex\r\n        } = daysAndIndexes;\r\n        if (firstDay === lastDay) {\r\n            var validFirstIndex = firstIndex;\r\n            var validLastIndex = lastIndex;\r\n            if (validFirstIndex > validLastIndex) {\r\n                [validFirstIndex, validLastIndex] = [validLastIndex, validFirstIndex]\r\n            }\r\n            return firstDay === day && index >= validFirstIndex && index <= validLastIndex\r\n        } else {\r\n            return day === firstDay && index >= firstIndex || day === lastDay && index <= lastIndex || firstDay < day && day < lastDay\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}