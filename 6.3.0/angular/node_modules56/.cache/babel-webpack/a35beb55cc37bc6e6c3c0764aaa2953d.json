{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/radio_group/radio_group.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nimport { deferRender } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport * as inkRipple from \"../widget/utils.ink_ripple\";\nimport registerComponent from \"../../core/component_registrator\";\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\nimport DataExpressionMixin from \"../editor/ui.data_expression\";\nimport Editor from \"../editor/editor\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar RADIO_BUTTON_CHECKED_CLASS = \"dx-radiobutton-checked\";\nvar RADIO_BUTTON_CLASS = \"dx-radiobutton\";\nvar RADIO_BUTTON_ICON_CHECKED_CLASS = \"dx-radiobutton-icon-checked\";\nvar RADIO_BUTTON_ICON_CLASS = \"dx-radiobutton-icon\";\nvar RADIO_BUTTON_ICON_DOT_CLASS = \"dx-radiobutton-icon-dot\";\nvar RADIO_GROUP_HORIZONTAL_CLASS = \"dx-radiogroup-horizontal\";\nvar RADIO_GROUP_VERTICAL_CLASS = \"dx-radiogroup-vertical\";\nvar RADIO_VALUE_CONTAINER_CLASS = \"dx-radio-value-container\";\nvar RADIO_GROUP_CLASS = \"dx-radiogroup\";\nvar RADIO_FEEDBACK_HIDE_TIMEOUT = 100;\n\nvar RadioCollection = /*#__PURE__*/function (_CollectionWidget) {\n  _inherits(RadioCollection, _CollectionWidget);\n\n  var _super = _createSuper(RadioCollection);\n\n  function RadioCollection() {\n    _classCallCheck(this, RadioCollection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadioCollection, [{\n    key: \"_focusTarget\",\n    value: function _focusTarget() {\n      return this.$element().parent();\n    }\n  }, {\n    key: \"_nullValueSelectionSupported\",\n    value: function _nullValueSelectionSupported() {\n      return true;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      var defaultOptions = _get(_getPrototypeOf(RadioCollection.prototype), \"_getDefaultOptions\", this).call(this);\n\n      return extend(defaultOptions, DataExpressionMixin._dataExpressionDefaultOptions(), {\n        _itemAttributes: {\n          role: \"radio\"\n        }\n      });\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var _this = this;\n\n      _get(_getPrototypeOf(RadioCollection.prototype), \"_initMarkup\", this).call(this);\n\n      deferRender(function () {\n        _this.itemElements().addClass(RADIO_BUTTON_CLASS);\n      });\n    }\n  }, {\n    key: \"_keyboardEventBindingTarget\",\n    value: function _keyboardEventBindingTarget() {\n      return this._focusTarget();\n    }\n  }, {\n    key: \"_postprocessRenderItem\",\n    value: function _postprocessRenderItem(args) {\n      var html = args.itemData.html,\n          itemElement = args.itemElement;\n\n      if (!html) {\n        var $radio = $(\"<div>\").addClass(RADIO_BUTTON_ICON_CLASS);\n        $(\"<div>\").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo($radio);\n        var $radioContainer = $(\"<div>\").append($radio).addClass(RADIO_VALUE_CONTAINER_CLASS);\n        $(itemElement).prepend($radioContainer);\n      }\n\n      _get(_getPrototypeOf(RadioCollection.prototype), \"_postprocessRenderItem\", this).call(this, args);\n    }\n  }, {\n    key: \"_processSelectableItem\",\n    value: function _processSelectableItem($itemElement, isSelected) {\n      _get(_getPrototypeOf(RadioCollection.prototype), \"_processSelectableItem\", this).call(this, $itemElement, isSelected);\n\n      $itemElement.toggleClass(RADIO_BUTTON_CHECKED_CLASS, isSelected).find(\".\".concat(RADIO_BUTTON_ICON_CLASS)).first().toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, isSelected);\n      this.setAria(\"checked\", isSelected, $itemElement);\n    }\n  }, {\n    key: \"_refreshContent\",\n    value: function _refreshContent() {\n      this._prepareContent();\n\n      this._renderContent();\n    }\n  }, {\n    key: \"_supportedKeys\",\n    value: function _supportedKeys() {\n      var parent = _get(_getPrototypeOf(RadioCollection.prototype), \"_supportedKeys\", this).call(this);\n\n      return extend({}, parent, {\n        enter: function enter(e) {\n          e.preventDefault();\n          return parent.enter.apply(this, arguments);\n        },\n        space: function space(e) {\n          e.preventDefault();\n          return parent.space.apply(this, arguments);\n        }\n      });\n    }\n  }, {\n    key: \"_itemElements\",\n    value: function _itemElements() {\n      return this._itemContainer().children(this._itemSelector());\n    }\n  }]);\n\n  return RadioCollection;\n}(CollectionWidget);\n\nvar RadioGroup = /*#__PURE__*/function (_Editor) {\n  _inherits(RadioGroup, _Editor);\n\n  var _super2 = _createSuper(RadioGroup);\n\n  function RadioGroup() {\n    _classCallCheck(this, RadioGroup);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"_clean\",\n    value: function _clean() {\n      delete this._inkRipple;\n\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_dataSourceOptions\",\n    value: function _dataSourceOptions() {\n      return {\n        paginate: false\n      };\n    }\n  }, {\n    key: \"_defaultOptionsRules\",\n    value: function _defaultOptionsRules() {\n      var defaultOptionsRules = _get(_getPrototypeOf(RadioGroup.prototype), \"_defaultOptionsRules\", this).call(this);\n\n      return defaultOptionsRules.concat([{\n        device: {\n          tablet: true\n        },\n        options: {\n          layout: \"horizontal\"\n        }\n      }, {\n        device: function device() {\n          return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n        },\n        options: {\n          focusStateEnabled: true\n        }\n      }]);\n    }\n  }, {\n    key: \"_fireContentReadyAction\",\n    value: function _fireContentReadyAction(force) {\n      force && _get(_getPrototypeOf(RadioGroup.prototype), \"_fireContentReadyAction\", this).call(this);\n    }\n  }, {\n    key: \"_focusTarget\",\n    value: function _focusTarget() {\n      return this.$element();\n    }\n  }, {\n    key: \"_getAriaTarget\",\n    value: function _getAriaTarget() {\n      return this.$element();\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      var defaultOptions = _get(_getPrototypeOf(RadioGroup.prototype), \"_getDefaultOptions\", this).call(this);\n\n      return extend(defaultOptions, extend(DataExpressionMixin._dataExpressionDefaultOptions(), {\n        hoverStateEnabled: true,\n        activeStateEnabled: true,\n        layout: \"vertical\",\n        useInkRipple: false\n      }));\n    }\n  }, {\n    key: \"_getItemValue\",\n    value: function _getItemValue(item) {\n      return this._valueGetter ? this._valueGetter(item) : item.text;\n    }\n  }, {\n    key: \"_getSubmitElement\",\n    value: function _getSubmitElement() {\n      return this._$submitElement;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_init\", this).call(this);\n\n      this._activeStateUnit = \".\".concat(RADIO_BUTTON_CLASS);\n      this._feedbackHideTimeout = RADIO_FEEDBACK_HIDE_TIMEOUT;\n\n      this._initDataExpressions();\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this.$element().addClass(RADIO_GROUP_CLASS);\n\n      this._renderSubmitElement();\n\n      this.setAria(\"role\", \"radiogroup\");\n\n      this._renderRadios();\n\n      this.option(\"useInkRipple\") && this._renderInkRipple();\n\n      this._renderLayout();\n\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_initMarkup\", this).call(this);\n    }\n  }, {\n    key: \"_itemClickHandler\",\n    value: function _itemClickHandler(_ref) {\n      var itemElement = _ref.itemElement,\n          event = _ref.event,\n          itemData = _ref.itemData;\n\n      if (this.itemElements().is(itemElement)) {\n        var newValue = this._getItemValue(itemData);\n\n        if (newValue !== this.option(\"value\")) {\n          this._saveValueChangeEvent(event);\n\n          this.option(\"value\", newValue);\n        }\n      }\n    }\n  }, {\n    key: \"_setSelection\",\n    value: function _setSelection(currentValue) {\n      this._setCollectionWidgetOption(\"selectedItemKeys\", [this._unwrappedValue(currentValue)]);\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name,\n          value = args.value;\n\n      this._dataExpressionOptionChanged(args);\n\n      switch (name) {\n        case \"useInkRipple\":\n        case \"dataSource\":\n          this._invalidate();\n\n          break;\n\n        case \"focusStateEnabled\":\n        case \"accessKey\":\n        case \"tabIndex\":\n          this._setCollectionWidgetOption(name, value);\n\n          break;\n\n        case \"disabled\":\n          _get(_getPrototypeOf(RadioGroup.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._setCollectionWidgetOption(name, value);\n\n          break;\n\n        case \"valueExpr\":\n          this._setCollectionWidgetOption(\"keyExpr\", this._getCollectionKeyExpr());\n\n          break;\n\n        case \"value\":\n          this._setSelection(value);\n\n          this._setSubmitValue(value);\n\n          _get(_getPrototypeOf(RadioGroup.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        case \"items\":\n          this._setSelection(this.option(\"value\"));\n\n          break;\n\n        case \"itemTemplate\":\n        case \"displayExpr\":\n          break;\n\n        case \"layout\":\n          this._renderLayout();\n\n          this._updateItemsSize();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(RadioGroup.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_render\", this).call(this);\n\n      this._updateItemsSize();\n    }\n  }, {\n    key: \"_renderInkRipple\",\n    value: function _renderInkRipple() {\n      this._inkRipple = inkRipple.render({\n        waveSizeCoefficient: 3.3,\n        useHoldAnimation: false,\n        isCentered: true\n      });\n    }\n  }, {\n    key: \"_renderLayout\",\n    value: function _renderLayout() {\n      var layout = this.option(\"layout\");\n      var $element = this.$element();\n      $element.toggleClass(RADIO_GROUP_VERTICAL_CLASS, \"vertical\" === layout);\n      $element.toggleClass(RADIO_GROUP_HORIZONTAL_CLASS, \"horizontal\" === layout);\n    }\n  }, {\n    key: \"_renderRadios\",\n    value: function _renderRadios() {\n      var _this2 = this;\n\n      this._areRadiosCreated = new Deferred();\n      var $radios = $(\"<div>\").appendTo(this.$element());\n\n      var _this$option = this.option(),\n          value = _this$option.value,\n          displayExpr = _this$option.displayExpr,\n          accessKey = _this$option.accessKey,\n          focusStateEnabled = _this$option.focusStateEnabled,\n          itemTemplate = _this$option.itemTemplate,\n          tabIndex = _this$option.tabIndex,\n          valueExpr = _this$option.valueExpr;\n\n      var isNullSelectable = \"this\" !== valueExpr;\n\n      this._createComponent($radios, RadioCollection, {\n        onInitialized: function onInitialized(_ref2) {\n          var component = _ref2.component;\n          _this2._radios = component;\n        },\n        onContentReady: function onContentReady(e) {\n          _this2._fireContentReadyAction(true);\n        },\n        onItemClick: this._itemClickHandler.bind(this),\n        displayExpr: displayExpr,\n        accessKey: accessKey,\n        dataSource: this._dataSource,\n        focusStateEnabled: focusStateEnabled,\n        itemTemplate: itemTemplate,\n        keyExpr: this._getCollectionKeyExpr(),\n        noDataText: \"\",\n        scrollingEnabled: false,\n        selectionByClick: false,\n        selectionMode: \"single\",\n        selectedItemKeys: isNullSelectable || isDefined(value) ? [value] : [],\n        tabIndex: tabIndex\n      });\n\n      this._areRadiosCreated.resolve();\n    }\n  }, {\n    key: \"_renderSubmitElement\",\n    value: function _renderSubmitElement() {\n      this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n\n      this._setSubmitValue();\n    }\n  }, {\n    key: \"_setOptionsByReference\",\n    value: function _setOptionsByReference() {\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_setOptionsByReference\", this).call(this);\n\n      extend(this._optionsByReference, {\n        value: true\n      });\n    }\n  }, {\n    key: \"_setSubmitValue\",\n    value: function _setSubmitValue(value) {\n      var _value;\n\n      value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\n      var submitValue = \"this\" === this.option(\"valueExpr\") ? this._displayGetter(value) : value;\n\n      this._$submitElement.val(submitValue);\n    }\n  }, {\n    key: \"_setCollectionWidgetOption\",\n    value: function _setCollectionWidgetOption() {\n      this._areRadiosCreated.done(this._setWidgetOption.bind(this, \"_radios\", arguments));\n    }\n  }, {\n    key: \"_toggleActiveState\",\n    value: function _toggleActiveState($element, value, e) {\n      _get(_getPrototypeOf(RadioGroup.prototype), \"_toggleActiveState\", this).call(this, $element, value, e);\n\n      if (this._inkRipple) {\n        var event = {\n          element: $element.find(\".\".concat(RADIO_BUTTON_ICON_CLASS)),\n          event: e\n        };\n        value ? this._inkRipple.showWave(event) : this._inkRipple.hideWave(event);\n      }\n    }\n  }, {\n    key: \"_updateItemsSize\",\n    value: function _updateItemsSize() {\n      if (\"horizontal\" === this.option(\"layout\")) {\n        this.itemElements().css(\"height\", \"auto\");\n      } else {\n        var itemsCount = this.option(\"items\").length;\n        this.itemElements().css(\"height\", 100 / itemsCount + \"%\");\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this$_radios;\n\n      null === (_this$_radios = this._radios) || void 0 === _this$_radios ? void 0 : _this$_radios.focus();\n    }\n  }, {\n    key: \"itemElements\",\n    value: function itemElements() {\n      var _this$_radios2;\n\n      return null === (_this$_radios2 = this._radios) || void 0 === _this$_radios2 ? void 0 : _this$_radios2.itemElements();\n    }\n  }]);\n\n  return RadioGroup;\n}(Editor);\n\nRadioGroup.include(DataExpressionMixin);\nregisterComponent(\"dxRadioGroup\", RadioGroup);\nexport default RadioGroup;","map":null,"metadata":{},"sourceType":"module"}