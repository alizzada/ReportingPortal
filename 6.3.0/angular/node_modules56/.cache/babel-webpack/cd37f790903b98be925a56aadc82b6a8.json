{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/linear_indicators.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { BaseIndicator, BaseTextCloudMarker, BaseRangeBar } from \"./base_indicators\";\nvar _Number = Number;\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar SimpleIndicator = BaseIndicator.inherit({\n  _move: function _move() {\n    var delta = this._actualPosition - this._zeroPosition;\n\n    this._rootElement.move(this.vertical ? 0 : delta, this.vertical ? delta : 0);\n\n    this._trackerElement && this._trackerElement.move(this.vertical ? 0 : delta, this.vertical ? delta : 0);\n  },\n  _isEnabled: function _isEnabled() {\n    this.vertical = this._options.vertical;\n    return this._options.length > 0 && this._options.width > 0;\n  },\n  _isVisible: function _isVisible() {\n    return true;\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    var options = this._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var width = options.width / 2;\n    var length = options.length / 2;\n    var p = this._zeroPosition;\n    width > 10 || (width = 10);\n    length > 10 || (length = 10);\n\n    if (this.vertical) {\n      x1 = options.x - length;\n      x2 = options.x + length;\n      y1 = p + width;\n      y2 = p - width;\n    } else {\n      x1 = p - width;\n      x2 = p + width;\n      y1 = options.y + length;\n      y2 = options.y - length;\n    }\n\n    return {\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    };\n  },\n  _render: function _render() {\n    this._zeroPosition = this._translator.getCodomainStart();\n  },\n  _clear: function _clear() {\n    delete this._element;\n  },\n  measure: function measure(layout) {\n    var p = this.vertical ? layout.x : layout.y;\n    return {\n      min: p - this._options.length / 2,\n      max: p + this._options.length / 2\n    };\n  },\n  getTooltipParameters: function getTooltipParameters() {\n    var options = this._options;\n    var p = this._actualPosition;\n    var parameters = {\n      x: p,\n      y: p,\n      value: this._currentValue,\n      color: options.color,\n      offset: options.width / 2\n    };\n    this.vertical ? parameters.x = options.x : parameters.y = options.y;\n    return parameters;\n  }\n});\nvar rectangle = SimpleIndicator.inherit({\n  _render: function _render() {\n    var options = this._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    this.callBase();\n    var p = this._zeroPosition;\n\n    if (this.vertical) {\n      x1 = options.x - options.length / 2;\n      x2 = options.x + options.length / 2;\n      y1 = p + options.width / 2;\n      y2 = p - options.width / 2;\n    } else {\n      x1 = p - options.width / 2;\n      x2 = p + options.width / 2;\n      y1 = options.y + options.length / 2;\n      y2 = options.y - options.length / 2;\n    }\n\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._element.attr({\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    });\n  }\n});\nvar rhombus = SimpleIndicator.inherit({\n  _render: function _render() {\n    var options = this._options;\n    var x;\n    var y;\n    var dx;\n    var dy;\n    this.callBase();\n\n    if (this.vertical) {\n      x = options.x;\n      y = this._zeroPosition;\n      dx = options.length / 2 || 0;\n      dy = options.width / 2 || 0;\n    } else {\n      x = this._zeroPosition;\n      y = options.y;\n      dx = options.width / 2 || 0;\n      dy = options.length / 2 || 0;\n    }\n\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._element.attr({\n      points: [x - dx, y, x, y - dy, x + dx, y, x, y + dy]\n    });\n  }\n});\nvar circle = SimpleIndicator.inherit({\n  _render: function _render() {\n    var options = this._options;\n    var x;\n    var y;\n    this.callBase();\n\n    if (this.vertical) {\n      x = options.x;\n      y = this._zeroPosition;\n    } else {\n      x = this._zeroPosition;\n      y = options.y;\n    }\n\n    var r = options.length / 2 || 0;\n    this._element = this._element || this._renderer.circle().append(this._rootElement);\n\n    this._element.attr({\n      cx: x,\n      cy: y,\n      r: r\n    });\n  }\n});\nvar triangleMarker = SimpleIndicator.inherit({\n  _isEnabled: function _isEnabled() {\n    this.vertical = this._options.vertical;\n    this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\n    return this._options.length > 0 && this._options.width > 0;\n  },\n  _isVisible: function _isVisible() {\n    return true;\n  },\n  _render: function _render() {\n    var options = this._options;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var settings = {\n      stroke: \"none\",\n      \"stroke-width\": 0,\n      \"stroke-linecap\": \"square\"\n    };\n    this.callBase();\n\n    if (this.vertical) {\n      x1 = options.x;\n      y1 = this._zeroPosition;\n      x2 = x1 + _Number(this._inverted ? options.length : -options.length);\n      settings.points = [x1, y1, x2, y1 - options.width / 2, x2, y1 + options.width / 2];\n    } else {\n      y1 = options.y;\n      x1 = this._zeroPosition;\n      y2 = y1 + _Number(this._inverted ? options.length : -options.length);\n      settings.points = [x1, y1, x1 - options.width / 2, y2, x1 + options.width / 2, y2];\n    }\n\n    if (options.space > 0) {\n      settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\n      settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\";\n    }\n\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._element.attr(settings).sharp();\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    var options = this._options;\n    var width = options.width / 2;\n\n    var length = _Number(options.length);\n\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var result;\n    width > 10 || (width = 10);\n    length > 20 || (length = 20);\n\n    if (this.vertical) {\n      x1 = x2 = options.x;\n      x2 = x1 + (this._inverted ? length : -length);\n      y1 = this._zeroPosition + width;\n      y2 = this._zeroPosition - width;\n      result = [x1, y1, x2, y1, x2, y2, x1, y2];\n    } else {\n      y1 = options.y;\n      y2 = y1 + (this._inverted ? length : -length);\n      x1 = this._zeroPosition - width;\n      x2 = this._zeroPosition + width;\n      result = [x1, y1, x1, y2, x2, y2, x2, y1];\n    }\n\n    return {\n      points: result\n    };\n  },\n  measure: function measure(layout) {\n    var length = _Number(this._options.length);\n\n    var minBound;\n    var maxBound;\n\n    if (this.vertical) {\n      minBound = maxBound = layout.x;\n\n      if (this._inverted) {\n        maxBound = minBound + length;\n      } else {\n        minBound = maxBound - length;\n      }\n    } else {\n      minBound = maxBound = layout.y;\n\n      if (this._inverted) {\n        maxBound = minBound + length;\n      } else {\n        minBound = maxBound - length;\n      }\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: this._options.width / 2\n    };\n  },\n  getTooltipParameters: function getTooltipParameters() {\n    var options = this._options;\n    var s = (this._inverted ? options.length : -options.length) / 2;\n    var parameters = this.callBase();\n    this.vertical ? parameters.x += s : parameters.y += s;\n    parameters.offset = options.length / 2;\n    return parameters;\n  }\n});\nvar textCloud = BaseTextCloudMarker.inherit({\n  _isEnabled: function _isEnabled() {\n    this.vertical = this._options.vertical;\n    this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\n    return true;\n  },\n  _isVisible: function _isVisible() {\n    return true;\n  },\n  _getTextCloudOptions: function _getTextCloudOptions() {\n    var x = this._actualPosition;\n    var y = this._actualPosition;\n    var type;\n\n    if (this.vertical) {\n      x = this._options.x;\n      type = this._inverted ? \"top-left\" : \"top-right\";\n    } else {\n      y = this._options.y;\n      type = this._inverted ? \"right-top\" : \"right-bottom\";\n    }\n\n    return {\n      x: x,\n      y: y,\n      type: type\n    };\n  },\n  measure: function measure(layout) {\n    var minBound;\n    var maxBound;\n    var arrowLength = _Number(this._options.arrowLength) || 0;\n\n    this._measureText();\n\n    if (this.vertical) {\n      if (this._inverted) {\n        minBound = layout.x;\n        maxBound = layout.x + arrowLength + this._textFullWidth;\n      } else {\n        minBound = layout.x - arrowLength - this._textFullWidth;\n        maxBound = layout.x;\n      }\n    } else if (this._inverted) {\n      minBound = layout.y;\n      maxBound = layout.y + arrowLength + this._textFullHeight;\n    } else {\n      minBound = layout.y - arrowLength - this._textFullHeight;\n      maxBound = layout.y;\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: 0\n    };\n  },\n  _correctCloudType: function _correctCloudType(type, _ref, _ref2) {\n    var x = _ref.x,\n        y = _ref.y;\n    var width = _ref2.width,\n        height = _ref2.height;\n\n    if (\"right-top\" === type || \"right-bottom\" === type) {\n      if (x - width < this._translator.getCodomainStart()) {\n        type = \"left-\".concat(type.split(\"-\")[1]);\n      }\n    } else if (\"top-left\" === type || \"top-right\" === type) {\n      if (y + height > this._translator.getCodomainStart()) {\n        type = \"bottom-\".concat(type.split(\"-\")[1]);\n      }\n    }\n\n    return type;\n  }\n});\nvar rangeBar = BaseRangeBar.inherit({\n  _isEnabled: function _isEnabled() {\n    this.vertical = this._options.vertical;\n    this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\n    return this._options.size > 0;\n  },\n  _isVisible: function _isVisible() {\n    return true;\n  },\n  _createBarItem: function _createBarItem() {\n    return this._renderer.path([], \"area\").append(this._rootElement);\n  },\n  _createTracker: function _createTracker() {\n    return this._renderer.path([], \"area\");\n  },\n  _setBarSides: function _setBarSides() {\n    var options = this._options;\n\n    var size = _Number(options.size);\n\n    var minSide;\n    var maxSide;\n\n    if (this.vertical) {\n      if (this._inverted) {\n        minSide = options.x;\n        maxSide = options.x + size;\n      } else {\n        minSide = options.x - size;\n        maxSide = options.x;\n      }\n    } else if (this._inverted) {\n      minSide = options.y;\n      maxSide = options.y + size;\n    } else {\n      minSide = options.y - size;\n      maxSide = options.y;\n    }\n\n    this._minSide = minSide;\n    this._maxSide = maxSide;\n    this._minBound = minSide;\n    this._maxBound = maxSide;\n  },\n  _getSpace: function _getSpace() {\n    var options = this._options;\n    return options.space > 0 ? _Number(options.space) : 0;\n  },\n  _isTextVisible: function _isTextVisible() {\n    var textOptions = this._options.text || {};\n    return textOptions.indent > 0 || textOptions.indent < 0;\n  },\n  _getTextAlign: function _getTextAlign() {\n    return this.vertical ? this._options.text.indent > 0 ? \"left\" : \"right\" : \"center\";\n  },\n  _setTextItemsSides: function _setTextItemsSides() {\n    var indent = _Number(this._options.text.indent);\n\n    if (indent > 0) {\n      this._lineStart = this._maxSide;\n      this._lineEnd = this._maxSide + indent;\n      this._textPosition = this._lineEnd + (this.vertical ? 2 : this._textHeight / 2);\n      this._maxBound = this._textPosition + (this.vertical ? this._textWidth : this._textHeight / 2);\n    } else if (indent < 0) {\n      this._lineStart = this._minSide;\n      this._lineEnd = this._minSide + indent;\n      this._textPosition = this._lineEnd - (this.vertical ? 2 : this._textHeight / 2);\n      this._minBound = this._textPosition - (this.vertical ? this._textWidth : this._textHeight / 2);\n    }\n  },\n  _getPositions: function _getPositions() {\n    var startPosition = this._startPosition;\n    var endPosition = this._endPosition;\n    var space = this._space;\n    var basePosition = this._basePosition;\n    var actualPosition = this._actualPosition;\n    var mainPosition1;\n    var mainPosition2;\n    var backPosition1;\n    var backPosition2;\n\n    if (startPosition < endPosition) {\n      if (basePosition < actualPosition) {\n        mainPosition1 = basePosition;\n        mainPosition2 = actualPosition;\n      } else {\n        mainPosition1 = actualPosition;\n        mainPosition2 = basePosition;\n      }\n\n      backPosition1 = mainPosition1 - space;\n      backPosition2 = mainPosition2 + space;\n    } else {\n      if (basePosition > actualPosition) {\n        mainPosition1 = basePosition;\n        mainPosition2 = actualPosition;\n      } else {\n        mainPosition1 = actualPosition;\n        mainPosition2 = basePosition;\n      }\n\n      backPosition1 = mainPosition1 + space;\n      backPosition2 = mainPosition2 - space;\n    }\n\n    return {\n      start: startPosition,\n      end: endPosition,\n      main1: mainPosition1,\n      main2: mainPosition2,\n      back1: backPosition1,\n      back2: backPosition2\n    };\n  },\n  _buildItemSettings: function _buildItemSettings(from, to) {\n    var side1 = this._minSide;\n    var side2 = this._maxSide;\n    var points = this.vertical ? [side1, from, side1, to, side2, to, side2, from] : [from, side1, from, side2, to, side2, to, side1];\n    return {\n      points: points\n    };\n  },\n  _updateTextPosition: function _updateTextPosition() {\n    this._text.attr(this.vertical ? {\n      x: this._textPosition,\n      y: this._actualPosition + this._textVerticalOffset\n    } : {\n      x: this._actualPosition,\n      y: this._textPosition + this._textVerticalOffset\n    });\n  },\n  _updateLinePosition: function _updateLinePosition() {\n    var actualPosition = this._actualPosition;\n    var side1;\n    var side2;\n    var points;\n\n    if (this.vertical) {\n      if (this._basePosition >= actualPosition) {\n        side1 = actualPosition;\n        side2 = actualPosition + 2;\n      } else {\n        side1 = actualPosition - 2;\n        side2 = actualPosition;\n      }\n\n      points = [this._lineStart, side1, this._lineStart, side2, this._lineEnd, side2, this._lineEnd, side1];\n    } else {\n      if (this._basePosition <= actualPosition) {\n        side1 = actualPosition - 2;\n        side2 = actualPosition;\n      } else {\n        side1 = actualPosition;\n        side2 = actualPosition + 2;\n      }\n\n      points = [side1, this._lineStart, side1, this._lineEnd, side2, this._lineEnd, side2, this._lineStart];\n    }\n\n    this._line.attr({\n      points: points\n    }).sharp();\n  },\n  _getTooltipPosition: function _getTooltipPosition() {\n    var crossCenter = (this._minSide + this._maxSide) / 2;\n    var alongCenter = (this._basePosition + this._actualPosition) / 2;\n    return this.vertical ? {\n      x: crossCenter,\n      y: alongCenter\n    } : {\n      x: alongCenter,\n      y: crossCenter\n    };\n  },\n  measure: function measure(layout) {\n    var size = _Number(this._options.size);\n\n    var textIndent = _Number(this._options.text.indent);\n\n    var minBound;\n    var maxBound;\n    var indent;\n\n    this._measureText();\n\n    if (this.vertical) {\n      minBound = maxBound = layout.x;\n\n      if (this._inverted) {\n        maxBound += size;\n      } else {\n        minBound -= size;\n      }\n\n      if (this._hasText) {\n        indent = this._textHeight / 2;\n\n        if (textIndent > 0) {\n          maxBound += textIndent + this._textWidth;\n        }\n\n        if (textIndent < 0) {\n          minBound += textIndent - this._textWidth;\n        }\n      }\n    } else {\n      minBound = maxBound = layout.y;\n\n      if (this._inverted) {\n        maxBound += size;\n      } else {\n        minBound -= size;\n      }\n\n      if (this._hasText) {\n        indent = this._textWidth / 2;\n\n        if (textIndent > 0) {\n          maxBound += textIndent + this._textHeight;\n        }\n\n        if (textIndent < 0) {\n          minBound += textIndent - this._textHeight;\n        }\n      }\n    }\n\n    return {\n      min: minBound,\n      max: maxBound,\n      indent: indent\n    };\n  }\n});\nexport { rangeBar as _default, rectangle, rhombus, circle, triangleMarker as trianglemarker, textCloud as textcloud, rangeBar as rangebar };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/gauges/linear_indicators.js"],"names":["BaseIndicator","BaseTextCloudMarker","BaseRangeBar","_Number","Number","normalizeEnum","_normalizeEnum","SimpleIndicator","inherit","_move","delta","_actualPosition","_zeroPosition","_rootElement","move","vertical","_trackerElement","_isEnabled","_options","length","width","_isVisible","_getTrackerSettings","options","x1","x2","y1","y2","p","x","y","points","_render","_translator","getCodomainStart","_clear","_element","measure","layout","min","max","getTooltipParameters","parameters","value","_currentValue","color","offset","rectangle","callBase","_renderer","path","append","attr","rhombus","dx","dy","circle","r","cx","cy","triangleMarker","_inverted","horizontalOrientation","verticalOrientation","settings","stroke","space","Math","containerBackgroundColor","sharp","result","minBound","maxBound","indent","s","textCloud","_getTextCloudOptions","type","arrowLength","_measureText","_textFullWidth","_textFullHeight","_correctCloudType","_ref","_ref2","height","concat","split","rangeBar","size","_createBarItem","_createTracker","_setBarSides","minSide","maxSide","_minSide","_maxSide","_minBound","_maxBound","_getSpace","_isTextVisible","textOptions","text","_getTextAlign","_setTextItemsSides","_lineStart","_lineEnd","_textPosition","_textHeight","_textWidth","_getPositions","startPosition","_startPosition","endPosition","_endPosition","_space","basePosition","_basePosition","actualPosition","mainPosition1","mainPosition2","backPosition1","backPosition2","start","end","main1","main2","back1","back2","_buildItemSettings","from","to","side1","side2","_updateTextPosition","_text","_textVerticalOffset","_updateLinePosition","_line","_getTooltipPosition","crossCenter","alongCenter","textIndent","_hasText","_default","trianglemarker","textcloud","rangebar"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/linear_indicators.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    BaseIndicator,\r\n    BaseTextCloudMarker,\r\n    BaseRangeBar\r\n} from \"./base_indicators\";\r\nvar _Number = Number;\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nvar SimpleIndicator = BaseIndicator.inherit({\r\n    _move: function() {\r\n        var delta = this._actualPosition - this._zeroPosition;\r\n        this._rootElement.move(this.vertical ? 0 : delta, this.vertical ? delta : 0);\r\n        this._trackerElement && this._trackerElement.move(this.vertical ? 0 : delta, this.vertical ? delta : 0)\r\n    },\r\n    _isEnabled: function() {\r\n        this.vertical = this._options.vertical;\r\n        return this._options.length > 0 && this._options.width > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var options = this._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var width = options.width / 2;\r\n        var length = options.length / 2;\r\n        var p = this._zeroPosition;\r\n        width > 10 || (width = 10);\r\n        length > 10 || (length = 10);\r\n        if (this.vertical) {\r\n            x1 = options.x - length;\r\n            x2 = options.x + length;\r\n            y1 = p + width;\r\n            y2 = p - width\r\n        } else {\r\n            x1 = p - width;\r\n            x2 = p + width;\r\n            y1 = options.y + length;\r\n            y2 = options.y - length\r\n        }\r\n        return {\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        }\r\n    },\r\n    _render: function() {\r\n        this._zeroPosition = this._translator.getCodomainStart()\r\n    },\r\n    _clear: function() {\r\n        delete this._element\r\n    },\r\n    measure: function(layout) {\r\n        var p = this.vertical ? layout.x : layout.y;\r\n        return {\r\n            min: p - this._options.length / 2,\r\n            max: p + this._options.length / 2\r\n        }\r\n    },\r\n    getTooltipParameters: function() {\r\n        var options = this._options;\r\n        var p = this._actualPosition;\r\n        var parameters = {\r\n            x: p,\r\n            y: p,\r\n            value: this._currentValue,\r\n            color: options.color,\r\n            offset: options.width / 2\r\n        };\r\n        this.vertical ? parameters.x = options.x : parameters.y = options.y;\r\n        return parameters\r\n    }\r\n});\r\nvar rectangle = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var options = this._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        this.callBase();\r\n        var p = this._zeroPosition;\r\n        if (this.vertical) {\r\n            x1 = options.x - options.length / 2;\r\n            x2 = options.x + options.length / 2;\r\n            y1 = p + options.width / 2;\r\n            y2 = p - options.width / 2\r\n        } else {\r\n            x1 = p - options.width / 2;\r\n            x2 = p + options.width / 2;\r\n            y1 = options.y + options.length / 2;\r\n            y2 = options.y - options.length / 2\r\n        }\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._element.attr({\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        })\r\n    }\r\n});\r\nvar rhombus = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var options = this._options;\r\n        var x;\r\n        var y;\r\n        var dx;\r\n        var dy;\r\n        this.callBase();\r\n        if (this.vertical) {\r\n            x = options.x;\r\n            y = this._zeroPosition;\r\n            dx = options.length / 2 || 0;\r\n            dy = options.width / 2 || 0\r\n        } else {\r\n            x = this._zeroPosition;\r\n            y = options.y;\r\n            dx = options.width / 2 || 0;\r\n            dy = options.length / 2 || 0\r\n        }\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._element.attr({\r\n            points: [x - dx, y, x, y - dy, x + dx, y, x, y + dy]\r\n        })\r\n    }\r\n});\r\nvar circle = SimpleIndicator.inherit({\r\n    _render: function() {\r\n        var options = this._options;\r\n        var x;\r\n        var y;\r\n        this.callBase();\r\n        if (this.vertical) {\r\n            x = options.x;\r\n            y = this._zeroPosition\r\n        } else {\r\n            x = this._zeroPosition;\r\n            y = options.y\r\n        }\r\n        var r = options.length / 2 || 0;\r\n        this._element = this._element || this._renderer.circle().append(this._rootElement);\r\n        this._element.attr({\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        })\r\n    }\r\n});\r\nvar triangleMarker = SimpleIndicator.inherit({\r\n    _isEnabled: function() {\r\n        this.vertical = this._options.vertical;\r\n        this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\r\n        return this._options.length > 0 && this._options.width > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _render: function() {\r\n        var options = this._options;\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var settings = {\r\n            stroke: \"none\",\r\n            \"stroke-width\": 0,\r\n            \"stroke-linecap\": \"square\"\r\n        };\r\n        this.callBase();\r\n        if (this.vertical) {\r\n            x1 = options.x;\r\n            y1 = this._zeroPosition;\r\n            x2 = x1 + _Number(this._inverted ? options.length : -options.length);\r\n            settings.points = [x1, y1, x2, y1 - options.width / 2, x2, y1 + options.width / 2]\r\n        } else {\r\n            y1 = options.y;\r\n            x1 = this._zeroPosition;\r\n            y2 = y1 + _Number(this._inverted ? options.length : -options.length);\r\n            settings.points = [x1, y1, x1 - options.width / 2, y2, x1 + options.width / 2, y2]\r\n        }\r\n        if (options.space > 0) {\r\n            settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\r\n            settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\"\r\n        }\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._element.attr(settings).sharp()\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var options = this._options;\r\n        var width = options.width / 2;\r\n        var length = _Number(options.length);\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var result;\r\n        width > 10 || (width = 10);\r\n        length > 20 || (length = 20);\r\n        if (this.vertical) {\r\n            x1 = x2 = options.x;\r\n            x2 = x1 + (this._inverted ? length : -length);\r\n            y1 = this._zeroPosition + width;\r\n            y2 = this._zeroPosition - width;\r\n            result = [x1, y1, x2, y1, x2, y2, x1, y2]\r\n        } else {\r\n            y1 = options.y;\r\n            y2 = y1 + (this._inverted ? length : -length);\r\n            x1 = this._zeroPosition - width;\r\n            x2 = this._zeroPosition + width;\r\n            result = [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        }\r\n        return {\r\n            points: result\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var length = _Number(this._options.length);\r\n        var minBound;\r\n        var maxBound;\r\n        if (this.vertical) {\r\n            minBound = maxBound = layout.x;\r\n            if (this._inverted) {\r\n                maxBound = minBound + length\r\n            } else {\r\n                minBound = maxBound - length\r\n            }\r\n        } else {\r\n            minBound = maxBound = layout.y;\r\n            if (this._inverted) {\r\n                maxBound = minBound + length\r\n            } else {\r\n                minBound = maxBound - length\r\n            }\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: this._options.width / 2\r\n        }\r\n    },\r\n    getTooltipParameters: function() {\r\n        var options = this._options;\r\n        var s = (this._inverted ? options.length : -options.length) / 2;\r\n        var parameters = this.callBase();\r\n        this.vertical ? parameters.x += s : parameters.y += s;\r\n        parameters.offset = options.length / 2;\r\n        return parameters\r\n    }\r\n});\r\nvar textCloud = BaseTextCloudMarker.inherit({\r\n    _isEnabled: function() {\r\n        this.vertical = this._options.vertical;\r\n        this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\r\n        return true\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _getTextCloudOptions: function() {\r\n        var x = this._actualPosition;\r\n        var y = this._actualPosition;\r\n        var type;\r\n        if (this.vertical) {\r\n            x = this._options.x;\r\n            type = this._inverted ? \"top-left\" : \"top-right\"\r\n        } else {\r\n            y = this._options.y;\r\n            type = this._inverted ? \"right-top\" : \"right-bottom\"\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            type: type\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var minBound;\r\n        var maxBound;\r\n        var arrowLength = _Number(this._options.arrowLength) || 0;\r\n        this._measureText();\r\n        if (this.vertical) {\r\n            if (this._inverted) {\r\n                minBound = layout.x;\r\n                maxBound = layout.x + arrowLength + this._textFullWidth\r\n            } else {\r\n                minBound = layout.x - arrowLength - this._textFullWidth;\r\n                maxBound = layout.x\r\n            }\r\n        } else if (this._inverted) {\r\n            minBound = layout.y;\r\n            maxBound = layout.y + arrowLength + this._textFullHeight\r\n        } else {\r\n            minBound = layout.y - arrowLength - this._textFullHeight;\r\n            maxBound = layout.y\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: 0\r\n        }\r\n    },\r\n    _correctCloudType(type, _ref, _ref2) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = _ref;\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = _ref2;\r\n        if (\"right-top\" === type || \"right-bottom\" === type) {\r\n            if (x - width < this._translator.getCodomainStart()) {\r\n                type = \"left-\".concat(type.split(\"-\")[1])\r\n            }\r\n        } else if (\"top-left\" === type || \"top-right\" === type) {\r\n            if (y + height > this._translator.getCodomainStart()) {\r\n                type = \"bottom-\".concat(type.split(\"-\")[1])\r\n            }\r\n        }\r\n        return type\r\n    }\r\n});\r\nvar rangeBar = BaseRangeBar.inherit({\r\n    _isEnabled: function() {\r\n        this.vertical = this._options.vertical;\r\n        this._inverted = this.vertical ? \"right\" === _normalizeEnum(this._options.horizontalOrientation) : \"bottom\" === _normalizeEnum(this._options.verticalOrientation);\r\n        return this._options.size > 0\r\n    },\r\n    _isVisible: function() {\r\n        return true\r\n    },\r\n    _createBarItem: function() {\r\n        return this._renderer.path([], \"area\").append(this._rootElement)\r\n    },\r\n    _createTracker: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _setBarSides: function() {\r\n        var options = this._options;\r\n        var size = _Number(options.size);\r\n        var minSide;\r\n        var maxSide;\r\n        if (this.vertical) {\r\n            if (this._inverted) {\r\n                minSide = options.x;\r\n                maxSide = options.x + size\r\n            } else {\r\n                minSide = options.x - size;\r\n                maxSide = options.x\r\n            }\r\n        } else if (this._inverted) {\r\n            minSide = options.y;\r\n            maxSide = options.y + size\r\n        } else {\r\n            minSide = options.y - size;\r\n            maxSide = options.y\r\n        }\r\n        this._minSide = minSide;\r\n        this._maxSide = maxSide;\r\n        this._minBound = minSide;\r\n        this._maxBound = maxSide\r\n    },\r\n    _getSpace: function() {\r\n        var options = this._options;\r\n        return options.space > 0 ? _Number(options.space) : 0\r\n    },\r\n    _isTextVisible: function() {\r\n        var textOptions = this._options.text || {};\r\n        return textOptions.indent > 0 || textOptions.indent < 0\r\n    },\r\n    _getTextAlign: function() {\r\n        return this.vertical ? this._options.text.indent > 0 ? \"left\" : \"right\" : \"center\"\r\n    },\r\n    _setTextItemsSides: function() {\r\n        var indent = _Number(this._options.text.indent);\r\n        if (indent > 0) {\r\n            this._lineStart = this._maxSide;\r\n            this._lineEnd = this._maxSide + indent;\r\n            this._textPosition = this._lineEnd + (this.vertical ? 2 : this._textHeight / 2);\r\n            this._maxBound = this._textPosition + (this.vertical ? this._textWidth : this._textHeight / 2)\r\n        } else if (indent < 0) {\r\n            this._lineStart = this._minSide;\r\n            this._lineEnd = this._minSide + indent;\r\n            this._textPosition = this._lineEnd - (this.vertical ? 2 : this._textHeight / 2);\r\n            this._minBound = this._textPosition - (this.vertical ? this._textWidth : this._textHeight / 2)\r\n        }\r\n    },\r\n    _getPositions: function() {\r\n        var startPosition = this._startPosition;\r\n        var endPosition = this._endPosition;\r\n        var space = this._space;\r\n        var basePosition = this._basePosition;\r\n        var actualPosition = this._actualPosition;\r\n        var mainPosition1;\r\n        var mainPosition2;\r\n        var backPosition1;\r\n        var backPosition2;\r\n        if (startPosition < endPosition) {\r\n            if (basePosition < actualPosition) {\r\n                mainPosition1 = basePosition;\r\n                mainPosition2 = actualPosition\r\n            } else {\r\n                mainPosition1 = actualPosition;\r\n                mainPosition2 = basePosition\r\n            }\r\n            backPosition1 = mainPosition1 - space;\r\n            backPosition2 = mainPosition2 + space\r\n        } else {\r\n            if (basePosition > actualPosition) {\r\n                mainPosition1 = basePosition;\r\n                mainPosition2 = actualPosition\r\n            } else {\r\n                mainPosition1 = actualPosition;\r\n                mainPosition2 = basePosition\r\n            }\r\n            backPosition1 = mainPosition1 + space;\r\n            backPosition2 = mainPosition2 - space\r\n        }\r\n        return {\r\n            start: startPosition,\r\n            end: endPosition,\r\n            main1: mainPosition1,\r\n            main2: mainPosition2,\r\n            back1: backPosition1,\r\n            back2: backPosition2\r\n        }\r\n    },\r\n    _buildItemSettings: function(from, to) {\r\n        var side1 = this._minSide;\r\n        var side2 = this._maxSide;\r\n        var points = this.vertical ? [side1, from, side1, to, side2, to, side2, from] : [from, side1, from, side2, to, side2, to, side1];\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _updateTextPosition: function() {\r\n        this._text.attr(this.vertical ? {\r\n            x: this._textPosition,\r\n            y: this._actualPosition + this._textVerticalOffset\r\n        } : {\r\n            x: this._actualPosition,\r\n            y: this._textPosition + this._textVerticalOffset\r\n        })\r\n    },\r\n    _updateLinePosition: function() {\r\n        var actualPosition = this._actualPosition;\r\n        var side1;\r\n        var side2;\r\n        var points;\r\n        if (this.vertical) {\r\n            if (this._basePosition >= actualPosition) {\r\n                side1 = actualPosition;\r\n                side2 = actualPosition + 2\r\n            } else {\r\n                side1 = actualPosition - 2;\r\n                side2 = actualPosition\r\n            }\r\n            points = [this._lineStart, side1, this._lineStart, side2, this._lineEnd, side2, this._lineEnd, side1]\r\n        } else {\r\n            if (this._basePosition <= actualPosition) {\r\n                side1 = actualPosition - 2;\r\n                side2 = actualPosition\r\n            } else {\r\n                side1 = actualPosition;\r\n                side2 = actualPosition + 2\r\n            }\r\n            points = [side1, this._lineStart, side1, this._lineEnd, side2, this._lineEnd, side2, this._lineStart]\r\n        }\r\n        this._line.attr({\r\n            points: points\r\n        }).sharp()\r\n    },\r\n    _getTooltipPosition: function() {\r\n        var crossCenter = (this._minSide + this._maxSide) / 2;\r\n        var alongCenter = (this._basePosition + this._actualPosition) / 2;\r\n        return this.vertical ? {\r\n            x: crossCenter,\r\n            y: alongCenter\r\n        } : {\r\n            x: alongCenter,\r\n            y: crossCenter\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var size = _Number(this._options.size);\r\n        var textIndent = _Number(this._options.text.indent);\r\n        var minBound;\r\n        var maxBound;\r\n        var indent;\r\n        this._measureText();\r\n        if (this.vertical) {\r\n            minBound = maxBound = layout.x;\r\n            if (this._inverted) {\r\n                maxBound += size\r\n            } else {\r\n                minBound -= size\r\n            }\r\n            if (this._hasText) {\r\n                indent = this._textHeight / 2;\r\n                if (textIndent > 0) {\r\n                    maxBound += textIndent + this._textWidth\r\n                }\r\n                if (textIndent < 0) {\r\n                    minBound += textIndent - this._textWidth\r\n                }\r\n            }\r\n        } else {\r\n            minBound = maxBound = layout.y;\r\n            if (this._inverted) {\r\n                maxBound += size\r\n            } else {\r\n                minBound -= size\r\n            }\r\n            if (this._hasText) {\r\n                indent = this._textWidth / 2;\r\n                if (textIndent > 0) {\r\n                    maxBound += textIndent + this._textHeight\r\n                }\r\n                if (textIndent < 0) {\r\n                    minBound += textIndent - this._textHeight\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            min: minBound,\r\n            max: maxBound,\r\n            indent: indent\r\n        }\r\n    }\r\n});\r\nexport {\r\n    rangeBar as _default, rectangle, rhombus, circle, triangleMarker as trianglemarker, textCloud as textcloud, rangeBar as rangebar\r\n};\r\n"]},"metadata":{},"sourceType":"module"}