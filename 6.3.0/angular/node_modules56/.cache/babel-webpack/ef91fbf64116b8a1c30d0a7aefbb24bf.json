{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { find } from \"../../core/utils/array\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport holdEvent from \"../../events/hold\";\nimport { addNamespace, isCommandKeyPressed } from \"../../events/utils/index\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport ScrollView from \"../scroll_view\";\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\nimport Selection from \"../selection/selection\";\nvar FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS = \"dx-filemanager-thumbnails-view-port\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS = \"dx-filemanager-thumbnails-container\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS = \"dx-filemanager-thumbnails-item-name\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS = \"dx-filemanager-thumbnails-item-spacer\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY = \"dxFileManagerItemData\";\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE = \"dxFileManagerThumbnailsListBox\";\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME = addNamespace(holdEvent.name, FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE);\n\nvar FileManagerThumbnailListBox = /*#__PURE__*/function (_CollectionWidget) {\n  _inherits(FileManagerThumbnailListBox, _CollectionWidget);\n\n  var _super = _createSuper(FileManagerThumbnailListBox);\n\n  function FileManagerThumbnailListBox() {\n    _classCallCheck(this, FileManagerThumbnailListBox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerThumbnailListBox, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this._initActions();\n\n      this._lockFocusedItemProcessing = false;\n      this.$element().addClass(FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS);\n\n      this._renderScrollView();\n\n      this._renderItemsContainer();\n\n      this._createScrollViewControl();\n\n      _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_initMarkup\", this).call(this);\n\n      this.onFocusedItemChanged = this._onFocusedItemChanged.bind(this);\n      this._layoutUtils = new ListBoxLayoutUtils(this._scrollView, this.$element(), this._$itemContainer, this.itemElements().first());\n\n      this._syncFocusedItemKey();\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onItemEnterKeyPressed: this._createActionByOption(\"onItemEnterKeyPressed\"),\n        onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\")\n      };\n    }\n  }, {\n    key: \"_initTemplates\",\n    value: function _initTemplates() {\n      _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_initTemplates\", this).call(this);\n\n      this._itemThumbnailTemplate = this.option(\"itemThumbnailTemplate\");\n      this._getTooltipText = this.option(\"getTooltipText\");\n\n      this._templateManager.addDefaultTemplates({\n        item: new BindableTemplate(function ($container, data, itemModel) {\n          var $itemElement = this._getDefaultItemTemplate(itemModel, $container);\n\n          $container.append($itemElement);\n        }.bind(this), [\"fileItem\"], this.option(\"integrationOptions.watchMethod\"))\n      });\n    }\n  }, {\n    key: \"_createScrollViewControl\",\n    value: function _createScrollViewControl() {\n      if (!this._scrollView) {\n        this._scrollView = this._createComponent(this._$scrollView, ScrollView, {\n          scrollByContent: true,\n          scrollByThumb: true,\n          useKeyboard: false,\n          showScrollbar: \"onHover\"\n        });\n      }\n    }\n  }, {\n    key: \"_renderScrollView\",\n    value: function _renderScrollView() {\n      if (!this._$scrollView) {\n        this._$scrollView = $(\"<div>\").appendTo(this.$element());\n      }\n    }\n  }, {\n    key: \"_renderItemsContainer\",\n    value: function _renderItemsContainer() {\n      if (!this._$itemContainer) {\n        this._$itemContainer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS).appendTo(this._$scrollView);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_render\", this).call(this);\n\n      this._detachEventHandlers();\n\n      this._attachEventHandlers();\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      this._detachEventHandlers();\n\n      _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_supportedKeys\",\n    value: function _supportedKeys() {\n      return extend(_get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_supportedKeys\", this).call(this), {\n        upArrow: function upArrow(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processArrowKeys(-1, false, e);\n        },\n        downArrow: function downArrow(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processArrowKeys(1, false, e);\n        },\n        home: function home(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processHomeEndKeys(0, true, e);\n        },\n        end: function end(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processHomeEndKeys(this._getItemsLength() - 1, true, e);\n        },\n        pageUp: function pageUp(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processPageChange(true, e);\n        },\n        pageDown: function pageDown(e) {\n          this._beforeKeyProcessing(e);\n\n          this._processPageChange(false, e);\n        },\n        enter: function enter(e) {\n          this._beforeKeyProcessing(e);\n\n          this._actions.onItemEnterKeyPressed(this._getFocusedItem());\n        },\n        A: function A(e) {\n          this._beforeKeyProcessing(e);\n\n          if (isCommandKeyPressed(e)) {\n            this.selectAll();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_beforeKeyProcessing\",\n    value: function _beforeKeyProcessing(e) {\n      e.preventDefault();\n\n      this._layoutUtils.reset();\n    }\n  }, {\n    key: \"_processArrowKeys\",\n    value: function _processArrowKeys(offset, horizontal, eventArgs) {\n      var item = this._getFocusedItem();\n\n      if (item) {\n        if (!horizontal) {\n          var layout = this._layoutUtils.getLayoutModel();\n\n          if (!layout) {\n            return;\n          }\n\n          offset *= layout.itemPerRowCount;\n        }\n\n        var newItemIndex = this._getIndexByItem(item) + offset;\n\n        this._focusItemByIndex(newItemIndex, true, eventArgs);\n      }\n    }\n  }, {\n    key: \"_processHomeEndKeys\",\n    value: function _processHomeEndKeys(index, scrollToItem, eventArgs) {\n      this._focusItemByIndex(index, scrollToItem, eventArgs);\n    }\n  }, {\n    key: \"_processPageChange\",\n    value: function _processPageChange(pageUp, eventArgs) {\n      var item = this._getFocusedItem();\n\n      if (!item) {\n        return;\n      }\n\n      var layout = this._layoutUtils.getLayoutModel();\n\n      if (!layout) {\n        return;\n      }\n\n      var itemLayout = this._layoutUtils.createItemLayoutModel(this._getIndexByItem(item));\n\n      var rowOffset = pageUp ? layout.rowPerPageRate : -layout.rowPerPageRate;\n      var newRowRate = itemLayout.itemRowIndex - rowOffset;\n      var roundFunc = pageUp ? Math.ceil : Math.floor;\n      var newRowIndex = roundFunc(newRowRate);\n      var newItemIndex = newRowIndex * layout.itemPerRowCount + itemLayout.itemColumnIndex;\n\n      if (newItemIndex < 0) {\n        newItemIndex = 0;\n      } else if (newItemIndex >= this._getItemsLength()) {\n        newItemIndex = this._getItemsLength() - 1;\n      }\n\n      this._focusItemByIndex(newItemIndex, true, eventArgs);\n    }\n  }, {\n    key: \"_processLongTap\",\n    value: function _processLongTap(e) {\n      var $targetItem = this._closestItemElement($(e.target));\n\n      var itemIndex = this._getIndexByItemElement($targetItem);\n\n      this._selection.changeItemSelection(itemIndex, {\n        control: true\n      });\n    }\n  }, {\n    key: \"_attachEventHandlers\",\n    value: function _attachEventHandlers() {\n      var _this = this;\n\n      if (\"multiple\" === this.option(\"selectionMode\")) {\n        eventsEngine.on(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME, \".\".concat(this._itemContentClass()), function (e) {\n          _this._processLongTap(e);\n\n          e.stopPropagation();\n        });\n      }\n\n      eventsEngine.on(this._itemContainer(), \"mousedown selectstart\", function (e) {\n        if (e.shiftKey) {\n          e.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"_detachEventHandlers\",\n    value: function _detachEventHandlers() {\n      eventsEngine.off(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME);\n      eventsEngine.off(this._itemContainer(), \"mousedown selectstart\");\n    }\n  }, {\n    key: \"_itemContainer\",\n    value: function _itemContainer() {\n      return this._$itemContainer;\n    }\n  }, {\n    key: \"_itemClass\",\n    value: function _itemClass() {\n      return FILE_MANAGER_THUMBNAILS_ITEM_CLASS;\n    }\n  }, {\n    key: \"_itemDataKey\",\n    value: function _itemDataKey() {\n      return FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY;\n    }\n  }, {\n    key: \"_getDefaultItemTemplate\",\n    value: function _getDefaultItemTemplate(fileItemInfo, $itemElement) {\n      $itemElement.attr(\"title\", this._getTooltipText(fileItemInfo));\n\n      var $itemThumbnail = this._itemThumbnailTemplate(fileItemInfo);\n\n      var $itemSpacer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS);\n      var $itemName = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS).text(fileItemInfo.fileItem.name);\n      $itemElement.append($itemThumbnail, $itemSpacer, $itemName);\n    }\n  }, {\n    key: \"_itemSelectHandler\",\n    value: function _itemSelectHandler(e) {\n      var options = {};\n\n      if (\"multiple\" === this.option(\"selectionMode\")) {\n        if (!this._isPreserveSelectionMode) {\n          this._isPreserveSelectionMode = isCommandKeyPressed(e) || e.shiftKey;\n        }\n\n        options = {\n          control: this._isPreserveSelectionMode,\n          shift: e.shiftKey\n        };\n      }\n\n      var index = this._getIndexByItemElement(e.currentTarget);\n\n      this._selection.changeItemSelection(index, options);\n    }\n  }, {\n    key: \"_initSelectionModule\",\n    value: function _initSelectionModule() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_initSelectionModule\", this).call(this);\n\n      var options = extend(this._selection.options, {\n        selectedKeys: this.option(\"selectedItemKeys\"),\n        onSelectionChanged: function onSelectionChanged(args) {\n          _this2.option(\"selectedItems\", _this2._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\n\n          _this2._updateSelectedItems(args);\n        }\n      });\n      this._selection = new Selection(options);\n    }\n  }, {\n    key: \"_updateSelectedItems\",\n    value: function _updateSelectedItems(args) {\n      var _this3 = this;\n\n      var addedItemKeys = args.addedItemKeys;\n      var removedItemKeys = args.removedItemKeys;\n\n      if (this._rendered && (addedItemKeys.length || removedItemKeys.length)) {\n        var selectionChangePromise = this._selectionChangePromise;\n\n        if (!this._rendering) {\n          var addedSelection = [];\n          var normalizedIndex;\n          var removedSelection = [];\n\n          this._editStrategy.beginCache();\n\n          for (var i = 0; i < removedItemKeys.length; i++) {\n            normalizedIndex = this._getIndexByKey(removedItemKeys[i]);\n            removedSelection.push(normalizedIndex);\n\n            this._removeSelection(normalizedIndex);\n          }\n\n          for (var _i = 0; _i < addedItemKeys.length; _i++) {\n            normalizedIndex = this._getIndexByKey(addedItemKeys[_i]);\n            addedSelection.push(normalizedIndex);\n\n            this._addSelection(normalizedIndex);\n          }\n\n          this._editStrategy.endCache();\n\n          this._updateSelection(addedSelection, removedSelection);\n        }\n\n        when(selectionChangePromise).done(function () {\n          return _this3._fireSelectionChangeEvent(args);\n        });\n      }\n    }\n  }, {\n    key: \"_fireSelectionChangeEvent\",\n    value: function _fireSelectionChangeEvent(args) {\n      this._createActionByOption(\"onSelectionChanged\", {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      })(args);\n    }\n  }, {\n    key: \"_updateSelection\",\n    value: function _updateSelection(addedSelection, removedSelection) {\n      var selectedItemsCount = this.getSelectedItems().length;\n\n      if (0 === selectedItemsCount) {\n        this._isPreserveSelectionMode = false;\n      }\n    }\n  }, {\n    key: \"_normalizeSelectedItems\",\n    value: function _normalizeSelectedItems() {\n      var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\n\n      var oldKeys = this._selection.getSelectedItemKeys();\n\n      if (!this._compareKeys(oldKeys, newKeys)) {\n        this._selection.setSelection(newKeys);\n      }\n\n      return new Deferred().resolve().promise();\n    }\n  }, {\n    key: \"_focusOutHandler\",\n    value: function _focusOutHandler() {}\n  }, {\n    key: \"_getItems\",\n    value: function _getItems() {\n      return this.option(\"items\") || [];\n    }\n  }, {\n    key: \"_getItemsLength\",\n    value: function _getItemsLength() {\n      return this._getItems().length;\n    }\n  }, {\n    key: \"_getIndexByItemElement\",\n    value: function _getIndexByItemElement(itemElement) {\n      return this._editStrategy.getNormalizedIndex(itemElement);\n    }\n  }, {\n    key: \"_getItemByIndex\",\n    value: function _getItemByIndex(index) {\n      return this._getItems()[index];\n    }\n  }, {\n    key: \"_getFocusedItem\",\n    value: function _getFocusedItem() {\n      return this.getItemByItemElement(this.option(\"focusedElement\"));\n    }\n  }, {\n    key: \"_focusItem\",\n    value: function _focusItem(item, scrollToItem) {\n      this.option(\"focusedElement\", this.getItemElementByItem(item));\n\n      if (scrollToItem) {\n        this._layoutUtils.scrollToItem(this._getIndexByItem(item));\n      }\n    }\n  }, {\n    key: \"_focusItemByIndex\",\n    value: function _focusItemByIndex(index, scrollToItem, eventArgs) {\n      if (index >= 0 && index < this._getItemsLength()) {\n        var item = this._getItemByIndex(index);\n\n        this._focusItem(item, scrollToItem, eventArgs);\n      }\n    }\n  }, {\n    key: \"_syncFocusedItemKey\",\n    value: function _syncFocusedItemKey() {\n      var _this4 = this;\n\n      if (!this._syncFocusedItemKeyDeferred) {\n        this._syncFocusedItemKeyDeferred = new Deferred();\n      }\n\n      var deferred = this._syncFocusedItemKeyDeferred;\n\n      if (this._dataSource && this._dataSource.isLoading()) {\n        return deferred.promise();\n      }\n\n      var focusedItemKey = this.option(\"focusedItemKey\");\n\n      if (isDefined(focusedItemKey)) {\n        var items = this.option(\"items\");\n        var focusedItem = find(items, function (item) {\n          return _this4.keyOf(item) === focusedItemKey;\n        });\n\n        if (focusedItem) {\n          this._focusItem(focusedItem, true);\n\n          deferred.resolve();\n        } else {\n          this.option(\"focusedItemKey\", void 0);\n          deferred.reject();\n        }\n      } else {\n        deferred.resolve();\n      }\n\n      this._syncFocusedItemKeyDeferred = null;\n      return deferred.promise();\n    }\n  }, {\n    key: \"_onFocusedItemChanged\",\n    value: function _onFocusedItemChanged() {\n      var focusedItem = this._getFocusedItem();\n\n      var newFocusedItemKey = this.keyOf(focusedItem);\n      var oldFocusedItemKey = this.option(\"focusedItemKey\");\n\n      if (newFocusedItemKey !== oldFocusedItemKey) {\n        this._lockFocusedItemProcessing = true;\n        this.option(\"focusedItemKey\", newFocusedItemKey);\n        this._lockFocusedItemProcessing = false;\n\n        this._raiseFocusedItemChanged(focusedItem);\n      }\n    }\n  }, {\n    key: \"_raiseFocusedItemChanged\",\n    value: function _raiseFocusedItemChanged(focusedItem) {\n      var args = {\n        item: focusedItem,\n        itemElement: this.option(\"focusedElement\")\n      };\n\n      this._actions.onFocusedItemChanged(args);\n    }\n  }, {\n    key: \"_changeItemSelection\",\n    value: function _changeItemSelection(item, select) {\n      if (this.isItemSelected(item) === select) {\n        return;\n      }\n\n      var itemElement = this.getItemElementByItem(item);\n\n      var index = this._getIndexByItemElement(itemElement);\n\n      this._selection.changeItemSelection(index, {\n        control: this._isPreserveSelectionMode\n      });\n    }\n  }, {\n    key: \"_chooseSelectOption\",\n    value: function _chooseSelectOption() {\n      return \"selectedItemKeys\";\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      return this._selection.getSelectedItems();\n    }\n  }, {\n    key: \"getItemElementByItem\",\n    value: function getItemElementByItem(item) {\n      return this._editStrategy.getItemElement(item);\n    }\n  }, {\n    key: \"getItemByItemElement\",\n    value: function getItemByItemElement(itemElement) {\n      return this._getItemByIndex(this._getIndexByItemElement(itemElement));\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll() {\n      if (\"multiple\" !== this.option(\"selectionMode\")) {\n        return;\n      }\n\n      this._selection.selectAll();\n\n      this._isPreserveSelectionMode = true;\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(item) {\n      this._changeItemSelection(item, true);\n    }\n  }, {\n    key: \"deselectItem\",\n    value: function deselectItem(item) {\n      this._changeItemSelection(item, false);\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      this._selection.deselectAll();\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var _this5 = this;\n\n      switch (args.name) {\n        case \"items\":\n          if (this._layoutUtils) {\n            this._layoutUtils.updateItems(this.itemElements().first());\n          }\n\n          _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        case \"focusedItemKey\":\n          if (this._lockFocusedItemProcessing) {\n            break;\n          }\n\n          if (isDefined(args.value)) {\n            this._syncFocusedItemKey().done(function () {\n              var focusedItem = _this5._getFocusedItem();\n\n              _this5._raiseFocusedItemChanged(focusedItem);\n            });\n          } else {\n            this.option(\"focusedElement\", null);\n\n            this._raiseFocusedItemChanged(null);\n          }\n\n          break;\n\n        case \"onItemEnterKeyPressed\":\n        case \"onFocusedItemChanged\":\n          this._actions[args.name] = this._createActionByOption(args.name);\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerThumbnailListBox.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return FileManagerThumbnailListBox;\n}(CollectionWidget);\n\nvar ListBoxLayoutUtils = /*#__PURE__*/function () {\n  function ListBoxLayoutUtils(scrollView, $viewPort, $itemContainer, $item) {\n    _classCallCheck(this, ListBoxLayoutUtils);\n\n    this._layoutModel = null;\n    this._scrollView = scrollView;\n    this._$viewPort = $viewPort;\n    this._$itemContainer = $itemContainer;\n    this._$item = $item;\n  }\n\n  _createClass(ListBoxLayoutUtils, [{\n    key: \"updateItems\",\n    value: function updateItems($item) {\n      this._$item = $item;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._layoutModel = null;\n    }\n  }, {\n    key: \"getLayoutModel\",\n    value: function getLayoutModel() {\n      if (!this._layoutModel) {\n        this._layoutModel = this._createLayoutModel();\n      }\n\n      return this._layoutModel;\n    }\n  }, {\n    key: \"_createLayoutModel\",\n    value: function _createLayoutModel() {\n      if (!this._$item) {\n        return null;\n      }\n\n      var itemWidth = this._$item.outerWidth(true);\n\n      if (0 === itemWidth) {\n        return null;\n      }\n\n      var itemHeight = this._$item.outerHeight(true);\n\n      var viewPortWidth = this._$itemContainer.innerWidth();\n\n      var viewPortHeight = this._$viewPort.innerHeight();\n\n      var viewPortScrollTop = this._scrollView.scrollTop();\n\n      var viewPortScrollBottom = viewPortScrollTop + viewPortHeight;\n      var itemPerRowCount = Math.floor(viewPortWidth / itemWidth);\n      var rowPerPageRate = viewPortHeight / itemHeight;\n      return {\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        viewPortWidth: viewPortWidth,\n        viewPortHeight: viewPortHeight,\n        viewPortScrollTop: viewPortScrollTop,\n        viewPortScrollBottom: viewPortScrollBottom,\n        itemPerRowCount: itemPerRowCount,\n        rowPerPageRate: rowPerPageRate\n      };\n    }\n  }, {\n    key: \"createItemLayoutModel\",\n    value: function createItemLayoutModel(index) {\n      var layout = this.getLayoutModel();\n\n      if (!layout) {\n        return null;\n      }\n\n      var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\n      var itemColumnIndex = index % layout.itemPerRowCount;\n      var itemTop = itemRowIndex * layout.itemHeight;\n      var itemBottom = itemTop + layout.itemHeight;\n      return {\n        itemRowIndex: itemRowIndex,\n        itemColumnIndex: itemColumnIndex,\n        itemTop: itemTop,\n        itemBottom: itemBottom\n      };\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(index) {\n      var layout = this.getLayoutModel();\n\n      if (!layout) {\n        return;\n      }\n\n      var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\n      var itemTop = itemRowIndex * layout.itemHeight;\n      var itemBottom = itemTop + layout.itemHeight;\n      var newScrollTop = layout.viewPortScrollTop;\n\n      if (itemTop < layout.viewPortScrollTop) {\n        newScrollTop = itemTop;\n      } else if (itemBottom > layout.viewPortScrollBottom) {\n        newScrollTop = itemBottom - layout.viewPortHeight;\n      }\n\n      this._scrollView.scrollTo(newScrollTop);\n    }\n  }]);\n\n  return ListBoxLayoutUtils;\n}();\n\nexport default FileManagerThumbnailListBox;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js"],"names":["$","extend","find","isDefined","Deferred","when","holdEvent","addNamespace","isCommandKeyPressed","eventsEngine","BindableTemplate","ScrollView","CollectionWidget","Selection","FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY","FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE","FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME","name","FileManagerThumbnailListBox","_initActions","_lockFocusedItemProcessing","$element","addClass","_renderScrollView","_renderItemsContainer","_createScrollViewControl","onFocusedItemChanged","_onFocusedItemChanged","bind","_layoutUtils","ListBoxLayoutUtils","_scrollView","_$itemContainer","itemElements","first","_syncFocusedItemKey","_actions","onItemEnterKeyPressed","_createActionByOption","_itemThumbnailTemplate","option","_getTooltipText","_templateManager","addDefaultTemplates","item","$container","data","itemModel","$itemElement","_getDefaultItemTemplate","append","_createComponent","_$scrollView","scrollByContent","scrollByThumb","useKeyboard","showScrollbar","appendTo","_detachEventHandlers","_attachEventHandlers","upArrow","e","_beforeKeyProcessing","_processArrowKeys","downArrow","home","_processHomeEndKeys","end","_getItemsLength","pageUp","_processPageChange","pageDown","enter","_getFocusedItem","A","selectAll","preventDefault","reset","offset","horizontal","eventArgs","layout","getLayoutModel","itemPerRowCount","newItemIndex","_getIndexByItem","_focusItemByIndex","index","scrollToItem","itemLayout","createItemLayoutModel","rowOffset","rowPerPageRate","newRowRate","itemRowIndex","roundFunc","Math","ceil","floor","newRowIndex","itemColumnIndex","$targetItem","_closestItemElement","target","itemIndex","_getIndexByItemElement","_selection","changeItemSelection","control","on","_itemContainer","concat","_itemContentClass","_processLongTap","stopPropagation","shiftKey","off","fileItemInfo","attr","$itemThumbnail","$itemSpacer","$itemName","text","fileItem","options","_isPreserveSelectionMode","shift","currentTarget","selectedKeys","onSelectionChanged","args","_getItemsByKeys","selectedItemKeys","selectedItems","_updateSelectedItems","addedItemKeys","removedItemKeys","_rendered","length","selectionChangePromise","_selectionChangePromise","_rendering","addedSelection","normalizedIndex","removedSelection","_editStrategy","beginCache","i","_getIndexByKey","push","_removeSelection","_i","_addSelection","endCache","_updateSelection","done","_fireSelectionChangeEvent","excludeValidators","selectedItemsCount","getSelectedItems","newKeys","_getKeysByItems","oldKeys","getSelectedItemKeys","_compareKeys","setSelection","resolve","promise","_getItems","itemElement","getNormalizedIndex","getItemByItemElement","getItemElementByItem","_getItemByIndex","_focusItem","_syncFocusedItemKeyDeferred","deferred","_dataSource","isLoading","focusedItemKey","items","focusedItem","keyOf","reject","newFocusedItemKey","oldFocusedItemKey","_raiseFocusedItemChanged","select","isItemSelected","getItemElement","_changeItemSelection","deselectAll","updateItems","value","scrollView","$viewPort","$itemContainer","$item","_layoutModel","_$viewPort","_$item","_createLayoutModel","itemWidth","outerWidth","itemHeight","outerHeight","viewPortWidth","innerWidth","viewPortHeight","innerHeight","viewPortScrollTop","scrollTop","viewPortScrollBottom","itemTop","itemBottom","newScrollTop","scrollTo"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    find\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport ScrollView from \"../scroll_view\";\r\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\r\nimport Selection from \"../selection/selection\";\r\nvar FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS = \"dx-filemanager-thumbnails-view-port\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS = \"dx-filemanager-thumbnails-container\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS = \"dx-filemanager-thumbnails-item-name\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS = \"dx-filemanager-thumbnails-item-spacer\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY = \"dxFileManagerItemData\";\r\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE = \"dxFileManagerThumbnailsListBox\";\r\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME = addNamespace(holdEvent.name, FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE);\r\nclass FileManagerThumbnailListBox extends CollectionWidget {\r\n    _initMarkup() {\r\n        this._initActions();\r\n        this._lockFocusedItemProcessing = false;\r\n        this.$element().addClass(FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS);\r\n        this._renderScrollView();\r\n        this._renderItemsContainer();\r\n        this._createScrollViewControl();\r\n        super._initMarkup();\r\n        this.onFocusedItemChanged = this._onFocusedItemChanged.bind(this);\r\n        this._layoutUtils = new ListBoxLayoutUtils(this._scrollView, this.$element(), this._$itemContainer, this.itemElements().first());\r\n        this._syncFocusedItemKey()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onItemEnterKeyPressed: this._createActionByOption(\"onItemEnterKeyPressed\"),\r\n            onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\")\r\n        }\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        this._itemThumbnailTemplate = this.option(\"itemThumbnailTemplate\");\r\n        this._getTooltipText = this.option(\"getTooltipText\");\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(function($container, data, itemModel) {\r\n                var $itemElement = this._getDefaultItemTemplate(itemModel, $container);\r\n                $container.append($itemElement)\r\n            }.bind(this), [\"fileItem\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    }\r\n    _createScrollViewControl() {\r\n        if (!this._scrollView) {\r\n            this._scrollView = this._createComponent(this._$scrollView, ScrollView, {\r\n                scrollByContent: true,\r\n                scrollByThumb: true,\r\n                useKeyboard: false,\r\n                showScrollbar: \"onHover\"\r\n            })\r\n        }\r\n    }\r\n    _renderScrollView() {\r\n        if (!this._$scrollView) {\r\n            this._$scrollView = $(\"<div>\").appendTo(this.$element())\r\n        }\r\n    }\r\n    _renderItemsContainer() {\r\n        if (!this._$itemContainer) {\r\n            this._$itemContainer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS).appendTo(this._$scrollView)\r\n        }\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._detachEventHandlers();\r\n        this._attachEventHandlers()\r\n    }\r\n    _clean() {\r\n        this._detachEventHandlers();\r\n        super._clean()\r\n    }\r\n    _supportedKeys() {\r\n        return extend(super._supportedKeys(), {\r\n            upArrow(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processArrowKeys(-1, false, e)\r\n            },\r\n            downArrow(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processArrowKeys(1, false, e)\r\n            },\r\n            home(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processHomeEndKeys(0, true, e)\r\n            },\r\n            end(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processHomeEndKeys(this._getItemsLength() - 1, true, e)\r\n            },\r\n            pageUp(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processPageChange(true, e)\r\n            },\r\n            pageDown(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processPageChange(false, e)\r\n            },\r\n            enter(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._actions.onItemEnterKeyPressed(this._getFocusedItem())\r\n            },\r\n            A(e) {\r\n                this._beforeKeyProcessing(e);\r\n                if (isCommandKeyPressed(e)) {\r\n                    this.selectAll()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _beforeKeyProcessing(e) {\r\n        e.preventDefault();\r\n        this._layoutUtils.reset()\r\n    }\r\n    _processArrowKeys(offset, horizontal, eventArgs) {\r\n        var item = this._getFocusedItem();\r\n        if (item) {\r\n            if (!horizontal) {\r\n                var layout = this._layoutUtils.getLayoutModel();\r\n                if (!layout) {\r\n                    return\r\n                }\r\n                offset *= layout.itemPerRowCount\r\n            }\r\n            var newItemIndex = this._getIndexByItem(item) + offset;\r\n            this._focusItemByIndex(newItemIndex, true, eventArgs)\r\n        }\r\n    }\r\n    _processHomeEndKeys(index, scrollToItem, eventArgs) {\r\n        this._focusItemByIndex(index, scrollToItem, eventArgs)\r\n    }\r\n    _processPageChange(pageUp, eventArgs) {\r\n        var item = this._getFocusedItem();\r\n        if (!item) {\r\n            return\r\n        }\r\n        var layout = this._layoutUtils.getLayoutModel();\r\n        if (!layout) {\r\n            return\r\n        }\r\n        var itemLayout = this._layoutUtils.createItemLayoutModel(this._getIndexByItem(item));\r\n        var rowOffset = pageUp ? layout.rowPerPageRate : -layout.rowPerPageRate;\r\n        var newRowRate = itemLayout.itemRowIndex - rowOffset;\r\n        var roundFunc = pageUp ? Math.ceil : Math.floor;\r\n        var newRowIndex = roundFunc(newRowRate);\r\n        var newItemIndex = newRowIndex * layout.itemPerRowCount + itemLayout.itemColumnIndex;\r\n        if (newItemIndex < 0) {\r\n            newItemIndex = 0\r\n        } else if (newItemIndex >= this._getItemsLength()) {\r\n            newItemIndex = this._getItemsLength() - 1\r\n        }\r\n        this._focusItemByIndex(newItemIndex, true, eventArgs)\r\n    }\r\n    _processLongTap(e) {\r\n        var $targetItem = this._closestItemElement($(e.target));\r\n        var itemIndex = this._getIndexByItemElement($targetItem);\r\n        this._selection.changeItemSelection(itemIndex, {\r\n            control: true\r\n        })\r\n    }\r\n    _attachEventHandlers() {\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            eventsEngine.on(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME, \".\".concat(this._itemContentClass()), e => {\r\n                this._processLongTap(e);\r\n                e.stopPropagation()\r\n            })\r\n        }\r\n        eventsEngine.on(this._itemContainer(), \"mousedown selectstart\", e => {\r\n            if (e.shiftKey) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    _detachEventHandlers() {\r\n        eventsEngine.off(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME);\r\n        eventsEngine.off(this._itemContainer(), \"mousedown selectstart\")\r\n    }\r\n    _itemContainer() {\r\n        return this._$itemContainer\r\n    }\r\n    _itemClass() {\r\n        return FILE_MANAGER_THUMBNAILS_ITEM_CLASS\r\n    }\r\n    _itemDataKey() {\r\n        return FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY\r\n    }\r\n    _getDefaultItemTemplate(fileItemInfo, $itemElement) {\r\n        $itemElement.attr(\"title\", this._getTooltipText(fileItemInfo));\r\n        var $itemThumbnail = this._itemThumbnailTemplate(fileItemInfo);\r\n        var $itemSpacer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS);\r\n        var $itemName = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS).text(fileItemInfo.fileItem.name);\r\n        $itemElement.append($itemThumbnail, $itemSpacer, $itemName)\r\n    }\r\n    _itemSelectHandler(e) {\r\n        var options = {};\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            if (!this._isPreserveSelectionMode) {\r\n                this._isPreserveSelectionMode = isCommandKeyPressed(e) || e.shiftKey\r\n            }\r\n            options = {\r\n                control: this._isPreserveSelectionMode,\r\n                shift: e.shiftKey\r\n            }\r\n        }\r\n        var index = this._getIndexByItemElement(e.currentTarget);\r\n        this._selection.changeItemSelection(index, options)\r\n    }\r\n    _initSelectionModule() {\r\n        super._initSelectionModule();\r\n        var options = extend(this._selection.options, {\r\n            selectedKeys: this.option(\"selectedItemKeys\"),\r\n            onSelectionChanged: args => {\r\n                this.option(\"selectedItems\", this._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\r\n                this._updateSelectedItems(args)\r\n            }\r\n        });\r\n        this._selection = new Selection(options)\r\n    }\r\n    _updateSelectedItems(args) {\r\n        var addedItemKeys = args.addedItemKeys;\r\n        var removedItemKeys = args.removedItemKeys;\r\n        if (this._rendered && (addedItemKeys.length || removedItemKeys.length)) {\r\n            var selectionChangePromise = this._selectionChangePromise;\r\n            if (!this._rendering) {\r\n                var addedSelection = [];\r\n                var normalizedIndex;\r\n                var removedSelection = [];\r\n                this._editStrategy.beginCache();\r\n                for (var i = 0; i < removedItemKeys.length; i++) {\r\n                    normalizedIndex = this._getIndexByKey(removedItemKeys[i]);\r\n                    removedSelection.push(normalizedIndex);\r\n                    this._removeSelection(normalizedIndex)\r\n                }\r\n                for (var _i = 0; _i < addedItemKeys.length; _i++) {\r\n                    normalizedIndex = this._getIndexByKey(addedItemKeys[_i]);\r\n                    addedSelection.push(normalizedIndex);\r\n                    this._addSelection(normalizedIndex)\r\n                }\r\n                this._editStrategy.endCache();\r\n                this._updateSelection(addedSelection, removedSelection)\r\n            }\r\n            when(selectionChangePromise).done(() => this._fireSelectionChangeEvent(args))\r\n        }\r\n    }\r\n    _fireSelectionChangeEvent(args) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })(args)\r\n    }\r\n    _updateSelection(addedSelection, removedSelection) {\r\n        var selectedItemsCount = this.getSelectedItems().length;\r\n        if (0 === selectedItemsCount) {\r\n            this._isPreserveSelectionMode = false\r\n        }\r\n    }\r\n    _normalizeSelectedItems() {\r\n        var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\r\n        var oldKeys = this._selection.getSelectedItemKeys();\r\n        if (!this._compareKeys(oldKeys, newKeys)) {\r\n            this._selection.setSelection(newKeys)\r\n        }\r\n        return (new Deferred).resolve().promise()\r\n    }\r\n    _focusOutHandler() {}\r\n    _getItems() {\r\n        return this.option(\"items\") || []\r\n    }\r\n    _getItemsLength() {\r\n        return this._getItems().length\r\n    }\r\n    _getIndexByItemElement(itemElement) {\r\n        return this._editStrategy.getNormalizedIndex(itemElement)\r\n    }\r\n    _getItemByIndex(index) {\r\n        return this._getItems()[index]\r\n    }\r\n    _getFocusedItem() {\r\n        return this.getItemByItemElement(this.option(\"focusedElement\"))\r\n    }\r\n    _focusItem(item, scrollToItem) {\r\n        this.option(\"focusedElement\", this.getItemElementByItem(item));\r\n        if (scrollToItem) {\r\n            this._layoutUtils.scrollToItem(this._getIndexByItem(item))\r\n        }\r\n    }\r\n    _focusItemByIndex(index, scrollToItem, eventArgs) {\r\n        if (index >= 0 && index < this._getItemsLength()) {\r\n            var item = this._getItemByIndex(index);\r\n            this._focusItem(item, scrollToItem, eventArgs)\r\n        }\r\n    }\r\n    _syncFocusedItemKey() {\r\n        if (!this._syncFocusedItemKeyDeferred) {\r\n            this._syncFocusedItemKeyDeferred = new Deferred\r\n        }\r\n        var deferred = this._syncFocusedItemKeyDeferred;\r\n        if (this._dataSource && this._dataSource.isLoading()) {\r\n            return deferred.promise()\r\n        }\r\n        var focusedItemKey = this.option(\"focusedItemKey\");\r\n        if (isDefined(focusedItemKey)) {\r\n            var items = this.option(\"items\");\r\n            var focusedItem = find(items, item => this.keyOf(item) === focusedItemKey);\r\n            if (focusedItem) {\r\n                this._focusItem(focusedItem, true);\r\n                deferred.resolve()\r\n            } else {\r\n                this.option(\"focusedItemKey\", void 0);\r\n                deferred.reject()\r\n            }\r\n        } else {\r\n            deferred.resolve()\r\n        }\r\n        this._syncFocusedItemKeyDeferred = null;\r\n        return deferred.promise()\r\n    }\r\n    _onFocusedItemChanged() {\r\n        var focusedItem = this._getFocusedItem();\r\n        var newFocusedItemKey = this.keyOf(focusedItem);\r\n        var oldFocusedItemKey = this.option(\"focusedItemKey\");\r\n        if (newFocusedItemKey !== oldFocusedItemKey) {\r\n            this._lockFocusedItemProcessing = true;\r\n            this.option(\"focusedItemKey\", newFocusedItemKey);\r\n            this._lockFocusedItemProcessing = false;\r\n            this._raiseFocusedItemChanged(focusedItem)\r\n        }\r\n    }\r\n    _raiseFocusedItemChanged(focusedItem) {\r\n        var args = {\r\n            item: focusedItem,\r\n            itemElement: this.option(\"focusedElement\")\r\n        };\r\n        this._actions.onFocusedItemChanged(args)\r\n    }\r\n    _changeItemSelection(item, select) {\r\n        if (this.isItemSelected(item) === select) {\r\n            return\r\n        }\r\n        var itemElement = this.getItemElementByItem(item);\r\n        var index = this._getIndexByItemElement(itemElement);\r\n        this._selection.changeItemSelection(index, {\r\n            control: this._isPreserveSelectionMode\r\n        })\r\n    }\r\n    _chooseSelectOption() {\r\n        return \"selectedItemKeys\"\r\n    }\r\n    getSelectedItems() {\r\n        return this._selection.getSelectedItems()\r\n    }\r\n    getItemElementByItem(item) {\r\n        return this._editStrategy.getItemElement(item)\r\n    }\r\n    getItemByItemElement(itemElement) {\r\n        return this._getItemByIndex(this._getIndexByItemElement(itemElement))\r\n    }\r\n    selectAll() {\r\n        if (\"multiple\" !== this.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        this._selection.selectAll();\r\n        this._isPreserveSelectionMode = true\r\n    }\r\n    selectItem(item) {\r\n        this._changeItemSelection(item, true)\r\n    }\r\n    deselectItem(item) {\r\n        this._changeItemSelection(item, false)\r\n    }\r\n    clearSelection() {\r\n        this._selection.deselectAll()\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                if (this._layoutUtils) {\r\n                    this._layoutUtils.updateItems(this.itemElements().first())\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"focusedItemKey\":\r\n                if (this._lockFocusedItemProcessing) {\r\n                    break\r\n                }\r\n                if (isDefined(args.value)) {\r\n                    this._syncFocusedItemKey().done(() => {\r\n                        var focusedItem = this._getFocusedItem();\r\n                        this._raiseFocusedItemChanged(focusedItem)\r\n                    })\r\n                } else {\r\n                    this.option(\"focusedElement\", null);\r\n                    this._raiseFocusedItemChanged(null)\r\n                }\r\n                break;\r\n            case \"onItemEnterKeyPressed\":\r\n            case \"onFocusedItemChanged\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nclass ListBoxLayoutUtils {\r\n    constructor(scrollView, $viewPort, $itemContainer, $item) {\r\n        this._layoutModel = null;\r\n        this._scrollView = scrollView;\r\n        this._$viewPort = $viewPort;\r\n        this._$itemContainer = $itemContainer;\r\n        this._$item = $item\r\n    }\r\n    updateItems($item) {\r\n        this._$item = $item\r\n    }\r\n    reset() {\r\n        this._layoutModel = null\r\n    }\r\n    getLayoutModel() {\r\n        if (!this._layoutModel) {\r\n            this._layoutModel = this._createLayoutModel()\r\n        }\r\n        return this._layoutModel\r\n    }\r\n    _createLayoutModel() {\r\n        if (!this._$item) {\r\n            return null\r\n        }\r\n        var itemWidth = this._$item.outerWidth(true);\r\n        if (0 === itemWidth) {\r\n            return null\r\n        }\r\n        var itemHeight = this._$item.outerHeight(true);\r\n        var viewPortWidth = this._$itemContainer.innerWidth();\r\n        var viewPortHeight = this._$viewPort.innerHeight();\r\n        var viewPortScrollTop = this._scrollView.scrollTop();\r\n        var viewPortScrollBottom = viewPortScrollTop + viewPortHeight;\r\n        var itemPerRowCount = Math.floor(viewPortWidth / itemWidth);\r\n        var rowPerPageRate = viewPortHeight / itemHeight;\r\n        return {\r\n            itemWidth: itemWidth,\r\n            itemHeight: itemHeight,\r\n            viewPortWidth: viewPortWidth,\r\n            viewPortHeight: viewPortHeight,\r\n            viewPortScrollTop: viewPortScrollTop,\r\n            viewPortScrollBottom: viewPortScrollBottom,\r\n            itemPerRowCount: itemPerRowCount,\r\n            rowPerPageRate: rowPerPageRate\r\n        }\r\n    }\r\n    createItemLayoutModel(index) {\r\n        var layout = this.getLayoutModel();\r\n        if (!layout) {\r\n            return null\r\n        }\r\n        var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\r\n        var itemColumnIndex = index % layout.itemPerRowCount;\r\n        var itemTop = itemRowIndex * layout.itemHeight;\r\n        var itemBottom = itemTop + layout.itemHeight;\r\n        return {\r\n            itemRowIndex: itemRowIndex,\r\n            itemColumnIndex: itemColumnIndex,\r\n            itemTop: itemTop,\r\n            itemBottom: itemBottom\r\n        }\r\n    }\r\n    scrollToItem(index) {\r\n        var layout = this.getLayoutModel();\r\n        if (!layout) {\r\n            return\r\n        }\r\n        var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\r\n        var itemTop = itemRowIndex * layout.itemHeight;\r\n        var itemBottom = itemTop + layout.itemHeight;\r\n        var newScrollTop = layout.viewPortScrollTop;\r\n        if (itemTop < layout.viewPortScrollTop) {\r\n            newScrollTop = itemTop\r\n        } else if (itemBottom > layout.viewPortScrollBottom) {\r\n            newScrollTop = itemBottom - layout.viewPortHeight\r\n        }\r\n        this._scrollView.scrollTo(newScrollTop)\r\n    }\r\n}\r\nexport default FileManagerThumbnailListBox;\r\n"]},"metadata":{},"sourceType":"module"}