{"ast":null,"code":"import _defineProperty from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/**\r\n * DevExtreme (esm/viz/range_selector/tracker.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport pointerEvents from \"../../events/pointer\";\nimport { getWindow } from \"../../core/utils/window\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { each } from \"../../core/utils/iterator\";\nimport { pointerEvents as msPointerEnabled } from \"../../core/utils/support\";\nvar MIN_MANUAL_SELECTING_WIDTH = 10;\nvar window = getWindow();\n\nfunction isLeftButtonPressed(event) {\n  var e = event || window.event;\n  var originalEvent = e.originalEvent;\n  var touches = e.touches;\n  var pointerType = originalEvent ? originalEvent.pointerType : false;\n  var eventTouches = originalEvent ? originalEvent.touches : false;\n  var isMSPointerLeftClick = originalEvent && void 0 !== pointerType && (pointerType === (originalEvent.MSPOINTER_TYPE_TOUCH || \"touch\") || pointerType === (originalEvent.MSPOINTER_TYPE_MOUSE || \"mouse\") && 1 === originalEvent.buttons);\n  var isTouches = touches && touches.length > 0 || eventTouches && eventTouches.length > 0;\n  return 1 === e.which || isMSPointerLeftClick || isTouches;\n}\n\nfunction isMultiTouches(event) {\n  var originalEvent = event.originalEvent;\n  var touches = event.touches;\n  var eventTouches = originalEvent && originalEvent.touches;\n  return touches && touches.length > 1 || eventTouches && eventTouches.length > 1 || null;\n}\n\nfunction preventDefault(e) {\n  if (!isMultiTouches(e)) {\n    e.preventDefault();\n  }\n}\n\nfunction stopPropagationAndPreventDefault(e) {\n  if (!isMultiTouches(e)) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\nfunction isTouchEventArgs(e) {\n  return e && e.type && 0 === e.type.indexOf(\"touch\");\n}\n\nfunction getEventPageX(event) {\n  var originalEvent = event.originalEvent;\n  var result = 0;\n\n  if (event.pageX) {\n    result = event.pageX;\n  } else if (originalEvent && originalEvent.pageX) {\n    result = originalEvent.pageX;\n  }\n\n  if (originalEvent && originalEvent.touches) {\n    if (originalEvent.touches.length > 0) {\n      result = originalEvent.touches[0].pageX;\n    } else if (originalEvent.changedTouches.length > 0) {\n      result = originalEvent.changedTouches[0].pageX;\n    }\n  }\n\n  return result;\n}\n\nfunction initializeAreaEvents(controller, area, state, getRootOffsetLeft) {\n  var _docEvents;\n\n  var isTouchEvent;\n  var isActive = false;\n  var initialPosition;\n  var movingHandler = null;\n  var docEvents = (_docEvents = {}, _defineProperty(_docEvents, pointerEvents.move, function (e) {\n    var position;\n    var offset;\n\n    if (isTouchEvent !== isTouchEventArgs(e)) {\n      return;\n    }\n\n    if (!isLeftButtonPressed(e)) {\n      cancel(e);\n    }\n\n    if (isActive) {\n      position = getEventPageX(e);\n      offset = getRootOffsetLeft();\n\n      if (movingHandler) {\n        movingHandler(position - offset, e);\n      } else if (state.manualRangeSelectionEnabled && Math.abs(initialPosition - position) >= MIN_MANUAL_SELECTING_WIDTH) {\n        movingHandler = controller.placeSliderAndBeginMoving(initialPosition - offset, position - offset, e);\n      }\n    }\n  }), _defineProperty(_docEvents, pointerEvents.up, function (e) {\n    var position;\n\n    if (isActive) {\n      position = getEventPageX(e);\n\n      if (!movingHandler && state.moveSelectedRangeByClick && Math.abs(initialPosition - position) < MIN_MANUAL_SELECTING_WIDTH) {\n        controller.moveSelectedArea(position - getRootOffsetLeft(), e);\n      }\n\n      cancel(e);\n    }\n  }), _docEvents);\n\n  function cancel(e) {\n    if (isActive) {\n      isActive = false;\n\n      if (movingHandler) {\n        movingHandler.complete(e);\n        movingHandler = null;\n      }\n    }\n  }\n\n  area.on(pointerEvents.down, function (e) {\n    if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\n      return;\n    }\n\n    isActive = true;\n    isTouchEvent = isTouchEventArgs(e);\n    initialPosition = getEventPageX(e);\n  });\n  return docEvents;\n}\n\nfunction initializeSelectedAreaEvents(controller, area, state, getRootOffsetLeft) {\n  var _docEvents2;\n\n  var isTouchEvent;\n  var isActive = false;\n  var movingHandler = null;\n  var docEvents = (_docEvents2 = {}, _defineProperty(_docEvents2, pointerEvents.move, function (e) {\n    if (isTouchEvent !== isTouchEventArgs(e)) {\n      return;\n    }\n\n    if (!isLeftButtonPressed(e)) {\n      cancel(e);\n    }\n\n    if (isActive) {\n      preventDefault(e);\n      movingHandler(getEventPageX(e) - getRootOffsetLeft(), e);\n    }\n  }), _defineProperty(_docEvents2, pointerEvents.up, cancel), _docEvents2);\n\n  function cancel(e) {\n    if (isActive) {\n      isActive = false;\n      movingHandler.complete(e);\n      movingHandler = null;\n    }\n  }\n\n  area.on(pointerEvents.down, function (e) {\n    if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\n      return;\n    }\n\n    isActive = true;\n    isTouchEvent = isTouchEventArgs(e);\n    movingHandler = controller.beginSelectedAreaMoving(getEventPageX(e) - getRootOffsetLeft());\n    stopPropagationAndPreventDefault(e);\n  });\n  return docEvents;\n}\n\nfunction initializeSliderEvents(controller, sliders, state, getRootOffsetLeft) {\n  var _docEvents3;\n\n  var isTouchEvent;\n  var isActive = false;\n  var movingHandler = null;\n  var docEvents = (_docEvents3 = {}, _defineProperty(_docEvents3, pointerEvents.move, function (e) {\n    if (isTouchEvent !== isTouchEventArgs(e)) {\n      return;\n    }\n\n    if (!isLeftButtonPressed(e)) {\n      cancel(e);\n    }\n\n    if (isActive) {\n      preventDefault(e);\n      movingHandler(getEventPageX(e) - getRootOffsetLeft(), e);\n    }\n  }), _defineProperty(_docEvents3, pointerEvents.up, cancel), _docEvents3);\n  each(sliders, function (i, slider) {\n    var _slider$on;\n\n    slider.on((_slider$on = {}, _defineProperty(_slider$on, pointerEvents.down, function (e) {\n      if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\n        return;\n      }\n\n      isActive = true;\n      isTouchEvent = isTouchEventArgs(e);\n      movingHandler = controller.beginSliderMoving(i, getEventPageX(e) - getRootOffsetLeft());\n      stopPropagationAndPreventDefault(e);\n    }), _defineProperty(_slider$on, pointerEvents.move, function () {\n      if (!movingHandler) {\n        controller.foregroundSlider(i);\n      }\n    }), _slider$on));\n  });\n\n  function cancel(e) {\n    if (isActive) {\n      isActive = false;\n      movingHandler.complete(e);\n      movingHandler = null;\n    }\n  }\n\n  return docEvents;\n}\n\nexport function Tracker(params) {\n  var state = this._state = {};\n  var targets = params.controller.getTrackerTargets();\n\n  if (msPointerEnabled) {\n    params.renderer.root.css({\n      msTouchAction: \"pinch-zoom\"\n    });\n  }\n\n  this._docEvents = [initializeSelectedAreaEvents(params.controller, targets.selectedArea, state, getRootOffsetLeft), initializeAreaEvents(params.controller, targets.area, state, getRootOffsetLeft), initializeSliderEvents(params.controller, targets.sliders, state, getRootOffsetLeft)];\n  each(this._docEvents, function (_, events) {\n    eventsEngine.on(domAdapter.getDocument(), events);\n  });\n\n  function getRootOffsetLeft() {\n    return params.renderer.getRootOffset().left;\n  }\n}\nTracker.prototype = {\n  constructor: Tracker,\n  dispose: function dispose() {\n    each(this._docEvents, function (_, events) {\n      eventsEngine.off(domAdapter.getDocument(), events);\n    });\n  },\n  update: function update(enabled, behavior) {\n    var state = this._state;\n    state.enabled = enabled;\n    state.moveSelectedRangeByClick = behavior.moveSelectedRangeByClick;\n    state.manualRangeSelectionEnabled = behavior.manualRangeSelectionEnabled;\n  }\n};","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/range_selector/tracker.js"],"names":["eventsEngine","pointerEvents","getWindow","domAdapter","each","msPointerEnabled","MIN_MANUAL_SELECTING_WIDTH","window","isLeftButtonPressed","event","e","originalEvent","touches","pointerType","eventTouches","isMSPointerLeftClick","MSPOINTER_TYPE_TOUCH","MSPOINTER_TYPE_MOUSE","buttons","isTouches","length","which","isMultiTouches","preventDefault","stopPropagationAndPreventDefault","stopPropagation","isTouchEventArgs","type","indexOf","getEventPageX","result","pageX","changedTouches","initializeAreaEvents","controller","area","state","getRootOffsetLeft","isTouchEvent","isActive","initialPosition","movingHandler","docEvents","move","position","offset","cancel","manualRangeSelectionEnabled","Math","abs","placeSliderAndBeginMoving","up","moveSelectedRangeByClick","moveSelectedArea","complete","on","down","enabled","initializeSelectedAreaEvents","beginSelectedAreaMoving","initializeSliderEvents","sliders","i","slider","beginSliderMoving","foregroundSlider","Tracker","params","_state","targets","getTrackerTargets","renderer","root","css","msTouchAction","_docEvents","selectedArea","_","events","getDocument","getRootOffset","left","prototype","constructor","dispose","off","update","behavior"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/range_selector/tracker.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    pointerEvents as msPointerEnabled\r\n} from \"../../core/utils/support\";\r\nvar MIN_MANUAL_SELECTING_WIDTH = 10;\r\nvar window = getWindow();\r\n\r\nfunction isLeftButtonPressed(event) {\r\n    var e = event || window.event;\r\n    var originalEvent = e.originalEvent;\r\n    var touches = e.touches;\r\n    var pointerType = originalEvent ? originalEvent.pointerType : false;\r\n    var eventTouches = originalEvent ? originalEvent.touches : false;\r\n    var isMSPointerLeftClick = originalEvent && void 0 !== pointerType && (pointerType === (originalEvent.MSPOINTER_TYPE_TOUCH || \"touch\") || pointerType === (originalEvent.MSPOINTER_TYPE_MOUSE || \"mouse\") && 1 === originalEvent.buttons);\r\n    var isTouches = touches && touches.length > 0 || eventTouches && eventTouches.length > 0;\r\n    return 1 === e.which || isMSPointerLeftClick || isTouches\r\n}\r\n\r\nfunction isMultiTouches(event) {\r\n    var originalEvent = event.originalEvent;\r\n    var touches = event.touches;\r\n    var eventTouches = originalEvent && originalEvent.touches;\r\n    return touches && touches.length > 1 || eventTouches && eventTouches.length > 1 || null\r\n}\r\n\r\nfunction preventDefault(e) {\r\n    if (!isMultiTouches(e)) {\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nfunction stopPropagationAndPreventDefault(e) {\r\n    if (!isMultiTouches(e)) {\r\n        e.stopPropagation();\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nfunction isTouchEventArgs(e) {\r\n    return e && e.type && 0 === e.type.indexOf(\"touch\")\r\n}\r\n\r\nfunction getEventPageX(event) {\r\n    var originalEvent = event.originalEvent;\r\n    var result = 0;\r\n    if (event.pageX) {\r\n        result = event.pageX\r\n    } else if (originalEvent && originalEvent.pageX) {\r\n        result = originalEvent.pageX\r\n    }\r\n    if (originalEvent && originalEvent.touches) {\r\n        if (originalEvent.touches.length > 0) {\r\n            result = originalEvent.touches[0].pageX\r\n        } else if (originalEvent.changedTouches.length > 0) {\r\n            result = originalEvent.changedTouches[0].pageX\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction initializeAreaEvents(controller, area, state, getRootOffsetLeft) {\r\n    var isTouchEvent;\r\n    var isActive = false;\r\n    var initialPosition;\r\n    var movingHandler = null;\r\n    var docEvents = {\r\n        [pointerEvents.move](e) {\r\n            var position;\r\n            var offset;\r\n            if (isTouchEvent !== isTouchEventArgs(e)) {\r\n                return\r\n            }\r\n            if (!isLeftButtonPressed(e)) {\r\n                cancel(e)\r\n            }\r\n            if (isActive) {\r\n                position = getEventPageX(e);\r\n                offset = getRootOffsetLeft();\r\n                if (movingHandler) {\r\n                    movingHandler(position - offset, e)\r\n                } else if (state.manualRangeSelectionEnabled && Math.abs(initialPosition - position) >= MIN_MANUAL_SELECTING_WIDTH) {\r\n                    movingHandler = controller.placeSliderAndBeginMoving(initialPosition - offset, position - offset, e)\r\n                }\r\n            }\r\n        },\r\n        [pointerEvents.up](e) {\r\n            var position;\r\n            if (isActive) {\r\n                position = getEventPageX(e);\r\n                if (!movingHandler && state.moveSelectedRangeByClick && Math.abs(initialPosition - position) < MIN_MANUAL_SELECTING_WIDTH) {\r\n                    controller.moveSelectedArea(position - getRootOffsetLeft(), e)\r\n                }\r\n                cancel(e)\r\n            }\r\n        }\r\n    };\r\n\r\n    function cancel(e) {\r\n        if (isActive) {\r\n            isActive = false;\r\n            if (movingHandler) {\r\n                movingHandler.complete(e);\r\n                movingHandler = null\r\n            }\r\n        }\r\n    }\r\n    area.on(pointerEvents.down, (function(e) {\r\n        if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\r\n            return\r\n        }\r\n        isActive = true;\r\n        isTouchEvent = isTouchEventArgs(e);\r\n        initialPosition = getEventPageX(e)\r\n    }));\r\n    return docEvents\r\n}\r\n\r\nfunction initializeSelectedAreaEvents(controller, area, state, getRootOffsetLeft) {\r\n    var isTouchEvent;\r\n    var isActive = false;\r\n    var movingHandler = null;\r\n    var docEvents = {\r\n        [pointerEvents.move](e) {\r\n            if (isTouchEvent !== isTouchEventArgs(e)) {\r\n                return\r\n            }\r\n            if (!isLeftButtonPressed(e)) {\r\n                cancel(e)\r\n            }\r\n            if (isActive) {\r\n                preventDefault(e);\r\n                movingHandler(getEventPageX(e) - getRootOffsetLeft(), e)\r\n            }\r\n        },\r\n        [pointerEvents.up]: cancel\r\n    };\r\n\r\n    function cancel(e) {\r\n        if (isActive) {\r\n            isActive = false;\r\n            movingHandler.complete(e);\r\n            movingHandler = null\r\n        }\r\n    }\r\n    area.on(pointerEvents.down, (function(e) {\r\n        if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\r\n            return\r\n        }\r\n        isActive = true;\r\n        isTouchEvent = isTouchEventArgs(e);\r\n        movingHandler = controller.beginSelectedAreaMoving(getEventPageX(e) - getRootOffsetLeft());\r\n        stopPropagationAndPreventDefault(e)\r\n    }));\r\n    return docEvents\r\n}\r\n\r\nfunction initializeSliderEvents(controller, sliders, state, getRootOffsetLeft) {\r\n    var isTouchEvent;\r\n    var isActive = false;\r\n    var movingHandler = null;\r\n    var docEvents = {\r\n        [pointerEvents.move](e) {\r\n            if (isTouchEvent !== isTouchEventArgs(e)) {\r\n                return\r\n            }\r\n            if (!isLeftButtonPressed(e)) {\r\n                cancel(e)\r\n            }\r\n            if (isActive) {\r\n                preventDefault(e);\r\n                movingHandler(getEventPageX(e) - getRootOffsetLeft(), e)\r\n            }\r\n        },\r\n        [pointerEvents.up]: cancel\r\n    };\r\n    each(sliders, (function(i, slider) {\r\n        slider.on({\r\n            [pointerEvents.down](e) {\r\n                if (!state.enabled || !isLeftButtonPressed(e) || isActive) {\r\n                    return\r\n                }\r\n                isActive = true;\r\n                isTouchEvent = isTouchEventArgs(e);\r\n                movingHandler = controller.beginSliderMoving(i, getEventPageX(e) - getRootOffsetLeft());\r\n                stopPropagationAndPreventDefault(e)\r\n            },\r\n            [pointerEvents.move]() {\r\n                if (!movingHandler) {\r\n                    controller.foregroundSlider(i)\r\n                }\r\n            }\r\n        })\r\n    }));\r\n\r\n    function cancel(e) {\r\n        if (isActive) {\r\n            isActive = false;\r\n            movingHandler.complete(e);\r\n            movingHandler = null\r\n        }\r\n    }\r\n    return docEvents\r\n}\r\nexport function Tracker(params) {\r\n    var state = this._state = {};\r\n    var targets = params.controller.getTrackerTargets();\r\n    if (msPointerEnabled) {\r\n        params.renderer.root.css({\r\n            msTouchAction: \"pinch-zoom\"\r\n        })\r\n    }\r\n    this._docEvents = [initializeSelectedAreaEvents(params.controller, targets.selectedArea, state, getRootOffsetLeft), initializeAreaEvents(params.controller, targets.area, state, getRootOffsetLeft), initializeSliderEvents(params.controller, targets.sliders, state, getRootOffsetLeft)];\r\n    each(this._docEvents, (function(_, events) {\r\n        eventsEngine.on(domAdapter.getDocument(), events)\r\n    }));\r\n\r\n    function getRootOffsetLeft() {\r\n        return params.renderer.getRootOffset().left\r\n    }\r\n}\r\nTracker.prototype = {\r\n    constructor: Tracker,\r\n    dispose: function() {\r\n        each(this._docEvents, (function(_, events) {\r\n            eventsEngine.off(domAdapter.getDocument(), events)\r\n        }))\r\n    },\r\n    update: function(enabled, behavior) {\r\n        var state = this._state;\r\n        state.enabled = enabled;\r\n        state.moveSelectedRangeByClick = behavior.moveSelectedRangeByClick;\r\n        state.manualRangeSelectionEnabled = behavior.manualRangeSelectionEnabled\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}