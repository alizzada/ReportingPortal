{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport Widget from \"./widget/ui.widget\";\nimport { FunctionTemplate } from \"../core/templates/function_template\";\nimport registerComponent from \"../core/component_registrator\";\nimport ButtonGroup from \"./button_group\";\nimport Popup from \"./popup\";\nimport List from \"./list\";\nimport { compileGetter } from \"../core/utils/data\";\nimport { getPublicElement } from \"../core/element\";\nimport { getImageContainer } from \"../core/utils/icon\";\nimport DataHelperMixin from \"../data_helper\";\nimport { DataSource } from \"../data/data_source/data_source\";\nimport ArrayStore from \"../data/array_store\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { extend } from \"../core/utils/extend\";\nimport { isPlainObject, isDefined } from \"../core/utils/type\";\nimport { ensureDefined, noop } from \"../core/utils/common\";\nimport Guid from \"../core/guid\";\nimport { getElementWidth, getSizeValue } from \"./drop_down_editor/utils\";\nimport messageLocalization from \"../localization/message\";\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\nvar DropDownButton = Widget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      itemTemplate: \"item\",\n      keyExpr: \"this\",\n      displayExpr: \"this\",\n      selectedItem: null,\n      selectedItemKey: null,\n      stylingMode: \"outlined\",\n      deferRendering: true,\n      noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\n      useSelectMode: false,\n      splitButton: false,\n      showArrowIcon: true,\n      text: \"\",\n      icon: void 0,\n      onButtonClick: null,\n      onSelectionChanged: null,\n      onItemClick: null,\n      opened: false,\n      items: null,\n      dataSource: null,\n      focusStateEnabled: true,\n      hoverStateEnabled: true,\n      dropDownOptions: {},\n      dropDownContentTemplate: \"content\",\n      wrapItemText: false,\n      useItemTextAsTitle: true,\n      grouped: false,\n      groupTemplate: \"group\",\n      buttonGroupOptions: {}\n    });\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    extend(this._optionsByReference, {\n      selectedItem: true\n    });\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._createItemClickAction();\n\n    this._createActionClickAction();\n\n    this._createSelectionChangedAction();\n\n    this._initDataSource();\n\n    this._compileKeyGetter();\n\n    this._compileDisplayGetter();\n\n    this._itemsToDataSource(this.option(\"items\"));\n\n    this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\n\n    this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"));\n  },\n  _initTemplates: function _initTemplates() {\n    var _this = this;\n\n    this._templateManager.addDefaultTemplates({\n      content: new FunctionTemplate(function (options) {\n        var $popupContent = $(options.container);\n        var $listContainer = $(\"<div>\").appendTo($popupContent);\n        _this._list = _this._createComponent($listContainer, List, _this._listOptions());\n\n        _this._list.registerKeyHandler(\"escape\", _this._escHandler.bind(_this));\n\n        _this._list.registerKeyHandler(\"tab\", _this._escHandler.bind(_this));\n\n        _this._list.registerKeyHandler(\"leftArrow\", _this._escHandler.bind(_this));\n\n        _this._list.registerKeyHandler(\"rightArrow\", _this._escHandler.bind(_this));\n      })\n    });\n\n    this.callBase();\n  },\n  _itemsToDataSource: function _itemsToDataSource(value) {\n    if (!this._dataSource) {\n      this._dataSource = new DataSource({\n        store: new ArrayStore({\n          key: this._getKey(),\n          data: value\n        }),\n        pageSize: 0\n      });\n    }\n  },\n  _getKey: function _getKey() {\n    var _this$_dataSource;\n\n    var keyExpr = this.option(\"keyExpr\");\n    var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\n    return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr;\n  },\n  _compileKeyGetter: function _compileKeyGetter() {\n    this._keyGetter = compileGetter(this._getKey());\n  },\n  _compileDisplayGetter: function _compileDisplayGetter() {\n    this._displayGetter = compileGetter(this.option(\"displayExpr\"));\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n    this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\n\n    this._renderButtonGroup();\n\n    this._updateArrowClass();\n\n    if (isDefined(this.option(\"selectedItemKey\"))) {\n      this._loadSelectedItem().done(this._updateActionButton.bind(this));\n    }\n  },\n  _renderFocusTarget: noop,\n  _render: function _render() {\n    if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\n      this._renderPopup();\n    }\n\n    this.callBase();\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    if (this._popup) {\n      this._renderPopupContent();\n    }\n\n    return this.callBase();\n  },\n  _loadSelectedItem: function _loadSelectedItem() {\n    var d = new Deferred();\n\n    if (this._list && void 0 !== this._lastSelectedItemData) {\n      var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\n      return d.resolve(cachedResult);\n    }\n\n    this._lastSelectedItemData = void 0;\n    var selectedItemKey = this.option(\"selectedItemKey\");\n\n    this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(function () {\n      d.resolve(null);\n    });\n\n    return d.promise();\n  },\n  _createActionClickAction: function _createActionClickAction() {\n    this._actionClickAction = this._createActionByOption(\"onButtonClick\");\n  },\n  _createSelectionChangedAction: function _createSelectionChangedAction() {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  },\n  _createItemClickAction: function _createItemClickAction() {\n    this._itemClickAction = this._createActionByOption(\"onItemClick\");\n  },\n  _fireSelectionChangedAction: function _fireSelectionChangedAction(_ref) {\n    var previousValue = _ref.previousValue,\n        value = _ref.value;\n\n    this._selectionChangedAction({\n      item: value,\n      previousItem: previousValue\n    });\n  },\n  _fireItemClickAction: function _fireItemClickAction(_ref2) {\n    var event = _ref2.event,\n        itemElement = _ref2.itemElement,\n        itemData = _ref2.itemData;\n    return this._itemClickAction({\n      event: event,\n      itemElement: itemElement,\n      itemData: this._actionItem || itemData\n    });\n  },\n  _actionButtonConfig: function _actionButtonConfig() {\n    return {\n      text: this.option(\"text\"),\n      icon: this.option(\"icon\"),\n      elementAttr: {\n        class: DROP_DOWN_BUTTON_ACTION_CLASS\n      }\n    };\n  },\n  _getButtonGroupItems: function _getButtonGroupItems() {\n    var items = [];\n    items.push(this._actionButtonConfig());\n\n    if (this.option(\"splitButton\")) {\n      items.push({\n        icon: \"spindown\",\n        elementAttr: {\n          class: DROP_DOWN_BUTTON_TOGGLE_CLASS\n        }\n      });\n    }\n\n    return items;\n  },\n  _buttonGroupItemClick: function _buttonGroupItemClick(_ref3) {\n    var event = _ref3.event,\n        itemData = _ref3.itemData;\n    var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\n    var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\n\n    if (isToggleButton) {\n      this.toggle();\n    } else if (isActionButton) {\n      this._actionClickAction({\n        event: event,\n        selectedItem: this.option(\"selectedItem\")\n      });\n\n      if (!this.option(\"splitButton\")) {\n        this.toggle();\n      }\n    }\n  },\n  _buttonGroupOptions: function _buttonGroupOptions() {\n    var _this2 = this;\n\n    return extend({\n      items: this._getButtonGroupItems(),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      onItemClick: this._buttonGroupItemClick.bind(this),\n      width: \"100%\",\n      height: \"100%\",\n      stylingMode: this.option(\"stylingMode\"),\n      selectionMode: \"none\",\n      tabIndex: this.option(\"tabIndex\"),\n      onKeyboardHandled: function onKeyboardHandled(e) {\n        return _this2._keyboardHandler(e);\n      },\n      buttonTemplate: function buttonTemplate(_ref4, buttonContent) {\n        var text = _ref4.text,\n            icon = _ref4.icon;\n\n        if (_this2.option(\"splitButton\") || !_this2.option(\"showArrowIcon\")) {\n          return \"content\";\n        }\n\n        var $firstIcon = getImageContainer(icon);\n        var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\n        var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\n        $(buttonContent).append($firstIcon, $textContainer, $secondIcon);\n      }\n    }, this._options.cache(\"buttonGroupOptions\"));\n  },\n  _renderPopupContent: function _renderPopupContent() {\n    var $content = this._popup.$content();\n\n    var template = this._getTemplateByOption(\"dropDownContentTemplate\");\n\n    $content.empty();\n    this._popupContentId = \"dx-\" + new Guid();\n    this.setAria(\"id\", this._popupContentId, $content);\n    return template.render({\n      container: getPublicElement($content),\n      model: this.option(\"items\") || this._dataSource\n    });\n  },\n  _popupOptions: function _popupOptions() {\n    var _this3 = this;\n\n    var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    return extend({\n      dragEnabled: false,\n      focusStateEnabled: false,\n      deferRendering: this.option(\"deferRendering\"),\n      closeOnOutsideClick: function closeOnOutsideClick(e) {\n        var $element = _this3.$element();\n\n        var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\n        return !$buttonClicked.is($element);\n      },\n      showTitle: false,\n      animation: {\n        show: {\n          type: \"fade\",\n          duration: 0,\n          from: 0,\n          to: 1\n        },\n        hide: {\n          type: \"fade\",\n          duration: 400,\n          from: 1,\n          to: 0\n        }\n      },\n      width: function width() {\n        return getElementWidth(_this3.$element());\n      },\n      height: \"auto\",\n      shading: false,\n      position: {\n        of: this.$element(),\n        collision: \"flipfit\",\n        my: horizontalAlignment + \" top\",\n        at: horizontalAlignment + \" bottom\"\n      }\n    }, this._options.cache(\"dropDownOptions\"), {\n      visible: this.option(\"opened\")\n    });\n  },\n  _listOptions: function _listOptions() {\n    var _this4 = this;\n\n    var selectedItemKey = this.option(\"selectedItemKey\");\n    var useSelectMode = this.option(\"useSelectMode\");\n    return {\n      selectionMode: useSelectMode ? \"single\" : \"none\",\n      wrapItemText: this.option(\"wrapItemText\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\n      onContentReady: function onContentReady() {\n        return _this4._fireContentReadyAction();\n      },\n      selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\n      grouped: this.option(\"grouped\"),\n      groupTemplate: this.option(\"groupTemplate\"),\n      keyExpr: this._getKey(),\n      noDataText: this.option(\"noDataText\"),\n      displayExpr: this.option(\"displayExpr\"),\n      itemTemplate: this.option(\"itemTemplate\"),\n      items: this.option(\"items\"),\n      dataSource: this._dataSource,\n      onItemClick: function onItemClick(e) {\n        if (!_this4.option(\"useSelectMode\")) {\n          _this4._lastSelectedItemData = e.itemData;\n        }\n\n        _this4.option(\"selectedItemKey\", _this4._keyGetter(e.itemData));\n\n        var actionResult = _this4._fireItemClickAction(e);\n\n        if (false !== actionResult) {\n          _this4.toggle(false);\n\n          _this4._buttonGroup.focus();\n        }\n      }\n    };\n  },\n  _upDownKeyHandler: function _upDownKeyHandler() {\n    if (this._popup && this._popup.option(\"visible\") && this._list) {\n      this._list.focus();\n    } else {\n      this.open();\n    }\n\n    return true;\n  },\n  _escHandler: function _escHandler() {\n    this.close();\n\n    this._buttonGroup.focus();\n\n    return true;\n  },\n  _tabHandler: function _tabHandler() {\n    this.close();\n    return true;\n  },\n  _renderPopup: function _renderPopup() {\n    var $popup = $(\"<div>\");\n    this.$element().append($popup);\n    this._popup = this._createComponent($popup, Popup, this._popupOptions());\n\n    this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\n\n    this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\n\n    this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\n\n    this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\n\n    this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\");\n  },\n  _popupHidingHandler: function _popupHidingHandler() {\n    this.option(\"opened\", false);\n    this.setAria({\n      expanded: false,\n      owns: void 0\n    });\n  },\n  _popupOptionChanged: function _popupOptionChanged(args) {\n    var options = Widget.getOptionsFromContainer(args);\n\n    this._setPopupOption(options);\n\n    var optionsKeys = Object.keys(options);\n\n    if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\n      this._dimensionChanged();\n    }\n  },\n  _dimensionChanged: function _dimensionChanged() {\n    var _this5 = this;\n\n    var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\n\n    if (void 0 === popupWidth) {\n      this._setPopupOption(\"width\", function () {\n        return getElementWidth(_this5.$element());\n      });\n    }\n  },\n  _setPopupOption: function _setPopupOption(optionName, value) {\n    this._setWidgetOption(\"_popup\", arguments);\n  },\n  _popupShowingHandler: function _popupShowingHandler() {\n    this.option(\"opened\", true);\n    this.setAria({\n      expanded: true,\n      owns: this._popupContentId\n    });\n  },\n  _renderButtonGroup: function _renderButtonGroup() {\n    var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\n\n    if (!this._buttonGroup) {\n      this.$element().append($buttonGroup);\n    }\n\n    this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\n\n    this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\n\n    this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\n\n    this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\n\n    this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\n\n    this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\n  },\n  _updateArrowClass: function _updateArrowClass() {\n    var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\n    this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow);\n  },\n  toggle: function toggle(visible) {\n    if (!this._popup) {\n      this._renderPopup();\n\n      this._renderContent();\n    }\n\n    return this._popup.toggle(visible);\n  },\n  open: function open() {\n    return this.toggle(true);\n  },\n  close: function close() {\n    return this.toggle(false);\n  },\n  _setListOption: function _setListOption(name, value) {\n    this._list && this._list.option(name, value);\n  },\n  _getDisplayValue: function _getDisplayValue(item) {\n    var isPrimitiveItem = !isPlainObject(item);\n    var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\n    return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\";\n  },\n  _updateActionButton: function _updateActionButton(selectedItem) {\n    if (this.option(\"useSelectMode\")) {\n      this.option({\n        text: this._getDisplayValue(selectedItem),\n        icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\n      });\n    }\n\n    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n\n    this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem));\n  },\n  _clean: function _clean() {\n    this._list && this._list.$element().remove();\n    this._popup && this._popup.$element().remove();\n  },\n  _selectedItemKeyChanged: function _selectedItemKeyChanged(value) {\n    var _this6 = this;\n\n    this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\n\n    var previousItem = this.option(\"selectedItem\");\n\n    this._loadSelectedItem().done(function (selectedItem) {\n      _this6._updateActionButton(selectedItem);\n\n      if (_this6._displayGetter(previousItem) !== _this6._displayGetter(selectedItem)) {\n        _this6._fireSelectionChangedAction({\n          previousValue: previousItem,\n          value: selectedItem\n        });\n      }\n    });\n  },\n  _actionButtonOptionChanged: function _actionButtonOptionChanged(_ref5) {\n    var name = _ref5.name,\n        value = _ref5.value;\n    var newConfig = {};\n    newConfig[name] = value;\n\n    this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\n\n    this._popup && this._popup.repaint();\n  },\n  _selectModeChanged: function _selectModeChanged(value) {\n    if (value) {\n      this._setListOption(\"selectionMode\", \"single\");\n\n      var selectedItemKey = this.option(\"selectedItemKey\");\n\n      this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\n    } else {\n      this._setListOption(\"selectionMode\", \"none\");\n\n      this.option({\n        selectedItemKey: void 0,\n        selectedItem: void 0\n      });\n    }\n  },\n  _updateItemCollection: function _updateItemCollection(optionName) {\n    var _this7 = this;\n\n    var selectedItemKey = this.option(\"selectedItemKey\");\n\n    this._setListOption(\"selectedItem\", null);\n\n    this._setWidgetOption(\"_list\", [optionName]);\n\n    if (isDefined(selectedItemKey)) {\n      this._loadSelectedItem().done(function (selectedItem) {\n        _this7._setListOption(\"selectedItemKeys\", [selectedItemKey]);\n\n        _this7._setListOption(\"selectedItem\", selectedItem);\n      }).fail(function (error) {\n        _this7._setListOption(\"selectedItemKeys\", []);\n      }).always(this._updateActionButton.bind(this));\n    }\n  },\n  _updateDataSource: function _updateDataSource() {\n    var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\n    this._dataSource = void 0;\n\n    this._itemsToDataSource(items);\n\n    this._updateKeyExpr();\n  },\n  _updateKeyExpr: function _updateKeyExpr() {\n    this._compileKeyGetter();\n\n    this._setListOption(\"keyExpr\", this._getKey());\n  },\n  focus: function focus() {\n    this._buttonGroup.focus();\n  },\n  _optionChanged: function _optionChanged(args) {\n    var _this$_popup;\n\n    var name = args.name,\n        value = args.value;\n\n    switch (name) {\n      case \"useSelectMode\":\n        this._selectModeChanged(value);\n\n        break;\n\n      case \"splitButton\":\n        this._updateArrowClass();\n\n        this._renderButtonGroup();\n\n        break;\n\n      case \"displayExpr\":\n        this._compileDisplayGetter();\n\n        this._setListOption(name, value);\n\n        this._updateActionButton(this.option(\"selectedItem\"));\n\n        break;\n\n      case \"keyExpr\":\n        this._updateDataSource();\n\n        break;\n\n      case \"buttonGroupOptions\":\n        this._innerWidgetOptionChanged(this._buttonGroup, args);\n\n        break;\n\n      case \"dropDownOptions\":\n        if (\"dropDownOptions.visible\" === args.fullName) {\n          break;\n        }\n\n        if (void 0 !== args.value.visible) {\n          delete args.value.visible;\n        }\n\n        this._popupOptionChanged(args);\n\n        this._innerWidgetOptionChanged(this._popup, args);\n\n        break;\n\n      case \"opened\":\n        this.toggle(value);\n        break;\n\n      case \"focusStateEnabled\":\n      case \"hoverStateEnabled\":\n        this._setListOption(name, value);\n\n        this._buttonGroup.option(name, value);\n\n        this.callBase(args);\n        break;\n\n      case \"items\":\n        this._updateDataSource(this.option(\"items\"));\n\n        this._updateItemCollection(name);\n\n        break;\n\n      case \"dataSource\":\n        if (Array.isArray(value)) {\n          this._updateDataSource(this.option(\"dataSource\"));\n        } else {\n          this._initDataSource();\n\n          this._updateKeyExpr();\n        }\n\n        this._updateItemCollection(name);\n\n        break;\n\n      case \"icon\":\n      case \"text\":\n        this._actionButtonOptionChanged(args);\n\n        break;\n\n      case \"showArrowIcon\":\n        this._updateArrowClass();\n\n        this._buttonGroup.repaint();\n\n        this._popup && this._popup.repaint();\n        break;\n\n      case \"width\":\n      case \"height\":\n        this.callBase(args);\n        null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\n        break;\n\n      case \"stylingMode\":\n        this._buttonGroup.option(name, value);\n\n        break;\n\n      case \"itemTemplate\":\n      case \"grouped\":\n      case \"noDataText\":\n      case \"groupTemplate\":\n      case \"wrapItemText\":\n      case \"useItemTextAsTitle\":\n        this._setListOption(name, value);\n\n        break;\n\n      case \"dropDownContentTemplate\":\n        this._renderContent();\n\n        break;\n\n      case \"selectedItemKey\":\n        this._selectedItemKeyChanged(value);\n\n        break;\n\n      case \"selectedItem\":\n        break;\n\n      case \"onItemClick\":\n        this._createItemClickAction();\n\n        break;\n\n      case \"onButtonClick\":\n        this._createActionClickAction();\n\n        break;\n\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n\n        break;\n\n      case \"deferRendering\":\n        this.toggle(this.option(\"opened\"));\n        break;\n\n      case \"tabIndex\":\n        this._buttonGroup.option(name, value);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n}).include(DataHelperMixin);\nregisterComponent(\"dxDropDownButton\", DropDownButton);\nexport default DropDownButton;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/drop_down_button.js"],"names":["$","Widget","FunctionTemplate","registerComponent","ButtonGroup","Popup","List","compileGetter","getPublicElement","getImageContainer","DataHelperMixin","DataSource","ArrayStore","Deferred","extend","isPlainObject","isDefined","ensureDefined","noop","Guid","getElementWidth","getSizeValue","messageLocalization","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","inherit","_getDefaultOptions","callBase","itemTemplate","keyExpr","displayExpr","selectedItem","selectedItemKey","stylingMode","deferRendering","noDataText","format","useSelectMode","splitButton","showArrowIcon","text","icon","onButtonClick","onSelectionChanged","onItemClick","opened","items","dataSource","focusStateEnabled","hoverStateEnabled","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","grouped","groupTemplate","buttonGroupOptions","_setOptionsByReference","_optionsByReference","_init","_createItemClickAction","_createActionClickAction","_createSelectionChangedAction","_initDataSource","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","option","_options","cache","_initTemplates","_templateManager","addDefaultTemplates","content","options","$popupContent","container","$listContainer","appendTo","_list","_createComponent","_listOptions","registerKeyHandler","_escHandler","bind","value","_dataSource","store","key","_getKey","data","pageSize","_this$_dataSource","storeKey","_keyGetter","_displayGetter","_initMarkup","$element","addClass","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","done","_updateActionButton","_renderFocusTarget","_render","_renderPopup","_renderContentImpl","_popup","_renderPopupContent","d","_lastSelectedItemData","cachedResult","resolve","_loadSingle","fail","promise","_actionClickAction","_createActionByOption","_selectionChangedAction","_itemClickAction","_fireSelectionChangedAction","_ref","previousValue","item","previousItem","_fireItemClickAction","_ref2","event","itemElement","itemData","_actionItem","_actionButtonConfig","elementAttr","class","_getButtonGroupItems","push","_buttonGroupItemClick","_ref3","isActionButton","isToggleButton","toggle","_buttonGroupOptions","width","height","selectionMode","tabIndex","onKeyboardHandled","e","_keyboardHandler","buttonTemplate","_ref4","buttonContent","$firstIcon","$textContainer","$secondIcon","append","$content","template","_getTemplateByOption","empty","_popupContentId","setAria","render","model","_popupOptions","horizontalAlignment","dragEnabled","closeOnOutsideClick","$buttonClicked","target","closest","concat","is","showTitle","animation","show","type","duration","from","to","hide","shading","position","of","collision","my","at","visible","onContentReady","_fireContentReadyAction","selectedItemKeys","actionResult","_buttonGroup","focus","_upDownKeyHandler","open","close","_tabHandler","$popup","$wrapper","on","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","expanded","owns","_popupOptionChanged","args","getOptionsFromContainer","_setPopupOption","optionsKeys","Object","keys","indexOf","_dimensionChanged","popupWidth","optionName","_setWidgetOption","arguments","$buttonGroup","hasArrow","toggleClass","_renderContent","_setListOption","name","_getDisplayValue","isPrimitiveItem","displayValue","String","_setOptionWithoutOptionChange","_clean","remove","_selectedItemKeyChanged","_actionButtonOptionChanged","_ref5","newConfig","repaint","_selectModeChanged","_updateItemCollection","error","always","_updateDataSource","length","_updateKeyExpr","_optionChanged","_this$_popup","_innerWidgetOptionChanged","fullName","Array","isArray","include"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,kBAAd;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SACIC,gBADJ,QAEO,qCAFP;AAGA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SACIC,aADJ,QAEO,oBAFP;AAGA,SACIC,gBADJ,QAEO,iBAFP;AAGA,SACIC,iBADJ,QAEO,oBAFP;AAGA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,SACIC,UADJ,QAEO,iCAFP;AAGA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SACIC,QADJ,QAEO,wBAFP;AAGA,SACIC,MADJ,QAEO,sBAFP;AAGA,SACIC,aADJ,EAEIC,SAFJ,QAGO,oBAHP;AAIA,SACIC,aADJ,EAEIC,IAFJ,QAGO,sBAHP;AAIA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SACIC,eADJ,EAEIC,YAFJ,QAGO,0BAHP;AAIA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA,IAAIC,sBAAsB,GAAG,mBAA7B;AACA,IAAIC,wBAAwB,GAAG,2BAA/B;AACA,IAAIC,6BAA6B,GAAG,0BAApC;AACA,IAAIC,6BAA6B,GAAG,0BAApC;AACA,IAAIC,gCAAgC,GAAG,6BAAvC;AACA,IAAIC,oCAAoC,GAAG,iCAA3C;AACA,IAAIC,oBAAoB,GAAG,gBAA3B;AACA,IAAIC,mBAAmB,GAAG,eAA1B;AACA,IAAIC,cAAc,GAAG9B,MAAM,CAAC+B,OAAP,CAAe;AAChCC,EAAAA,kBADgC,gCACX;AACjB,WAAOnB,MAAM,CAAC,KAAKoB,QAAL,EAAD,EAAkB;AAC3BC,MAAAA,YAAY,EAAE,MADa;AAE3BC,MAAAA,OAAO,EAAE,MAFkB;AAG3BC,MAAAA,WAAW,EAAE,MAHc;AAI3BC,MAAAA,YAAY,EAAE,IAJa;AAK3BC,MAAAA,eAAe,EAAE,IALU;AAM3BC,MAAAA,WAAW,EAAE,UANc;AAO3BC,MAAAA,cAAc,EAAE,IAPW;AAQ3BC,MAAAA,UAAU,EAAEpB,mBAAmB,CAACqB,MAApB,CAA2B,+BAA3B,CARe;AAS3BC,MAAAA,aAAa,EAAE,KATY;AAU3BC,MAAAA,WAAW,EAAE,KAVc;AAW3BC,MAAAA,aAAa,EAAE,IAXY;AAY3BC,MAAAA,IAAI,EAAE,EAZqB;AAa3BC,MAAAA,IAAI,EAAE,KAAK,CAbgB;AAc3BC,MAAAA,aAAa,EAAE,IAdY;AAe3BC,MAAAA,kBAAkB,EAAE,IAfO;AAgB3BC,MAAAA,WAAW,EAAE,IAhBc;AAiB3BC,MAAAA,MAAM,EAAE,KAjBmB;AAkB3BC,MAAAA,KAAK,EAAE,IAlBoB;AAmB3BC,MAAAA,UAAU,EAAE,IAnBe;AAoB3BC,MAAAA,iBAAiB,EAAE,IApBQ;AAqB3BC,MAAAA,iBAAiB,EAAE,IArBQ;AAsB3BC,MAAAA,eAAe,EAAE,EAtBU;AAuB3BC,MAAAA,uBAAuB,EAAE,SAvBE;AAwB3BC,MAAAA,YAAY,EAAE,KAxBa;AAyB3BC,MAAAA,kBAAkB,EAAE,IAzBO;AA0B3BC,MAAAA,OAAO,EAAE,KA1BkB;AA2B3BC,MAAAA,aAAa,EAAE,OA3BY;AA4B3BC,MAAAA,kBAAkB,EAAE;AA5BO,KAAlB,CAAb;AA8BH,GAhC+B;AAiChCC,EAAAA,sBAjCgC,oCAiCP;AACrB,SAAK9B,QAAL;AACApB,IAAAA,MAAM,CAAC,KAAKmD,mBAAN,EAA2B;AAC7B3B,MAAAA,YAAY,EAAE;AADe,KAA3B,CAAN;AAGH,GAtC+B;AAuChC4B,EAAAA,KAvCgC,mBAuCxB;AACJ,SAAKhC,QAAL;;AACA,SAAKiC,sBAAL;;AACA,SAAKC,wBAAL;;AACA,SAAKC,6BAAL;;AACA,SAAKC,eAAL;;AACA,SAAKC,iBAAL;;AACA,SAAKC,qBAAL;;AACA,SAAKC,kBAAL,CAAwB,KAAKC,MAAL,CAAY,OAAZ,CAAxB;;AACA,SAAKC,QAAL,CAAcC,KAAd,CAAoB,oBAApB,EAA0C,KAAKF,MAAL,CAAY,oBAAZ,CAA1C;;AACA,SAAKC,QAAL,CAAcC,KAAd,CAAoB,iBAApB,EAAuC,KAAKF,MAAL,CAAY,iBAAZ,CAAvC;AACH,GAlD+B;AAmDhCG,EAAAA,cAnDgC,4BAmDf;AAAA;;AACb,SAAKC,gBAAL,CAAsBC,mBAAtB,CAA0C;AACtCC,MAAAA,OAAO,EAAE,IAAI9E,gBAAJ,CAAqB,UAAA+E,OAAO,EAAI;AACrC,YAAIC,aAAa,GAAGlF,CAAC,CAACiF,OAAO,CAACE,SAAT,CAArB;AACA,YAAIC,cAAc,GAAGpF,CAAC,CAAC,OAAD,CAAD,CAAWqF,QAAX,CAAoBH,aAApB,CAArB;AACA,QAAA,KAAI,CAACI,KAAL,GAAa,KAAI,CAACC,gBAAL,CAAsBH,cAAtB,EAAsC9E,IAAtC,EAA4C,KAAI,CAACkF,YAAL,EAA5C,CAAb;;AACA,QAAA,KAAI,CAACF,KAAL,CAAWG,kBAAX,CAA8B,QAA9B,EAAwC,KAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsB,KAAtB,CAAxC;;AACA,QAAA,KAAI,CAACL,KAAL,CAAWG,kBAAX,CAA8B,KAA9B,EAAqC,KAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsB,KAAtB,CAArC;;AACA,QAAA,KAAI,CAACL,KAAL,CAAWG,kBAAX,CAA8B,WAA9B,EAA2C,KAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsB,KAAtB,CAA3C;;AACA,QAAA,KAAI,CAACL,KAAL,CAAWG,kBAAX,CAA8B,YAA9B,EAA4C,KAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsB,KAAtB,CAA5C;AACH,OARQ;AAD6B,KAA1C;;AAWA,SAAKzD,QAAL;AACH,GAhE+B;AAiEhCuC,EAAAA,kBAAkB,EAAE,4BAASmB,KAAT,EAAgB;AAChC,QAAI,CAAC,KAAKC,WAAV,EAAuB;AACnB,WAAKA,WAAL,GAAmB,IAAIlF,UAAJ,CAAe;AAC9BmF,QAAAA,KAAK,EAAE,IAAIlF,UAAJ,CAAe;AAClBmF,UAAAA,GAAG,EAAE,KAAKC,OAAL,EADa;AAElBC,UAAAA,IAAI,EAAEL;AAFY,SAAf,CADuB;AAK9BM,QAAAA,QAAQ,EAAE;AALoB,OAAf,CAAnB;AAOH;AACJ,GA3E+B;AA4EhCF,EAAAA,OAAO,EAAE,mBAAW;AAChB,QAAIG,iBAAJ;;AACA,QAAI/D,OAAO,GAAG,KAAKsC,MAAL,CAAY,SAAZ,CAAd;AACA,QAAI0B,QAAQ,GAAG,UAAUD,iBAAiB,GAAG,KAAKN,WAAnC,KAAmD,KAAK,CAAL,KAAWM,iBAA9D,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAACJ,GAAlB,EAA1G;AACA,WAAO/E,SAAS,CAACoF,QAAD,CAAT,KAAwB,CAACpF,SAAS,CAACoB,OAAD,CAAV,IAAuB,WAAWA,OAA1D,IAAqEgE,QAArE,GAAgFhE,OAAvF;AACH,GAjF+B;AAkFhCmC,EAAAA,iBAlFgC,+BAkFZ;AAChB,SAAK8B,UAAL,GAAkB9F,aAAa,CAAC,KAAKyF,OAAL,EAAD,CAA/B;AACH,GApF+B;AAqFhCxB,EAAAA,qBArFgC,mCAqFR;AACpB,SAAK8B,cAAL,GAAsB/F,aAAa,CAAC,KAAKmE,MAAL,CAAY,aAAZ,CAAD,CAAnC;AACH,GAvF+B;AAwFhC6B,EAAAA,WAxFgC,yBAwFlB;AACV,SAAKrE,QAAL;AACA,SAAKsE,QAAL,GAAgBC,QAAhB,CAAyBlF,sBAAzB;;AACA,SAAKmF,kBAAL;;AACA,SAAKC,iBAAL;;AACA,QAAI3F,SAAS,CAAC,KAAK0D,MAAL,CAAY,iBAAZ,CAAD,CAAb,EAA+C;AAC3C,WAAKkC,iBAAL,GAAyBC,IAAzB,CAA8B,KAAKC,mBAAL,CAAyBnB,IAAzB,CAA8B,IAA9B,CAA9B;AACH;AACJ,GAhG+B;AAiGhCoB,EAAAA,kBAAkB,EAAE7F,IAjGY;AAkGhC8F,EAAAA,OAlGgC,qBAkGtB;AACN,QAAI,CAAC,KAAKtC,MAAL,CAAY,gBAAZ,CAAD,IAAkC,KAAKA,MAAL,CAAY,QAAZ,CAAtC,EAA6D;AACzD,WAAKuC,YAAL;AACH;;AACD,SAAK/E,QAAL;AACH,GAvG+B;AAwGhCgF,EAAAA,kBAxGgC,gCAwGX;AACjB,QAAI,KAAKC,MAAT,EAAiB;AACb,WAAKC,mBAAL;AACH;;AACD,WAAO,KAAKlF,QAAL,EAAP;AACH,GA7G+B;AA8GhC0E,EAAAA,iBA9GgC,+BA8GZ;AAChB,QAAIS,CAAC,GAAG,IAAIxG,QAAJ,EAAR;;AACA,QAAI,KAAKyE,KAAL,IAAc,KAAK,CAAL,KAAW,KAAKgC,qBAAlC,EAAyD;AACrD,UAAIC,YAAY,GAAG,KAAK7C,MAAL,CAAY,eAAZ,IAA+B,KAAKY,KAAL,CAAWZ,MAAX,CAAkB,cAAlB,CAA/B,GAAmE,KAAK4C,qBAA3F;AACA,aAAOD,CAAC,CAACG,OAAF,CAAUD,YAAV,CAAP;AACH;;AACD,SAAKD,qBAAL,GAA6B,KAAK,CAAlC;AACA,QAAI/E,eAAe,GAAG,KAAKmC,MAAL,CAAY,iBAAZ,CAAtB;;AACA,SAAK+C,WAAL,CAAiB,KAAKzB,OAAL,EAAjB,EAAiCzD,eAAjC,EAAkDsE,IAAlD,CAAuDQ,CAAC,CAACG,OAAzD,EAAkEE,IAAlE,CAAuE,YAAM;AACzEL,MAAAA,CAAC,CAACG,OAAF,CAAU,IAAV;AACH,KAFD;;AAGA,WAAOH,CAAC,CAACM,OAAF,EAAP;AACH,GA1H+B;AA2HhCvD,EAAAA,wBA3HgC,sCA2HL;AACvB,SAAKwD,kBAAL,GAA0B,KAAKC,qBAAL,CAA2B,eAA3B,CAA1B;AACH,GA7H+B;AA8HhCxD,EAAAA,6BA9HgC,2CA8HA;AAC5B,SAAKyD,uBAAL,GAA+B,KAAKD,qBAAL,CAA2B,oBAA3B,CAA/B;AACH,GAhI+B;AAiIhC1D,EAAAA,sBAjIgC,oCAiIP;AACrB,SAAK4D,gBAAL,GAAwB,KAAKF,qBAAL,CAA2B,aAA3B,CAAxB;AACH,GAnI+B;AAoIhCG,EAAAA,2BApIgC,uCAoIJC,IApII,EAoIE;AAC9B,QACmBC,aADnB,GAGID,IAHJ,CACIC,aADJ;AAAA,QAEWtC,KAFX,GAGIqC,IAHJ,CAEIrC,KAFJ;;AAIA,SAAKkC,uBAAL,CAA6B;AACzBK,MAAAA,IAAI,EAAEvC,KADmB;AAEzBwC,MAAAA,YAAY,EAAEF;AAFW,KAA7B;AAIH,GA7I+B;AA8IhCG,EAAAA,oBA9IgC,gCA8IXC,KA9IW,EA8IJ;AACxB,QACWC,KADX,GAIID,KAJJ,CACIC,KADJ;AAAA,QAEiBC,WAFjB,GAIIF,KAJJ,CAEIE,WAFJ;AAAA,QAGcC,QAHd,GAIIH,KAJJ,CAGIG,QAHJ;AAKA,WAAO,KAAKV,gBAAL,CAAsB;AACzBQ,MAAAA,KAAK,EAAEA,KADkB;AAEzBC,MAAAA,WAAW,EAAEA,WAFY;AAGzBC,MAAAA,QAAQ,EAAE,KAAKC,WAAL,IAAoBD;AAHL,KAAtB,CAAP;AAKH,GAzJ+B;AA0JhCE,EAAAA,mBA1JgC,iCA0JV;AAClB,WAAO;AACH5F,MAAAA,IAAI,EAAE,KAAK2B,MAAL,CAAY,MAAZ,CADH;AAEH1B,MAAAA,IAAI,EAAE,KAAK0B,MAAL,CAAY,MAAZ,CAFH;AAGHkE,MAAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAEpH;AADE;AAHV,KAAP;AAOH,GAlK+B;AAmKhCqH,EAAAA,oBAnKgC,kCAmKT;AACnB,QAAIzF,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAAC0F,IAAN,CAAW,KAAKJ,mBAAL,EAAX;;AACA,QAAI,KAAKjE,MAAL,CAAY,aAAZ,CAAJ,EAAgC;AAC5BrB,MAAAA,KAAK,CAAC0F,IAAN,CAAW;AACP/F,QAAAA,IAAI,EAAE,UADC;AAEP4F,QAAAA,WAAW,EAAE;AACTC,UAAAA,KAAK,EAAEnH;AADE;AAFN,OAAX;AAMH;;AACD,WAAO2B,KAAP;AACH,GA/K+B;AAgLhC2F,EAAAA,qBAhLgC,iCAgLVC,KAhLU,EAgLH;AACzB,QACWV,KADX,GAGIU,KAHJ,CACIV,KADJ;AAAA,QAEcE,QAFd,GAGIQ,KAHJ,CAEIR,QAFJ;AAIA,QAAIS,cAAc,GAAGT,QAAQ,CAACG,WAAT,CAAqBC,KAArB,KAA+BpH,6BAApD;AACA,QAAI0H,cAAc,GAAGV,QAAQ,CAACG,WAAT,CAAqBC,KAArB,KAA+BnH,6BAApD;;AACA,QAAIyH,cAAJ,EAAoB;AAChB,WAAKC,MAAL;AACH,KAFD,MAEO,IAAIF,cAAJ,EAAoB;AACvB,WAAKtB,kBAAL,CAAwB;AACpBW,QAAAA,KAAK,EAAEA,KADa;AAEpBjG,QAAAA,YAAY,EAAE,KAAKoC,MAAL,CAAY,cAAZ;AAFM,OAAxB;;AAIA,UAAI,CAAC,KAAKA,MAAL,CAAY,aAAZ,CAAL,EAAiC;AAC7B,aAAK0E,MAAL;AACH;AACJ;AACJ,GAlM+B;AAmMhCC,EAAAA,mBAnMgC,iCAmMV;AAAA;;AAClB,WAAOvI,MAAM,CAAC;AACVuC,MAAAA,KAAK,EAAE,KAAKyF,oBAAL,EADG;AAEVvF,MAAAA,iBAAiB,EAAE,KAAKmB,MAAL,CAAY,mBAAZ,CAFT;AAGVlB,MAAAA,iBAAiB,EAAE,KAAKkB,MAAL,CAAY,mBAAZ,CAHT;AAIVvB,MAAAA,WAAW,EAAE,KAAK6F,qBAAL,CAA2BrD,IAA3B,CAAgC,IAAhC,CAJH;AAKV2D,MAAAA,KAAK,EAAE,MALG;AAMVC,MAAAA,MAAM,EAAE,MANE;AAOV/G,MAAAA,WAAW,EAAE,KAAKkC,MAAL,CAAY,aAAZ,CAPH;AAQV8E,MAAAA,aAAa,EAAE,MARL;AASVC,MAAAA,QAAQ,EAAE,KAAK/E,MAAL,CAAY,UAAZ,CATA;AAUVgF,MAAAA,iBAAiB,EAAE,2BAAAC,CAAC;AAAA,eAAI,MAAI,CAACC,gBAAL,CAAsBD,CAAtB,CAAJ;AAAA,OAVV;AAWVE,MAAAA,cAAc,EAAE,wBAACC,KAAD,EAAQC,aAAR,EAA0B;AACtC,YACUhH,IADV,GAGI+G,KAHJ,CACI/G,IADJ;AAAA,YAEUC,IAFV,GAGI8G,KAHJ,CAEI9G,IAFJ;;AAIA,YAAI,MAAI,CAAC0B,MAAL,CAAY,aAAZ,KAA8B,CAAC,MAAI,CAACA,MAAL,CAAY,eAAZ,CAAnC,EAAiE;AAC7D,iBAAO,SAAP;AACH;;AACD,YAAIsF,UAAU,GAAGvJ,iBAAiB,CAACuC,IAAD,CAAlC;AACA,YAAIiH,cAAc,GAAGlH,IAAI,GAAG/C,CAAC,CAAC,QAAD,CAAD,CAAY+C,IAAZ,CAAiBA,IAAjB,EAAuB0D,QAAvB,CAAgC5E,oBAAhC,CAAH,GAA2D,KAAK,CAAzF;AACA,YAAIqI,WAAW,GAAGzJ,iBAAiB,CAAC,UAAD,CAAjB,CAA8BgG,QAA9B,CAAuC3E,mBAAvC,CAAlB;AACA9B,QAAAA,CAAC,CAAC+J,aAAD,CAAD,CAAiBI,MAAjB,CAAwBH,UAAxB,EAAoCC,cAApC,EAAoDC,WAApD;AACH;AAvBS,KAAD,EAwBV,KAAKvF,QAAL,CAAcC,KAAd,CAAoB,oBAApB,CAxBU,CAAb;AAyBH,GA7N+B;AA8NhCwC,EAAAA,mBA9NgC,iCA8NV;AAClB,QAAIgD,QAAQ,GAAG,KAAKjD,MAAL,CAAYiD,QAAZ,EAAf;;AACA,QAAIC,QAAQ,GAAG,KAAKC,oBAAL,CAA0B,yBAA1B,CAAf;;AACAF,IAAAA,QAAQ,CAACG,KAAT;AACA,SAAKC,eAAL,GAAuB,QAAQ,IAAIrJ,IAAJ,EAA/B;AACA,SAAKsJ,OAAL,CAAa,IAAb,EAAmB,KAAKD,eAAxB,EAAyCJ,QAAzC;AACA,WAAOC,QAAQ,CAACK,MAAT,CAAgB;AACnBvF,MAAAA,SAAS,EAAE3E,gBAAgB,CAAC4J,QAAD,CADR;AAEnBO,MAAAA,KAAK,EAAE,KAAKjG,MAAL,CAAY,OAAZ,KAAwB,KAAKmB;AAFjB,KAAhB,CAAP;AAIH,GAxO+B;AAyOhC+E,EAAAA,aAzOgC,2BAyOhB;AAAA;;AACZ,QAAIC,mBAAmB,GAAG,KAAKnG,MAAL,CAAY,YAAZ,IAA4B,OAA5B,GAAsC,MAAhE;AACA,WAAO5D,MAAM,CAAC;AACVgK,MAAAA,WAAW,EAAE,KADH;AAEVvH,MAAAA,iBAAiB,EAAE,KAFT;AAGVd,MAAAA,cAAc,EAAE,KAAKiC,MAAL,CAAY,gBAAZ,CAHN;AAIVqG,MAAAA,mBAAmB,EAAE,6BAAApB,CAAC,EAAI;AACtB,YAAInD,QAAQ,GAAG,MAAI,CAACA,QAAL,EAAf;;AACA,YAAIwE,cAAc,GAAGhL,CAAC,CAAC2J,CAAC,CAACsB,MAAH,CAAD,CAAYC,OAAZ,CAAoB,IAAIC,MAAJ,CAAW5J,sBAAX,CAApB,CAArB;AACA,eAAO,CAACyJ,cAAc,CAACI,EAAf,CAAkB5E,QAAlB,CAAR;AACH,OARS;AASV6E,MAAAA,SAAS,EAAE,KATD;AAUVC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,MADJ;AAEFC,UAAAA,QAAQ,EAAE,CAFR;AAGFC,UAAAA,IAAI,EAAE,CAHJ;AAIFC,UAAAA,EAAE,EAAE;AAJF,SADC;AAOPC,QAAAA,IAAI,EAAE;AACFJ,UAAAA,IAAI,EAAE,MADJ;AAEFC,UAAAA,QAAQ,EAAE,GAFR;AAGFC,UAAAA,IAAI,EAAE,CAHJ;AAIFC,UAAAA,EAAE,EAAE;AAJF;AAPC,OAVD;AAwBVrC,MAAAA,KAAK,EAAE;AAAA,eAAMlI,eAAe,CAAC,MAAI,CAACoF,QAAL,EAAD,CAArB;AAAA,OAxBG;AAyBV+C,MAAAA,MAAM,EAAE,MAzBE;AA0BVsC,MAAAA,OAAO,EAAE,KA1BC;AA2BVC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,EAAE,EAAE,KAAKvF,QAAL,EADE;AAENwF,QAAAA,SAAS,EAAE,SAFL;AAGNC,QAAAA,EAAE,EAAEpB,mBAAmB,GAAG,MAHpB;AAINqB,QAAAA,EAAE,EAAErB,mBAAmB,GAAG;AAJpB;AA3BA,KAAD,EAiCV,KAAKlG,QAAL,CAAcC,KAAd,CAAoB,iBAApB,CAjCU,EAiC8B;AACvCuH,MAAAA,OAAO,EAAE,KAAKzH,MAAL,CAAY,QAAZ;AAD8B,KAjC9B,CAAb;AAoCH,GA/Q+B;AAgRhCc,EAAAA,YAhRgC,0BAgRjB;AAAA;;AACX,QAAIjD,eAAe,GAAG,KAAKmC,MAAL,CAAY,iBAAZ,CAAtB;AACA,QAAI9B,aAAa,GAAG,KAAK8B,MAAL,CAAY,eAAZ,CAApB;AACA,WAAO;AACH8E,MAAAA,aAAa,EAAE5G,aAAa,GAAG,QAAH,GAAc,MADvC;AAEHe,MAAAA,YAAY,EAAE,KAAKe,MAAL,CAAY,cAAZ,CAFX;AAGHnB,MAAAA,iBAAiB,EAAE,KAAKmB,MAAL,CAAY,mBAAZ,CAHhB;AAIHlB,MAAAA,iBAAiB,EAAE,KAAKkB,MAAL,CAAY,mBAAZ,CAJhB;AAKHd,MAAAA,kBAAkB,EAAE,KAAKc,MAAL,CAAY,oBAAZ,CALjB;AAMH0H,MAAAA,cAAc,EAAE;AAAA,eAAM,MAAI,CAACC,uBAAL,EAAN;AAAA,OANb;AAOHC,MAAAA,gBAAgB,EAAEtL,SAAS,CAACuB,eAAD,CAAT,IAA8BK,aAA9B,GAA8C,CAACL,eAAD,CAA9C,GAAkE,EAPjF;AAQHsB,MAAAA,OAAO,EAAE,KAAKa,MAAL,CAAY,SAAZ,CARN;AASHZ,MAAAA,aAAa,EAAE,KAAKY,MAAL,CAAY,eAAZ,CATZ;AAUHtC,MAAAA,OAAO,EAAE,KAAK4D,OAAL,EAVN;AAWHtD,MAAAA,UAAU,EAAE,KAAKgC,MAAL,CAAY,YAAZ,CAXT;AAYHrC,MAAAA,WAAW,EAAE,KAAKqC,MAAL,CAAY,aAAZ,CAZV;AAaHvC,MAAAA,YAAY,EAAE,KAAKuC,MAAL,CAAY,cAAZ,CAbX;AAcHrB,MAAAA,KAAK,EAAE,KAAKqB,MAAL,CAAY,OAAZ,CAdJ;AAeHpB,MAAAA,UAAU,EAAE,KAAKuC,WAfd;AAgBH1C,MAAAA,WAAW,EAAE,qBAAAwG,CAAC,EAAI;AACd,YAAI,CAAC,MAAI,CAACjF,MAAL,CAAY,eAAZ,CAAL,EAAmC;AAC/B,UAAA,MAAI,CAAC4C,qBAAL,GAA6BqC,CAAC,CAAClB,QAA/B;AACH;;AACD,QAAA,MAAI,CAAC/D,MAAL,CAAY,iBAAZ,EAA+B,MAAI,CAAC2B,UAAL,CAAgBsD,CAAC,CAAClB,QAAlB,CAA/B;;AACA,YAAI8D,YAAY,GAAG,MAAI,CAAClE,oBAAL,CAA0BsB,CAA1B,CAAnB;;AACA,YAAI,UAAU4C,YAAd,EAA4B;AACxB,UAAA,MAAI,CAACnD,MAAL,CAAY,KAAZ;;AACA,UAAA,MAAI,CAACoD,YAAL,CAAkBC,KAAlB;AACH;AACJ;AA1BE,KAAP;AA4BH,GA/S+B;AAgThCC,EAAAA,iBAhTgC,+BAgTZ;AAChB,QAAI,KAAKvF,MAAL,IAAe,KAAKA,MAAL,CAAYzC,MAAZ,CAAmB,SAAnB,CAAf,IAAgD,KAAKY,KAAzD,EAAgE;AAC5D,WAAKA,KAAL,CAAWmH,KAAX;AACH,KAFD,MAEO;AACH,WAAKE,IAAL;AACH;;AACD,WAAO,IAAP;AACH,GAvT+B;AAwThCjH,EAAAA,WAxTgC,yBAwTlB;AACV,SAAKkH,KAAL;;AACA,SAAKJ,YAAL,CAAkBC,KAAlB;;AACA,WAAO,IAAP;AACH,GA5T+B;AA6ThCI,EAAAA,WA7TgC,yBA6TlB;AACV,SAAKD,KAAL;AACA,WAAO,IAAP;AACH,GAhU+B;AAiUhC3F,EAAAA,YAjUgC,0BAiUjB;AACX,QAAI6F,MAAM,GAAG9M,CAAC,CAAC,OAAD,CAAd;AACA,SAAKwG,QAAL,GAAgB2D,MAAhB,CAAuB2C,MAAvB;AACA,SAAK3F,MAAL,GAAc,KAAK5B,gBAAL,CAAsBuH,MAAtB,EAA8BzM,KAA9B,EAAqC,KAAKuK,aAAL,EAArC,CAAd;;AACA,SAAKzD,MAAL,CAAYiD,QAAZ,GAAuB3D,QAAvB,CAAgCjF,wBAAhC;;AACA,SAAK2F,MAAL,CAAY4F,QAAZ,GAAuBtG,QAAvB,CAAgC7E,oCAAhC;;AACA,SAAKuF,MAAL,CAAY6F,EAAZ,CAAe,QAAf,EAAyB,KAAKC,mBAAL,CAAyBtH,IAAzB,CAA8B,IAA9B,CAAzB;;AACA,SAAKwB,MAAL,CAAY6F,EAAZ,CAAe,SAAf,EAA0B,KAAKE,oBAAL,CAA0BvH,IAA1B,CAA+B,IAA/B,CAA1B;;AACA,SAAKwH,uBAAL,CAA6B,KAAKhG,MAAlC,EAA0C,iBAA1C;AACH,GA1U+B;AA2UhC8F,EAAAA,mBA3UgC,iCA2UV;AAClB,SAAKvI,MAAL,CAAY,QAAZ,EAAsB,KAAtB;AACA,SAAK+F,OAAL,CAAa;AACT2C,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,IAAI,EAAE,KAAK;AAFF,KAAb;AAIH,GAjV+B;AAkVhCC,EAAAA,mBAAmB,EAAE,6BAASC,IAAT,EAAe;AAChC,QAAItI,OAAO,GAAGhF,MAAM,CAACuN,uBAAP,CAA+BD,IAA/B,CAAd;;AACA,SAAKE,eAAL,CAAqBxI,OAArB;;AACA,QAAIyI,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY3I,OAAZ,CAAlB;;AACA,QAAI,CAAC,CAAD,KAAOyI,WAAW,CAACG,OAAZ,CAAoB,OAApB,CAAP,IAAuC,CAAC,CAAD,KAAOH,WAAW,CAACG,OAAZ,CAAoB,QAApB,CAAlD,EAAiF;AAC7E,WAAKC,iBAAL;AACH;AACJ,GAzV+B;AA0VhCA,EAAAA,iBAAiB,EAAE,6BAAW;AAAA;;AAC1B,QAAIC,UAAU,GAAG1M,YAAY,CAAC,KAAKqD,MAAL,CAAY,uBAAZ,CAAD,CAA7B;;AACA,QAAI,KAAK,CAAL,KAAWqJ,UAAf,EAA2B;AACvB,WAAKN,eAAL,CAAqB,OAArB,EAA8B;AAAA,eAAMrM,eAAe,CAAC,MAAI,CAACoF,QAAL,EAAD,CAArB;AAAA,OAA9B;AACH;AACJ,GA/V+B;AAgWhCiH,EAAAA,eAAe,EAAE,yBAASO,UAAT,EAAqBpI,KAArB,EAA4B;AACzC,SAAKqI,gBAAL,CAAsB,QAAtB,EAAgCC,SAAhC;AACH,GAlW+B;AAmWhChB,EAAAA,oBAnWgC,kCAmWT;AACnB,SAAKxI,MAAL,CAAY,QAAZ,EAAsB,IAAtB;AACA,SAAK+F,OAAL,CAAa;AACT2C,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,IAAI,EAAE,KAAK7C;AAFF,KAAb;AAIH,GAzW+B;AA0WhC9D,EAAAA,kBA1WgC,gCA0WX;AACjB,QAAIyH,YAAY,GAAG,KAAK3B,YAAL,IAAqB,KAAKA,YAAL,CAAkBhG,QAAlB,EAArB,IAAqDxG,CAAC,CAAC,OAAD,CAAzE;;AACA,QAAI,CAAC,KAAKwM,YAAV,EAAwB;AACpB,WAAKhG,QAAL,GAAgB2D,MAAhB,CAAuBgE,YAAvB;AACH;;AACD,SAAK3B,YAAL,GAAoB,KAAKjH,gBAAL,CAAsB4I,YAAtB,EAAoC/N,WAApC,EAAiD,KAAKiJ,mBAAL,EAAjD,CAApB;;AACA,SAAKmD,YAAL,CAAkB/G,kBAAlB,CAAqC,WAArC,EAAkD,KAAKiH,iBAAL,CAAuB/G,IAAvB,CAA4B,IAA5B,CAAlD;;AACA,SAAK6G,YAAL,CAAkB/G,kBAAlB,CAAqC,KAArC,EAA4C,KAAKoH,WAAL,CAAiBlH,IAAjB,CAAsB,IAAtB,CAA5C;;AACA,SAAK6G,YAAL,CAAkB/G,kBAAlB,CAAqC,SAArC,EAAgD,KAAKiH,iBAAL,CAAuB/G,IAAvB,CAA4B,IAA5B,CAAhD;;AACA,SAAK6G,YAAL,CAAkB/G,kBAAlB,CAAqC,QAArC,EAA+C,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA/C;;AACA,SAAKwH,uBAAL,CAA6B,KAAKX,YAAlC,EAAgD,oBAAhD;AACH,GArX+B;AAsXhC7F,EAAAA,iBAtXgC,+BAsXZ;AAChB,QAAIyH,QAAQ,GAAG,KAAK1J,MAAL,CAAY,aAAZ,KAA8B,KAAKA,MAAL,CAAY,eAAZ,CAA7C;AACA,SAAK8B,QAAL,GAAgB6H,WAAhB,CAA4B1M,gCAA5B,EAA8DyM,QAA9D;AACH,GAzX+B;AA0XhChF,EAAAA,MA1XgC,kBA0XzB+C,OA1XyB,EA0XhB;AACZ,QAAI,CAAC,KAAKhF,MAAV,EAAkB;AACd,WAAKF,YAAL;;AACA,WAAKqH,cAAL;AACH;;AACD,WAAO,KAAKnH,MAAL,CAAYiC,MAAZ,CAAmB+C,OAAnB,CAAP;AACH,GAhY+B;AAiYhCQ,EAAAA,IAjYgC,kBAiYzB;AACH,WAAO,KAAKvD,MAAL,CAAY,IAAZ,CAAP;AACH,GAnY+B;AAoYhCwD,EAAAA,KApYgC,mBAoYxB;AACJ,WAAO,KAAKxD,MAAL,CAAY,KAAZ,CAAP;AACH,GAtY+B;AAuYhCmF,EAAAA,cAvYgC,0BAuYjBC,IAvYiB,EAuYX5I,KAvYW,EAuYJ;AACxB,SAAKN,KAAL,IAAc,KAAKA,KAAL,CAAWZ,MAAX,CAAkB8J,IAAlB,EAAwB5I,KAAxB,CAAd;AACH,GAzY+B;AA0YhC6I,EAAAA,gBA1YgC,4BA0YftG,IA1Ye,EA0YT;AACnB,QAAIuG,eAAe,GAAG,CAAC3N,aAAa,CAACoH,IAAD,CAApC;AACA,QAAIwG,YAAY,GAAGD,eAAe,GAAGvG,IAAH,GAAU,KAAK7B,cAAL,CAAoB6B,IAApB,CAA5C;AACA,WAAO,CAACpH,aAAa,CAAC4N,YAAD,CAAd,GAA+BC,MAAM,CAAC3N,aAAa,CAAC0N,YAAD,EAAe,EAAf,CAAd,CAArC,GAAyE,EAAhF;AACH,GA9Y+B;AA+YhC7H,EAAAA,mBA/YgC,+BA+YZxE,YA/YY,EA+YE;AAC9B,QAAI,KAAKoC,MAAL,CAAY,eAAZ,CAAJ,EAAkC;AAC9B,WAAKA,MAAL,CAAY;AACR3B,QAAAA,IAAI,EAAE,KAAK0L,gBAAL,CAAsBnM,YAAtB,CADE;AAERU,QAAAA,IAAI,EAAEjC,aAAa,CAACuB,YAAD,CAAb,GAA8BA,YAAY,CAACU,IAA3C,GAAkD,KAAK;AAFrD,OAAZ;AAIH;;AACD,SAAK6L,6BAAL,CAAmC,cAAnC,EAAmDvM,YAAnD;;AACA,SAAKuM,6BAAL,CAAmC,iBAAnC,EAAsD,KAAKxI,UAAL,CAAgB/D,YAAhB,CAAtD;AACH,GAxZ+B;AAyZhCwM,EAAAA,MAzZgC,oBAyZvB;AACL,SAAKxJ,KAAL,IAAc,KAAKA,KAAL,CAAWkB,QAAX,GAAsBuI,MAAtB,EAAd;AACA,SAAK5H,MAAL,IAAe,KAAKA,MAAL,CAAYX,QAAZ,GAAuBuI,MAAvB,EAAf;AACH,GA5Z+B;AA6ZhCC,EAAAA,uBA7ZgC,mCA6ZRpJ,KA7ZQ,EA6ZD;AAAA;;AAC3B,SAAK2I,cAAL,CAAoB,kBAApB,EAAwC,KAAK7J,MAAL,CAAY,eAAZ,KAAgC1D,SAAS,CAAC4E,KAAD,CAAzC,GAAmD,CAACA,KAAD,CAAnD,GAA6D,EAArG;;AACA,QAAIwC,YAAY,GAAG,KAAK1D,MAAL,CAAY,cAAZ,CAAnB;;AACA,SAAKkC,iBAAL,GAAyBC,IAAzB,CAA8B,UAAAvE,YAAY,EAAI;AAC1C,MAAA,MAAI,CAACwE,mBAAL,CAAyBxE,YAAzB;;AACA,UAAI,MAAI,CAACgE,cAAL,CAAoB8B,YAApB,MAAsC,MAAI,CAAC9B,cAAL,CAAoBhE,YAApB,CAA1C,EAA6E;AACzE,QAAA,MAAI,CAAC0F,2BAAL,CAAiC;AAC7BE,UAAAA,aAAa,EAAEE,YADc;AAE7BxC,UAAAA,KAAK,EAAEtD;AAFsB,SAAjC;AAIH;AACJ,KARD;AASH,GAza+B;AA0ahC2M,EAAAA,0BA1agC,sCA0aLC,KA1aK,EA0aE;AAC9B,QACUV,IADV,GAGIU,KAHJ,CACIV,IADJ;AAAA,QAEW5I,KAFX,GAGIsJ,KAHJ,CAEItJ,KAFJ;AAIA,QAAIuJ,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,CAACX,IAAD,CAAT,GAAkB5I,KAAlB;;AACA,SAAK4G,YAAL,CAAkB9H,MAAlB,CAAyB,UAAzB,EAAqC5D,MAAM,CAAC,EAAD,EAAK,KAAK6H,mBAAL,EAAL,EAAiCwG,SAAjC,CAA3C;;AACA,SAAKhI,MAAL,IAAe,KAAKA,MAAL,CAAYiI,OAAZ,EAAf;AACH,GAnb+B;AAobhCC,EAAAA,kBApbgC,8BAobbzJ,KApba,EAobN;AACtB,QAAIA,KAAJ,EAAW;AACP,WAAK2I,cAAL,CAAoB,eAApB,EAAqC,QAArC;;AACA,UAAIhM,eAAe,GAAG,KAAKmC,MAAL,CAAY,iBAAZ,CAAtB;;AACA,WAAK6J,cAAL,CAAoB,kBAApB,EAAwCvN,SAAS,CAACuB,eAAD,CAAT,GAA6B,CAACA,eAAD,CAA7B,GAAiD,EAAzF;AACH,KAJD,MAIO;AACH,WAAKgM,cAAL,CAAoB,eAApB,EAAqC,MAArC;;AACA,WAAK7J,MAAL,CAAY;AACRnC,QAAAA,eAAe,EAAE,KAAK,CADd;AAERD,QAAAA,YAAY,EAAE,KAAK;AAFX,OAAZ;AAIH;AACJ,GAhc+B;AAichCgN,EAAAA,qBAjcgC,iCAicVtB,UAjcU,EAicE;AAAA;;AAC9B,QAAIzL,eAAe,GAAG,KAAKmC,MAAL,CAAY,iBAAZ,CAAtB;;AACA,SAAK6J,cAAL,CAAoB,cAApB,EAAoC,IAApC;;AACA,SAAKN,gBAAL,CAAsB,OAAtB,EAA+B,CAACD,UAAD,CAA/B;;AACA,QAAIhN,SAAS,CAACuB,eAAD,CAAb,EAAgC;AAC5B,WAAKqE,iBAAL,GAAyBC,IAAzB,CAA8B,UAAAvE,YAAY,EAAI;AAC1C,QAAA,MAAI,CAACiM,cAAL,CAAoB,kBAApB,EAAwC,CAAChM,eAAD,CAAxC;;AACA,QAAA,MAAI,CAACgM,cAAL,CAAoB,cAApB,EAAoCjM,YAApC;AACH,OAHD,EAGGoF,IAHH,CAGQ,UAAA6H,KAAK,EAAI;AACb,QAAA,MAAI,CAAChB,cAAL,CAAoB,kBAApB,EAAwC,EAAxC;AACH,OALD,EAKGiB,MALH,CAKU,KAAK1I,mBAAL,CAAyBnB,IAAzB,CAA8B,IAA9B,CALV;AAMH;AACJ,GA7c+B;AA8chC8J,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,QAAIpM,KAAK,GAAG6K,SAAS,CAACwB,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWxB,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAAKrI,WAAL,CAAiBxC,KAAjB,EAA7E;AACA,SAAKwC,WAAL,GAAmB,KAAK,CAAxB;;AACA,SAAKpB,kBAAL,CAAwBpB,KAAxB;;AACA,SAAKsM,cAAL;AACH,GAnd+B;AAodhCA,EAAAA,cAAc,EAAE,0BAAW;AACvB,SAAKpL,iBAAL;;AACA,SAAKgK,cAAL,CAAoB,SAApB,EAA+B,KAAKvI,OAAL,EAA/B;AACH,GAvd+B;AAwdhCyG,EAAAA,KAAK,EAAE,iBAAW;AACd,SAAKD,YAAL,CAAkBC,KAAlB;AACH,GA1d+B;AA2dhCmD,EAAAA,cA3dgC,0BA2djBrC,IA3diB,EA2dX;AACjB,QAAIsC,YAAJ;;AACA,QACUrB,IADV,GAGIjB,IAHJ,CACIiB,IADJ;AAAA,QAEW5I,KAFX,GAGI2H,IAHJ,CAEI3H,KAFJ;;AAIA,YAAQ4I,IAAR;AACI,WAAK,eAAL;AACI,aAAKa,kBAAL,CAAwBzJ,KAAxB;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKe,iBAAL;;AACA,aAAKD,kBAAL;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKlC,qBAAL;;AACA,aAAK+J,cAAL,CAAoBC,IAApB,EAA0B5I,KAA1B;;AACA,aAAKkB,mBAAL,CAAyB,KAAKpC,MAAL,CAAY,cAAZ,CAAzB;;AACA;;AACJ,WAAK,SAAL;AACI,aAAK+K,iBAAL;;AACA;;AACJ,WAAK,oBAAL;AACI,aAAKK,yBAAL,CAA+B,KAAKtD,YAApC,EAAkDe,IAAlD;;AACA;;AACJ,WAAK,iBAAL;AACI,YAAI,8BAA8BA,IAAI,CAACwC,QAAvC,EAAiD;AAC7C;AACH;;AACD,YAAI,KAAK,CAAL,KAAWxC,IAAI,CAAC3H,KAAL,CAAWuG,OAA1B,EAAmC;AAC/B,iBAAOoB,IAAI,CAAC3H,KAAL,CAAWuG,OAAlB;AACH;;AACD,aAAKmB,mBAAL,CAAyBC,IAAzB;;AACA,aAAKuC,yBAAL,CAA+B,KAAK3I,MAApC,EAA4CoG,IAA5C;;AACA;;AACJ,WAAK,QAAL;AACI,aAAKnE,MAAL,CAAYxD,KAAZ;AACA;;AACJ,WAAK,mBAAL;AACA,WAAK,mBAAL;AACI,aAAK2I,cAAL,CAAoBC,IAApB,EAA0B5I,KAA1B;;AACA,aAAK4G,YAAL,CAAkB9H,MAAlB,CAAyB8J,IAAzB,EAA+B5I,KAA/B;;AACA,aAAK1D,QAAL,CAAcqL,IAAd;AACA;;AACJ,WAAK,OAAL;AACI,aAAKkC,iBAAL,CAAuB,KAAK/K,MAAL,CAAY,OAAZ,CAAvB;;AACA,aAAK4K,qBAAL,CAA2Bd,IAA3B;;AACA;;AACJ,WAAK,YAAL;AACI,YAAIwB,KAAK,CAACC,OAAN,CAAcrK,KAAd,CAAJ,EAA0B;AACtB,eAAK6J,iBAAL,CAAuB,KAAK/K,MAAL,CAAY,YAAZ,CAAvB;AACH,SAFD,MAEO;AACH,eAAKJ,eAAL;;AACA,eAAKqL,cAAL;AACH;;AACD,aAAKL,qBAAL,CAA2Bd,IAA3B;;AACA;;AACJ,WAAK,MAAL;AACA,WAAK,MAAL;AACI,aAAKS,0BAAL,CAAgC1B,IAAhC;;AACA;;AACJ,WAAK,eAAL;AACI,aAAK5G,iBAAL;;AACA,aAAK6F,YAAL,CAAkB4C,OAAlB;;AACA,aAAKjI,MAAL,IAAe,KAAKA,MAAL,CAAYiI,OAAZ,EAAf;AACA;;AACJ,WAAK,OAAL;AACA,WAAK,QAAL;AACI,aAAKlN,QAAL,CAAcqL,IAAd;AACA,kBAAUsC,YAAY,GAAG,KAAK1I,MAA9B,KAAyC,KAAK,CAAL,KAAW0I,YAApD,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACT,OAAb,EAA5E;AACA;;AACJ,WAAK,aAAL;AACI,aAAK5C,YAAL,CAAkB9H,MAAlB,CAAyB8J,IAAzB,EAA+B5I,KAA/B;;AACA;;AACJ,WAAK,cAAL;AACA,WAAK,SAAL;AACA,WAAK,YAAL;AACA,WAAK,eAAL;AACA,WAAK,cAAL;AACA,WAAK,oBAAL;AACI,aAAK2I,cAAL,CAAoBC,IAApB,EAA0B5I,KAA1B;;AACA;;AACJ,WAAK,yBAAL;AACI,aAAK0I,cAAL;;AACA;;AACJ,WAAK,iBAAL;AACI,aAAKU,uBAAL,CAA6BpJ,KAA7B;;AACA;;AACJ,WAAK,cAAL;AACI;;AACJ,WAAK,aAAL;AACI,aAAKzB,sBAAL;;AACA;;AACJ,WAAK,eAAL;AACI,aAAKC,wBAAL;;AACA;;AACJ,WAAK,oBAAL;AACI,aAAKC,6BAAL;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAK+E,MAAL,CAAY,KAAK1E,MAAL,CAAY,QAAZ,CAAZ;AACA;;AACJ,WAAK,UAAL;AACI,aAAK8H,YAAL,CAAkB9H,MAAlB,CAAyB8J,IAAzB,EAA+B5I,KAA/B;;AACA;;AACJ;AACI,aAAK1D,QAAL,CAAcqL,IAAd;AApGR;AAsGH;AAvkB+B,CAAf,EAwkBlB2C,OAxkBkB,CAwkBVxP,eAxkBU,CAArB;AAykBAP,iBAAiB,CAAC,kBAAD,EAAqB4B,cAArB,CAAjB;AACA,eAAeA,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: \"this\",\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: (_ref4, buttonContent) => {\r\n                var {\r\n                    text: text,\r\n                    icon: icon\r\n                } = _ref4;\r\n                if (this.option(\"splitButton\") || !this.option(\"showArrowIcon\")) {\r\n                    return \"content\"\r\n                }\r\n                var $firstIcon = getImageContainer(icon);\r\n                var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n                var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n                $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n            }\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this.setAria({\r\n            expanded: false,\r\n            owns: void 0\r\n        })\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this.setAria({\r\n            expanded: true,\r\n            owns: this._popupContentId\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\")\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : [])\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._buttonGroup.repaint();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n"]},"metadata":{},"sourceType":"module"}