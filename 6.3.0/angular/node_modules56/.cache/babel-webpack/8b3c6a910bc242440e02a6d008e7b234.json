{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/pointer/mspointer.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseStrategy from \"./base\";\nimport Observer from \"./observer\";\nimport { extend } from \"../../core/utils/extend\";\nvar eventMap = {\n  dxpointerdown: \"pointerdown\",\n  dxpointermove: \"pointermove\",\n  dxpointerup: \"pointerup\",\n  dxpointercancel: \"pointercancel\",\n  dxpointerover: \"pointerover\",\n  dxpointerout: \"pointerout\",\n  dxpointerenter: \"pointerenter\",\n  dxpointerleave: \"pointerleave\"\n};\nvar observer;\nvar activated = false;\n\nvar activateStrategy = function activateStrategy() {\n  if (activated) {\n    return;\n  }\n\n  observer = new Observer(eventMap, function (a, b) {\n    return a.pointerId === b.pointerId;\n  }, function (e) {\n    if (e.isPrimary) {\n      observer.reset();\n    }\n  });\n  activated = true;\n};\n\nvar MsPointerStrategy = BaseStrategy.inherit({\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent: function _fireEvent(args) {\n    return this.callBase(extend({\n      pointers: observer.pointers(),\n      pointerId: args.originalEvent.pointerId\n    }, args));\n  }\n});\nMsPointerStrategy.map = eventMap;\n\nMsPointerStrategy.resetObserver = function () {\n  observer.reset();\n};\n\nexport default MsPointerStrategy;","map":null,"metadata":{},"sourceType":"module"}