{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbar.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Toolbar from \"../toolbar\";\nimport ContextMenu from \"../context_menu\";\nimport DiagramBar from \"./diagram.bar\";\nimport { extend } from \"../../core/utils/extend\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport DiagramPanel from \"./ui.diagram.panel\";\nimport DiagramMenuHelper from \"./ui.diagram.menu_helper\";\nimport { getDiagram } from \"./diagram.importer\";\nimport \"../select_box\";\nimport \"../color_box\";\nimport \"../check_box\";\nvar ACTIVE_FORMAT_CLASS = \"dx-format-active\";\nvar DIAGRAM_TOOLBAR_CLASS = \"dx-diagram-toolbar\";\nvar DIAGRAM_TOOLBAR_SEPARATOR_CLASS = \"dx-diagram-toolbar-separator\";\nvar DIAGRAM_TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-diagram-toolbar-menu-separator\";\nvar DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS = \"dx-diagram-mobile-toolbar-color-box-opened\";\n\nvar DiagramToolbar = /*#__PURE__*/function (_DiagramPanel) {\n  _inherits(DiagramToolbar, _DiagramPanel);\n\n  var _super = _createSuper(DiagramToolbar);\n\n  function DiagramToolbar() {\n    _classCallCheck(this, DiagramToolbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DiagramToolbar, [{\n    key: \"_init\",\n    value: function _init() {\n      this._commands = [];\n      this._itemHelpers = {};\n      this._commandContextMenus = {};\n      this._contextMenuList = [];\n      this._valueConverters = {};\n      this.bar = new DiagramToolbarBar(this);\n\n      this._createOnInternalCommand();\n\n      this._createOnCustomCommand();\n\n      this._createOnSubMenuVisibilityChangingAction();\n\n      _get(_getPrototypeOf(DiagramToolbar.prototype), \"_init\", this).call(this);\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(DiagramToolbar.prototype), \"_initMarkup\", this).call(this);\n\n      var isServerSide = !hasWindow();\n\n      if (!this.option(\"skipAdjustSize\") && !isServerSide) {\n        this.$element().width(\"\");\n      }\n\n      this._commands = this._getCommands();\n      this._itemHelpers = {};\n      this._commandContextMenus = {};\n      this._contextMenuList = [];\n\n      var $toolbar = this._createMainElement();\n\n      this._renderToolbar($toolbar);\n\n      if (!this.option(\"skipAdjustSize\") && !isServerSide) {\n        var $toolbarContent = this.$element().find(\".dx-toolbar-before\");\n        this.$element().width($toolbarContent.width());\n      }\n    }\n  }, {\n    key: \"_createMainElement\",\n    value: function _createMainElement() {\n      return $(\"<div>\").addClass(DIAGRAM_TOOLBAR_CLASS).appendTo(this._$element);\n    }\n  }, {\n    key: \"_getCommands\",\n    value: function _getCommands() {\n      return this.option(\"commands\") || [];\n    }\n  }, {\n    key: \"_renderToolbar\",\n    value: function _renderToolbar($toolbar) {\n      var beforeCommands = this._commands.filter(function (command) {\n        return -1 === [\"after\", \"center\"].indexOf(command.position);\n      });\n\n      var centerCommands = this._commands.filter(function (command) {\n        return \"center\" === command.position;\n      });\n\n      var afterCommands = this._commands.filter(function (command) {\n        return \"after\" === command.position;\n      });\n\n      var dataSource = [].concat(this._prepareToolbarItems(beforeCommands, \"before\", this._executeCommand)).concat(this._prepareToolbarItems(centerCommands, \"center\", this._executeCommand)).concat(this._prepareToolbarItems(afterCommands, \"after\", this._executeCommand));\n      this._toolbarInstance = this._createComponent($toolbar, Toolbar, {\n        dataSource: dataSource\n      });\n    }\n  }, {\n    key: \"_prepareToolbarItems\",\n    value: function _prepareToolbarItems(items, location, actionHandler) {\n      var _this = this;\n\n      return items.map(function (item) {\n        return extend(true, {\n          location: location,\n          locateInMenu: _this.option(\"locateInMenu\")\n        }, _this._createItem(item, location, actionHandler), _this._createItemOptions(item), _this._createItemActionOptions(item, actionHandler));\n      });\n    }\n  }, {\n    key: \"_createItem\",\n    value: function _createItem(item, location, actionHandler) {\n      var _this2 = this;\n\n      if (item.getCommandValue || item.getEditorValue || item.getEditorDisplayValue) {\n        this._valueConverters[item.command] = {\n          getCommandValue: item.getCommandValue,\n          getEditorValue: item.getEditorValue,\n          getEditorDisplayValue: item.getEditorDisplayValue\n        };\n      }\n\n      if (\"separator\" === item.widget) {\n        return {\n          template: function template(data, index, element) {\n            $(element).addClass(DIAGRAM_TOOLBAR_SEPARATOR_CLASS);\n          },\n          menuItemTemplate: function menuItemTemplate(data, index, element) {\n            $(element).addClass(DIAGRAM_TOOLBAR_MENU_SEPARATOR_CLASS);\n          }\n        };\n      }\n\n      return {\n        widget: item.widget || \"dxButton\",\n        cssClass: item.cssClass,\n        options: {\n          stylingMode: this.option(\"buttonStylingMode\"),\n          type: this.option(\"buttonType\"),\n          text: item.text,\n          hint: item.hint,\n          icon: item.icon || item.iconUnchecked || item.iconChecked,\n          iconChecked: item.iconChecked,\n          iconUnchecked: item.iconUnchecked,\n          onInitialized: function onInitialized(e) {\n            return _this2._onItemInitialized(e.component, item);\n          },\n          onContentReady: function onContentReady(e) {\n            return _this2._onItemContentReady(e.component, item, actionHandler);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"_createItemOptions\",\n    value: function _createItemOptions(_ref) {\n      var widget = _ref.widget,\n          command = _ref.command,\n          items = _ref.items,\n          valueExpr = _ref.valueExpr,\n          displayExpr = _ref.displayExpr,\n          showText = _ref.showText,\n          hint = _ref.hint,\n          icon = _ref.icon;\n\n      if (\"dxSelectBox\" === widget) {\n        return this._createSelectBoxItemOptions(command, hint, items, valueExpr, displayExpr);\n      } else if (\"dxTextBox\" === widget) {\n        return this._createTextBoxItemOptions(command, hint);\n      } else if (\"dxColorBox\" === widget) {\n        return this._createColorBoxItemOptions(command, hint, icon);\n      } else if (!widget || \"dxButton\" === widget) {\n        return {\n          showText: showText || \"inMenu\"\n        };\n      }\n    }\n  }, {\n    key: \"_createSelectBoxItemOptions\",\n    value: function _createSelectBoxItemOptions(command, hint, items, valueExpr, displayExpr) {\n      var options = this._createTextEditorItemOptions(hint);\n\n      options = extend(true, options, {\n        options: {\n          dataSource: items,\n          displayExpr: displayExpr || \"text\",\n          valueExpr: valueExpr || \"value\",\n          dropDownOptions: {\n            container: this.option(\"container\")\n          }\n        }\n      });\n      var isSelectButton = items && items.every(function (i) {\n        return void 0 !== i.icon;\n      });\n\n      if (isSelectButton) {\n        options = extend(true, options, {\n          options: {\n            fieldTemplate: function fieldTemplate(data, container) {\n              $(\"<i>\").addClass(data && data.icon).appendTo(container);\n              $(\"<div>\").dxTextBox({\n                readOnly: true,\n                stylingMode: \"outlined\"\n              }).appendTo(container);\n            },\n            itemTemplate: function itemTemplate(data, index, container) {\n              $(container).attr(\"title\", data.hint);\n              return '<i class=\"'.concat(data.icon, '\"></i>');\n            }\n          }\n        });\n      }\n\n      return options;\n    }\n  }, {\n    key: \"_createTextBoxItemOptions\",\n    value: function _createTextBoxItemOptions(command, hint) {\n      var _this3 = this;\n\n      var options = this._createTextEditorItemOptions(hint);\n\n      options = extend(true, options, {\n        options: {\n          readOnly: true,\n          focusStateEnabled: false,\n          hoverStateEnabled: false,\n          buttons: [{\n            name: \"dropDown\",\n            location: \"after\",\n            options: {\n              icon: \"spindown\",\n              disabled: false,\n              stylingMode: \"text\",\n              onClick: function onClick(e) {\n                var contextMenu = _this3._commandContextMenus[command];\n\n                if (contextMenu) {\n                  _this3._toggleContextMenu(contextMenu);\n                }\n              }\n            }\n          }]\n        }\n      });\n      return options;\n    }\n  }, {\n    key: \"_createColorBoxItemOptions\",\n    value: function _createColorBoxItemOptions(command, hint, icon) {\n      var _this4 = this;\n\n      var options = this._createTextEditorItemOptions(hint);\n\n      if (icon) {\n        options = extend(true, options, {\n          options: {\n            openOnFieldClick: true,\n            fieldTemplate: function fieldTemplate(data, container) {\n              $(\"<i>\").addClass(icon).css(\"borderBottomColor\", data).appendTo(container);\n              $(\"<div>\").dxTextBox({\n                readOnly: true,\n                stylingMode: \"outlined\"\n              }).appendTo(container);\n            }\n          }\n        });\n      }\n\n      options = extend(true, options, {\n        options: {\n          dropDownOptions: {\n            container: this.option(\"container\")\n          },\n          onOpened: function onOpened() {\n            if (_this4.option(\"isMobileView\")) {\n              $(\"body\").addClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS);\n            }\n          },\n          onClosed: function onClosed() {\n            $(\"body\").removeClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS);\n          }\n        }\n      });\n      return options;\n    }\n  }, {\n    key: \"_createTextEditorItemOptions\",\n    value: function _createTextEditorItemOptions(hint) {\n      return {\n        options: {\n          stylingMode: this.option(\"editorStylingMode\"),\n          hint: hint\n        }\n      };\n    }\n  }, {\n    key: \"_createItemActionOptions\",\n    value: function _createItemActionOptions(item, handler) {\n      var _this5 = this;\n\n      switch (item.widget) {\n        case \"dxSelectBox\":\n        case \"dxColorBox\":\n        case \"dxCheckBox\":\n          return {\n            options: {\n              onValueChanged: function onValueChanged(e) {\n                var parameter = DiagramMenuHelper.getItemCommandParameter(_this5, item, e.component.option(\"value\"));\n                handler.call(_this5, item.command, item.name, parameter);\n              }\n            }\n          };\n\n        case \"dxTextBox\":\n          return {};\n\n        default:\n          return {\n            options: {\n              onClick: function onClick(e) {\n                if (!item.items) {\n                  var parameter = DiagramMenuHelper.getItemCommandParameter(_this5, item);\n                  handler.call(_this5, item.command, item.name, parameter);\n                } else {\n                  var contextMenu = e.component._contextMenu;\n\n                  if (contextMenu) {\n                    _this5._toggleContextMenu(contextMenu);\n                  }\n                }\n              }\n            }\n          };\n      }\n    }\n  }, {\n    key: \"_toggleContextMenu\",\n    value: function _toggleContextMenu(contextMenu) {\n      this._contextMenuList.forEach(function (cm) {\n        if (contextMenu !== cm) {\n          cm.hide();\n        }\n      });\n\n      contextMenu.toggle();\n    }\n  }, {\n    key: \"_onItemInitialized\",\n    value: function _onItemInitialized(widget, item) {\n      this._addItemHelper(item.command, new DiagramToolbarItemHelper(widget));\n    }\n  }, {\n    key: \"_onItemContentReady\",\n    value: function _onItemContentReady(widget, item, actionHandler) {\n      var _this6 = this;\n\n      var _getDiagram = getDiagram(),\n          Browser = _getDiagram.Browser;\n\n      if ((\"dxButton\" === widget.NAME || \"dxTextBox\" === widget.NAME) && item.items) {\n        var $menuContainer = $(\"<div>\").appendTo(this.$element());\n        widget._contextMenu = this._createComponent($menuContainer, ContextMenu, {\n          items: item.items,\n          target: widget.$element(),\n          cssClass: DiagramMenuHelper.getContextMenuCssClass(),\n          showEvent: \"\",\n          closeOnOutsideClick: function closeOnOutsideClick(e) {\n            return !Browser.TouchUI && 0 === $(e.target).closest(widget._contextMenu._dropDownButtonElement).length;\n          },\n          focusStateEnabled: false,\n          position: {\n            at: \"left bottom\"\n          },\n          itemTemplate: function itemTemplate(itemData, itemIndex, itemElement) {\n            DiagramMenuHelper.getContextMenuItemTemplate(this, itemData, itemIndex, itemElement);\n          },\n          onItemClick: function onItemClick(_ref2) {\n            var component = _ref2.component,\n                itemData = _ref2.itemData;\n            DiagramMenuHelper.onContextMenuItemClick(_this6, itemData, actionHandler.bind(_this6));\n\n            if (!itemData.items || !itemData.items.length) {\n              component.hide();\n            }\n          },\n          onShowing: function onShowing(e) {\n            if (_this6._showingSubMenu) {\n              return;\n            }\n\n            _this6._showingSubMenu = e.component;\n\n            _this6._onSubMenuVisibilityChangingAction({\n              visible: true,\n              component: _this6\n            });\n\n            e.component.option(\"items\", e.component.option(\"items\"));\n            delete _this6._showingSubMenu;\n          },\n          onInitialized: function onInitialized(_ref3) {\n            var component = _ref3.component;\n            return _this6._onContextMenuInitialized(component, item, widget);\n          },\n          onDisposing: function onDisposing(_ref4) {\n            var component = _ref4.component;\n            return _this6._onContextMenuDisposing(component, item);\n          }\n        });\n\n        if (!Browser.TouchUI) {\n          widget._contextMenu._dropDownButtonElement = widget.$element();\n\n          if (\"dxTextBox\" === widget.NAME) {\n            widget._contextMenu._dropDownButtonElement = widget.getButton(\"dropDown\").element();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onContextMenuInitialized\",\n    value: function _onContextMenuInitialized(widget, item, rootWidget) {\n      this._contextMenuList.push(widget);\n\n      if (item.command) {\n        this._commandContextMenus[item.command] = widget;\n      }\n\n      this._addContextMenuHelper(item, widget, [], rootWidget);\n    }\n  }, {\n    key: \"_addItemHelper\",\n    value: function _addItemHelper(command, helper) {\n      if (void 0 !== command) {\n        if (this._itemHelpers[command]) {\n          throw new Error(\"Toolbar cannot contain duplicated commands.\");\n        }\n\n        this._itemHelpers[command] = helper;\n      }\n    }\n  }, {\n    key: \"_addContextMenuHelper\",\n    value: function _addContextMenuHelper(item, widget, indexPath, rootWidget) {\n      var _this7 = this;\n\n      if (item.items) {\n        item.items.forEach(function (subItem, index) {\n          var itemIndexPath = indexPath.concat(index);\n\n          _this7._addItemHelper(subItem.command, new DiagramToolbarSubItemHelper(widget, itemIndexPath, subItem.command, rootWidget));\n\n          _this7._addContextMenuHelper(subItem, widget, itemIndexPath, rootWidget);\n        });\n      }\n    }\n  }, {\n    key: \"_onContextMenuDisposing\",\n    value: function _onContextMenuDisposing(widget, item) {\n      this._contextMenuList.splice(this._contextMenuList.indexOf(widget), 1);\n\n      delete this._commandContextMenus[item.command];\n    }\n  }, {\n    key: \"_executeCommand\",\n    value: function _executeCommand(command, name, value) {\n      if (this._updateLocked) {\n        return;\n      }\n\n      if (\"number\" === typeof command) {\n        var valueConverter = this._valueConverters[command];\n\n        if (valueConverter && valueConverter.getCommandValue) {\n          value = valueConverter.getCommandValue(value);\n        }\n\n        this.bar.raiseBarCommandExecuted(command, value);\n      } else if (\"string\" === typeof command) {\n        this._onInternalCommandAction({\n          command: command\n        });\n      }\n\n      if (void 0 !== name) {\n        this._onCustomCommandAction({\n          name: name\n        });\n      }\n    }\n  }, {\n    key: \"_createOnInternalCommand\",\n    value: function _createOnInternalCommand() {\n      this._onInternalCommandAction = this._createActionByOption(\"onInternalCommand\");\n    }\n  }, {\n    key: \"_createOnCustomCommand\",\n    value: function _createOnCustomCommand() {\n      this._onCustomCommandAction = this._createActionByOption(\"onCustomCommand\");\n    }\n  }, {\n    key: \"_setItemEnabled\",\n    value: function _setItemEnabled(command, enabled) {\n      if (command in this._itemHelpers) {\n        var helper = this._itemHelpers[command];\n\n        if (helper.canUpdate(this._showingSubMenu)) {\n          helper.setEnabled(enabled);\n        }\n      }\n    }\n  }, {\n    key: \"_setEnabled\",\n    value: function _setEnabled(enabled) {\n      this._toolbarInstance.option(\"disabled\", !enabled);\n\n      this._contextMenuList.forEach(function (contextMenu) {\n        contextMenu.option(\"disabled\", !enabled);\n      });\n    }\n  }, {\n    key: \"_setItemValue\",\n    value: function _setItemValue(command, value) {\n      try {\n        this._updateLocked = true;\n\n        if (command in this._itemHelpers) {\n          var helper = this._itemHelpers[command];\n\n          if (helper.canUpdate(this._showingSubMenu)) {\n            var valueConverter = this._valueConverters[command];\n\n            if (valueConverter && valueConverter.getEditorValue) {\n              value = valueConverter.getEditorValue(value);\n            }\n\n            var displayValue;\n\n            if (valueConverter && valueConverter.getEditorDisplayValue) {\n              displayValue = valueConverter.getEditorDisplayValue(value);\n            }\n\n            var contextMenu = this._commandContextMenus[command];\n            helper.setValue(value, displayValue, contextMenu, contextMenu && command);\n          }\n        }\n      } finally {\n        this._updateLocked = false;\n      }\n    }\n  }, {\n    key: \"_setItemSubItems\",\n    value: function _setItemSubItems(command, items) {\n      this._updateLocked = true;\n\n      if (command in this._itemHelpers) {\n        var helper = this._itemHelpers[command];\n\n        if (helper.canUpdate(this._showingSubMenu)) {\n          var contextMenu = this._commandContextMenus[command];\n          helper.setItems(items, contextMenu, contextMenu && command);\n        }\n      }\n\n      this._updateLocked = false;\n    }\n  }, {\n    key: \"_createOnSubMenuVisibilityChangingAction\",\n    value: function _createOnSubMenuVisibilityChangingAction() {\n      this._onSubMenuVisibilityChangingAction = this._createActionByOption(\"onSubMenuVisibilityChanging\");\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"isMobileView\":\n          $(\"body\").removeClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS);\n\n          this._invalidate();\n\n          break;\n\n        case \"onSubMenuVisibilityChanging\":\n          this._createOnSubMenuVisibilityChangingAction();\n\n          break;\n\n        case \"onInternalCommand\":\n          this._createOnInternalCommand();\n\n          break;\n\n        case \"onCustomCommand\":\n          this._createOnCustomCommand();\n\n          break;\n\n        case \"container\":\n        case \"commands\":\n          this._invalidate();\n\n          break;\n\n        case \"export\":\n          break;\n\n        default:\n          _get(_getPrototypeOf(DiagramToolbar.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(DiagramToolbar.prototype), \"_getDefaultOptions\", this).call(this), {\n        isMobileView: false,\n        export: {\n          fileName: \"Diagram\",\n          proxyUrl: void 0\n        },\n        locateInMenu: \"auto\",\n        buttonStylingMode: \"text\",\n        buttonType: \"normal\",\n        editorStylingMode: \"filled\",\n        skipAdjustSize: false\n      });\n    }\n  }, {\n    key: \"setCommandChecked\",\n    value: function setCommandChecked(command, checked) {\n      this._setItemValue(command, checked);\n    }\n  }, {\n    key: \"setCommandEnabled\",\n    value: function setCommandEnabled(command, enabled) {\n      this._setItemEnabled(command, enabled);\n    }\n  }]);\n\n  return DiagramToolbar;\n}(DiagramPanel);\n\nvar DiagramToolbarBar = /*#__PURE__*/function (_DiagramBar) {\n  _inherits(DiagramToolbarBar, _DiagramBar);\n\n  var _super2 = _createSuper(DiagramToolbarBar);\n\n  function DiagramToolbarBar() {\n    _classCallCheck(this, DiagramToolbarBar);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(DiagramToolbarBar, [{\n    key: \"getCommandKeys\",\n    value: function getCommandKeys() {\n      return this._getKeys(this._owner._commands);\n    }\n  }, {\n    key: \"setItemValue\",\n    value: function setItemValue(key, value) {\n      this._owner._setItemValue(key, value);\n    }\n  }, {\n    key: \"setItemEnabled\",\n    value: function setItemEnabled(key, enabled) {\n      this._owner._setItemEnabled(key, enabled);\n    }\n  }, {\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this._owner._setEnabled(enabled);\n    }\n  }, {\n    key: \"setItemSubItems\",\n    value: function setItemSubItems(key, items) {\n      this._owner._setItemSubItems(key, items);\n    }\n  }]);\n\n  return DiagramToolbarBar;\n}(DiagramBar);\n\nvar DiagramToolbarItemHelper = /*#__PURE__*/function () {\n  function DiagramToolbarItemHelper(widget) {\n    _classCallCheck(this, DiagramToolbarItemHelper);\n\n    this._widget = widget;\n  }\n\n  _createClass(DiagramToolbarItemHelper, [{\n    key: \"canUpdate\",\n    value: function canUpdate(showingSubMenu) {\n      return void 0 === showingSubMenu;\n    }\n  }, {\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this._widget.option(\"disabled\", !enabled);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, displayValue, contextMenu, rootCommandKey) {\n      if (\"value\" in this._widget.option()) {\n        this._updateEditorValue(value, displayValue);\n      } else if (void 0 !== value) {\n        this._updateButtonValue(value);\n      }\n\n      if (contextMenu) {\n        this._updateContextMenuItemValue(contextMenu, \"\", rootCommandKey, value);\n      }\n    }\n  }, {\n    key: \"setItems\",\n    value: function setItems(items, contextMenu, rootCommandKey) {\n      if (contextMenu) {\n        this._updateContextMenuItems(contextMenu, \"\", rootCommandKey, items);\n      } else {\n        this._updateEditorItems(items);\n      }\n    }\n  }, {\n    key: \"_updateContextMenuItems\",\n    value: function _updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items) {\n      DiagramMenuHelper.updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items);\n    }\n  }, {\n    key: \"_updateEditorItems\",\n    value: function _updateEditorItems(items) {\n      if (\"items\" in this._widget.option()) {\n        this._widget.option(\"items\", items.map(function (item) {\n          return {\n            value: DiagramMenuHelper.getItemValue(item),\n            text: item.text\n          };\n        }));\n      }\n    }\n  }, {\n    key: \"_updateEditorValue\",\n    value: function _updateEditorValue(value, displayValue) {\n      this._widget.option(\"value\", value);\n\n      if (!this._widget.option(\"selectedItem\") && displayValue) {\n        this._widget.option(\"value\", displayValue);\n      }\n    }\n  }, {\n    key: \"_updateButtonValue\",\n    value: function _updateButtonValue(value) {\n      if (this._widget.option(\"iconChecked\") && this._widget.option(\"iconUnchecked\")) {\n        this._widget.option(\"icon\", value ? this._widget.option(\"iconChecked\") : this._widget.option(\"iconUnchecked\"));\n      } else {\n        this._widget.$element().toggleClass(ACTIVE_FORMAT_CLASS, value);\n      }\n    }\n  }, {\n    key: \"_updateContextMenuItemValue\",\n    value: function _updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value) {\n      DiagramMenuHelper.updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value);\n    }\n  }]);\n\n  return DiagramToolbarItemHelper;\n}();\n\nvar DiagramToolbarSubItemHelper = /*#__PURE__*/function (_DiagramToolbarItemHe) {\n  _inherits(DiagramToolbarSubItemHelper, _DiagramToolbarItemHe);\n\n  var _super3 = _createSuper(DiagramToolbarSubItemHelper);\n\n  function DiagramToolbarSubItemHelper(widget, indexPath, rootCommandKey, rootWidget) {\n    var _this8;\n\n    _classCallCheck(this, DiagramToolbarSubItemHelper);\n\n    _this8 = _super3.call(this, widget);\n    _this8._indexPath = indexPath;\n    _this8._rootCommandKey = rootCommandKey;\n    _this8._rootWidget = rootWidget;\n    return _this8;\n  }\n\n  _createClass(DiagramToolbarSubItemHelper, [{\n    key: \"canUpdate\",\n    value: function canUpdate(showingSubMenu) {\n      return _get(_getPrototypeOf(DiagramToolbarSubItemHelper.prototype), \"canUpdate\", this).call(this, showingSubMenu) || showingSubMenu === this._widget;\n    }\n  }, {\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this._widget.option(this._getItemOptionText() + \"disabled\", !enabled);\n\n      var rootEnabled = this._hasEnabledCommandItems(this._widget.option(\"items\"));\n\n      this._rootWidget.option(\"disabled\", !rootEnabled);\n    }\n  }, {\n    key: \"_hasEnabledCommandItems\",\n    value: function _hasEnabledCommandItems(items) {\n      var _this9 = this;\n\n      if (items) {\n        return items.some(function (item) {\n          return void 0 !== item.command && !item.disabled || _this9._hasEnabledCommandItems(item.items);\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._updateContextMenuItemValue(this._widget, this._getItemOptionText(), this._rootCommandKey, value);\n    }\n  }, {\n    key: \"setItems\",\n    value: function setItems(items) {\n      this._updateContextMenuItems(this._widget, this._getItemOptionText(), this._rootCommandKey, items);\n    }\n  }, {\n    key: \"_getItemOptionText\",\n    value: function _getItemOptionText() {\n      return DiagramMenuHelper.getItemOptionText(this._widget, this._indexPath);\n    }\n  }]);\n\n  return DiagramToolbarSubItemHelper;\n}(DiagramToolbarItemHelper);\n\nexport default DiagramToolbar;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/diagram/ui.diagram.toolbar.js"],"names":["$","Toolbar","ContextMenu","DiagramBar","extend","hasWindow","DiagramPanel","DiagramMenuHelper","getDiagram","ACTIVE_FORMAT_CLASS","DIAGRAM_TOOLBAR_CLASS","DIAGRAM_TOOLBAR_SEPARATOR_CLASS","DIAGRAM_TOOLBAR_MENU_SEPARATOR_CLASS","DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS","DiagramToolbar","_commands","_itemHelpers","_commandContextMenus","_contextMenuList","_valueConverters","bar","DiagramToolbarBar","_createOnInternalCommand","_createOnCustomCommand","_createOnSubMenuVisibilityChangingAction","isServerSide","option","$element","width","_getCommands","$toolbar","_createMainElement","_renderToolbar","$toolbarContent","find","addClass","appendTo","_$element","beforeCommands","filter","command","indexOf","position","centerCommands","afterCommands","dataSource","concat","_prepareToolbarItems","_executeCommand","_toolbarInstance","_createComponent","items","location","actionHandler","map","item","locateInMenu","_createItem","_createItemOptions","_createItemActionOptions","getCommandValue","getEditorValue","getEditorDisplayValue","widget","template","data","index","element","menuItemTemplate","cssClass","options","stylingMode","type","text","hint","icon","iconUnchecked","iconChecked","onInitialized","e","_onItemInitialized","component","onContentReady","_onItemContentReady","_ref","valueExpr","displayExpr","showText","_createSelectBoxItemOptions","_createTextBoxItemOptions","_createColorBoxItemOptions","_createTextEditorItemOptions","dropDownOptions","container","isSelectButton","every","i","fieldTemplate","dxTextBox","readOnly","itemTemplate","attr","focusStateEnabled","hoverStateEnabled","buttons","name","disabled","onClick","contextMenu","_toggleContextMenu","openOnFieldClick","css","onOpened","onClosed","removeClass","handler","onValueChanged","parameter","getItemCommandParameter","call","_contextMenu","forEach","cm","hide","toggle","_addItemHelper","DiagramToolbarItemHelper","Browser","NAME","$menuContainer","target","getContextMenuCssClass","showEvent","closeOnOutsideClick","TouchUI","closest","_dropDownButtonElement","length","at","itemData","itemIndex","itemElement","getContextMenuItemTemplate","onItemClick","_ref2","onContextMenuItemClick","bind","onShowing","_showingSubMenu","_onSubMenuVisibilityChangingAction","visible","_ref3","_onContextMenuInitialized","onDisposing","_ref4","_onContextMenuDisposing","getButton","rootWidget","push","_addContextMenuHelper","helper","Error","indexPath","subItem","itemIndexPath","DiagramToolbarSubItemHelper","splice","value","_updateLocked","valueConverter","raiseBarCommandExecuted","_onInternalCommandAction","_onCustomCommandAction","_createActionByOption","enabled","canUpdate","setEnabled","displayValue","setValue","setItems","args","_invalidate","isMobileView","export","fileName","proxyUrl","buttonStylingMode","buttonType","editorStylingMode","skipAdjustSize","checked","_setItemValue","_setItemEnabled","_getKeys","_owner","key","_setEnabled","_setItemSubItems","_widget","showingSubMenu","rootCommandKey","_updateEditorValue","_updateButtonValue","_updateContextMenuItemValue","_updateContextMenuItems","_updateEditorItems","itemOptionText","updateContextMenuItems","getItemValue","toggleClass","updateContextMenuItemValue","_indexPath","_rootCommandKey","_rootWidget","_getItemOptionText","rootEnabled","_hasEnabledCommandItems","some","getItemOptionText"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbar.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport ContextMenu from \"../context_menu\";\r\nimport DiagramBar from \"./diagram.bar\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport DiagramPanel from \"./ui.diagram.panel\";\r\nimport DiagramMenuHelper from \"./ui.diagram.menu_helper\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nimport \"../select_box\";\r\nimport \"../color_box\";\r\nimport \"../check_box\";\r\nvar ACTIVE_FORMAT_CLASS = \"dx-format-active\";\r\nvar DIAGRAM_TOOLBAR_CLASS = \"dx-diagram-toolbar\";\r\nvar DIAGRAM_TOOLBAR_SEPARATOR_CLASS = \"dx-diagram-toolbar-separator\";\r\nvar DIAGRAM_TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-diagram-toolbar-menu-separator\";\r\nvar DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS = \"dx-diagram-mobile-toolbar-color-box-opened\";\r\nclass DiagramToolbar extends DiagramPanel {\r\n    _init() {\r\n        this._commands = [];\r\n        this._itemHelpers = {};\r\n        this._commandContextMenus = {};\r\n        this._contextMenuList = [];\r\n        this._valueConverters = {};\r\n        this.bar = new DiagramToolbarBar(this);\r\n        this._createOnInternalCommand();\r\n        this._createOnCustomCommand();\r\n        this._createOnSubMenuVisibilityChangingAction();\r\n        super._init()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        var isServerSide = !hasWindow();\r\n        if (!this.option(\"skipAdjustSize\") && !isServerSide) {\r\n            this.$element().width(\"\")\r\n        }\r\n        this._commands = this._getCommands();\r\n        this._itemHelpers = {};\r\n        this._commandContextMenus = {};\r\n        this._contextMenuList = [];\r\n        var $toolbar = this._createMainElement();\r\n        this._renderToolbar($toolbar);\r\n        if (!this.option(\"skipAdjustSize\") && !isServerSide) {\r\n            var $toolbarContent = this.$element().find(\".dx-toolbar-before\");\r\n            this.$element().width($toolbarContent.width())\r\n        }\r\n    }\r\n    _createMainElement() {\r\n        return $(\"<div>\").addClass(DIAGRAM_TOOLBAR_CLASS).appendTo(this._$element)\r\n    }\r\n    _getCommands() {\r\n        return this.option(\"commands\") || []\r\n    }\r\n    _renderToolbar($toolbar) {\r\n        var beforeCommands = this._commands.filter(command => -1 === [\"after\", \"center\"].indexOf(command.position));\r\n        var centerCommands = this._commands.filter(command => \"center\" === command.position);\r\n        var afterCommands = this._commands.filter(command => \"after\" === command.position);\r\n        var dataSource = [].concat(this._prepareToolbarItems(beforeCommands, \"before\", this._executeCommand)).concat(this._prepareToolbarItems(centerCommands, \"center\", this._executeCommand)).concat(this._prepareToolbarItems(afterCommands, \"after\", this._executeCommand));\r\n        this._toolbarInstance = this._createComponent($toolbar, Toolbar, {\r\n            dataSource: dataSource\r\n        })\r\n    }\r\n    _prepareToolbarItems(items, location, actionHandler) {\r\n        return items.map(item => extend(true, {\r\n            location: location,\r\n            locateInMenu: this.option(\"locateInMenu\")\r\n        }, this._createItem(item, location, actionHandler), this._createItemOptions(item), this._createItemActionOptions(item, actionHandler)))\r\n    }\r\n    _createItem(item, location, actionHandler) {\r\n        if (item.getCommandValue || item.getEditorValue || item.getEditorDisplayValue) {\r\n            this._valueConverters[item.command] = {\r\n                getCommandValue: item.getCommandValue,\r\n                getEditorValue: item.getEditorValue,\r\n                getEditorDisplayValue: item.getEditorDisplayValue\r\n            }\r\n        }\r\n        if (\"separator\" === item.widget) {\r\n            return {\r\n                template: (data, index, element) => {\r\n                    $(element).addClass(DIAGRAM_TOOLBAR_SEPARATOR_CLASS)\r\n                },\r\n                menuItemTemplate: (data, index, element) => {\r\n                    $(element).addClass(DIAGRAM_TOOLBAR_MENU_SEPARATOR_CLASS)\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            widget: item.widget || \"dxButton\",\r\n            cssClass: item.cssClass,\r\n            options: {\r\n                stylingMode: this.option(\"buttonStylingMode\"),\r\n                type: this.option(\"buttonType\"),\r\n                text: item.text,\r\n                hint: item.hint,\r\n                icon: item.icon || item.iconUnchecked || item.iconChecked,\r\n                iconChecked: item.iconChecked,\r\n                iconUnchecked: item.iconUnchecked,\r\n                onInitialized: e => this._onItemInitialized(e.component, item),\r\n                onContentReady: e => this._onItemContentReady(e.component, item, actionHandler)\r\n            }\r\n        }\r\n    }\r\n    _createItemOptions(_ref) {\r\n        var {\r\n            widget: widget,\r\n            command: command,\r\n            items: items,\r\n            valueExpr: valueExpr,\r\n            displayExpr: displayExpr,\r\n            showText: showText,\r\n            hint: hint,\r\n            icon: icon\r\n        } = _ref;\r\n        if (\"dxSelectBox\" === widget) {\r\n            return this._createSelectBoxItemOptions(command, hint, items, valueExpr, displayExpr)\r\n        } else if (\"dxTextBox\" === widget) {\r\n            return this._createTextBoxItemOptions(command, hint)\r\n        } else if (\"dxColorBox\" === widget) {\r\n            return this._createColorBoxItemOptions(command, hint, icon)\r\n        } else if (!widget || \"dxButton\" === widget) {\r\n            return {\r\n                showText: showText || \"inMenu\"\r\n            }\r\n        }\r\n    }\r\n    _createSelectBoxItemOptions(command, hint, items, valueExpr, displayExpr) {\r\n        var options = this._createTextEditorItemOptions(hint);\r\n        options = extend(true, options, {\r\n            options: {\r\n                dataSource: items,\r\n                displayExpr: displayExpr || \"text\",\r\n                valueExpr: valueExpr || \"value\",\r\n                dropDownOptions: {\r\n                    container: this.option(\"container\")\r\n                }\r\n            }\r\n        });\r\n        var isSelectButton = items && items.every(i => void 0 !== i.icon);\r\n        if (isSelectButton) {\r\n            options = extend(true, options, {\r\n                options: {\r\n                    fieldTemplate: (data, container) => {\r\n                        $(\"<i>\").addClass(data && data.icon).appendTo(container);\r\n                        $(\"<div>\").dxTextBox({\r\n                            readOnly: true,\r\n                            stylingMode: \"outlined\"\r\n                        }).appendTo(container)\r\n                    },\r\n                    itemTemplate: (data, index, container) => {\r\n                        $(container).attr(\"title\", data.hint);\r\n                        return '<i class=\"'.concat(data.icon, '\"></i>')\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return options\r\n    }\r\n    _createTextBoxItemOptions(command, hint) {\r\n        var options = this._createTextEditorItemOptions(hint);\r\n        options = extend(true, options, {\r\n            options: {\r\n                readOnly: true,\r\n                focusStateEnabled: false,\r\n                hoverStateEnabled: false,\r\n                buttons: [{\r\n                    name: \"dropDown\",\r\n                    location: \"after\",\r\n                    options: {\r\n                        icon: \"spindown\",\r\n                        disabled: false,\r\n                        stylingMode: \"text\",\r\n                        onClick: e => {\r\n                            var contextMenu = this._commandContextMenus[command];\r\n                            if (contextMenu) {\r\n                                this._toggleContextMenu(contextMenu)\r\n                            }\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        });\r\n        return options\r\n    }\r\n    _createColorBoxItemOptions(command, hint, icon) {\r\n        var options = this._createTextEditorItemOptions(hint);\r\n        if (icon) {\r\n            options = extend(true, options, {\r\n                options: {\r\n                    openOnFieldClick: true,\r\n                    fieldTemplate: (data, container) => {\r\n                        $(\"<i>\").addClass(icon).css(\"borderBottomColor\", data).appendTo(container);\r\n                        $(\"<div>\").dxTextBox({\r\n                            readOnly: true,\r\n                            stylingMode: \"outlined\"\r\n                        }).appendTo(container)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        options = extend(true, options, {\r\n            options: {\r\n                dropDownOptions: {\r\n                    container: this.option(\"container\")\r\n                },\r\n                onOpened: () => {\r\n                    if (this.option(\"isMobileView\")) {\r\n                        $(\"body\").addClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS)\r\n                    }\r\n                },\r\n                onClosed: () => {\r\n                    $(\"body\").removeClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS)\r\n                }\r\n            }\r\n        });\r\n        return options\r\n    }\r\n    _createTextEditorItemOptions(hint) {\r\n        return {\r\n            options: {\r\n                stylingMode: this.option(\"editorStylingMode\"),\r\n                hint: hint\r\n            }\r\n        }\r\n    }\r\n    _createItemActionOptions(item, handler) {\r\n        switch (item.widget) {\r\n            case \"dxSelectBox\":\r\n            case \"dxColorBox\":\r\n            case \"dxCheckBox\":\r\n                return {\r\n                    options: {\r\n                        onValueChanged: e => {\r\n                            var parameter = DiagramMenuHelper.getItemCommandParameter(this, item, e.component.option(\"value\"));\r\n                            handler.call(this, item.command, item.name, parameter)\r\n                        }\r\n                    }\r\n                };\r\n            case \"dxTextBox\":\r\n                return {};\r\n            default:\r\n                return {\r\n                    options: {\r\n                        onClick: e => {\r\n                            if (!item.items) {\r\n                                var parameter = DiagramMenuHelper.getItemCommandParameter(this, item);\r\n                                handler.call(this, item.command, item.name, parameter)\r\n                            } else {\r\n                                var contextMenu = e.component._contextMenu;\r\n                                if (contextMenu) {\r\n                                    this._toggleContextMenu(contextMenu)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n    }\r\n    _toggleContextMenu(contextMenu) {\r\n        this._contextMenuList.forEach(cm => {\r\n            if (contextMenu !== cm) {\r\n                cm.hide()\r\n            }\r\n        });\r\n        contextMenu.toggle()\r\n    }\r\n    _onItemInitialized(widget, item) {\r\n        this._addItemHelper(item.command, new DiagramToolbarItemHelper(widget))\r\n    }\r\n    _onItemContentReady(widget, item, actionHandler) {\r\n        var {\r\n            Browser: Browser\r\n        } = getDiagram();\r\n        if ((\"dxButton\" === widget.NAME || \"dxTextBox\" === widget.NAME) && item.items) {\r\n            var $menuContainer = $(\"<div>\").appendTo(this.$element());\r\n            widget._contextMenu = this._createComponent($menuContainer, ContextMenu, {\r\n                items: item.items,\r\n                target: widget.$element(),\r\n                cssClass: DiagramMenuHelper.getContextMenuCssClass(),\r\n                showEvent: \"\",\r\n                closeOnOutsideClick: e => !Browser.TouchUI && 0 === $(e.target).closest(widget._contextMenu._dropDownButtonElement).length,\r\n                focusStateEnabled: false,\r\n                position: {\r\n                    at: \"left bottom\"\r\n                },\r\n                itemTemplate: function(itemData, itemIndex, itemElement) {\r\n                    DiagramMenuHelper.getContextMenuItemTemplate(this, itemData, itemIndex, itemElement)\r\n                },\r\n                onItemClick: _ref2 => {\r\n                    var {\r\n                        component: component,\r\n                        itemData: itemData\r\n                    } = _ref2;\r\n                    DiagramMenuHelper.onContextMenuItemClick(this, itemData, actionHandler.bind(this));\r\n                    if (!itemData.items || !itemData.items.length) {\r\n                        component.hide()\r\n                    }\r\n                },\r\n                onShowing: e => {\r\n                    if (this._showingSubMenu) {\r\n                        return\r\n                    }\r\n                    this._showingSubMenu = e.component;\r\n                    this._onSubMenuVisibilityChangingAction({\r\n                        visible: true,\r\n                        component: this\r\n                    });\r\n                    e.component.option(\"items\", e.component.option(\"items\"));\r\n                    delete this._showingSubMenu\r\n                },\r\n                onInitialized: _ref3 => {\r\n                    var {\r\n                        component: component\r\n                    } = _ref3;\r\n                    return this._onContextMenuInitialized(component, item, widget)\r\n                },\r\n                onDisposing: _ref4 => {\r\n                    var {\r\n                        component: component\r\n                    } = _ref4;\r\n                    return this._onContextMenuDisposing(component, item)\r\n                }\r\n            });\r\n            if (!Browser.TouchUI) {\r\n                widget._contextMenu._dropDownButtonElement = widget.$element();\r\n                if (\"dxTextBox\" === widget.NAME) {\r\n                    widget._contextMenu._dropDownButtonElement = widget.getButton(\"dropDown\").element()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onContextMenuInitialized(widget, item, rootWidget) {\r\n        this._contextMenuList.push(widget);\r\n        if (item.command) {\r\n            this._commandContextMenus[item.command] = widget\r\n        }\r\n        this._addContextMenuHelper(item, widget, [], rootWidget)\r\n    }\r\n    _addItemHelper(command, helper) {\r\n        if (void 0 !== command) {\r\n            if (this._itemHelpers[command]) {\r\n                throw new Error(\"Toolbar cannot contain duplicated commands.\")\r\n            }\r\n            this._itemHelpers[command] = helper\r\n        }\r\n    }\r\n    _addContextMenuHelper(item, widget, indexPath, rootWidget) {\r\n        if (item.items) {\r\n            item.items.forEach((subItem, index) => {\r\n                var itemIndexPath = indexPath.concat(index);\r\n                this._addItemHelper(subItem.command, new DiagramToolbarSubItemHelper(widget, itemIndexPath, subItem.command, rootWidget));\r\n                this._addContextMenuHelper(subItem, widget, itemIndexPath, rootWidget)\r\n            })\r\n        }\r\n    }\r\n    _onContextMenuDisposing(widget, item) {\r\n        this._contextMenuList.splice(this._contextMenuList.indexOf(widget), 1);\r\n        delete this._commandContextMenus[item.command]\r\n    }\r\n    _executeCommand(command, name, value) {\r\n        if (this._updateLocked) {\r\n            return\r\n        }\r\n        if (\"number\" === typeof command) {\r\n            var valueConverter = this._valueConverters[command];\r\n            if (valueConverter && valueConverter.getCommandValue) {\r\n                value = valueConverter.getCommandValue(value)\r\n            }\r\n            this.bar.raiseBarCommandExecuted(command, value)\r\n        } else if (\"string\" === typeof command) {\r\n            this._onInternalCommandAction({\r\n                command: command\r\n            })\r\n        }\r\n        if (void 0 !== name) {\r\n            this._onCustomCommandAction({\r\n                name: name\r\n            })\r\n        }\r\n    }\r\n    _createOnInternalCommand() {\r\n        this._onInternalCommandAction = this._createActionByOption(\"onInternalCommand\")\r\n    }\r\n    _createOnCustomCommand() {\r\n        this._onCustomCommandAction = this._createActionByOption(\"onCustomCommand\")\r\n    }\r\n    _setItemEnabled(command, enabled) {\r\n        if (command in this._itemHelpers) {\r\n            var helper = this._itemHelpers[command];\r\n            if (helper.canUpdate(this._showingSubMenu)) {\r\n                helper.setEnabled(enabled)\r\n            }\r\n        }\r\n    }\r\n    _setEnabled(enabled) {\r\n        this._toolbarInstance.option(\"disabled\", !enabled);\r\n        this._contextMenuList.forEach(contextMenu => {\r\n            contextMenu.option(\"disabled\", !enabled)\r\n        })\r\n    }\r\n    _setItemValue(command, value) {\r\n        try {\r\n            this._updateLocked = true;\r\n            if (command in this._itemHelpers) {\r\n                var helper = this._itemHelpers[command];\r\n                if (helper.canUpdate(this._showingSubMenu)) {\r\n                    var valueConverter = this._valueConverters[command];\r\n                    if (valueConverter && valueConverter.getEditorValue) {\r\n                        value = valueConverter.getEditorValue(value)\r\n                    }\r\n                    var displayValue;\r\n                    if (valueConverter && valueConverter.getEditorDisplayValue) {\r\n                        displayValue = valueConverter.getEditorDisplayValue(value)\r\n                    }\r\n                    var contextMenu = this._commandContextMenus[command];\r\n                    helper.setValue(value, displayValue, contextMenu, contextMenu && command)\r\n                }\r\n            }\r\n        } finally {\r\n            this._updateLocked = false\r\n        }\r\n    }\r\n    _setItemSubItems(command, items) {\r\n        this._updateLocked = true;\r\n        if (command in this._itemHelpers) {\r\n            var helper = this._itemHelpers[command];\r\n            if (helper.canUpdate(this._showingSubMenu)) {\r\n                var contextMenu = this._commandContextMenus[command];\r\n                helper.setItems(items, contextMenu, contextMenu && command)\r\n            }\r\n        }\r\n        this._updateLocked = false\r\n    }\r\n    _createOnSubMenuVisibilityChangingAction() {\r\n        this._onSubMenuVisibilityChangingAction = this._createActionByOption(\"onSubMenuVisibilityChanging\")\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"isMobileView\":\r\n                $(\"body\").removeClass(DIAGRAM_MOBILE_TOOLBAR_COLOR_BOX_OPENED_CLASS);\r\n                this._invalidate();\r\n                break;\r\n            case \"onSubMenuVisibilityChanging\":\r\n                this._createOnSubMenuVisibilityChangingAction();\r\n                break;\r\n            case \"onInternalCommand\":\r\n                this._createOnInternalCommand();\r\n                break;\r\n            case \"onCustomCommand\":\r\n                this._createOnCustomCommand();\r\n                break;\r\n            case \"container\":\r\n            case \"commands\":\r\n                this._invalidate();\r\n                break;\r\n            case \"export\":\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            isMobileView: false,\r\n            export: {\r\n                fileName: \"Diagram\",\r\n                proxyUrl: void 0\r\n            },\r\n            locateInMenu: \"auto\",\r\n            buttonStylingMode: \"text\",\r\n            buttonType: \"normal\",\r\n            editorStylingMode: \"filled\",\r\n            skipAdjustSize: false\r\n        })\r\n    }\r\n    setCommandChecked(command, checked) {\r\n        this._setItemValue(command, checked)\r\n    }\r\n    setCommandEnabled(command, enabled) {\r\n        this._setItemEnabled(command, enabled)\r\n    }\r\n}\r\nclass DiagramToolbarBar extends DiagramBar {\r\n    getCommandKeys() {\r\n        return this._getKeys(this._owner._commands)\r\n    }\r\n    setItemValue(key, value) {\r\n        this._owner._setItemValue(key, value)\r\n    }\r\n    setItemEnabled(key, enabled) {\r\n        this._owner._setItemEnabled(key, enabled)\r\n    }\r\n    setEnabled(enabled) {\r\n        this._owner._setEnabled(enabled)\r\n    }\r\n    setItemSubItems(key, items) {\r\n        this._owner._setItemSubItems(key, items)\r\n    }\r\n}\r\nclass DiagramToolbarItemHelper {\r\n    constructor(widget) {\r\n        this._widget = widget\r\n    }\r\n    canUpdate(showingSubMenu) {\r\n        return void 0 === showingSubMenu\r\n    }\r\n    setEnabled(enabled) {\r\n        this._widget.option(\"disabled\", !enabled)\r\n    }\r\n    setValue(value, displayValue, contextMenu, rootCommandKey) {\r\n        if (\"value\" in this._widget.option()) {\r\n            this._updateEditorValue(value, displayValue)\r\n        } else if (void 0 !== value) {\r\n            this._updateButtonValue(value)\r\n        }\r\n        if (contextMenu) {\r\n            this._updateContextMenuItemValue(contextMenu, \"\", rootCommandKey, value)\r\n        }\r\n    }\r\n    setItems(items, contextMenu, rootCommandKey) {\r\n        if (contextMenu) {\r\n            this._updateContextMenuItems(contextMenu, \"\", rootCommandKey, items)\r\n        } else {\r\n            this._updateEditorItems(items)\r\n        }\r\n    }\r\n    _updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items) {\r\n        DiagramMenuHelper.updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items)\r\n    }\r\n    _updateEditorItems(items) {\r\n        if (\"items\" in this._widget.option()) {\r\n            this._widget.option(\"items\", items.map(item => ({\r\n                value: DiagramMenuHelper.getItemValue(item),\r\n                text: item.text\r\n            })))\r\n        }\r\n    }\r\n    _updateEditorValue(value, displayValue) {\r\n        this._widget.option(\"value\", value);\r\n        if (!this._widget.option(\"selectedItem\") && displayValue) {\r\n            this._widget.option(\"value\", displayValue)\r\n        }\r\n    }\r\n    _updateButtonValue(value) {\r\n        if (this._widget.option(\"iconChecked\") && this._widget.option(\"iconUnchecked\")) {\r\n            this._widget.option(\"icon\", value ? this._widget.option(\"iconChecked\") : this._widget.option(\"iconUnchecked\"))\r\n        } else {\r\n            this._widget.$element().toggleClass(ACTIVE_FORMAT_CLASS, value)\r\n        }\r\n    }\r\n    _updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value) {\r\n        DiagramMenuHelper.updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value)\r\n    }\r\n}\r\nclass DiagramToolbarSubItemHelper extends DiagramToolbarItemHelper {\r\n    constructor(widget, indexPath, rootCommandKey, rootWidget) {\r\n        super(widget);\r\n        this._indexPath = indexPath;\r\n        this._rootCommandKey = rootCommandKey;\r\n        this._rootWidget = rootWidget\r\n    }\r\n    canUpdate(showingSubMenu) {\r\n        return super.canUpdate(showingSubMenu) || showingSubMenu === this._widget\r\n    }\r\n    setEnabled(enabled) {\r\n        this._widget.option(this._getItemOptionText() + \"disabled\", !enabled);\r\n        var rootEnabled = this._hasEnabledCommandItems(this._widget.option(\"items\"));\r\n        this._rootWidget.option(\"disabled\", !rootEnabled)\r\n    }\r\n    _hasEnabledCommandItems(items) {\r\n        if (items) {\r\n            return items.some(item => void 0 !== item.command && !item.disabled || this._hasEnabledCommandItems(item.items))\r\n        }\r\n        return false\r\n    }\r\n    setValue(value) {\r\n        this._updateContextMenuItemValue(this._widget, this._getItemOptionText(), this._rootCommandKey, value)\r\n    }\r\n    setItems(items) {\r\n        this._updateContextMenuItems(this._widget, this._getItemOptionText(), this._rootCommandKey, items)\r\n    }\r\n    _getItemOptionText() {\r\n        return DiagramMenuHelper.getItemOptionText(this._widget, this._indexPath)\r\n    }\r\n}\r\nexport default DiagramToolbar;\r\n"]},"metadata":{},"sourceType":"module"}