{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/common.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { BaseGauge, compareArrays as _compareArrays } from \"./base_gauge\";\nimport { isDefined as _isDefined, isNumeric as _isNumber } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nvar _isArray = Array.isArray;\nimport { Axis } from \"../axes/base_axis\";\nimport { map as _map, normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar _isFinite = isFinite;\nvar _Number = Number;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _extend = extend;\nvar _each = each;\nimport { noop as _noop } from \"../../core/utils/common\";\nvar SHIFT_ANGLE = 90;\nvar OPTION_VALUE = \"value\";\nvar OPTION_SUBVALUES = \"subvalues\";\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 5;\nvar DEFAULT_NUMBER_MULTIPLIERS = [1, 2, 5];\n\nfunction processValue(value, fallbackValue) {\n  if (null === value) {\n    return value;\n  }\n\n  return _isFinite(value) ? _Number(value) : fallbackValue;\n}\n\nfunction parseArrayOfNumbers(arg) {\n  return _isArray(arg) ? arg : _isNumber(arg) ? [arg] : null;\n}\n\nexport var dxGauge = BaseGauge.inherit({\n  _initCore: function _initCore() {\n    var that = this;\n    var renderer = that._renderer;\n\n    that._setupValue(that.option(OPTION_VALUE));\n\n    that.__subvalues = parseArrayOfNumbers(that.option(OPTION_SUBVALUES));\n\n    that._setupSubvalues(that.__subvalues);\n\n    selectMode(that);\n    that.callBase.apply(that, arguments);\n    that._rangeContainer = new that._factory.RangeContainer({\n      renderer: renderer,\n      container: renderer.root,\n      translator: that._translator,\n      themeManager: that._themeManager\n    });\n\n    that._initScale();\n\n    that._subvalueIndicatorContainer = that._renderer.g().attr({\n      class: \"dxg-subvalue-indicators\"\n    }).linkOn(that._renderer.root, \"valueIndicator\").enableLinks();\n  },\n  _fontFields: [\"scale.label.font\", \"valueIndicators.rangebar.text.font\", \"valueIndicators.textcloud.text.font\", \"indicator.text.font\"],\n  _initScale: function _initScale() {\n    this._scaleGroup = this._renderer.g().attr({\n      class: \"dxg-scale\"\n    }).linkOn(this._renderer.root, \"scale\");\n    this._scale = new Axis({\n      incidentOccurred: this._incidentOccurred,\n      renderer: this._renderer,\n      axesContainerGroup: this._scaleGroup,\n      axisType: this._scaleTypes.type,\n      drawingType: this._scaleTypes.drawingType,\n      widgetClass: \"dxg\",\n      getTemplate: function getTemplate() {}\n    });\n  },\n  _disposeCore: function _disposeCore() {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    that._scale.dispose();\n\n    that._scaleGroup.linkOff();\n\n    that._rangeContainer.dispose();\n\n    that._disposeValueIndicators();\n\n    that._subvalueIndicatorContainer.linkOff();\n\n    that._scale = that._scaleGroup = that._rangeContainer = null;\n  },\n  _disposeValueIndicators: function _disposeValueIndicators() {\n    this._valueIndicator && this._valueIndicator.dispose();\n    this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.dispose();\n    this._valueIndicator = this._subvalueIndicatorsSet = null;\n  },\n  _setupDomainCore: function _setupDomainCore() {\n    var scaleOption = this.option(\"scale\") || {};\n    var startValue = this.option(\"startValue\");\n    var endValue = this.option(\"endValue\");\n    startValue = _isNumber(startValue) ? _Number(startValue) : _isNumber(scaleOption.startValue) ? _Number(scaleOption.startValue) : 0;\n    endValue = _isNumber(endValue) ? _Number(endValue) : _isNumber(scaleOption.endValue) ? _Number(scaleOption.endValue) : 100;\n    this._baseValue = startValue < endValue ? startValue : endValue;\n\n    this._translator.setDomain(startValue, endValue);\n  },\n  _cleanContent: function _cleanContent() {\n    this._rangeContainer.clean();\n\n    this._cleanValueIndicators();\n  },\n  _measureScale: function _measureScale(scaleOptions) {\n    var majorTick = scaleOptions.tick;\n    var majorTickEnabled = majorTick.visible && majorTick.length > 0 && majorTick.width > 0;\n    var minorTick = scaleOptions.minorTick;\n    var minorTickEnabled = minorTick.visible && minorTick.length > 0 && minorTick.width > 0;\n    var label = scaleOptions.label;\n    var indentFromTick = Number(label.indentFromTick);\n\n    if (!majorTickEnabled && !minorTickEnabled && !label.visible) {\n      return {};\n    }\n\n    var textParams = this._scale.measureLabels(extend({}, this._canvas));\n\n    var layoutValue = this._getScaleLayoutValue();\n\n    var result = {\n      min: layoutValue,\n      max: layoutValue\n    };\n\n    var coefs = this._getTicksCoefficients(scaleOptions);\n\n    var innerCoef = coefs.inner;\n    var outerCoef = coefs.outer;\n\n    if (majorTickEnabled) {\n      result.min = _min(result.min, layoutValue - innerCoef * majorTick.length);\n      result.max = _max(result.max, layoutValue + outerCoef * majorTick.length);\n    }\n\n    if (minorTickEnabled) {\n      result.min = _min(result.min, layoutValue - innerCoef * minorTick.length);\n      result.max = _max(result.max, layoutValue + outerCoef * minorTick.length);\n    }\n\n    label.visible && this._correctScaleIndents(result, indentFromTick, textParams);\n    return result;\n  },\n  _renderContent: function _renderContent() {\n    var that = this;\n\n    var scaleOptions = that._prepareScaleSettings();\n\n    that._rangeContainer.render(_extend(that._getOption(\"rangeContainer\"), {\n      vertical: that._area.vertical\n    }));\n\n    that._renderScale(scaleOptions);\n\n    that._subvalueIndicatorContainer.linkAppend();\n\n    var elements = _map([that._rangeContainer].concat(that._prepareValueIndicators()), function (element) {\n      return element && element.enabled ? element : null;\n    });\n\n    that._applyMainLayout(elements, that._measureScale(scaleOptions));\n\n    _each(elements, function (_, element) {\n      element.resize(that._getElementLayout(element.getOffset()));\n    });\n\n    that._shiftScale(that._getElementLayout(0), scaleOptions);\n\n    that._beginValueChanging();\n\n    that._updateActiveElements();\n\n    that._endValueChanging();\n  },\n  _prepareScaleSettings: function _prepareScaleSettings() {\n    var that = this;\n    var userOptions = that.option(\"scale\");\n    var scaleOptions = extend(true, {}, that._themeManager.theme(\"scale\"), userOptions);\n    scaleOptions.label.indentFromAxis = 0;\n    scaleOptions.isHorizontal = !that._area.vertical;\n    scaleOptions.forceUserTickInterval |= _isDefined(userOptions) && _isDefined(userOptions.tickInterval) && !_isDefined(userOptions.scaleDivisionFactor);\n    scaleOptions.axisDivisionFactor = scaleOptions.scaleDivisionFactor || that._gridSpacingFactor;\n    scaleOptions.minorAxisDivisionFactor = scaleOptions.minorScaleDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\n    scaleOptions.numberMultipliers = DEFAULT_NUMBER_MULTIPLIERS;\n    scaleOptions.tickOrientation = that._getTicksOrientation(scaleOptions);\n\n    if (scaleOptions.label.useRangeColors) {\n      scaleOptions.label.customizeColor = function () {\n        return that._rangeContainer.getColorForValue(this.value);\n      };\n    }\n\n    return scaleOptions;\n  },\n  _renderScale: function _renderScale(scaleOptions) {\n    var bounds = this._translator.getDomain();\n\n    var startValue = bounds[0];\n    var endValue = bounds[1];\n\n    var angles = this._translator.getCodomain();\n\n    var invert = !!(startValue > endValue ^ scaleOptions.inverted);\n\n    var min = _min(startValue, endValue);\n\n    var max = _max(startValue, endValue);\n\n    scaleOptions.min = min;\n    scaleOptions.max = max;\n    scaleOptions.startAngle = SHIFT_ANGLE - angles[0];\n    scaleOptions.endAngle = SHIFT_ANGLE - angles[1];\n    scaleOptions.skipViewportExtending = true;\n    scaleOptions.inverted = invert;\n\n    this._scale.updateOptions(scaleOptions);\n\n    this._scale.setBusinessRange({\n      axisType: \"continuous\",\n      dataType: \"numeric\",\n      min: min,\n      max: max,\n      invert: invert\n    });\n\n    this._updateScaleTickIndent(scaleOptions);\n\n    this._scaleGroup.linkAppend();\n\n    this._scale.draw(extend({}, this._canvas));\n  },\n  _updateIndicatorSettings: function _updateIndicatorSettings(settings) {\n    settings.currentValue = settings.baseValue = _isFinite(this._translator.translate(settings.baseValue)) ? _Number(settings.baseValue) : this._baseValue;\n    settings.vertical = this._area.vertical;\n\n    if (settings.text && !settings.text.format) {\n      settings.text.format = this._defaultFormatOptions;\n    }\n  },\n  _prepareIndicatorSettings: function _prepareIndicatorSettings(options, defaultTypeField) {\n    var theme = this._themeManager.theme(\"valueIndicators\");\n\n    var type = _normalizeEnum(options.type || this._themeManager.theme(defaultTypeField));\n\n    var settings = _extend(true, {}, theme._default, theme[type], options);\n\n    settings.type = type;\n    settings.animation = this._animationSettings;\n    settings.containerBackgroundColor = this._containerBackgroundColor;\n\n    this._updateIndicatorSettings(settings);\n\n    return settings;\n  },\n  _cleanValueIndicators: function _cleanValueIndicators() {\n    this._valueIndicator && this._valueIndicator.clean();\n    this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.clean();\n  },\n  _prepareValueIndicators: function _prepareValueIndicators() {\n    this._prepareValueIndicator();\n\n    null !== this.__subvalues && this._prepareSubvalueIndicators();\n    return [this._valueIndicator, this._subvalueIndicatorsSet];\n  },\n  _updateActiveElements: function _updateActiveElements() {\n    this._updateValueIndicator();\n\n    this._updateSubvalueIndicators();\n  },\n  _prepareValueIndicator: function _prepareValueIndicator() {\n    var target = this._valueIndicator;\n\n    var settings = this._prepareIndicatorSettings(this.option(\"valueIndicator\") || {}, \"valueIndicatorType\");\n\n    if (target && target.type !== settings.type) {\n      target.dispose();\n      target = null;\n    }\n\n    if (!target) {\n      target = this._valueIndicator = this._createIndicator(settings.type, this._renderer.root, \"dxg-value-indicator\", \"value-indicator\");\n    }\n\n    target.render(settings);\n  },\n  _createSubvalueIndicatorsSet: function _createSubvalueIndicatorsSet() {\n    var that = this;\n    var root = that._subvalueIndicatorContainer;\n    return new ValueIndicatorsSet({\n      createIndicator: function createIndicator(type, i) {\n        return that._createIndicator(type, root, \"dxg-subvalue-indicator\", \"subvalue-indicator\", i);\n      },\n      createPalette: function createPalette(palette) {\n        return that._themeManager.createPalette(palette);\n      }\n    });\n  },\n  _prepareSubvalueIndicators: function _prepareSubvalueIndicators() {\n    var target = this._subvalueIndicatorsSet;\n\n    var settings = this._prepareIndicatorSettings(this.option(\"subvalueIndicator\") || {}, \"subvalueIndicatorType\");\n\n    if (!target) {\n      target = this._subvalueIndicatorsSet = this._createSubvalueIndicatorsSet();\n    }\n\n    var isRecreate = settings.type !== target.type;\n    target.type = settings.type;\n\n    var dummy = this._createIndicator(settings.type, this._renderer.root);\n\n    if (dummy) {\n      dummy.dispose();\n      target.render(settings, isRecreate);\n    }\n  },\n  _setupValue: function _setupValue(value) {\n    this.__value = processValue(value, this.__value);\n  },\n  _setupSubvalues: function _setupSubvalues(subvalues) {\n    var vals = void 0 === subvalues ? this.__subvalues : parseArrayOfNumbers(subvalues);\n    var i;\n    var ii;\n    var list;\n\n    if (null === vals) {\n      return;\n    }\n\n    for (i = 0, ii = vals.length, list = []; i < ii; ++i) {\n      list.push(processValue(vals[i], this.__subvalues[i]));\n    }\n\n    this.__subvalues = list;\n  },\n  _updateValueIndicator: function _updateValueIndicator() {\n    this._valueIndicator && this._valueIndicator.value(this.__value, this._noAnimation);\n  },\n  _updateSubvalueIndicators: function _updateSubvalueIndicators() {\n    this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.values(this.__subvalues, this._noAnimation);\n  },\n  value: function value(arg) {\n    if (void 0 !== arg) {\n      this._changeValue(arg);\n\n      return this;\n    }\n\n    return this.__value;\n  },\n  subvalues: function subvalues(arg) {\n    if (void 0 !== arg) {\n      this._changeSubvalues(arg);\n\n      return this;\n    }\n\n    return null !== this.__subvalues ? this.__subvalues.slice() : void 0;\n  },\n  _changeValue: function _changeValue(value) {\n    this._setupValue(value);\n\n    this._beginValueChanging();\n\n    this._updateValueIndicator();\n\n    if (this.__value !== this.option(OPTION_VALUE)) {\n      this.option(OPTION_VALUE, this.__value);\n    }\n\n    this._endValueChanging();\n  },\n  _changeSubvalues: function _changeSubvalues(subvalues) {\n    if (null !== this.__subvalues) {\n      this._setupSubvalues(subvalues);\n\n      this._beginValueChanging();\n\n      this._updateSubvalueIndicators();\n\n      this._endValueChanging();\n    } else {\n      this.__subvalues = parseArrayOfNumbers(subvalues);\n\n      this._setContentSize();\n\n      this._renderContent();\n    }\n\n    if (!_compareArrays(this.__subvalues, this.option(OPTION_SUBVALUES))) {\n      this.option(OPTION_SUBVALUES, this.__subvalues);\n    }\n  },\n  _optionChangesMap: {\n    scale: \"DOMAIN\",\n    rangeContainer: \"MOSTLY_TOTAL\",\n    valueIndicator: \"MOSTLY_TOTAL\",\n    subvalueIndicator: \"MOSTLY_TOTAL\",\n    containerBackgroundColor: \"MOSTLY_TOTAL\",\n    value: \"VALUE\",\n    subvalues: \"SUBVALUES\",\n    valueIndicators: \"MOSTLY_TOTAL\"\n  },\n  _customChangesOrder: [\"VALUE\", \"SUBVALUES\"],\n  _change_VALUE: function _change_VALUE() {\n    this._changeValue(this.option(OPTION_VALUE));\n  },\n  _change_SUBVALUES: function _change_SUBVALUES() {\n    this._changeSubvalues(this.option(OPTION_SUBVALUES));\n  },\n  _applyMainLayout: null,\n  _getElementLayout: null,\n  _createIndicator: function _createIndicator(type, owner, className, trackerType, trackerIndex, _strict) {\n    var indicator = this._factory.createIndicator({\n      renderer: this._renderer,\n      translator: this._translator,\n      owner: owner,\n      tracker: this._tracker,\n      className: className\n    }, type, _strict);\n\n    if (indicator) {\n      indicator.type = type;\n      indicator._trackerInfo = {\n        type: trackerType,\n        index: trackerIndex\n      };\n    }\n\n    return indicator;\n  },\n  _getApproximateScreenRange: null\n});\n\nfunction valueGetter(arg) {\n  return arg ? arg.value : null;\n}\n\nfunction setupValues(that, fieldName, optionItems) {\n  var currentValues = that[fieldName];\n  var newValues = _isArray(optionItems) ? _map(optionItems, valueGetter) : [];\n  var i = 0;\n  var ii = newValues.length;\n  var list = [];\n\n  for (; i < ii; ++i) {\n    list.push(processValue(newValues[i], currentValues[i]));\n  }\n\n  that[fieldName] = list;\n}\n\nfunction selectMode(gauge) {\n  if (void 0 === gauge.option(OPTION_VALUE) && void 0 === gauge.option(OPTION_SUBVALUES)) {\n    if (void 0 !== gauge.option(\"valueIndicators\")) {\n      disableDefaultMode(gauge);\n      selectHardMode(gauge);\n    }\n  }\n}\n\nfunction disableDefaultMode(that) {\n  that.value = that.subvalues = _noop;\n  that._setupValue = that._setupSubvalues = that._updateValueIndicator = that._updateSubvalueIndicators = null;\n}\n\nfunction selectHardMode(that) {\n  that._indicatorValues = [];\n  setupValues(that, \"_indicatorValues\", that.option(\"valueIndicators\"));\n  that._valueIndicators = [];\n  var _applyMostlyTotalChange = that._applyMostlyTotalChange;\n\n  that._applyMostlyTotalChange = function () {\n    setupValues(this, \"_indicatorValues\", this.option(\"valueIndicators\"));\n\n    _applyMostlyTotalChange.call(this);\n  };\n\n  that._updateActiveElements = updateActiveElements_hardMode;\n  that._prepareValueIndicators = prepareValueIndicators_hardMode;\n  that._disposeValueIndicators = disposeValueIndicators_hardMode;\n  that._cleanValueIndicators = cleanValueIndicators_hardMode;\n  that.indicatorValue = indicatorValue_hardMode;\n}\n\nfunction updateActiveElements_hardMode() {\n  var that = this;\n\n  _each(that._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.value(that._indicatorValues[valueIndicator.index], that._noAnimation);\n  });\n}\n\nfunction prepareValueIndicators_hardMode() {\n  var that = this;\n  var valueIndicators = that._valueIndicators || [];\n  var userOptions = that.option(\"valueIndicators\");\n  var optionList = [];\n  var i = 0;\n  var ii;\n\n  for (ii = _isArray(userOptions) ? userOptions.length : 0; i < ii; ++i) {\n    optionList.push(userOptions[i]);\n  }\n\n  for (ii = valueIndicators.length; i < ii; ++i) {\n    optionList.push(null);\n  }\n\n  var newValueIndicators = [];\n\n  _each(optionList, function (i, userSettings) {\n    var valueIndicator = valueIndicators[i];\n\n    if (!userSettings) {\n      valueIndicator && valueIndicator.dispose();\n      return;\n    }\n\n    var settings = that._prepareIndicatorSettings(userSettings, \"valueIndicatorType\");\n\n    if (valueIndicator && valueIndicator.type !== settings.type) {\n      valueIndicator.dispose();\n      valueIndicator = null;\n    }\n\n    if (!valueIndicator) {\n      valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\", i, true);\n    }\n\n    if (valueIndicator) {\n      valueIndicator.index = i;\n      valueIndicator.render(settings);\n      newValueIndicators.push(valueIndicator);\n    }\n  });\n\n  that._valueIndicators = newValueIndicators;\n  return that._valueIndicators;\n}\n\nfunction disposeValueIndicators_hardMode() {\n  _each(this._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.dispose();\n  });\n\n  this._valueIndicators = null;\n}\n\nfunction cleanValueIndicators_hardMode() {\n  _each(this._valueIndicators, function (_, valueIndicator) {\n    valueIndicator.clean();\n  });\n}\n\nfunction indicatorValue_hardMode(index, value) {\n  return accessPointerValue(this, this._valueIndicators, this._indicatorValues, index, value);\n}\n\nfunction accessPointerValue(that, pointers, values, index, value) {\n  if (void 0 !== value) {\n    if (void 0 !== values[index]) {\n      values[index] = processValue(value, values[index]);\n      pointers[index] && pointers[index].value(values[index]);\n    }\n\n    return that;\n  } else {\n    return values[index];\n  }\n}\n\nfunction ValueIndicatorsSet(parameters) {\n  this._parameters = parameters;\n  this._indicators = [];\n}\n\nValueIndicatorsSet.prototype = {\n  constructor: ValueIndicatorsSet,\n  dispose: function dispose() {\n    _each(this._indicators, function (_, indicator) {\n      indicator.dispose();\n    });\n\n    this._parameters = this._options = this._indicators = this._colorPalette = this._palette = null;\n    return this;\n  },\n  clean: function clean() {\n    this._sample && this._sample.clean().dispose();\n\n    _each(this._indicators, function (_, indicator) {\n      indicator.clean();\n    });\n\n    this._sample = this._options = this._palette = null;\n    return this;\n  },\n  render: function render(options, isRecreate) {\n    var that = this;\n    that._options = options;\n    that._sample = that._parameters.createIndicator(that.type);\n\n    that._sample.render(options);\n\n    that.enabled = that._sample.enabled;\n    that._palette = _isDefined(options.palette) ? that._parameters.createPalette(options.palette) : null;\n\n    if (that.enabled) {\n      that._generatePalette(that._indicators.length);\n\n      that._indicators = _map(that._indicators, function (indicator, i) {\n        if (isRecreate) {\n          indicator.dispose();\n          indicator = that._parameters.createIndicator(that.type, i);\n        }\n\n        indicator.render(that._getIndicatorOptions(i));\n        return indicator;\n      });\n    }\n\n    return that;\n  },\n  getOffset: function getOffset() {\n    return this._sample.getOffset();\n  },\n  resize: function resize(layout) {\n    this._layout = layout;\n\n    _each(this._indicators, function (_, indicator) {\n      indicator.resize(layout);\n    });\n\n    return this;\n  },\n  measure: function measure(layout) {\n    return this._sample.measure(layout);\n  },\n  _getIndicatorOptions: function _getIndicatorOptions(index) {\n    var result = this._options;\n\n    if (this._colorPalette) {\n      result = _extend({}, result, {\n        color: this._colorPalette[index]\n      });\n    }\n\n    return result;\n  },\n  _generatePalette: function _generatePalette(count) {\n    var colors = null;\n\n    if (this._palette) {\n      this._palette.reset();\n\n      colors = this._palette.generateColors(count, {\n        repeat: true\n      });\n    }\n\n    this._colorPalette = colors;\n  },\n  _adjustIndicatorsCount: function _adjustIndicatorsCount(count) {\n    var indicators = this._indicators;\n    var i;\n    var ii;\n    var indicator;\n    var indicatorsLen = indicators.length;\n\n    if (indicatorsLen > count) {\n      for (i = count, ii = indicatorsLen; i < ii; ++i) {\n        indicators[i].clean().dispose();\n      }\n\n      this._indicators = indicators.slice(0, count);\n\n      this._generatePalette(indicators.length);\n    } else if (indicatorsLen < count) {\n      this._generatePalette(count);\n\n      for (i = indicatorsLen, ii = count; i < ii; ++i) {\n        indicator = this._parameters.createIndicator(this.type, i);\n        indicator.render(this._getIndicatorOptions(i)).resize(this._layout);\n        indicators.push(indicator);\n      }\n    }\n  },\n  values: function values(arg, _noAnimation) {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (void 0 !== arg) {\n      if (!_isArray(arg)) {\n        arg = _isFinite(arg) ? [Number(arg)] : null;\n      }\n\n      if (arg) {\n        this._adjustIndicatorsCount(arg.length);\n\n        _each(this._indicators, function (i, indicator) {\n          indicator.value(arg[i], _noAnimation);\n        });\n      }\n\n      return this;\n    }\n\n    return _map(this._indicators, function (indicator) {\n      return indicator.value();\n    });\n  }\n};\nexport function createIndicatorCreator(indicators) {\n  return function (parameters, type, _strict) {\n    var indicatorType = indicators[_normalizeEnum(type)] || !_strict && indicators._default;\n\n    return indicatorType ? new indicatorType(parameters) : null;\n  };\n}","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/gauges/common.js"],"names":["BaseGauge","compareArrays","_compareArrays","isDefined","_isDefined","isNumeric","_isNumber","each","extend","_isArray","Array","isArray","Axis","map","_map","normalizeEnum","_normalizeEnum","_isFinite","isFinite","_Number","Number","_min","Math","min","_max","max","_extend","_each","noop","_noop","SHIFT_ANGLE","OPTION_VALUE","OPTION_SUBVALUES","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","DEFAULT_NUMBER_MULTIPLIERS","processValue","value","fallbackValue","parseArrayOfNumbers","arg","dxGauge","inherit","_initCore","that","renderer","_renderer","_setupValue","option","__subvalues","_setupSubvalues","selectMode","callBase","apply","arguments","_rangeContainer","_factory","RangeContainer","container","root","translator","_translator","themeManager","_themeManager","_initScale","_subvalueIndicatorContainer","g","attr","class","linkOn","enableLinks","_fontFields","_scaleGroup","_scale","incidentOccurred","_incidentOccurred","axesContainerGroup","axisType","_scaleTypes","type","drawingType","widgetClass","getTemplate","_disposeCore","dispose","linkOff","_disposeValueIndicators","_valueIndicator","_subvalueIndicatorsSet","_setupDomainCore","scaleOption","startValue","endValue","_baseValue","setDomain","_cleanContent","clean","_cleanValueIndicators","_measureScale","scaleOptions","majorTick","tick","majorTickEnabled","visible","length","width","minorTick","minorTickEnabled","label","indentFromTick","textParams","measureLabels","_canvas","layoutValue","_getScaleLayoutValue","result","coefs","_getTicksCoefficients","innerCoef","inner","outerCoef","outer","_correctScaleIndents","_renderContent","_prepareScaleSettings","render","_getOption","vertical","_area","_renderScale","linkAppend","elements","concat","_prepareValueIndicators","element","enabled","_applyMainLayout","_","resize","_getElementLayout","getOffset","_shiftScale","_beginValueChanging","_updateActiveElements","_endValueChanging","userOptions","theme","indentFromAxis","isHorizontal","forceUserTickInterval","tickInterval","scaleDivisionFactor","axisDivisionFactor","_gridSpacingFactor","minorAxisDivisionFactor","minorScaleDivisionFactor","numberMultipliers","tickOrientation","_getTicksOrientation","useRangeColors","customizeColor","getColorForValue","bounds","getDomain","angles","getCodomain","invert","inverted","startAngle","endAngle","skipViewportExtending","updateOptions","setBusinessRange","dataType","_updateScaleTickIndent","draw","_updateIndicatorSettings","settings","currentValue","baseValue","translate","text","format","_defaultFormatOptions","_prepareIndicatorSettings","options","defaultTypeField","_default","animation","_animationSettings","containerBackgroundColor","_containerBackgroundColor","_prepareValueIndicator","_prepareSubvalueIndicators","_updateValueIndicator","_updateSubvalueIndicators","target","_createIndicator","_createSubvalueIndicatorsSet","ValueIndicatorsSet","createIndicator","i","createPalette","palette","isRecreate","dummy","__value","subvalues","vals","ii","list","push","_noAnimation","values","_changeValue","_changeSubvalues","slice","_setContentSize","_optionChangesMap","scale","rangeContainer","valueIndicator","subvalueIndicator","valueIndicators","_customChangesOrder","_change_VALUE","_change_SUBVALUES","owner","className","trackerType","trackerIndex","_strict","indicator","tracker","_tracker","_trackerInfo","index","_getApproximateScreenRange","valueGetter","setupValues","fieldName","optionItems","currentValues","newValues","gauge","disableDefaultMode","selectHardMode","_indicatorValues","_valueIndicators","_applyMostlyTotalChange","call","updateActiveElements_hardMode","prepareValueIndicators_hardMode","disposeValueIndicators_hardMode","cleanValueIndicators_hardMode","indicatorValue","indicatorValue_hardMode","optionList","newValueIndicators","userSettings","accessPointerValue","pointers","parameters","_parameters","_indicators","prototype","constructor","_options","_colorPalette","_palette","_sample","_generatePalette","_getIndicatorOptions","layout","_layout","measure","color","count","colors","reset","generateColors","repeat","_adjustIndicatorsCount","indicators","indicatorsLen","createIndicatorCreator","indicatorType"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/common.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    BaseGauge,\r\n    compareArrays as _compareArrays\r\n} from \"./base_gauge\";\r\nimport {\r\n    isDefined as _isDefined,\r\n    isNumeric as _isNumber\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar _isArray = Array.isArray;\r\nimport {\r\n    Axis\r\n} from \"../axes/base_axis\";\r\nimport {\r\n    map as _map,\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nvar _isFinite = isFinite;\r\nvar _Number = Number;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _extend = extend;\r\nvar _each = each;\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nvar SHIFT_ANGLE = 90;\r\nvar OPTION_VALUE = \"value\";\r\nvar OPTION_SUBVALUES = \"subvalues\";\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 5;\r\nvar DEFAULT_NUMBER_MULTIPLIERS = [1, 2, 5];\r\n\r\nfunction processValue(value, fallbackValue) {\r\n    if (null === value) {\r\n        return value\r\n    }\r\n    return _isFinite(value) ? _Number(value) : fallbackValue\r\n}\r\n\r\nfunction parseArrayOfNumbers(arg) {\r\n    return _isArray(arg) ? arg : _isNumber(arg) ? [arg] : null\r\n}\r\nexport var dxGauge = BaseGauge.inherit({\r\n    _initCore: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        that._setupValue(that.option(OPTION_VALUE));\r\n        that.__subvalues = parseArrayOfNumbers(that.option(OPTION_SUBVALUES));\r\n        that._setupSubvalues(that.__subvalues);\r\n        selectMode(that);\r\n        that.callBase.apply(that, arguments);\r\n        that._rangeContainer = new that._factory.RangeContainer({\r\n            renderer: renderer,\r\n            container: renderer.root,\r\n            translator: that._translator,\r\n            themeManager: that._themeManager\r\n        });\r\n        that._initScale();\r\n        that._subvalueIndicatorContainer = that._renderer.g().attr({\r\n            class: \"dxg-subvalue-indicators\"\r\n        }).linkOn(that._renderer.root, \"valueIndicator\").enableLinks()\r\n    },\r\n    _fontFields: [\"scale.label.font\", \"valueIndicators.rangebar.text.font\", \"valueIndicators.textcloud.text.font\", \"indicator.text.font\"],\r\n    _initScale: function() {\r\n        this._scaleGroup = this._renderer.g().attr({\r\n            class: \"dxg-scale\"\r\n        }).linkOn(this._renderer.root, \"scale\");\r\n        this._scale = new Axis({\r\n            incidentOccurred: this._incidentOccurred,\r\n            renderer: this._renderer,\r\n            axesContainerGroup: this._scaleGroup,\r\n            axisType: this._scaleTypes.type,\r\n            drawingType: this._scaleTypes.drawingType,\r\n            widgetClass: \"dxg\",\r\n            getTemplate() {}\r\n        })\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._scale.dispose();\r\n        that._scaleGroup.linkOff();\r\n        that._rangeContainer.dispose();\r\n        that._disposeValueIndicators();\r\n        that._subvalueIndicatorContainer.linkOff();\r\n        that._scale = that._scaleGroup = that._rangeContainer = null\r\n    },\r\n    _disposeValueIndicators: function() {\r\n        this._valueIndicator && this._valueIndicator.dispose();\r\n        this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.dispose();\r\n        this._valueIndicator = this._subvalueIndicatorsSet = null\r\n    },\r\n    _setupDomainCore: function() {\r\n        var scaleOption = this.option(\"scale\") || {};\r\n        var startValue = this.option(\"startValue\");\r\n        var endValue = this.option(\"endValue\");\r\n        startValue = _isNumber(startValue) ? _Number(startValue) : _isNumber(scaleOption.startValue) ? _Number(scaleOption.startValue) : 0;\r\n        endValue = _isNumber(endValue) ? _Number(endValue) : _isNumber(scaleOption.endValue) ? _Number(scaleOption.endValue) : 100;\r\n        this._baseValue = startValue < endValue ? startValue : endValue;\r\n        this._translator.setDomain(startValue, endValue)\r\n    },\r\n    _cleanContent: function() {\r\n        this._rangeContainer.clean();\r\n        this._cleanValueIndicators()\r\n    },\r\n    _measureScale: function(scaleOptions) {\r\n        var majorTick = scaleOptions.tick;\r\n        var majorTickEnabled = majorTick.visible && majorTick.length > 0 && majorTick.width > 0;\r\n        var minorTick = scaleOptions.minorTick;\r\n        var minorTickEnabled = minorTick.visible && minorTick.length > 0 && minorTick.width > 0;\r\n        var label = scaleOptions.label;\r\n        var indentFromTick = Number(label.indentFromTick);\r\n        if (!majorTickEnabled && !minorTickEnabled && !label.visible) {\r\n            return {}\r\n        }\r\n        var textParams = this._scale.measureLabels(extend({}, this._canvas));\r\n        var layoutValue = this._getScaleLayoutValue();\r\n        var result = {\r\n            min: layoutValue,\r\n            max: layoutValue\r\n        };\r\n        var coefs = this._getTicksCoefficients(scaleOptions);\r\n        var innerCoef = coefs.inner;\r\n        var outerCoef = coefs.outer;\r\n        if (majorTickEnabled) {\r\n            result.min = _min(result.min, layoutValue - innerCoef * majorTick.length);\r\n            result.max = _max(result.max, layoutValue + outerCoef * majorTick.length)\r\n        }\r\n        if (minorTickEnabled) {\r\n            result.min = _min(result.min, layoutValue - innerCoef * minorTick.length);\r\n            result.max = _max(result.max, layoutValue + outerCoef * minorTick.length)\r\n        }\r\n        label.visible && this._correctScaleIndents(result, indentFromTick, textParams);\r\n        return result\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        var scaleOptions = that._prepareScaleSettings();\r\n        that._rangeContainer.render(_extend(that._getOption(\"rangeContainer\"), {\r\n            vertical: that._area.vertical\r\n        }));\r\n        that._renderScale(scaleOptions);\r\n        that._subvalueIndicatorContainer.linkAppend();\r\n        var elements = _map([that._rangeContainer].concat(that._prepareValueIndicators()), (function(element) {\r\n            return element && element.enabled ? element : null\r\n        }));\r\n        that._applyMainLayout(elements, that._measureScale(scaleOptions));\r\n        _each(elements, (function(_, element) {\r\n            element.resize(that._getElementLayout(element.getOffset()))\r\n        }));\r\n        that._shiftScale(that._getElementLayout(0), scaleOptions);\r\n        that._beginValueChanging();\r\n        that._updateActiveElements();\r\n        that._endValueChanging()\r\n    },\r\n    _prepareScaleSettings: function() {\r\n        var that = this;\r\n        var userOptions = that.option(\"scale\");\r\n        var scaleOptions = extend(true, {}, that._themeManager.theme(\"scale\"), userOptions);\r\n        scaleOptions.label.indentFromAxis = 0;\r\n        scaleOptions.isHorizontal = !that._area.vertical;\r\n        scaleOptions.forceUserTickInterval |= _isDefined(userOptions) && _isDefined(userOptions.tickInterval) && !_isDefined(userOptions.scaleDivisionFactor);\r\n        scaleOptions.axisDivisionFactor = scaleOptions.scaleDivisionFactor || that._gridSpacingFactor;\r\n        scaleOptions.minorAxisDivisionFactor = scaleOptions.minorScaleDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\r\n        scaleOptions.numberMultipliers = DEFAULT_NUMBER_MULTIPLIERS;\r\n        scaleOptions.tickOrientation = that._getTicksOrientation(scaleOptions);\r\n        if (scaleOptions.label.useRangeColors) {\r\n            scaleOptions.label.customizeColor = function() {\r\n                return that._rangeContainer.getColorForValue(this.value)\r\n            }\r\n        }\r\n        return scaleOptions\r\n    },\r\n    _renderScale: function(scaleOptions) {\r\n        var bounds = this._translator.getDomain();\r\n        var startValue = bounds[0];\r\n        var endValue = bounds[1];\r\n        var angles = this._translator.getCodomain();\r\n        var invert = !!(startValue > endValue ^ scaleOptions.inverted);\r\n        var min = _min(startValue, endValue);\r\n        var max = _max(startValue, endValue);\r\n        scaleOptions.min = min;\r\n        scaleOptions.max = max;\r\n        scaleOptions.startAngle = SHIFT_ANGLE - angles[0];\r\n        scaleOptions.endAngle = SHIFT_ANGLE - angles[1];\r\n        scaleOptions.skipViewportExtending = true;\r\n        scaleOptions.inverted = invert;\r\n        this._scale.updateOptions(scaleOptions);\r\n        this._scale.setBusinessRange({\r\n            axisType: \"continuous\",\r\n            dataType: \"numeric\",\r\n            min: min,\r\n            max: max,\r\n            invert: invert\r\n        });\r\n        this._updateScaleTickIndent(scaleOptions);\r\n        this._scaleGroup.linkAppend();\r\n        this._scale.draw(extend({}, this._canvas))\r\n    },\r\n    _updateIndicatorSettings: function(settings) {\r\n        settings.currentValue = settings.baseValue = _isFinite(this._translator.translate(settings.baseValue)) ? _Number(settings.baseValue) : this._baseValue;\r\n        settings.vertical = this._area.vertical;\r\n        if (settings.text && !settings.text.format) {\r\n            settings.text.format = this._defaultFormatOptions\r\n        }\r\n    },\r\n    _prepareIndicatorSettings: function(options, defaultTypeField) {\r\n        var theme = this._themeManager.theme(\"valueIndicators\");\r\n        var type = _normalizeEnum(options.type || this._themeManager.theme(defaultTypeField));\r\n        var settings = _extend(true, {}, theme._default, theme[type], options);\r\n        settings.type = type;\r\n        settings.animation = this._animationSettings;\r\n        settings.containerBackgroundColor = this._containerBackgroundColor;\r\n        this._updateIndicatorSettings(settings);\r\n        return settings\r\n    },\r\n    _cleanValueIndicators: function() {\r\n        this._valueIndicator && this._valueIndicator.clean();\r\n        this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.clean()\r\n    },\r\n    _prepareValueIndicators: function() {\r\n        this._prepareValueIndicator();\r\n        null !== this.__subvalues && this._prepareSubvalueIndicators();\r\n        return [this._valueIndicator, this._subvalueIndicatorsSet]\r\n    },\r\n    _updateActiveElements: function() {\r\n        this._updateValueIndicator();\r\n        this._updateSubvalueIndicators()\r\n    },\r\n    _prepareValueIndicator: function() {\r\n        var target = this._valueIndicator;\r\n        var settings = this._prepareIndicatorSettings(this.option(\"valueIndicator\") || {}, \"valueIndicatorType\");\r\n        if (target && target.type !== settings.type) {\r\n            target.dispose();\r\n            target = null\r\n        }\r\n        if (!target) {\r\n            target = this._valueIndicator = this._createIndicator(settings.type, this._renderer.root, \"dxg-value-indicator\", \"value-indicator\")\r\n        }\r\n        target.render(settings)\r\n    },\r\n    _createSubvalueIndicatorsSet: function() {\r\n        var that = this;\r\n        var root = that._subvalueIndicatorContainer;\r\n        return new ValueIndicatorsSet({\r\n            createIndicator: function(type, i) {\r\n                return that._createIndicator(type, root, \"dxg-subvalue-indicator\", \"subvalue-indicator\", i)\r\n            },\r\n            createPalette: function(palette) {\r\n                return that._themeManager.createPalette(palette)\r\n            }\r\n        })\r\n    },\r\n    _prepareSubvalueIndicators: function() {\r\n        var target = this._subvalueIndicatorsSet;\r\n        var settings = this._prepareIndicatorSettings(this.option(\"subvalueIndicator\") || {}, \"subvalueIndicatorType\");\r\n        if (!target) {\r\n            target = this._subvalueIndicatorsSet = this._createSubvalueIndicatorsSet()\r\n        }\r\n        var isRecreate = settings.type !== target.type;\r\n        target.type = settings.type;\r\n        var dummy = this._createIndicator(settings.type, this._renderer.root);\r\n        if (dummy) {\r\n            dummy.dispose();\r\n            target.render(settings, isRecreate)\r\n        }\r\n    },\r\n    _setupValue: function(value) {\r\n        this.__value = processValue(value, this.__value)\r\n    },\r\n    _setupSubvalues: function(subvalues) {\r\n        var vals = void 0 === subvalues ? this.__subvalues : parseArrayOfNumbers(subvalues);\r\n        var i;\r\n        var ii;\r\n        var list;\r\n        if (null === vals) {\r\n            return\r\n        }\r\n        for (i = 0, ii = vals.length, list = []; i < ii; ++i) {\r\n            list.push(processValue(vals[i], this.__subvalues[i]))\r\n        }\r\n        this.__subvalues = list\r\n    },\r\n    _updateValueIndicator: function() {\r\n        this._valueIndicator && this._valueIndicator.value(this.__value, this._noAnimation)\r\n    },\r\n    _updateSubvalueIndicators: function() {\r\n        this._subvalueIndicatorsSet && this._subvalueIndicatorsSet.values(this.__subvalues, this._noAnimation)\r\n    },\r\n    value: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._changeValue(arg);\r\n            return this\r\n        }\r\n        return this.__value\r\n    },\r\n    subvalues: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._changeSubvalues(arg);\r\n            return this\r\n        }\r\n        return null !== this.__subvalues ? this.__subvalues.slice() : void 0\r\n    },\r\n    _changeValue: function(value) {\r\n        this._setupValue(value);\r\n        this._beginValueChanging();\r\n        this._updateValueIndicator();\r\n        if (this.__value !== this.option(OPTION_VALUE)) {\r\n            this.option(OPTION_VALUE, this.__value)\r\n        }\r\n        this._endValueChanging()\r\n    },\r\n    _changeSubvalues: function(subvalues) {\r\n        if (null !== this.__subvalues) {\r\n            this._setupSubvalues(subvalues);\r\n            this._beginValueChanging();\r\n            this._updateSubvalueIndicators();\r\n            this._endValueChanging()\r\n        } else {\r\n            this.__subvalues = parseArrayOfNumbers(subvalues);\r\n            this._setContentSize();\r\n            this._renderContent()\r\n        }\r\n        if (!_compareArrays(this.__subvalues, this.option(OPTION_SUBVALUES))) {\r\n            this.option(OPTION_SUBVALUES, this.__subvalues)\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        scale: \"DOMAIN\",\r\n        rangeContainer: \"MOSTLY_TOTAL\",\r\n        valueIndicator: \"MOSTLY_TOTAL\",\r\n        subvalueIndicator: \"MOSTLY_TOTAL\",\r\n        containerBackgroundColor: \"MOSTLY_TOTAL\",\r\n        value: \"VALUE\",\r\n        subvalues: \"SUBVALUES\",\r\n        valueIndicators: \"MOSTLY_TOTAL\"\r\n    },\r\n    _customChangesOrder: [\"VALUE\", \"SUBVALUES\"],\r\n    _change_VALUE: function() {\r\n        this._changeValue(this.option(OPTION_VALUE))\r\n    },\r\n    _change_SUBVALUES: function() {\r\n        this._changeSubvalues(this.option(OPTION_SUBVALUES))\r\n    },\r\n    _applyMainLayout: null,\r\n    _getElementLayout: null,\r\n    _createIndicator: function(type, owner, className, trackerType, trackerIndex, _strict) {\r\n        var indicator = this._factory.createIndicator({\r\n            renderer: this._renderer,\r\n            translator: this._translator,\r\n            owner: owner,\r\n            tracker: this._tracker,\r\n            className: className\r\n        }, type, _strict);\r\n        if (indicator) {\r\n            indicator.type = type;\r\n            indicator._trackerInfo = {\r\n                type: trackerType,\r\n                index: trackerIndex\r\n            }\r\n        }\r\n        return indicator\r\n    },\r\n    _getApproximateScreenRange: null\r\n});\r\n\r\nfunction valueGetter(arg) {\r\n    return arg ? arg.value : null\r\n}\r\n\r\nfunction setupValues(that, fieldName, optionItems) {\r\n    var currentValues = that[fieldName];\r\n    var newValues = _isArray(optionItems) ? _map(optionItems, valueGetter) : [];\r\n    var i = 0;\r\n    var ii = newValues.length;\r\n    var list = [];\r\n    for (; i < ii; ++i) {\r\n        list.push(processValue(newValues[i], currentValues[i]))\r\n    }\r\n    that[fieldName] = list\r\n}\r\n\r\nfunction selectMode(gauge) {\r\n    if (void 0 === gauge.option(OPTION_VALUE) && void 0 === gauge.option(OPTION_SUBVALUES)) {\r\n        if (void 0 !== gauge.option(\"valueIndicators\")) {\r\n            disableDefaultMode(gauge);\r\n            selectHardMode(gauge)\r\n        }\r\n    }\r\n}\r\n\r\nfunction disableDefaultMode(that) {\r\n    that.value = that.subvalues = _noop;\r\n    that._setupValue = that._setupSubvalues = that._updateValueIndicator = that._updateSubvalueIndicators = null\r\n}\r\n\r\nfunction selectHardMode(that) {\r\n    that._indicatorValues = [];\r\n    setupValues(that, \"_indicatorValues\", that.option(\"valueIndicators\"));\r\n    that._valueIndicators = [];\r\n    var _applyMostlyTotalChange = that._applyMostlyTotalChange;\r\n    that._applyMostlyTotalChange = function() {\r\n        setupValues(this, \"_indicatorValues\", this.option(\"valueIndicators\"));\r\n        _applyMostlyTotalChange.call(this)\r\n    };\r\n    that._updateActiveElements = updateActiveElements_hardMode;\r\n    that._prepareValueIndicators = prepareValueIndicators_hardMode;\r\n    that._disposeValueIndicators = disposeValueIndicators_hardMode;\r\n    that._cleanValueIndicators = cleanValueIndicators_hardMode;\r\n    that.indicatorValue = indicatorValue_hardMode\r\n}\r\n\r\nfunction updateActiveElements_hardMode() {\r\n    var that = this;\r\n    _each(that._valueIndicators, (function(_, valueIndicator) {\r\n        valueIndicator.value(that._indicatorValues[valueIndicator.index], that._noAnimation)\r\n    }))\r\n}\r\n\r\nfunction prepareValueIndicators_hardMode() {\r\n    var that = this;\r\n    var valueIndicators = that._valueIndicators || [];\r\n    var userOptions = that.option(\"valueIndicators\");\r\n    var optionList = [];\r\n    var i = 0;\r\n    var ii;\r\n    for (ii = _isArray(userOptions) ? userOptions.length : 0; i < ii; ++i) {\r\n        optionList.push(userOptions[i])\r\n    }\r\n    for (ii = valueIndicators.length; i < ii; ++i) {\r\n        optionList.push(null)\r\n    }\r\n    var newValueIndicators = [];\r\n    _each(optionList, (function(i, userSettings) {\r\n        var valueIndicator = valueIndicators[i];\r\n        if (!userSettings) {\r\n            valueIndicator && valueIndicator.dispose();\r\n            return\r\n        }\r\n        var settings = that._prepareIndicatorSettings(userSettings, \"valueIndicatorType\");\r\n        if (valueIndicator && valueIndicator.type !== settings.type) {\r\n            valueIndicator.dispose();\r\n            valueIndicator = null\r\n        }\r\n        if (!valueIndicator) {\r\n            valueIndicator = that._createIndicator(settings.type, that._renderer.root, \"dxg-value-indicator\", \"value-indicator\", i, true)\r\n        }\r\n        if (valueIndicator) {\r\n            valueIndicator.index = i;\r\n            valueIndicator.render(settings);\r\n            newValueIndicators.push(valueIndicator)\r\n        }\r\n    }));\r\n    that._valueIndicators = newValueIndicators;\r\n    return that._valueIndicators\r\n}\r\n\r\nfunction disposeValueIndicators_hardMode() {\r\n    _each(this._valueIndicators, (function(_, valueIndicator) {\r\n        valueIndicator.dispose()\r\n    }));\r\n    this._valueIndicators = null\r\n}\r\n\r\nfunction cleanValueIndicators_hardMode() {\r\n    _each(this._valueIndicators, (function(_, valueIndicator) {\r\n        valueIndicator.clean()\r\n    }))\r\n}\r\n\r\nfunction indicatorValue_hardMode(index, value) {\r\n    return accessPointerValue(this, this._valueIndicators, this._indicatorValues, index, value)\r\n}\r\n\r\nfunction accessPointerValue(that, pointers, values, index, value) {\r\n    if (void 0 !== value) {\r\n        if (void 0 !== values[index]) {\r\n            values[index] = processValue(value, values[index]);\r\n            pointers[index] && pointers[index].value(values[index])\r\n        }\r\n        return that\r\n    } else {\r\n        return values[index]\r\n    }\r\n}\r\n\r\nfunction ValueIndicatorsSet(parameters) {\r\n    this._parameters = parameters;\r\n    this._indicators = []\r\n}\r\nValueIndicatorsSet.prototype = {\r\n    constructor: ValueIndicatorsSet,\r\n    dispose: function() {\r\n        _each(this._indicators, (function(_, indicator) {\r\n            indicator.dispose()\r\n        }));\r\n        this._parameters = this._options = this._indicators = this._colorPalette = this._palette = null;\r\n        return this\r\n    },\r\n    clean: function() {\r\n        this._sample && this._sample.clean().dispose();\r\n        _each(this._indicators, (function(_, indicator) {\r\n            indicator.clean()\r\n        }));\r\n        this._sample = this._options = this._palette = null;\r\n        return this\r\n    },\r\n    render: function(options, isRecreate) {\r\n        var that = this;\r\n        that._options = options;\r\n        that._sample = that._parameters.createIndicator(that.type);\r\n        that._sample.render(options);\r\n        that.enabled = that._sample.enabled;\r\n        that._palette = _isDefined(options.palette) ? that._parameters.createPalette(options.palette) : null;\r\n        if (that.enabled) {\r\n            that._generatePalette(that._indicators.length);\r\n            that._indicators = _map(that._indicators, (function(indicator, i) {\r\n                if (isRecreate) {\r\n                    indicator.dispose();\r\n                    indicator = that._parameters.createIndicator(that.type, i)\r\n                }\r\n                indicator.render(that._getIndicatorOptions(i));\r\n                return indicator\r\n            }))\r\n        }\r\n        return that\r\n    },\r\n    getOffset: function() {\r\n        return this._sample.getOffset()\r\n    },\r\n    resize: function(layout) {\r\n        this._layout = layout;\r\n        _each(this._indicators, (function(_, indicator) {\r\n            indicator.resize(layout)\r\n        }));\r\n        return this\r\n    },\r\n    measure: function(layout) {\r\n        return this._sample.measure(layout)\r\n    },\r\n    _getIndicatorOptions: function(index) {\r\n        var result = this._options;\r\n        if (this._colorPalette) {\r\n            result = _extend({}, result, {\r\n                color: this._colorPalette[index]\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _generatePalette: function(count) {\r\n        var colors = null;\r\n        if (this._palette) {\r\n            this._palette.reset();\r\n            colors = this._palette.generateColors(count, {\r\n                repeat: true\r\n            })\r\n        }\r\n        this._colorPalette = colors\r\n    },\r\n    _adjustIndicatorsCount: function(count) {\r\n        var indicators = this._indicators;\r\n        var i;\r\n        var ii;\r\n        var indicator;\r\n        var indicatorsLen = indicators.length;\r\n        if (indicatorsLen > count) {\r\n            for (i = count, ii = indicatorsLen; i < ii; ++i) {\r\n                indicators[i].clean().dispose()\r\n            }\r\n            this._indicators = indicators.slice(0, count);\r\n            this._generatePalette(indicators.length)\r\n        } else if (indicatorsLen < count) {\r\n            this._generatePalette(count);\r\n            for (i = indicatorsLen, ii = count; i < ii; ++i) {\r\n                indicator = this._parameters.createIndicator(this.type, i);\r\n                indicator.render(this._getIndicatorOptions(i)).resize(this._layout);\r\n                indicators.push(indicator)\r\n            }\r\n        }\r\n    },\r\n    values: function(arg, _noAnimation) {\r\n        if (!this.enabled) {\r\n            return\r\n        }\r\n        if (void 0 !== arg) {\r\n            if (!_isArray(arg)) {\r\n                arg = _isFinite(arg) ? [Number(arg)] : null\r\n            }\r\n            if (arg) {\r\n                this._adjustIndicatorsCount(arg.length);\r\n                _each(this._indicators, (function(i, indicator) {\r\n                    indicator.value(arg[i], _noAnimation)\r\n                }))\r\n            }\r\n            return this\r\n        }\r\n        return _map(this._indicators, (function(indicator) {\r\n            return indicator.value()\r\n        }))\r\n    }\r\n};\r\nexport function createIndicatorCreator(indicators) {\r\n    return function(parameters, type, _strict) {\r\n        var indicatorType = indicators[_normalizeEnum(type)] || !_strict && indicators._default;\r\n        return indicatorType ? new indicatorType(parameters) : null\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}