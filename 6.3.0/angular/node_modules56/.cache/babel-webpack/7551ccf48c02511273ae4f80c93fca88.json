{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, HostListener, Component, NgModule } from '@angular/core';\nimport DxRangeSlider from 'devextreme/ui/range_slider';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoLabelModule, DxoFormatModule, DxoTooltipModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DxRangeSliderComponent;\n  }),\n  multi: true\n};\n\nvar DxRangeSliderComponent = /*@__PURE__*/function () {\n  /**\n   * The RangeSlider is a UI component that allows an end user to choose a range of numeric values.\n  \r\n   */\n  var DxRangeSliderComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxRangeSliderComponent, _DxComponent);\n\n    var _super = _createSuper(DxRangeSliderComponent);\n\n    function DxRangeSliderComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxRangeSliderComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this.touched = function (_) {};\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'valueChanged',\n        emit: 'onValueChanged'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'endChange'\n      }, {\n        emit: 'endNameChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'isValidChange'\n      }, {\n        emit: 'keyStepChange'\n      }, {\n        emit: 'labelChange'\n      }, {\n        emit: 'maxChange'\n      }, {\n        emit: 'minChange'\n      }, {\n        emit: 'readOnlyChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'showRangeChange'\n      }, {\n        emit: 'startChange'\n      }, {\n        emit: 'startNameChange'\n      }, {\n        emit: 'stepChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'tooltipChange'\n      }, {\n        emit: 'validationErrorChange'\n      }, {\n        emit: 'validationErrorsChange'\n      }, {\n        emit: 'validationMessageModeChange'\n      }, {\n        emit: 'validationStatusChange'\n      }, {\n        emit: 'valueChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'onBlur'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxRangeSliderComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"end\",\n      get: function get() {\n        return this._getOption('end');\n      },\n      set: function set(value) {\n        this._setOption('end', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"endName\",\n      get: function get() {\n        return this._getOption('endName');\n      },\n      set: function set(value) {\n        this._setOption('endName', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"isValid\",\n      get: function get() {\n        return this._getOption('isValid');\n      },\n      set: function set(value) {\n        this._setOption('isValid', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"keyStep\",\n      get: function get() {\n        return this._getOption('keyStep');\n      },\n      set: function set(value) {\n        this._setOption('keyStep', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"label\",\n      get: function get() {\n        return this._getOption('label');\n      },\n      set: function set(value) {\n        this._setOption('label', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"max\",\n      get: function get() {\n        return this._getOption('max');\n      },\n      set: function set(value) {\n        this._setOption('max', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"min\",\n      get: function get() {\n        return this._getOption('min');\n      },\n      set: function set(value) {\n        this._setOption('min', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"readOnly\",\n      get: function get() {\n        return this._getOption('readOnly');\n      },\n      set: function set(value) {\n        this._setOption('readOnly', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"showRange\",\n      get: function get() {\n        return this._getOption('showRange');\n      },\n      set: function set(value) {\n        this._setOption('showRange', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"start\",\n      get: function get() {\n        return this._getOption('start');\n      },\n      set: function set(value) {\n        this._setOption('start', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"startName\",\n      get: function get() {\n        return this._getOption('startName');\n      },\n      set: function set(value) {\n        this._setOption('startName', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"step\",\n      get: function get() {\n        return this._getOption('step');\n      },\n      set: function set(value) {\n        this._setOption('step', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tooltip\",\n      get: function get() {\n        return this._getOption('tooltip');\n      },\n      set: function set(value) {\n        this._setOption('tooltip', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationError\",\n      get: function get() {\n        return this._getOption('validationError');\n      },\n      set: function set(value) {\n        this._setOption('validationError', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationErrors\",\n      get: function get() {\n        return this._getOption('validationErrors');\n      },\n      set: function set(value) {\n        this._setOption('validationErrors', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationMessageMode\",\n      get: function get() {\n        return this._getOption('validationMessageMode');\n      },\n      set: function set(value) {\n        this._setOption('validationMessageMode', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"validationStatus\",\n      get: function get() {\n        return this._getOption('validationStatus');\n      },\n      set: function set(value) {\n        this._setOption('validationStatus', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._getOption('value');\n      },\n      set: function set(value) {\n        this._setOption('value', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"change\",\n      value: function change(_) {}\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxRangeSlider(element, options);\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.eventHelper.lockedValueChangeEvent = true;\n        this.value = value;\n        this.eventHelper.lockedValueChangeEvent = false;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.change = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.touched = fn;\n      }\n    }, {\n      key: \"_createWidget\",\n      value: function _createWidget(element) {\n        var _this2 = this;\n\n        _get(_getPrototypeOf(DxRangeSliderComponent.prototype), \"_createWidget\", this).call(this, element);\n\n        this.instance.on('focusOut', function (e) {\n          _this2.eventHelper.fireNgEvent('onBlur', [e]);\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxRangeSliderComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('validationErrors', changes);\n        this.setupChanges('value', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('validationErrors');\n\n        this._idh.doCheck('value');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxRangeSliderComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxRangeSliderComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxRangeSliderComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxRangeSliderComponent;\n  }(DxComponent);\n\n  DxRangeSliderComponent.ɵfac = function DxRangeSliderComponent_Factory(t) {\n    return new (t || DxRangeSliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxRangeSliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxRangeSliderComponent,\n    selectors: [[\"dx-range-slider\"]],\n    hostBindings: function DxRangeSliderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"onBlur\", function DxRangeSliderComponent_onBlur_HostBindingHandler($event) {\n          return ctx.touched($event);\n        })(\"valueChange\", function DxRangeSliderComponent_valueChange_HostBindingHandler($event) {\n          return ctx.change($event);\n        });\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      disabled: \"disabled\",\n      elementAttr: \"elementAttr\",\n      end: \"end\",\n      endName: \"endName\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      isValid: \"isValid\",\n      keyStep: \"keyStep\",\n      label: \"label\",\n      max: \"max\",\n      min: \"min\",\n      readOnly: \"readOnly\",\n      rtlEnabled: \"rtlEnabled\",\n      showRange: \"showRange\",\n      start: \"start\",\n      startName: \"startName\",\n      step: \"step\",\n      tabIndex: \"tabIndex\",\n      tooltip: \"tooltip\",\n      validationError: \"validationError\",\n      validationErrors: \"validationErrors\",\n      validationMessageMode: \"validationMessageMode\",\n      validationStatus: \"validationStatus\",\n      value: \"value\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onValueChanged: \"onValueChanged\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      disabledChange: \"disabledChange\",\n      elementAttrChange: \"elementAttrChange\",\n      endChange: \"endChange\",\n      endNameChange: \"endNameChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      isValidChange: \"isValidChange\",\n      keyStepChange: \"keyStepChange\",\n      labelChange: \"labelChange\",\n      maxChange: \"maxChange\",\n      minChange: \"minChange\",\n      readOnlyChange: \"readOnlyChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      showRangeChange: \"showRangeChange\",\n      startChange: \"startChange\",\n      startNameChange: \"startNameChange\",\n      stepChange: \"stepChange\",\n      tabIndexChange: \"tabIndexChange\",\n      tooltipChange: \"tooltipChange\",\n      validationErrorChange: \"validationErrorChange\",\n      validationErrorsChange: \"validationErrorsChange\",\n      validationMessageModeChange: \"validationMessageModeChange\",\n      validationStatusChange: \"validationStatusChange\",\n      valueChange: \"valueChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      onBlur: \"onBlur\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxRangeSliderComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxRangeSliderComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxRangeSliderComponent);\n  return DxRangeSliderComponent;\n}();\n\nvar DxRangeSliderModule = /*@__PURE__*/function () {\n  var DxRangeSliderModule = function DxRangeSliderModule() {\n    _classCallCheck(this, DxRangeSliderModule);\n  };\n\n  DxRangeSliderModule.ɵfac = function DxRangeSliderModule_Factory(t) {\n    return new (t || DxRangeSliderModule)();\n  };\n\n  DxRangeSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxRangeSliderModule\n  });\n  DxRangeSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoLabelModule, DxoFormatModule, DxoTooltipModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoLabelModule, DxoFormatModule, DxoTooltipModule, DxTemplateModule]\n  });\n  return DxRangeSliderModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxRangeSliderModule, {\n    declarations: function declarations() {\n      return [DxRangeSliderComponent];\n    },\n    imports: function imports() {\n      return [DxoLabelModule, DxoFormatModule, DxoTooltipModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxRangeSliderComponent, DxoLabelModule, DxoFormatModule, DxoTooltipModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxRangeSliderComponent, DxRangeSliderModule };","map":null,"metadata":{},"sourceType":"module"}