{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/circular_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar _isFinite = isFinite;\nimport registerComponent from \"../../core/component_registrator\";\nimport { clone } from \"../../core/utils/object\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { BaseGauge } from \"./base_gauge\";\nimport { dxGauge, createIndicatorCreator } from \"./common\";\nimport { normalizeAngle, getCosAndSin } from \"../core/utils\";\nvar _normalizeAngle = normalizeAngle;\nvar _getCosAndSin = getCosAndSin;\nimport * as circularIndicators from \"./circular_indicators\";\nimport CircularRangeContainer from \"./circular_range_container\";\nvar _abs = Math.abs;\nvar _max = Math.max;\nvar _min = Math.min;\nvar _round = Math.round;\nvar _each = each;\nvar PI = Math.PI;\n\nfunction getSides(startAngle, endAngle) {\n  var startCosSin = _getCosAndSin(startAngle);\n\n  var endCosSin = _getCosAndSin(endAngle);\n\n  var startCos = startCosSin.cos;\n  var startSin = startCosSin.sin;\n  var endCos = endCosSin.cos;\n  var endSin = endCosSin.sin;\n  return {\n    left: startSin <= 0 && endSin >= 0 || startSin <= 0 && endSin <= 0 && startCos <= endCos || startSin >= 0 && endSin >= 0 && startCos >= endCos ? -1 : _min(startCos, endCos, 0),\n    right: startSin >= 0 && endSin <= 0 || startSin >= 0 && endSin >= 0 && startCos >= endCos || startSin <= 0 && endSin <= 0 && startCos <= endCos ? 1 : _max(startCos, endCos, 0),\n    up: startCos <= 0 && endCos >= 0 || startCos <= 0 && endCos <= 0 && startSin >= endSin || startCos >= 0 && endCos >= 0 && startSin <= endSin ? -1 : -_max(startSin, endSin, 0),\n    down: startCos >= 0 && endCos <= 0 || startCos >= 0 && endCos >= 0 && startSin <= endSin || startCos <= 0 && endCos <= 0 && startSin >= endSin ? 1 : -_min(startSin, endSin, 0)\n  };\n}\n\nvar dxCircularGauge = dxGauge.inherit({\n  _rootClass: \"dxg-circular-gauge\",\n  _factoryMethods: {\n    rangeContainer: \"createCircularRangeContainer\",\n    indicator: \"createCircularIndicator\"\n  },\n  _gridSpacingFactor: 17,\n  _scaleTypes: {\n    type: \"polarAxes\",\n    drawingType: \"circular\"\n  },\n  _getThemeManagerOptions: function _getThemeManagerOptions() {\n    var options = this.callBase.apply(this, arguments);\n    options.subTheme = \"_circular\";\n    return options;\n  },\n  _updateScaleTickIndent: function _updateScaleTickIndent(scaleOptions) {\n    var indentFromTick = scaleOptions.label.indentFromTick;\n    var length = scaleOptions.tick.visible ? scaleOptions.tick.length : 0;\n\n    var textParams = this._scale.measureLabels(extend({}, this._canvas));\n\n    var tickCorrection = length;\n\n    if (\"inside\" === scaleOptions.orientation) {\n      tickCorrection = 0;\n    } else if (\"center\" === scaleOptions.orientation) {\n      tickCorrection = .5 * length;\n    }\n\n    scaleOptions.label.indentFromAxis = indentFromTick >= 0 ? indentFromTick + tickCorrection : indentFromTick - tickCorrection - _max(textParams.width, textParams.height);\n\n    this._scale.updateOptions(scaleOptions);\n  },\n  _setupCodomain: function _setupCodomain() {\n    var geometry = this.option(\"geometry\") || {};\n    var startAngle = geometry.startAngle;\n    var endAngle = geometry.endAngle;\n    var sides;\n    startAngle = _isFinite(startAngle) ? _normalizeAngle(startAngle) : 225;\n    endAngle = _isFinite(endAngle) ? _normalizeAngle(endAngle) : -45;\n\n    if (_abs(startAngle - endAngle) < 1) {\n      endAngle -= 360;\n      sides = {\n        left: -1,\n        up: -1,\n        right: 1,\n        down: 1\n      };\n    } else {\n      startAngle < endAngle && (endAngle -= 360);\n      sides = getSides(startAngle, endAngle);\n    }\n\n    this._area = {\n      x: 0,\n      y: 0,\n      radius: 100,\n      startCoord: startAngle,\n      endCoord: endAngle,\n      sides: sides\n    };\n\n    this._translator.setCodomain(startAngle, endAngle);\n  },\n  _shiftScale: function _shiftScale(layout) {\n    var scale = this._scale;\n    var canvas = scale.getCanvas();\n    canvas.width = canvas.height = 2 * layout.radius;\n    scale.draw(canvas);\n    var centerCoords = scale.getCenter();\n    scale.shift({\n      right: layout.x - centerCoords.x,\n      bottom: layout.y - centerCoords.y\n    });\n  },\n  _getScaleLayoutValue: function _getScaleLayoutValue() {\n    return this._area.radius;\n  },\n  _getTicksOrientation: function _getTicksOrientation(scaleOptions) {\n    return scaleOptions.orientation;\n  },\n  _getTicksCoefficients: function _getTicksCoefficients(options) {\n    var coefs = {\n      inner: 0,\n      outer: 1\n    };\n\n    if (\"inside\" === options.orientation) {\n      coefs.inner = 1;\n      coefs.outer = 0;\n    } else if (\"center\" === options.orientation) {\n      coefs.inner = coefs.outer = .5;\n    }\n\n    return coefs;\n  },\n  _correctScaleIndents: function _correctScaleIndents(result, indentFromTick, textParams) {\n    if (indentFromTick >= 0) {\n      result.horizontalOffset = indentFromTick + textParams.width;\n      result.verticalOffset = indentFromTick + textParams.height;\n    } else {\n      result.horizontalOffset = result.verticalOffset = 0;\n      result.min -= -indentFromTick + _max(textParams.width, textParams.height);\n    }\n\n    result.inverseHorizontalOffset = textParams.width / 2;\n    result.inverseVerticalOffset = textParams.height / 2;\n  },\n  _measureMainElements: function _measureMainElements(elements, scaleMeasurement) {\n    var radius = this._area.radius;\n    var maxRadius = 0;\n    var minRadius = 1 / 0;\n    var maxHorizontalOffset = 0;\n    var maxVerticalOffset = 0;\n    var maxInverseHorizontalOffset = 0;\n    var maxInverseVerticalOffset = 0;\n    var scale = this._scale;\n\n    _each(elements.concat(scale), function (_, element) {\n      var bounds = element.measure ? element.measure({\n        radius: radius - element.getOffset()\n      }) : scaleMeasurement;\n      bounds.min > 0 && (minRadius = _min(minRadius, bounds.min));\n      bounds.max > 0 && (maxRadius = _max(maxRadius, bounds.max));\n      bounds.horizontalOffset > 0 && (maxHorizontalOffset = _max(maxHorizontalOffset, bounds.max + bounds.horizontalOffset));\n      bounds.verticalOffset > 0 && (maxVerticalOffset = _max(maxVerticalOffset, bounds.max + bounds.verticalOffset));\n      bounds.inverseHorizontalOffset > 0 && (maxInverseHorizontalOffset = _max(maxInverseHorizontalOffset, bounds.inverseHorizontalOffset));\n      bounds.inverseVerticalOffset > 0 && (maxInverseVerticalOffset = _max(maxInverseVerticalOffset, bounds.inverseVerticalOffset));\n    });\n\n    maxHorizontalOffset = _max(maxHorizontalOffset - maxRadius, 0);\n    maxVerticalOffset = _max(maxVerticalOffset - maxRadius, 0);\n    return {\n      minRadius: minRadius,\n      maxRadius: maxRadius,\n      horizontalMargin: maxHorizontalOffset,\n      verticalMargin: maxVerticalOffset,\n      inverseHorizontalMargin: maxInverseHorizontalOffset,\n      inverseVerticalMargin: maxInverseVerticalOffset\n    };\n  },\n  _applyMainLayout: function _applyMainLayout(elements, scaleMeasurement) {\n    var measurements = this._measureMainElements(elements, scaleMeasurement);\n\n    var area = this._area;\n    var sides = area.sides;\n    var margins = {\n      left: (sides.left < -.1 ? measurements.horizontalMargin : measurements.inverseHorizontalMargin) || 0,\n      right: (sides.right > .1 ? measurements.horizontalMargin : measurements.inverseHorizontalMargin) || 0,\n      top: (sides.up < -.1 ? measurements.verticalMargin : measurements.inverseVerticalMargin) || 0,\n      bottom: (sides.down > .1 ? measurements.verticalMargin : measurements.inverseVerticalMargin) || 0\n    };\n    var rect = selectRectByAspectRatio(this._innerRect, (sides.down - sides.up) / (sides.right - sides.left), margins);\n\n    var radius = _min(getWidth(rect) / (sides.right - sides.left), getHeight(rect) / (sides.down - sides.up));\n\n    radius = radius - measurements.maxRadius + area.radius;\n    var x = rect.left - getWidth(rect) * sides.left / (sides.right - sides.left);\n    var y = rect.top - getHeight(rect) * sides.up / (sides.down - sides.up);\n    area.x = _round(x);\n    area.y = _round(y);\n    area.radius = radius;\n    rect.left -= margins.left;\n    rect.right += margins.right;\n    rect.top -= margins.top;\n    rect.bottom += margins.bottom;\n    this._innerRect = rect;\n  },\n  _getElementLayout: function _getElementLayout(offset) {\n    return {\n      x: this._area.x,\n      y: this._area.y,\n      radius: _round(this._area.radius - offset)\n    };\n  },\n  _getApproximateScreenRange: function _getApproximateScreenRange() {\n    var area = this._area;\n\n    var r = _min(this._canvas.width / (area.sides.right - area.sides.left), this._canvas.height / (area.sides.down - area.sides.up));\n\n    r > area.totalRadius && (r = area.totalRadius);\n    r *= .8;\n    return -this._translator.getCodomainRange() * r * PI / 180;\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 300,\n      height: 300\n    };\n  },\n  _factory: clone(BaseGauge.prototype._factory)\n});\n\nfunction getWidth(rect) {\n  return rect.right - rect.left;\n}\n\nfunction getHeight(rect) {\n  return rect.bottom - rect.top;\n}\n\nfunction selectRectByAspectRatio(srcRect, aspectRatio, margins) {\n  var rect = extend({}, srcRect);\n  var selfAspectRatio;\n  var width = 0;\n  var height = 0;\n  margins = margins || {};\n\n  if (aspectRatio > 0) {\n    rect.left += margins.left || 0;\n    rect.right -= margins.right || 0;\n    rect.top += margins.top || 0;\n    rect.bottom -= margins.bottom || 0;\n\n    if (getWidth(rect) > 0 && getHeight(rect) > 0) {\n      selfAspectRatio = getHeight(rect) / getWidth(rect);\n\n      if (selfAspectRatio > 1) {\n        aspectRatio < selfAspectRatio ? width = getWidth(rect) : height = getHeight(rect);\n      } else {\n        aspectRatio > selfAspectRatio ? height = getHeight(rect) : width = getWidth(rect);\n      }\n\n      width > 0 || (width = height / aspectRatio);\n      height > 0 || (height = width * aspectRatio);\n      width = (getWidth(rect) - width) / 2;\n      height = (getHeight(rect) - height) / 2;\n      rect.left += width;\n      rect.right -= width;\n      rect.top += height;\n      rect.bottom -= height;\n    } else {\n      rect.left = rect.right = (rect.left + rect.right) / 2;\n      rect.top = rect.bottom = (rect.top + rect.bottom) / 2;\n    }\n  }\n\n  return rect;\n}\n\nvar indicators = dxCircularGauge.prototype._factory.indicators = {};\ndxCircularGauge.prototype._factory.createIndicator = createIndicatorCreator(indicators);\nindicators._default = circularIndicators._default;\nindicators.rectangleneedle = circularIndicators.rectangleneedle;\nindicators.triangleneedle = circularIndicators.triangleneedle;\nindicators.twocolorneedle = circularIndicators.twocolorneedle;\nindicators.trianglemarker = circularIndicators.trianglemarker;\nindicators.textcloud = circularIndicators.textcloud;\nindicators.rangebar = circularIndicators.rangebar;\ndxCircularGauge.prototype._factory.RangeContainer = CircularRangeContainer;\nregisterComponent(\"dxCircularGauge\", dxCircularGauge);\nexport default dxCircularGauge;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/gauges/circular_gauge.js"],"names":["_isFinite","isFinite","registerComponent","clone","extend","each","BaseGauge","dxGauge","createIndicatorCreator","normalizeAngle","getCosAndSin","_normalizeAngle","_getCosAndSin","circularIndicators","CircularRangeContainer","_abs","Math","abs","_max","max","_min","min","_round","round","_each","PI","getSides","startAngle","endAngle","startCosSin","endCosSin","startCos","cos","startSin","sin","endCos","endSin","left","right","up","down","dxCircularGauge","inherit","_rootClass","_factoryMethods","rangeContainer","indicator","_gridSpacingFactor","_scaleTypes","type","drawingType","_getThemeManagerOptions","options","callBase","apply","arguments","subTheme","_updateScaleTickIndent","scaleOptions","indentFromTick","label","length","tick","visible","textParams","_scale","measureLabels","_canvas","tickCorrection","orientation","indentFromAxis","width","height","updateOptions","_setupCodomain","geometry","option","sides","_area","x","y","radius","startCoord","endCoord","_translator","setCodomain","_shiftScale","layout","scale","canvas","getCanvas","draw","centerCoords","getCenter","shift","bottom","_getScaleLayoutValue","_getTicksOrientation","_getTicksCoefficients","coefs","inner","outer","_correctScaleIndents","result","horizontalOffset","verticalOffset","inverseHorizontalOffset","inverseVerticalOffset","_measureMainElements","elements","scaleMeasurement","maxRadius","minRadius","maxHorizontalOffset","maxVerticalOffset","maxInverseHorizontalOffset","maxInverseVerticalOffset","concat","_","element","bounds","measure","getOffset","horizontalMargin","verticalMargin","inverseHorizontalMargin","inverseVerticalMargin","_applyMainLayout","measurements","area","margins","top","rect","selectRectByAspectRatio","_innerRect","getWidth","getHeight","_getElementLayout","offset","_getApproximateScreenRange","r","totalRadius","getCodomainRange","_getDefaultSize","_factory","prototype","srcRect","aspectRatio","selfAspectRatio","indicators","createIndicator","_default","rectangleneedle","triangleneedle","twocolorneedle","trianglemarker","textcloud","rangebar","RangeContainer"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/circular_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar _isFinite = isFinite;\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    clone\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    BaseGauge\r\n} from \"./base_gauge\";\r\nimport {\r\n    dxGauge,\r\n    createIndicatorCreator\r\n} from \"./common\";\r\nimport {\r\n    normalizeAngle,\r\n    getCosAndSin\r\n} from \"../core/utils\";\r\nvar _normalizeAngle = normalizeAngle;\r\nvar _getCosAndSin = getCosAndSin;\r\nimport * as circularIndicators from \"./circular_indicators\";\r\nimport CircularRangeContainer from \"./circular_range_container\";\r\nvar _abs = Math.abs;\r\nvar _max = Math.max;\r\nvar _min = Math.min;\r\nvar _round = Math.round;\r\nvar _each = each;\r\nvar PI = Math.PI;\r\n\r\nfunction getSides(startAngle, endAngle) {\r\n    var startCosSin = _getCosAndSin(startAngle);\r\n    var endCosSin = _getCosAndSin(endAngle);\r\n    var startCos = startCosSin.cos;\r\n    var startSin = startCosSin.sin;\r\n    var endCos = endCosSin.cos;\r\n    var endSin = endCosSin.sin;\r\n    return {\r\n        left: startSin <= 0 && endSin >= 0 || startSin <= 0 && endSin <= 0 && startCos <= endCos || startSin >= 0 && endSin >= 0 && startCos >= endCos ? -1 : _min(startCos, endCos, 0),\r\n        right: startSin >= 0 && endSin <= 0 || startSin >= 0 && endSin >= 0 && startCos >= endCos || startSin <= 0 && endSin <= 0 && startCos <= endCos ? 1 : _max(startCos, endCos, 0),\r\n        up: startCos <= 0 && endCos >= 0 || startCos <= 0 && endCos <= 0 && startSin >= endSin || startCos >= 0 && endCos >= 0 && startSin <= endSin ? -1 : -_max(startSin, endSin, 0),\r\n        down: startCos >= 0 && endCos <= 0 || startCos >= 0 && endCos >= 0 && startSin <= endSin || startCos <= 0 && endCos <= 0 && startSin >= endSin ? 1 : -_min(startSin, endSin, 0)\r\n    }\r\n}\r\nvar dxCircularGauge = dxGauge.inherit({\r\n    _rootClass: \"dxg-circular-gauge\",\r\n    _factoryMethods: {\r\n        rangeContainer: \"createCircularRangeContainer\",\r\n        indicator: \"createCircularIndicator\"\r\n    },\r\n    _gridSpacingFactor: 17,\r\n    _scaleTypes: {\r\n        type: \"polarAxes\",\r\n        drawingType: \"circular\"\r\n    },\r\n    _getThemeManagerOptions() {\r\n        var options = this.callBase.apply(this, arguments);\r\n        options.subTheme = \"_circular\";\r\n        return options\r\n    },\r\n    _updateScaleTickIndent: function(scaleOptions) {\r\n        var indentFromTick = scaleOptions.label.indentFromTick;\r\n        var length = scaleOptions.tick.visible ? scaleOptions.tick.length : 0;\r\n        var textParams = this._scale.measureLabels(extend({}, this._canvas));\r\n        var tickCorrection = length;\r\n        if (\"inside\" === scaleOptions.orientation) {\r\n            tickCorrection = 0\r\n        } else if (\"center\" === scaleOptions.orientation) {\r\n            tickCorrection = .5 * length\r\n        }\r\n        scaleOptions.label.indentFromAxis = indentFromTick >= 0 ? indentFromTick + tickCorrection : indentFromTick - tickCorrection - _max(textParams.width, textParams.height);\r\n        this._scale.updateOptions(scaleOptions)\r\n    },\r\n    _setupCodomain: function() {\r\n        var geometry = this.option(\"geometry\") || {};\r\n        var startAngle = geometry.startAngle;\r\n        var endAngle = geometry.endAngle;\r\n        var sides;\r\n        startAngle = _isFinite(startAngle) ? _normalizeAngle(startAngle) : 225;\r\n        endAngle = _isFinite(endAngle) ? _normalizeAngle(endAngle) : -45;\r\n        if (_abs(startAngle - endAngle) < 1) {\r\n            endAngle -= 360;\r\n            sides = {\r\n                left: -1,\r\n                up: -1,\r\n                right: 1,\r\n                down: 1\r\n            }\r\n        } else {\r\n            startAngle < endAngle && (endAngle -= 360);\r\n            sides = getSides(startAngle, endAngle)\r\n        }\r\n        this._area = {\r\n            x: 0,\r\n            y: 0,\r\n            radius: 100,\r\n            startCoord: startAngle,\r\n            endCoord: endAngle,\r\n            sides: sides\r\n        };\r\n        this._translator.setCodomain(startAngle, endAngle)\r\n    },\r\n    _shiftScale: function(layout) {\r\n        var scale = this._scale;\r\n        var canvas = scale.getCanvas();\r\n        canvas.width = canvas.height = 2 * layout.radius;\r\n        scale.draw(canvas);\r\n        var centerCoords = scale.getCenter();\r\n        scale.shift({\r\n            right: layout.x - centerCoords.x,\r\n            bottom: layout.y - centerCoords.y\r\n        })\r\n    },\r\n    _getScaleLayoutValue: function() {\r\n        return this._area.radius\r\n    },\r\n    _getTicksOrientation: function(scaleOptions) {\r\n        return scaleOptions.orientation\r\n    },\r\n    _getTicksCoefficients: function(options) {\r\n        var coefs = {\r\n            inner: 0,\r\n            outer: 1\r\n        };\r\n        if (\"inside\" === options.orientation) {\r\n            coefs.inner = 1;\r\n            coefs.outer = 0\r\n        } else if (\"center\" === options.orientation) {\r\n            coefs.inner = coefs.outer = .5\r\n        }\r\n        return coefs\r\n    },\r\n    _correctScaleIndents: function(result, indentFromTick, textParams) {\r\n        if (indentFromTick >= 0) {\r\n            result.horizontalOffset = indentFromTick + textParams.width;\r\n            result.verticalOffset = indentFromTick + textParams.height\r\n        } else {\r\n            result.horizontalOffset = result.verticalOffset = 0;\r\n            result.min -= -indentFromTick + _max(textParams.width, textParams.height)\r\n        }\r\n        result.inverseHorizontalOffset = textParams.width / 2;\r\n        result.inverseVerticalOffset = textParams.height / 2\r\n    },\r\n    _measureMainElements: function(elements, scaleMeasurement) {\r\n        var radius = this._area.radius;\r\n        var maxRadius = 0;\r\n        var minRadius = 1 / 0;\r\n        var maxHorizontalOffset = 0;\r\n        var maxVerticalOffset = 0;\r\n        var maxInverseHorizontalOffset = 0;\r\n        var maxInverseVerticalOffset = 0;\r\n        var scale = this._scale;\r\n        _each(elements.concat(scale), (function(_, element) {\r\n            var bounds = element.measure ? element.measure({\r\n                radius: radius - element.getOffset()\r\n            }) : scaleMeasurement;\r\n            bounds.min > 0 && (minRadius = _min(minRadius, bounds.min));\r\n            bounds.max > 0 && (maxRadius = _max(maxRadius, bounds.max));\r\n            bounds.horizontalOffset > 0 && (maxHorizontalOffset = _max(maxHorizontalOffset, bounds.max + bounds.horizontalOffset));\r\n            bounds.verticalOffset > 0 && (maxVerticalOffset = _max(maxVerticalOffset, bounds.max + bounds.verticalOffset));\r\n            bounds.inverseHorizontalOffset > 0 && (maxInverseHorizontalOffset = _max(maxInverseHorizontalOffset, bounds.inverseHorizontalOffset));\r\n            bounds.inverseVerticalOffset > 0 && (maxInverseVerticalOffset = _max(maxInverseVerticalOffset, bounds.inverseVerticalOffset))\r\n        }));\r\n        maxHorizontalOffset = _max(maxHorizontalOffset - maxRadius, 0);\r\n        maxVerticalOffset = _max(maxVerticalOffset - maxRadius, 0);\r\n        return {\r\n            minRadius: minRadius,\r\n            maxRadius: maxRadius,\r\n            horizontalMargin: maxHorizontalOffset,\r\n            verticalMargin: maxVerticalOffset,\r\n            inverseHorizontalMargin: maxInverseHorizontalOffset,\r\n            inverseVerticalMargin: maxInverseVerticalOffset\r\n        }\r\n    },\r\n    _applyMainLayout: function(elements, scaleMeasurement) {\r\n        var measurements = this._measureMainElements(elements, scaleMeasurement);\r\n        var area = this._area;\r\n        var sides = area.sides;\r\n        var margins = {\r\n            left: (sides.left < -.1 ? measurements.horizontalMargin : measurements.inverseHorizontalMargin) || 0,\r\n            right: (sides.right > .1 ? measurements.horizontalMargin : measurements.inverseHorizontalMargin) || 0,\r\n            top: (sides.up < -.1 ? measurements.verticalMargin : measurements.inverseVerticalMargin) || 0,\r\n            bottom: (sides.down > .1 ? measurements.verticalMargin : measurements.inverseVerticalMargin) || 0\r\n        };\r\n        var rect = selectRectByAspectRatio(this._innerRect, (sides.down - sides.up) / (sides.right - sides.left), margins);\r\n        var radius = _min(getWidth(rect) / (sides.right - sides.left), getHeight(rect) / (sides.down - sides.up));\r\n        radius = radius - measurements.maxRadius + area.radius;\r\n        var x = rect.left - getWidth(rect) * sides.left / (sides.right - sides.left);\r\n        var y = rect.top - getHeight(rect) * sides.up / (sides.down - sides.up);\r\n        area.x = _round(x);\r\n        area.y = _round(y);\r\n        area.radius = radius;\r\n        rect.left -= margins.left;\r\n        rect.right += margins.right;\r\n        rect.top -= margins.top;\r\n        rect.bottom += margins.bottom;\r\n        this._innerRect = rect\r\n    },\r\n    _getElementLayout: function(offset) {\r\n        return {\r\n            x: this._area.x,\r\n            y: this._area.y,\r\n            radius: _round(this._area.radius - offset)\r\n        }\r\n    },\r\n    _getApproximateScreenRange: function() {\r\n        var area = this._area;\r\n        var r = _min(this._canvas.width / (area.sides.right - area.sides.left), this._canvas.height / (area.sides.down - area.sides.up));\r\n        r > area.totalRadius && (r = area.totalRadius);\r\n        r *= .8;\r\n        return -this._translator.getCodomainRange() * r * PI / 180\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 300,\r\n            height: 300\r\n        }\r\n    },\r\n    _factory: clone(BaseGauge.prototype._factory)\r\n});\r\n\r\nfunction getWidth(rect) {\r\n    return rect.right - rect.left\r\n}\r\n\r\nfunction getHeight(rect) {\r\n    return rect.bottom - rect.top\r\n}\r\n\r\nfunction selectRectByAspectRatio(srcRect, aspectRatio, margins) {\r\n    var rect = extend({}, srcRect);\r\n    var selfAspectRatio;\r\n    var width = 0;\r\n    var height = 0;\r\n    margins = margins || {};\r\n    if (aspectRatio > 0) {\r\n        rect.left += margins.left || 0;\r\n        rect.right -= margins.right || 0;\r\n        rect.top += margins.top || 0;\r\n        rect.bottom -= margins.bottom || 0;\r\n        if (getWidth(rect) > 0 && getHeight(rect) > 0) {\r\n            selfAspectRatio = getHeight(rect) / getWidth(rect);\r\n            if (selfAspectRatio > 1) {\r\n                aspectRatio < selfAspectRatio ? width = getWidth(rect) : height = getHeight(rect)\r\n            } else {\r\n                aspectRatio > selfAspectRatio ? height = getHeight(rect) : width = getWidth(rect)\r\n            }\r\n            width > 0 || (width = height / aspectRatio);\r\n            height > 0 || (height = width * aspectRatio);\r\n            width = (getWidth(rect) - width) / 2;\r\n            height = (getHeight(rect) - height) / 2;\r\n            rect.left += width;\r\n            rect.right -= width;\r\n            rect.top += height;\r\n            rect.bottom -= height\r\n        } else {\r\n            rect.left = rect.right = (rect.left + rect.right) / 2;\r\n            rect.top = rect.bottom = (rect.top + rect.bottom) / 2\r\n        }\r\n    }\r\n    return rect\r\n}\r\nvar indicators = dxCircularGauge.prototype._factory.indicators = {};\r\ndxCircularGauge.prototype._factory.createIndicator = createIndicatorCreator(indicators);\r\nindicators._default = circularIndicators._default;\r\nindicators.rectangleneedle = circularIndicators.rectangleneedle;\r\nindicators.triangleneedle = circularIndicators.triangleneedle;\r\nindicators.twocolorneedle = circularIndicators.twocolorneedle;\r\nindicators.trianglemarker = circularIndicators.trianglemarker;\r\nindicators.textcloud = circularIndicators.textcloud;\r\nindicators.rangebar = circularIndicators.rangebar;\r\ndxCircularGauge.prototype._factory.RangeContainer = CircularRangeContainer;\r\nregisterComponent(\"dxCircularGauge\", dxCircularGauge);\r\nexport default dxCircularGauge;\r\n"]},"metadata":{},"sourceType":"module"}