{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/tooltip_strategies/desktopTooltipStrategy.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { TooltipStrategyBase } from \"./tooltipStrategyBase\";\nimport Tooltip from \"../../tooltip\";\nimport { touch } from \"../../../core/utils/support\";\nvar APPOINTMENT_TOOLTIP_WRAPPER_CLASS = \"dx-scheduler-appointment-tooltip-wrapper\";\nvar MAX_TOOLTIP_HEIGHT = 200;\nexport var DesktopTooltipStrategy = /*#__PURE__*/function (_TooltipStrategyBase) {\n  _inherits(DesktopTooltipStrategy, _TooltipStrategyBase);\n\n  var _super = _createSuper(DesktopTooltipStrategy);\n\n  function DesktopTooltipStrategy() {\n    _classCallCheck(this, DesktopTooltipStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DesktopTooltipStrategy, [{\n    key: \"_prepareBeforeVisibleChanged\",\n    value: function _prepareBeforeVisibleChanged(dataList) {\n      this._tooltip.option(\"position\", {\n        my: \"bottom\",\n        at: \"top\",\n        boundary: this._getBoundary(dataList),\n        offset: this._extraOptions.offset,\n        collision: \"fit flipfit\"\n      });\n    }\n  }, {\n    key: \"_getBoundary\",\n    value: function _getBoundary(dataList) {\n      return this._options.isAppointmentInAllDayPanel(dataList[0].appointment) ? this._options.container : this._options.getScrollableContainer();\n    }\n  }, {\n    key: \"_onShown\",\n    value: function _onShown() {\n      _get(_getPrototypeOf(DesktopTooltipStrategy.prototype), \"_onShown\", this).call(this);\n\n      if (this._extraOptions.isButtonClick) {\n        this._list.focus();\n\n        this._list.option(\"focusedElement\", null);\n      }\n    }\n  }, {\n    key: \"_createListOption\",\n    value: function _createListOption(target, dataList) {\n      var result = _get(_getPrototypeOf(DesktopTooltipStrategy.prototype), \"_createListOption\", this).call(this, target, dataList);\n\n      result.showScrollbar = touch ? \"always\" : \"onHover\";\n      return result;\n    }\n  }, {\n    key: \"_createTooltip\",\n    value: function _createTooltip(target, dataList) {\n      var tooltip = this._createTooltipElement(APPOINTMENT_TOOLTIP_WRAPPER_CLASS);\n\n      return this._options.createComponent(tooltip, Tooltip, {\n        target: target,\n        maxHeight: MAX_TOOLTIP_HEIGHT,\n        rtlEnabled: this._extraOptions.rtlEnabled,\n        onShown: this._onShown.bind(this),\n        contentTemplate: this._getContentTemplate(dataList)\n      });\n    }\n  }, {\n    key: \"_onListRender\",\n    value: function _onListRender(e) {\n      return this._extraOptions.dragBehavior && this._extraOptions.dragBehavior(e);\n    }\n  }]);\n\n  return DesktopTooltipStrategy;\n}(TooltipStrategyBase);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/tooltip_strategies/desktopTooltipStrategy.js"],"names":["TooltipStrategyBase","Tooltip","touch","APPOINTMENT_TOOLTIP_WRAPPER_CLASS","MAX_TOOLTIP_HEIGHT","DesktopTooltipStrategy","dataList","_tooltip","option","my","at","boundary","_getBoundary","offset","_extraOptions","collision","_options","isAppointmentInAllDayPanel","appointment","container","getScrollableContainer","isButtonClick","_list","focus","target","result","showScrollbar","tooltip","_createTooltipElement","createComponent","maxHeight","rtlEnabled","onShown","_onShown","bind","contentTemplate","_getContentTemplate","e","dragBehavior"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,mBADJ,QAEO,uBAFP;AAGA,OAAOC,OAAP,MAAoB,eAApB;AACA,SACIC,KADJ,QAEO,6BAFP;AAGA,IAAIC,iCAAiC,GAAG,0CAAxC;AACA,IAAIC,kBAAkB,GAAG,GAAzB;AACA,WAAaC,sBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,sCAA6BC,QAA7B,EAAuC;AACnC,WAAKC,QAAL,CAAcC,MAAd,CAAqB,UAArB,EAAiC;AAC7BC,QAAAA,EAAE,EAAE,QADyB;AAE7BC,QAAAA,EAAE,EAAE,KAFyB;AAG7BC,QAAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBN,QAAlB,CAHmB;AAI7BO,QAAAA,MAAM,EAAE,KAAKC,aAAL,CAAmBD,MAJE;AAK7BE,QAAAA,SAAS,EAAE;AALkB,OAAjC;AAOH;AATL;AAAA;AAAA,WAUI,sBAAaT,QAAb,EAAuB;AACnB,aAAO,KAAKU,QAAL,CAAcC,0BAAd,CAAyCX,QAAQ,CAAC,CAAD,CAAR,CAAYY,WAArD,IAAoE,KAAKF,QAAL,CAAcG,SAAlF,GAA8F,KAAKH,QAAL,CAAcI,sBAAd,EAArG;AACH;AAZL;AAAA;AAAA,WAaI,oBAAW;AACP;;AACA,UAAI,KAAKN,aAAL,CAAmBO,aAAvB,EAAsC;AAClC,aAAKC,KAAL,CAAWC,KAAX;;AACA,aAAKD,KAAL,CAAWd,MAAX,CAAkB,gBAAlB,EAAoC,IAApC;AACH;AACJ;AAnBL;AAAA;AAAA,WAoBI,2BAAkBgB,MAAlB,EAA0BlB,QAA1B,EAAoC;AAChC,UAAImB,MAAM,iGAA2BD,MAA3B,EAAmClB,QAAnC,CAAV;;AACAmB,MAAAA,MAAM,CAACC,aAAP,GAAuBxB,KAAK,GAAG,QAAH,GAAc,SAA1C;AACA,aAAOuB,MAAP;AACH;AAxBL;AAAA;AAAA,WAyBI,wBAAeD,MAAf,EAAuBlB,QAAvB,EAAiC;AAC7B,UAAIqB,OAAO,GAAG,KAAKC,qBAAL,CAA2BzB,iCAA3B,CAAd;;AACA,aAAO,KAAKa,QAAL,CAAca,eAAd,CAA8BF,OAA9B,EAAuC1B,OAAvC,EAAgD;AACnDuB,QAAAA,MAAM,EAAEA,MAD2C;AAEnDM,QAAAA,SAAS,EAAE1B,kBAFwC;AAGnD2B,QAAAA,UAAU,EAAE,KAAKjB,aAAL,CAAmBiB,UAHoB;AAInDC,QAAAA,OAAO,EAAE,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAJ0C;AAKnDC,QAAAA,eAAe,EAAE,KAAKC,mBAAL,CAAyB9B,QAAzB;AALkC,OAAhD,CAAP;AAOH;AAlCL;AAAA;AAAA,WAmCI,uBAAc+B,CAAd,EAAiB;AACb,aAAO,KAAKvB,aAAL,CAAmBwB,YAAnB,IAAmC,KAAKxB,aAAL,CAAmBwB,YAAnB,CAAgCD,CAAhC,CAA1C;AACH;AArCL;;AAAA;AAAA,EAA4CrC,mBAA5C","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/tooltip_strategies/desktopTooltipStrategy.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    TooltipStrategyBase\r\n} from \"./tooltipStrategyBase\";\r\nimport Tooltip from \"../../tooltip\";\r\nimport {\r\n    touch\r\n} from \"../../../core/utils/support\";\r\nvar APPOINTMENT_TOOLTIP_WRAPPER_CLASS = \"dx-scheduler-appointment-tooltip-wrapper\";\r\nvar MAX_TOOLTIP_HEIGHT = 200;\r\nexport class DesktopTooltipStrategy extends TooltipStrategyBase {\r\n    _prepareBeforeVisibleChanged(dataList) {\r\n        this._tooltip.option(\"position\", {\r\n            my: \"bottom\",\r\n            at: \"top\",\r\n            boundary: this._getBoundary(dataList),\r\n            offset: this._extraOptions.offset,\r\n            collision: \"fit flipfit\"\r\n        })\r\n    }\r\n    _getBoundary(dataList) {\r\n        return this._options.isAppointmentInAllDayPanel(dataList[0].appointment) ? this._options.container : this._options.getScrollableContainer()\r\n    }\r\n    _onShown() {\r\n        super._onShown();\r\n        if (this._extraOptions.isButtonClick) {\r\n            this._list.focus();\r\n            this._list.option(\"focusedElement\", null)\r\n        }\r\n    }\r\n    _createListOption(target, dataList) {\r\n        var result = super._createListOption(target, dataList);\r\n        result.showScrollbar = touch ? \"always\" : \"onHover\";\r\n        return result\r\n    }\r\n    _createTooltip(target, dataList) {\r\n        var tooltip = this._createTooltipElement(APPOINTMENT_TOOLTIP_WRAPPER_CLASS);\r\n        return this._options.createComponent(tooltip, Tooltip, {\r\n            target: target,\r\n            maxHeight: MAX_TOOLTIP_HEIGHT,\r\n            rtlEnabled: this._extraOptions.rtlEnabled,\r\n            onShown: this._onShown.bind(this),\r\n            contentTemplate: this._getContentTemplate(dataList)\r\n        })\r\n    }\r\n    _onListRender(e) {\r\n        return this._extraOptions.dragBehavior && this._extraOptions.dragBehavior(e)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}