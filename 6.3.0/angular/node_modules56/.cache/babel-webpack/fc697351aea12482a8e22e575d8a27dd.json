{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/data_source.utils.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { foreachTree, findField, getCompareFunction, createPath, foreachDataLevel } from \"./ui.pivot_grid.utils\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { map } from \"../../core/utils/iterator\";\nexport function sort(loadOptions, dataSource, getAscOrder) {\n  sortDimension(dataSource, loadOptions, \"rows\", getAscOrder);\n  sortDimension(dataSource, loadOptions, \"columns\", getAscOrder);\n}\n\nfunction sortDimension(dataSource, loadOptions, dimensionName, getAscOrder) {\n  var fields = loadOptions[dimensionName] || [];\n  var baseIndex = loadOptions.headerName === dimensionName ? loadOptions.path.length : 0;\n  var sortingMethodByLevel = [];\n  foreachDataLevel(dataSource[dimensionName], function (item, index) {\n    var field = fields[index] || {};\n    var sortingMethod = sortingMethodByLevel[index] = sortingMethodByLevel[index] || getSortingMethod(field, dataSource, loadOptions, dimensionName, getAscOrder);\n    item.sort(sortingMethod);\n  }, baseIndex);\n}\n\nfunction getSortingMethod(field, dataSource, loadOptions, dimensionName, getAscOrder) {\n  var sortOrder = getAscOrder ? \"asc\" : field.sortOrder;\n  var sortBy = getMemberForSortBy(field.sortBy, getAscOrder);\n  var defaultCompare = field.sortingMethod ? function (a, b) {\n    return field.sortingMethod(a, b);\n  } : getCompareFunction(function (item) {\n    return item[sortBy];\n  });\n  var summaryValueSelector = !getAscOrder && getFieldSummaryValueSelector(field, dataSource, loadOptions, dimensionName);\n  var summaryCompare = summaryValueSelector && getCompareFunction(summaryValueSelector);\n  return function (a, b) {\n    var result = summaryCompare && summaryCompare(a, b) || defaultCompare(a, b);\n    return \"desc\" === sortOrder ? -result : result;\n  };\n}\n\nfunction getFieldSummaryValueSelector(field, dataSource, loadOptions, dimensionName) {\n  var values = dataSource.values;\n  var sortBySummaryFieldIndex = findField(loadOptions.values, field.sortBySummaryField);\n  var areRows = \"rows\" === dimensionName;\n  var sortByDimension = areRows ? dataSource.columns : dataSource.rows;\n  var grandTotalIndex = areRows ? dataSource.grandTotalRowIndex : dataSource.grandTotalColumnIndex;\n  var sortBySummaryPath = field.sortBySummaryPath || [];\n  var sliceIndex = sortBySummaryPath.length ? getSliceIndex(sortByDimension, sortBySummaryPath) : grandTotalIndex;\n\n  if (values && values.length && sortBySummaryFieldIndex >= 0 && isDefined(sliceIndex)) {\n    return function (field) {\n      var rowIndex = areRows ? field.index : sliceIndex;\n      var columnIndex = areRows ? sliceIndex : field.index;\n      var value = ((values[rowIndex] || [[]])[columnIndex] || [])[sortBySummaryFieldIndex];\n      return isDefined(value) ? value : null;\n    };\n  }\n}\n\nfunction getMemberForSortBy(sortBy, getAscOrder) {\n  var member = \"text\";\n\n  if (\"none\" === sortBy) {\n    member = \"index\";\n  } else if (getAscOrder || \"displayText\" !== sortBy) {\n    member = \"value\";\n  }\n\n  return member;\n}\n\nfunction getSliceIndex(items, path) {\n  var index = null;\n  var pathValue = (path || []).join(\".\");\n\n  if (pathValue.length) {\n    foreachTree(items, function (items) {\n      var item = items[0];\n      var itemPath = createPath(items).join(\".\");\n      var textPath = map(items, function (item) {\n        return item.text;\n      }).reverse().join(\".\");\n\n      if (pathValue === itemPath || item.key && textPath === pathValue) {\n        index = items[0].index;\n        return false;\n      }\n    });\n  }\n\n  return index;\n}","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/data_source.utils.js"],"names":["foreachTree","findField","getCompareFunction","createPath","foreachDataLevel","isDefined","map","sort","loadOptions","dataSource","getAscOrder","sortDimension","dimensionName","fields","baseIndex","headerName","path","length","sortingMethodByLevel","item","index","field","sortingMethod","getSortingMethod","sortOrder","sortBy","getMemberForSortBy","defaultCompare","a","b","summaryValueSelector","getFieldSummaryValueSelector","summaryCompare","result","values","sortBySummaryFieldIndex","sortBySummaryField","areRows","sortByDimension","columns","rows","grandTotalIndex","grandTotalRowIndex","grandTotalColumnIndex","sortBySummaryPath","sliceIndex","getSliceIndex","rowIndex","columnIndex","value","member","items","pathValue","join","itemPath","textPath","text","reverse","key"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/data_source.utils.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    foreachTree,\r\n    findField,\r\n    getCompareFunction,\r\n    createPath,\r\n    foreachDataLevel\r\n} from \"./ui.pivot_grid.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nexport function sort(loadOptions, dataSource, getAscOrder) {\r\n    sortDimension(dataSource, loadOptions, \"rows\", getAscOrder);\r\n    sortDimension(dataSource, loadOptions, \"columns\", getAscOrder)\r\n}\r\n\r\nfunction sortDimension(dataSource, loadOptions, dimensionName, getAscOrder) {\r\n    var fields = loadOptions[dimensionName] || [];\r\n    var baseIndex = loadOptions.headerName === dimensionName ? loadOptions.path.length : 0;\r\n    var sortingMethodByLevel = [];\r\n    foreachDataLevel(dataSource[dimensionName], (function(item, index) {\r\n        var field = fields[index] || {};\r\n        var sortingMethod = sortingMethodByLevel[index] = sortingMethodByLevel[index] || getSortingMethod(field, dataSource, loadOptions, dimensionName, getAscOrder);\r\n        item.sort(sortingMethod)\r\n    }), baseIndex)\r\n}\r\n\r\nfunction getSortingMethod(field, dataSource, loadOptions, dimensionName, getAscOrder) {\r\n    var sortOrder = getAscOrder ? \"asc\" : field.sortOrder;\r\n    var sortBy = getMemberForSortBy(field.sortBy, getAscOrder);\r\n    var defaultCompare = field.sortingMethod ? function(a, b) {\r\n        return field.sortingMethod(a, b)\r\n    } : getCompareFunction((function(item) {\r\n        return item[sortBy]\r\n    }));\r\n    var summaryValueSelector = !getAscOrder && getFieldSummaryValueSelector(field, dataSource, loadOptions, dimensionName);\r\n    var summaryCompare = summaryValueSelector && getCompareFunction(summaryValueSelector);\r\n    return function(a, b) {\r\n        var result = summaryCompare && summaryCompare(a, b) || defaultCompare(a, b);\r\n        return \"desc\" === sortOrder ? -result : result\r\n    }\r\n}\r\n\r\nfunction getFieldSummaryValueSelector(field, dataSource, loadOptions, dimensionName) {\r\n    var values = dataSource.values;\r\n    var sortBySummaryFieldIndex = findField(loadOptions.values, field.sortBySummaryField);\r\n    var areRows = \"rows\" === dimensionName;\r\n    var sortByDimension = areRows ? dataSource.columns : dataSource.rows;\r\n    var grandTotalIndex = areRows ? dataSource.grandTotalRowIndex : dataSource.grandTotalColumnIndex;\r\n    var sortBySummaryPath = field.sortBySummaryPath || [];\r\n    var sliceIndex = sortBySummaryPath.length ? getSliceIndex(sortByDimension, sortBySummaryPath) : grandTotalIndex;\r\n    if (values && values.length && sortBySummaryFieldIndex >= 0 && isDefined(sliceIndex)) {\r\n        return function(field) {\r\n            var rowIndex = areRows ? field.index : sliceIndex;\r\n            var columnIndex = areRows ? sliceIndex : field.index;\r\n            var value = ((values[rowIndex] || [\r\n                []\r\n            ])[columnIndex] || [])[sortBySummaryFieldIndex];\r\n            return isDefined(value) ? value : null\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMemberForSortBy(sortBy, getAscOrder) {\r\n    var member = \"text\";\r\n    if (\"none\" === sortBy) {\r\n        member = \"index\"\r\n    } else if (getAscOrder || \"displayText\" !== sortBy) {\r\n        member = \"value\"\r\n    }\r\n    return member\r\n}\r\n\r\nfunction getSliceIndex(items, path) {\r\n    var index = null;\r\n    var pathValue = (path || []).join(\".\");\r\n    if (pathValue.length) {\r\n        foreachTree(items, (function(items) {\r\n            var item = items[0];\r\n            var itemPath = createPath(items).join(\".\");\r\n            var textPath = map(items, (function(item) {\r\n                return item.text\r\n            })).reverse().join(\".\");\r\n            if (pathValue === itemPath || item.key && textPath === pathValue) {\r\n                index = items[0].index;\r\n                return false\r\n            }\r\n        }))\r\n    }\r\n    return index\r\n}\r\n"]},"metadata":{},"sourceType":"module"}