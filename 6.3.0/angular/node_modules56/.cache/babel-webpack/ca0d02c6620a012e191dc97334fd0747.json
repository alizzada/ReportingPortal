{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { isDefined } from \"../../core/utils/type\";\nimport Widget from \"../widget/ui.widget\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nimport { GanttView } from \"./ui.gantt.view\";\nimport { GanttToolbar, GanttContextMenuBar } from \"./ui.gantt.bars\";\nimport dxTreeList from \"../tree_list\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { hasWindow, getWindow } from \"../../core/utils/window\";\nimport DataOption from \"./ui.gantt.data.option\";\nimport SplitterControl from \"../splitter\";\nimport { GanttDialog } from \"./ui.gantt.dialogs\";\nimport LoadPanel from \"../load_panel\";\nimport { getPublicElement } from \"../../core/element\";\nimport { GanttDataCache } from \"./ui.gantt.cache\";\nimport { GanttExportHelper } from \"./ui.gantt.export_helper\";\nvar window = getWindow();\nvar GANTT_CLASS = \"dx-gantt\";\nvar GANTT_VIEW_CLASS = \"dx-gantt-view\";\nvar GANTT_COLLAPSABLE_ROW = \"dx-gantt-collapsable-row\";\nvar GANTT_TREE_LIST_WRAPPER = \"dx-gantt-treelist-wrapper\";\nvar GANTT_TOOLBAR_WRAPPER = \"dx-gantt-toolbar-wrapper\";\nvar GANTT_MAIN_WRAPPER = \"dx-gantt-main-wrapper\";\nvar GANTT_TASKS = \"tasks\";\nvar GANTT_DEPENDENCIES = \"dependencies\";\nvar GANTT_RESOURCES = \"resources\";\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\nvar GANTT_DEFAULT_ROW_HEIGHT = 34;\nvar GANTT_MAPPED_FIELD_REGEX = /(\\w*)Expr/;\n\nvar Gantt = /*#__PURE__*/function (_Widget) {\n  _inherits(Gantt, _Widget);\n\n  var _super = _createSuper(Gantt);\n\n  function Gantt() {\n    _classCallCheck(this, Gantt);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Gantt, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(Gantt.prototype), \"_init\", this).call(this);\n\n      this._cache = new GanttDataCache();\n      this._isGanttRendered = false;\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(Gantt.prototype), \"_initMarkup\", this).call(this);\n\n      this.$element().addClass(GANTT_CLASS);\n      this._$toolbarWrapper = $(\"<div>\").addClass(GANTT_TOOLBAR_WRAPPER).appendTo(this.$element());\n      this._$toolbar = $(\"<div>\").appendTo(this._$toolbarWrapper);\n      this._$mainWrapper = $(\"<div>\").addClass(GANTT_MAIN_WRAPPER).appendTo(this.$element());\n      this._$treeListWrapper = $(\"<div>\").addClass(GANTT_TREE_LIST_WRAPPER).appendTo(this._$mainWrapper);\n      this._$treeList = $(\"<div>\").appendTo(this._$treeListWrapper);\n      this._$splitter = $(\"<div>\").appendTo(this._$mainWrapper);\n      this._$ganttView = $(\"<div>\").addClass(GANTT_VIEW_CLASS).appendTo(this._$mainWrapper);\n      this._$dialog = $(\"<div>\").appendTo(this.$element());\n      this._$loadPanel = $(\"<div>\").appendTo(this.$element());\n      this._$contextMenu = $(\"<div>\").appendTo(this.$element());\n\n      this._refreshDataSource(GANTT_TASKS);\n\n      this._refreshDataSource(GANTT_DEPENDENCIES);\n\n      this._refreshDataSource(GANTT_RESOURCES);\n\n      this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      this._isGanttRendered = false;\n\n      _get(_getPrototypeOf(Gantt.prototype), \"_refresh\", this).call(this);\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      this._isMainElementVisible = this.$element().is(\":visible\");\n\n      if (this._isMainElementVisible && !this._isGanttRendered) {\n        this._isGanttRendered = true;\n\n        this._renderBars();\n\n        this._renderTreeList();\n\n        this._renderSplitter();\n      }\n    }\n  }, {\n    key: \"_renderTreeList\",\n    value: function _renderTreeList() {\n      var _this = this;\n\n      var _this$option = this.option(GANTT_TASKS),\n          keyExpr = _this$option.keyExpr,\n          parentIdExpr = _this$option.parentIdExpr;\n\n      this._treeList = this._createComponent(this._$treeList, dxTreeList, {\n        dataSource: this._tasksRaw,\n        keyExpr: keyExpr,\n        parentIdExpr: parentIdExpr,\n        columns: this._getTreeListColumns(),\n        columnResizingMode: \"nextColumn\",\n        height: this._getTreeListHeight(),\n        width: this.option(\"taskListWidth\"),\n        selection: {\n          mode: this._getSelectionMode(this.option(\"allowSelection\"))\n        },\n        selectedRowKeys: this._getArrayFromOneElement(this.option(\"selectedRowKey\")),\n        sorting: {\n          mode: \"none\"\n        },\n        scrolling: {\n          showScrollbar: \"onHover\",\n          mode: \"virtual\"\n        },\n        allowColumnResizing: true,\n        autoExpandAll: true,\n        showRowLines: this.option(\"showRowLines\"),\n        rootValue: this.option(\"rootValue\"),\n        onContentReady: function onContentReady(e) {\n          _this._onTreeListContentReady(e);\n        },\n        onSelectionChanged: function onSelectionChanged(e) {\n          _this._onTreeListSelectionChanged(e);\n        },\n        onRowCollapsed: function onRowCollapsed(e) {\n          _this._onTreeListRowCollapsed(e);\n        },\n        onRowExpanded: function onRowExpanded(e) {\n          _this._onTreeListRowExpanded(e);\n        },\n        onRowPrepared: function onRowPrepared(e) {\n          _this._onTreeListRowPrepared(e);\n        },\n        onContextMenuPreparing: function onContextMenuPreparing(e) {\n          _this._onTreeListContextMenuPreparing(e);\n        },\n        onRowClick: function onRowClick(e) {\n          _this._onTreeListRowClick(e);\n        },\n        onRowDblClick: function onRowDblClick(e) {\n          _this._onTreeListRowDblClick(e);\n        }\n      });\n    }\n  }, {\n    key: \"_renderSplitter\",\n    value: function _renderSplitter() {\n      this._splitter = this._createComponent(this._$splitter, SplitterControl, {\n        container: this.$element(),\n        leftElement: this._$treeListWrapper,\n        rightElement: this._$ganttView,\n        onApplyPanelSize: this._onApplyPanelSize.bind(this)\n      });\n\n      this._splitter.option(\"initialLeftPanelWidth\", this.option(\"taskListWidth\"));\n    }\n  }, {\n    key: \"_renderBars\",\n    value: function _renderBars() {\n      this._bars = [];\n      this._toolbar = new GanttToolbar(this._$toolbar, this);\n\n      this._updateToolbarContent();\n\n      this._bars.push(this._toolbar);\n\n      this._contextMenuBar = new GanttContextMenuBar(this._$contextMenu, this);\n\n      this._updateContextMenu();\n\n      this._bars.push(this._contextMenuBar);\n    }\n  }, {\n    key: \"_initGanttView\",\n    value: function _initGanttView() {\n      var _this2 = this;\n\n      if (this._ganttView) {\n        return;\n      }\n\n      this._ganttView = this._createComponent(this._$ganttView, GanttView, {\n        width: \"100%\",\n        height: this._treeList._$element.get(0).offsetHeight,\n        rowHeight: this._getTreeListRowHeight(),\n        headerHeight: this._getTreeListHeaderHeight(),\n        tasks: this._tasks,\n        dependencies: this._dependencies,\n        resources: this._resources,\n        resourceAssignments: this._resourceAssignments,\n        allowSelection: this.option(\"allowSelection\"),\n        selectedRowKey: this.option(\"selectedRowKey\"),\n        showResources: this.option(\"showResources\"),\n        taskTitlePosition: this.option(\"taskTitlePosition\"),\n        firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n        showRowLines: this.option(\"showRowLines\"),\n        scaleType: this.option(\"scaleType\"),\n        editing: this.option(\"editing\"),\n        validation: this.option(\"validation\"),\n        stripLines: this.option(\"stripLines\"),\n        bars: this._bars,\n        mainElement: this.$element(),\n        onSelectionChanged: this._onGanttViewSelectionChanged.bind(this),\n        onScroll: this._onGanttViewScroll.bind(this),\n        onDialogShowing: this._showDialog.bind(this),\n        onPopupMenuShowing: this._showPopupMenu.bind(this),\n        onExpandAll: this._expandAll.bind(this),\n        onCollapseAll: this._collapseAll.bind(this),\n        modelChangesListener: this._createModelChangesListener(),\n        exportHelper: this._getExportHelper(),\n        taskTooltipContentTemplate: this._getTaskTooltipContentTemplateFunc(this.option(\"taskTooltipContentTemplate\")),\n        taskProgressTooltipContentTemplate: this._getTaskProgressTooltipContentTemplateFunc(this.option(\"taskProgressTooltipContentTemplate\")),\n        taskTimeTooltipContentTemplate: this._getTaskTimeTooltipContentTemplateFunc(this.option(\"taskTimeTooltipContentTemplate\")),\n        taskContentTemplate: this._getTaskContentTemplateFunc(this.option(\"taskContentTemplate\")),\n        onTaskClick: function onTaskClick(e) {\n          _this2._onTreeListRowClick(e);\n        },\n        onTaskDblClick: function onTaskDblClick(e) {\n          _this2._onTreeListRowDblClick(e);\n        },\n        onAdjustControl: function onAdjustControl() {\n          _this2._onAdjustControl();\n        }\n      });\n\n      this._fireContentReadyAction();\n    }\n  }, {\n    key: \"_onAdjustControl\",\n    value: function _onAdjustControl() {\n      var elementHeight = this._$element.height();\n\n      this._updateGanttWidth();\n\n      this._setGanttHeight(elementHeight);\n    }\n  }, {\n    key: \"_onApplyPanelSize\",\n    value: function _onApplyPanelSize(e) {\n      this._setInnerElementsWidth(e);\n\n      this._updateGanttRowHeights();\n    }\n  }, {\n    key: \"_updateGanttRowHeights\",\n    value: function _updateGanttRowHeights() {\n      var rowHeight = this._getTreeListRowHeight();\n\n      if (this._getGanttViewOption(\"rowHeight\") !== rowHeight) {\n        var _this$_ganttView;\n\n        this._setGanttViewOption(\"rowHeight\", rowHeight);\n\n        null === (_this$_ganttView = this._ganttView) || void 0 === _this$_ganttView ? void 0 : _this$_ganttView._ganttViewCore.updateRowHeights(rowHeight);\n      }\n    }\n  }, {\n    key: \"_onTreeListContentReady\",\n    value: function _onTreeListContentReady(e) {\n      if (e.component.getDataSource()) {\n        this._initGanttView();\n\n        this._initScrollSync(e.component);\n      }\n    }\n  }, {\n    key: \"_onTreeListRowPrepared\",\n    value: function _onTreeListRowPrepared(e) {\n      if (\"data\" === e.rowType && e.node.children.length > 0) {\n        $(e.rowElement).addClass(GANTT_COLLAPSABLE_ROW);\n      }\n    }\n  }, {\n    key: \"_onTreeListContextMenuPreparing\",\n    value: function _onTreeListContextMenuPreparing(e) {\n      var _e$row, _e$row2;\n\n      if (\"data\" === (null === (_e$row = e.row) || void 0 === _e$row ? void 0 : _e$row.rowType)) {\n        this._setTreeListOption(\"selectedRowKeys\", [e.row.data[this.option(\"tasks.keyExpr\")]]);\n      }\n\n      e.items = [];\n      var info = {\n        cancel: false,\n        event: e.event,\n        type: \"task\",\n        key: null === (_e$row2 = e.row) || void 0 === _e$row2 ? void 0 : _e$row2.key,\n        position: {\n          x: e.event.pageX,\n          y: e.event.pageY\n        }\n      };\n\n      this._showPopupMenu(info);\n    }\n  }, {\n    key: \"_onTreeListRowClick\",\n    value: function _onTreeListRowClick(e) {\n      this._raiseTaskClickAction(e.key, e.event);\n    }\n  }, {\n    key: \"_onTreeListRowDblClick\",\n    value: function _onTreeListRowDblClick(e) {\n      if (this._raiseTaskDblClickAction(e.key, e.event)) {\n        this._ganttView._ganttViewCore.showTaskEditDialog();\n      }\n    }\n  }, {\n    key: \"_onTreeListSelectionChanged\",\n    value: function _onTreeListSelectionChanged(e) {\n      var selectedRowKey = e.currentSelectedRowKeys[0];\n\n      this._setGanttViewOption(\"selectedRowKey\", selectedRowKey);\n\n      this._setOptionWithoutOptionChange(\"selectedRowKey\", selectedRowKey);\n\n      this._raiseSelectionChangedAction(selectedRowKey);\n    }\n  }, {\n    key: \"_onTreeListRowCollapsed\",\n    value: function _onTreeListRowCollapsed(e) {\n      this._ganttView.changeTaskExpanded(e.key, false);\n\n      this._adjustHeight();\n    }\n  }, {\n    key: \"_onTreeListRowExpanded\",\n    value: function _onTreeListRowExpanded(e) {\n      this._ganttView.changeTaskExpanded(e.key, true);\n\n      this._adjustHeight();\n    }\n  }, {\n    key: \"_adjustHeight\",\n    value: function _adjustHeight() {\n      if (!this._hasHeight) {\n        this._setGanttViewOption(\"height\", 0);\n\n        this._setGanttViewOption(\"height\", this._treeList._$element.get(0).offsetHeight);\n      }\n    }\n  }, {\n    key: \"_getTreeListHeight\",\n    value: function _getTreeListHeight() {\n      if (this._$treeList.height()) {\n        return this._$treeList.height();\n      }\n\n      this._hasHeight = isDefined(this.option(\"height\")) && \"\" !== this.option(\"height\");\n      return this._hasHeight ? \"100%\" : \"\";\n    }\n  }, {\n    key: \"_getTreeListColumns\",\n    value: function _getTreeListColumns() {\n      var columns = this.option(\"columns\");\n\n      if (columns) {\n        for (var i = 0; i < columns.length; i++) {\n          var column = columns[i];\n          var isKeyColumn = column.dataField === this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")) || column.dataField === this.option(\"\".concat(GANTT_TASKS, \".parentIdExpr\"));\n\n          if (isKeyColumn && !column.dataType) {\n            column.dataType = \"object\";\n          }\n        }\n      }\n\n      return columns;\n    }\n  }, {\n    key: \"_onGanttViewSelectionChanged\",\n    value: function _onGanttViewSelectionChanged(e) {\n      this._setTreeListOption(\"selectedRowKeys\", this._getArrayFromOneElement(e.id));\n    }\n  }, {\n    key: \"_onGanttViewScroll\",\n    value: function _onGanttViewScroll(e) {\n      var treeListScrollable = this._treeList.getScrollable();\n\n      if (treeListScrollable) {\n        var diff = e.scrollTop - treeListScrollable.scrollTop();\n\n        if (0 !== diff) {\n          treeListScrollable.scrollBy({\n            left: 0,\n            top: diff\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_onTreeListScroll\",\n    value: function _onTreeListScroll(treeListScrollView) {\n      var ganttViewTaskAreaContainer = this._ganttView.getTaskAreaContainer();\n\n      if (ganttViewTaskAreaContainer.scrollTop !== treeListScrollView.component.scrollTop()) {\n        ganttViewTaskAreaContainer.scrollTop = treeListScrollView.component.scrollTop();\n      }\n    }\n  }, {\n    key: \"_expandAll\",\n    value: function _expandAll() {\n      var _this3 = this;\n\n      this._treeList.forEachNode(function (node) {\n        if (node.children && node.children.length) {\n          _this3._treeList.expandRow(node.key);\n\n          _this3._ganttView.changeTaskExpanded(node.key, true);\n        }\n      });\n    }\n  }, {\n    key: \"_collapseAll\",\n    value: function _collapseAll() {\n      var _this4 = this;\n\n      this._treeList.forEachNode(function (node) {\n        if (node.children && node.children.length) {\n          _this4._treeList.collapseRow(node.key);\n\n          _this4._ganttView.changeTaskExpanded(node.key, false);\n        }\n      });\n    }\n  }, {\n    key: \"_initScrollSync\",\n    value: function _initScrollSync(treeList) {\n      var _this5 = this;\n\n      var treeListScrollable = treeList.getScrollable();\n\n      if (treeListScrollable) {\n        treeListScrollable.off(\"scroll\");\n        treeListScrollable.on(\"scroll\", function (e) {\n          _this5._onTreeListScroll(e);\n        });\n      }\n    }\n  }, {\n    key: \"_getTreeListRowHeight\",\n    value: function _getTreeListRowHeight() {\n      var $row = this._treeList._$element.find(\".dx-data-row\");\n\n      var height = $row.length ? getBoundingRect($row.last().get(0)).height : GANTT_DEFAULT_ROW_HEIGHT;\n\n      if (!height) {\n        height = GANTT_DEFAULT_ROW_HEIGHT;\n      }\n\n      this._correctRowsViewRowHeight(height);\n\n      return height;\n    }\n  }, {\n    key: \"_correctRowsViewRowHeight\",\n    value: function _correctRowsViewRowHeight(height) {\n      var view = this._treeList._views && this._treeList._views.rowsView;\n\n      if ((null === view || void 0 === view ? void 0 : view._rowHeight) !== height) {\n        view._rowHeight = height;\n      }\n    }\n  }, {\n    key: \"_getTreeListHeaderHeight\",\n    value: function _getTreeListHeaderHeight() {\n      return getBoundingRect(this._treeList._$element.find(\".dx-treelist-headers\").get(0)).height;\n    }\n  }, {\n    key: \"_setInnerElementsWidth\",\n    value: function _setInnerElementsWidth(widths) {\n      if (!hasWindow()) {\n        return;\n      }\n\n      if (!widths) {\n        widths = this._getPanelsWidthByOption();\n      }\n\n      this._setTreeListDimension(\"width\", widths.leftPanelWidth);\n\n      this._setGanttViewDimension(\"width\", widths.rightPanelWidth);\n    }\n  }, {\n    key: \"_setTreeListDimension\",\n    value: function _setTreeListDimension(dimension, value) {\n      this._$treeListWrapper[dimension](value);\n\n      this._setTreeListOption(dimension, this._$treeListWrapper[dimension]());\n    }\n  }, {\n    key: \"_setGanttViewDimension\",\n    value: function _setGanttViewDimension(dimension, value) {\n      this._$ganttView[dimension](value);\n\n      this._setGanttViewOption(dimension, this._$ganttView[dimension]());\n    }\n  }, {\n    key: \"_updateGanttWidth\",\n    value: function _updateGanttWidth() {\n      this._splitter._dimensionChanged();\n    }\n  }, {\n    key: \"_setGanttHeight\",\n    value: function _setGanttHeight(height) {\n      var _this$_ganttView2;\n\n      var toolbarHeightOffset = this._$toolbarWrapper.get(0).offsetHeight;\n\n      var mainWrapperHeight = height - toolbarHeightOffset;\n\n      this._setTreeListDimension(\"height\", mainWrapperHeight);\n\n      this._setGanttViewDimension(\"height\", mainWrapperHeight);\n\n      null === (_this$_ganttView2 = this._ganttView) || void 0 === _this$_ganttView2 ? void 0 : _this$_ganttView2._ganttViewCore.resetAndUpdate();\n    }\n  }, {\n    key: \"_getPanelsWidthByOption\",\n    value: function _getPanelsWidthByOption() {\n      return {\n        leftPanelWidth: this.option(\"taskListWidth\"),\n        rightPanelWidth: this._$element.width() - this.option(\"taskListWidth\")\n      };\n    }\n  }, {\n    key: \"_setGanttViewOption\",\n    value: function _setGanttViewOption(optionName, value) {\n      this._ganttView && this._ganttView.option(optionName, value);\n    }\n  }, {\n    key: \"_getGanttViewOption\",\n    value: function _getGanttViewOption(optionName, value) {\n      var _this$_ganttView3;\n\n      return null === (_this$_ganttView3 = this._ganttView) || void 0 === _this$_ganttView3 ? void 0 : _this$_ganttView3.option(optionName);\n    }\n  }, {\n    key: \"_setTreeListOption\",\n    value: function _setTreeListOption(optionName, value) {\n      this._treeList && this._treeList.option(optionName, value);\n    }\n  }, {\n    key: \"_refreshDataSource\",\n    value: function _refreshDataSource(name) {\n      var _this6 = this;\n\n      var dataOption = this[\"_\".concat(name, \"Option\")];\n\n      if (dataOption) {\n        dataOption._disposeDataSource();\n\n        delete this[\"_\".concat(name, \"Option\")];\n        delete this[\"_\".concat(name)];\n      }\n\n      if (this.option(\"\".concat(name, \".dataSource\"))) {\n        dataOption = new DataOption(name, this._getLoadPanel(), function (name, data) {\n          _this6._dataSourceChanged(name, data);\n        });\n        dataOption.option(\"dataSource\", this._getSpecificDataSourceOption(name));\n\n        dataOption._refreshDataSource();\n\n        this[\"_\".concat(name, \"Option\")] = dataOption;\n      }\n    }\n  }, {\n    key: \"_getSpecificDataSourceOption\",\n    value: function _getSpecificDataSourceOption(name) {\n      var dataSource = this.option(\"\".concat(name, \".dataSource\"));\n\n      if (Array.isArray(dataSource)) {\n        return {\n          store: {\n            type: \"array\",\n            data: dataSource,\n            key: this.option(\"\".concat(name, \".keyExpr\"))\n          }\n        };\n      }\n\n      return dataSource;\n    }\n  }, {\n    key: \"_compileGettersByOption\",\n    value: function _compileGettersByOption(optionName) {\n      var getters = {};\n      var optionValue = this.option(optionName);\n\n      for (var field in optionValue) {\n        var exprMatches = field.match(/(\\w*)Expr/);\n\n        if (exprMatches) {\n          getters[exprMatches[1]] = compileGetter(optionValue[exprMatches[0]]);\n        }\n      }\n\n      return getters;\n    }\n  }, {\n    key: \"_compileSettersByOption\",\n    value: function _compileSettersByOption(optionName) {\n      var setters = {};\n      var optionValue = this.option(optionName);\n\n      for (var field in optionValue) {\n        var exprMatches = field.match(/(\\w*)Expr/);\n\n        if (exprMatches) {\n          setters[exprMatches[1]] = compileSetter(optionValue[exprMatches[0]]);\n        }\n      }\n\n      return setters;\n    }\n  }, {\n    key: \"_getStoreObject\",\n    value: function _getStoreObject(optionName, modelObject) {\n      var setters = this._compileSettersByOption(optionName);\n\n      return Object.keys(setters).reduce(function (previous, key) {\n        if (\"key\" !== key) {\n          setters[key](previous, modelObject[key]);\n        }\n\n        return previous;\n      }, {});\n    }\n  }, {\n    key: \"_prepareSetterMapHandler\",\n    value: function _prepareSetterMapHandler(setters) {\n      return function (data) {\n        return Object.keys(setters).reduce(function (previous, key) {\n          var resultKey = \"key\" === key ? \"id\" : key;\n          setters[key](previous, data[resultKey]);\n          return previous;\n        }, {});\n      };\n    }\n  }, {\n    key: \"_prepareMapHandler\",\n    value: function _prepareMapHandler(getters) {\n      return function (data) {\n        return Object.keys(getters).reduce(function (previous, key) {\n          var resultKey = \"key\" === key ? \"id\" : key;\n          previous[resultKey] = getters[key](data);\n          return previous;\n        }, {});\n      };\n    }\n  }, {\n    key: \"_dataSourceChanged\",\n    value: function _dataSourceChanged(dataSourceName, data) {\n      var _this7 = this;\n\n      var getters = this._compileGettersByOption(dataSourceName);\n\n      var mappedData = data.map(this._prepareMapHandler(getters));\n      this[\"_\".concat(dataSourceName)] = mappedData;\n\n      this._setGanttViewOption(dataSourceName, mappedData);\n\n      if (dataSourceName === GANTT_TASKS) {\n        this._tasksRaw = data;\n        var expandedRowKeys = data.map(function (t) {\n          return t[_this7.option(\"tasks.parentIdExpr\")];\n        }).filter(function (value, index, self) {\n          return value && self.indexOf(value) === index;\n        });\n\n        this._setTreeListOption(\"expandedRowKeys\", expandedRowKeys);\n\n        this._setTreeListOption(\"dataSource\", data);\n      }\n    }\n  }, {\n    key: \"_createModelChangesListener\",\n    value: function _createModelChangesListener() {\n      var _this8 = this;\n\n      return {\n        NotifyTaskCreated: function NotifyTaskCreated(task, callback, errorCallback) {\n          _this8._onRecordInserted(GANTT_TASKS, task, callback);\n        },\n        NotifyTaskRemoved: function NotifyTaskRemoved(taskId, errorCallback, task) {\n          _this8._onRecordRemoved(GANTT_TASKS, taskId, task);\n        },\n        NotifyTaskTitleChanged: function NotifyTaskTitleChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"title\", newValue);\n        },\n        NotifyTaskDescriptionChanged: function NotifyTaskDescriptionChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"description\", newValue);\n        },\n        NotifyTaskStartChanged: function NotifyTaskStartChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"start\", newValue);\n        },\n        NotifyTaskEndChanged: function NotifyTaskEndChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"end\", newValue);\n        },\n        NotifyTaskProgressChanged: function NotifyTaskProgressChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"progress\", newValue);\n        },\n        NotifyTaskColorChanged: function NotifyTaskColorChanged(taskId, newValue, errorCallback) {\n          _this8._onRecordUpdated(GANTT_TASKS, taskId, \"color\", newValue);\n        },\n        NotifyParentTaskUpdated: function NotifyParentTaskUpdated(task, errorCallback) {\n          _this8._onParentTaskUpdated(task);\n        },\n        NotifyDependencyInserted: function NotifyDependencyInserted(dependency, callback, errorCallback) {\n          _this8._onRecordInserted(GANTT_DEPENDENCIES, dependency, callback);\n        },\n        NotifyDependencyRemoved: function NotifyDependencyRemoved(dependencyId, errorCallback, dependency) {\n          _this8._onRecordRemoved(GANTT_DEPENDENCIES, dependencyId, dependency);\n        },\n        NotifyResourceCreated: function NotifyResourceCreated(resource, callback, errorCallback) {\n          _this8._onRecordInserted(GANTT_RESOURCES, resource, callback);\n        },\n        NotifyResourceRemoved: function NotifyResourceRemoved(resourceId, errorCallback, resource) {\n          _this8._onRecordRemoved(GANTT_RESOURCES, resourceId, resource);\n        },\n        NotifyResourceAssigned: function NotifyResourceAssigned(assignment, callback, errorCallback) {\n          _this8._onRecordInserted(GANTT_RESOURCE_ASSIGNMENTS, assignment, callback);\n        },\n        NotifyResourceUnassigned: function NotifyResourceUnassigned(assignmentId, errorCallback, assignment) {\n          _this8._onRecordRemoved(GANTT_RESOURCE_ASSIGNMENTS, assignmentId, assignment);\n        },\n        NotifyParentDataRecalculated: function NotifyParentDataRecalculated(data) {\n          _this8._onParentTasksRecalculated(data);\n        },\n        NotifyTaskCreating: function NotifyTaskCreating(args) {\n          _this8._raiseInsertingAction(GANTT_TASKS, args);\n        },\n        NotifyTaskRemoving: function NotifyTaskRemoving(args) {\n          _this8._raiseDeletingAction(GANTT_TASKS, args);\n        },\n        NotifyTaskUpdating: function NotifyTaskUpdating(args) {\n          _this8._raiseUpdatingAction(GANTT_TASKS, args);\n        },\n        NotifyTaskMoving: function NotifyTaskMoving(args) {\n          _this8._raiseUpdatingAction(GANTT_TASKS, args, _this8._getTaskMovingAction());\n        },\n        NotifyTaskEditDialogShowing: function NotifyTaskEditDialogShowing(args) {\n          _this8._raiseTaskEditDialogShowingAction(args);\n        },\n        NotifyResourceManagerDialogShowing: function NotifyResourceManagerDialogShowing(args) {\n          _this8._raiseResourceManagerDialogShowingAction(args);\n        },\n        NotifyDependencyInserting: function NotifyDependencyInserting(args) {\n          _this8._raiseInsertingAction(GANTT_DEPENDENCIES, args);\n        },\n        NotifyDependencyRemoving: function NotifyDependencyRemoving(args) {\n          _this8._raiseDeletingAction(GANTT_DEPENDENCIES, args);\n        },\n        NotifyResourceCreating: function NotifyResourceCreating(args) {\n          _this8._raiseInsertingAction(GANTT_RESOURCES, args);\n        },\n        NotifyResourceRemoving: function NotifyResourceRemoving(args) {\n          _this8._raiseDeletingAction(GANTT_RESOURCES, args);\n        },\n        NotifyResourceAssigning: function NotifyResourceAssigning(args) {\n          _this8._raiseInsertingAction(GANTT_RESOURCE_ASSIGNMENTS, args);\n        },\n        NotifyResourceUnassigning: function NotifyResourceUnassigning(args) {\n          _this8._raiseDeletingAction(GANTT_RESOURCE_ASSIGNMENTS, args);\n        }\n      };\n    }\n  }, {\n    key: \"_onRecordInserted\",\n    value: function _onRecordInserted(optionName, record, callback) {\n      var _this9 = this;\n\n      var dataOption = this[\"_\".concat(optionName, \"Option\")];\n\n      if (dataOption) {\n        var data = this._getStoreObject(optionName, record);\n\n        if (optionName === GANTT_TASKS) {\n          this._addCustomFieldsDataFromCache(GANTT_NEW_TASK_CACHE_KEY, data);\n        }\n\n        dataOption.insert(data, function (response) {\n          var keyGetter = compileGetter(_this9.option(\"\".concat(optionName, \".keyExpr\")));\n          var insertedId = keyGetter(response);\n          callback(insertedId);\n\n          if (optionName === GANTT_TASKS) {\n            _this9._updateTreeListDataSource();\n\n            var parentId = record.parentId;\n\n            if (void 0 !== parentId) {\n              var expandedRowKeys = _this9._treeList.option(\"expandedRowKeys\");\n\n              if (-1 === expandedRowKeys.indexOf(parentId)) {\n                expandedRowKeys.push(parentId);\n\n                _this9._treeList.option(\"expandedRowKeys\", expandedRowKeys);\n              }\n            }\n\n            _this9._selectTreeListRows(_this9._getArrayFromOneElement(insertedId));\n\n            _this9._setTreeListOption(\"focusedRowKey\", insertedId);\n\n            setTimeout(function () {\n              _this9._updateGanttRowHeights();\n            }, 300);\n          }\n\n          _this9._raiseInsertedAction(optionName, data, insertedId);\n        });\n      }\n    }\n  }, {\n    key: \"_onRecordRemoved\",\n    value: function _onRecordRemoved(optionName, key, data) {\n      var _this10 = this;\n\n      var dataOption = this[\"_\".concat(optionName, \"Option\")];\n\n      if (dataOption) {\n        dataOption.remove(key, function () {\n          if (optionName === GANTT_TASKS) {\n            _this10._updateTreeListDataSource();\n          }\n\n          _this10._raiseDeletedAction(optionName, key, _this10._convertCoreToMappedData(optionName, data));\n        });\n      }\n    }\n  }, {\n    key: \"_onRecordUpdated\",\n    value: function _onRecordUpdated(optionName, key, fieldName, value) {\n      var _this11 = this;\n\n      var dataOption = this[\"_\".concat(optionName, \"Option\")];\n      var isTaskUpdated = optionName === GANTT_TASKS;\n\n      if (dataOption) {\n        var setter = compileSetter(this.option(\"\".concat(optionName, \".\").concat(fieldName, \"Expr\")));\n        var data = {};\n        setter(data, value);\n\n        var hasCustomFieldsData = isTaskUpdated && this._cache.hasData(key);\n\n        if (hasCustomFieldsData) {\n          this._addCustomFieldsDataFromCache(key, data);\n        }\n\n        dataOption.update(key, data, function () {\n          if (isTaskUpdated) {\n            if (hasCustomFieldsData) {\n              dataOption._refreshDataSource();\n            }\n\n            _this11._updateTreeListDataSource();\n          }\n\n          _this11._raiseUpdatedAction(optionName, data, key);\n        });\n      }\n    }\n  }, {\n    key: \"_onParentTaskUpdated\",\n    value: function _onParentTaskUpdated(data) {\n      var mappedData = this.getTaskDataByCoreData(data);\n\n      this._raiseUpdatedAction(GANTT_TASKS, mappedData, data.id);\n    }\n  }, {\n    key: \"_onParentTasksRecalculated\",\n    value: function _onParentTasksRecalculated(data) {\n      var setters = this._compileSettersByOption(GANTT_TASKS);\n\n      var treeDataSource = this._appendCustomFields(data.map(this._prepareSetterMapHandler(setters)));\n\n      this._setTreeListOption(\"dataSource\", treeDataSource);\n    }\n  }, {\n    key: \"_appendCustomFields\",\n    value: function _appendCustomFields(data) {\n      var modelData = this._tasksOption && this._tasksOption._getItems();\n\n      var keyGetter = this._getTaskKeyGetter();\n\n      var invertedData = this.getInvertedData(modelData, keyGetter);\n      return data.reduce(function (previous, item) {\n        var key = keyGetter(item);\n        var modelItem = invertedData[key];\n\n        if (!modelItem) {\n          previous.push(item);\n        } else {\n          var updatedItem = {};\n\n          for (var field in modelItem) {\n            updatedItem[field] = Object.prototype.hasOwnProperty.call(item, field) ? item[field] : modelItem[field];\n          }\n\n          previous.push(updatedItem);\n        }\n\n        return previous;\n      }, []);\n    }\n  }, {\n    key: \"_getTaskKeyGetter\",\n    value: function _getTaskKeyGetter() {\n      return compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\n    }\n  }, {\n    key: \"getInvertedData\",\n    value: function getInvertedData(data, keyGetter) {\n      var inverted = {};\n\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          var dataItem = data[i];\n          var key = keyGetter(dataItem);\n          inverted[key] = dataItem;\n        }\n      }\n\n      return inverted;\n    }\n  }, {\n    key: \"_updateTreeListDataSource\",\n    value: function _updateTreeListDataSource() {\n      if (!this._skipUpdateTreeListDataSource()) {\n        var dataSource = this.option(\"tasks.dataSource\");\n        var storeArray = this._tasksOption._getStore()._array || dataSource.items && dataSource.items();\n\n        this._setTreeListOption(\"dataSource\", storeArray ? storeArray : dataSource);\n      }\n    }\n  }, {\n    key: \"_skipUpdateTreeListDataSource\",\n    value: function _skipUpdateTreeListDataSource() {\n      return this.option(\"validation.autoUpdateParentTasks\");\n    }\n  }, {\n    key: \"_selectTreeListRows\",\n    value: function _selectTreeListRows(keys) {\n      this._setTreeListOption(\"selectedRowKeys\", keys);\n    }\n  }, {\n    key: \"_addCustomFieldsDataFromCache\",\n    value: function _addCustomFieldsDataFromCache(key, data) {\n      this._cache.pullDataFromCache(key, data);\n    }\n  }, {\n    key: \"_saveCustomFieldsDataToCache\",\n    value: function _saveCustomFieldsDataToCache(key, data) {\n      var _this12 = this;\n\n      var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n\n      var customFieldsData = this._getCustomFieldsData(data);\n\n      if (Object.keys(customFieldsData).length > 0) {\n        this._cache.saveData(key, customFieldsData, forceUpdateOnKeyExpire ? function (key, data) {\n          var dataOption = _this12[\"_\".concat(GANTT_TASKS, \"Option\")];\n\n          if (dataOption && data) {\n            dataOption.update(key, data, function (data, key) {\n              var updatedCustomFields = {};\n\n              _this12._addCustomFieldsData(key, updatedCustomFields);\n\n              _this12._updateTreeListDataSource();\n\n              dataOption._refreshDataSource();\n\n              var selectedRowKey = _this12.option(\"selectedRowKey\");\n\n              _this12._ganttView._selectTask(selectedRowKey);\n\n              _this12._raiseUpdatedAction(GANTT_TASKS, updatedCustomFields, key);\n            });\n          }\n        } : null);\n      }\n    }\n  }, {\n    key: \"_getLoadPanel\",\n    value: function _getLoadPanel() {\n      if (!this._loadPanel) {\n        this._loadPanel = this._createComponent(this._$loadPanel, LoadPanel, {\n          position: {\n            of: this.$element()\n          }\n        });\n      }\n\n      return this._loadPanel;\n    }\n  }, {\n    key: \"_createSelectionChangedAction\",\n    value: function _createSelectionChangedAction() {\n      this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n    }\n  }, {\n    key: \"_createTaskClickAction\",\n    value: function _createTaskClickAction() {\n      this._taskClickAction = this._createActionByOption(\"onTaskClick\");\n    }\n  }, {\n    key: \"_createTaskDblClickAction\",\n    value: function _createTaskDblClickAction() {\n      this._taskDblClickAction = this._createActionByOption(\"onTaskDblClick\");\n    }\n  }, {\n    key: \"_createCustomCommandAction\",\n    value: function _createCustomCommandAction() {\n      this._customCommandAction = this._createActionByOption(\"onCustomCommand\");\n    }\n  }, {\n    key: \"_createContextMenuPreparingAction\",\n    value: function _createContextMenuPreparingAction() {\n      this._contextMenuPreparingAction = this._createActionByOption(\"onContextMenuPreparing\");\n    }\n  }, {\n    key: \"_raiseSelectionChangedAction\",\n    value: function _raiseSelectionChangedAction(selectedRowKey) {\n      if (!this._selectionChangedAction) {\n        this._createSelectionChangedAction();\n      }\n\n      this._selectionChangedAction({\n        selectedRowKey: selectedRowKey\n      });\n    }\n  }, {\n    key: \"_raiseCustomCommand\",\n    value: function _raiseCustomCommand(commandName) {\n      if (!this._customCommandAction) {\n        this._createCustomCommandAction();\n      }\n\n      this._customCommandAction({\n        name: commandName\n      });\n    }\n  }, {\n    key: \"_raiseContextMenuPreparing\",\n    value: function _raiseContextMenuPreparing(options) {\n      if (!this._contextMenuPreparingAction) {\n        this._createContextMenuPreparingAction();\n      }\n\n      this._contextMenuPreparingAction(options);\n    }\n  }, {\n    key: \"_raiseInsertingAction\",\n    value: function _raiseInsertingAction(optionName, coreArgs) {\n      var action = this._getInsertingAction(optionName);\n\n      if (action) {\n        var args = {\n          cancel: false,\n          values: this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.values = this._convertMappedToCoreData(optionName, args.values);\n\n        if (optionName === GANTT_TASKS) {\n          this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, args.values);\n        }\n      }\n    }\n  }, {\n    key: \"_raiseInsertedAction\",\n    value: function _raiseInsertedAction(optionName, data, key) {\n      var action = this._getInsertedAction(optionName);\n\n      if (action) {\n        var args = {\n          values: data,\n          key: key\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"_raiseDeletingAction\",\n    value: function _raiseDeletingAction(optionName, coreArgs) {\n      var action = this._getDeletingAction(optionName);\n\n      if (action) {\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          values: this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n      }\n    }\n  }, {\n    key: \"_raiseDeletedAction\",\n    value: function _raiseDeletedAction(optionName, key, data) {\n      var action = this._getDeletedAction(optionName);\n\n      if (action) {\n        var args = {\n          key: key,\n          values: data\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"_raiseUpdatingAction\",\n    value: function _raiseUpdatingAction(optionName, coreArgs, action) {\n      action = action || this._getUpdatingAction(optionName);\n\n      if (action) {\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          newValues: this._convertCoreToMappedData(optionName, coreArgs.newValues),\n          values: this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.newValues = this._convertMappedToCoreData(optionName, args.newValues);\n\n        if (optionName === GANTT_TASKS) {\n          this._saveCustomFieldsDataToCache(args.key, args.newValues);\n        }\n      }\n    }\n  }, {\n    key: \"_raiseUpdatedAction\",\n    value: function _raiseUpdatedAction(optionName, data, key) {\n      var action = this._getUpdatedAction(optionName);\n\n      if (action) {\n        var args = {\n          values: data,\n          key: key\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"_raiseTaskEditDialogShowingAction\",\n    value: function _raiseTaskEditDialogShowingAction(coreArgs) {\n      var action = this._getTaskEditDialogShowingAction();\n\n      if (action) {\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          values: this._convertCoreToMappedData(GANTT_TASKS, coreArgs.values),\n          readOnlyFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.readOnlyFields),\n          hiddenFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.hiddenFields)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.values = this._convertMappedToCoreData(GANTT_TASKS, args.values);\n        coreArgs.readOnlyFields = this._convertMappedToCoreFields(GANTT_TASKS, args.readOnlyFields);\n        coreArgs.hiddenFields = this._convertMappedToCoreFields(GANTT_TASKS, args.hiddenFields);\n      }\n    }\n  }, {\n    key: \"_raiseResourceManagerDialogShowingAction\",\n    value: function _raiseResourceManagerDialogShowingAction(coreArgs) {\n      var _this13 = this;\n\n      var action = this._getResourceManagerDialogShowingAction();\n\n      if (action) {\n        var mappedResources = coreArgs.values.resources.items.map(function (r) {\n          return _this13._convertMappedToCoreData(GANTT_RESOURCES, r);\n        });\n        var args = {\n          cancel: false,\n          values: mappedResources\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n      }\n    }\n  }, {\n    key: \"_raiseTaskClickAction\",\n    value: function _raiseTaskClickAction(key, event) {\n      if (!this._taskClickAction) {\n        this._createTaskClickAction();\n      }\n\n      var args = {\n        key: key,\n        event: event,\n        data: this.getTaskData(key)\n      };\n\n      this._taskClickAction(args);\n    }\n  }, {\n    key: \"_raiseTaskDblClickAction\",\n    value: function _raiseTaskDblClickAction(key, event) {\n      if (!this._taskDblClickAction) {\n        this._createTaskDblClickAction();\n      }\n\n      var args = {\n        cancel: false,\n        data: this.getTaskData(key),\n        event: event,\n        key: key\n      };\n\n      this._taskDblClickAction(args);\n\n      return !args.cancel;\n    }\n  }, {\n    key: \"_getInsertingAction\",\n    value: function _getInsertingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskInsertingAction();\n\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyInsertingAction();\n\n        case GANTT_RESOURCES:\n          return this._getResourceInsertingAction();\n\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceAssigningAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getInsertedAction\",\n    value: function _getInsertedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskInsertedAction();\n\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyInsertedAction();\n\n        case GANTT_RESOURCES:\n          return this._getResourceInsertedAction();\n\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceAssignedAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getDeletingAction\",\n    value: function _getDeletingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskDeletingAction();\n\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyDeletingAction();\n\n        case GANTT_RESOURCES:\n          return this._getResourceDeletingAction();\n\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceUnassigningAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getDeletedAction\",\n    value: function _getDeletedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskDeletedAction();\n\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyDeletedAction();\n\n        case GANTT_RESOURCES:\n          return this._getResourceDeletedAction();\n\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceUnassignedAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getUpdatingAction\",\n    value: function _getUpdatingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskUpdatingAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getUpdatedAction\",\n    value: function _getUpdatedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskUpdatedAction();\n      }\n\n      return function () {};\n    }\n  }, {\n    key: \"_getTaskInsertingAction\",\n    value: function _getTaskInsertingAction() {\n      if (!this._taskInsertingAction) {\n        this._createTaskInsertingAction();\n      }\n\n      return this._taskInsertingAction;\n    }\n  }, {\n    key: \"_getTaskInsertedAction\",\n    value: function _getTaskInsertedAction() {\n      if (!this._taskInsertedAction) {\n        this._createTaskInsertedAction();\n      }\n\n      return this._taskInsertedAction;\n    }\n  }, {\n    key: \"_getTaskDeletingAction\",\n    value: function _getTaskDeletingAction() {\n      if (!this._taskDeletingAction) {\n        this._createTaskDeletingAction();\n      }\n\n      return this._taskDeletingAction;\n    }\n  }, {\n    key: \"_getTaskDeletedAction\",\n    value: function _getTaskDeletedAction() {\n      if (!this._taskDeletedAction) {\n        this._createTaskDeletedAction();\n      }\n\n      return this._taskDeletedAction;\n    }\n  }, {\n    key: \"_getTaskUpdatingAction\",\n    value: function _getTaskUpdatingAction() {\n      if (!this._taskUpdatingAction) {\n        this._createTaskUpdatingAction();\n      }\n\n      return this._taskUpdatingAction;\n    }\n  }, {\n    key: \"_getTaskUpdatedAction\",\n    value: function _getTaskUpdatedAction() {\n      if (!this._taskUpdatedAction) {\n        this._createTaskUpdatedAction();\n      }\n\n      return this._taskUpdatedAction;\n    }\n  }, {\n    key: \"_getTaskMovingAction\",\n    value: function _getTaskMovingAction() {\n      if (!this._taskMovingAction) {\n        this._createTaskMovingAction();\n      }\n\n      return this._taskMovingAction;\n    }\n  }, {\n    key: \"_getTaskEditDialogShowingAction\",\n    value: function _getTaskEditDialogShowingAction() {\n      if (!this._taskEditDialogShowingAction) {\n        this._createTaskEditDialogShowingAction();\n      }\n\n      return this._taskEditDialogShowingAction;\n    }\n  }, {\n    key: \"_getResourceManagerDialogShowingAction\",\n    value: function _getResourceManagerDialogShowingAction() {\n      if (!this._resourceManagerDialogShowingAction) {\n        this._createResourceManagerDialogShowingAction();\n      }\n\n      return this._resourceManagerDialogShowingAction;\n    }\n  }, {\n    key: \"_getDependencyInsertingAction\",\n    value: function _getDependencyInsertingAction() {\n      if (!this._dependencyInsertingAction) {\n        this._createDependencyInsertingAction();\n      }\n\n      return this._dependencyInsertingAction;\n    }\n  }, {\n    key: \"_getDependencyInsertedAction\",\n    value: function _getDependencyInsertedAction() {\n      if (!this._dependencyInsertedAction) {\n        this._createDependencyInsertedAction();\n      }\n\n      return this._dependencyInsertedAction;\n    }\n  }, {\n    key: \"_getDependencyDeletingAction\",\n    value: function _getDependencyDeletingAction() {\n      if (!this._dependencyDeletingAction) {\n        this._createDependencyDeletingAction();\n      }\n\n      return this._dependencyDeletingAction;\n    }\n  }, {\n    key: \"_getDependencyDeletedAction\",\n    value: function _getDependencyDeletedAction() {\n      if (!this._dependencyDeletedAction) {\n        this._createDependencyDeletedAction();\n      }\n\n      return this._dependencyDeletedAction;\n    }\n  }, {\n    key: \"_getResourceInsertingAction\",\n    value: function _getResourceInsertingAction() {\n      if (!this._resourceInsertingAction) {\n        this._createResourceInsertingAction();\n      }\n\n      return this._resourceInsertingAction;\n    }\n  }, {\n    key: \"_getResourceInsertedAction\",\n    value: function _getResourceInsertedAction() {\n      if (!this._resourceInsertedAction) {\n        this._createResourceInsertedAction();\n      }\n\n      return this._resourceInsertedAction;\n    }\n  }, {\n    key: \"_getResourceDeletingAction\",\n    value: function _getResourceDeletingAction() {\n      if (!this._resourceDeletingAction) {\n        this._createResourceDeletingAction();\n      }\n\n      return this._resourceDeletingAction;\n    }\n  }, {\n    key: \"_getResourceDeletedAction\",\n    value: function _getResourceDeletedAction() {\n      if (!this._resourceDeletedAction) {\n        this._createResourceDeletedAction();\n      }\n\n      return this._resourceDeletedAction;\n    }\n  }, {\n    key: \"_getResourceAssigningAction\",\n    value: function _getResourceAssigningAction() {\n      if (!this._resourceAssigningAction) {\n        this._createResourceAssigningAction();\n      }\n\n      return this._resourceAssigningAction;\n    }\n  }, {\n    key: \"_getResourceAssignedAction\",\n    value: function _getResourceAssignedAction() {\n      if (!this._resourceAssignedAction) {\n        this._createResourceAssignedAction();\n      }\n\n      return this._resourceAssignedAction;\n    }\n  }, {\n    key: \"_getResourceUnassigningAction\",\n    value: function _getResourceUnassigningAction() {\n      if (!this._resourceUnassigningAction) {\n        this._createResourceUnassigningAction();\n      }\n\n      return this._resourceUnassigningAction;\n    }\n  }, {\n    key: \"_getResourceUnassignedAction\",\n    value: function _getResourceUnassignedAction() {\n      if (!this._resourceUnassignedAction) {\n        this._createResourceUnassignedAction();\n      }\n\n      return this._resourceUnassignedAction;\n    }\n  }, {\n    key: \"_createResourceUnassigningAction\",\n    value: function _createResourceUnassigningAction() {\n      this._resourceUnassigningAction = this._createActionByOption(\"onResourceUnassigning\");\n    }\n  }, {\n    key: \"_createResourceUnassignedAction\",\n    value: function _createResourceUnassignedAction() {\n      this._resourceUnassignedAction = this._createActionByOption(\"onResourceUnassigned\");\n    }\n  }, {\n    key: \"_createTaskInsertingAction\",\n    value: function _createTaskInsertingAction() {\n      this._taskInsertingAction = this._createActionByOption(\"onTaskInserting\");\n    }\n  }, {\n    key: \"_createTaskInsertedAction\",\n    value: function _createTaskInsertedAction() {\n      this._taskInsertedAction = this._createActionByOption(\"onTaskInserted\");\n    }\n  }, {\n    key: \"_createTaskDeletingAction\",\n    value: function _createTaskDeletingAction() {\n      this._taskDeletingAction = this._createActionByOption(\"onTaskDeleting\");\n    }\n  }, {\n    key: \"_createTaskDeletedAction\",\n    value: function _createTaskDeletedAction() {\n      this._taskDeletedAction = this._createActionByOption(\"onTaskDeleted\");\n    }\n  }, {\n    key: \"_createTaskUpdatingAction\",\n    value: function _createTaskUpdatingAction() {\n      this._taskUpdatingAction = this._createActionByOption(\"onTaskUpdating\");\n    }\n  }, {\n    key: \"_createTaskUpdatedAction\",\n    value: function _createTaskUpdatedAction() {\n      this._taskUpdatedAction = this._createActionByOption(\"onTaskUpdated\");\n    }\n  }, {\n    key: \"_createTaskMovingAction\",\n    value: function _createTaskMovingAction() {\n      this._taskMovingAction = this._createActionByOption(\"onTaskMoving\");\n    }\n  }, {\n    key: \"_createTaskEditDialogShowingAction\",\n    value: function _createTaskEditDialogShowingAction() {\n      this._taskEditDialogShowingAction = this._createActionByOption(\"onTaskEditDialogShowing\");\n    }\n  }, {\n    key: \"_createResourceManagerDialogShowingAction\",\n    value: function _createResourceManagerDialogShowingAction() {\n      this._resourceManagerDialogShowingAction = this._createActionByOption(\"onResourceManagerDialogShowing\");\n    }\n  }, {\n    key: \"_createDependencyInsertingAction\",\n    value: function _createDependencyInsertingAction() {\n      this._dependencyInsertingAction = this._createActionByOption(\"onDependencyInserting\");\n    }\n  }, {\n    key: \"_createDependencyInsertedAction\",\n    value: function _createDependencyInsertedAction() {\n      this._dependencyInsertedAction = this._createActionByOption(\"onDependencyInserted\");\n    }\n  }, {\n    key: \"_createDependencyDeletingAction\",\n    value: function _createDependencyDeletingAction() {\n      this._dependencyDeletingAction = this._createActionByOption(\"onDependencyDeleting\");\n    }\n  }, {\n    key: \"_createDependencyDeletedAction\",\n    value: function _createDependencyDeletedAction() {\n      this._dependencyDeletedAction = this._createActionByOption(\"onDependencyDeleted\");\n    }\n  }, {\n    key: \"_createResourceInsertingAction\",\n    value: function _createResourceInsertingAction() {\n      this._resourceInsertingAction = this._createActionByOption(\"onResourceInserting\");\n    }\n  }, {\n    key: \"_createResourceInsertedAction\",\n    value: function _createResourceInsertedAction() {\n      this._resourceInsertedAction = this._createActionByOption(\"onResourceInserted\");\n    }\n  }, {\n    key: \"_createResourceDeletingAction\",\n    value: function _createResourceDeletingAction() {\n      this._resourceDeletingAction = this._createActionByOption(\"onResourceDeleting\");\n    }\n  }, {\n    key: \"_createResourceDeletedAction\",\n    value: function _createResourceDeletedAction() {\n      this._resourceDeletedAction = this._createActionByOption(\"onResourceDeleted\");\n    }\n  }, {\n    key: \"_createResourceAssigningAction\",\n    value: function _createResourceAssigningAction() {\n      this._resourceAssigningAction = this._createActionByOption(\"onResourceAssigning\");\n    }\n  }, {\n    key: \"_createResourceAssignedAction\",\n    value: function _createResourceAssignedAction() {\n      this._resourceAssignedAction = this._createActionByOption(\"onResourceAssigned\");\n    }\n  }, {\n    key: \"_convertCoreToMappedData\",\n    value: function _convertCoreToMappedData(optionName, coreData) {\n      var _this14 = this;\n\n      return Object.keys(coreData).reduce(function (previous, f) {\n        var mappedField = _this14._getMappedFieldName(optionName, f);\n\n        if (mappedField) {\n          var setter = compileSetter(mappedField);\n          setter(previous, coreData[f]);\n        }\n\n        return previous;\n      }, {});\n    }\n  }, {\n    key: \"_convertMappedToCoreData\",\n    value: function _convertMappedToCoreData(optionName, mappedData) {\n      var coreData = {};\n\n      if (mappedData) {\n        var mappedFields = this.option(optionName);\n\n        for (var field in mappedFields) {\n          var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n          var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\n\n          if (mappedFieldName && void 0 !== mappedData[mappedFieldName]) {\n            var getter = compileGetter(mappedFieldName);\n            var coreFieldName = exprMatches[1];\n            coreData[coreFieldName] = getter(mappedData);\n          }\n        }\n      }\n\n      return coreData;\n    }\n  }, {\n    key: \"_getMappedFieldName\",\n    value: function _getMappedFieldName(optionName, coreField) {\n      var coreFieldName = coreField;\n\n      if (\"id\" === coreField) {\n        coreFieldName = \"key\";\n      }\n\n      return this.option(\"\".concat(optionName, \".\").concat(coreFieldName, \"Expr\"));\n    }\n  }, {\n    key: \"_convertCoreToMappedFields\",\n    value: function _convertCoreToMappedFields(optionName, fields) {\n      var _this15 = this;\n\n      return fields.reduce(function (previous, f) {\n        var mappedField = _this15._getMappedFieldName(optionName, f);\n\n        if (mappedField) {\n          previous.push(mappedField);\n        }\n\n        return previous;\n      }, []);\n    }\n  }, {\n    key: \"_convertMappedToCoreFields\",\n    value: function _convertMappedToCoreFields(optionName, fields) {\n      var coreFields = [];\n      var mappedFields = this.option(optionName);\n\n      for (var field in mappedFields) {\n        var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n        var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\n\n        if (mappedFieldName && fields.indexOf(mappedFieldName) > -1) {\n          var coreFieldName = exprMatches[1];\n          coreFields.push(coreFieldName);\n        }\n      }\n\n      return coreFields;\n    }\n  }, {\n    key: \"_getTaskMappedFieldNames\",\n    value: function _getTaskMappedFieldNames() {\n      var mappedFields = [];\n      var mappedFieldsData = this.option(GANTT_TASKS);\n\n      for (var field in mappedFieldsData) {\n        var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n        var mappedFieldName = exprMatches && mappedFieldsData[exprMatches[0]];\n\n        if (mappedFieldName) {\n          mappedFields.push(mappedFieldName);\n        }\n      }\n\n      return mappedFields;\n    }\n  }, {\n    key: \"_getTaskCustomFields\",\n    value: function _getTaskCustomFields() {\n      var columns = this.option(\"columns\");\n      var columnFields = columns && columns.map(function (c) {\n        return c.dataField;\n      });\n\n      var mappedFields = this._getTaskMappedFieldNames();\n\n      return columnFields ? columnFields.filter(function (f) {\n        return mappedFields.indexOf(f) < 0;\n      }) : [];\n    }\n  }, {\n    key: \"_getCustomFieldsData\",\n    value: function _getCustomFieldsData(data) {\n      return this._getTaskCustomFields().reduce(function (previous, field) {\n        if (data && void 0 !== data[field]) {\n          previous[field] = data[field];\n        }\n\n        return previous;\n      }, {});\n    }\n  }, {\n    key: \"_addCustomFieldsData\",\n    value: function _addCustomFieldsData(key, data) {\n      if (data) {\n        var modelData = this._tasksOption && this._tasksOption._getItems();\n\n        var keyGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\n        var modelItem = modelData && modelData.filter(function (obj) {\n          return keyGetter(obj) === key;\n        })[0];\n\n        var customFields = this._getTaskCustomFields();\n\n        for (var i = 0; i < customFields.length; i++) {\n          var field = customFields[i];\n\n          if (Object.prototype.hasOwnProperty.call(modelItem, field)) {\n            data[field] = modelItem[field];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getSelectionMode\",\n    value: function _getSelectionMode(allowSelection) {\n      return allowSelection ? \"single\" : \"none\";\n    }\n  }, {\n    key: \"_getArrayFromOneElement\",\n    value: function _getArrayFromOneElement(element) {\n      return void 0 === element || null === element ? [] : [element];\n    }\n  }, {\n    key: \"_getToolbarItems\",\n    value: function _getToolbarItems() {\n      var items = this.option(\"toolbar.items\");\n      return items ? items : [];\n    }\n  }, {\n    key: \"_updateToolbarContent\",\n    value: function _updateToolbarContent() {\n      var items = this._getToolbarItems();\n\n      if (items.length) {\n        this._$toolbarWrapper.show();\n      } else {\n        this._$toolbarWrapper.hide();\n      }\n\n      this._toolbar && this._toolbar.createItems(items);\n\n      this._updateBarItemsState();\n    }\n  }, {\n    key: \"_updateContextMenu\",\n    value: function _updateContextMenu() {\n      var contextMenuOptions = this.option(\"contextMenu\");\n\n      if (contextMenuOptions.enabled && this._contextMenuBar) {\n        this._contextMenuBar.createItems(contextMenuOptions.items);\n\n        this._updateBarItemsState();\n      }\n    }\n  }, {\n    key: \"_updateBarItemsState\",\n    value: function _updateBarItemsState() {\n      this._ganttView && this._ganttView.updateBarItemsState();\n    }\n  }, {\n    key: \"_showDialog\",\n    value: function _showDialog(e) {\n      if (!this._dialogInstance) {\n        this._dialogInstance = new GanttDialog(this, this._$dialog);\n      }\n\n      this._dialogInstance.show(e.name, e.parameters, e.callback, e.afterClosing, this.option(\"editing\"));\n    }\n  }, {\n    key: \"_showPopupMenu\",\n    value: function _showPopupMenu(info) {\n      if (this.option(\"contextMenu.enabled\")) {\n        this._ganttView.getBarManager().updateContextMenu();\n\n        var args = {\n          cancel: false,\n          event: info.event,\n          targetType: info.type,\n          targetKey: info.key,\n          items: extend(true, [], this._contextMenuBar._items),\n          data: \"task\" === info.type ? this.getTaskData(info.key) : this.getDependencyData(info.key)\n        };\n\n        this._raiseContextMenuPreparing(args);\n\n        if (!args.cancel) {\n          this._contextMenuBar.show(info.position, args.items);\n        }\n      }\n    }\n  }, {\n    key: \"_executeCoreCommand\",\n    value: function _executeCoreCommand(id) {\n      this._ganttView.executeCoreCommand(id);\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      var _this$_ganttView4;\n\n      null === (_this$_ganttView4 = this._ganttView) || void 0 === _this$_ganttView4 ? void 0 : _this$_ganttView4._ganttViewCore.cleanMarkup();\n      delete this._ganttView;\n      delete this._dialogInstance;\n\n      _get(_getPrototypeOf(Gantt.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_getTaskTooltipContentTemplateFunc\",\n    value: function _getTaskTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n      var _this16 = this;\n\n      var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\n\n      var createTemplateFunction = template && function (container, item) {\n        template.render({\n          model: _this16.getTaskDataByCoreData(item),\n          container: getPublicElement($(container))\n        });\n        return true;\n      };\n\n      return createTemplateFunction;\n    }\n  }, {\n    key: \"_getTaskProgressTooltipContentTemplateFunc\",\n    value: function _getTaskProgressTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n      var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\n\n      var createTemplateFunction = template && function (container, item, callback, posX) {\n        template.render({\n          model: item,\n          container: getPublicElement($(container)),\n          onRendered: function onRendered() {\n            callback(posX);\n          }\n        });\n        return true;\n      };\n\n      return createTemplateFunction;\n    }\n  }, {\n    key: \"_getTaskTimeTooltipContentTemplateFunc\",\n    value: function _getTaskTimeTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n      var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\n\n      var createTemplateFunction = template && function (container, item, callback, posX) {\n        template.render({\n          model: item,\n          container: getPublicElement($(container)),\n          onRendered: function onRendered() {\n            callback(posX);\n          }\n        });\n        return true;\n      };\n\n      return createTemplateFunction;\n    }\n  }, {\n    key: \"_getTaskContentTemplateFunc\",\n    value: function _getTaskContentTemplateFunc(taskContentTemplateOption) {\n      var _this17 = this;\n\n      var template = taskContentTemplateOption && this._getTemplate(taskContentTemplateOption);\n\n      var createTemplateFunction = template && function (container, item, callback, index) {\n        item.taskData = _this17.getTaskDataByCoreData(item.taskData);\n        template.render({\n          model: item,\n          container: getPublicElement($(container)),\n          onRendered: function onRendered() {\n            callback(container, index);\n          }\n        });\n        return true;\n      };\n\n      return createTemplateFunction;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Gantt.prototype), \"_getDefaultOptions\", this).call(this), {\n        tasks: {\n          dataSource: null,\n          keyExpr: \"id\",\n          parentIdExpr: \"parentId\",\n          startExpr: \"start\",\n          endExpr: \"end\",\n          progressExpr: \"progress\",\n          titleExpr: \"title\",\n          colorExpr: \"color\"\n        },\n        dependencies: {\n          dataSource: null,\n          keyExpr: \"id\",\n          predecessorIdExpr: \"predecessorId\",\n          successorIdExpr: \"successorId\",\n          typeExpr: \"type\"\n        },\n        resources: {\n          dataSource: null,\n          keyExpr: \"id\",\n          textExpr: \"text\",\n          colorExpr: \"color\"\n        },\n        resourceAssignments: {\n          dataSource: null,\n          keyExpr: \"id\",\n          taskIdExpr: \"taskId\",\n          resourceIdExpr: \"resourceId\"\n        },\n        columns: void 0,\n        taskListWidth: 300,\n        showResources: true,\n        taskTitlePosition: \"inside\",\n        firstDayOfWeek: void 0,\n        selectedRowKey: void 0,\n        onSelectionChanged: null,\n        onTaskClick: null,\n        onTaskDblClick: null,\n        onTaskInserting: null,\n        onTaskInserted: null,\n        onTaskDeleting: null,\n        onTaskDeleted: null,\n        onTaskUpdating: null,\n        onTaskUpdated: null,\n        onTaskMoving: null,\n        onTaskEditDialogShowing: null,\n        onDependencyInserting: null,\n        onDependencyInserted: null,\n        onDependencyDeleting: null,\n        onDependencyDeleted: null,\n        onResourceInserting: null,\n        onResourceInserted: null,\n        onResourceDeleting: null,\n        onResourceDeleted: null,\n        onResourceAssigning: null,\n        onResourceAssigned: null,\n        onResourceUnassigning: null,\n        onResourceUnassigned: null,\n        onCustomCommand: null,\n        onContextMenuPreparing: null,\n        allowSelection: true,\n        showRowLines: true,\n        stripLines: void 0,\n        scaleType: \"auto\",\n        editing: {\n          enabled: false,\n          allowTaskAdding: true,\n          allowTaskDeleting: true,\n          allowTaskUpdating: true,\n          allowDependencyAdding: true,\n          allowDependencyDeleting: true,\n          allowResourceAdding: true,\n          allowResourceDeleting: true,\n          allowResourceUpdating: true,\n          allowTaskResourceUpdating: true\n        },\n        validation: {\n          validateDependencies: false,\n          autoUpdateParentTasks: false\n        },\n        toolbar: null,\n        contextMenu: {\n          enabled: true,\n          items: void 0\n        },\n        taskTooltipContentTemplate: null,\n        taskProgressTooltipContentTemplate: null,\n        taskTimeTooltipContentTemplate: null,\n        taskContentTemplate: null,\n        rootValue: 0\n      });\n    }\n  }, {\n    key: \"getTaskResources\",\n    value: function getTaskResources(key) {\n      var _this18 = this;\n\n      if (!isDefined(key)) {\n        return null;\n      }\n\n      var coreData = this._ganttView._ganttViewCore.getTaskResources(key);\n\n      return coreData.map(function (r) {\n        return _this18._convertCoreToMappedData(GANTT_RESOURCES, r);\n      });\n    }\n  }, {\n    key: \"getVisibleTaskKeys\",\n    value: function getVisibleTaskKeys() {\n      return this._ganttView._ganttViewCore.getVisibleTaskKeys();\n    }\n  }, {\n    key: \"getVisibleDependencyKeys\",\n    value: function getVisibleDependencyKeys() {\n      return this._ganttView._ganttViewCore.getVisibleDependencyKeys();\n    }\n  }, {\n    key: \"getVisibleResourceKeys\",\n    value: function getVisibleResourceKeys() {\n      return this._ganttView._ganttViewCore.getVisibleResourceKeys();\n    }\n  }, {\n    key: \"getVisibleResourceAssignmentKeys\",\n    value: function getVisibleResourceAssignmentKeys() {\n      return this._ganttView._ganttViewCore.getVisibleResourceAssignmentKeys();\n    }\n  }, {\n    key: \"getTaskData\",\n    value: function getTaskData(key) {\n      if (!isDefined(key)) {\n        return null;\n      }\n\n      var coreData = this._ganttView._ganttViewCore.getTaskData(key);\n\n      var mappedData = this.getTaskDataByCoreData(coreData);\n      return mappedData;\n    }\n  }, {\n    key: \"getTaskDataByCoreData\",\n    value: function getTaskDataByCoreData(coreData) {\n      var mappedData = coreData ? this._convertCoreToMappedData(GANTT_TASKS, coreData) : null;\n\n      this._addCustomFieldsData(coreData.id, mappedData);\n\n      return mappedData;\n    }\n  }, {\n    key: \"insertTask\",\n    value: function insertTask(data) {\n      this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, data);\n\n      this._ganttView._ganttViewCore.insertTask(this._convertMappedToCoreData(GANTT_TASKS, data));\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(key) {\n      this._ganttView._ganttViewCore.deleteTask(key);\n    }\n  }, {\n    key: \"updateTask\",\n    value: function updateTask(key, data) {\n      this._saveCustomFieldsDataToCache(key, data, true);\n\n      this._ganttView._ganttViewCore.updateTask(key, this._convertMappedToCoreData(GANTT_TASKS, data));\n    }\n  }, {\n    key: \"getDependencyData\",\n    value: function getDependencyData(key) {\n      if (!isDefined(key)) {\n        return null;\n      }\n\n      var coreData = this._ganttView._ganttViewCore.getDependencyData(key);\n\n      return coreData ? this._convertCoreToMappedData(GANTT_DEPENDENCIES, coreData) : null;\n    }\n  }, {\n    key: \"insertDependency\",\n    value: function insertDependency(data) {\n      this._ganttView._ganttViewCore.insertDependency(this._convertMappedToCoreData(GANTT_DEPENDENCIES, data));\n    }\n  }, {\n    key: \"deleteDependency\",\n    value: function deleteDependency(key) {\n      this._ganttView._ganttViewCore.deleteDependency(key);\n    }\n  }, {\n    key: \"getResourceData\",\n    value: function getResourceData(key) {\n      var coreData = this._ganttView._ganttViewCore.getResourceData(key);\n\n      return coreData ? this._convertCoreToMappedData(GANTT_RESOURCES, coreData) : null;\n    }\n  }, {\n    key: \"deleteResource\",\n    value: function deleteResource(key) {\n      this._ganttView._ganttViewCore.deleteResource(key);\n    }\n  }, {\n    key: \"insertResource\",\n    value: function insertResource(data, taskKeys) {\n      this._ganttView._ganttViewCore.insertResource(this._convertMappedToCoreData(GANTT_RESOURCES, data), taskKeys);\n    }\n  }, {\n    key: \"getResourceAssignmentData\",\n    value: function getResourceAssignmentData(key) {\n      var coreData = this._ganttView._ganttViewCore.getResourceAssignmentData(key);\n\n      return coreData ? this._convertCoreToMappedData(GANTT_RESOURCE_ASSIGNMENTS, coreData) : null;\n    }\n  }, {\n    key: \"assignResourceToTask\",\n    value: function assignResourceToTask(resourceKey, taskKey) {\n      this._ganttView._ganttViewCore.assignResourceToTask(resourceKey, taskKey);\n    }\n  }, {\n    key: \"unassignResourceFromTask\",\n    value: function unassignResourceFromTask(resourceKey, taskKey) {\n      this._ganttView._ganttViewCore.unassignResourceFromTask(resourceKey, taskKey);\n    }\n  }, {\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      this._onAdjustControl();\n    }\n  }, {\n    key: \"scrollToDate\",\n    value: function scrollToDate(date) {\n      this._ganttView._ganttViewCore.scrollToDate(date);\n    }\n  }, {\n    key: \"showResourceManagerDialog\",\n    value: function showResourceManagerDialog() {\n      this._ganttView._ganttViewCore.showResourcesDialog();\n    }\n  }, {\n    key: \"exportToPdf\",\n    value: function exportToPdf(options) {\n      var _this19 = this;\n\n      var _fullOptions$docCreat, _window$jspdf$jsPDF, _window$jspdf, _fullOptions$format;\n\n      this._exportHelper.reset();\n\n      var fullOptions = extend({}, options);\n\n      if (fullOptions.createDocumentMethod) {\n        fullOptions.docCreateMethod = fullOptions.createDocumentMethod;\n      }\n\n      null !== (_fullOptions$docCreat = fullOptions.docCreateMethod) && void 0 !== _fullOptions$docCreat ? _fullOptions$docCreat : fullOptions.docCreateMethod = null !== (_window$jspdf$jsPDF = null === (_window$jspdf = window.jspdf) || void 0 === _window$jspdf ? void 0 : _window$jspdf.jsPDF) && void 0 !== _window$jspdf$jsPDF ? _window$jspdf$jsPDF : window.jsPDF;\n      null !== (_fullOptions$format = fullOptions.format) && void 0 !== _fullOptions$format ? _fullOptions$format : fullOptions.format = \"a4\";\n      return new Promise(function (resolve) {\n        var _this$_ganttView5;\n\n        var doc = null === (_this$_ganttView5 = _this19._ganttView) || void 0 === _this$_ganttView5 ? void 0 : _this$_ganttView5._ganttViewCore.exportToPdf(fullOptions);\n        resolve(doc);\n      });\n    }\n  }, {\n    key: \"_getExportHelper\",\n    value: function _getExportHelper() {\n      var _this$_exportHelper;\n\n      null !== (_this$_exportHelper = this._exportHelper) && void 0 !== _this$_exportHelper ? _this$_exportHelper : this._exportHelper = new GanttExportHelper(this);\n      return this._exportHelper;\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"tasks\":\n          this._refreshDataSource(GANTT_TASKS);\n\n          break;\n\n        case \"dependencies\":\n          this._refreshDataSource(GANTT_DEPENDENCIES);\n\n          break;\n\n        case \"resources\":\n          this._refreshDataSource(GANTT_RESOURCES);\n\n          break;\n\n        case \"resourceAssignments\":\n          this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\n\n          break;\n\n        case \"columns\":\n          this._setTreeListOption(\"columns\", this._getTreeListColumns());\n\n          break;\n\n        case \"taskListWidth\":\n          this._setInnerElementsWidth();\n\n          break;\n\n        case \"showResources\":\n          this._setGanttViewOption(\"showResources\", args.value);\n\n          break;\n\n        case \"taskTitlePosition\":\n          this._setGanttViewOption(\"taskTitlePosition\", args.value);\n\n          break;\n\n        case \"firstDayOfWeek\":\n          this._setGanttViewOption(\"firstDayOfWeek\", args.value);\n\n          break;\n\n        case \"selectedRowKey\":\n          this._selectTreeListRows(this._getArrayFromOneElement(args.value));\n\n          break;\n\n        case \"onSelectionChanged\":\n          this._createSelectionChangedAction();\n\n          break;\n\n        case \"onTaskClick\":\n          this._createTaskClickAction();\n\n          break;\n\n        case \"onTaskDblClick\":\n          this._createTaskDblClickAction();\n\n          break;\n\n        case \"onTaskInserting\":\n          this._createTaskInsertingAction();\n\n          break;\n\n        case \"onTaskInserted\":\n          this._createTaskInsertedAction();\n\n          break;\n\n        case \"onTaskDeleting\":\n          this._createTaskDeletingAction();\n\n          break;\n\n        case \"onTaskDeleted\":\n          this._createTaskDeletedAction();\n\n          break;\n\n        case \"onTaskUpdating\":\n          this._createTaskUpdatingAction();\n\n          break;\n\n        case \"onTaskUpdated\":\n          this._createTaskUpdatedAction();\n\n          break;\n\n        case \"onTaskMoving\":\n          this._createTaskMovingAction();\n\n          break;\n\n        case \"onTaskEditDialogShowing\":\n          this._createTaskEditDialogShowingAction();\n\n          break;\n\n        case \"onResourceManagerDialogShowing\":\n          this._createResourceManagerDialogShowingAction();\n\n          break;\n\n        case \"onDependencyInserting\":\n          this._createDependencyInsertingAction();\n\n          break;\n\n        case \"onDependencyInserted\":\n          this._createDependencyInsertedAction();\n\n          break;\n\n        case \"onDependencyDeleting\":\n          this._createDependencyDeletingAction();\n\n          break;\n\n        case \"onDependencyDeleted\":\n          this._createDependencyDeletedAction();\n\n          break;\n\n        case \"onResourceInserting\":\n          this._createResourceInsertingAction();\n\n          break;\n\n        case \"onResourceInserted\":\n          this._createResourceInsertedAction();\n\n          break;\n\n        case \"onResourceDeleting\":\n          this._createResourceDeletingAction();\n\n          break;\n\n        case \"onResourceDeleted\":\n          this._createResourceDeletedAction();\n\n          break;\n\n        case \"onResourceAssigning\":\n          this._createResourceAssigningAction();\n\n          break;\n\n        case \"onResourceAssigned\":\n          this._createResourceAssignedAction();\n\n          break;\n\n        case \"onResourceUnassigning\":\n          this._createResourceUnassigningAction();\n\n          break;\n\n        case \"onResourceUnassigned\":\n          this._createResourceUnassignedAction();\n\n          break;\n\n        case \"onCustomCommand\":\n          this._createCustomCommandAction();\n\n          break;\n\n        case \"onContextMenuPreparing\":\n          this._createContextMenuPreparingAction();\n\n          break;\n\n        case \"allowSelection\":\n          this._setTreeListOption(\"selection.mode\", this._getSelectionMode(args.value));\n\n          this._setGanttViewOption(\"allowSelection\", args.value);\n\n          break;\n\n        case \"showRowLines\":\n          this._setTreeListOption(\"showRowLines\", args.value);\n\n          this._setGanttViewOption(\"showRowLines\", args.value);\n\n          break;\n\n        case \"stripLines\":\n          this._setGanttViewOption(\"stripLines\", args.value);\n\n          break;\n\n        case \"scaleType\":\n          this._setGanttViewOption(\"scaleType\", args.value);\n\n          break;\n\n        case \"editing\":\n          this._setGanttViewOption(\"editing\", this.option(args.name));\n\n          break;\n\n        case \"validation\":\n          this._setGanttViewOption(\"validation\", this.option(args.name));\n\n          break;\n\n        case \"toolbar\":\n          this._updateToolbarContent();\n\n          break;\n\n        case \"contextMenu\":\n          this._updateContextMenu();\n\n          break;\n\n        case \"taskTooltipContentTemplate\":\n          this._setGanttViewOption(\"taskTooltipContentTemplate\", this._getTaskTooltipContentTemplateFunc(args.value));\n\n          break;\n\n        case \"taskProgressTooltipContentTemplate\":\n          this._setGanttViewOption(\"taskProgressTooltipContentTemplate\", this._getTaskProgressTooltipContentTemplateFunc(args.value));\n\n          break;\n\n        case \"taskTimeTooltipContentTemplate\":\n          this._setGanttViewOption(\"taskTimeTooltipContentTemplate\", this._getTaskTimeTooltipContentTemplateFunc(args.value));\n\n          break;\n\n        case \"taskContentTemplate\":\n          this._setGanttViewOption(\"taskContentTemplate\", this._getTaskContentTemplateFunc(args.value));\n\n          break;\n\n        case \"rootValue\":\n          this._setTreeListOption(\"rootValue\", args.value);\n\n          break;\n\n        case \"width\":\n          _get(_getPrototypeOf(Gantt.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._updateGanttWidth();\n\n          break;\n\n        case \"height\":\n          _get(_getPrototypeOf(Gantt.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._setGanttHeight(this._$element.height());\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(Gantt.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return Gantt;\n}(Widget);\n\nregisterComponent(\"dxGantt\", Gantt);\nexport default Gantt;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/gantt/ui.gantt.js"],"names":["$","isDefined","Widget","registerComponent","compileGetter","compileSetter","GanttView","GanttToolbar","GanttContextMenuBar","dxTreeList","extend","getBoundingRect","hasWindow","getWindow","DataOption","SplitterControl","GanttDialog","LoadPanel","getPublicElement","GanttDataCache","GanttExportHelper","window","GANTT_CLASS","GANTT_VIEW_CLASS","GANTT_COLLAPSABLE_ROW","GANTT_TREE_LIST_WRAPPER","GANTT_TOOLBAR_WRAPPER","GANTT_MAIN_WRAPPER","GANTT_TASKS","GANTT_DEPENDENCIES","GANTT_RESOURCES","GANTT_RESOURCE_ASSIGNMENTS","GANTT_NEW_TASK_CACHE_KEY","GANTT_DEFAULT_ROW_HEIGHT","GANTT_MAPPED_FIELD_REGEX","Gantt","_cache","_isGanttRendered","$element","addClass","_$toolbarWrapper","appendTo","_$toolbar","_$mainWrapper","_$treeListWrapper","_$treeList","_$splitter","_$ganttView","_$dialog","_$loadPanel","_$contextMenu","_refreshDataSource","_isMainElementVisible","is","_renderBars","_renderTreeList","_renderSplitter","option","keyExpr","parentIdExpr","_treeList","_createComponent","dataSource","_tasksRaw","columns","_getTreeListColumns","columnResizingMode","height","_getTreeListHeight","width","selection","mode","_getSelectionMode","selectedRowKeys","_getArrayFromOneElement","sorting","scrolling","showScrollbar","allowColumnResizing","autoExpandAll","showRowLines","rootValue","onContentReady","e","_onTreeListContentReady","onSelectionChanged","_onTreeListSelectionChanged","onRowCollapsed","_onTreeListRowCollapsed","onRowExpanded","_onTreeListRowExpanded","onRowPrepared","_onTreeListRowPrepared","onContextMenuPreparing","_onTreeListContextMenuPreparing","onRowClick","_onTreeListRowClick","onRowDblClick","_onTreeListRowDblClick","_splitter","container","leftElement","rightElement","onApplyPanelSize","_onApplyPanelSize","bind","_bars","_toolbar","_updateToolbarContent","push","_contextMenuBar","_updateContextMenu","_ganttView","_$element","get","offsetHeight","rowHeight","_getTreeListRowHeight","headerHeight","_getTreeListHeaderHeight","tasks","_tasks","dependencies","_dependencies","resources","_resources","resourceAssignments","_resourceAssignments","allowSelection","selectedRowKey","showResources","taskTitlePosition","firstDayOfWeek","scaleType","editing","validation","stripLines","bars","mainElement","_onGanttViewSelectionChanged","onScroll","_onGanttViewScroll","onDialogShowing","_showDialog","onPopupMenuShowing","_showPopupMenu","onExpandAll","_expandAll","onCollapseAll","_collapseAll","modelChangesListener","_createModelChangesListener","exportHelper","_getExportHelper","taskTooltipContentTemplate","_getTaskTooltipContentTemplateFunc","taskProgressTooltipContentTemplate","_getTaskProgressTooltipContentTemplateFunc","taskTimeTooltipContentTemplate","_getTaskTimeTooltipContentTemplateFunc","taskContentTemplate","_getTaskContentTemplateFunc","onTaskClick","onTaskDblClick","onAdjustControl","_onAdjustControl","_fireContentReadyAction","elementHeight","_updateGanttWidth","_setGanttHeight","_setInnerElementsWidth","_updateGanttRowHeights","_getGanttViewOption","_this$_ganttView","_setGanttViewOption","_ganttViewCore","updateRowHeights","component","getDataSource","_initGanttView","_initScrollSync","rowType","node","children","length","rowElement","_e$row","_e$row2","row","_setTreeListOption","data","items","info","cancel","event","type","key","position","x","pageX","y","pageY","_raiseTaskClickAction","_raiseTaskDblClickAction","showTaskEditDialog","currentSelectedRowKeys","_setOptionWithoutOptionChange","_raiseSelectionChangedAction","changeTaskExpanded","_adjustHeight","_hasHeight","i","column","isKeyColumn","dataField","concat","dataType","id","treeListScrollable","getScrollable","diff","scrollTop","scrollBy","left","top","treeListScrollView","ganttViewTaskAreaContainer","getTaskAreaContainer","forEachNode","expandRow","collapseRow","treeList","off","on","_onTreeListScroll","$row","find","last","_correctRowsViewRowHeight","view","_views","rowsView","_rowHeight","widths","_getPanelsWidthByOption","_setTreeListDimension","leftPanelWidth","_setGanttViewDimension","rightPanelWidth","dimension","value","_dimensionChanged","_this$_ganttView2","toolbarHeightOffset","mainWrapperHeight","resetAndUpdate","optionName","_this$_ganttView3","name","dataOption","_disposeDataSource","_getLoadPanel","_dataSourceChanged","_getSpecificDataSourceOption","Array","isArray","store","getters","optionValue","field","exprMatches","match","setters","modelObject","_compileSettersByOption","Object","keys","reduce","previous","resultKey","dataSourceName","_compileGettersByOption","mappedData","map","_prepareMapHandler","expandedRowKeys","t","filter","index","self","indexOf","NotifyTaskCreated","task","callback","errorCallback","_onRecordInserted","NotifyTaskRemoved","taskId","_onRecordRemoved","NotifyTaskTitleChanged","newValue","_onRecordUpdated","NotifyTaskDescriptionChanged","NotifyTaskStartChanged","NotifyTaskEndChanged","NotifyTaskProgressChanged","NotifyTaskColorChanged","NotifyParentTaskUpdated","_onParentTaskUpdated","NotifyDependencyInserted","dependency","NotifyDependencyRemoved","dependencyId","NotifyResourceCreated","resource","NotifyResourceRemoved","resourceId","NotifyResourceAssigned","assignment","NotifyResourceUnassigned","assignmentId","NotifyParentDataRecalculated","_onParentTasksRecalculated","NotifyTaskCreating","args","_raiseInsertingAction","NotifyTaskRemoving","_raiseDeletingAction","NotifyTaskUpdating","_raiseUpdatingAction","NotifyTaskMoving","_getTaskMovingAction","NotifyTaskEditDialogShowing","_raiseTaskEditDialogShowingAction","NotifyResourceManagerDialogShowing","_raiseResourceManagerDialogShowingAction","NotifyDependencyInserting","NotifyDependencyRemoving","NotifyResourceCreating","NotifyResourceRemoving","NotifyResourceAssigning","NotifyResourceUnassigning","record","_getStoreObject","_addCustomFieldsDataFromCache","insert","response","keyGetter","insertedId","_updateTreeListDataSource","parentId","_selectTreeListRows","setTimeout","_raiseInsertedAction","remove","_raiseDeletedAction","_convertCoreToMappedData","fieldName","isTaskUpdated","setter","hasCustomFieldsData","hasData","update","_raiseUpdatedAction","getTaskDataByCoreData","treeDataSource","_appendCustomFields","_prepareSetterMapHandler","modelData","_tasksOption","_getItems","_getTaskKeyGetter","invertedData","getInvertedData","item","modelItem","updatedItem","prototype","hasOwnProperty","call","inverted","dataItem","_skipUpdateTreeListDataSource","storeArray","_getStore","_array","pullDataFromCache","forceUpdateOnKeyExpire","arguments","customFieldsData","_getCustomFieldsData","saveData","updatedCustomFields","_addCustomFieldsData","_selectTask","_loadPanel","of","_selectionChangedAction","_createActionByOption","_taskClickAction","_taskDblClickAction","_customCommandAction","_contextMenuPreparingAction","_createSelectionChangedAction","commandName","_createCustomCommandAction","options","_createContextMenuPreparingAction","coreArgs","action","_getInsertingAction","values","_convertMappedToCoreData","_saveCustomFieldsDataToCache","_getInsertedAction","_getDeletingAction","_getDeletedAction","_getUpdatingAction","newValues","_getUpdatedAction","_getTaskEditDialogShowingAction","readOnlyFields","_convertCoreToMappedFields","hiddenFields","_convertMappedToCoreFields","_getResourceManagerDialogShowingAction","mappedResources","r","_createTaskClickAction","getTaskData","_createTaskDblClickAction","_getTaskInsertingAction","_getDependencyInsertingAction","_getResourceInsertingAction","_getResourceAssigningAction","_getTaskInsertedAction","_getDependencyInsertedAction","_getResourceInsertedAction","_getResourceAssignedAction","_getTaskDeletingAction","_getDependencyDeletingAction","_getResourceDeletingAction","_getResourceUnassigningAction","_getTaskDeletedAction","_getDependencyDeletedAction","_getResourceDeletedAction","_getResourceUnassignedAction","_getTaskUpdatingAction","_getTaskUpdatedAction","_taskInsertingAction","_createTaskInsertingAction","_taskInsertedAction","_createTaskInsertedAction","_taskDeletingAction","_createTaskDeletingAction","_taskDeletedAction","_createTaskDeletedAction","_taskUpdatingAction","_createTaskUpdatingAction","_taskUpdatedAction","_createTaskUpdatedAction","_taskMovingAction","_createTaskMovingAction","_taskEditDialogShowingAction","_createTaskEditDialogShowingAction","_resourceManagerDialogShowingAction","_createResourceManagerDialogShowingAction","_dependencyInsertingAction","_createDependencyInsertingAction","_dependencyInsertedAction","_createDependencyInsertedAction","_dependencyDeletingAction","_createDependencyDeletingAction","_dependencyDeletedAction","_createDependencyDeletedAction","_resourceInsertingAction","_createResourceInsertingAction","_resourceInsertedAction","_createResourceInsertedAction","_resourceDeletingAction","_createResourceDeletingAction","_resourceDeletedAction","_createResourceDeletedAction","_resourceAssigningAction","_createResourceAssigningAction","_resourceAssignedAction","_createResourceAssignedAction","_resourceUnassigningAction","_createResourceUnassigningAction","_resourceUnassignedAction","_createResourceUnassignedAction","coreData","f","mappedField","_getMappedFieldName","mappedFields","mappedFieldName","getter","coreFieldName","coreField","fields","coreFields","mappedFieldsData","columnFields","c","_getTaskMappedFieldNames","_getTaskCustomFields","obj","customFields","element","_getToolbarItems","show","hide","createItems","_updateBarItemsState","contextMenuOptions","enabled","updateBarItemsState","_dialogInstance","parameters","afterClosing","getBarManager","updateContextMenu","targetType","targetKey","_items","getDependencyData","_raiseContextMenuPreparing","executeCoreCommand","_this$_ganttView4","cleanMarkup","taskTooltipContentTemplateOption","template","_getTemplate","createTemplateFunction","render","model","posX","onRendered","taskContentTemplateOption","taskData","startExpr","endExpr","progressExpr","titleExpr","colorExpr","predecessorIdExpr","successorIdExpr","typeExpr","textExpr","taskIdExpr","resourceIdExpr","taskListWidth","onTaskInserting","onTaskInserted","onTaskDeleting","onTaskDeleted","onTaskUpdating","onTaskUpdated","onTaskMoving","onTaskEditDialogShowing","onDependencyInserting","onDependencyInserted","onDependencyDeleting","onDependencyDeleted","onResourceInserting","onResourceInserted","onResourceDeleting","onResourceDeleted","onResourceAssigning","onResourceAssigned","onResourceUnassigning","onResourceUnassigned","onCustomCommand","allowTaskAdding","allowTaskDeleting","allowTaskUpdating","allowDependencyAdding","allowDependencyDeleting","allowResourceAdding","allowResourceDeleting","allowResourceUpdating","allowTaskResourceUpdating","validateDependencies","autoUpdateParentTasks","toolbar","contextMenu","getTaskResources","getVisibleTaskKeys","getVisibleDependencyKeys","getVisibleResourceKeys","getVisibleResourceAssignmentKeys","insertTask","deleteTask","updateTask","insertDependency","deleteDependency","getResourceData","deleteResource","taskKeys","insertResource","getResourceAssignmentData","resourceKey","taskKey","assignResourceToTask","unassignResourceFromTask","date","scrollToDate","showResourcesDialog","_fullOptions$docCreat","_window$jspdf$jsPDF","_window$jspdf","_fullOptions$format","_exportHelper","reset","fullOptions","createDocumentMethod","docCreateMethod","jspdf","jsPDF","format","Promise","resolve","_this$_ganttView5","doc","exportToPdf","_this$_exportHelper"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,SADJ,QAEO,uBAFP;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SACIC,aADJ,EAEIC,aAFJ,QAGO,uBAHP;AAIA,SACIC,SADJ,QAEO,iBAFP;AAGA,SACIC,YADJ,EAEIC,mBAFJ,QAGO,iBAHP;AAIA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,eADJ,QAEO,2BAFP;AAGA,SACIC,SADJ,EAEIC,SAFJ,QAGO,yBAHP;AAIA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACIC,WADJ,QAEO,oBAFP;AAGA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SACIC,gBADJ,QAEO,oBAFP;AAGA,SACIC,cADJ,QAEO,kBAFP;AAGA,SACIC,iBADJ,QAEO,0BAFP;AAGA,IAAIC,MAAM,GAAGR,SAAS,EAAtB;AACA,IAAIS,WAAW,GAAG,UAAlB;AACA,IAAIC,gBAAgB,GAAG,eAAvB;AACA,IAAIC,qBAAqB,GAAG,0BAA5B;AACA,IAAIC,uBAAuB,GAAG,2BAA9B;AACA,IAAIC,qBAAqB,GAAG,0BAA5B;AACA,IAAIC,kBAAkB,GAAG,uBAAzB;AACA,IAAIC,WAAW,GAAG,OAAlB;AACA,IAAIC,kBAAkB,GAAG,cAAzB;AACA,IAAIC,eAAe,GAAG,WAAtB;AACA,IAAIC,0BAA0B,GAAG,qBAAjC;AACA,IAAIC,wBAAwB,GAAG,oBAA/B;AACA,IAAIC,wBAAwB,GAAG,EAA/B;AACA,IAAIC,wBAAwB,GAAG,WAA/B;;IACMC,K;;;;;;;;;;;;;WACF,iBAAQ;AACJ;;AACA,WAAKC,MAAL,GAAc,IAAIjB,cAAJ,EAAd;AACA,WAAKkB,gBAAL,GAAwB,KAAxB;AACH;;;WACD,uBAAc;AACV;;AACA,WAAKC,QAAL,GAAgBC,QAAhB,CAAyBjB,WAAzB;AACA,WAAKkB,gBAAL,GAAwBxC,CAAC,CAAC,OAAD,CAAD,CAAWuC,QAAX,CAAoBb,qBAApB,EAA2Ce,QAA3C,CAAoD,KAAKH,QAAL,EAApD,CAAxB;AACA,WAAKI,SAAL,GAAiB1C,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKD,gBAAzB,CAAjB;AACA,WAAKG,aAAL,GAAqB3C,CAAC,CAAC,OAAD,CAAD,CAAWuC,QAAX,CAAoBZ,kBAApB,EAAwCc,QAAxC,CAAiD,KAAKH,QAAL,EAAjD,CAArB;AACA,WAAKM,iBAAL,GAAyB5C,CAAC,CAAC,OAAD,CAAD,CAAWuC,QAAX,CAAoBd,uBAApB,EAA6CgB,QAA7C,CAAsD,KAAKE,aAA3D,CAAzB;AACA,WAAKE,UAAL,GAAkB7C,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKG,iBAAzB,CAAlB;AACA,WAAKE,UAAL,GAAkB9C,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKE,aAAzB,CAAlB;AACA,WAAKI,WAAL,GAAmB/C,CAAC,CAAC,OAAD,CAAD,CAAWuC,QAAX,CAAoBhB,gBAApB,EAAsCkB,QAAtC,CAA+C,KAAKE,aAApD,CAAnB;AACA,WAAKK,QAAL,GAAgBhD,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKH,QAAL,EAApB,CAAhB;AACA,WAAKW,WAAL,GAAmBjD,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKH,QAAL,EAApB,CAAnB;AACA,WAAKY,aAAL,GAAqBlD,CAAC,CAAC,OAAD,CAAD,CAAWyC,QAAX,CAAoB,KAAKH,QAAL,EAApB,CAArB;;AACA,WAAKa,kBAAL,CAAwBvB,WAAxB;;AACA,WAAKuB,kBAAL,CAAwBtB,kBAAxB;;AACA,WAAKsB,kBAAL,CAAwBrB,eAAxB;;AACA,WAAKqB,kBAAL,CAAwBpB,0BAAxB;AACH;;;WACD,oBAAW;AACP,WAAKM,gBAAL,GAAwB,KAAxB;;AACA;AACH;;;WACD,0BAAiB;AACb,WAAKe,qBAAL,GAA6B,KAAKd,QAAL,GAAgBe,EAAhB,CAAmB,UAAnB,CAA7B;;AACA,UAAI,KAAKD,qBAAL,IAA8B,CAAC,KAAKf,gBAAxC,EAA0D;AACtD,aAAKA,gBAAL,GAAwB,IAAxB;;AACA,aAAKiB,WAAL;;AACA,aAAKC,eAAL;;AACA,aAAKC,eAAL;AACH;AACJ;;;WACD,2BAAkB;AAAA;;AACd,yBAGI,KAAKC,MAAL,CAAY7B,WAAZ,CAHJ;AAAA,UACa8B,OADb,gBACIA,OADJ;AAAA,UAEkBC,YAFlB,gBAEIA,YAFJ;;AAIA,WAAKC,SAAL,GAAiB,KAAKC,gBAAL,CAAsB,KAAKhB,UAA3B,EAAuCpC,UAAvC,EAAmD;AAChEqD,QAAAA,UAAU,EAAE,KAAKC,SAD+C;AAEhEL,QAAAA,OAAO,EAAEA,OAFuD;AAGhEC,QAAAA,YAAY,EAAEA,YAHkD;AAIhEK,QAAAA,OAAO,EAAE,KAAKC,mBAAL,EAJuD;AAKhEC,QAAAA,kBAAkB,EAAE,YAL4C;AAMhEC,QAAAA,MAAM,EAAE,KAAKC,kBAAL,EANwD;AAOhEC,QAAAA,KAAK,EAAE,KAAKZ,MAAL,CAAY,eAAZ,CAPyD;AAQhEa,QAAAA,SAAS,EAAE;AACPC,UAAAA,IAAI,EAAE,KAAKC,iBAAL,CAAuB,KAAKf,MAAL,CAAY,gBAAZ,CAAvB;AADC,SARqD;AAWhEgB,QAAAA,eAAe,EAAE,KAAKC,uBAAL,CAA6B,KAAKjB,MAAL,CAAY,gBAAZ,CAA7B,CAX+C;AAYhEkB,QAAAA,OAAO,EAAE;AACLJ,UAAAA,IAAI,EAAE;AADD,SAZuD;AAehEK,QAAAA,SAAS,EAAE;AACPC,UAAAA,aAAa,EAAE,SADR;AAEPN,UAAAA,IAAI,EAAE;AAFC,SAfqD;AAmBhEO,QAAAA,mBAAmB,EAAE,IAnB2C;AAoBhEC,QAAAA,aAAa,EAAE,IApBiD;AAqBhEC,QAAAA,YAAY,EAAE,KAAKvB,MAAL,CAAY,cAAZ,CArBkD;AAsBhEwB,QAAAA,SAAS,EAAE,KAAKxB,MAAL,CAAY,WAAZ,CAtBqD;AAuBhEyB,QAAAA,cAAc,EAAE,wBAAAC,CAAC,EAAI;AACjB,UAAA,KAAI,CAACC,uBAAL,CAA6BD,CAA7B;AACH,SAzB+D;AA0BhEE,QAAAA,kBAAkB,EAAE,4BAAAF,CAAC,EAAI;AACrB,UAAA,KAAI,CAACG,2BAAL,CAAiCH,CAAjC;AACH,SA5B+D;AA6BhEI,QAAAA,cAAc,EAAE,wBAAAJ,CAAC,EAAI;AACjB,UAAA,KAAI,CAACK,uBAAL,CAA6BL,CAA7B;AACH,SA/B+D;AAgChEM,QAAAA,aAAa,EAAE,uBAAAN,CAAC,EAAI;AAChB,UAAA,KAAI,CAACO,sBAAL,CAA4BP,CAA5B;AACH,SAlC+D;AAmChEQ,QAAAA,aAAa,EAAE,uBAAAR,CAAC,EAAI;AAChB,UAAA,KAAI,CAACS,sBAAL,CAA4BT,CAA5B;AACH,SArC+D;AAsChEU,QAAAA,sBAAsB,EAAE,gCAAAV,CAAC,EAAI;AACzB,UAAA,KAAI,CAACW,+BAAL,CAAqCX,CAArC;AACH,SAxC+D;AAyChEY,QAAAA,UAAU,EAAE,oBAAAZ,CAAC,EAAI;AACb,UAAA,KAAI,CAACa,mBAAL,CAAyBb,CAAzB;AACH,SA3C+D;AA4ChEc,QAAAA,aAAa,EAAE,uBAAAd,CAAC,EAAI;AAChB,UAAA,KAAI,CAACe,sBAAL,CAA4Bf,CAA5B;AACH;AA9C+D,OAAnD,CAAjB;AAgDH;;;WACD,2BAAkB;AACd,WAAKgB,SAAL,GAAiB,KAAKtC,gBAAL,CAAsB,KAAKf,UAA3B,EAAuC/B,eAAvC,EAAwD;AACrEqF,QAAAA,SAAS,EAAE,KAAK9D,QAAL,EAD0D;AAErE+D,QAAAA,WAAW,EAAE,KAAKzD,iBAFmD;AAGrE0D,QAAAA,YAAY,EAAE,KAAKvD,WAHkD;AAIrEwD,QAAAA,gBAAgB,EAAE,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B;AAJmD,OAAxD,CAAjB;;AAMA,WAAKN,SAAL,CAAe1C,MAAf,CAAsB,uBAAtB,EAA+C,KAAKA,MAAL,CAAY,eAAZ,CAA/C;AACH;;;WACD,uBAAc;AACV,WAAKiD,KAAL,GAAa,EAAb;AACA,WAAKC,QAAL,GAAgB,IAAIpG,YAAJ,CAAiB,KAAKmC,SAAtB,EAAiC,IAAjC,CAAhB;;AACA,WAAKkE,qBAAL;;AACA,WAAKF,KAAL,CAAWG,IAAX,CAAgB,KAAKF,QAArB;;AACA,WAAKG,eAAL,GAAuB,IAAItG,mBAAJ,CAAwB,KAAK0C,aAA7B,EAA4C,IAA5C,CAAvB;;AACA,WAAK6D,kBAAL;;AACA,WAAKL,KAAL,CAAWG,IAAX,CAAgB,KAAKC,eAArB;AACH;;;WACD,0BAAiB;AAAA;;AACb,UAAI,KAAKE,UAAT,EAAqB;AACjB;AACH;;AACD,WAAKA,UAAL,GAAkB,KAAKnD,gBAAL,CAAsB,KAAKd,WAA3B,EAAwCzC,SAAxC,EAAmD;AACjE+D,QAAAA,KAAK,EAAE,MAD0D;AAEjEF,QAAAA,MAAM,EAAE,KAAKP,SAAL,CAAeqD,SAAf,CAAyBC,GAAzB,CAA6B,CAA7B,EAAgCC,YAFyB;AAGjEC,QAAAA,SAAS,EAAE,KAAKC,qBAAL,EAHsD;AAIjEC,QAAAA,YAAY,EAAE,KAAKC,wBAAL,EAJmD;AAKjEC,QAAAA,KAAK,EAAE,KAAKC,MALqD;AAMjEC,QAAAA,YAAY,EAAE,KAAKC,aAN8C;AAOjEC,QAAAA,SAAS,EAAE,KAAKC,UAPiD;AAQjEC,QAAAA,mBAAmB,EAAE,KAAKC,oBARuC;AASjEC,QAAAA,cAAc,EAAE,KAAKvE,MAAL,CAAY,gBAAZ,CATiD;AAUjEwE,QAAAA,cAAc,EAAE,KAAKxE,MAAL,CAAY,gBAAZ,CAViD;AAWjEyE,QAAAA,aAAa,EAAE,KAAKzE,MAAL,CAAY,eAAZ,CAXkD;AAYjE0E,QAAAA,iBAAiB,EAAE,KAAK1E,MAAL,CAAY,mBAAZ,CAZ8C;AAajE2E,QAAAA,cAAc,EAAE,KAAK3E,MAAL,CAAY,gBAAZ,CAbiD;AAcjEuB,QAAAA,YAAY,EAAE,KAAKvB,MAAL,CAAY,cAAZ,CAdmD;AAejE4E,QAAAA,SAAS,EAAE,KAAK5E,MAAL,CAAY,WAAZ,CAfsD;AAgBjE6E,QAAAA,OAAO,EAAE,KAAK7E,MAAL,CAAY,SAAZ,CAhBwD;AAiBjE8E,QAAAA,UAAU,EAAE,KAAK9E,MAAL,CAAY,YAAZ,CAjBqD;AAkBjE+E,QAAAA,UAAU,EAAE,KAAK/E,MAAL,CAAY,YAAZ,CAlBqD;AAmBjEgF,QAAAA,IAAI,EAAE,KAAK/B,KAnBsD;AAoBjEgC,QAAAA,WAAW,EAAE,KAAKpG,QAAL,EApBoD;AAqBjE+C,QAAAA,kBAAkB,EAAE,KAAKsD,4BAAL,CAAkClC,IAAlC,CAAuC,IAAvC,CArB6C;AAsBjEmC,QAAAA,QAAQ,EAAE,KAAKC,kBAAL,CAAwBpC,IAAxB,CAA6B,IAA7B,CAtBuD;AAuBjEqC,QAAAA,eAAe,EAAE,KAAKC,WAAL,CAAiBtC,IAAjB,CAAsB,IAAtB,CAvBgD;AAwBjEuC,QAAAA,kBAAkB,EAAE,KAAKC,cAAL,CAAoBxC,IAApB,CAAyB,IAAzB,CAxB6C;AAyBjEyC,QAAAA,WAAW,EAAE,KAAKC,UAAL,CAAgB1C,IAAhB,CAAqB,IAArB,CAzBoD;AA0BjE2C,QAAAA,aAAa,EAAE,KAAKC,YAAL,CAAkB5C,IAAlB,CAAuB,IAAvB,CA1BkD;AA2BjE6C,QAAAA,oBAAoB,EAAE,KAAKC,2BAAL,EA3B2C;AA4BjEC,QAAAA,YAAY,EAAE,KAAKC,gBAAL,EA5BmD;AA6BjEC,QAAAA,0BAA0B,EAAE,KAAKC,kCAAL,CAAwC,KAAKlG,MAAL,CAAY,4BAAZ,CAAxC,CA7BqC;AA8BjEmG,QAAAA,kCAAkC,EAAE,KAAKC,0CAAL,CAAgD,KAAKpG,MAAL,CAAY,oCAAZ,CAAhD,CA9B6B;AA+BjEqG,QAAAA,8BAA8B,EAAE,KAAKC,sCAAL,CAA4C,KAAKtG,MAAL,CAAY,gCAAZ,CAA5C,CA/BiC;AAgCjEuG,QAAAA,mBAAmB,EAAE,KAAKC,2BAAL,CAAiC,KAAKxG,MAAL,CAAY,qBAAZ,CAAjC,CAhC4C;AAiCjEyG,QAAAA,WAAW,EAAE,qBAAA/E,CAAC,EAAI;AACd,UAAA,MAAI,CAACa,mBAAL,CAAyBb,CAAzB;AACH,SAnCgE;AAoCjEgF,QAAAA,cAAc,EAAE,wBAAAhF,CAAC,EAAI;AACjB,UAAA,MAAI,CAACe,sBAAL,CAA4Bf,CAA5B;AACH,SAtCgE;AAuCjEiF,QAAAA,eAAe,EAAE,2BAAM;AACnB,UAAA,MAAI,CAACC,gBAAL;AACH;AAzCgE,OAAnD,CAAlB;;AA2CA,WAAKC,uBAAL;AACH;;;WACD,4BAAmB;AACf,UAAIC,aAAa,GAAG,KAAKtD,SAAL,CAAe9C,MAAf,EAApB;;AACA,WAAKqG,iBAAL;;AACA,WAAKC,eAAL,CAAqBF,aAArB;AACH;;;WACD,2BAAkBpF,CAAlB,EAAqB;AACjB,WAAKuF,sBAAL,CAA4BvF,CAA5B;;AACA,WAAKwF,sBAAL;AACH;;;WACD,kCAAyB;AACrB,UAAIvD,SAAS,GAAG,KAAKC,qBAAL,EAAhB;;AACA,UAAI,KAAKuD,mBAAL,CAAyB,WAAzB,MAA0CxD,SAA9C,EAAyD;AACrD,YAAIyD,gBAAJ;;AACA,aAAKC,mBAAL,CAAyB,WAAzB,EAAsC1D,SAAtC;;AACA,kBAAUyD,gBAAgB,GAAG,KAAK7D,UAAlC,KAAiD,KAAK,CAAL,KAAW6D,gBAA5D,GAA+E,KAAK,CAApF,GAAwFA,gBAAgB,CAACE,cAAjB,CAAgCC,gBAAhC,CAAiD5D,SAAjD,CAAxF;AACH;AACJ;;;WACD,iCAAwBjC,CAAxB,EAA2B;AACvB,UAAIA,CAAC,CAAC8F,SAAF,CAAYC,aAAZ,EAAJ,EAAiC;AAC7B,aAAKC,cAAL;;AACA,aAAKC,eAAL,CAAqBjG,CAAC,CAAC8F,SAAvB;AACH;AACJ;;;WACD,gCAAuB9F,CAAvB,EAA0B;AACtB,UAAI,WAAWA,CAAC,CAACkG,OAAb,IAAwBlG,CAAC,CAACmG,IAAF,CAAOC,QAAP,CAAgBC,MAAhB,GAAyB,CAArD,EAAwD;AACpDxL,QAAAA,CAAC,CAACmF,CAAC,CAACsG,UAAH,CAAD,CAAgBlJ,QAAhB,CAAyBf,qBAAzB;AACH;AACJ;;;WACD,yCAAgC2D,CAAhC,EAAmC;AAC/B,UAAIuG,MAAJ,EAAYC,OAAZ;;AACA,UAAI,YAAY,UAAUD,MAAM,GAAGvG,CAAC,CAACyG,GAArB,KAA6B,KAAK,CAAL,KAAWF,MAAxC,GAAiD,KAAK,CAAtD,GAA0DA,MAAM,CAACL,OAA7E,CAAJ,EAA2F;AACvF,aAAKQ,kBAAL,CAAwB,iBAAxB,EAA2C,CAAC1G,CAAC,CAACyG,GAAF,CAAME,IAAN,CAAW,KAAKrI,MAAL,CAAY,eAAZ,CAAX,CAAD,CAA3C;AACH;;AACD0B,MAAAA,CAAC,CAAC4G,KAAF,GAAU,EAAV;AACA,UAAIC,IAAI,GAAG;AACPC,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,KAAK,EAAE/G,CAAC,CAAC+G,KAFF;AAGPC,QAAAA,IAAI,EAAE,MAHC;AAIPC,QAAAA,GAAG,EAAE,UAAUT,OAAO,GAAGxG,CAAC,CAACyG,GAAtB,KAA8B,KAAK,CAAL,KAAWD,OAAzC,GAAmD,KAAK,CAAxD,GAA4DA,OAAO,CAACS,GAJlE;AAKPC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,CAAC,EAAEnH,CAAC,CAAC+G,KAAF,CAAQK,KADL;AAENC,UAAAA,CAAC,EAAErH,CAAC,CAAC+G,KAAF,CAAQO;AAFL;AALH,OAAX;;AAUA,WAAKxD,cAAL,CAAoB+C,IAApB;AACH;;;WACD,6BAAoB7G,CAApB,EAAuB;AACnB,WAAKuH,qBAAL,CAA2BvH,CAAC,CAACiH,GAA7B,EAAkCjH,CAAC,CAAC+G,KAApC;AACH;;;WACD,gCAAuB/G,CAAvB,EAA0B;AACtB,UAAI,KAAKwH,wBAAL,CAA8BxH,CAAC,CAACiH,GAAhC,EAAqCjH,CAAC,CAAC+G,KAAvC,CAAJ,EAAmD;AAC/C,aAAKlF,UAAL,CAAgB+D,cAAhB,CAA+B6B,kBAA/B;AACH;AACJ;;;WACD,qCAA4BzH,CAA5B,EAA+B;AAC3B,UAAI8C,cAAc,GAAG9C,CAAC,CAAC0H,sBAAF,CAAyB,CAAzB,CAArB;;AACA,WAAK/B,mBAAL,CAAyB,gBAAzB,EAA2C7C,cAA3C;;AACA,WAAK6E,6BAAL,CAAmC,gBAAnC,EAAqD7E,cAArD;;AACA,WAAK8E,4BAAL,CAAkC9E,cAAlC;AACH;;;WACD,iCAAwB9C,CAAxB,EAA2B;AACvB,WAAK6B,UAAL,CAAgBgG,kBAAhB,CAAmC7H,CAAC,CAACiH,GAArC,EAA0C,KAA1C;;AACA,WAAKa,aAAL;AACH;;;WACD,gCAAuB9H,CAAvB,EAA0B;AACtB,WAAK6B,UAAL,CAAgBgG,kBAAhB,CAAmC7H,CAAC,CAACiH,GAArC,EAA0C,IAA1C;;AACA,WAAKa,aAAL;AACH;;;WACD,yBAAgB;AACZ,UAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,aAAKpC,mBAAL,CAAyB,QAAzB,EAAmC,CAAnC;;AACA,aAAKA,mBAAL,CAAyB,QAAzB,EAAmC,KAAKlH,SAAL,CAAeqD,SAAf,CAAyBC,GAAzB,CAA6B,CAA7B,EAAgCC,YAAnE;AACH;AACJ;;;WACD,8BAAqB;AACjB,UAAI,KAAKtE,UAAL,CAAgBsB,MAAhB,EAAJ,EAA8B;AAC1B,eAAO,KAAKtB,UAAL,CAAgBsB,MAAhB,EAAP;AACH;;AACD,WAAK+I,UAAL,GAAkBjN,SAAS,CAAC,KAAKwD,MAAL,CAAY,QAAZ,CAAD,CAAT,IAAoC,OAAO,KAAKA,MAAL,CAAY,QAAZ,CAA7D;AACA,aAAO,KAAKyJ,UAAL,GAAkB,MAAlB,GAA2B,EAAlC;AACH;;;WACD,+BAAsB;AAClB,UAAIlJ,OAAO,GAAG,KAAKP,MAAL,CAAY,SAAZ,CAAd;;AACA,UAAIO,OAAJ,EAAa;AACT,aAAK,IAAImJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnJ,OAAO,CAACwH,MAA5B,EAAoC2B,CAAC,EAArC,EAAyC;AACrC,cAAIC,MAAM,GAAGpJ,OAAO,CAACmJ,CAAD,CAApB;AACA,cAAIE,WAAW,GAAGD,MAAM,CAACE,SAAP,KAAqB,KAAK7J,MAAL,CAAY,GAAG8J,MAAH,CAAU3L,WAAV,EAAuB,UAAvB,CAAZ,CAArB,IAAwEwL,MAAM,CAACE,SAAP,KAAqB,KAAK7J,MAAL,CAAY,GAAG8J,MAAH,CAAU3L,WAAV,EAAuB,eAAvB,CAAZ,CAA/G;;AACA,cAAIyL,WAAW,IAAI,CAACD,MAAM,CAACI,QAA3B,EAAqC;AACjCJ,YAAAA,MAAM,CAACI,QAAP,GAAkB,QAAlB;AACH;AACJ;AACJ;;AACD,aAAOxJ,OAAP;AACH;;;WACD,sCAA6BmB,CAA7B,EAAgC;AAC5B,WAAK0G,kBAAL,CAAwB,iBAAxB,EAA2C,KAAKnH,uBAAL,CAA6BS,CAAC,CAACsI,EAA/B,CAA3C;AACH;;;WACD,4BAAmBtI,CAAnB,EAAsB;AAClB,UAAIuI,kBAAkB,GAAG,KAAK9J,SAAL,CAAe+J,aAAf,EAAzB;;AACA,UAAID,kBAAJ,EAAwB;AACpB,YAAIE,IAAI,GAAGzI,CAAC,CAAC0I,SAAF,GAAcH,kBAAkB,CAACG,SAAnB,EAAzB;;AACA,YAAI,MAAMD,IAAV,EAAgB;AACZF,UAAAA,kBAAkB,CAACI,QAAnB,CAA4B;AACxBC,YAAAA,IAAI,EAAE,CADkB;AAExBC,YAAAA,GAAG,EAAEJ;AAFmB,WAA5B;AAIH;AACJ;AACJ;;;WACD,2BAAkBK,kBAAlB,EAAsC;AAClC,UAAIC,0BAA0B,GAAG,KAAKlH,UAAL,CAAgBmH,oBAAhB,EAAjC;;AACA,UAAID,0BAA0B,CAACL,SAA3B,KAAyCI,kBAAkB,CAAChD,SAAnB,CAA6B4C,SAA7B,EAA7C,EAAuF;AACnFK,QAAAA,0BAA0B,CAACL,SAA3B,GAAuCI,kBAAkB,CAAChD,SAAnB,CAA6B4C,SAA7B,EAAvC;AACH;AACJ;;;WACD,sBAAa;AAAA;;AACT,WAAKjK,SAAL,CAAewK,WAAf,CAA2B,UAAA9C,IAAI,EAAI;AAC/B,YAAIA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,CAAcC,MAAnC,EAA2C;AACvC,UAAA,MAAI,CAAC5H,SAAL,CAAeyK,SAAf,CAAyB/C,IAAI,CAACc,GAA9B;;AACA,UAAA,MAAI,CAACpF,UAAL,CAAgBgG,kBAAhB,CAAmC1B,IAAI,CAACc,GAAxC,EAA6C,IAA7C;AACH;AACJ,OALD;AAMH;;;WACD,wBAAe;AAAA;;AACX,WAAKxI,SAAL,CAAewK,WAAf,CAA2B,UAAA9C,IAAI,EAAI;AAC/B,YAAIA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,CAAcC,MAAnC,EAA2C;AACvC,UAAA,MAAI,CAAC5H,SAAL,CAAe0K,WAAf,CAA2BhD,IAAI,CAACc,GAAhC;;AACA,UAAA,MAAI,CAACpF,UAAL,CAAgBgG,kBAAhB,CAAmC1B,IAAI,CAACc,GAAxC,EAA6C,KAA7C;AACH;AACJ,OALD;AAMH;;;WACD,yBAAgBmC,QAAhB,EAA0B;AAAA;;AACtB,UAAIb,kBAAkB,GAAGa,QAAQ,CAACZ,aAAT,EAAzB;;AACA,UAAID,kBAAJ,EAAwB;AACpBA,QAAAA,kBAAkB,CAACc,GAAnB,CAAuB,QAAvB;AACAd,QAAAA,kBAAkB,CAACe,EAAnB,CAAsB,QAAtB,EAAgC,UAAAtJ,CAAC,EAAI;AACjC,UAAA,MAAI,CAACuJ,iBAAL,CAAuBvJ,CAAvB;AACH,SAFD;AAGH;AACJ;;;WACD,iCAAwB;AACpB,UAAIwJ,IAAI,GAAG,KAAK/K,SAAL,CAAeqD,SAAf,CAAyB2H,IAAzB,CAA8B,cAA9B,CAAX;;AACA,UAAIzK,MAAM,GAAGwK,IAAI,CAACnD,MAAL,GAAc7K,eAAe,CAACgO,IAAI,CAACE,IAAL,GAAY3H,GAAZ,CAAgB,CAAhB,CAAD,CAAf,CAAoC/C,MAAlD,GAA2DlC,wBAAxE;;AACA,UAAI,CAACkC,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAGlC,wBAAT;AACH;;AACD,WAAK6M,yBAAL,CAA+B3K,MAA/B;;AACA,aAAOA,MAAP;AACH;;;WACD,mCAA0BA,MAA1B,EAAkC;AAC9B,UAAI4K,IAAI,GAAG,KAAKnL,SAAL,CAAeoL,MAAf,IAAyB,KAAKpL,SAAL,CAAeoL,MAAf,CAAsBC,QAA1D;;AACA,UAAI,CAAC,SAASF,IAAT,IAAiB,KAAK,CAAL,KAAWA,IAA5B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACG,UAAlD,MAAkE/K,MAAtE,EAA8E;AAC1E4K,QAAAA,IAAI,CAACG,UAAL,GAAkB/K,MAAlB;AACH;AACJ;;;WACD,oCAA2B;AACvB,aAAOxD,eAAe,CAAC,KAAKiD,SAAL,CAAeqD,SAAf,CAAyB2H,IAAzB,CAA8B,sBAA9B,EAAsD1H,GAAtD,CAA0D,CAA1D,CAAD,CAAf,CAA8E/C,MAArF;AACH;;;WACD,gCAAuBgL,MAAvB,EAA+B;AAC3B,UAAI,CAACvO,SAAS,EAAd,EAAkB;AACd;AACH;;AACD,UAAI,CAACuO,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAG,KAAKC,uBAAL,EAAT;AACH;;AACD,WAAKC,qBAAL,CAA2B,OAA3B,EAAoCF,MAAM,CAACG,cAA3C;;AACA,WAAKC,sBAAL,CAA4B,OAA5B,EAAqCJ,MAAM,CAACK,eAA5C;AACH;;;WACD,+BAAsBC,SAAtB,EAAiCC,KAAjC,EAAwC;AACpC,WAAK9M,iBAAL,CAAuB6M,SAAvB,EAAkCC,KAAlC;;AACA,WAAK7D,kBAAL,CAAwB4D,SAAxB,EAAmC,KAAK7M,iBAAL,CAAuB6M,SAAvB,GAAnC;AACH;;;WACD,gCAAuBA,SAAvB,EAAkCC,KAAlC,EAAyC;AACrC,WAAK3M,WAAL,CAAiB0M,SAAjB,EAA4BC,KAA5B;;AACA,WAAK5E,mBAAL,CAAyB2E,SAAzB,EAAoC,KAAK1M,WAAL,CAAiB0M,SAAjB,GAApC;AACH;;;WACD,6BAAoB;AAChB,WAAKtJ,SAAL,CAAewJ,iBAAf;AACH;;;WACD,yBAAgBxL,MAAhB,EAAwB;AACpB,UAAIyL,iBAAJ;;AACA,UAAIC,mBAAmB,GAAG,KAAKrN,gBAAL,CAAsB0E,GAAtB,CAA0B,CAA1B,EAA6BC,YAAvD;;AACA,UAAI2I,iBAAiB,GAAG3L,MAAM,GAAG0L,mBAAjC;;AACA,WAAKR,qBAAL,CAA2B,QAA3B,EAAqCS,iBAArC;;AACA,WAAKP,sBAAL,CAA4B,QAA5B,EAAsCO,iBAAtC;;AACA,gBAAUF,iBAAiB,GAAG,KAAK5I,UAAnC,KAAkD,KAAK,CAAL,KAAW4I,iBAA7D,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAAC7E,cAAlB,CAAiCgF,cAAjC,EAA1F;AACH;;;WACD,mCAA0B;AACtB,aAAO;AACHT,QAAAA,cAAc,EAAE,KAAK7L,MAAL,CAAY,eAAZ,CADb;AAEH+L,QAAAA,eAAe,EAAE,KAAKvI,SAAL,CAAe5C,KAAf,KAAyB,KAAKZ,MAAL,CAAY,eAAZ;AAFvC,OAAP;AAIH;;;WACD,6BAAoBuM,UAApB,EAAgCN,KAAhC,EAAuC;AACnC,WAAK1I,UAAL,IAAmB,KAAKA,UAAL,CAAgBvD,MAAhB,CAAuBuM,UAAvB,EAAmCN,KAAnC,CAAnB;AACH;;;WACD,6BAAoBM,UAApB,EAAgCN,KAAhC,EAAuC;AACnC,UAAIO,iBAAJ;;AACA,aAAO,UAAUA,iBAAiB,GAAG,KAAKjJ,UAAnC,KAAkD,KAAK,CAAL,KAAWiJ,iBAA7D,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAACxM,MAAlB,CAAyBuM,UAAzB,CAAjG;AACH;;;WACD,4BAAmBA,UAAnB,EAA+BN,KAA/B,EAAsC;AAClC,WAAK9L,SAAL,IAAkB,KAAKA,SAAL,CAAeH,MAAf,CAAsBuM,UAAtB,EAAkCN,KAAlC,CAAlB;AACH;;;WACD,4BAAmBQ,IAAnB,EAAyB;AAAA;;AACrB,UAAIC,UAAU,GAAG,KAAK,IAAI5C,MAAJ,CAAW2C,IAAX,EAAiB,QAAjB,CAAL,CAAjB;;AACA,UAAIC,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAACC,kBAAX;;AACA,eAAO,KAAK,IAAI7C,MAAJ,CAAW2C,IAAX,EAAiB,QAAjB,CAAL,CAAP;AACA,eAAO,KAAK,IAAI3C,MAAJ,CAAW2C,IAAX,CAAL,CAAP;AACH;;AACD,UAAI,KAAKzM,MAAL,CAAY,GAAG8J,MAAH,CAAU2C,IAAV,EAAgB,aAAhB,CAAZ,CAAJ,EAAiD;AAC7CC,QAAAA,UAAU,GAAG,IAAIrP,UAAJ,CAAeoP,IAAf,EAAqB,KAAKG,aAAL,EAArB,EAA2C,UAACH,IAAD,EAAOpE,IAAP,EAAgB;AACpE,UAAA,MAAI,CAACwE,kBAAL,CAAwBJ,IAAxB,EAA8BpE,IAA9B;AACH,SAFY,CAAb;AAGAqE,QAAAA,UAAU,CAAC1M,MAAX,CAAkB,YAAlB,EAAgC,KAAK8M,4BAAL,CAAkCL,IAAlC,CAAhC;;AACAC,QAAAA,UAAU,CAAChN,kBAAX;;AACA,aAAK,IAAIoK,MAAJ,CAAW2C,IAAX,EAAiB,QAAjB,CAAL,IAAmCC,UAAnC;AACH;AACJ;;;WACD,sCAA6BD,IAA7B,EAAmC;AAC/B,UAAIpM,UAAU,GAAG,KAAKL,MAAL,CAAY,GAAG8J,MAAH,CAAU2C,IAAV,EAAgB,aAAhB,CAAZ,CAAjB;;AACA,UAAIM,KAAK,CAACC,OAAN,CAAc3M,UAAd,CAAJ,EAA+B;AAC3B,eAAO;AACH4M,UAAAA,KAAK,EAAE;AACHvE,YAAAA,IAAI,EAAE,OADH;AAEHL,YAAAA,IAAI,EAAEhI,UAFH;AAGHsI,YAAAA,GAAG,EAAE,KAAK3I,MAAL,CAAY,GAAG8J,MAAH,CAAU2C,IAAV,EAAgB,UAAhB,CAAZ;AAHF;AADJ,SAAP;AAOH;;AACD,aAAOpM,UAAP;AACH;;;WACD,iCAAwBkM,UAAxB,EAAoC;AAChC,UAAIW,OAAO,GAAG,EAAd;AACA,UAAIC,WAAW,GAAG,KAAKnN,MAAL,CAAYuM,UAAZ,CAAlB;;AACA,WAAK,IAAIa,KAAT,IAAkBD,WAAlB,EAA+B;AAC3B,YAAIE,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY,WAAZ,CAAlB;;AACA,YAAID,WAAJ,EAAiB;AACbH,UAAAA,OAAO,CAACG,WAAW,CAAC,CAAD,CAAZ,CAAP,GAA0B1Q,aAAa,CAACwQ,WAAW,CAACE,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAAvC;AACH;AACJ;;AACD,aAAOH,OAAP;AACH;;;WACD,iCAAwBX,UAAxB,EAAoC;AAChC,UAAIgB,OAAO,GAAG,EAAd;AACA,UAAIJ,WAAW,GAAG,KAAKnN,MAAL,CAAYuM,UAAZ,CAAlB;;AACA,WAAK,IAAIa,KAAT,IAAkBD,WAAlB,EAA+B;AAC3B,YAAIE,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY,WAAZ,CAAlB;;AACA,YAAID,WAAJ,EAAiB;AACbE,UAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAZ,CAAP,GAA0BzQ,aAAa,CAACuQ,WAAW,CAACE,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAAvC;AACH;AACJ;;AACD,aAAOE,OAAP;AACH;;;WACD,yBAAgBhB,UAAhB,EAA4BiB,WAA5B,EAAyC;AACrC,UAAID,OAAO,GAAG,KAAKE,uBAAL,CAA6BlB,UAA7B,CAAd;;AACA,aAAOmB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,CAA4B,UAACC,QAAD,EAAWlF,GAAX,EAAmB;AAClD,YAAI,UAAUA,GAAd,EAAmB;AACf4E,UAAAA,OAAO,CAAC5E,GAAD,CAAP,CAAakF,QAAb,EAAuBL,WAAW,CAAC7E,GAAD,CAAlC;AACH;;AACD,eAAOkF,QAAP;AACH,OALM,EAKJ,EALI,CAAP;AAMH;;;WACD,kCAAyBN,OAAzB,EAAkC;AAC9B,aAAO,UAAAlF,IAAI;AAAA,eAAIqF,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,CAA4B,UAACC,QAAD,EAAWlF,GAAX,EAAmB;AAC1D,cAAImF,SAAS,GAAG,UAAUnF,GAAV,GAAgB,IAAhB,GAAuBA,GAAvC;AACA4E,UAAAA,OAAO,CAAC5E,GAAD,CAAP,CAAakF,QAAb,EAAuBxF,IAAI,CAACyF,SAAD,CAA3B;AACA,iBAAOD,QAAP;AACH,SAJc,EAIZ,EAJY,CAAJ;AAAA,OAAX;AAKH;;;WACD,4BAAmBX,OAAnB,EAA4B;AACxB,aAAO,UAAA7E,IAAI;AAAA,eAAIqF,MAAM,CAACC,IAAP,CAAYT,OAAZ,EAAqBU,MAArB,CAA4B,UAACC,QAAD,EAAWlF,GAAX,EAAmB;AAC1D,cAAImF,SAAS,GAAG,UAAUnF,GAAV,GAAgB,IAAhB,GAAuBA,GAAvC;AACAkF,UAAAA,QAAQ,CAACC,SAAD,CAAR,GAAsBZ,OAAO,CAACvE,GAAD,CAAP,CAAaN,IAAb,CAAtB;AACA,iBAAOwF,QAAP;AACH,SAJc,EAIZ,EAJY,CAAJ;AAAA,OAAX;AAKH;;;WACD,4BAAmBE,cAAnB,EAAmC1F,IAAnC,EAAyC;AAAA;;AACrC,UAAI6E,OAAO,GAAG,KAAKc,uBAAL,CAA6BD,cAA7B,CAAd;;AACA,UAAIE,UAAU,GAAG5F,IAAI,CAAC6F,GAAL,CAAS,KAAKC,kBAAL,CAAwBjB,OAAxB,CAAT,CAAjB;AACA,WAAK,IAAIpD,MAAJ,CAAWiE,cAAX,CAAL,IAAmCE,UAAnC;;AACA,WAAK5G,mBAAL,CAAyB0G,cAAzB,EAAyCE,UAAzC;;AACA,UAAIF,cAAc,KAAK5P,WAAvB,EAAoC;AAChC,aAAKmC,SAAL,GAAiB+H,IAAjB;AACA,YAAI+F,eAAe,GAAG/F,IAAI,CAAC6F,GAAL,CAAS,UAAAG,CAAC;AAAA,iBAAIA,CAAC,CAAC,MAAI,CAACrO,MAAL,CAAY,oBAAZ,CAAD,CAAL;AAAA,SAAV,EAAoDsO,MAApD,CAA2D,UAACrC,KAAD,EAAQsC,KAAR,EAAeC,IAAf;AAAA,iBAAwBvC,KAAK,IAAIuC,IAAI,CAACC,OAAL,CAAaxC,KAAb,MAAwBsC,KAAzD;AAAA,SAA3D,CAAtB;;AACA,aAAKnG,kBAAL,CAAwB,iBAAxB,EAA2CgG,eAA3C;;AACA,aAAKhG,kBAAL,CAAwB,YAAxB,EAAsCC,IAAtC;AACH;AACJ;;;WACD,uCAA8B;AAAA;;AAC1B,aAAO;AACHqG,QAAAA,iBAAiB,EAAE,2BAACC,IAAD,EAAOC,QAAP,EAAiBC,aAAjB,EAAmC;AAClD,UAAA,MAAI,CAACC,iBAAL,CAAuB3Q,WAAvB,EAAoCwQ,IAApC,EAA0CC,QAA1C;AACH,SAHE;AAIHG,QAAAA,iBAAiB,EAAE,2BAACC,MAAD,EAASH,aAAT,EAAwBF,IAAxB,EAAiC;AAChD,UAAA,MAAI,CAACM,gBAAL,CAAsB9Q,WAAtB,EAAmC6Q,MAAnC,EAA2CL,IAA3C;AACH,SANE;AAOHO,QAAAA,sBAAsB,EAAE,gCAACF,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AACzD,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,OAA3C,EAAoDG,QAApD;AACH,SATE;AAUHE,QAAAA,4BAA4B,EAAE,sCAACL,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AAC/D,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,aAA3C,EAA0DG,QAA1D;AACH,SAZE;AAaHG,QAAAA,sBAAsB,EAAE,gCAACN,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AACzD,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,OAA3C,EAAoDG,QAApD;AACH,SAfE;AAgBHI,QAAAA,oBAAoB,EAAE,8BAACP,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AACvD,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,KAA3C,EAAkDG,QAAlD;AACH,SAlBE;AAmBHK,QAAAA,yBAAyB,EAAE,mCAACR,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AAC5D,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,UAA3C,EAAuDG,QAAvD;AACH,SArBE;AAsBHM,QAAAA,sBAAsB,EAAE,gCAACT,MAAD,EAASG,QAAT,EAAmBN,aAAnB,EAAqC;AACzD,UAAA,MAAI,CAACO,gBAAL,CAAsBjR,WAAtB,EAAmC6Q,MAAnC,EAA2C,OAA3C,EAAoDG,QAApD;AACH,SAxBE;AAyBHO,QAAAA,uBAAuB,EAAE,iCAACf,IAAD,EAAOE,aAAP,EAAyB;AAC9C,UAAA,MAAI,CAACc,oBAAL,CAA0BhB,IAA1B;AACH,SA3BE;AA4BHiB,QAAAA,wBAAwB,EAAE,kCAACC,UAAD,EAAajB,QAAb,EAAuBC,aAAvB,EAAyC;AAC/D,UAAA,MAAI,CAACC,iBAAL,CAAuB1Q,kBAAvB,EAA2CyR,UAA3C,EAAuDjB,QAAvD;AACH,SA9BE;AA+BHkB,QAAAA,uBAAuB,EAAE,iCAACC,YAAD,EAAelB,aAAf,EAA8BgB,UAA9B,EAA6C;AAClE,UAAA,MAAI,CAACZ,gBAAL,CAAsB7Q,kBAAtB,EAA0C2R,YAA1C,EAAwDF,UAAxD;AACH,SAjCE;AAkCHG,QAAAA,qBAAqB,EAAE,+BAACC,QAAD,EAAWrB,QAAX,EAAqBC,aAArB,EAAuC;AAC1D,UAAA,MAAI,CAACC,iBAAL,CAAuBzQ,eAAvB,EAAwC4R,QAAxC,EAAkDrB,QAAlD;AACH,SApCE;AAqCHsB,QAAAA,qBAAqB,EAAE,+BAACC,UAAD,EAAatB,aAAb,EAA4BoB,QAA5B,EAAyC;AAC5D,UAAA,MAAI,CAAChB,gBAAL,CAAsB5Q,eAAtB,EAAuC8R,UAAvC,EAAmDF,QAAnD;AACH,SAvCE;AAwCHG,QAAAA,sBAAsB,EAAE,gCAACC,UAAD,EAAazB,QAAb,EAAuBC,aAAvB,EAAyC;AAC7D,UAAA,MAAI,CAACC,iBAAL,CAAuBxQ,0BAAvB,EAAmD+R,UAAnD,EAA+DzB,QAA/D;AACH,SA1CE;AA2CH0B,QAAAA,wBAAwB,EAAE,kCAACC,YAAD,EAAe1B,aAAf,EAA8BwB,UAA9B,EAA6C;AACnE,UAAA,MAAI,CAACpB,gBAAL,CAAsB3Q,0BAAtB,EAAkDiS,YAAlD,EAAgEF,UAAhE;AACH,SA7CE;AA8CHG,QAAAA,4BAA4B,EAAE,sCAAAnI,IAAI,EAAI;AAClC,UAAA,MAAI,CAACoI,0BAAL,CAAgCpI,IAAhC;AACH,SAhDE;AAiDHqI,QAAAA,kBAAkB,EAAE,4BAAAC,IAAI,EAAI;AACxB,UAAA,MAAI,CAACC,qBAAL,CAA2BzS,WAA3B,EAAwCwS,IAAxC;AACH,SAnDE;AAoDHE,QAAAA,kBAAkB,EAAE,4BAAAF,IAAI,EAAI;AACxB,UAAA,MAAI,CAACG,oBAAL,CAA0B3S,WAA1B,EAAuCwS,IAAvC;AACH,SAtDE;AAuDHI,QAAAA,kBAAkB,EAAE,4BAAAJ,IAAI,EAAI;AACxB,UAAA,MAAI,CAACK,oBAAL,CAA0B7S,WAA1B,EAAuCwS,IAAvC;AACH,SAzDE;AA0DHM,QAAAA,gBAAgB,EAAE,0BAAAN,IAAI,EAAI;AACtB,UAAA,MAAI,CAACK,oBAAL,CAA0B7S,WAA1B,EAAuCwS,IAAvC,EAA6C,MAAI,CAACO,oBAAL,EAA7C;AACH,SA5DE;AA6DHC,QAAAA,2BAA2B,EAAE,qCAAAR,IAAI,EAAI;AACjC,UAAA,MAAI,CAACS,iCAAL,CAAuCT,IAAvC;AACH,SA/DE;AAgEHU,QAAAA,kCAAkC,EAAE,4CAAAV,IAAI,EAAI;AACxC,UAAA,MAAI,CAACW,wCAAL,CAA8CX,IAA9C;AACH,SAlEE;AAmEHY,QAAAA,yBAAyB,EAAE,mCAAAZ,IAAI,EAAI;AAC/B,UAAA,MAAI,CAACC,qBAAL,CAA2BxS,kBAA3B,EAA+CuS,IAA/C;AACH,SArEE;AAsEHa,QAAAA,wBAAwB,EAAE,kCAAAb,IAAI,EAAI;AAC9B,UAAA,MAAI,CAACG,oBAAL,CAA0B1S,kBAA1B,EAA8CuS,IAA9C;AACH,SAxEE;AAyEHc,QAAAA,sBAAsB,EAAE,gCAAAd,IAAI,EAAI;AAC5B,UAAA,MAAI,CAACC,qBAAL,CAA2BvS,eAA3B,EAA4CsS,IAA5C;AACH,SA3EE;AA4EHe,QAAAA,sBAAsB,EAAE,gCAAAf,IAAI,EAAI;AAC5B,UAAA,MAAI,CAACG,oBAAL,CAA0BzS,eAA1B,EAA2CsS,IAA3C;AACH,SA9EE;AA+EHgB,QAAAA,uBAAuB,EAAE,iCAAAhB,IAAI,EAAI;AAC7B,UAAA,MAAI,CAACC,qBAAL,CAA2BtS,0BAA3B,EAAuDqS,IAAvD;AACH,SAjFE;AAkFHiB,QAAAA,yBAAyB,EAAE,mCAAAjB,IAAI,EAAI;AAC/B,UAAA,MAAI,CAACG,oBAAL,CAA0BxS,0BAA1B,EAAsDqS,IAAtD;AACH;AApFE,OAAP;AAsFH;;;WACD,2BAAkBpE,UAAlB,EAA8BsF,MAA9B,EAAsCjD,QAAtC,EAAgD;AAAA;;AAC5C,UAAIlC,UAAU,GAAG,KAAK,IAAI5C,MAAJ,CAAWyC,UAAX,EAAuB,QAAvB,CAAL,CAAjB;;AACA,UAAIG,UAAJ,EAAgB;AACZ,YAAIrE,IAAI,GAAG,KAAKyJ,eAAL,CAAqBvF,UAArB,EAAiCsF,MAAjC,CAAX;;AACA,YAAItF,UAAU,KAAKpO,WAAnB,EAAgC;AAC5B,eAAK4T,6BAAL,CAAmCxT,wBAAnC,EAA6D8J,IAA7D;AACH;;AACDqE,QAAAA,UAAU,CAACsF,MAAX,CAAkB3J,IAAlB,EAAwB,UAAA4J,QAAQ,EAAI;AAChC,cAAIC,SAAS,GAAGvV,aAAa,CAAC,MAAI,CAACqD,MAAL,CAAY,GAAG8J,MAAH,CAAUyC,UAAV,EAAsB,UAAtB,CAAZ,CAAD,CAA7B;AACA,cAAI4F,UAAU,GAAGD,SAAS,CAACD,QAAD,CAA1B;AACArD,UAAAA,QAAQ,CAACuD,UAAD,CAAR;;AACA,cAAI5F,UAAU,KAAKpO,WAAnB,EAAgC;AAC5B,YAAA,MAAI,CAACiU,yBAAL;;AACA,gBAAIC,QAAQ,GAAGR,MAAM,CAACQ,QAAtB;;AACA,gBAAI,KAAK,CAAL,KAAWA,QAAf,EAAyB;AACrB,kBAAIjE,eAAe,GAAG,MAAI,CAACjO,SAAL,CAAeH,MAAf,CAAsB,iBAAtB,CAAtB;;AACA,kBAAI,CAAC,CAAD,KAAOoO,eAAe,CAACK,OAAhB,CAAwB4D,QAAxB,CAAX,EAA8C;AAC1CjE,gBAAAA,eAAe,CAAChL,IAAhB,CAAqBiP,QAArB;;AACA,gBAAA,MAAI,CAAClS,SAAL,CAAeH,MAAf,CAAsB,iBAAtB,EAAyCoO,eAAzC;AACH;AACJ;;AACD,YAAA,MAAI,CAACkE,mBAAL,CAAyB,MAAI,CAACrR,uBAAL,CAA6BkR,UAA7B,CAAzB;;AACA,YAAA,MAAI,CAAC/J,kBAAL,CAAwB,eAAxB,EAAyC+J,UAAzC;;AACAI,YAAAA,UAAU,CAAC,YAAM;AACb,cAAA,MAAI,CAACrL,sBAAL;AACH,aAFS,EAEP,GAFO,CAAV;AAGH;;AACD,UAAA,MAAI,CAACsL,oBAAL,CAA0BjG,UAA1B,EAAsClE,IAAtC,EAA4C8J,UAA5C;AACH,SArBD;AAsBH;AACJ;;;WACD,0BAAiB5F,UAAjB,EAA6B5D,GAA7B,EAAkCN,IAAlC,EAAwC;AAAA;;AACpC,UAAIqE,UAAU,GAAG,KAAK,IAAI5C,MAAJ,CAAWyC,UAAX,EAAuB,QAAvB,CAAL,CAAjB;;AACA,UAAIG,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAAC+F,MAAX,CAAkB9J,GAAlB,EAAuB,YAAM;AACzB,cAAI4D,UAAU,KAAKpO,WAAnB,EAAgC;AAC5B,YAAA,OAAI,CAACiU,yBAAL;AACH;;AACD,UAAA,OAAI,CAACM,mBAAL,CAAyBnG,UAAzB,EAAqC5D,GAArC,EAA0C,OAAI,CAACgK,wBAAL,CAA8BpG,UAA9B,EAA0ClE,IAA1C,CAA1C;AACH,SALD;AAMH;AACJ;;;WACD,0BAAiBkE,UAAjB,EAA6B5D,GAA7B,EAAkCiK,SAAlC,EAA6C3G,KAA7C,EAAoD;AAAA;;AAChD,UAAIS,UAAU,GAAG,KAAK,IAAI5C,MAAJ,CAAWyC,UAAX,EAAuB,QAAvB,CAAL,CAAjB;AACA,UAAIsG,aAAa,GAAGtG,UAAU,KAAKpO,WAAnC;;AACA,UAAIuO,UAAJ,EAAgB;AACZ,YAAIoG,MAAM,GAAGlW,aAAa,CAAC,KAAKoD,MAAL,CAAY,GAAG8J,MAAH,CAAUyC,UAAV,EAAsB,GAAtB,EAA2BzC,MAA3B,CAAkC8I,SAAlC,EAA6C,MAA7C,CAAZ,CAAD,CAA1B;AACA,YAAIvK,IAAI,GAAG,EAAX;AACAyK,QAAAA,MAAM,CAACzK,IAAD,EAAO4D,KAAP,CAAN;;AACA,YAAI8G,mBAAmB,GAAGF,aAAa,IAAI,KAAKlU,MAAL,CAAYqU,OAAZ,CAAoBrK,GAApB,CAA3C;;AACA,YAAIoK,mBAAJ,EAAyB;AACrB,eAAKhB,6BAAL,CAAmCpJ,GAAnC,EAAwCN,IAAxC;AACH;;AACDqE,QAAAA,UAAU,CAACuG,MAAX,CAAkBtK,GAAlB,EAAuBN,IAAvB,EAA6B,YAAM;AAC/B,cAAIwK,aAAJ,EAAmB;AACf,gBAAIE,mBAAJ,EAAyB;AACrBrG,cAAAA,UAAU,CAAChN,kBAAX;AACH;;AACD,YAAA,OAAI,CAAC0S,yBAAL;AACH;;AACD,UAAA,OAAI,CAACc,mBAAL,CAAyB3G,UAAzB,EAAqClE,IAArC,EAA2CM,GAA3C;AACH,SARD;AASH;AACJ;;;WACD,8BAAqBN,IAArB,EAA2B;AACvB,UAAI4F,UAAU,GAAG,KAAKkF,qBAAL,CAA2B9K,IAA3B,CAAjB;;AACA,WAAK6K,mBAAL,CAAyB/U,WAAzB,EAAsC8P,UAAtC,EAAkD5F,IAAI,CAAC2B,EAAvD;AACH;;;WACD,oCAA2B3B,IAA3B,EAAiC;AAC7B,UAAIkF,OAAO,GAAG,KAAKE,uBAAL,CAA6BtP,WAA7B,CAAd;;AACA,UAAIiV,cAAc,GAAG,KAAKC,mBAAL,CAAyBhL,IAAI,CAAC6F,GAAL,CAAS,KAAKoF,wBAAL,CAA8B/F,OAA9B,CAAT,CAAzB,CAArB;;AACA,WAAKnF,kBAAL,CAAwB,YAAxB,EAAsCgL,cAAtC;AACH;;;WACD,6BAAoB/K,IAApB,EAA0B;AACtB,UAAIkL,SAAS,GAAG,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,SAAlB,EAArC;;AACA,UAAIvB,SAAS,GAAG,KAAKwB,iBAAL,EAAhB;;AACA,UAAIC,YAAY,GAAG,KAAKC,eAAL,CAAqBL,SAArB,EAAgCrB,SAAhC,CAAnB;AACA,aAAO7J,IAAI,CAACuF,MAAL,CAAY,UAACC,QAAD,EAAWgG,IAAX,EAAoB;AACnC,YAAIlL,GAAG,GAAGuJ,SAAS,CAAC2B,IAAD,CAAnB;AACA,YAAIC,SAAS,GAAGH,YAAY,CAAChL,GAAD,CAA5B;;AACA,YAAI,CAACmL,SAAL,EAAgB;AACZjG,UAAAA,QAAQ,CAACzK,IAAT,CAAcyQ,IAAd;AACH,SAFD,MAEO;AACH,cAAIE,WAAW,GAAG,EAAlB;;AACA,eAAK,IAAI3G,KAAT,IAAkB0G,SAAlB,EAA6B;AACzBC,YAAAA,WAAW,CAAC3G,KAAD,CAAX,GAAqBM,MAAM,CAACsG,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,IAArC,EAA2CzG,KAA3C,IAAoDyG,IAAI,CAACzG,KAAD,CAAxD,GAAkE0G,SAAS,CAAC1G,KAAD,CAAhG;AACH;;AACDS,UAAAA,QAAQ,CAACzK,IAAT,CAAc2Q,WAAd;AACH;;AACD,eAAOlG,QAAP;AACH,OAbM,EAaJ,EAbI,CAAP;AAcH;;;WACD,6BAAoB;AAChB,aAAOlR,aAAa,CAAC,KAAKqD,MAAL,CAAY,GAAG8J,MAAH,CAAU3L,WAAV,EAAuB,UAAvB,CAAZ,CAAD,CAApB;AACH;;;WACD,yBAAgBkK,IAAhB,EAAsB6J,SAAtB,EAAiC;AAC7B,UAAIiC,QAAQ,GAAG,EAAf;;AACA,UAAI9L,IAAJ,EAAU;AACN,aAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,IAAI,CAACN,MAAzB,EAAiC2B,CAAC,EAAlC,EAAsC;AAClC,cAAI0K,QAAQ,GAAG/L,IAAI,CAACqB,CAAD,CAAnB;AACA,cAAIf,GAAG,GAAGuJ,SAAS,CAACkC,QAAD,CAAnB;AACAD,UAAAA,QAAQ,CAACxL,GAAD,CAAR,GAAgByL,QAAhB;AACH;AACJ;;AACD,aAAOD,QAAP;AACH;;;WACD,qCAA4B;AACxB,UAAI,CAAC,KAAKE,6BAAL,EAAL,EAA2C;AACvC,YAAIhU,UAAU,GAAG,KAAKL,MAAL,CAAY,kBAAZ,CAAjB;AACA,YAAIsU,UAAU,GAAG,KAAKd,YAAL,CAAkBe,SAAlB,GAA8BC,MAA9B,IAAwCnU,UAAU,CAACiI,KAAX,IAAoBjI,UAAU,CAACiI,KAAX,EAA7E;;AACA,aAAKF,kBAAL,CAAwB,YAAxB,EAAsCkM,UAAU,GAAGA,UAAH,GAAgBjU,UAAhE;AACH;AACJ;;;WACD,yCAAgC;AAC5B,aAAO,KAAKL,MAAL,CAAY,kCAAZ,CAAP;AACH;;;WACD,6BAAoB2N,IAApB,EAA0B;AACtB,WAAKvF,kBAAL,CAAwB,iBAAxB,EAA2CuF,IAA3C;AACH;;;WACD,uCAA8BhF,GAA9B,EAAmCN,IAAnC,EAAyC;AACrC,WAAK1J,MAAL,CAAY8V,iBAAZ,CAA8B9L,GAA9B,EAAmCN,IAAnC;AACH;;;WACD,sCAA6BM,GAA7B,EAAkCN,IAAlC,EAAwC;AAAA;;AACpC,UAAIqM,sBAAsB,GAAGC,SAAS,CAAC5M,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAW4M,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAA9F;;AACA,UAAIC,gBAAgB,GAAG,KAAKC,oBAAL,CAA0BxM,IAA1B,CAAvB;;AACA,UAAIqF,MAAM,CAACC,IAAP,CAAYiH,gBAAZ,EAA8B7M,MAA9B,GAAuC,CAA3C,EAA8C;AAC1C,aAAKpJ,MAAL,CAAYmW,QAAZ,CAAqBnM,GAArB,EAA0BiM,gBAA1B,EAA4CF,sBAAsB,GAAG,UAAC/L,GAAD,EAAMN,IAAN,EAAe;AAChF,cAAIqE,UAAU,GAAG,OAAI,CAAC,IAAI5C,MAAJ,CAAW3L,WAAX,EAAwB,QAAxB,CAAD,CAArB;;AACA,cAAIuO,UAAU,IAAIrE,IAAlB,EAAwB;AACpBqE,YAAAA,UAAU,CAACuG,MAAX,CAAkBtK,GAAlB,EAAuBN,IAAvB,EAA6B,UAACA,IAAD,EAAOM,GAAP,EAAe;AACxC,kBAAIoM,mBAAmB,GAAG,EAA1B;;AACA,cAAA,OAAI,CAACC,oBAAL,CAA0BrM,GAA1B,EAA+BoM,mBAA/B;;AACA,cAAA,OAAI,CAAC3C,yBAAL;;AACA1F,cAAAA,UAAU,CAAChN,kBAAX;;AACA,kBAAI8E,cAAc,GAAG,OAAI,CAACxE,MAAL,CAAY,gBAAZ,CAArB;;AACA,cAAA,OAAI,CAACuD,UAAL,CAAgB0R,WAAhB,CAA4BzQ,cAA5B;;AACA,cAAA,OAAI,CAAC0O,mBAAL,CAAyB/U,WAAzB,EAAsC4W,mBAAtC,EAA2DpM,GAA3D;AACH,aARD;AASH;AACJ,SAbiE,GAa9D,IAbJ;AAcH;AACJ;;;WACD,yBAAgB;AACZ,UAAI,CAAC,KAAKuM,UAAV,EAAsB;AAClB,aAAKA,UAAL,GAAkB,KAAK9U,gBAAL,CAAsB,KAAKZ,WAA3B,EAAwChC,SAAxC,EAAmD;AACjEoL,UAAAA,QAAQ,EAAE;AACNuM,YAAAA,EAAE,EAAE,KAAKtW,QAAL;AADE;AADuD,SAAnD,CAAlB;AAKH;;AACD,aAAO,KAAKqW,UAAZ;AACH;;;WACD,yCAAgC;AAC5B,WAAKE,uBAAL,GAA+B,KAAKC,qBAAL,CAA2B,oBAA3B,CAA/B;AACH;;;WACD,kCAAyB;AACrB,WAAKC,gBAAL,GAAwB,KAAKD,qBAAL,CAA2B,aAA3B,CAAxB;AACH;;;WACD,qCAA4B;AACxB,WAAKE,mBAAL,GAA2B,KAAKF,qBAAL,CAA2B,gBAA3B,CAA3B;AACH;;;WACD,sCAA6B;AACzB,WAAKG,oBAAL,GAA4B,KAAKH,qBAAL,CAA2B,iBAA3B,CAA5B;AACH;;;WACD,6CAAoC;AAChC,WAAKI,2BAAL,GAAmC,KAAKJ,qBAAL,CAA2B,wBAA3B,CAAnC;AACH;;;WACD,sCAA6B7Q,cAA7B,EAA6C;AACzC,UAAI,CAAC,KAAK4Q,uBAAV,EAAmC;AAC/B,aAAKM,6BAAL;AACH;;AACD,WAAKN,uBAAL,CAA6B;AACzB5Q,QAAAA,cAAc,EAAEA;AADS,OAA7B;AAGH;;;WACD,6BAAoBmR,WAApB,EAAiC;AAC7B,UAAI,CAAC,KAAKH,oBAAV,EAAgC;AAC5B,aAAKI,0BAAL;AACH;;AACD,WAAKJ,oBAAL,CAA0B;AACtB/I,QAAAA,IAAI,EAAEkJ;AADgB,OAA1B;AAGH;;;WACD,oCAA2BE,OAA3B,EAAoC;AAChC,UAAI,CAAC,KAAKJ,2BAAV,EAAuC;AACnC,aAAKK,iCAAL;AACH;;AACD,WAAKL,2BAAL,CAAiCI,OAAjC;AACH;;;WACD,+BAAsBtJ,UAAtB,EAAkCwJ,QAAlC,EAA4C;AACxC,UAAIC,MAAM,GAAG,KAAKC,mBAAL,CAAyB1J,UAAzB,CAAb;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEP0N,UAAAA,MAAM,EAAE,KAAKvD,wBAAL,CAA8BpG,UAA9B,EAA0CwJ,QAAQ,CAACG,MAAnD;AAFD,SAAX;AAIAF,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACAoF,QAAAA,QAAQ,CAACvN,MAAT,GAAkBmI,IAAI,CAACnI,MAAvB;AACAuN,QAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAKC,wBAAL,CAA8B5J,UAA9B,EAA0CoE,IAAI,CAACuF,MAA/C,CAAlB;;AACA,YAAI3J,UAAU,KAAKpO,WAAnB,EAAgC;AAC5B,eAAKiY,4BAAL,CAAkC7X,wBAAlC,EAA4DoS,IAAI,CAACuF,MAAjE;AACH;AACJ;AACJ;;;WACD,8BAAqB3J,UAArB,EAAiClE,IAAjC,EAAuCM,GAAvC,EAA4C;AACxC,UAAIqN,MAAM,GAAG,KAAKK,kBAAL,CAAwB9J,UAAxB,CAAb;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPuF,UAAAA,MAAM,EAAE7N,IADD;AAEPM,UAAAA,GAAG,EAAEA;AAFE,SAAX;AAIAqN,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACH;AACJ;;;WACD,8BAAqBpE,UAArB,EAAiCwJ,QAAjC,EAA2C;AACvC,UAAIC,MAAM,GAAG,KAAKM,kBAAL,CAAwB/J,UAAxB,CAAb;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEPG,UAAAA,GAAG,EAAEoN,QAAQ,CAACpN,GAFP;AAGPuN,UAAAA,MAAM,EAAE,KAAKvD,wBAAL,CAA8BpG,UAA9B,EAA0CwJ,QAAQ,CAACG,MAAnD;AAHD,SAAX;AAKAF,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACAoF,QAAAA,QAAQ,CAACvN,MAAT,GAAkBmI,IAAI,CAACnI,MAAvB;AACH;AACJ;;;WACD,6BAAoB+D,UAApB,EAAgC5D,GAAhC,EAAqCN,IAArC,EAA2C;AACvC,UAAI2N,MAAM,GAAG,KAAKO,iBAAL,CAAuBhK,UAAvB,CAAb;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPhI,UAAAA,GAAG,EAAEA,GADE;AAEPuN,UAAAA,MAAM,EAAE7N;AAFD,SAAX;AAIA2N,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACH;AACJ;;;WACD,8BAAqBpE,UAArB,EAAiCwJ,QAAjC,EAA2CC,MAA3C,EAAmD;AAC/CA,MAAAA,MAAM,GAAGA,MAAM,IAAI,KAAKQ,kBAAL,CAAwBjK,UAAxB,CAAnB;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEPG,UAAAA,GAAG,EAAEoN,QAAQ,CAACpN,GAFP;AAGP8N,UAAAA,SAAS,EAAE,KAAK9D,wBAAL,CAA8BpG,UAA9B,EAA0CwJ,QAAQ,CAACU,SAAnD,CAHJ;AAIPP,UAAAA,MAAM,EAAE,KAAKvD,wBAAL,CAA8BpG,UAA9B,EAA0CwJ,QAAQ,CAACG,MAAnD;AAJD,SAAX;AAMAF,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACAoF,QAAAA,QAAQ,CAACvN,MAAT,GAAkBmI,IAAI,CAACnI,MAAvB;AACAuN,QAAAA,QAAQ,CAACU,SAAT,GAAqB,KAAKN,wBAAL,CAA8B5J,UAA9B,EAA0CoE,IAAI,CAAC8F,SAA/C,CAArB;;AACA,YAAIlK,UAAU,KAAKpO,WAAnB,EAAgC;AAC5B,eAAKiY,4BAAL,CAAkCzF,IAAI,CAAChI,GAAvC,EAA4CgI,IAAI,CAAC8F,SAAjD;AACH;AACJ;AACJ;;;WACD,6BAAoBlK,UAApB,EAAgClE,IAAhC,EAAsCM,GAAtC,EAA2C;AACvC,UAAIqN,MAAM,GAAG,KAAKU,iBAAL,CAAuBnK,UAAvB,CAAb;;AACA,UAAIyJ,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPuF,UAAAA,MAAM,EAAE7N,IADD;AAEPM,UAAAA,GAAG,EAAEA;AAFE,SAAX;AAIAqN,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACH;AACJ;;;WACD,2CAAkCoF,QAAlC,EAA4C;AACxC,UAAIC,MAAM,GAAG,KAAKW,+BAAL,EAAb;;AACA,UAAIX,MAAJ,EAAY;AACR,YAAIrF,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEPG,UAAAA,GAAG,EAAEoN,QAAQ,CAACpN,GAFP;AAGPuN,UAAAA,MAAM,EAAE,KAAKvD,wBAAL,CAA8BxU,WAA9B,EAA2C4X,QAAQ,CAACG,MAApD,CAHD;AAIPU,UAAAA,cAAc,EAAE,KAAKC,0BAAL,CAAgC1Y,WAAhC,EAA6C4X,QAAQ,CAACa,cAAtD,CAJT;AAKPE,UAAAA,YAAY,EAAE,KAAKD,0BAAL,CAAgC1Y,WAAhC,EAA6C4X,QAAQ,CAACe,YAAtD;AALP,SAAX;AAOAd,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACAoF,QAAAA,QAAQ,CAACvN,MAAT,GAAkBmI,IAAI,CAACnI,MAAvB;AACAuN,QAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAKC,wBAAL,CAA8BhY,WAA9B,EAA2CwS,IAAI,CAACuF,MAAhD,CAAlB;AACAH,QAAAA,QAAQ,CAACa,cAAT,GAA0B,KAAKG,0BAAL,CAAgC5Y,WAAhC,EAA6CwS,IAAI,CAACiG,cAAlD,CAA1B;AACAb,QAAAA,QAAQ,CAACe,YAAT,GAAwB,KAAKC,0BAAL,CAAgC5Y,WAAhC,EAA6CwS,IAAI,CAACmG,YAAlD,CAAxB;AACH;AACJ;;;WACD,kDAAyCf,QAAzC,EAAmD;AAAA;;AAC/C,UAAIC,MAAM,GAAG,KAAKgB,sCAAL,EAAb;;AACA,UAAIhB,MAAJ,EAAY;AACR,YAAIiB,eAAe,GAAGlB,QAAQ,CAACG,MAAT,CAAgB/R,SAAhB,CAA0BmE,KAA1B,CAAgC4F,GAAhC,CAAoC,UAAAgJ,CAAC;AAAA,iBAAI,OAAI,CAACf,wBAAL,CAA8B9X,eAA9B,EAA+C6Y,CAA/C,CAAJ;AAAA,SAArC,CAAtB;AACA,YAAIvG,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEP0N,UAAAA,MAAM,EAAEe;AAFD,SAAX;AAIAjB,QAAAA,MAAM,CAACrF,IAAD,CAAN;AACAoF,QAAAA,QAAQ,CAACvN,MAAT,GAAkBmI,IAAI,CAACnI,MAAvB;AACH;AACJ;;;WACD,+BAAsBG,GAAtB,EAA2BF,KAA3B,EAAkC;AAC9B,UAAI,CAAC,KAAK6M,gBAAV,EAA4B;AACxB,aAAK6B,sBAAL;AACH;;AACD,UAAIxG,IAAI,GAAG;AACPhI,QAAAA,GAAG,EAAEA,GADE;AAEPF,QAAAA,KAAK,EAAEA,KAFA;AAGPJ,QAAAA,IAAI,EAAE,KAAK+O,WAAL,CAAiBzO,GAAjB;AAHC,OAAX;;AAKA,WAAK2M,gBAAL,CAAsB3E,IAAtB;AACH;;;WACD,kCAAyBhI,GAAzB,EAA8BF,KAA9B,EAAqC;AACjC,UAAI,CAAC,KAAK8M,mBAAV,EAA+B;AAC3B,aAAK8B,yBAAL;AACH;;AACD,UAAI1G,IAAI,GAAG;AACPnI,QAAAA,MAAM,EAAE,KADD;AAEPH,QAAAA,IAAI,EAAE,KAAK+O,WAAL,CAAiBzO,GAAjB,CAFC;AAGPF,QAAAA,KAAK,EAAEA,KAHA;AAIPE,QAAAA,GAAG,EAAEA;AAJE,OAAX;;AAMA,WAAK4M,mBAAL,CAAyB5E,IAAzB;;AACA,aAAO,CAACA,IAAI,CAACnI,MAAb;AACH;;;WACD,6BAAoB+D,UAApB,EAAgC;AAC5B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAKmZ,uBAAL,EAAP;;AACJ,aAAKlZ,kBAAL;AACI,iBAAO,KAAKmZ,6BAAL,EAAP;;AACJ,aAAKlZ,eAAL;AACI,iBAAO,KAAKmZ,2BAAL,EAAP;;AACJ,aAAKlZ,0BAAL;AACI,iBAAO,KAAKmZ,2BAAL,EAAP;AARR;;AAUA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,4BAAmBlL,UAAnB,EAA+B;AAC3B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAKuZ,sBAAL,EAAP;;AACJ,aAAKtZ,kBAAL;AACI,iBAAO,KAAKuZ,4BAAL,EAAP;;AACJ,aAAKtZ,eAAL;AACI,iBAAO,KAAKuZ,0BAAL,EAAP;;AACJ,aAAKtZ,0BAAL;AACI,iBAAO,KAAKuZ,0BAAL,EAAP;AARR;;AAUA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,4BAAmBtL,UAAnB,EAA+B;AAC3B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAK2Z,sBAAL,EAAP;;AACJ,aAAK1Z,kBAAL;AACI,iBAAO,KAAK2Z,4BAAL,EAAP;;AACJ,aAAK1Z,eAAL;AACI,iBAAO,KAAK2Z,0BAAL,EAAP;;AACJ,aAAK1Z,0BAAL;AACI,iBAAO,KAAK2Z,6BAAL,EAAP;AARR;;AAUA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,2BAAkB1L,UAAlB,EAA8B;AAC1B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAK+Z,qBAAL,EAAP;;AACJ,aAAK9Z,kBAAL;AACI,iBAAO,KAAK+Z,2BAAL,EAAP;;AACJ,aAAK9Z,eAAL;AACI,iBAAO,KAAK+Z,yBAAL,EAAP;;AACJ,aAAK9Z,0BAAL;AACI,iBAAO,KAAK+Z,4BAAL,EAAP;AARR;;AAUA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,4BAAmB9L,UAAnB,EAA+B;AAC3B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAKma,sBAAL,EAAP;AAFR;;AAIA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,2BAAkB/L,UAAlB,EAA8B;AAC1B,cAAQA,UAAR;AACI,aAAKpO,WAAL;AACI,iBAAO,KAAKoa,qBAAL,EAAP;AAFR;;AAIA,aAAO,YAAM,CAAE,CAAf;AACH;;;WACD,mCAA0B;AACtB,UAAI,CAAC,KAAKC,oBAAV,EAAgC;AAC5B,aAAKC,0BAAL;AACH;;AACD,aAAO,KAAKD,oBAAZ;AACH;;;WACD,kCAAyB;AACrB,UAAI,CAAC,KAAKE,mBAAV,EAA+B;AAC3B,aAAKC,yBAAL;AACH;;AACD,aAAO,KAAKD,mBAAZ;AACH;;;WACD,kCAAyB;AACrB,UAAI,CAAC,KAAKE,mBAAV,EAA+B;AAC3B,aAAKC,yBAAL;AACH;;AACD,aAAO,KAAKD,mBAAZ;AACH;;;WACD,iCAAwB;AACpB,UAAI,CAAC,KAAKE,kBAAV,EAA8B;AAC1B,aAAKC,wBAAL;AACH;;AACD,aAAO,KAAKD,kBAAZ;AACH;;;WACD,kCAAyB;AACrB,UAAI,CAAC,KAAKE,mBAAV,EAA+B;AAC3B,aAAKC,yBAAL;AACH;;AACD,aAAO,KAAKD,mBAAZ;AACH;;;WACD,iCAAwB;AACpB,UAAI,CAAC,KAAKE,kBAAV,EAA8B;AAC1B,aAAKC,wBAAL;AACH;;AACD,aAAO,KAAKD,kBAAZ;AACH;;;WACD,gCAAuB;AACnB,UAAI,CAAC,KAAKE,iBAAV,EAA6B;AACzB,aAAKC,uBAAL;AACH;;AACD,aAAO,KAAKD,iBAAZ;AACH;;;WACD,2CAAkC;AAC9B,UAAI,CAAC,KAAKE,4BAAV,EAAwC;AACpC,aAAKC,kCAAL;AACH;;AACD,aAAO,KAAKD,4BAAZ;AACH;;;WACD,kDAAyC;AACrC,UAAI,CAAC,KAAKE,mCAAV,EAA+C;AAC3C,aAAKC,yCAAL;AACH;;AACD,aAAO,KAAKD,mCAAZ;AACH;;;WACD,yCAAgC;AAC5B,UAAI,CAAC,KAAKE,0BAAV,EAAsC;AAClC,aAAKC,gCAAL;AACH;;AACD,aAAO,KAAKD,0BAAZ;AACH;;;WACD,wCAA+B;AAC3B,UAAI,CAAC,KAAKE,yBAAV,EAAqC;AACjC,aAAKC,+BAAL;AACH;;AACD,aAAO,KAAKD,yBAAZ;AACH;;;WACD,wCAA+B;AAC3B,UAAI,CAAC,KAAKE,yBAAV,EAAqC;AACjC,aAAKC,+BAAL;AACH;;AACD,aAAO,KAAKD,yBAAZ;AACH;;;WACD,uCAA8B;AAC1B,UAAI,CAAC,KAAKE,wBAAV,EAAoC;AAChC,aAAKC,8BAAL;AACH;;AACD,aAAO,KAAKD,wBAAZ;AACH;;;WACD,uCAA8B;AAC1B,UAAI,CAAC,KAAKE,wBAAV,EAAoC;AAChC,aAAKC,8BAAL;AACH;;AACD,aAAO,KAAKD,wBAAZ;AACH;;;WACD,sCAA6B;AACzB,UAAI,CAAC,KAAKE,uBAAV,EAAmC;AAC/B,aAAKC,6BAAL;AACH;;AACD,aAAO,KAAKD,uBAAZ;AACH;;;WACD,sCAA6B;AACzB,UAAI,CAAC,KAAKE,uBAAV,EAAmC;AAC/B,aAAKC,6BAAL;AACH;;AACD,aAAO,KAAKD,uBAAZ;AACH;;;WACD,qCAA4B;AACxB,UAAI,CAAC,KAAKE,sBAAV,EAAkC;AAC9B,aAAKC,4BAAL;AACH;;AACD,aAAO,KAAKD,sBAAZ;AACH;;;WACD,uCAA8B;AAC1B,UAAI,CAAC,KAAKE,wBAAV,EAAoC;AAChC,aAAKC,8BAAL;AACH;;AACD,aAAO,KAAKD,wBAAZ;AACH;;;WACD,sCAA6B;AACzB,UAAI,CAAC,KAAKE,uBAAV,EAAmC;AAC/B,aAAKC,6BAAL;AACH;;AACD,aAAO,KAAKD,uBAAZ;AACH;;;WACD,yCAAgC;AAC5B,UAAI,CAAC,KAAKE,0BAAV,EAAsC;AAClC,aAAKC,gCAAL;AACH;;AACD,aAAO,KAAKD,0BAAZ;AACH;;;WACD,wCAA+B;AAC3B,UAAI,CAAC,KAAKE,yBAAV,EAAqC;AACjC,aAAKC,+BAAL;AACH;;AACD,aAAO,KAAKD,yBAAZ;AACH;;;WACD,4CAAmC;AAC/B,WAAKF,0BAAL,GAAkC,KAAKzF,qBAAL,CAA2B,uBAA3B,CAAlC;AACH;;;WACD,2CAAkC;AAC9B,WAAK2F,yBAAL,GAAiC,KAAK3F,qBAAL,CAA2B,sBAA3B,CAAjC;AACH;;;WACD,sCAA6B;AACzB,WAAKmD,oBAAL,GAA4B,KAAKnD,qBAAL,CAA2B,iBAA3B,CAA5B;AACH;;;WACD,qCAA4B;AACxB,WAAKqD,mBAAL,GAA2B,KAAKrD,qBAAL,CAA2B,gBAA3B,CAA3B;AACH;;;WACD,qCAA4B;AACxB,WAAKuD,mBAAL,GAA2B,KAAKvD,qBAAL,CAA2B,gBAA3B,CAA3B;AACH;;;WACD,oCAA2B;AACvB,WAAKyD,kBAAL,GAA0B,KAAKzD,qBAAL,CAA2B,eAA3B,CAA1B;AACH;;;WACD,qCAA4B;AACxB,WAAK2D,mBAAL,GAA2B,KAAK3D,qBAAL,CAA2B,gBAA3B,CAA3B;AACH;;;WACD,oCAA2B;AACvB,WAAK6D,kBAAL,GAA0B,KAAK7D,qBAAL,CAA2B,eAA3B,CAA1B;AACH;;;WACD,mCAA0B;AACtB,WAAK+D,iBAAL,GAAyB,KAAK/D,qBAAL,CAA2B,cAA3B,CAAzB;AACH;;;WACD,8CAAqC;AACjC,WAAKiE,4BAAL,GAAoC,KAAKjE,qBAAL,CAA2B,yBAA3B,CAApC;AACH;;;WACD,qDAA4C;AACxC,WAAKmE,mCAAL,GAA2C,KAAKnE,qBAAL,CAA2B,gCAA3B,CAA3C;AACH;;;WACD,4CAAmC;AAC/B,WAAKqE,0BAAL,GAAkC,KAAKrE,qBAAL,CAA2B,uBAA3B,CAAlC;AACH;;;WACD,2CAAkC;AAC9B,WAAKuE,yBAAL,GAAiC,KAAKvE,qBAAL,CAA2B,sBAA3B,CAAjC;AACH;;;WACD,2CAAkC;AAC9B,WAAKyE,yBAAL,GAAiC,KAAKzE,qBAAL,CAA2B,sBAA3B,CAAjC;AACH;;;WACD,0CAAiC;AAC7B,WAAK2E,wBAAL,GAAgC,KAAK3E,qBAAL,CAA2B,qBAA3B,CAAhC;AACH;;;WACD,0CAAiC;AAC7B,WAAK6E,wBAAL,GAAgC,KAAK7E,qBAAL,CAA2B,qBAA3B,CAAhC;AACH;;;WACD,yCAAgC;AAC5B,WAAK+E,uBAAL,GAA+B,KAAK/E,qBAAL,CAA2B,oBAA3B,CAA/B;AACH;;;WACD,yCAAgC;AAC5B,WAAKiF,uBAAL,GAA+B,KAAKjF,qBAAL,CAA2B,oBAA3B,CAA/B;AACH;;;WACD,wCAA+B;AAC3B,WAAKmF,sBAAL,GAA8B,KAAKnF,qBAAL,CAA2B,mBAA3B,CAA9B;AACH;;;WACD,0CAAiC;AAC7B,WAAKqF,wBAAL,GAAgC,KAAKrF,qBAAL,CAA2B,qBAA3B,CAAhC;AACH;;;WACD,yCAAgC;AAC5B,WAAKuF,uBAAL,GAA+B,KAAKvF,qBAAL,CAA2B,oBAA3B,CAA/B;AACH;;;WACD,kCAAyB9I,UAAzB,EAAqC2O,QAArC,EAA+C;AAAA;;AAC3C,aAAOxN,MAAM,CAACC,IAAP,CAAYuN,QAAZ,EAAsBtN,MAAtB,CAA6B,UAACC,QAAD,EAAWsN,CAAX,EAAiB;AACjD,YAAIC,WAAW,GAAG,OAAI,CAACC,mBAAL,CAAyB9O,UAAzB,EAAqC4O,CAArC,CAAlB;;AACA,YAAIC,WAAJ,EAAiB;AACb,cAAItI,MAAM,GAAGlW,aAAa,CAACwe,WAAD,CAA1B;AACAtI,UAAAA,MAAM,CAACjF,QAAD,EAAWqN,QAAQ,CAACC,CAAD,CAAnB,CAAN;AACH;;AACD,eAAOtN,QAAP;AACH,OAPM,EAOJ,EAPI,CAAP;AAQH;;;WACD,kCAAyBtB,UAAzB,EAAqC0B,UAArC,EAAiD;AAC7C,UAAIiN,QAAQ,GAAG,EAAf;;AACA,UAAIjN,UAAJ,EAAgB;AACZ,YAAIqN,YAAY,GAAG,KAAKtb,MAAL,CAAYuM,UAAZ,CAAnB;;AACA,aAAK,IAAIa,KAAT,IAAkBkO,YAAlB,EAAgC;AAC5B,cAAIjO,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY7O,wBAAZ,CAAlB;AACA,cAAI8c,eAAe,GAAGlO,WAAW,IAAIiO,YAAY,CAACjO,WAAW,CAAC,CAAD,CAAZ,CAAjD;;AACA,cAAIkO,eAAe,IAAI,KAAK,CAAL,KAAWtN,UAAU,CAACsN,eAAD,CAA5C,EAA+D;AAC3D,gBAAIC,MAAM,GAAG7e,aAAa,CAAC4e,eAAD,CAA1B;AACA,gBAAIE,aAAa,GAAGpO,WAAW,CAAC,CAAD,CAA/B;AACA6N,YAAAA,QAAQ,CAACO,aAAD,CAAR,GAA0BD,MAAM,CAACvN,UAAD,CAAhC;AACH;AACJ;AACJ;;AACD,aAAOiN,QAAP;AACH;;;WACD,6BAAoB3O,UAApB,EAAgCmP,SAAhC,EAA2C;AACvC,UAAID,aAAa,GAAGC,SAApB;;AACA,UAAI,SAASA,SAAb,EAAwB;AACpBD,QAAAA,aAAa,GAAG,KAAhB;AACH;;AACD,aAAO,KAAKzb,MAAL,CAAY,GAAG8J,MAAH,CAAUyC,UAAV,EAAsB,GAAtB,EAA2BzC,MAA3B,CAAkC2R,aAAlC,EAAiD,MAAjD,CAAZ,CAAP;AACH;;;WACD,oCAA2BlP,UAA3B,EAAuCoP,MAAvC,EAA+C;AAAA;;AAC3C,aAAOA,MAAM,CAAC/N,MAAP,CAAc,UAACC,QAAD,EAAWsN,CAAX,EAAiB;AAClC,YAAIC,WAAW,GAAG,OAAI,CAACC,mBAAL,CAAyB9O,UAAzB,EAAqC4O,CAArC,CAAlB;;AACA,YAAIC,WAAJ,EAAiB;AACbvN,UAAAA,QAAQ,CAACzK,IAAT,CAAcgY,WAAd;AACH;;AACD,eAAOvN,QAAP;AACH,OANM,EAMJ,EANI,CAAP;AAOH;;;WACD,oCAA2BtB,UAA3B,EAAuCoP,MAAvC,EAA+C;AAC3C,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIN,YAAY,GAAG,KAAKtb,MAAL,CAAYuM,UAAZ,CAAnB;;AACA,WAAK,IAAIa,KAAT,IAAkBkO,YAAlB,EAAgC;AAC5B,YAAIjO,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY7O,wBAAZ,CAAlB;AACA,YAAI8c,eAAe,GAAGlO,WAAW,IAAIiO,YAAY,CAACjO,WAAW,CAAC,CAAD,CAAZ,CAAjD;;AACA,YAAIkO,eAAe,IAAII,MAAM,CAAClN,OAAP,CAAe8M,eAAf,IAAkC,CAAC,CAA1D,EAA6D;AACzD,cAAIE,aAAa,GAAGpO,WAAW,CAAC,CAAD,CAA/B;AACAuO,UAAAA,UAAU,CAACxY,IAAX,CAAgBqY,aAAhB;AACH;AACJ;;AACD,aAAOG,UAAP;AACH;;;WACD,oCAA2B;AACvB,UAAIN,YAAY,GAAG,EAAnB;AACA,UAAIO,gBAAgB,GAAG,KAAK7b,MAAL,CAAY7B,WAAZ,CAAvB;;AACA,WAAK,IAAIiP,KAAT,IAAkByO,gBAAlB,EAAoC;AAChC,YAAIxO,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY7O,wBAAZ,CAAlB;AACA,YAAI8c,eAAe,GAAGlO,WAAW,IAAIwO,gBAAgB,CAACxO,WAAW,CAAC,CAAD,CAAZ,CAArD;;AACA,YAAIkO,eAAJ,EAAqB;AACjBD,UAAAA,YAAY,CAAClY,IAAb,CAAkBmY,eAAlB;AACH;AACJ;;AACD,aAAOD,YAAP;AACH;;;WACD,gCAAuB;AACnB,UAAI/a,OAAO,GAAG,KAAKP,MAAL,CAAY,SAAZ,CAAd;AACA,UAAI8b,YAAY,GAAGvb,OAAO,IAAIA,OAAO,CAAC2N,GAAR,CAAY,UAAA6N,CAAC;AAAA,eAAIA,CAAC,CAAClS,SAAN;AAAA,OAAb,CAA9B;;AACA,UAAIyR,YAAY,GAAG,KAAKU,wBAAL,EAAnB;;AACA,aAAOF,YAAY,GAAGA,YAAY,CAACxN,MAAb,CAAoB,UAAA6M,CAAC;AAAA,eAAIG,YAAY,CAAC7M,OAAb,CAAqB0M,CAArB,IAA0B,CAA9B;AAAA,OAArB,CAAH,GAA2D,EAA9E;AACH;;;WACD,8BAAqB9S,IAArB,EAA2B;AACvB,aAAO,KAAK4T,oBAAL,GAA4BrO,MAA5B,CAAmC,UAACC,QAAD,EAAWT,KAAX,EAAqB;AAC3D,YAAI/E,IAAI,IAAI,KAAK,CAAL,KAAWA,IAAI,CAAC+E,KAAD,CAA3B,EAAoC;AAChCS,UAAAA,QAAQ,CAACT,KAAD,CAAR,GAAkB/E,IAAI,CAAC+E,KAAD,CAAtB;AACH;;AACD,eAAOS,QAAP;AACH,OALM,EAKJ,EALI,CAAP;AAMH;;;WACD,8BAAqBlF,GAArB,EAA0BN,IAA1B,EAAgC;AAC5B,UAAIA,IAAJ,EAAU;AACN,YAAIkL,SAAS,GAAG,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,SAAlB,EAArC;;AACA,YAAIvB,SAAS,GAAGvV,aAAa,CAAC,KAAKqD,MAAL,CAAY,GAAG8J,MAAH,CAAU3L,WAAV,EAAuB,UAAvB,CAAZ,CAAD,CAA7B;AACA,YAAI2V,SAAS,GAAGP,SAAS,IAAIA,SAAS,CAACjF,MAAV,CAAiB,UAAA4N,GAAG;AAAA,iBAAIhK,SAAS,CAACgK,GAAD,CAAT,KAAmBvT,GAAvB;AAAA,SAApB,EAAgD,CAAhD,CAA7B;;AACA,YAAIwT,YAAY,GAAG,KAAKF,oBAAL,EAAnB;;AACA,aAAK,IAAIvS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyS,YAAY,CAACpU,MAAjC,EAAyC2B,CAAC,EAA1C,EAA8C;AAC1C,cAAI0D,KAAK,GAAG+O,YAAY,CAACzS,CAAD,CAAxB;;AACA,cAAIgE,MAAM,CAACsG,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,SAArC,EAAgD1G,KAAhD,CAAJ,EAA4D;AACxD/E,YAAAA,IAAI,CAAC+E,KAAD,CAAJ,GAAc0G,SAAS,CAAC1G,KAAD,CAAvB;AACH;AACJ;AACJ;AACJ;;;WACD,2BAAkB7I,cAAlB,EAAkC;AAC9B,aAAOA,cAAc,GAAG,QAAH,GAAc,MAAnC;AACH;;;WACD,iCAAwB6X,OAAxB,EAAiC;AAC7B,aAAO,KAAK,CAAL,KAAWA,OAAX,IAAsB,SAASA,OAA/B,GAAyC,EAAzC,GAA8C,CAACA,OAAD,CAArD;AACH;;;WACD,4BAAmB;AACf,UAAI9T,KAAK,GAAG,KAAKtI,MAAL,CAAY,eAAZ,CAAZ;AACA,aAAOsI,KAAK,GAAGA,KAAH,GAAW,EAAvB;AACH;;;WACD,iCAAwB;AACpB,UAAIA,KAAK,GAAG,KAAK+T,gBAAL,EAAZ;;AACA,UAAI/T,KAAK,CAACP,MAAV,EAAkB;AACd,aAAKhJ,gBAAL,CAAsBud,IAAtB;AACH,OAFD,MAEO;AACH,aAAKvd,gBAAL,CAAsBwd,IAAtB;AACH;;AACD,WAAKrZ,QAAL,IAAiB,KAAKA,QAAL,CAAcsZ,WAAd,CAA0BlU,KAA1B,CAAjB;;AACA,WAAKmU,oBAAL;AACH;;;WACD,8BAAqB;AACjB,UAAIC,kBAAkB,GAAG,KAAK1c,MAAL,CAAY,aAAZ,CAAzB;;AACA,UAAI0c,kBAAkB,CAACC,OAAnB,IAA8B,KAAKtZ,eAAvC,EAAwD;AACpD,aAAKA,eAAL,CAAqBmZ,WAArB,CAAiCE,kBAAkB,CAACpU,KAApD;;AACA,aAAKmU,oBAAL;AACH;AACJ;;;WACD,gCAAuB;AACnB,WAAKlZ,UAAL,IAAmB,KAAKA,UAAL,CAAgBqZ,mBAAhB,EAAnB;AACH;;;WACD,qBAAYlb,CAAZ,EAAe;AACX,UAAI,CAAC,KAAKmb,eAAV,EAA2B;AACvB,aAAKA,eAAL,GAAuB,IAAItf,WAAJ,CAAgB,IAAhB,EAAsB,KAAKgC,QAA3B,CAAvB;AACH;;AACD,WAAKsd,eAAL,CAAqBP,IAArB,CAA0B5a,CAAC,CAAC+K,IAA5B,EAAkC/K,CAAC,CAACob,UAApC,EAAgDpb,CAAC,CAACkN,QAAlD,EAA4DlN,CAAC,CAACqb,YAA9D,EAA4E,KAAK/c,MAAL,CAAY,SAAZ,CAA5E;AACH;;;WACD,wBAAeuI,IAAf,EAAqB;AACjB,UAAI,KAAKvI,MAAL,CAAY,qBAAZ,CAAJ,EAAwC;AACpC,aAAKuD,UAAL,CAAgByZ,aAAhB,GAAgCC,iBAAhC;;AACA,YAAItM,IAAI,GAAG;AACPnI,UAAAA,MAAM,EAAE,KADD;AAEPC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAFL;AAGPyU,UAAAA,UAAU,EAAE3U,IAAI,CAACG,IAHV;AAIPyU,UAAAA,SAAS,EAAE5U,IAAI,CAACI,GAJT;AAKPL,UAAAA,KAAK,EAAErL,MAAM,CAAC,IAAD,EAAO,EAAP,EAAW,KAAKoG,eAAL,CAAqB+Z,MAAhC,CALN;AAMP/U,UAAAA,IAAI,EAAE,WAAWE,IAAI,CAACG,IAAhB,GAAuB,KAAK0O,WAAL,CAAiB7O,IAAI,CAACI,GAAtB,CAAvB,GAAoD,KAAK0U,iBAAL,CAAuB9U,IAAI,CAACI,GAA5B;AANnD,SAAX;;AAQA,aAAK2U,0BAAL,CAAgC3M,IAAhC;;AACA,YAAI,CAACA,IAAI,CAACnI,MAAV,EAAkB;AACd,eAAKnF,eAAL,CAAqBiZ,IAArB,CAA0B/T,IAAI,CAACK,QAA/B,EAAyC+H,IAAI,CAACrI,KAA9C;AACH;AACJ;AACJ;;;WACD,6BAAoB0B,EAApB,EAAwB;AACpB,WAAKzG,UAAL,CAAgBga,kBAAhB,CAAmCvT,EAAnC;AACH;;;WACD,kBAAS;AACL,UAAIwT,iBAAJ;;AACA,gBAAUA,iBAAiB,GAAG,KAAKja,UAAnC,KAAkD,KAAK,CAAL,KAAWia,iBAA7D,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAAClW,cAAlB,CAAiCmW,WAAjC,EAA1F;AACA,aAAO,KAAKla,UAAZ;AACA,aAAO,KAAKsZ,eAAZ;;AACA;AACH;;;WACD,4CAAmCa,gCAAnC,EAAqE;AAAA;;AACjE,UAAIC,QAAQ,GAAGD,gCAAgC,IAAI,KAAKE,YAAL,CAAkBF,gCAAlB,CAAnD;;AACA,UAAIG,sBAAsB,GAAGF,QAAQ,IAAK,UAAChb,SAAD,EAAYkR,IAAZ,EAAqB;AAC3D8J,QAAAA,QAAQ,CAACG,MAAT,CAAgB;AACZC,UAAAA,KAAK,EAAE,OAAI,CAAC5K,qBAAL,CAA2BU,IAA3B,CADK;AAEZlR,UAAAA,SAAS,EAAElF,gBAAgB,CAAClB,CAAC,CAACoG,SAAD,CAAF;AAFf,SAAhB;AAIA,eAAO,IAAP;AACH,OAND;;AAOA,aAAOkb,sBAAP;AACH;;;WACD,oDAA2CH,gCAA3C,EAA6E;AACzE,UAAIC,QAAQ,GAAGD,gCAAgC,IAAI,KAAKE,YAAL,CAAkBF,gCAAlB,CAAnD;;AACA,UAAIG,sBAAsB,GAAGF,QAAQ,IAAK,UAAChb,SAAD,EAAYkR,IAAZ,EAAkBjF,QAAlB,EAA4BoP,IAA5B,EAAqC;AAC3EL,QAAAA,QAAQ,CAACG,MAAT,CAAgB;AACZC,UAAAA,KAAK,EAAElK,IADK;AAEZlR,UAAAA,SAAS,EAAElF,gBAAgB,CAAClB,CAAC,CAACoG,SAAD,CAAF,CAFf;AAGZsb,UAAAA,UAAU,EAAE,sBAAM;AACdrP,YAAAA,QAAQ,CAACoP,IAAD,CAAR;AACH;AALW,SAAhB;AAOA,eAAO,IAAP;AACH,OATD;;AAUA,aAAOH,sBAAP;AACH;;;WACD,gDAAuCH,gCAAvC,EAAyE;AACrE,UAAIC,QAAQ,GAAGD,gCAAgC,IAAI,KAAKE,YAAL,CAAkBF,gCAAlB,CAAnD;;AACA,UAAIG,sBAAsB,GAAGF,QAAQ,IAAK,UAAChb,SAAD,EAAYkR,IAAZ,EAAkBjF,QAAlB,EAA4BoP,IAA5B,EAAqC;AAC3EL,QAAAA,QAAQ,CAACG,MAAT,CAAgB;AACZC,UAAAA,KAAK,EAAElK,IADK;AAEZlR,UAAAA,SAAS,EAAElF,gBAAgB,CAAClB,CAAC,CAACoG,SAAD,CAAF,CAFf;AAGZsb,UAAAA,UAAU,EAAE,sBAAM;AACdrP,YAAAA,QAAQ,CAACoP,IAAD,CAAR;AACH;AALW,SAAhB;AAOA,eAAO,IAAP;AACH,OATD;;AAUA,aAAOH,sBAAP;AACH;;;WACD,qCAA4BK,yBAA5B,EAAuD;AAAA;;AACnD,UAAIP,QAAQ,GAAGO,yBAAyB,IAAI,KAAKN,YAAL,CAAkBM,yBAAlB,CAA5C;;AACA,UAAIL,sBAAsB,GAAGF,QAAQ,IAAK,UAAChb,SAAD,EAAYkR,IAAZ,EAAkBjF,QAAlB,EAA4BL,KAA5B,EAAsC;AAC5EsF,QAAAA,IAAI,CAACsK,QAAL,GAAgB,OAAI,CAAChL,qBAAL,CAA2BU,IAAI,CAACsK,QAAhC,CAAhB;AACAR,QAAAA,QAAQ,CAACG,MAAT,CAAgB;AACZC,UAAAA,KAAK,EAAElK,IADK;AAEZlR,UAAAA,SAAS,EAAElF,gBAAgB,CAAClB,CAAC,CAACoG,SAAD,CAAF,CAFf;AAGZsb,UAAAA,UAAU,EAAE,sBAAM;AACdrP,YAAAA,QAAQ,CAACjM,SAAD,EAAY4L,KAAZ,CAAR;AACH;AALW,SAAhB;AAOA,eAAO,IAAP;AACH,OAVD;;AAWA,aAAOsP,sBAAP;AACH;;;WACD,8BAAqB;AACjB,aAAO5gB,MAAM,gFAA6B;AACtC8G,QAAAA,KAAK,EAAE;AACH1D,UAAAA,UAAU,EAAE,IADT;AAEHJ,UAAAA,OAAO,EAAE,IAFN;AAGHC,UAAAA,YAAY,EAAE,UAHX;AAIHke,UAAAA,SAAS,EAAE,OAJR;AAKHC,UAAAA,OAAO,EAAE,KALN;AAMHC,UAAAA,YAAY,EAAE,UANX;AAOHC,UAAAA,SAAS,EAAE,OAPR;AAQHC,UAAAA,SAAS,EAAE;AARR,SAD+B;AAWtCva,QAAAA,YAAY,EAAE;AACV5D,UAAAA,UAAU,EAAE,IADF;AAEVJ,UAAAA,OAAO,EAAE,IAFC;AAGVwe,UAAAA,iBAAiB,EAAE,eAHT;AAIVC,UAAAA,eAAe,EAAE,aAJP;AAKVC,UAAAA,QAAQ,EAAE;AALA,SAXwB;AAkBtCxa,QAAAA,SAAS,EAAE;AACP9D,UAAAA,UAAU,EAAE,IADL;AAEPJ,UAAAA,OAAO,EAAE,IAFF;AAGP2e,UAAAA,QAAQ,EAAE,MAHH;AAIPJ,UAAAA,SAAS,EAAE;AAJJ,SAlB2B;AAwBtCna,QAAAA,mBAAmB,EAAE;AACjBhE,UAAAA,UAAU,EAAE,IADK;AAEjBJ,UAAAA,OAAO,EAAE,IAFQ;AAGjB4e,UAAAA,UAAU,EAAE,QAHK;AAIjBC,UAAAA,cAAc,EAAE;AAJC,SAxBiB;AA8BtCve,QAAAA,OAAO,EAAE,KAAK,CA9BwB;AA+BtCwe,QAAAA,aAAa,EAAE,GA/BuB;AAgCtCta,QAAAA,aAAa,EAAE,IAhCuB;AAiCtCC,QAAAA,iBAAiB,EAAE,QAjCmB;AAkCtCC,QAAAA,cAAc,EAAE,KAAK,CAlCiB;AAmCtCH,QAAAA,cAAc,EAAE,KAAK,CAnCiB;AAoCtC5C,QAAAA,kBAAkB,EAAE,IApCkB;AAqCtC6E,QAAAA,WAAW,EAAE,IArCyB;AAsCtCC,QAAAA,cAAc,EAAE,IAtCsB;AAuCtCsY,QAAAA,eAAe,EAAE,IAvCqB;AAwCtCC,QAAAA,cAAc,EAAE,IAxCsB;AAyCtCC,QAAAA,cAAc,EAAE,IAzCsB;AA0CtCC,QAAAA,aAAa,EAAE,IA1CuB;AA2CtCC,QAAAA,cAAc,EAAE,IA3CsB;AA4CtCC,QAAAA,aAAa,EAAE,IA5CuB;AA6CtCC,QAAAA,YAAY,EAAE,IA7CwB;AA8CtCC,QAAAA,uBAAuB,EAAE,IA9Ca;AA+CtCC,QAAAA,qBAAqB,EAAE,IA/Ce;AAgDtCC,QAAAA,oBAAoB,EAAE,IAhDgB;AAiDtCC,QAAAA,oBAAoB,EAAE,IAjDgB;AAkDtCC,QAAAA,mBAAmB,EAAE,IAlDiB;AAmDtCC,QAAAA,mBAAmB,EAAE,IAnDiB;AAoDtCC,QAAAA,kBAAkB,EAAE,IApDkB;AAqDtCC,QAAAA,kBAAkB,EAAE,IArDkB;AAsDtCC,QAAAA,iBAAiB,EAAE,IAtDmB;AAuDtCC,QAAAA,mBAAmB,EAAE,IAvDiB;AAwDtCC,QAAAA,kBAAkB,EAAE,IAxDkB;AAyDtCC,QAAAA,qBAAqB,EAAE,IAzDe;AA0DtCC,QAAAA,oBAAoB,EAAE,IA1DgB;AA2DtCC,QAAAA,eAAe,EAAE,IA3DqB;AA4DtChe,QAAAA,sBAAsB,EAAE,IA5Dc;AA6DtCmC,QAAAA,cAAc,EAAE,IA7DsB;AA8DtChD,QAAAA,YAAY,EAAE,IA9DwB;AA+DtCwD,QAAAA,UAAU,EAAE,KAAK,CA/DqB;AAgEtCH,QAAAA,SAAS,EAAE,MAhE2B;AAiEtCC,QAAAA,OAAO,EAAE;AACL8X,UAAAA,OAAO,EAAE,KADJ;AAEL0D,UAAAA,eAAe,EAAE,IAFZ;AAGLC,UAAAA,iBAAiB,EAAE,IAHd;AAILC,UAAAA,iBAAiB,EAAE,IAJd;AAKLC,UAAAA,qBAAqB,EAAE,IALlB;AAMLC,UAAAA,uBAAuB,EAAE,IANpB;AAOLC,UAAAA,mBAAmB,EAAE,IAPhB;AAQLC,UAAAA,qBAAqB,EAAE,IARlB;AASLC,UAAAA,qBAAqB,EAAE,IATlB;AAULC,UAAAA,yBAAyB,EAAE;AAVtB,SAjE6B;AA6EtC/b,QAAAA,UAAU,EAAE;AACRgc,UAAAA,oBAAoB,EAAE,KADd;AAERC,UAAAA,qBAAqB,EAAE;AAFf,SA7E0B;AAiFtCC,QAAAA,OAAO,EAAE,IAjF6B;AAkFtCC,QAAAA,WAAW,EAAE;AACTtE,UAAAA,OAAO,EAAE,IADA;AAETrU,UAAAA,KAAK,EAAE,KAAK;AAFH,SAlFyB;AAsFtCrC,QAAAA,0BAA0B,EAAE,IAtFU;AAuFtCE,QAAAA,kCAAkC,EAAE,IAvFE;AAwFtCE,QAAAA,8BAA8B,EAAE,IAxFM;AAyFtCE,QAAAA,mBAAmB,EAAE,IAzFiB;AA0FtC/E,QAAAA,SAAS,EAAE;AA1F2B,OAA7B,CAAb;AA4FH;;;WACD,0BAAiBmH,GAAjB,EAAsB;AAAA;;AAClB,UAAI,CAACnM,SAAS,CAACmM,GAAD,CAAd,EAAqB;AACjB,eAAO,IAAP;AACH;;AACD,UAAIuS,QAAQ,GAAG,KAAK3X,UAAL,CAAgB+D,cAAhB,CAA+B4Z,gBAA/B,CAAgDvY,GAAhD,CAAf;;AACA,aAAOuS,QAAQ,CAAChN,GAAT,CAAa,UAAAgJ,CAAC;AAAA,eAAI,OAAI,CAACvE,wBAAL,CAA8BtU,eAA9B,EAA+C6Y,CAA/C,CAAJ;AAAA,OAAd,CAAP;AACH;;;WACD,8BAAqB;AACjB,aAAO,KAAK3T,UAAL,CAAgB+D,cAAhB,CAA+B6Z,kBAA/B,EAAP;AACH;;;WACD,oCAA2B;AACvB,aAAO,KAAK5d,UAAL,CAAgB+D,cAAhB,CAA+B8Z,wBAA/B,EAAP;AACH;;;WACD,kCAAyB;AACrB,aAAO,KAAK7d,UAAL,CAAgB+D,cAAhB,CAA+B+Z,sBAA/B,EAAP;AACH;;;WACD,4CAAmC;AAC/B,aAAO,KAAK9d,UAAL,CAAgB+D,cAAhB,CAA+Bga,gCAA/B,EAAP;AACH;;;WACD,qBAAY3Y,GAAZ,EAAiB;AACb,UAAI,CAACnM,SAAS,CAACmM,GAAD,CAAd,EAAqB;AACjB,eAAO,IAAP;AACH;;AACD,UAAIuS,QAAQ,GAAG,KAAK3X,UAAL,CAAgB+D,cAAhB,CAA+B8P,WAA/B,CAA2CzO,GAA3C,CAAf;;AACA,UAAIsF,UAAU,GAAG,KAAKkF,qBAAL,CAA2B+H,QAA3B,CAAjB;AACA,aAAOjN,UAAP;AACH;;;WACD,+BAAsBiN,QAAtB,EAAgC;AAC5B,UAAIjN,UAAU,GAAGiN,QAAQ,GAAG,KAAKvI,wBAAL,CAA8BxU,WAA9B,EAA2C+c,QAA3C,CAAH,GAA0D,IAAnF;;AACA,WAAKlG,oBAAL,CAA0BkG,QAAQ,CAAClR,EAAnC,EAAuCiE,UAAvC;;AACA,aAAOA,UAAP;AACH;;;WACD,oBAAW5F,IAAX,EAAiB;AACb,WAAK+N,4BAAL,CAAkC7X,wBAAlC,EAA4D8J,IAA5D;;AACA,WAAK9E,UAAL,CAAgB+D,cAAhB,CAA+Bia,UAA/B,CAA0C,KAAKpL,wBAAL,CAA8BhY,WAA9B,EAA2CkK,IAA3C,CAA1C;AACH;;;WACD,oBAAWM,GAAX,EAAgB;AACZ,WAAKpF,UAAL,CAAgB+D,cAAhB,CAA+Bka,UAA/B,CAA0C7Y,GAA1C;AACH;;;WACD,oBAAWA,GAAX,EAAgBN,IAAhB,EAAsB;AAClB,WAAK+N,4BAAL,CAAkCzN,GAAlC,EAAuCN,IAAvC,EAA6C,IAA7C;;AACA,WAAK9E,UAAL,CAAgB+D,cAAhB,CAA+Bma,UAA/B,CAA0C9Y,GAA1C,EAA+C,KAAKwN,wBAAL,CAA8BhY,WAA9B,EAA2CkK,IAA3C,CAA/C;AACH;;;WACD,2BAAkBM,GAAlB,EAAuB;AACnB,UAAI,CAACnM,SAAS,CAACmM,GAAD,CAAd,EAAqB;AACjB,eAAO,IAAP;AACH;;AACD,UAAIuS,QAAQ,GAAG,KAAK3X,UAAL,CAAgB+D,cAAhB,CAA+B+V,iBAA/B,CAAiD1U,GAAjD,CAAf;;AACA,aAAOuS,QAAQ,GAAG,KAAKvI,wBAAL,CAA8BvU,kBAA9B,EAAkD8c,QAAlD,CAAH,GAAiE,IAAhF;AACH;;;WACD,0BAAiB7S,IAAjB,EAAuB;AACnB,WAAK9E,UAAL,CAAgB+D,cAAhB,CAA+Boa,gBAA/B,CAAgD,KAAKvL,wBAAL,CAA8B/X,kBAA9B,EAAkDiK,IAAlD,CAAhD;AACH;;;WACD,0BAAiBM,GAAjB,EAAsB;AAClB,WAAKpF,UAAL,CAAgB+D,cAAhB,CAA+Bqa,gBAA/B,CAAgDhZ,GAAhD;AACH;;;WACD,yBAAgBA,GAAhB,EAAqB;AACjB,UAAIuS,QAAQ,GAAG,KAAK3X,UAAL,CAAgB+D,cAAhB,CAA+Bsa,eAA/B,CAA+CjZ,GAA/C,CAAf;;AACA,aAAOuS,QAAQ,GAAG,KAAKvI,wBAAL,CAA8BtU,eAA9B,EAA+C6c,QAA/C,CAAH,GAA8D,IAA7E;AACH;;;WACD,wBAAevS,GAAf,EAAoB;AAChB,WAAKpF,UAAL,CAAgB+D,cAAhB,CAA+Bua,cAA/B,CAA8ClZ,GAA9C;AACH;;;WACD,wBAAeN,IAAf,EAAqByZ,QAArB,EAA+B;AAC3B,WAAKve,UAAL,CAAgB+D,cAAhB,CAA+Bya,cAA/B,CAA8C,KAAK5L,wBAAL,CAA8B9X,eAA9B,EAA+CgK,IAA/C,CAA9C,EAAoGyZ,QAApG;AACH;;;WACD,mCAA0BnZ,GAA1B,EAA+B;AAC3B,UAAIuS,QAAQ,GAAG,KAAK3X,UAAL,CAAgB+D,cAAhB,CAA+B0a,yBAA/B,CAAyDrZ,GAAzD,CAAf;;AACA,aAAOuS,QAAQ,GAAG,KAAKvI,wBAAL,CAA8BrU,0BAA9B,EAA0D4c,QAA1D,CAAH,GAAyE,IAAxF;AACH;;;WACD,8BAAqB+G,WAArB,EAAkCC,OAAlC,EAA2C;AACvC,WAAK3e,UAAL,CAAgB+D,cAAhB,CAA+B6a,oBAA/B,CAAoDF,WAApD,EAAiEC,OAAjE;AACH;;;WACD,kCAAyBD,WAAzB,EAAsCC,OAAtC,EAA+C;AAC3C,WAAK3e,UAAL,CAAgB+D,cAAhB,CAA+B8a,wBAA/B,CAAwDH,WAAxD,EAAqEC,OAArE;AACH;;;WACD,4BAAmB;AACf,WAAKtb,gBAAL;AACH;;;WACD,sBAAayb,IAAb,EAAmB;AACf,WAAK9e,UAAL,CAAgB+D,cAAhB,CAA+Bgb,YAA/B,CAA4CD,IAA5C;AACH;;;WACD,qCAA4B;AACxB,WAAK9e,UAAL,CAAgB+D,cAAhB,CAA+Bib,mBAA/B;AACH;;;WACD,qBAAY1M,OAAZ,EAAqB;AAAA;;AACjB,UAAI2M,qBAAJ,EAA2BC,mBAA3B,EAAgDC,aAAhD,EAA+DC,mBAA/D;;AACA,WAAKC,aAAL,CAAmBC,KAAnB;;AACA,UAAIC,WAAW,GAAG7lB,MAAM,CAAC,EAAD,EAAK4Y,OAAL,CAAxB;;AACA,UAAIiN,WAAW,CAACC,oBAAhB,EAAsC;AAClCD,QAAAA,WAAW,CAACE,eAAZ,GAA8BF,WAAW,CAACC,oBAA1C;AACH;;AACD,gBAAUP,qBAAqB,GAAGM,WAAW,CAACE,eAA9C,KAAkE,KAAK,CAAL,KAAWR,qBAA7E,GAAqGA,qBAArG,GAA6HM,WAAW,CAACE,eAAZ,GAA8B,UAAUP,mBAAmB,GAAG,UAAUC,aAAa,GAAG9kB,MAAM,CAACqlB,KAAjC,KAA2C,KAAK,CAAL,KAAWP,aAAtD,GAAsE,KAAK,CAA3E,GAA+EA,aAAa,CAACQ,KAA7H,KAAuI,KAAK,CAAL,KAAWT,mBAAlJ,GAAwKA,mBAAxK,GAA8L7kB,MAAM,CAACslB,KAAhW;AACA,gBAAUP,mBAAmB,GAAGG,WAAW,CAACK,MAA5C,KAAuD,KAAK,CAAL,KAAWR,mBAAlE,GAAwFA,mBAAxF,GAA8GG,WAAW,CAACK,MAAZ,GAAqB,IAAnI;AACA,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,YAAIC,iBAAJ;;AACA,YAAIC,GAAG,GAAG,UAAUD,iBAAiB,GAAG,OAAI,CAAC/f,UAAnC,KAAkD,KAAK,CAAL,KAAW+f,iBAA7D,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAAChc,cAAlB,CAAiCkc,WAAjC,CAA6CV,WAA7C,CAApG;AACAO,QAAAA,OAAO,CAACE,GAAD,CAAP;AACH,OAJM,CAAP;AAKH;;;WACD,4BAAmB;AACf,UAAIE,mBAAJ;;AACA,gBAAUA,mBAAmB,GAAG,KAAKb,aAArC,KAAuD,KAAK,CAAL,KAAWa,mBAAlE,GAAwFA,mBAAxF,GAA8G,KAAKb,aAAL,GAAqB,IAAIjlB,iBAAJ,CAAsB,IAAtB,CAAnI;AACA,aAAO,KAAKilB,aAAZ;AACH;;;WACD,wBAAejS,IAAf,EAAqB;AACjB,cAAQA,IAAI,CAAClE,IAAb;AACI,aAAK,OAAL;AACI,eAAK/M,kBAAL,CAAwBvB,WAAxB;;AACA;;AACJ,aAAK,cAAL;AACI,eAAKuB,kBAAL,CAAwBtB,kBAAxB;;AACA;;AACJ,aAAK,WAAL;AACI,eAAKsB,kBAAL,CAAwBrB,eAAxB;;AACA;;AACJ,aAAK,qBAAL;AACI,eAAKqB,kBAAL,CAAwBpB,0BAAxB;;AACA;;AACJ,aAAK,SAAL;AACI,eAAK8J,kBAAL,CAAwB,SAAxB,EAAmC,KAAK5H,mBAAL,EAAnC;;AACA;;AACJ,aAAK,eAAL;AACI,eAAKyG,sBAAL;;AACA;;AACJ,aAAK,eAAL;AACI,eAAKI,mBAAL,CAAyB,eAAzB,EAA0CsJ,IAAI,CAAC1E,KAA/C;;AACA;;AACJ,aAAK,mBAAL;AACI,eAAK5E,mBAAL,CAAyB,mBAAzB,EAA8CsJ,IAAI,CAAC1E,KAAnD;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAK5E,mBAAL,CAAyB,gBAAzB,EAA2CsJ,IAAI,CAAC1E,KAAhD;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKqG,mBAAL,CAAyB,KAAKrR,uBAAL,CAA6B0P,IAAI,CAAC1E,KAAlC,CAAzB;;AACA;;AACJ,aAAK,oBAAL;AACI,eAAKyJ,6BAAL;;AACA;;AACJ,aAAK,aAAL;AACI,eAAKyB,sBAAL;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKE,yBAAL;;AACA;;AACJ,aAAK,iBAAL;AACI,eAAKoB,0BAAL;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKE,yBAAL;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKE,yBAAL;;AACA;;AACJ,aAAK,eAAL;AACI,eAAKE,wBAAL;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKE,yBAAL;;AACA;;AACJ,aAAK,eAAL;AACI,eAAKE,wBAAL;;AACA;;AACJ,aAAK,cAAL;AACI,eAAKE,uBAAL;;AACA;;AACJ,aAAK,yBAAL;AACI,eAAKE,kCAAL;;AACA;;AACJ,aAAK,gCAAL;AACI,eAAKE,yCAAL;;AACA;;AACJ,aAAK,uBAAL;AACI,eAAKE,gCAAL;;AACA;;AACJ,aAAK,sBAAL;AACI,eAAKE,+BAAL;;AACA;;AACJ,aAAK,sBAAL;AACI,eAAKE,+BAAL;;AACA;;AACJ,aAAK,qBAAL;AACI,eAAKE,8BAAL;;AACA;;AACJ,aAAK,qBAAL;AACI,eAAKE,8BAAL;;AACA;;AACJ,aAAK,oBAAL;AACI,eAAKE,6BAAL;;AACA;;AACJ,aAAK,oBAAL;AACI,eAAKE,6BAAL;;AACA;;AACJ,aAAK,mBAAL;AACI,eAAKE,4BAAL;;AACA;;AACJ,aAAK,qBAAL;AACI,eAAKE,8BAAL;;AACA;;AACJ,aAAK,oBAAL;AACI,eAAKE,6BAAL;;AACA;;AACJ,aAAK,uBAAL;AACI,eAAKE,gCAAL;;AACA;;AACJ,aAAK,sBAAL;AACI,eAAKE,+BAAL;;AACA;;AACJ,aAAK,iBAAL;AACI,eAAKrF,0BAAL;;AACA;;AACJ,aAAK,wBAAL;AACI,eAAKE,iCAAL;;AACA;;AACJ,aAAK,gBAAL;AACI,eAAK1N,kBAAL,CAAwB,gBAAxB,EAA0C,KAAKrH,iBAAL,CAAuB4P,IAAI,CAAC1E,KAA5B,CAA1C;;AACA,eAAK5E,mBAAL,CAAyB,gBAAzB,EAA2CsJ,IAAI,CAAC1E,KAAhD;;AACA;;AACJ,aAAK,cAAL;AACI,eAAK7D,kBAAL,CAAwB,cAAxB,EAAwCuI,IAAI,CAAC1E,KAA7C;;AACA,eAAK5E,mBAAL,CAAyB,cAAzB,EAAyCsJ,IAAI,CAAC1E,KAA9C;;AACA;;AACJ,aAAK,YAAL;AACI,eAAK5E,mBAAL,CAAyB,YAAzB,EAAuCsJ,IAAI,CAAC1E,KAA5C;;AACA;;AACJ,aAAK,WAAL;AACI,eAAK5E,mBAAL,CAAyB,WAAzB,EAAsCsJ,IAAI,CAAC1E,KAA3C;;AACA;;AACJ,aAAK,SAAL;AACI,eAAK5E,mBAAL,CAAyB,SAAzB,EAAoC,KAAKrH,MAAL,CAAY2Q,IAAI,CAAClE,IAAjB,CAApC;;AACA;;AACJ,aAAK,YAAL;AACI,eAAKpF,mBAAL,CAAyB,YAAzB,EAAuC,KAAKrH,MAAL,CAAY2Q,IAAI,CAAClE,IAAjB,CAAvC;;AACA;;AACJ,aAAK,SAAL;AACI,eAAKtJ,qBAAL;;AACA;;AACJ,aAAK,aAAL;AACI,eAAKG,kBAAL;;AACA;;AACJ,aAAK,4BAAL;AACI,eAAK+D,mBAAL,CAAyB,4BAAzB,EAAuD,KAAKnB,kCAAL,CAAwCyK,IAAI,CAAC1E,KAA7C,CAAvD;;AACA;;AACJ,aAAK,oCAAL;AACI,eAAK5E,mBAAL,CAAyB,oCAAzB,EAA+D,KAAKjB,0CAAL,CAAgDuK,IAAI,CAAC1E,KAArD,CAA/D;;AACA;;AACJ,aAAK,gCAAL;AACI,eAAK5E,mBAAL,CAAyB,gCAAzB,EAA2D,KAAKf,sCAAL,CAA4CqK,IAAI,CAAC1E,KAAjD,CAA3D;;AACA;;AACJ,aAAK,qBAAL;AACI,eAAK5E,mBAAL,CAAyB,qBAAzB,EAAgD,KAAKb,2BAAL,CAAiCmK,IAAI,CAAC1E,KAAtC,CAAhD;;AACA;;AACJ,aAAK,WAAL;AACI,eAAK7D,kBAAL,CAAwB,WAAxB,EAAqCuI,IAAI,CAAC1E,KAA1C;;AACA;;AACJ,aAAK,OAAL;AACI,oFAAqB0E,IAArB;;AACA,eAAK5J,iBAAL;;AACA;;AACJ,aAAK,QAAL;AACI,oFAAqB4J,IAArB;;AACA,eAAK3J,eAAL,CAAqB,KAAKxD,SAAL,CAAe9C,MAAf,EAArB;;AACA;;AACJ;AACI,oFAAqBiQ,IAArB;;AA/JR;AAiKH;;;;EA/oDelU,M;;AAipDpBC,iBAAiB,CAAC,SAAD,EAAYgC,KAAZ,CAAjB;AACA,eAAeA,KAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    GanttView\r\n} from \"./ui.gantt.view\";\r\nimport {\r\n    GanttToolbar,\r\n    GanttContextMenuBar\r\n} from \"./ui.gantt.bars\";\r\nimport dxTreeList from \"../tree_list\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport DataOption from \"./ui.gantt.data.option\";\r\nimport SplitterControl from \"../splitter\";\r\nimport {\r\n    GanttDialog\r\n} from \"./ui.gantt.dialogs\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    GanttDataCache\r\n} from \"./ui.gantt.cache\";\r\nimport {\r\n    GanttExportHelper\r\n} from \"./ui.gantt.export_helper\";\r\nvar window = getWindow();\r\nvar GANTT_CLASS = \"dx-gantt\";\r\nvar GANTT_VIEW_CLASS = \"dx-gantt-view\";\r\nvar GANTT_COLLAPSABLE_ROW = \"dx-gantt-collapsable-row\";\r\nvar GANTT_TREE_LIST_WRAPPER = \"dx-gantt-treelist-wrapper\";\r\nvar GANTT_TOOLBAR_WRAPPER = \"dx-gantt-toolbar-wrapper\";\r\nvar GANTT_MAIN_WRAPPER = \"dx-gantt-main-wrapper\";\r\nvar GANTT_TASKS = \"tasks\";\r\nvar GANTT_DEPENDENCIES = \"dependencies\";\r\nvar GANTT_RESOURCES = \"resources\";\r\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\r\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\r\nvar GANTT_DEFAULT_ROW_HEIGHT = 34;\r\nvar GANTT_MAPPED_FIELD_REGEX = /(\\w*)Expr/;\r\nclass Gantt extends Widget {\r\n    _init() {\r\n        super._init();\r\n        this._cache = new GanttDataCache;\r\n        this._isGanttRendered = false\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.$element().addClass(GANTT_CLASS);\r\n        this._$toolbarWrapper = $(\"<div>\").addClass(GANTT_TOOLBAR_WRAPPER).appendTo(this.$element());\r\n        this._$toolbar = $(\"<div>\").appendTo(this._$toolbarWrapper);\r\n        this._$mainWrapper = $(\"<div>\").addClass(GANTT_MAIN_WRAPPER).appendTo(this.$element());\r\n        this._$treeListWrapper = $(\"<div>\").addClass(GANTT_TREE_LIST_WRAPPER).appendTo(this._$mainWrapper);\r\n        this._$treeList = $(\"<div>\").appendTo(this._$treeListWrapper);\r\n        this._$splitter = $(\"<div>\").appendTo(this._$mainWrapper);\r\n        this._$ganttView = $(\"<div>\").addClass(GANTT_VIEW_CLASS).appendTo(this._$mainWrapper);\r\n        this._$dialog = $(\"<div>\").appendTo(this.$element());\r\n        this._$loadPanel = $(\"<div>\").appendTo(this.$element());\r\n        this._$contextMenu = $(\"<div>\").appendTo(this.$element());\r\n        this._refreshDataSource(GANTT_TASKS);\r\n        this._refreshDataSource(GANTT_DEPENDENCIES);\r\n        this._refreshDataSource(GANTT_RESOURCES);\r\n        this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS)\r\n    }\r\n    _refresh() {\r\n        this._isGanttRendered = false;\r\n        super._refresh()\r\n    }\r\n    _renderContent() {\r\n        this._isMainElementVisible = this.$element().is(\":visible\");\r\n        if (this._isMainElementVisible && !this._isGanttRendered) {\r\n            this._isGanttRendered = true;\r\n            this._renderBars();\r\n            this._renderTreeList();\r\n            this._renderSplitter()\r\n        }\r\n    }\r\n    _renderTreeList() {\r\n        var {\r\n            keyExpr: keyExpr,\r\n            parentIdExpr: parentIdExpr\r\n        } = this.option(GANTT_TASKS);\r\n        this._treeList = this._createComponent(this._$treeList, dxTreeList, {\r\n            dataSource: this._tasksRaw,\r\n            keyExpr: keyExpr,\r\n            parentIdExpr: parentIdExpr,\r\n            columns: this._getTreeListColumns(),\r\n            columnResizingMode: \"nextColumn\",\r\n            height: this._getTreeListHeight(),\r\n            width: this.option(\"taskListWidth\"),\r\n            selection: {\r\n                mode: this._getSelectionMode(this.option(\"allowSelection\"))\r\n            },\r\n            selectedRowKeys: this._getArrayFromOneElement(this.option(\"selectedRowKey\")),\r\n            sorting: {\r\n                mode: \"none\"\r\n            },\r\n            scrolling: {\r\n                showScrollbar: \"onHover\",\r\n                mode: \"virtual\"\r\n            },\r\n            allowColumnResizing: true,\r\n            autoExpandAll: true,\r\n            showRowLines: this.option(\"showRowLines\"),\r\n            rootValue: this.option(\"rootValue\"),\r\n            onContentReady: e => {\r\n                this._onTreeListContentReady(e)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._onTreeListSelectionChanged(e)\r\n            },\r\n            onRowCollapsed: e => {\r\n                this._onTreeListRowCollapsed(e)\r\n            },\r\n            onRowExpanded: e => {\r\n                this._onTreeListRowExpanded(e)\r\n            },\r\n            onRowPrepared: e => {\r\n                this._onTreeListRowPrepared(e)\r\n            },\r\n            onContextMenuPreparing: e => {\r\n                this._onTreeListContextMenuPreparing(e)\r\n            },\r\n            onRowClick: e => {\r\n                this._onTreeListRowClick(e)\r\n            },\r\n            onRowDblClick: e => {\r\n                this._onTreeListRowDblClick(e)\r\n            }\r\n        })\r\n    }\r\n    _renderSplitter() {\r\n        this._splitter = this._createComponent(this._$splitter, SplitterControl, {\r\n            container: this.$element(),\r\n            leftElement: this._$treeListWrapper,\r\n            rightElement: this._$ganttView,\r\n            onApplyPanelSize: this._onApplyPanelSize.bind(this)\r\n        });\r\n        this._splitter.option(\"initialLeftPanelWidth\", this.option(\"taskListWidth\"))\r\n    }\r\n    _renderBars() {\r\n        this._bars = [];\r\n        this._toolbar = new GanttToolbar(this._$toolbar, this);\r\n        this._updateToolbarContent();\r\n        this._bars.push(this._toolbar);\r\n        this._contextMenuBar = new GanttContextMenuBar(this._$contextMenu, this);\r\n        this._updateContextMenu();\r\n        this._bars.push(this._contextMenuBar)\r\n    }\r\n    _initGanttView() {\r\n        if (this._ganttView) {\r\n            return\r\n        }\r\n        this._ganttView = this._createComponent(this._$ganttView, GanttView, {\r\n            width: \"100%\",\r\n            height: this._treeList._$element.get(0).offsetHeight,\r\n            rowHeight: this._getTreeListRowHeight(),\r\n            headerHeight: this._getTreeListHeaderHeight(),\r\n            tasks: this._tasks,\r\n            dependencies: this._dependencies,\r\n            resources: this._resources,\r\n            resourceAssignments: this._resourceAssignments,\r\n            allowSelection: this.option(\"allowSelection\"),\r\n            selectedRowKey: this.option(\"selectedRowKey\"),\r\n            showResources: this.option(\"showResources\"),\r\n            taskTitlePosition: this.option(\"taskTitlePosition\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            showRowLines: this.option(\"showRowLines\"),\r\n            scaleType: this.option(\"scaleType\"),\r\n            editing: this.option(\"editing\"),\r\n            validation: this.option(\"validation\"),\r\n            stripLines: this.option(\"stripLines\"),\r\n            bars: this._bars,\r\n            mainElement: this.$element(),\r\n            onSelectionChanged: this._onGanttViewSelectionChanged.bind(this),\r\n            onScroll: this._onGanttViewScroll.bind(this),\r\n            onDialogShowing: this._showDialog.bind(this),\r\n            onPopupMenuShowing: this._showPopupMenu.bind(this),\r\n            onExpandAll: this._expandAll.bind(this),\r\n            onCollapseAll: this._collapseAll.bind(this),\r\n            modelChangesListener: this._createModelChangesListener(),\r\n            exportHelper: this._getExportHelper(),\r\n            taskTooltipContentTemplate: this._getTaskTooltipContentTemplateFunc(this.option(\"taskTooltipContentTemplate\")),\r\n            taskProgressTooltipContentTemplate: this._getTaskProgressTooltipContentTemplateFunc(this.option(\"taskProgressTooltipContentTemplate\")),\r\n            taskTimeTooltipContentTemplate: this._getTaskTimeTooltipContentTemplateFunc(this.option(\"taskTimeTooltipContentTemplate\")),\r\n            taskContentTemplate: this._getTaskContentTemplateFunc(this.option(\"taskContentTemplate\")),\r\n            onTaskClick: e => {\r\n                this._onTreeListRowClick(e)\r\n            },\r\n            onTaskDblClick: e => {\r\n                this._onTreeListRowDblClick(e)\r\n            },\r\n            onAdjustControl: () => {\r\n                this._onAdjustControl()\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    }\r\n    _onAdjustControl() {\r\n        var elementHeight = this._$element.height();\r\n        this._updateGanttWidth();\r\n        this._setGanttHeight(elementHeight)\r\n    }\r\n    _onApplyPanelSize(e) {\r\n        this._setInnerElementsWidth(e);\r\n        this._updateGanttRowHeights()\r\n    }\r\n    _updateGanttRowHeights() {\r\n        var rowHeight = this._getTreeListRowHeight();\r\n        if (this._getGanttViewOption(\"rowHeight\") !== rowHeight) {\r\n            var _this$_ganttView;\r\n            this._setGanttViewOption(\"rowHeight\", rowHeight);\r\n            null === (_this$_ganttView = this._ganttView) || void 0 === _this$_ganttView ? void 0 : _this$_ganttView._ganttViewCore.updateRowHeights(rowHeight)\r\n        }\r\n    }\r\n    _onTreeListContentReady(e) {\r\n        if (e.component.getDataSource()) {\r\n            this._initGanttView();\r\n            this._initScrollSync(e.component)\r\n        }\r\n    }\r\n    _onTreeListRowPrepared(e) {\r\n        if (\"data\" === e.rowType && e.node.children.length > 0) {\r\n            $(e.rowElement).addClass(GANTT_COLLAPSABLE_ROW)\r\n        }\r\n    }\r\n    _onTreeListContextMenuPreparing(e) {\r\n        var _e$row, _e$row2;\r\n        if (\"data\" === (null === (_e$row = e.row) || void 0 === _e$row ? void 0 : _e$row.rowType)) {\r\n            this._setTreeListOption(\"selectedRowKeys\", [e.row.data[this.option(\"tasks.keyExpr\")]])\r\n        }\r\n        e.items = [];\r\n        var info = {\r\n            cancel: false,\r\n            event: e.event,\r\n            type: \"task\",\r\n            key: null === (_e$row2 = e.row) || void 0 === _e$row2 ? void 0 : _e$row2.key,\r\n            position: {\r\n                x: e.event.pageX,\r\n                y: e.event.pageY\r\n            }\r\n        };\r\n        this._showPopupMenu(info)\r\n    }\r\n    _onTreeListRowClick(e) {\r\n        this._raiseTaskClickAction(e.key, e.event)\r\n    }\r\n    _onTreeListRowDblClick(e) {\r\n        if (this._raiseTaskDblClickAction(e.key, e.event)) {\r\n            this._ganttView._ganttViewCore.showTaskEditDialog()\r\n        }\r\n    }\r\n    _onTreeListSelectionChanged(e) {\r\n        var selectedRowKey = e.currentSelectedRowKeys[0];\r\n        this._setGanttViewOption(\"selectedRowKey\", selectedRowKey);\r\n        this._setOptionWithoutOptionChange(\"selectedRowKey\", selectedRowKey);\r\n        this._raiseSelectionChangedAction(selectedRowKey)\r\n    }\r\n    _onTreeListRowCollapsed(e) {\r\n        this._ganttView.changeTaskExpanded(e.key, false);\r\n        this._adjustHeight()\r\n    }\r\n    _onTreeListRowExpanded(e) {\r\n        this._ganttView.changeTaskExpanded(e.key, true);\r\n        this._adjustHeight()\r\n    }\r\n    _adjustHeight() {\r\n        if (!this._hasHeight) {\r\n            this._setGanttViewOption(\"height\", 0);\r\n            this._setGanttViewOption(\"height\", this._treeList._$element.get(0).offsetHeight)\r\n        }\r\n    }\r\n    _getTreeListHeight() {\r\n        if (this._$treeList.height()) {\r\n            return this._$treeList.height()\r\n        }\r\n        this._hasHeight = isDefined(this.option(\"height\")) && \"\" !== this.option(\"height\");\r\n        return this._hasHeight ? \"100%\" : \"\"\r\n    }\r\n    _getTreeListColumns() {\r\n        var columns = this.option(\"columns\");\r\n        if (columns) {\r\n            for (var i = 0; i < columns.length; i++) {\r\n                var column = columns[i];\r\n                var isKeyColumn = column.dataField === this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")) || column.dataField === this.option(\"\".concat(GANTT_TASKS, \".parentIdExpr\"));\r\n                if (isKeyColumn && !column.dataType) {\r\n                    column.dataType = \"object\"\r\n                }\r\n            }\r\n        }\r\n        return columns\r\n    }\r\n    _onGanttViewSelectionChanged(e) {\r\n        this._setTreeListOption(\"selectedRowKeys\", this._getArrayFromOneElement(e.id))\r\n    }\r\n    _onGanttViewScroll(e) {\r\n        var treeListScrollable = this._treeList.getScrollable();\r\n        if (treeListScrollable) {\r\n            var diff = e.scrollTop - treeListScrollable.scrollTop();\r\n            if (0 !== diff) {\r\n                treeListScrollable.scrollBy({\r\n                    left: 0,\r\n                    top: diff\r\n                })\r\n            }\r\n        }\r\n    }\r\n    _onTreeListScroll(treeListScrollView) {\r\n        var ganttViewTaskAreaContainer = this._ganttView.getTaskAreaContainer();\r\n        if (ganttViewTaskAreaContainer.scrollTop !== treeListScrollView.component.scrollTop()) {\r\n            ganttViewTaskAreaContainer.scrollTop = treeListScrollView.component.scrollTop()\r\n        }\r\n    }\r\n    _expandAll() {\r\n        this._treeList.forEachNode(node => {\r\n            if (node.children && node.children.length) {\r\n                this._treeList.expandRow(node.key);\r\n                this._ganttView.changeTaskExpanded(node.key, true)\r\n            }\r\n        })\r\n    }\r\n    _collapseAll() {\r\n        this._treeList.forEachNode(node => {\r\n            if (node.children && node.children.length) {\r\n                this._treeList.collapseRow(node.key);\r\n                this._ganttView.changeTaskExpanded(node.key, false)\r\n            }\r\n        })\r\n    }\r\n    _initScrollSync(treeList) {\r\n        var treeListScrollable = treeList.getScrollable();\r\n        if (treeListScrollable) {\r\n            treeListScrollable.off(\"scroll\");\r\n            treeListScrollable.on(\"scroll\", e => {\r\n                this._onTreeListScroll(e)\r\n            })\r\n        }\r\n    }\r\n    _getTreeListRowHeight() {\r\n        var $row = this._treeList._$element.find(\".dx-data-row\");\r\n        var height = $row.length ? getBoundingRect($row.last().get(0)).height : GANTT_DEFAULT_ROW_HEIGHT;\r\n        if (!height) {\r\n            height = GANTT_DEFAULT_ROW_HEIGHT\r\n        }\r\n        this._correctRowsViewRowHeight(height);\r\n        return height\r\n    }\r\n    _correctRowsViewRowHeight(height) {\r\n        var view = this._treeList._views && this._treeList._views.rowsView;\r\n        if ((null === view || void 0 === view ? void 0 : view._rowHeight) !== height) {\r\n            view._rowHeight = height\r\n        }\r\n    }\r\n    _getTreeListHeaderHeight() {\r\n        return getBoundingRect(this._treeList._$element.find(\".dx-treelist-headers\").get(0)).height\r\n    }\r\n    _setInnerElementsWidth(widths) {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        if (!widths) {\r\n            widths = this._getPanelsWidthByOption()\r\n        }\r\n        this._setTreeListDimension(\"width\", widths.leftPanelWidth);\r\n        this._setGanttViewDimension(\"width\", widths.rightPanelWidth)\r\n    }\r\n    _setTreeListDimension(dimension, value) {\r\n        this._$treeListWrapper[dimension](value);\r\n        this._setTreeListOption(dimension, this._$treeListWrapper[dimension]())\r\n    }\r\n    _setGanttViewDimension(dimension, value) {\r\n        this._$ganttView[dimension](value);\r\n        this._setGanttViewOption(dimension, this._$ganttView[dimension]())\r\n    }\r\n    _updateGanttWidth() {\r\n        this._splitter._dimensionChanged()\r\n    }\r\n    _setGanttHeight(height) {\r\n        var _this$_ganttView2;\r\n        var toolbarHeightOffset = this._$toolbarWrapper.get(0).offsetHeight;\r\n        var mainWrapperHeight = height - toolbarHeightOffset;\r\n        this._setTreeListDimension(\"height\", mainWrapperHeight);\r\n        this._setGanttViewDimension(\"height\", mainWrapperHeight);\r\n        null === (_this$_ganttView2 = this._ganttView) || void 0 === _this$_ganttView2 ? void 0 : _this$_ganttView2._ganttViewCore.resetAndUpdate()\r\n    }\r\n    _getPanelsWidthByOption() {\r\n        return {\r\n            leftPanelWidth: this.option(\"taskListWidth\"),\r\n            rightPanelWidth: this._$element.width() - this.option(\"taskListWidth\")\r\n        }\r\n    }\r\n    _setGanttViewOption(optionName, value) {\r\n        this._ganttView && this._ganttView.option(optionName, value)\r\n    }\r\n    _getGanttViewOption(optionName, value) {\r\n        var _this$_ganttView3;\r\n        return null === (_this$_ganttView3 = this._ganttView) || void 0 === _this$_ganttView3 ? void 0 : _this$_ganttView3.option(optionName)\r\n    }\r\n    _setTreeListOption(optionName, value) {\r\n        this._treeList && this._treeList.option(optionName, value)\r\n    }\r\n    _refreshDataSource(name) {\r\n        var dataOption = this[\"_\".concat(name, \"Option\")];\r\n        if (dataOption) {\r\n            dataOption._disposeDataSource();\r\n            delete this[\"_\".concat(name, \"Option\")];\r\n            delete this[\"_\".concat(name)]\r\n        }\r\n        if (this.option(\"\".concat(name, \".dataSource\"))) {\r\n            dataOption = new DataOption(name, this._getLoadPanel(), (name, data) => {\r\n                this._dataSourceChanged(name, data)\r\n            });\r\n            dataOption.option(\"dataSource\", this._getSpecificDataSourceOption(name));\r\n            dataOption._refreshDataSource();\r\n            this[\"_\".concat(name, \"Option\")] = dataOption\r\n        }\r\n    }\r\n    _getSpecificDataSourceOption(name) {\r\n        var dataSource = this.option(\"\".concat(name, \".dataSource\"));\r\n        if (Array.isArray(dataSource)) {\r\n            return {\r\n                store: {\r\n                    type: \"array\",\r\n                    data: dataSource,\r\n                    key: this.option(\"\".concat(name, \".keyExpr\"))\r\n                }\r\n            }\r\n        }\r\n        return dataSource\r\n    }\r\n    _compileGettersByOption(optionName) {\r\n        var getters = {};\r\n        var optionValue = this.option(optionName);\r\n        for (var field in optionValue) {\r\n            var exprMatches = field.match(/(\\w*)Expr/);\r\n            if (exprMatches) {\r\n                getters[exprMatches[1]] = compileGetter(optionValue[exprMatches[0]])\r\n            }\r\n        }\r\n        return getters\r\n    }\r\n    _compileSettersByOption(optionName) {\r\n        var setters = {};\r\n        var optionValue = this.option(optionName);\r\n        for (var field in optionValue) {\r\n            var exprMatches = field.match(/(\\w*)Expr/);\r\n            if (exprMatches) {\r\n                setters[exprMatches[1]] = compileSetter(optionValue[exprMatches[0]])\r\n            }\r\n        }\r\n        return setters\r\n    }\r\n    _getStoreObject(optionName, modelObject) {\r\n        var setters = this._compileSettersByOption(optionName);\r\n        return Object.keys(setters).reduce((previous, key) => {\r\n            if (\"key\" !== key) {\r\n                setters[key](previous, modelObject[key])\r\n            }\r\n            return previous\r\n        }, {})\r\n    }\r\n    _prepareSetterMapHandler(setters) {\r\n        return data => Object.keys(setters).reduce((previous, key) => {\r\n            var resultKey = \"key\" === key ? \"id\" : key;\r\n            setters[key](previous, data[resultKey]);\r\n            return previous\r\n        }, {})\r\n    }\r\n    _prepareMapHandler(getters) {\r\n        return data => Object.keys(getters).reduce((previous, key) => {\r\n            var resultKey = \"key\" === key ? \"id\" : key;\r\n            previous[resultKey] = getters[key](data);\r\n            return previous\r\n        }, {})\r\n    }\r\n    _dataSourceChanged(dataSourceName, data) {\r\n        var getters = this._compileGettersByOption(dataSourceName);\r\n        var mappedData = data.map(this._prepareMapHandler(getters));\r\n        this[\"_\".concat(dataSourceName)] = mappedData;\r\n        this._setGanttViewOption(dataSourceName, mappedData);\r\n        if (dataSourceName === GANTT_TASKS) {\r\n            this._tasksRaw = data;\r\n            var expandedRowKeys = data.map(t => t[this.option(\"tasks.parentIdExpr\")]).filter((value, index, self) => value && self.indexOf(value) === index);\r\n            this._setTreeListOption(\"expandedRowKeys\", expandedRowKeys);\r\n            this._setTreeListOption(\"dataSource\", data)\r\n        }\r\n    }\r\n    _createModelChangesListener() {\r\n        return {\r\n            NotifyTaskCreated: (task, callback, errorCallback) => {\r\n                this._onRecordInserted(GANTT_TASKS, task, callback)\r\n            },\r\n            NotifyTaskRemoved: (taskId, errorCallback, task) => {\r\n                this._onRecordRemoved(GANTT_TASKS, taskId, task)\r\n            },\r\n            NotifyTaskTitleChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"title\", newValue)\r\n            },\r\n            NotifyTaskDescriptionChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"description\", newValue)\r\n            },\r\n            NotifyTaskStartChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"start\", newValue)\r\n            },\r\n            NotifyTaskEndChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"end\", newValue)\r\n            },\r\n            NotifyTaskProgressChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"progress\", newValue)\r\n            },\r\n            NotifyTaskColorChanged: (taskId, newValue, errorCallback) => {\r\n                this._onRecordUpdated(GANTT_TASKS, taskId, \"color\", newValue)\r\n            },\r\n            NotifyParentTaskUpdated: (task, errorCallback) => {\r\n                this._onParentTaskUpdated(task)\r\n            },\r\n            NotifyDependencyInserted: (dependency, callback, errorCallback) => {\r\n                this._onRecordInserted(GANTT_DEPENDENCIES, dependency, callback)\r\n            },\r\n            NotifyDependencyRemoved: (dependencyId, errorCallback, dependency) => {\r\n                this._onRecordRemoved(GANTT_DEPENDENCIES, dependencyId, dependency)\r\n            },\r\n            NotifyResourceCreated: (resource, callback, errorCallback) => {\r\n                this._onRecordInserted(GANTT_RESOURCES, resource, callback)\r\n            },\r\n            NotifyResourceRemoved: (resourceId, errorCallback, resource) => {\r\n                this._onRecordRemoved(GANTT_RESOURCES, resourceId, resource)\r\n            },\r\n            NotifyResourceAssigned: (assignment, callback, errorCallback) => {\r\n                this._onRecordInserted(GANTT_RESOURCE_ASSIGNMENTS, assignment, callback)\r\n            },\r\n            NotifyResourceUnassigned: (assignmentId, errorCallback, assignment) => {\r\n                this._onRecordRemoved(GANTT_RESOURCE_ASSIGNMENTS, assignmentId, assignment)\r\n            },\r\n            NotifyParentDataRecalculated: data => {\r\n                this._onParentTasksRecalculated(data)\r\n            },\r\n            NotifyTaskCreating: args => {\r\n                this._raiseInsertingAction(GANTT_TASKS, args)\r\n            },\r\n            NotifyTaskRemoving: args => {\r\n                this._raiseDeletingAction(GANTT_TASKS, args)\r\n            },\r\n            NotifyTaskUpdating: args => {\r\n                this._raiseUpdatingAction(GANTT_TASKS, args)\r\n            },\r\n            NotifyTaskMoving: args => {\r\n                this._raiseUpdatingAction(GANTT_TASKS, args, this._getTaskMovingAction())\r\n            },\r\n            NotifyTaskEditDialogShowing: args => {\r\n                this._raiseTaskEditDialogShowingAction(args)\r\n            },\r\n            NotifyResourceManagerDialogShowing: args => {\r\n                this._raiseResourceManagerDialogShowingAction(args)\r\n            },\r\n            NotifyDependencyInserting: args => {\r\n                this._raiseInsertingAction(GANTT_DEPENDENCIES, args)\r\n            },\r\n            NotifyDependencyRemoving: args => {\r\n                this._raiseDeletingAction(GANTT_DEPENDENCIES, args)\r\n            },\r\n            NotifyResourceCreating: args => {\r\n                this._raiseInsertingAction(GANTT_RESOURCES, args)\r\n            },\r\n            NotifyResourceRemoving: args => {\r\n                this._raiseDeletingAction(GANTT_RESOURCES, args)\r\n            },\r\n            NotifyResourceAssigning: args => {\r\n                this._raiseInsertingAction(GANTT_RESOURCE_ASSIGNMENTS, args)\r\n            },\r\n            NotifyResourceUnassigning: args => {\r\n                this._raiseDeletingAction(GANTT_RESOURCE_ASSIGNMENTS, args)\r\n            }\r\n        }\r\n    }\r\n    _onRecordInserted(optionName, record, callback) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        if (dataOption) {\r\n            var data = this._getStoreObject(optionName, record);\r\n            if (optionName === GANTT_TASKS) {\r\n                this._addCustomFieldsDataFromCache(GANTT_NEW_TASK_CACHE_KEY, data)\r\n            }\r\n            dataOption.insert(data, response => {\r\n                var keyGetter = compileGetter(this.option(\"\".concat(optionName, \".keyExpr\")));\r\n                var insertedId = keyGetter(response);\r\n                callback(insertedId);\r\n                if (optionName === GANTT_TASKS) {\r\n                    this._updateTreeListDataSource();\r\n                    var parentId = record.parentId;\r\n                    if (void 0 !== parentId) {\r\n                        var expandedRowKeys = this._treeList.option(\"expandedRowKeys\");\r\n                        if (-1 === expandedRowKeys.indexOf(parentId)) {\r\n                            expandedRowKeys.push(parentId);\r\n                            this._treeList.option(\"expandedRowKeys\", expandedRowKeys)\r\n                        }\r\n                    }\r\n                    this._selectTreeListRows(this._getArrayFromOneElement(insertedId));\r\n                    this._setTreeListOption(\"focusedRowKey\", insertedId);\r\n                    setTimeout(() => {\r\n                        this._updateGanttRowHeights()\r\n                    }, 300)\r\n                }\r\n                this._raiseInsertedAction(optionName, data, insertedId)\r\n            })\r\n        }\r\n    }\r\n    _onRecordRemoved(optionName, key, data) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        if (dataOption) {\r\n            dataOption.remove(key, () => {\r\n                if (optionName === GANTT_TASKS) {\r\n                    this._updateTreeListDataSource()\r\n                }\r\n                this._raiseDeletedAction(optionName, key, this._convertCoreToMappedData(optionName, data))\r\n            })\r\n        }\r\n    }\r\n    _onRecordUpdated(optionName, key, fieldName, value) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        var isTaskUpdated = optionName === GANTT_TASKS;\r\n        if (dataOption) {\r\n            var setter = compileSetter(this.option(\"\".concat(optionName, \".\").concat(fieldName, \"Expr\")));\r\n            var data = {};\r\n            setter(data, value);\r\n            var hasCustomFieldsData = isTaskUpdated && this._cache.hasData(key);\r\n            if (hasCustomFieldsData) {\r\n                this._addCustomFieldsDataFromCache(key, data)\r\n            }\r\n            dataOption.update(key, data, () => {\r\n                if (isTaskUpdated) {\r\n                    if (hasCustomFieldsData) {\r\n                        dataOption._refreshDataSource()\r\n                    }\r\n                    this._updateTreeListDataSource()\r\n                }\r\n                this._raiseUpdatedAction(optionName, data, key)\r\n            })\r\n        }\r\n    }\r\n    _onParentTaskUpdated(data) {\r\n        var mappedData = this.getTaskDataByCoreData(data);\r\n        this._raiseUpdatedAction(GANTT_TASKS, mappedData, data.id)\r\n    }\r\n    _onParentTasksRecalculated(data) {\r\n        var setters = this._compileSettersByOption(GANTT_TASKS);\r\n        var treeDataSource = this._appendCustomFields(data.map(this._prepareSetterMapHandler(setters)));\r\n        this._setTreeListOption(\"dataSource\", treeDataSource)\r\n    }\r\n    _appendCustomFields(data) {\r\n        var modelData = this._tasksOption && this._tasksOption._getItems();\r\n        var keyGetter = this._getTaskKeyGetter();\r\n        var invertedData = this.getInvertedData(modelData, keyGetter);\r\n        return data.reduce((previous, item) => {\r\n            var key = keyGetter(item);\r\n            var modelItem = invertedData[key];\r\n            if (!modelItem) {\r\n                previous.push(item)\r\n            } else {\r\n                var updatedItem = {};\r\n                for (var field in modelItem) {\r\n                    updatedItem[field] = Object.prototype.hasOwnProperty.call(item, field) ? item[field] : modelItem[field]\r\n                }\r\n                previous.push(updatedItem)\r\n            }\r\n            return previous\r\n        }, [])\r\n    }\r\n    _getTaskKeyGetter() {\r\n        return compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")))\r\n    }\r\n    getInvertedData(data, keyGetter) {\r\n        var inverted = {};\r\n        if (data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var dataItem = data[i];\r\n                var key = keyGetter(dataItem);\r\n                inverted[key] = dataItem\r\n            }\r\n        }\r\n        return inverted\r\n    }\r\n    _updateTreeListDataSource() {\r\n        if (!this._skipUpdateTreeListDataSource()) {\r\n            var dataSource = this.option(\"tasks.dataSource\");\r\n            var storeArray = this._tasksOption._getStore()._array || dataSource.items && dataSource.items();\r\n            this._setTreeListOption(\"dataSource\", storeArray ? storeArray : dataSource)\r\n        }\r\n    }\r\n    _skipUpdateTreeListDataSource() {\r\n        return this.option(\"validation.autoUpdateParentTasks\")\r\n    }\r\n    _selectTreeListRows(keys) {\r\n        this._setTreeListOption(\"selectedRowKeys\", keys)\r\n    }\r\n    _addCustomFieldsDataFromCache(key, data) {\r\n        this._cache.pullDataFromCache(key, data)\r\n    }\r\n    _saveCustomFieldsDataToCache(key, data) {\r\n        var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n        var customFieldsData = this._getCustomFieldsData(data);\r\n        if (Object.keys(customFieldsData).length > 0) {\r\n            this._cache.saveData(key, customFieldsData, forceUpdateOnKeyExpire ? (key, data) => {\r\n                var dataOption = this[\"_\".concat(GANTT_TASKS, \"Option\")];\r\n                if (dataOption && data) {\r\n                    dataOption.update(key, data, (data, key) => {\r\n                        var updatedCustomFields = {};\r\n                        this._addCustomFieldsData(key, updatedCustomFields);\r\n                        this._updateTreeListDataSource();\r\n                        dataOption._refreshDataSource();\r\n                        var selectedRowKey = this.option(\"selectedRowKey\");\r\n                        this._ganttView._selectTask(selectedRowKey);\r\n                        this._raiseUpdatedAction(GANTT_TASKS, updatedCustomFields, key)\r\n                    })\r\n                }\r\n            } : null)\r\n        }\r\n    }\r\n    _getLoadPanel() {\r\n        if (!this._loadPanel) {\r\n            this._loadPanel = this._createComponent(this._$loadPanel, LoadPanel, {\r\n                position: {\r\n                    of: this.$element()\r\n                }\r\n            })\r\n        }\r\n        return this._loadPanel\r\n    }\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    }\r\n    _createTaskClickAction() {\r\n        this._taskClickAction = this._createActionByOption(\"onTaskClick\")\r\n    }\r\n    _createTaskDblClickAction() {\r\n        this._taskDblClickAction = this._createActionByOption(\"onTaskDblClick\")\r\n    }\r\n    _createCustomCommandAction() {\r\n        this._customCommandAction = this._createActionByOption(\"onCustomCommand\")\r\n    }\r\n    _createContextMenuPreparingAction() {\r\n        this._contextMenuPreparingAction = this._createActionByOption(\"onContextMenuPreparing\")\r\n    }\r\n    _raiseSelectionChangedAction(selectedRowKey) {\r\n        if (!this._selectionChangedAction) {\r\n            this._createSelectionChangedAction()\r\n        }\r\n        this._selectionChangedAction({\r\n            selectedRowKey: selectedRowKey\r\n        })\r\n    }\r\n    _raiseCustomCommand(commandName) {\r\n        if (!this._customCommandAction) {\r\n            this._createCustomCommandAction()\r\n        }\r\n        this._customCommandAction({\r\n            name: commandName\r\n        })\r\n    }\r\n    _raiseContextMenuPreparing(options) {\r\n        if (!this._contextMenuPreparingAction) {\r\n            this._createContextMenuPreparingAction()\r\n        }\r\n        this._contextMenuPreparingAction(options)\r\n    }\r\n    _raiseInsertingAction(optionName, coreArgs) {\r\n        var action = this._getInsertingAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                cancel: false,\r\n                values: this._convertCoreToMappedData(optionName, coreArgs.values)\r\n            };\r\n            action(args);\r\n            coreArgs.cancel = args.cancel;\r\n            coreArgs.values = this._convertMappedToCoreData(optionName, args.values);\r\n            if (optionName === GANTT_TASKS) {\r\n                this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, args.values)\r\n            }\r\n        }\r\n    }\r\n    _raiseInsertedAction(optionName, data, key) {\r\n        var action = this._getInsertedAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                values: data,\r\n                key: key\r\n            };\r\n            action(args)\r\n        }\r\n    }\r\n    _raiseDeletingAction(optionName, coreArgs) {\r\n        var action = this._getDeletingAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                cancel: false,\r\n                key: coreArgs.key,\r\n                values: this._convertCoreToMappedData(optionName, coreArgs.values)\r\n            };\r\n            action(args);\r\n            coreArgs.cancel = args.cancel\r\n        }\r\n    }\r\n    _raiseDeletedAction(optionName, key, data) {\r\n        var action = this._getDeletedAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                key: key,\r\n                values: data\r\n            };\r\n            action(args)\r\n        }\r\n    }\r\n    _raiseUpdatingAction(optionName, coreArgs, action) {\r\n        action = action || this._getUpdatingAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                cancel: false,\r\n                key: coreArgs.key,\r\n                newValues: this._convertCoreToMappedData(optionName, coreArgs.newValues),\r\n                values: this._convertCoreToMappedData(optionName, coreArgs.values)\r\n            };\r\n            action(args);\r\n            coreArgs.cancel = args.cancel;\r\n            coreArgs.newValues = this._convertMappedToCoreData(optionName, args.newValues);\r\n            if (optionName === GANTT_TASKS) {\r\n                this._saveCustomFieldsDataToCache(args.key, args.newValues)\r\n            }\r\n        }\r\n    }\r\n    _raiseUpdatedAction(optionName, data, key) {\r\n        var action = this._getUpdatedAction(optionName);\r\n        if (action) {\r\n            var args = {\r\n                values: data,\r\n                key: key\r\n            };\r\n            action(args)\r\n        }\r\n    }\r\n    _raiseTaskEditDialogShowingAction(coreArgs) {\r\n        var action = this._getTaskEditDialogShowingAction();\r\n        if (action) {\r\n            var args = {\r\n                cancel: false,\r\n                key: coreArgs.key,\r\n                values: this._convertCoreToMappedData(GANTT_TASKS, coreArgs.values),\r\n                readOnlyFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.readOnlyFields),\r\n                hiddenFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.hiddenFields)\r\n            };\r\n            action(args);\r\n            coreArgs.cancel = args.cancel;\r\n            coreArgs.values = this._convertMappedToCoreData(GANTT_TASKS, args.values);\r\n            coreArgs.readOnlyFields = this._convertMappedToCoreFields(GANTT_TASKS, args.readOnlyFields);\r\n            coreArgs.hiddenFields = this._convertMappedToCoreFields(GANTT_TASKS, args.hiddenFields)\r\n        }\r\n    }\r\n    _raiseResourceManagerDialogShowingAction(coreArgs) {\r\n        var action = this._getResourceManagerDialogShowingAction();\r\n        if (action) {\r\n            var mappedResources = coreArgs.values.resources.items.map(r => this._convertMappedToCoreData(GANTT_RESOURCES, r));\r\n            var args = {\r\n                cancel: false,\r\n                values: mappedResources\r\n            };\r\n            action(args);\r\n            coreArgs.cancel = args.cancel\r\n        }\r\n    }\r\n    _raiseTaskClickAction(key, event) {\r\n        if (!this._taskClickAction) {\r\n            this._createTaskClickAction()\r\n        }\r\n        var args = {\r\n            key: key,\r\n            event: event,\r\n            data: this.getTaskData(key)\r\n        };\r\n        this._taskClickAction(args)\r\n    }\r\n    _raiseTaskDblClickAction(key, event) {\r\n        if (!this._taskDblClickAction) {\r\n            this._createTaskDblClickAction()\r\n        }\r\n        var args = {\r\n            cancel: false,\r\n            data: this.getTaskData(key),\r\n            event: event,\r\n            key: key\r\n        };\r\n        this._taskDblClickAction(args);\r\n        return !args.cancel\r\n    }\r\n    _getInsertingAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskInsertingAction();\r\n            case GANTT_DEPENDENCIES:\r\n                return this._getDependencyInsertingAction();\r\n            case GANTT_RESOURCES:\r\n                return this._getResourceInsertingAction();\r\n            case GANTT_RESOURCE_ASSIGNMENTS:\r\n                return this._getResourceAssigningAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getInsertedAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskInsertedAction();\r\n            case GANTT_DEPENDENCIES:\r\n                return this._getDependencyInsertedAction();\r\n            case GANTT_RESOURCES:\r\n                return this._getResourceInsertedAction();\r\n            case GANTT_RESOURCE_ASSIGNMENTS:\r\n                return this._getResourceAssignedAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getDeletingAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskDeletingAction();\r\n            case GANTT_DEPENDENCIES:\r\n                return this._getDependencyDeletingAction();\r\n            case GANTT_RESOURCES:\r\n                return this._getResourceDeletingAction();\r\n            case GANTT_RESOURCE_ASSIGNMENTS:\r\n                return this._getResourceUnassigningAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getDeletedAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskDeletedAction();\r\n            case GANTT_DEPENDENCIES:\r\n                return this._getDependencyDeletedAction();\r\n            case GANTT_RESOURCES:\r\n                return this._getResourceDeletedAction();\r\n            case GANTT_RESOURCE_ASSIGNMENTS:\r\n                return this._getResourceUnassignedAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getUpdatingAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskUpdatingAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getUpdatedAction(optionName) {\r\n        switch (optionName) {\r\n            case GANTT_TASKS:\r\n                return this._getTaskUpdatedAction()\r\n        }\r\n        return () => {}\r\n    }\r\n    _getTaskInsertingAction() {\r\n        if (!this._taskInsertingAction) {\r\n            this._createTaskInsertingAction()\r\n        }\r\n        return this._taskInsertingAction\r\n    }\r\n    _getTaskInsertedAction() {\r\n        if (!this._taskInsertedAction) {\r\n            this._createTaskInsertedAction()\r\n        }\r\n        return this._taskInsertedAction\r\n    }\r\n    _getTaskDeletingAction() {\r\n        if (!this._taskDeletingAction) {\r\n            this._createTaskDeletingAction()\r\n        }\r\n        return this._taskDeletingAction\r\n    }\r\n    _getTaskDeletedAction() {\r\n        if (!this._taskDeletedAction) {\r\n            this._createTaskDeletedAction()\r\n        }\r\n        return this._taskDeletedAction\r\n    }\r\n    _getTaskUpdatingAction() {\r\n        if (!this._taskUpdatingAction) {\r\n            this._createTaskUpdatingAction()\r\n        }\r\n        return this._taskUpdatingAction\r\n    }\r\n    _getTaskUpdatedAction() {\r\n        if (!this._taskUpdatedAction) {\r\n            this._createTaskUpdatedAction()\r\n        }\r\n        return this._taskUpdatedAction\r\n    }\r\n    _getTaskMovingAction() {\r\n        if (!this._taskMovingAction) {\r\n            this._createTaskMovingAction()\r\n        }\r\n        return this._taskMovingAction\r\n    }\r\n    _getTaskEditDialogShowingAction() {\r\n        if (!this._taskEditDialogShowingAction) {\r\n            this._createTaskEditDialogShowingAction()\r\n        }\r\n        return this._taskEditDialogShowingAction\r\n    }\r\n    _getResourceManagerDialogShowingAction() {\r\n        if (!this._resourceManagerDialogShowingAction) {\r\n            this._createResourceManagerDialogShowingAction()\r\n        }\r\n        return this._resourceManagerDialogShowingAction\r\n    }\r\n    _getDependencyInsertingAction() {\r\n        if (!this._dependencyInsertingAction) {\r\n            this._createDependencyInsertingAction()\r\n        }\r\n        return this._dependencyInsertingAction\r\n    }\r\n    _getDependencyInsertedAction() {\r\n        if (!this._dependencyInsertedAction) {\r\n            this._createDependencyInsertedAction()\r\n        }\r\n        return this._dependencyInsertedAction\r\n    }\r\n    _getDependencyDeletingAction() {\r\n        if (!this._dependencyDeletingAction) {\r\n            this._createDependencyDeletingAction()\r\n        }\r\n        return this._dependencyDeletingAction\r\n    }\r\n    _getDependencyDeletedAction() {\r\n        if (!this._dependencyDeletedAction) {\r\n            this._createDependencyDeletedAction()\r\n        }\r\n        return this._dependencyDeletedAction\r\n    }\r\n    _getResourceInsertingAction() {\r\n        if (!this._resourceInsertingAction) {\r\n            this._createResourceInsertingAction()\r\n        }\r\n        return this._resourceInsertingAction\r\n    }\r\n    _getResourceInsertedAction() {\r\n        if (!this._resourceInsertedAction) {\r\n            this._createResourceInsertedAction()\r\n        }\r\n        return this._resourceInsertedAction\r\n    }\r\n    _getResourceDeletingAction() {\r\n        if (!this._resourceDeletingAction) {\r\n            this._createResourceDeletingAction()\r\n        }\r\n        return this._resourceDeletingAction\r\n    }\r\n    _getResourceDeletedAction() {\r\n        if (!this._resourceDeletedAction) {\r\n            this._createResourceDeletedAction()\r\n        }\r\n        return this._resourceDeletedAction\r\n    }\r\n    _getResourceAssigningAction() {\r\n        if (!this._resourceAssigningAction) {\r\n            this._createResourceAssigningAction()\r\n        }\r\n        return this._resourceAssigningAction\r\n    }\r\n    _getResourceAssignedAction() {\r\n        if (!this._resourceAssignedAction) {\r\n            this._createResourceAssignedAction()\r\n        }\r\n        return this._resourceAssignedAction\r\n    }\r\n    _getResourceUnassigningAction() {\r\n        if (!this._resourceUnassigningAction) {\r\n            this._createResourceUnassigningAction()\r\n        }\r\n        return this._resourceUnassigningAction\r\n    }\r\n    _getResourceUnassignedAction() {\r\n        if (!this._resourceUnassignedAction) {\r\n            this._createResourceUnassignedAction()\r\n        }\r\n        return this._resourceUnassignedAction\r\n    }\r\n    _createResourceUnassigningAction() {\r\n        this._resourceUnassigningAction = this._createActionByOption(\"onResourceUnassigning\")\r\n    }\r\n    _createResourceUnassignedAction() {\r\n        this._resourceUnassignedAction = this._createActionByOption(\"onResourceUnassigned\")\r\n    }\r\n    _createTaskInsertingAction() {\r\n        this._taskInsertingAction = this._createActionByOption(\"onTaskInserting\")\r\n    }\r\n    _createTaskInsertedAction() {\r\n        this._taskInsertedAction = this._createActionByOption(\"onTaskInserted\")\r\n    }\r\n    _createTaskDeletingAction() {\r\n        this._taskDeletingAction = this._createActionByOption(\"onTaskDeleting\")\r\n    }\r\n    _createTaskDeletedAction() {\r\n        this._taskDeletedAction = this._createActionByOption(\"onTaskDeleted\")\r\n    }\r\n    _createTaskUpdatingAction() {\r\n        this._taskUpdatingAction = this._createActionByOption(\"onTaskUpdating\")\r\n    }\r\n    _createTaskUpdatedAction() {\r\n        this._taskUpdatedAction = this._createActionByOption(\"onTaskUpdated\")\r\n    }\r\n    _createTaskMovingAction() {\r\n        this._taskMovingAction = this._createActionByOption(\"onTaskMoving\")\r\n    }\r\n    _createTaskEditDialogShowingAction() {\r\n        this._taskEditDialogShowingAction = this._createActionByOption(\"onTaskEditDialogShowing\")\r\n    }\r\n    _createResourceManagerDialogShowingAction() {\r\n        this._resourceManagerDialogShowingAction = this._createActionByOption(\"onResourceManagerDialogShowing\")\r\n    }\r\n    _createDependencyInsertingAction() {\r\n        this._dependencyInsertingAction = this._createActionByOption(\"onDependencyInserting\")\r\n    }\r\n    _createDependencyInsertedAction() {\r\n        this._dependencyInsertedAction = this._createActionByOption(\"onDependencyInserted\")\r\n    }\r\n    _createDependencyDeletingAction() {\r\n        this._dependencyDeletingAction = this._createActionByOption(\"onDependencyDeleting\")\r\n    }\r\n    _createDependencyDeletedAction() {\r\n        this._dependencyDeletedAction = this._createActionByOption(\"onDependencyDeleted\")\r\n    }\r\n    _createResourceInsertingAction() {\r\n        this._resourceInsertingAction = this._createActionByOption(\"onResourceInserting\")\r\n    }\r\n    _createResourceInsertedAction() {\r\n        this._resourceInsertedAction = this._createActionByOption(\"onResourceInserted\")\r\n    }\r\n    _createResourceDeletingAction() {\r\n        this._resourceDeletingAction = this._createActionByOption(\"onResourceDeleting\")\r\n    }\r\n    _createResourceDeletedAction() {\r\n        this._resourceDeletedAction = this._createActionByOption(\"onResourceDeleted\")\r\n    }\r\n    _createResourceAssigningAction() {\r\n        this._resourceAssigningAction = this._createActionByOption(\"onResourceAssigning\")\r\n    }\r\n    _createResourceAssignedAction() {\r\n        this._resourceAssignedAction = this._createActionByOption(\"onResourceAssigned\")\r\n    }\r\n    _convertCoreToMappedData(optionName, coreData) {\r\n        return Object.keys(coreData).reduce((previous, f) => {\r\n            var mappedField = this._getMappedFieldName(optionName, f);\r\n            if (mappedField) {\r\n                var setter = compileSetter(mappedField);\r\n                setter(previous, coreData[f])\r\n            }\r\n            return previous\r\n        }, {})\r\n    }\r\n    _convertMappedToCoreData(optionName, mappedData) {\r\n        var coreData = {};\r\n        if (mappedData) {\r\n            var mappedFields = this.option(optionName);\r\n            for (var field in mappedFields) {\r\n                var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n                var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\r\n                if (mappedFieldName && void 0 !== mappedData[mappedFieldName]) {\r\n                    var getter = compileGetter(mappedFieldName);\r\n                    var coreFieldName = exprMatches[1];\r\n                    coreData[coreFieldName] = getter(mappedData)\r\n                }\r\n            }\r\n        }\r\n        return coreData\r\n    }\r\n    _getMappedFieldName(optionName, coreField) {\r\n        var coreFieldName = coreField;\r\n        if (\"id\" === coreField) {\r\n            coreFieldName = \"key\"\r\n        }\r\n        return this.option(\"\".concat(optionName, \".\").concat(coreFieldName, \"Expr\"))\r\n    }\r\n    _convertCoreToMappedFields(optionName, fields) {\r\n        return fields.reduce((previous, f) => {\r\n            var mappedField = this._getMappedFieldName(optionName, f);\r\n            if (mappedField) {\r\n                previous.push(mappedField)\r\n            }\r\n            return previous\r\n        }, [])\r\n    }\r\n    _convertMappedToCoreFields(optionName, fields) {\r\n        var coreFields = [];\r\n        var mappedFields = this.option(optionName);\r\n        for (var field in mappedFields) {\r\n            var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n            var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\r\n            if (mappedFieldName && fields.indexOf(mappedFieldName) > -1) {\r\n                var coreFieldName = exprMatches[1];\r\n                coreFields.push(coreFieldName)\r\n            }\r\n        }\r\n        return coreFields\r\n    }\r\n    _getTaskMappedFieldNames() {\r\n        var mappedFields = [];\r\n        var mappedFieldsData = this.option(GANTT_TASKS);\r\n        for (var field in mappedFieldsData) {\r\n            var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n            var mappedFieldName = exprMatches && mappedFieldsData[exprMatches[0]];\r\n            if (mappedFieldName) {\r\n                mappedFields.push(mappedFieldName)\r\n            }\r\n        }\r\n        return mappedFields\r\n    }\r\n    _getTaskCustomFields() {\r\n        var columns = this.option(\"columns\");\r\n        var columnFields = columns && columns.map(c => c.dataField);\r\n        var mappedFields = this._getTaskMappedFieldNames();\r\n        return columnFields ? columnFields.filter(f => mappedFields.indexOf(f) < 0) : []\r\n    }\r\n    _getCustomFieldsData(data) {\r\n        return this._getTaskCustomFields().reduce((previous, field) => {\r\n            if (data && void 0 !== data[field]) {\r\n                previous[field] = data[field]\r\n            }\r\n            return previous\r\n        }, {})\r\n    }\r\n    _addCustomFieldsData(key, data) {\r\n        if (data) {\r\n            var modelData = this._tasksOption && this._tasksOption._getItems();\r\n            var keyGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\r\n            var modelItem = modelData && modelData.filter(obj => keyGetter(obj) === key)[0];\r\n            var customFields = this._getTaskCustomFields();\r\n            for (var i = 0; i < customFields.length; i++) {\r\n                var field = customFields[i];\r\n                if (Object.prototype.hasOwnProperty.call(modelItem, field)) {\r\n                    data[field] = modelItem[field]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMode(allowSelection) {\r\n        return allowSelection ? \"single\" : \"none\"\r\n    }\r\n    _getArrayFromOneElement(element) {\r\n        return void 0 === element || null === element ? [] : [element]\r\n    }\r\n    _getToolbarItems() {\r\n        var items = this.option(\"toolbar.items\");\r\n        return items ? items : []\r\n    }\r\n    _updateToolbarContent() {\r\n        var items = this._getToolbarItems();\r\n        if (items.length) {\r\n            this._$toolbarWrapper.show()\r\n        } else {\r\n            this._$toolbarWrapper.hide()\r\n        }\r\n        this._toolbar && this._toolbar.createItems(items);\r\n        this._updateBarItemsState()\r\n    }\r\n    _updateContextMenu() {\r\n        var contextMenuOptions = this.option(\"contextMenu\");\r\n        if (contextMenuOptions.enabled && this._contextMenuBar) {\r\n            this._contextMenuBar.createItems(contextMenuOptions.items);\r\n            this._updateBarItemsState()\r\n        }\r\n    }\r\n    _updateBarItemsState() {\r\n        this._ganttView && this._ganttView.updateBarItemsState()\r\n    }\r\n    _showDialog(e) {\r\n        if (!this._dialogInstance) {\r\n            this._dialogInstance = new GanttDialog(this, this._$dialog)\r\n        }\r\n        this._dialogInstance.show(e.name, e.parameters, e.callback, e.afterClosing, this.option(\"editing\"))\r\n    }\r\n    _showPopupMenu(info) {\r\n        if (this.option(\"contextMenu.enabled\")) {\r\n            this._ganttView.getBarManager().updateContextMenu();\r\n            var args = {\r\n                cancel: false,\r\n                event: info.event,\r\n                targetType: info.type,\r\n                targetKey: info.key,\r\n                items: extend(true, [], this._contextMenuBar._items),\r\n                data: \"task\" === info.type ? this.getTaskData(info.key) : this.getDependencyData(info.key)\r\n            };\r\n            this._raiseContextMenuPreparing(args);\r\n            if (!args.cancel) {\r\n                this._contextMenuBar.show(info.position, args.items)\r\n            }\r\n        }\r\n    }\r\n    _executeCoreCommand(id) {\r\n        this._ganttView.executeCoreCommand(id)\r\n    }\r\n    _clean() {\r\n        var _this$_ganttView4;\r\n        null === (_this$_ganttView4 = this._ganttView) || void 0 === _this$_ganttView4 ? void 0 : _this$_ganttView4._ganttViewCore.cleanMarkup();\r\n        delete this._ganttView;\r\n        delete this._dialogInstance;\r\n        super._clean()\r\n    }\r\n    _getTaskTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item) => {\r\n            template.render({\r\n                model: this.getTaskDataByCoreData(item),\r\n                container: getPublicElement($(container))\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    _getTaskProgressTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback, posX) => {\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback(posX)\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    _getTaskTimeTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback, posX) => {\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback(posX)\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    _getTaskContentTemplateFunc(taskContentTemplateOption) {\r\n        var template = taskContentTemplateOption && this._getTemplate(taskContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback, index) => {\r\n            item.taskData = this.getTaskDataByCoreData(item.taskData);\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback(container, index)\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            tasks: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                parentIdExpr: \"parentId\",\r\n                startExpr: \"start\",\r\n                endExpr: \"end\",\r\n                progressExpr: \"progress\",\r\n                titleExpr: \"title\",\r\n                colorExpr: \"color\"\r\n            },\r\n            dependencies: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                predecessorIdExpr: \"predecessorId\",\r\n                successorIdExpr: \"successorId\",\r\n                typeExpr: \"type\"\r\n            },\r\n            resources: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                textExpr: \"text\",\r\n                colorExpr: \"color\"\r\n            },\r\n            resourceAssignments: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                taskIdExpr: \"taskId\",\r\n                resourceIdExpr: \"resourceId\"\r\n            },\r\n            columns: void 0,\r\n            taskListWidth: 300,\r\n            showResources: true,\r\n            taskTitlePosition: \"inside\",\r\n            firstDayOfWeek: void 0,\r\n            selectedRowKey: void 0,\r\n            onSelectionChanged: null,\r\n            onTaskClick: null,\r\n            onTaskDblClick: null,\r\n            onTaskInserting: null,\r\n            onTaskInserted: null,\r\n            onTaskDeleting: null,\r\n            onTaskDeleted: null,\r\n            onTaskUpdating: null,\r\n            onTaskUpdated: null,\r\n            onTaskMoving: null,\r\n            onTaskEditDialogShowing: null,\r\n            onDependencyInserting: null,\r\n            onDependencyInserted: null,\r\n            onDependencyDeleting: null,\r\n            onDependencyDeleted: null,\r\n            onResourceInserting: null,\r\n            onResourceInserted: null,\r\n            onResourceDeleting: null,\r\n            onResourceDeleted: null,\r\n            onResourceAssigning: null,\r\n            onResourceAssigned: null,\r\n            onResourceUnassigning: null,\r\n            onResourceUnassigned: null,\r\n            onCustomCommand: null,\r\n            onContextMenuPreparing: null,\r\n            allowSelection: true,\r\n            showRowLines: true,\r\n            stripLines: void 0,\r\n            scaleType: \"auto\",\r\n            editing: {\r\n                enabled: false,\r\n                allowTaskAdding: true,\r\n                allowTaskDeleting: true,\r\n                allowTaskUpdating: true,\r\n                allowDependencyAdding: true,\r\n                allowDependencyDeleting: true,\r\n                allowResourceAdding: true,\r\n                allowResourceDeleting: true,\r\n                allowResourceUpdating: true,\r\n                allowTaskResourceUpdating: true\r\n            },\r\n            validation: {\r\n                validateDependencies: false,\r\n                autoUpdateParentTasks: false\r\n            },\r\n            toolbar: null,\r\n            contextMenu: {\r\n                enabled: true,\r\n                items: void 0\r\n            },\r\n            taskTooltipContentTemplate: null,\r\n            taskProgressTooltipContentTemplate: null,\r\n            taskTimeTooltipContentTemplate: null,\r\n            taskContentTemplate: null,\r\n            rootValue: 0\r\n        })\r\n    }\r\n    getTaskResources(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getTaskResources(key);\r\n        return coreData.map(r => this._convertCoreToMappedData(GANTT_RESOURCES, r))\r\n    }\r\n    getVisibleTaskKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleTaskKeys()\r\n    }\r\n    getVisibleDependencyKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleDependencyKeys()\r\n    }\r\n    getVisibleResourceKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleResourceKeys()\r\n    }\r\n    getVisibleResourceAssignmentKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleResourceAssignmentKeys()\r\n    }\r\n    getTaskData(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getTaskData(key);\r\n        var mappedData = this.getTaskDataByCoreData(coreData);\r\n        return mappedData\r\n    }\r\n    getTaskDataByCoreData(coreData) {\r\n        var mappedData = coreData ? this._convertCoreToMappedData(GANTT_TASKS, coreData) : null;\r\n        this._addCustomFieldsData(coreData.id, mappedData);\r\n        return mappedData\r\n    }\r\n    insertTask(data) {\r\n        this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, data);\r\n        this._ganttView._ganttViewCore.insertTask(this._convertMappedToCoreData(GANTT_TASKS, data))\r\n    }\r\n    deleteTask(key) {\r\n        this._ganttView._ganttViewCore.deleteTask(key)\r\n    }\r\n    updateTask(key, data) {\r\n        this._saveCustomFieldsDataToCache(key, data, true);\r\n        this._ganttView._ganttViewCore.updateTask(key, this._convertMappedToCoreData(GANTT_TASKS, data))\r\n    }\r\n    getDependencyData(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getDependencyData(key);\r\n        return coreData ? this._convertCoreToMappedData(GANTT_DEPENDENCIES, coreData) : null\r\n    }\r\n    insertDependency(data) {\r\n        this._ganttView._ganttViewCore.insertDependency(this._convertMappedToCoreData(GANTT_DEPENDENCIES, data))\r\n    }\r\n    deleteDependency(key) {\r\n        this._ganttView._ganttViewCore.deleteDependency(key)\r\n    }\r\n    getResourceData(key) {\r\n        var coreData = this._ganttView._ganttViewCore.getResourceData(key);\r\n        return coreData ? this._convertCoreToMappedData(GANTT_RESOURCES, coreData) : null\r\n    }\r\n    deleteResource(key) {\r\n        this._ganttView._ganttViewCore.deleteResource(key)\r\n    }\r\n    insertResource(data, taskKeys) {\r\n        this._ganttView._ganttViewCore.insertResource(this._convertMappedToCoreData(GANTT_RESOURCES, data), taskKeys)\r\n    }\r\n    getResourceAssignmentData(key) {\r\n        var coreData = this._ganttView._ganttViewCore.getResourceAssignmentData(key);\r\n        return coreData ? this._convertCoreToMappedData(GANTT_RESOURCE_ASSIGNMENTS, coreData) : null\r\n    }\r\n    assignResourceToTask(resourceKey, taskKey) {\r\n        this._ganttView._ganttViewCore.assignResourceToTask(resourceKey, taskKey)\r\n    }\r\n    unassignResourceFromTask(resourceKey, taskKey) {\r\n        this._ganttView._ganttViewCore.unassignResourceFromTask(resourceKey, taskKey)\r\n    }\r\n    updateDimensions() {\r\n        this._onAdjustControl()\r\n    }\r\n    scrollToDate(date) {\r\n        this._ganttView._ganttViewCore.scrollToDate(date)\r\n    }\r\n    showResourceManagerDialog() {\r\n        this._ganttView._ganttViewCore.showResourcesDialog()\r\n    }\r\n    exportToPdf(options) {\r\n        var _fullOptions$docCreat, _window$jspdf$jsPDF, _window$jspdf, _fullOptions$format;\r\n        this._exportHelper.reset();\r\n        var fullOptions = extend({}, options);\r\n        if (fullOptions.createDocumentMethod) {\r\n            fullOptions.docCreateMethod = fullOptions.createDocumentMethod\r\n        }\r\n        null !== (_fullOptions$docCreat = fullOptions.docCreateMethod) && void 0 !== _fullOptions$docCreat ? _fullOptions$docCreat : fullOptions.docCreateMethod = null !== (_window$jspdf$jsPDF = null === (_window$jspdf = window.jspdf) || void 0 === _window$jspdf ? void 0 : _window$jspdf.jsPDF) && void 0 !== _window$jspdf$jsPDF ? _window$jspdf$jsPDF : window.jsPDF;\r\n        null !== (_fullOptions$format = fullOptions.format) && void 0 !== _fullOptions$format ? _fullOptions$format : fullOptions.format = \"a4\";\r\n        return new Promise(resolve => {\r\n            var _this$_ganttView5;\r\n            var doc = null === (_this$_ganttView5 = this._ganttView) || void 0 === _this$_ganttView5 ? void 0 : _this$_ganttView5._ganttViewCore.exportToPdf(fullOptions);\r\n            resolve(doc)\r\n        })\r\n    }\r\n    _getExportHelper() {\r\n        var _this$_exportHelper;\r\n        null !== (_this$_exportHelper = this._exportHelper) && void 0 !== _this$_exportHelper ? _this$_exportHelper : this._exportHelper = new GanttExportHelper(this);\r\n        return this._exportHelper\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"tasks\":\r\n                this._refreshDataSource(GANTT_TASKS);\r\n                break;\r\n            case \"dependencies\":\r\n                this._refreshDataSource(GANTT_DEPENDENCIES);\r\n                break;\r\n            case \"resources\":\r\n                this._refreshDataSource(GANTT_RESOURCES);\r\n                break;\r\n            case \"resourceAssignments\":\r\n                this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\r\n                break;\r\n            case \"columns\":\r\n                this._setTreeListOption(\"columns\", this._getTreeListColumns());\r\n                break;\r\n            case \"taskListWidth\":\r\n                this._setInnerElementsWidth();\r\n                break;\r\n            case \"showResources\":\r\n                this._setGanttViewOption(\"showResources\", args.value);\r\n                break;\r\n            case \"taskTitlePosition\":\r\n                this._setGanttViewOption(\"taskTitlePosition\", args.value);\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._setGanttViewOption(\"firstDayOfWeek\", args.value);\r\n                break;\r\n            case \"selectedRowKey\":\r\n                this._selectTreeListRows(this._getArrayFromOneElement(args.value));\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onTaskClick\":\r\n                this._createTaskClickAction();\r\n                break;\r\n            case \"onTaskDblClick\":\r\n                this._createTaskDblClickAction();\r\n                break;\r\n            case \"onTaskInserting\":\r\n                this._createTaskInsertingAction();\r\n                break;\r\n            case \"onTaskInserted\":\r\n                this._createTaskInsertedAction();\r\n                break;\r\n            case \"onTaskDeleting\":\r\n                this._createTaskDeletingAction();\r\n                break;\r\n            case \"onTaskDeleted\":\r\n                this._createTaskDeletedAction();\r\n                break;\r\n            case \"onTaskUpdating\":\r\n                this._createTaskUpdatingAction();\r\n                break;\r\n            case \"onTaskUpdated\":\r\n                this._createTaskUpdatedAction();\r\n                break;\r\n            case \"onTaskMoving\":\r\n                this._createTaskMovingAction();\r\n                break;\r\n            case \"onTaskEditDialogShowing\":\r\n                this._createTaskEditDialogShowingAction();\r\n                break;\r\n            case \"onResourceManagerDialogShowing\":\r\n                this._createResourceManagerDialogShowingAction();\r\n                break;\r\n            case \"onDependencyInserting\":\r\n                this._createDependencyInsertingAction();\r\n                break;\r\n            case \"onDependencyInserted\":\r\n                this._createDependencyInsertedAction();\r\n                break;\r\n            case \"onDependencyDeleting\":\r\n                this._createDependencyDeletingAction();\r\n                break;\r\n            case \"onDependencyDeleted\":\r\n                this._createDependencyDeletedAction();\r\n                break;\r\n            case \"onResourceInserting\":\r\n                this._createResourceInsertingAction();\r\n                break;\r\n            case \"onResourceInserted\":\r\n                this._createResourceInsertedAction();\r\n                break;\r\n            case \"onResourceDeleting\":\r\n                this._createResourceDeletingAction();\r\n                break;\r\n            case \"onResourceDeleted\":\r\n                this._createResourceDeletedAction();\r\n                break;\r\n            case \"onResourceAssigning\":\r\n                this._createResourceAssigningAction();\r\n                break;\r\n            case \"onResourceAssigned\":\r\n                this._createResourceAssignedAction();\r\n                break;\r\n            case \"onResourceUnassigning\":\r\n                this._createResourceUnassigningAction();\r\n                break;\r\n            case \"onResourceUnassigned\":\r\n                this._createResourceUnassignedAction();\r\n                break;\r\n            case \"onCustomCommand\":\r\n                this._createCustomCommandAction();\r\n                break;\r\n            case \"onContextMenuPreparing\":\r\n                this._createContextMenuPreparingAction();\r\n                break;\r\n            case \"allowSelection\":\r\n                this._setTreeListOption(\"selection.mode\", this._getSelectionMode(args.value));\r\n                this._setGanttViewOption(\"allowSelection\", args.value);\r\n                break;\r\n            case \"showRowLines\":\r\n                this._setTreeListOption(\"showRowLines\", args.value);\r\n                this._setGanttViewOption(\"showRowLines\", args.value);\r\n                break;\r\n            case \"stripLines\":\r\n                this._setGanttViewOption(\"stripLines\", args.value);\r\n                break;\r\n            case \"scaleType\":\r\n                this._setGanttViewOption(\"scaleType\", args.value);\r\n                break;\r\n            case \"editing\":\r\n                this._setGanttViewOption(\"editing\", this.option(args.name));\r\n                break;\r\n            case \"validation\":\r\n                this._setGanttViewOption(\"validation\", this.option(args.name));\r\n                break;\r\n            case \"toolbar\":\r\n                this._updateToolbarContent();\r\n                break;\r\n            case \"contextMenu\":\r\n                this._updateContextMenu();\r\n                break;\r\n            case \"taskTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskTooltipContentTemplate\", this._getTaskTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskProgressTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskProgressTooltipContentTemplate\", this._getTaskProgressTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskTimeTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskTimeTooltipContentTemplate\", this._getTaskTimeTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskContentTemplate\":\r\n                this._setGanttViewOption(\"taskContentTemplate\", this._getTaskContentTemplateFunc(args.value));\r\n                break;\r\n            case \"rootValue\":\r\n                this._setTreeListOption(\"rootValue\", args.value);\r\n                break;\r\n            case \"width\":\r\n                super._optionChanged(args);\r\n                this._updateGanttWidth();\r\n                break;\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                this._setGanttHeight(this._$element.height());\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxGantt\", Gantt);\r\nexport default Gantt;\r\n"]},"metadata":{},"sourceType":"module"}