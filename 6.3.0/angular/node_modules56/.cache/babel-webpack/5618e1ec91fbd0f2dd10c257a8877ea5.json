{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimelineWeek from \"./ui.scheduler.timeline_week\";\nimport dateUtils from \"../../../core/utils/date\";\nimport workWeekUtils from \"./utils.work_week\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\nvar LAST_DAY_WEEK_INDEX = 5;\n\nvar SchedulerTimelineWorkWeek = /*#__PURE__*/function (_SchedulerTimelineWee) {\n  _inherits(SchedulerTimelineWorkWeek, _SchedulerTimelineWee);\n\n  var _super = _createSuper(SchedulerTimelineWorkWeek);\n\n  function SchedulerTimelineWorkWeek() {\n    var _this;\n\n    _classCallCheck(this, SchedulerTimelineWorkWeek);\n\n    _this = _super.apply(this, arguments);\n    _this._getWeekendsCount = workWeekUtils.getWeekendsCount;\n    _this._isSkippedData = workWeekUtils.isDataOnWeekend;\n    return _this;\n  }\n\n  _createClass(SchedulerTimelineWorkWeek, [{\n    key: \"_getElementClass\",\n    value: function _getElementClass() {\n      return TIMELINE_CLASS;\n    }\n  }, {\n    key: \"_getWeekDuration\",\n    value: function _getWeekDuration() {\n      return 5;\n    }\n  }, {\n    key: \"_firstDayOfWeek\",\n    value: function _firstDayOfWeek() {\n      return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n    }\n  }, {\n    key: \"_isSkippedData\",\n    value: function _isSkippedData() {\n      return workWeekUtils.isDataOnWeekend;\n    }\n  }, {\n    key: \"_incrementDate\",\n    value: function _incrementDate(date) {\n      var day = date.getDay();\n\n      if (day === LAST_DAY_WEEK_INDEX) {\n        date.setDate(date.getDate() + 2);\n      }\n\n      _get(_getPrototypeOf(SchedulerTimelineWorkWeek.prototype), \"_incrementDate\", this).call(this, date);\n    }\n  }, {\n    key: \"_getOffsetByCount\",\n    value: function _getOffsetByCount(cellIndex) {\n      var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\n      return toMs(\"day\") * weekendCount * 2;\n    }\n  }, {\n    key: \"_setFirstViewDate\",\n    value: function _setFirstViewDate() {\n      this._firstViewDate = workWeekUtils.getFirstViewDate(this.option(\"currentDate\"), this._firstDayOfWeek());\n\n      this._setStartDayHour(this._firstViewDate);\n    }\n  }]);\n\n  return SchedulerTimelineWorkWeek;\n}(SchedulerTimelineWeek);\n\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\nexport default SchedulerTimelineWorkWeek;","map":null,"metadata":{},"sourceType":"module"}