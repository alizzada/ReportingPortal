{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.data_area.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { AreaItem } from \"./ui.pivot_grid.area_item\";\nvar PIVOTGRID_AREA_CLASS = \"dx-pivotgrid-area\";\nvar PIVOTGRID_AREA_DATA_CLASS = \"dx-pivotgrid-area-data\";\nvar PIVOTGRID_TOTAL_CLASS = \"dx-total\";\nvar PIVOTGRID_GRAND_TOTAL_CLASS = \"dx-grandtotal\";\nvar PIVOTGRID_ROW_TOTAL_CLASS = \"dx-row-total\";\nexport var DataArea = AreaItem.inherit({\n  _getAreaName: function _getAreaName() {\n    return \"data\";\n  },\n  _createGroupElement: function _createGroupElement() {\n    return $(\"<div>\").addClass(PIVOTGRID_AREA_CLASS).addClass(PIVOTGRID_AREA_DATA_CLASS);\n  },\n  _applyCustomStyles: function _applyCustomStyles(options) {\n    var cell = options.cell;\n    var classArray = options.classArray;\n\n    if (\"T\" === cell.rowType || \"T\" === cell.columnType) {\n      classArray.push(PIVOTGRID_TOTAL_CLASS);\n    }\n\n    if (\"GT\" === cell.rowType || \"GT\" === cell.columnType) {\n      classArray.push(PIVOTGRID_GRAND_TOTAL_CLASS);\n    }\n\n    if (\"T\" === cell.rowType || \"GT\" === cell.rowType) {\n      classArray.push(PIVOTGRID_ROW_TOTAL_CLASS);\n    }\n\n    if (options.rowIndex === options.rowsCount - 1) {\n      options.cssArray.push(\"border-bottom: 0px\");\n    }\n\n    this.callBase(options);\n  },\n  _moveFakeTable: function _moveFakeTable(scrollPos) {\n    this._moveFakeTableHorizontally(scrollPos.x);\n\n    this._moveFakeTableTop(scrollPos.y);\n\n    this.callBase();\n  },\n  processScroll: function processScroll(useNativeScrolling, horizontalScroll, verticalScroll) {\n    var direction = \"both\";\n\n    if (horizontalScroll && !verticalScroll) {\n      direction = \"horizontal\";\n    } else if (!horizontalScroll && verticalScroll) {\n      direction = \"vertical\";\n    }\n\n    this._groupElement.css(\"borderTopWidth\", 0).dxScrollable({\n      useNative: !!useNativeScrolling,\n      useSimulatedScrollbar: !useNativeScrolling,\n      direction: direction,\n      bounceEnabled: false,\n      updateManually: true\n    });\n  },\n  reset: function reset() {\n    this.callBase();\n\n    if (this._virtualContent) {\n      this._virtualContent.parent().css(\"height\", \"auto\");\n    }\n  },\n  setVirtualContentParams: function setVirtualContentParams(params) {\n    this.callBase(params);\n\n    this._virtualContent.parent().css(\"height\", params.height);\n\n    this._setTableCss({\n      top: params.top,\n      left: params.left\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}