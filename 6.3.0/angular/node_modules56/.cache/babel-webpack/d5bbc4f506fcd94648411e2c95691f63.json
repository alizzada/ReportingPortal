{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../widget/ui.errors\";\nimport { deepExtendArraySafe } from \"../../core/utils/object\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nvar PROPERTY_NAMES = {\n  startDate: \"startDate\",\n  endDate: \"endDate\",\n  allDay: \"allDay\",\n  text: \"text\",\n  description: \"description\",\n  startDateTimeZone: \"startDateTimeZone\",\n  endDateTimeZone: \"endDateTimeZone\",\n  recurrenceRule: \"recurrenceRule\",\n  recurrenceException: \"recurrenceException\",\n  disabled: \"disabled\"\n};\n\nvar AppointmentAdapter = /*#__PURE__*/function () {\n  function AppointmentAdapter(rawAppointment, options) {\n    _classCallCheck(this, AppointmentAdapter);\n\n    this.rawAppointment = rawAppointment;\n    this.options = options;\n  }\n\n  _createClass(AppointmentAdapter, [{\n    key: \"duration\",\n    get: function get() {\n      return this.endDate ? this.endDate - this.startDate : 0;\n    }\n  }, {\n    key: \"startDate\",\n    get: function get() {\n      var result = this.getField(PROPERTY_NAMES.startDate);\n      return void 0 === result ? result : new Date(result);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.startDate, value);\n    }\n  }, {\n    key: \"endDate\",\n    get: function get() {\n      var result = this.getField(PROPERTY_NAMES.endDate);\n      return void 0 === result ? result : new Date(result);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.endDate, value);\n    }\n  }, {\n    key: \"allDay\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.allDay);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.allDay, value);\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.text);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.text, value);\n    }\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.description);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.description, value);\n    }\n  }, {\n    key: \"startDateTimeZone\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.startDateTimeZone);\n    }\n  }, {\n    key: \"endDateTimeZone\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.endDateTimeZone);\n    }\n  }, {\n    key: \"recurrenceRule\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.recurrenceRule);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.recurrenceRule, value);\n    }\n  }, {\n    key: \"recurrenceException\",\n    get: function get() {\n      return this.getField(PROPERTY_NAMES.recurrenceException);\n    },\n    set: function set(value) {\n      this.setField(PROPERTY_NAMES.recurrenceException, value);\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return !!this.getField(PROPERTY_NAMES.disabled);\n    }\n  }, {\n    key: \"timeZoneCalculator\",\n    get: function get() {\n      return this.options.getTimeZoneCalculator();\n    }\n  }, {\n    key: \"isRecurrent\",\n    get: function get() {\n      return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule);\n    }\n  }, {\n    key: \"getField\",\n    value: function getField(property) {\n      return this.options.getField(this.rawAppointment, property);\n    }\n  }, {\n    key: \"setField\",\n    value: function setField(property, value) {\n      return this.options.setField(this.rawAppointment, property, value);\n    }\n  }, {\n    key: \"calculateStartDate\",\n    value: function calculateStartDate(pathTimeZoneConversion) {\n      if (!this.startDate || isNaN(this.startDate.getTime())) {\n        throw errors.Error(\"E1032\", this.text);\n      }\n\n      return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion);\n    }\n  }, {\n    key: \"calculateEndDate\",\n    value: function calculateEndDate(pathTimeZoneConversion) {\n      return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion);\n    }\n  }, {\n    key: \"calculateDate\",\n    value: function calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\n      if (!date) {\n        return;\n      }\n\n      return this.timeZoneCalculator.createDate(date, {\n        appointmentTimeZone: appointmentTimeZone,\n        path: pathTimeZoneConversion\n      });\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n      var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.options);\n\n      if (null !== options && void 0 !== options && options.pathTimeZone) {\n        result.startDate = result.calculateStartDate(options.pathTimeZone);\n        result.endDate = result.calculateEndDate(options.pathTimeZone);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"source\",\n    value: function source() {\n      var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n\n      if (serializeDate) {\n        var clonedAdapter = this.clone();\n        clonedAdapter.startDate = this.startDate;\n        clonedAdapter.endDate = this.endDate;\n        return clonedAdapter.source();\n      }\n\n      return extend({}, this.rawAppointment);\n    }\n  }]);\n\n  return AppointmentAdapter;\n}();\n\nexport default AppointmentAdapter;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/appointmentAdapter.js"],"names":["extend","errors","deepExtendArraySafe","getRecurrenceProcessor","PROPERTY_NAMES","startDate","endDate","allDay","text","description","startDateTimeZone","endDateTimeZone","recurrenceRule","recurrenceException","disabled","AppointmentAdapter","rawAppointment","options","result","getField","Date","value","setField","getTimeZoneCalculator","isValidRecurrenceRule","property","pathTimeZoneConversion","isNaN","getTime","Error","calculateDate","date","appointmentTimeZone","timeZoneCalculator","createDate","path","arguments","length","pathTimeZone","calculateStartDate","calculateEndDate","serializeDate","clonedAdapter","clone","source"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nvar PROPERTY_NAMES = {\r\n    startDate: \"startDate\",\r\n    endDate: \"endDate\",\r\n    allDay: \"allDay\",\r\n    text: \"text\",\r\n    description: \"description\",\r\n    startDateTimeZone: \"startDateTimeZone\",\r\n    endDateTimeZone: \"endDateTimeZone\",\r\n    recurrenceRule: \"recurrenceRule\",\r\n    recurrenceException: \"recurrenceException\",\r\n    disabled: \"disabled\"\r\n};\r\nclass AppointmentAdapter {\r\n    constructor(rawAppointment, options) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.options = options\r\n    }\r\n    get duration() {\r\n        return this.endDate ? this.endDate - this.startDate : 0\r\n    }\r\n    get startDate() {\r\n        var result = this.getField(PROPERTY_NAMES.startDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set startDate(value) {\r\n        this.setField(PROPERTY_NAMES.startDate, value)\r\n    }\r\n    get endDate() {\r\n        var result = this.getField(PROPERTY_NAMES.endDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set endDate(value) {\r\n        this.setField(PROPERTY_NAMES.endDate, value)\r\n    }\r\n    get allDay() {\r\n        return this.getField(PROPERTY_NAMES.allDay)\r\n    }\r\n    set allDay(value) {\r\n        this.setField(PROPERTY_NAMES.allDay, value)\r\n    }\r\n    get text() {\r\n        return this.getField(PROPERTY_NAMES.text)\r\n    }\r\n    set text(value) {\r\n        this.setField(PROPERTY_NAMES.text, value)\r\n    }\r\n    get description() {\r\n        return this.getField(PROPERTY_NAMES.description)\r\n    }\r\n    set description(value) {\r\n        this.setField(PROPERTY_NAMES.description, value)\r\n    }\r\n    get startDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.startDateTimeZone)\r\n    }\r\n    get endDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.endDateTimeZone)\r\n    }\r\n    get recurrenceRule() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceRule)\r\n    }\r\n    set recurrenceRule(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceRule, value)\r\n    }\r\n    get recurrenceException() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceException)\r\n    }\r\n    set recurrenceException(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceException, value)\r\n    }\r\n    get disabled() {\r\n        return !!this.getField(PROPERTY_NAMES.disabled)\r\n    }\r\n    get timeZoneCalculator() {\r\n        return this.options.getTimeZoneCalculator()\r\n    }\r\n    get isRecurrent() {\r\n        return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule)\r\n    }\r\n    getField(property) {\r\n        return this.options.getField(this.rawAppointment, property)\r\n    }\r\n    setField(property, value) {\r\n        return this.options.setField(this.rawAppointment, property, value)\r\n    }\r\n    calculateStartDate(pathTimeZoneConversion) {\r\n        if (!this.startDate || isNaN(this.startDate.getTime())) {\r\n            throw errors.Error(\"E1032\", this.text)\r\n        }\r\n        return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateEndDate(pathTimeZoneConversion) {\r\n        return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        return this.timeZoneCalculator.createDate(date, {\r\n            appointmentTimeZone: appointmentTimeZone,\r\n            path: pathTimeZoneConversion\r\n        })\r\n    }\r\n    clone() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.options);\r\n        if (null !== options && void 0 !== options && options.pathTimeZone) {\r\n            result.startDate = result.calculateStartDate(options.pathTimeZone);\r\n            result.endDate = result.calculateEndDate(options.pathTimeZone)\r\n        }\r\n        return result\r\n    }\r\n    source() {\r\n        var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        if (serializeDate) {\r\n            var clonedAdapter = this.clone();\r\n            clonedAdapter.startDate = this.startDate;\r\n            clonedAdapter.endDate = this.endDate;\r\n            return clonedAdapter.source()\r\n        }\r\n        return extend({}, this.rawAppointment)\r\n    }\r\n}\r\nexport default AppointmentAdapter;\r\n"]},"metadata":{},"sourceType":"module"}