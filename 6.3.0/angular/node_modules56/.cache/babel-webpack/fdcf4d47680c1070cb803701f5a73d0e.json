{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport devices from \"../core/devices\";\nimport { render } from \"./widget/utils.ink_ripple\";\nimport registerComponent from \"../core/component_registrator\";\nimport { isMaterial, current } from \"./themes\";\nimport Action from \"../core/action\";\nimport ValidationEngine from \"./validation_engine\";\nimport Widget from \"./widget/ui.widget\";\nimport { active as activeEvents, click as clickEvent, dxClick as dxClickEvent } from \"../events/short\";\nimport { extend } from \"../core/utils/extend\";\nimport { FunctionTemplate } from \"../core/templates/function_template\";\nimport { getImageContainer, getImageSourceType } from \"../core/utils/icon\";\nimport { getPublicElement } from \"../core/element\";\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\n\nvar Button = /*#__PURE__*/function (_Widget) {\n  _inherits(Button, _Widget);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.apply(this, arguments);\n    _this._feedbackHideTimeout = 100;\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"_$content\",\n    value: function _$content() {\n      return this.$element().find(\".dx-button-content\");\n    }\n  }, {\n    key: \"_$submitInput\",\n    value: function _$submitInput() {\n      return this.$element().find(\".dx-button-submit-input\");\n    }\n  }, {\n    key: \"_attachActiveEvents\",\n    value: function _attachActiveEvents(active, inactive) {\n      var $el = this._eventBindingTarget();\n\n      var selector = this._activeStateUnit;\n      activeEvents.off($el, {\n        namespace: \"inkRipple\",\n        selector: selector\n      });\n      activeEvents.on($el, new Action(active), new Action(inactive, {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      }), {\n        showTimeout: this._feedbackShowTimeout,\n        hideTimeout: this._feedbackHideTimeout,\n        selector: selector,\n        namespace: \"inkRipple\"\n      });\n    }\n  }, {\n    key: \"_defaultOptionsRules\",\n    value: function _defaultOptionsRules() {\n      return _get(_getPrototypeOf(Button.prototype), \"_defaultOptionsRules\", this).call(this).concat([{\n        device: function device() {\n          return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n        },\n        options: {\n          focusStateEnabled: true\n        }\n      }, {\n        device: function device() {\n          return isMaterial(current());\n        },\n        options: {\n          useInkRipple: true\n        }\n      }]);\n    }\n  }, {\n    key: \"_executeClickAction\",\n    value: function _executeClickAction(event) {\n      this._clickAction({\n        validationGroup: this._validationGroupConfig,\n        event: event\n      });\n    }\n  }, {\n    key: \"_findGroup\",\n    value: function _findGroup() {\n      var $element = this.$element();\n\n      var model = this._modelByElement($element);\n\n      var _this$option = this.option(),\n          validationGroup = _this$option.validationGroup;\n\n      return validationGroup || ValidationEngine.findGroup($element, model);\n    }\n  }, {\n    key: \"_getContentData\",\n    value: function _getContentData() {\n      var _this$option2 = this.option(),\n          icon = _this$option2.icon,\n          text = _this$option2.text,\n          type = _this$option2.type,\n          _templateData = _this$option2._templateData;\n\n      return extend({\n        icon: \"back\" === type && !icon ? \"back\" : icon,\n        text: text\n      }, _templateData);\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Button.prototype), \"_getDefaultOptions\", this).call(this), {\n        hoverStateEnabled: true,\n        onClick: null,\n        type: \"normal\",\n        text: \"\",\n        icon: \"\",\n        iconPosition: \"left\",\n        validationGroup: void 0,\n        activeStateEnabled: true,\n        template: \"content\",\n        useSubmitBehavior: false,\n        useInkRipple: false,\n        _templateData: {},\n        stylingMode: \"contained\"\n      });\n    }\n  }, {\n    key: \"_getSubmitAction\",\n    value: function _getSubmitAction() {\n      var _this2 = this;\n\n      var needValidate = true;\n      var validationStatus = \"valid\";\n      return this._createAction(function (_ref) {\n        var event = _ref.event;\n\n        if (needValidate) {\n          var validationGroup = _this2._validationGroupConfig;\n\n          if (validationGroup) {\n            var _validationGroup$vali = validationGroup.validate(),\n                status = _validationGroup$vali.status,\n                complete = _validationGroup$vali.complete;\n\n            validationStatus = status;\n\n            if (\"pending\" === status) {\n              needValidate = false;\n\n              _this2.option(\"disabled\", true);\n\n              complete.then(function (_ref2) {\n                var status = _ref2.status;\n\n                _this2.option(\"disabled\", false);\n\n                validationStatus = status;\n                \"valid\" === validationStatus && _this2._submitInput().click();\n                needValidate = true;\n              });\n            }\n          }\n        }\n\n        \"valid\" !== validationStatus && event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this.$element().addClass(\"dx-button\");\n\n      this._renderType();\n\n      this._renderStylingMode();\n\n      this._renderInkRipple();\n\n      this._renderClick();\n\n      this._updateAriaLabel();\n\n      _get(_getPrototypeOf(Button.prototype), \"_initMarkup\", this).call(this);\n\n      this._updateContent();\n\n      this.setAria(\"role\", \"button\");\n    }\n  }, {\n    key: \"_getAnonymousTemplateName\",\n    value: function _getAnonymousTemplateName() {\n      return ANONYMOUS_TEMPLATE_NAME;\n    }\n  }, {\n    key: \"_initTemplates\",\n    value: function _initTemplates() {\n      var _this3 = this;\n\n      this._templateManager.addDefaultTemplates({\n        content: new FunctionTemplate(function (_ref3) {\n          var _ref3$model = _ref3.model,\n              model = _ref3$model === void 0 ? {} : _ref3$model,\n              container = _ref3.container;\n          var text = model.text,\n              icon = model.icon;\n\n          var _this3$option = _this3.option(),\n              iconPosition = _this3$option.iconPosition;\n\n          var $icon = getImageContainer(icon);\n          var $textContainer = text && $(\"<span>\").text(text).addClass(\"dx-button-text\");\n          var $container = $(container);\n          $container.append($textContainer);\n\n          if (\"left\" === iconPosition) {\n            $container.prepend($icon);\n          } else {\n            $icon.addClass(\"dx-icon-right\");\n            $container.append($icon);\n          }\n        })\n      });\n\n      _get(_getPrototypeOf(Button.prototype), \"_initTemplates\", this).call(this);\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"onClick\":\n          this._updateClick();\n\n          break;\n\n        case \"icon\":\n        case \"text\":\n          this._updateContent();\n\n          this._updateAriaLabel();\n\n          break;\n\n        case \"type\":\n          this._updateType();\n\n          this._updateContent();\n\n          break;\n\n        case \"_templateData\":\n          break;\n\n        case \"template\":\n        case \"iconPosition\":\n          this._updateContent();\n\n          break;\n\n        case \"stylingMode\":\n          this._updateStylingMode();\n\n          break;\n\n        case \"useSubmitBehavior\":\n          this._updateSubmitInput();\n\n          break;\n\n        case \"useInkRipple\":\n          this._invalidate();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(Button.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_renderClick\",\n    value: function _renderClick() {\n      var _this4 = this;\n\n      var $el = this.$element();\n      dxClickEvent.off($el, {\n        namespace: this.NAME\n      });\n      dxClickEvent.on($el, function (event) {\n        return _this4._executeClickAction(event);\n      }, {\n        namespace: this.NAME\n      });\n\n      this._updateClick();\n    }\n  }, {\n    key: \"_renderInkRipple\",\n    value: function _renderInkRipple() {\n      var _this5 = this;\n\n      var _this$option3 = this.option(),\n          text = _this$option3.text,\n          icon = _this$option3.icon,\n          type = _this$option3.type,\n          useInkRipple = _this$option3.useInkRipple;\n\n      if (useInkRipple) {\n        var isOnlyIconButton = !text && icon || \"back\" === type;\n\n        var _inkRipple = render(isOnlyIconButton ? {\n          waveSizeCoefficient: 1,\n          useHoldAnimation: false,\n          isCentered: true\n        } : {});\n\n        var changeWaveVisibility = function changeWaveVisibility(event, visible) {\n          var _this5$option = _this5.option(),\n              activeStateEnabled = _this5$option.activeStateEnabled,\n              useInkRipple = _this5$option.useInkRipple;\n\n          if (useInkRipple && activeStateEnabled && !_this5._disposed) {\n            var config = {\n              element: _this5._$content(),\n              event: event\n            };\n            visible ? _inkRipple.showWave(config) : _inkRipple.hideWave(config);\n          }\n        };\n\n        this._attachActiveEvents(function (_ref4) {\n          var event = _ref4.event;\n          return changeWaveVisibility(event, true);\n        }, function (_ref5) {\n          var event = _ref5.event;\n          return changeWaveVisibility(event);\n        });\n      }\n    }\n  }, {\n    key: \"_renderStylingMode\",\n    value: function _renderStylingMode() {\n      var $element = this.$element();\n\n      var _this$option4 = this.option(),\n          stylingMode = _this$option4.stylingMode;\n\n      if (-1 === [\"contained\", \"text\", \"outlined\"].indexOf(stylingMode)) {\n        stylingMode = this._getDefaultOptions().stylingMode;\n      }\n\n      $element.addClass(\"dx-button-mode-\".concat(stylingMode));\n    }\n  }, {\n    key: \"_renderSubmitInput\",\n    value: function _renderSubmitInput() {\n      var _this$option5 = this.option(),\n          useSubmitBehavior = _this$option5.useSubmitBehavior;\n\n      if (useSubmitBehavior) {\n        var submitAction = this._getSubmitAction();\n\n        var $content = this._$content();\n\n        $(\"<input>\").attr(\"type\", \"submit\").attr(\"tabindex\", -1).addClass(\"dx-button-submit-input\").appendTo($content);\n        clickEvent.on(this._$submitInput(), function (event) {\n          return submitAction({\n            event: event\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_renderType\",\n    value: function _renderType() {\n      var _this$option6 = this.option(),\n          type = _this$option6.type;\n\n      var $element = this.$element();\n      type && $element.addClass(\"dx-button-\".concat(type));\n    }\n  }, {\n    key: \"_submitInput\",\n    value: function _submitInput() {\n      return this._$submitInput().get(0);\n    }\n  }, {\n    key: \"_supportedKeys\",\n    value: function _supportedKeys() {\n      var _this6 = this;\n\n      var click = function click(e) {\n        e.preventDefault();\n\n        _this6._executeClickAction(e);\n      };\n\n      return extend(_get(_getPrototypeOf(Button.prototype), \"_supportedKeys\", this).call(this), {\n        space: click,\n        enter: click\n      });\n    }\n  }, {\n    key: \"_updateAriaLabel\",\n    value: function _updateAriaLabel() {\n      var ariaTarget = this._getAriaTarget();\n\n      var _this$option7 = this.option(),\n          icon = _this$option7.icon,\n          text = _this$option7.text;\n\n      if (!text) {\n        if (\"image\" === getImageSourceType(icon)) {\n          icon = -1 === icon.indexOf(\"base64\") ? icon.replace(/.+\\/([^.]+)\\..+$/, \"$1\") : \"Base64\";\n        }\n\n        text = icon || \"\";\n      }\n\n      ariaTarget.attr(\"aria-label\", text || null);\n    }\n  }, {\n    key: \"_updateClick\",\n    value: function _updateClick() {\n      var _this7 = this;\n\n      this._clickAction = this._createActionByOption(\"onClick\", {\n        excludeValidators: [\"readOnly\"],\n        afterExecute: function afterExecute() {\n          var _this7$option = _this7.option(),\n              useSubmitBehavior = _this7$option.useSubmitBehavior;\n\n          useSubmitBehavior && setTimeout(function () {\n            return _this7._submitInput().click();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_updateContent\",\n    value: function _updateContent() {\n      var $element = this.$element();\n\n      var $content = this._$content();\n\n      var data = this._getContentData();\n\n      var _this$option8 = this.option(),\n          template = _this$option8.template,\n          iconPosition = _this$option8.iconPosition;\n\n      var icon = data.icon,\n          text = data.text;\n      $content.length ? $content.empty() : $content = $(\"<div>\").addClass(\"dx-button-content\").appendTo($element);\n      $element.toggleClass(\"dx-button-has-icon\", !!icon).toggleClass(\"dx-button-icon-right\", !!icon && \"left\" !== iconPosition).toggleClass(\"dx-button-has-text\", !!text);\n      var $template = $(this._getTemplateByOption(\"template\").render({\n        model: data,\n        container: getPublicElement($content),\n        transclude: this._templateManager.anonymousTemplateName === template\n      }));\n\n      if ($template.hasClass(\"dx-template-wrapper\")) {\n        $template.addClass(\"dx-button-content\");\n        $content.replaceWith($template);\n      }\n\n      this._updateSubmitInput();\n    }\n  }, {\n    key: \"_updateSubmitInput\",\n    value: function _updateSubmitInput() {\n      var _this$option9 = this.option(),\n          useSubmitBehavior = _this$option9.useSubmitBehavior;\n\n      var $submitInput = this._$submitInput();\n\n      if (!useSubmitBehavior && $submitInput.length) {\n        $submitInput.remove();\n      } else if (useSubmitBehavior && !$submitInput.length) {\n        this._renderSubmitInput();\n      }\n    }\n  }, {\n    key: \"_updateStylingMode\",\n    value: function _updateStylingMode() {\n      var $element = this.$element();\n      [\"contained\", \"text\", \"outlined\"].map(function (mode) {\n        return \"dx-button-mode-\".concat(mode);\n      }).forEach($element.removeClass.bind($element));\n\n      this._renderStylingMode();\n    }\n  }, {\n    key: \"_updateType\",\n    value: function _updateType() {\n      var $element = this.$element();\n      [\"back\", \"danger\", \"default\", \"normal\", \"success\"].map(function (type) {\n        return \"dx-button-\".concat(type);\n      }).forEach($element.removeClass.bind($element));\n\n      this._renderType();\n    }\n  }, {\n    key: \"_validationGroupConfig\",\n    get: function get() {\n      return ValidationEngine.getGroupConfig(this._findGroup());\n    }\n  }]);\n\n  return Button;\n}(Widget);\n\nregisterComponent(\"dxButton\", Button);\nexport default Button;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/button.js"],"names":["$","devices","render","registerComponent","isMaterial","current","Action","ValidationEngine","Widget","active","activeEvents","click","clickEvent","dxClick","dxClickEvent","extend","FunctionTemplate","getImageContainer","getImageSourceType","getPublicElement","ANONYMOUS_TEMPLATE_NAME","Button","arguments","_feedbackHideTimeout","$element","find","inactive","$el","_eventBindingTarget","selector","_activeStateUnit","off","namespace","on","excludeValidators","showTimeout","_feedbackShowTimeout","hideTimeout","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","useInkRipple","event","_clickAction","validationGroup","_validationGroupConfig","model","_modelByElement","option","findGroup","icon","text","type","_templateData","hoverStateEnabled","onClick","iconPosition","activeStateEnabled","template","useSubmitBehavior","stylingMode","needValidate","validationStatus","_createAction","_ref","validate","status","complete","then","_ref2","_submitInput","preventDefault","stopPropagation","addClass","_renderType","_renderStylingMode","_renderInkRipple","_renderClick","_updateAriaLabel","_updateContent","setAria","_templateManager","addDefaultTemplates","content","_ref3","container","$icon","$textContainer","$container","append","prepend","args","name","_updateClick","_updateType","_updateStylingMode","_updateSubmitInput","_invalidate","NAME","_executeClickAction","isOnlyIconButton","_inkRipple","waveSizeCoefficient","useHoldAnimation","isCentered","changeWaveVisibility","visible","_disposed","config","element","_$content","showWave","hideWave","_attachActiveEvents","_ref4","_ref5","indexOf","_getDefaultOptions","submitAction","_getSubmitAction","$content","attr","appendTo","_$submitInput","get","e","space","enter","ariaTarget","_getAriaTarget","replace","_createActionByOption","afterExecute","setTimeout","data","_getContentData","length","empty","toggleClass","$template","_getTemplateByOption","transclude","anonymousTemplateName","hasClass","replaceWith","$submitInput","remove","_renderSubmitInput","map","mode","forEach","removeClass","bind","getGroupConfig","_findGroup"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    render\r\n} from \"./widget/utils.ink_ripple\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    isMaterial,\r\n    current\r\n} from \"./themes\";\r\nimport Action from \"../core/action\";\r\nimport ValidationEngine from \"./validation_engine\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    active as activeEvents,\r\n    click as clickEvent,\r\n    dxClick as dxClickEvent\r\n} from \"../events/short\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport {\r\n    getImageContainer,\r\n    getImageSourceType\r\n} from \"../core/utils/icon\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nclass Button extends Widget {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._feedbackHideTimeout = 100\r\n    }\r\n    _$content() {\r\n        return this.$element().find(\".dx-button-content\")\r\n    }\r\n    _$submitInput() {\r\n        return this.$element().find(\".dx-button-submit-input\")\r\n    }\r\n    _attachActiveEvents(active, inactive) {\r\n        var $el = this._eventBindingTarget();\r\n        var selector = this._activeStateUnit;\r\n        activeEvents.off($el, {\r\n            namespace: \"inkRipple\",\r\n            selector: selector\r\n        });\r\n        activeEvents.on($el, new Action(active), new Action(inactive, {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        }), {\r\n            showTimeout: this._feedbackShowTimeout,\r\n            hideTimeout: this._feedbackHideTimeout,\r\n            selector: selector,\r\n            namespace: \"inkRipple\"\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: () => isMaterial(current()),\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    }\r\n    _executeClickAction(event) {\r\n        this._clickAction({\r\n            validationGroup: this._validationGroupConfig,\r\n            event: event\r\n        })\r\n    }\r\n    _findGroup() {\r\n        var $element = this.$element();\r\n        var model = this._modelByElement($element);\r\n        var {\r\n            validationGroup: validationGroup\r\n        } = this.option();\r\n        return validationGroup || ValidationEngine.findGroup($element, model)\r\n    }\r\n    _getContentData() {\r\n        var {\r\n            icon: icon,\r\n            text: text,\r\n            type: type,\r\n            _templateData: _templateData\r\n        } = this.option();\r\n        return extend({\r\n            icon: \"back\" === type && !icon ? \"back\" : icon,\r\n            text: text\r\n        }, _templateData)\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            hoverStateEnabled: true,\r\n            onClick: null,\r\n            type: \"normal\",\r\n            text: \"\",\r\n            icon: \"\",\r\n            iconPosition: \"left\",\r\n            validationGroup: void 0,\r\n            activeStateEnabled: true,\r\n            template: \"content\",\r\n            useSubmitBehavior: false,\r\n            useInkRipple: false,\r\n            _templateData: {},\r\n            stylingMode: \"contained\"\r\n        })\r\n    }\r\n    _getSubmitAction() {\r\n        var needValidate = true;\r\n        var validationStatus = \"valid\";\r\n        return this._createAction(_ref => {\r\n            var {\r\n                event: event\r\n            } = _ref;\r\n            if (needValidate) {\r\n                var validationGroup = this._validationGroupConfig;\r\n                if (validationGroup) {\r\n                    var {\r\n                        status: status,\r\n                        complete: complete\r\n                    } = validationGroup.validate();\r\n                    validationStatus = status;\r\n                    if (\"pending\" === status) {\r\n                        needValidate = false;\r\n                        this.option(\"disabled\", true);\r\n                        complete.then(_ref2 => {\r\n                            var {\r\n                                status: status\r\n                            } = _ref2;\r\n                            this.option(\"disabled\", false);\r\n                            validationStatus = status;\r\n                            \"valid\" === validationStatus && this._submitInput().click();\r\n                            needValidate = true\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \"valid\" !== validationStatus && event.preventDefault();\r\n            event.stopPropagation()\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(\"dx-button\");\r\n        this._renderType();\r\n        this._renderStylingMode();\r\n        this._renderInkRipple();\r\n        this._renderClick();\r\n        this._updateAriaLabel();\r\n        super._initMarkup();\r\n        this._updateContent();\r\n        this.setAria(\"role\", \"button\")\r\n    }\r\n    _getAnonymousTemplateName() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    }\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(_ref3 => {\r\n                var {\r\n                    model: model = {},\r\n                    container: container\r\n                } = _ref3;\r\n                var {\r\n                    text: text,\r\n                    icon: icon\r\n                } = model;\r\n                var {\r\n                    iconPosition: iconPosition\r\n                } = this.option();\r\n                var $icon = getImageContainer(icon);\r\n                var $textContainer = text && $(\"<span>\").text(text).addClass(\"dx-button-text\");\r\n                var $container = $(container);\r\n                $container.append($textContainer);\r\n                if (\"left\" === iconPosition) {\r\n                    $container.prepend($icon)\r\n                } else {\r\n                    $icon.addClass(\"dx-icon-right\");\r\n                    $container.append($icon)\r\n                }\r\n            })\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name\r\n        } = args;\r\n        switch (name) {\r\n            case \"onClick\":\r\n                this._updateClick();\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._updateContent();\r\n                this._updateAriaLabel();\r\n                break;\r\n            case \"type\":\r\n                this._updateType();\r\n                this._updateContent();\r\n                break;\r\n            case \"_templateData\":\r\n                break;\r\n            case \"template\":\r\n            case \"iconPosition\":\r\n                this._updateContent();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._updateStylingMode();\r\n                break;\r\n            case \"useSubmitBehavior\":\r\n                this._updateSubmitInput();\r\n                break;\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _renderClick() {\r\n        var $el = this.$element();\r\n        dxClickEvent.off($el, {\r\n            namespace: this.NAME\r\n        });\r\n        dxClickEvent.on($el, event => this._executeClickAction(event), {\r\n            namespace: this.NAME\r\n        });\r\n        this._updateClick()\r\n    }\r\n    _renderInkRipple() {\r\n        var {\r\n            text: text,\r\n            icon: icon,\r\n            type: type,\r\n            useInkRipple: useInkRipple\r\n        } = this.option();\r\n        if (useInkRipple) {\r\n            var isOnlyIconButton = !text && icon || \"back\" === type;\r\n            var _inkRipple = render(isOnlyIconButton ? {\r\n                waveSizeCoefficient: 1,\r\n                useHoldAnimation: false,\r\n                isCentered: true\r\n            } : {});\r\n            var changeWaveVisibility = (event, visible) => {\r\n                var {\r\n                    activeStateEnabled: activeStateEnabled,\r\n                    useInkRipple: useInkRipple\r\n                } = this.option();\r\n                if (useInkRipple && activeStateEnabled && !this._disposed) {\r\n                    var config = {\r\n                        element: this._$content(),\r\n                        event: event\r\n                    };\r\n                    visible ? _inkRipple.showWave(config) : _inkRipple.hideWave(config)\r\n                }\r\n            };\r\n            this._attachActiveEvents(_ref4 => {\r\n                var {\r\n                    event: event\r\n                } = _ref4;\r\n                return changeWaveVisibility(event, true)\r\n            }, _ref5 => {\r\n                var {\r\n                    event: event\r\n                } = _ref5;\r\n                return changeWaveVisibility(event)\r\n            })\r\n        }\r\n    }\r\n    _renderStylingMode() {\r\n        var $element = this.$element();\r\n        var {\r\n            stylingMode: stylingMode\r\n        } = this.option();\r\n        if (-1 === [\"contained\", \"text\", \"outlined\"].indexOf(stylingMode)) {\r\n            stylingMode = this._getDefaultOptions().stylingMode\r\n        }\r\n        $element.addClass(\"dx-button-mode-\".concat(stylingMode))\r\n    }\r\n    _renderSubmitInput() {\r\n        var {\r\n            useSubmitBehavior: useSubmitBehavior\r\n        } = this.option();\r\n        if (useSubmitBehavior) {\r\n            var submitAction = this._getSubmitAction();\r\n            var $content = this._$content();\r\n            $(\"<input>\").attr(\"type\", \"submit\").attr(\"tabindex\", -1).addClass(\"dx-button-submit-input\").appendTo($content);\r\n            clickEvent.on(this._$submitInput(), event => submitAction({\r\n                event: event\r\n            }))\r\n        }\r\n    }\r\n    _renderType() {\r\n        var {\r\n            type: type\r\n        } = this.option();\r\n        var $element = this.$element();\r\n        type && $element.addClass(\"dx-button-\".concat(type))\r\n    }\r\n    _submitInput() {\r\n        return this._$submitInput().get(0)\r\n    }\r\n    _supportedKeys() {\r\n        var click = e => {\r\n            e.preventDefault();\r\n            this._executeClickAction(e)\r\n        };\r\n        return extend(super._supportedKeys(), {\r\n            space: click,\r\n            enter: click\r\n        })\r\n    }\r\n    _updateAriaLabel() {\r\n        var ariaTarget = this._getAriaTarget();\r\n        var {\r\n            icon: icon,\r\n            text: text\r\n        } = this.option();\r\n        if (!text) {\r\n            if (\"image\" === getImageSourceType(icon)) {\r\n                icon = -1 === icon.indexOf(\"base64\") ? icon.replace(/.+\\/([^.]+)\\..+$/, \"$1\") : \"Base64\"\r\n            }\r\n            text = icon || \"\"\r\n        }\r\n        ariaTarget.attr(\"aria-label\", text || null)\r\n    }\r\n    _updateClick() {\r\n        this._clickAction = this._createActionByOption(\"onClick\", {\r\n            excludeValidators: [\"readOnly\"],\r\n            afterExecute: () => {\r\n                var {\r\n                    useSubmitBehavior: useSubmitBehavior\r\n                } = this.option();\r\n                useSubmitBehavior && setTimeout(() => this._submitInput().click())\r\n            }\r\n        })\r\n    }\r\n    _updateContent() {\r\n        var $element = this.$element();\r\n        var $content = this._$content();\r\n        var data = this._getContentData();\r\n        var {\r\n            template: template,\r\n            iconPosition: iconPosition\r\n        } = this.option();\r\n        var {\r\n            icon: icon,\r\n            text: text\r\n        } = data;\r\n        $content.length ? $content.empty() : $content = $(\"<div>\").addClass(\"dx-button-content\").appendTo($element);\r\n        $element.toggleClass(\"dx-button-has-icon\", !!icon).toggleClass(\"dx-button-icon-right\", !!icon && \"left\" !== iconPosition).toggleClass(\"dx-button-has-text\", !!text);\r\n        var $template = $(this._getTemplateByOption(\"template\").render({\r\n            model: data,\r\n            container: getPublicElement($content),\r\n            transclude: this._templateManager.anonymousTemplateName === template\r\n        }));\r\n        if ($template.hasClass(\"dx-template-wrapper\")) {\r\n            $template.addClass(\"dx-button-content\");\r\n            $content.replaceWith($template)\r\n        }\r\n        this._updateSubmitInput()\r\n    }\r\n    _updateSubmitInput() {\r\n        var {\r\n            useSubmitBehavior: useSubmitBehavior\r\n        } = this.option();\r\n        var $submitInput = this._$submitInput();\r\n        if (!useSubmitBehavior && $submitInput.length) {\r\n            $submitInput.remove()\r\n        } else if (useSubmitBehavior && !$submitInput.length) {\r\n            this._renderSubmitInput()\r\n        }\r\n    }\r\n    _updateStylingMode() {\r\n        var $element = this.$element();\r\n        [\"contained\", \"text\", \"outlined\"].map(mode => \"dx-button-mode-\".concat(mode)).forEach($element.removeClass.bind($element));\r\n        this._renderStylingMode()\r\n    }\r\n    _updateType() {\r\n        var $element = this.$element();\r\n        [\"back\", \"danger\", \"default\", \"normal\", \"success\"].map(type => \"dx-button-\".concat(type)).forEach($element.removeClass.bind($element));\r\n        this._renderType()\r\n    }\r\n    get _validationGroupConfig() {\r\n        return ValidationEngine.getGroupConfig(this._findGroup())\r\n    }\r\n}\r\nregisterComponent(\"dxButton\", Button);\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}