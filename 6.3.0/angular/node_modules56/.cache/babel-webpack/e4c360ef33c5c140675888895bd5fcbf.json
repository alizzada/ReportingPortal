{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../core/utils/date\";\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar DateAdapterCore = /*#__PURE__*/function () {\n  function DateAdapterCore(source) {\n    _classCallCheck(this, DateAdapterCore);\n\n    this._source = new Date(source.getTime ? source.getTime() : source);\n  }\n\n  _createClass(DateAdapterCore, [{\n    key: \"source\",\n    get: function get() {\n      return this._source;\n    }\n  }, {\n    key: \"result\",\n    value: function result() {\n      return this._source;\n    }\n  }, {\n    key: \"getTimezoneOffset\",\n    value: function getTimezoneOffset() {\n      var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n\n      var value = this._source.getTimezoneOffset();\n\n      if (\"minute\" === format) {\n        return value * toMs(\"minute\");\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      return this._source.getTime();\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(value) {\n      this._source.setTime(value);\n\n      return this;\n    }\n  }, {\n    key: \"addTime\",\n    value: function addTime(value) {\n      this._source.setTime(this._source.getTime() + value);\n\n      return this;\n    }\n  }, {\n    key: \"setMinutes\",\n    value: function setMinutes(value) {\n      this._source.setMinutes(value);\n\n      return this;\n    }\n  }, {\n    key: \"addMinutes\",\n    value: function addMinutes(value) {\n      this._source.setMinutes(this._source.getMinutes() + value);\n\n      return this;\n    }\n  }, {\n    key: \"subtractMinutes\",\n    value: function subtractMinutes(value) {\n      this._source.setMinutes(this._source.getMinutes() - value);\n\n      return this;\n    }\n  }]);\n\n  return DateAdapterCore;\n}();\n\nvar DateAdapter = function DateAdapter(date) {\n  return new DateAdapterCore(date);\n};\n\nexport default DateAdapter;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/dateAdapter.js"],"names":["dateUtils","toMs","dateToMilliseconds","DateAdapterCore","source","_source","Date","getTime","format","arguments","length","value","getTimezoneOffset","setTime","setMinutes","getMinutes","DateAdapter","date"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,IAAIC,IAAI,GAAGD,SAAS,CAACE,kBAArB;;IACMC,e;AACF,2BAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKC,OAAL,GAAe,IAAIC,IAAJ,CAASF,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAP,EAAjB,GAAoCH,MAA7C,CAAf;AACH;;;;SACD,eAAa;AACT,aAAO,KAAKC,OAAZ;AACH;;;WACD,kBAAS;AACL,aAAO,KAAKA,OAAZ;AACH;;;WACD,6BAAoB;AAChB,UAAIG,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAAK,CAAnF;;AACA,UAAIE,KAAK,GAAG,KAAKN,OAAL,CAAaO,iBAAb,EAAZ;;AACA,UAAI,aAAaJ,MAAjB,EAAyB;AACrB,eAAOG,KAAK,GAAGV,IAAI,CAAC,QAAD,CAAnB;AACH;;AACD,aAAOU,KAAP;AACH;;;WACD,mBAAU;AACN,aAAO,KAAKN,OAAL,CAAaE,OAAb,EAAP;AACH;;;WACD,iBAAQI,KAAR,EAAe;AACX,WAAKN,OAAL,CAAaQ,OAAb,CAAqBF,KAArB;;AACA,aAAO,IAAP;AACH;;;WACD,iBAAQA,KAAR,EAAe;AACX,WAAKN,OAAL,CAAaQ,OAAb,CAAqB,KAAKR,OAAL,CAAaE,OAAb,KAAyBI,KAA9C;;AACA,aAAO,IAAP;AACH;;;WACD,oBAAWA,KAAX,EAAkB;AACd,WAAKN,OAAL,CAAaS,UAAb,CAAwBH,KAAxB;;AACA,aAAO,IAAP;AACH;;;WACD,oBAAWA,KAAX,EAAkB;AACd,WAAKN,OAAL,CAAaS,UAAb,CAAwB,KAAKT,OAAL,CAAaU,UAAb,KAA4BJ,KAApD;;AACA,aAAO,IAAP;AACH;;;WACD,yBAAgBA,KAAhB,EAAuB;AACnB,WAAKN,OAAL,CAAaS,UAAb,CAAwB,KAAKT,OAAL,CAAaU,UAAb,KAA4BJ,KAApD;;AACA,aAAO,IAAP;AACH;;;;;;AAEL,IAAIK,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAI,IAAId,eAAJ,CAAoBc,IAApB,CAAJ;AAAA,CAAtB;;AACA,eAAeD,WAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../core/utils/date\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass DateAdapterCore {\r\n    constructor(source) {\r\n        this._source = new Date(source.getTime ? source.getTime() : source)\r\n    }\r\n    get source() {\r\n        return this._source\r\n    }\r\n    result() {\r\n        return this._source\r\n    }\r\n    getTimezoneOffset() {\r\n        var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var value = this._source.getTimezoneOffset();\r\n        if (\"minute\" === format) {\r\n            return value * toMs(\"minute\")\r\n        }\r\n        return value\r\n    }\r\n    getTime() {\r\n        return this._source.getTime()\r\n    }\r\n    setTime(value) {\r\n        this._source.setTime(value);\r\n        return this\r\n    }\r\n    addTime(value) {\r\n        this._source.setTime(this._source.getTime() + value);\r\n        return this\r\n    }\r\n    setMinutes(value) {\r\n        this._source.setMinutes(value);\r\n        return this\r\n    }\r\n    addMinutes(value) {\r\n        this._source.setMinutes(this._source.getMinutes() + value);\r\n        return this\r\n    }\r\n    subtractMinutes(value) {\r\n        this._source.setMinutes(this._source.getMinutes() - value);\r\n        return this\r\n    }\r\n}\r\nvar DateAdapter = date => new DateAdapterCore(date);\r\nexport default DateAdapter;\r\n"]},"metadata":{},"sourceType":"module"}