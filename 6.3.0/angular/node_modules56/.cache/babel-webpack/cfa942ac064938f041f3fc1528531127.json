{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxMap from 'devextreme/ui/map';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiCenterComponent, DxiMarkerComponent, DxiRouteComponent, DxoApiKeyModule, DxiCenterModule, DxoKeyModule, DxiMarkerModule, DxiLocationModule, DxoTooltipModule, DxiRouteModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The Map is an interactive UI component that displays a geographic map with markers and routes.\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxMapComponent = /*@__PURE__*/function () {\n  var DxMapComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxMapComponent, _DxComponent);\n\n    var _super = _createSuper(DxMapComponent);\n\n    function DxMapComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxMapComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'click',\n        emit: 'onClick'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'markerAdded',\n        emit: 'onMarkerAdded'\n      }, {\n        subscribe: 'markerRemoved',\n        emit: 'onMarkerRemoved'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'ready',\n        emit: 'onReady'\n      }, {\n        subscribe: 'routeAdded',\n        emit: 'onRouteAdded'\n      }, {\n        subscribe: 'routeRemoved',\n        emit: 'onRouteRemoved'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'apiKeyChange'\n      }, {\n        emit: 'autoAdjustChange'\n      }, {\n        emit: 'centerChange'\n      }, {\n        emit: 'controlsChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'keyChange'\n      }, {\n        emit: 'markerIconSrcChange'\n      }, {\n        emit: 'markersChange'\n      }, {\n        emit: 'providerChange'\n      }, {\n        emit: 'routesChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'typeChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'zoomChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     *\n    \r\n     */\n\n\n    _createClass(DxMapComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"apiKey\",\n      get: function get() {\n        return this._getOption('apiKey');\n      },\n      set: function set(value) {\n        this._setOption('apiKey', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"autoAdjust\",\n      get: function get() {\n        return this._getOption('autoAdjust');\n      },\n      set: function set(value) {\n        this._setOption('autoAdjust', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"center\",\n      get: function get() {\n        return this._getOption('center');\n      },\n      set: function set(value) {\n        this._setOption('center', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"controls\",\n      get: function get() {\n        return this._getOption('controls');\n      },\n      set: function set(value) {\n        this._setOption('controls', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       *\n      \r\n       * @deprecated\n      \r\n       */\n\n    }, {\n      key: \"key\",\n      get: function get() {\n        return this._getOption('key');\n      },\n      set: function set(value) {\n        this._setOption('key', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"markerIconSrc\",\n      get: function get() {\n        return this._getOption('markerIconSrc');\n      },\n      set: function set(value) {\n        this._setOption('markerIconSrc', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"markers\",\n      get: function get() {\n        return this._getOption('markers');\n      },\n      set: function set(value) {\n        this._setOption('markers', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"provider\",\n      get: function get() {\n        return this._getOption('provider');\n      },\n      set: function set(value) {\n        this._setOption('provider', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"routes\",\n      get: function get() {\n        return this._getOption('routes');\n      },\n      set: function set(value) {\n        this._setOption('routes', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"type\",\n      get: function get() {\n        return this._getOption('type');\n      },\n      set: function set(value) {\n        this._setOption('type', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n      /**\n       *\n      \r\n       */\n\n    }, {\n      key: \"zoom\",\n      get: function get() {\n        return this._getOption('zoom');\n      },\n      set: function set(value) {\n        this._setOption('zoom', value);\n      }\n    }, {\n      key: \"centerChildren\",\n      get: function get() {\n        return this._getOption('center');\n      },\n      set: function set(value) {\n        this.setChildren('center', value);\n      }\n    }, {\n      key: \"markersChildren\",\n      get: function get() {\n        return this._getOption('markers');\n      },\n      set: function set(value) {\n        this.setChildren('markers', value);\n      }\n    }, {\n      key: \"routesChildren\",\n      get: function get() {\n        return this._getOption('routes');\n      },\n      set: function set(value) {\n        this.setChildren('routes', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxMap(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxMapComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('center', changes);\n        this.setupChanges('markers', changes);\n        this.setupChanges('routes', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('center');\n\n        this._idh.doCheck('markers');\n\n        this._idh.doCheck('routes');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxMapComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxMapComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxMapComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxMapComponent;\n  }(DxComponent);\n\n  DxMapComponent.ɵfac = function DxMapComponent_Factory(t) {\n    return new (t || DxMapComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxMapComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: DxMapComponent,\n    selectors: [[\"dx-map\"]],\n    contentQueries: function DxMapComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiCenterComponent, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiMarkerComponent, 0);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiRouteComponent, 0);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centerChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.markersChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.routesChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      apiKey: \"apiKey\",\n      autoAdjust: \"autoAdjust\",\n      center: \"center\",\n      controls: \"controls\",\n      disabled: \"disabled\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      key: \"key\",\n      markerIconSrc: \"markerIconSrc\",\n      markers: \"markers\",\n      provider: \"provider\",\n      routes: \"routes\",\n      rtlEnabled: \"rtlEnabled\",\n      tabIndex: \"tabIndex\",\n      type: \"type\",\n      visible: \"visible\",\n      width: \"width\",\n      zoom: \"zoom\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onMarkerAdded: \"onMarkerAdded\",\n      onMarkerRemoved: \"onMarkerRemoved\",\n      onOptionChanged: \"onOptionChanged\",\n      onReady: \"onReady\",\n      onRouteAdded: \"onRouteAdded\",\n      onRouteRemoved: \"onRouteRemoved\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      apiKeyChange: \"apiKeyChange\",\n      autoAdjustChange: \"autoAdjustChange\",\n      centerChange: \"centerChange\",\n      controlsChange: \"controlsChange\",\n      disabledChange: \"disabledChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      keyChange: \"keyChange\",\n      markerIconSrcChange: \"markerIconSrcChange\",\n      markersChange: \"markersChange\",\n      providerChange: \"providerChange\",\n      routesChange: \"routesChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      tabIndexChange: \"tabIndexChange\",\n      typeChange: \"typeChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      zoomChange: \"zoomChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxMapComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxMapComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxMapComponent);\n  return DxMapComponent;\n}();\n\nvar DxMapModule = /*@__PURE__*/function () {\n  var DxMapModule = function DxMapModule() {\n    _classCallCheck(this, DxMapModule);\n  };\n\n  DxMapModule.ɵfac = function DxMapModule_Factory(t) {\n    return new (t || DxMapModule)();\n  };\n\n  DxMapModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: DxMapModule\n  });\n  DxMapModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoApiKeyModule, DxiCenterModule, DxoKeyModule, DxiMarkerModule, DxiLocationModule, DxoTooltipModule, DxiRouteModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoApiKeyModule, DxiCenterModule, DxoKeyModule, DxiMarkerModule, DxiLocationModule, DxoTooltipModule, DxiRouteModule, DxTemplateModule]\n  });\n  return DxMapModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxMapModule, {\n    declarations: function declarations() {\n      return [DxMapComponent];\n    },\n    imports: function imports() {\n      return [DxoApiKeyModule, DxiCenterModule, DxoKeyModule, DxiMarkerModule, DxiLocationModule, DxoTooltipModule, DxiRouteModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxMapComponent, DxoApiKeyModule, DxiCenterModule, DxoKeyModule, DxiMarkerModule, DxiLocationModule, DxoTooltipModule, DxiRouteModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxMapComponent, DxMapModule };","map":null,"metadata":{},"sourceType":"module"}