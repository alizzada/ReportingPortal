{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/component_wrapper/component.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { render, createRef } from \"inferno\";\nimport { createElement } from \"inferno-create-element\";\nimport { hydrate } from \"inferno-hydrate\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport DOMComponent from \"../../core/dom_component\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getPublicElement } from \"../../core/element\";\nimport { isDefined, isRenderer } from \"../../core/utils/type\";\nimport { InfernoEffectHost } from \"@devextreme/vdom\";\nimport { TemplateWrapper } from \"./template_wrapper\";\nimport { updatePropsImmutable } from \"./utils\";\n\nvar setDefaultOptionValue = function setDefaultOptionValue(options, defaultValueGetter) {\n  return function (name) {\n    if (options.hasOwnProperty(name) && void 0 === options[name]) {\n      options[name] = defaultValueGetter(name);\n    }\n  };\n};\n\nvar ComponentWrapper = /*#__PURE__*/function (_DOMComponent) {\n  _inherits(ComponentWrapper, _DOMComponent);\n\n  var _super = _createSuper(ComponentWrapper);\n\n  function ComponentWrapper() {\n    var _this;\n\n    _classCallCheck(this, ComponentWrapper);\n\n    _this = _super.apply(this, arguments);\n    _this._disposeMethodCalled = false;\n    return _this;\n  }\n\n  _createClass(ComponentWrapper, [{\n    key: \"_propsInfo\",\n    get: function get() {\n      return {\n        allowNull: [],\n        twoWay: [],\n        elements: [],\n        templates: [],\n        props: []\n      };\n    }\n  }, {\n    key: \"viewRef\",\n    get: function get() {\n      var _this$_viewRef;\n\n      return null === (_this$_viewRef = this._viewRef) || void 0 === _this$_viewRef ? void 0 : _this$_viewRef.current;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      var _this2 = this;\n\n      return extend(true, _get(_getPrototypeOf(ComponentWrapper.prototype), \"_getDefaultOptions\", this).call(this), this._viewComponent.defaultProps, this._propsInfo.twoWay.reduce(function (options, _ref) {\n        var _extends2;\n\n        var _ref3 = _slicedToArray(_ref, 3),\n            name = _ref3[0],\n            defaultValue = _ref3[1],\n            eventName = _ref3[2];\n\n        return _extends({}, options, (_extends2 = {}, _defineProperty(_extends2, name, defaultValue), _defineProperty(_extends2, eventName, function (value) {\n          return _this2.option(name, value);\n        }), _extends2));\n      }, {}), this._propsInfo.templates.reduce(function (options, name) {\n        return _extends({}, options, _defineProperty({}, name, null));\n      }, {}));\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var props = this.getProps();\n\n      this._renderWrapper(props);\n    }\n  }, {\n    key: \"_renderWrapper\",\n    value: function _renderWrapper(props) {\n      var containerNode = this.$element()[0];\n      var parentNode = containerNode.parentNode;\n\n      if (!this._isNodeReplaced) {\n        var nextNode = null === containerNode || void 0 === containerNode ? void 0 : containerNode.nextSibling;\n        var rootNode = domAdapter.createElement(\"div\");\n        rootNode.appendChild(containerNode);\n\n        var mountNode = this._documentFragment.appendChild(rootNode);\n\n        InfernoEffectHost.lock();\n        hydrate(createElement(this._viewComponent, props), mountNode);\n        containerNode.$V = mountNode.$V;\n\n        if (parentNode) {\n          parentNode.insertBefore(containerNode, nextNode);\n        }\n\n        InfernoEffectHost.callEffects();\n        this._isNodeReplaced = true;\n      } else {\n        render(createElement(this._viewComponent, props), containerNode);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {}\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposeMethodCalled = true;\n\n      _get(_getPrototypeOf(ComponentWrapper.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      var containerNode = this.$element()[0];\n      var parentNode = containerNode.parentNode;\n      parentNode.$V = containerNode.$V;\n      containerNode.$V = null;\n      render(this._disposeMethodCalled ? createElement(containerNode.tagName, this.elementAttr) : null, parentNode);\n      delete parentNode.$V;\n\n      _get(_getPrototypeOf(ComponentWrapper.prototype), \"_dispose\", this).call(this);\n    }\n  }, {\n    key: \"elementAttr\",\n    get: function get() {\n      var _this$_storedClasses;\n\n      if (!this._elementAttr) {\n        var attributes = this.$element()[0].attributes;\n        this._elementAttr = _extends({}, Object.keys(attributes).reduce(function (a, key) {\n          if (attributes[key].specified) {\n            a[attributes[key].name] = attributes[key].value;\n          }\n\n          return a;\n        }, {}));\n      }\n\n      var elemStyle = this.$element()[0].style;\n      var style = {};\n\n      for (var i = 0; i < elemStyle.length; i++) {\n        style[elemStyle[i]] = elemStyle.getPropertyValue(elemStyle[i]);\n      }\n\n      this._elementAttr.style = style;\n      var cssClass = this.$element()[0].getAttribute(\"class\") || \"\";\n      this._storedClasses = null !== (_this$_storedClasses = this._storedClasses) && void 0 !== _this$_storedClasses ? _this$_storedClasses : cssClass.split(\" \").filter(function (name) {\n        return 0 === name.indexOf(\"dx-\");\n      }).join(\" \");\n      this._elementAttr.class = cssClass.split(\" \").filter(function (name) {\n        return 0 !== name.indexOf(\"dx-\");\n      }).concat(this._storedClasses).join(\" \").trim();\n      return this._elementAttr;\n    }\n  }, {\n    key: \"_patchOptionValues\",\n    value: function _patchOptionValues(options) {\n      var _this3 = this;\n\n      var _this$_propsInfo = this._propsInfo,\n          allowNull = _this$_propsInfo.allowNull,\n          elements = _this$_propsInfo.elements,\n          props = _this$_propsInfo.props,\n          twoWay = _this$_propsInfo.twoWay;\n      var defaultProps = this._viewComponent.defaultProps;\n      var widgetProps = props.reduce(function (acc, propName) {\n        if (options.hasOwnProperty(propName)) {\n          acc[propName] = options[propName];\n        }\n\n        return acc;\n      }, {\n        ref: options.ref,\n        children: options.children\n      });\n      allowNull.forEach(setDefaultOptionValue(widgetProps, function () {\n        return null;\n      }));\n      Object.keys(defaultProps).forEach(setDefaultOptionValue(widgetProps, function (name) {\n        return defaultProps[name];\n      }));\n      twoWay.forEach(function (_ref2) {\n        var _ref4 = _slicedToArray(_ref2, 2),\n            name = _ref4[0],\n            defaultValue = _ref4[1];\n\n        return setDefaultOptionValue(widgetProps, function () {\n          return defaultValue;\n        })(name);\n      });\n      elements.forEach(function (name) {\n        if (name in widgetProps) {\n          var value = widgetProps[name];\n\n          if (isRenderer(value)) {\n            widgetProps[name] = _this3._patchElementParam(value);\n          }\n        }\n      });\n      return widgetProps;\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps() {\n      var _this4 = this;\n\n      var _this$option = this.option(),\n          elementAttr = _this$option.elementAttr;\n\n      var options = this._patchOptionValues(_extends({}, this._props, {\n        ref: this._viewRef,\n        children: this._extractDefaultSlot()\n      }));\n\n      this._propsInfo.templates.forEach(function (template) {\n        options[template] = _this4._componentTemplates[template];\n      });\n\n      return _extends({}, options, this.elementAttr, elementAttr, {\n        className: [].concat(_toConsumableArray((this.elementAttr.class || \"\").split(\" \")), _toConsumableArray((elementAttr.class || \"\").split(\" \"))).filter(function (c, i, a) {\n          return c && a.indexOf(c) === i;\n        }).join(\" \").trim(),\n        class: \"\"\n      }, this._actionsMap);\n    }\n  }, {\n    key: \"_getActionConfigs\",\n    value: function _getActionConfigs() {\n      return {};\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this5 = this;\n\n      _get(_getPrototypeOf(ComponentWrapper.prototype), \"_init\", this).call(this);\n\n      this._props = _extends({}, this.option());\n      this._documentFragment = domAdapter.createDocumentFragment();\n      this._actionsMap = {};\n      this._componentTemplates = {};\n\n      this._propsInfo.templates.forEach(function (template) {\n        _this5._componentTemplates[template] = _this5._createTemplateComponent(_this5._props[template]);\n      });\n\n      Object.keys(this._getActionConfigs()).forEach(function (name) {\n        return _this5._addAction(name);\n      });\n      this._viewRef = createRef();\n\n      this._supportedKeys = function () {\n        return {};\n      };\n    }\n  }, {\n    key: \"_addAction\",\n    value: function _addAction(event, action) {\n      if (!action) {\n        var actionByOption = this._createActionByOption(event, this._getActionConfigs()[event]);\n\n        action = function action(actArgs) {\n          Object.keys(actArgs).forEach(function (name) {\n            if (isDefined(actArgs[name]) && domAdapter.isNode(actArgs[name])) {\n              actArgs[name] = getPublicElement($(actArgs[name]));\n            }\n          });\n          return actionByOption(actArgs);\n        };\n      }\n\n      this._actionsMap[event] = action;\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(option) {\n      var fullName = option.fullName,\n          name = option.name,\n          value = option.value;\n      updatePropsImmutable(this._props, this.option(), name, fullName);\n\n      if (this._propsInfo.templates.indexOf(name) > -1) {\n        this._componentTemplates[name] = this._createTemplateComponent(value);\n      }\n\n      if (name && this._getActionConfigs()[name]) {\n        this._addAction(name);\n      }\n\n      _get(_getPrototypeOf(ComponentWrapper.prototype), \"_optionChanged\", this).call(this, option);\n\n      this._invalidate();\n    }\n  }, {\n    key: \"_extractDefaultSlot\",\n    value: function _extractDefaultSlot() {\n      if (this.option(\"_hasAnonymousTemplateContent\")) {\n        return createElement(TemplateWrapper, {\n          template: this._getTemplate(this._templateManager.anonymousTemplateName),\n          transclude: true\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_createTemplateComponent\",\n    value: function _createTemplateComponent(templateOption) {\n      if (!templateOption) {\n        return;\n      }\n\n      var template = this._getTemplate(templateOption);\n\n      return function (model) {\n        return createElement(TemplateWrapper, {\n          template: template,\n          model: model\n        });\n      };\n    }\n  }, {\n    key: \"_wrapKeyDownHandler\",\n    value: function _wrapKeyDownHandler(handler) {\n      var _this6 = this;\n\n      return function (options) {\n        var keyName = options.keyName,\n            originalEvent = options.originalEvent,\n            which = options.which;\n\n        var keys = _this6._supportedKeys();\n\n        var func = keys[keyName] || keys[which];\n\n        if (void 0 !== func) {\n          var _handler = func.bind(_this6);\n\n          var result = _handler(originalEvent, options);\n\n          if (!result) {\n            originalEvent.cancel = true;\n            return originalEvent;\n          }\n        }\n\n        return null === handler || void 0 === handler ? void 0 : handler(originalEvent, options);\n      };\n    }\n  }, {\n    key: \"_toPublicElement\",\n    value: function _toPublicElement(element) {\n      return getPublicElement($(element));\n    }\n  }, {\n    key: \"_patchElementParam\",\n    value: function _patchElementParam(value) {\n      var _result, _result2;\n\n      var result;\n\n      try {\n        result = $(value);\n      } catch (error) {\n        return value;\n      }\n\n      result = null === (_result = result) || void 0 === _result ? void 0 : _result.get(0);\n      return null !== (_result2 = result) && void 0 !== _result2 && _result2.nodeType ? result : value;\n    }\n  }, {\n    key: \"repaint\",\n    value: function repaint() {\n      this._isNodeReplaced = false;\n\n      this._refresh();\n    }\n  }, {\n    key: \"registerKeyHandler\",\n    value: function registerKeyHandler(key, handler) {\n      var currentKeys = this._supportedKeys();\n\n      this._supportedKeys = function () {\n        return _extends({}, currentKeys, _defineProperty({}, key, handler));\n      };\n    }\n  }, {\n    key: \"setAria\",\n    value: function setAria(name, value) {\n      throw new Error('\"setAria\" method is deprecated, use \"aria\" property instead');\n    }\n  }]);\n\n  return ComponentWrapper;\n}(DOMComponent);\n\nexport { ComponentWrapper as default };\nComponentWrapper.IS_RENOVATED_WIDGET = false;\nComponentWrapper.IS_RENOVATED_WIDGET = true;","map":null,"metadata":{},"sourceType":"module"}