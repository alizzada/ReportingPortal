{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/ready_callbacks.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport domAdapter from \"../dom_adapter\";\nimport injector from \"./dependency_injector\";\nimport { hasWindow } from \"./window\";\nimport callOnce from \"./call_once\";\nvar callbacks = [];\n\nvar isReady = function isReady() {\n  return \"complete\" === domAdapter.getReadyState() || \"loading\" !== domAdapter.getReadyState() && !domAdapter.getDocumentElement().doScroll;\n};\n\nvar subscribeReady = callOnce(function () {\n  var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", function () {\n    readyCallbacks.fire();\n    removeListener();\n  });\n});\nvar readyCallbacks = {\n  add: function add(callback) {\n    var windowExists = hasWindow();\n\n    if (windowExists && isReady()) {\n      callback();\n    } else {\n      callbacks.push(callback);\n      windowExists && subscribeReady();\n    }\n  },\n  fire: function fire() {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n    callbacks = [];\n  }\n};\nexport default injector(readyCallbacks);","map":null,"metadata":{},"sourceType":"module"}