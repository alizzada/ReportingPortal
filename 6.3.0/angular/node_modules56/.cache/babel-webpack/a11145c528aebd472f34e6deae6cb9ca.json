{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tree_map.base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { buildRectAppearance as _buildRectAppearance, buildTextAppearance as _buildTextAppearance } from \"./common\";\nimport Node from \"./node\";\nimport { getAlgorithm as _getTilingAlgorithm, setDefaultAlgorithm } from \"./tiling\";\nimport { getColorizer as _getColorizer, setDefaultColorizer } from \"./colorizing\";\nimport { patchFontOptions as _patchFontOptions } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nimport baseWidget from \"../core/base_widget\";\nvar _max = Math.max;\nvar directions = {\n  lefttoprightbottom: [1, 1],\n  leftbottomrighttop: [1, -1],\n  righttopleftbottom: [-1, 1],\n  rightbottomlefttop: [-1, -1]\n};\nimport \"./tiling.squarified\";\nsetDefaultAlgorithm(\"squarified\");\nimport \"./colorizing.discrete\";\nsetDefaultColorizer(\"discrete\");\n\nfunction pickPositiveInteger(val) {\n  return val > 0 ? Math.round(val) : 0;\n}\n\nvar dxTreeMap = baseWidget.inherit({\n  _handlers: {\n    beginBuildNodes: _noop,\n    buildNode: _noop,\n    endBuildNodes: _noop,\n    setTrackerData: _noop,\n    calculateState: function calculateState(options) {\n      return _buildRectAppearance(options);\n    }\n  },\n  _rootClass: \"dxtm-tree-map\",\n  _rootClassPrefix: \"dxtm\",\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _themeSection: \"treeMap\",\n  _fontFields: [\"tile.label.font\", \"group.label.font\"],\n  _init: function _init() {\n    var that = this;\n    that._rectOffsets = {};\n    that._handlers = Object.create(that._handlers);\n    that._context = {\n      suspend: function suspend() {\n        if (!that._applyingChanges) {\n          that._suspendChanges();\n        }\n      },\n      resume: function resume() {\n        if (!that._applyingChanges) {\n          that._resumeChanges();\n        }\n      },\n      change: function change(codes) {\n        that._change(codes);\n      },\n      settings: [{}, {}],\n      calculateState: that._handlers.calculateState,\n      calculateLabelState: _buildTextAppearance\n    };\n    that._root = that._topNode = {\n      nodes: []\n    };\n    that.callBase.apply(that, arguments);\n  },\n  _initialChanges: [\"DATA_SOURCE\"],\n  _initCore: function _initCore() {\n    var renderer = this._renderer;\n\n    this._createProxyType();\n\n    this._tilesGroup = renderer.g().linkOn(renderer.root, \"tiles\").linkAppend();\n    this._labelsGroup = renderer.g().linkOn(renderer.root, \"labels\").linkAppend();\n  },\n  _createProxyType: _noop,\n  _disposeCore: function _disposeCore() {\n    this._filter && this._filter.dispose();\n\n    this._labelsGroup.linkOff();\n\n    this._tilesGroup.linkOff();\n  },\n  _applySize: function _applySize(rect) {\n    this._tilingRect = rect.slice();\n\n    this._change([\"TILING\"]);\n  },\n  _optionChangesMap: {\n    dataSource: \"DATA_SOURCE\",\n    valueField: \"NODES_CREATE\",\n    childrenField: \"NODES_CREATE\",\n    colorField: \"TILES\",\n    colorizer: \"TILES\",\n    labelField: \"LABELS\",\n    tile: \"TILE_SETTINGS\",\n    group: \"GROUP_SETTINGS\",\n    maxDepth: \"MAX_DEPTH\",\n    layoutAlgorithm: \"TILING\",\n    layoutDirection: \"TILING\"\n  },\n  _themeDependentChanges: [\"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\n  _changeDataSource: function _changeDataSource() {\n    this._isDataExpected = this._isSyncData = true;\n\n    this._updateDataSource();\n\n    this._isSyncData = false;\n\n    if (this._isDataExpected) {\n      this._suspendChanges();\n    }\n  },\n  _dataSourceChangedHandler: function _dataSourceChangedHandler() {\n    if (this._isDataExpected) {\n      this._isDataExpected = false;\n\n      this._change([\"NODES_CREATE\"]);\n\n      if (!this._isSyncData) {\n        this._resumeChanges();\n      }\n    } else {\n      this._requestChange([\"NODES_CREATE\"]);\n    }\n  },\n  _optionChangesOrder: [\"DATA_SOURCE\", \"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\n  _change_DATA_SOURCE: function _change_DATA_SOURCE() {\n    this._changeDataSource();\n  },\n  _change_TILE_SETTINGS: function _change_TILE_SETTINGS() {\n    this._changeTileSettings();\n  },\n  _change_GROUP_SETTINGS: function _change_GROUP_SETTINGS() {\n    this._changeGroupSettings();\n  },\n  _change_MAX_DEPTH: function _change_MAX_DEPTH() {\n    this._changeMaxDepth();\n  },\n  _customChangesOrder: [\"NODES_CREATE\", \"NODES_RESET\", \"TILES\", \"LABELS\", \"TILING\", \"LABELS_LAYOUT\"],\n  _change_NODES_CREATE: function _change_NODES_CREATE() {\n    this._buildNodes();\n  },\n  _change_NODES_RESET: function _change_NODES_RESET() {\n    this._resetNodes();\n  },\n  _change_TILES: function _change_TILES() {\n    this._applyTilesAppearance();\n  },\n  _change_LABELS: function _change_LABELS() {\n    this._applyLabelsAppearance();\n  },\n  _change_TILING: function _change_TILING() {\n    this._performTiling();\n  },\n  _change_LABELS_LAYOUT: function _change_LABELS_LAYOUT() {\n    this._performLabelsLayout();\n  },\n  _applyChanges: function _applyChanges() {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    if (!that._isDataExpected) {\n      that._drawn();\n    }\n\n    that._context.forceReset = false;\n  },\n  _buildNodes: function _buildNodes() {\n    var root = this._root = this._topNode = new Node();\n    root._id = 0;\n    root.parent = {};\n    root.data = {};\n    root.level = root.index = -1;\n    root.ctx = this._context;\n    root.label = null;\n    this._nodes = [root];\n\n    this._handlers.beginBuildNodes();\n\n    var processedData = this._processDataSourceItems(this._dataSourceItems() || []);\n\n    traverseDataItems(root, processedData.items, 0, {\n      itemsField: !processedData.isPlain && this._getOption(\"childrenField\", true) || \"items\",\n      valueField: this._getOption(\"valueField\", true) || \"value\",\n      buildNode: this._handlers.buildNode,\n      ctx: this._context,\n      nodes: this._nodes\n    });\n\n    this._onNodesCreated();\n\n    this._handlers.endBuildNodes();\n\n    this._change([\"NODES_RESET\"]);\n  },\n  _onNodesCreated: _noop,\n  _processDataSourceItems: function _processDataSourceItems(items) {\n    return {\n      items: items,\n      isPlain: false\n    };\n  },\n  _changeTileSettings: function _changeTileSettings() {\n    var options = this._getOption(\"tile\");\n\n    var offsets = this._rectOffsets;\n    var borderWidth = pickPositiveInteger(options.border.width);\n    var edgeOffset = borderWidth / 2;\n    var innerOffset = 1 & borderWidth ? .5 : 0;\n    var labelOptions = options.label;\n    var settings = this._context.settings[0];\n\n    this._change([\"TILES\", \"LABELS\"]);\n\n    settings.state = this._handlers.calculateState(options);\n    this._filter = this._filter || this._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\");\n\n    this._filter.attr(labelOptions.shadow);\n\n    this._calculateLabelSettings(settings, labelOptions, this._filter.id);\n\n    if (offsets.tileEdge !== edgeOffset || offsets.tileInner !== innerOffset) {\n      offsets.tileEdge = edgeOffset;\n      offsets.tileInner = innerOffset;\n\n      this._change([\"TILING\"]);\n    }\n  },\n  _changeGroupSettings: function _changeGroupSettings() {\n    var options = this._getOption(\"group\");\n\n    var labelOptions = options.label;\n    var offsets = this._rectOffsets;\n    var borderWidth = pickPositiveInteger(options.border.width);\n    var edgeOffset = borderWidth / 2;\n    var innerOffset = 1 & borderWidth ? .5 : 0;\n    var headerHeight = 0;\n    var groupPadding = pickPositiveInteger(options.padding);\n    var settings = this._context.settings[1];\n\n    this._change([\"TILES\", \"LABELS\"]);\n\n    settings.state = this._handlers.calculateState(options);\n\n    this._calculateLabelSettings(settings, labelOptions);\n\n    if (options.headerHeight >= 0) {\n      headerHeight = pickPositiveInteger(options.headerHeight);\n    } else {\n      headerHeight = settings.labelParams.height + 2 * pickPositiveInteger(labelOptions.paddingTopBottom);\n    }\n\n    if (this._headerHeight !== headerHeight) {\n      this._headerHeight = headerHeight;\n\n      this._change([\"TILING\"]);\n    }\n\n    if (this._groupPadding !== groupPadding) {\n      this._groupPadding = groupPadding;\n\n      this._change([\"TILING\"]);\n    }\n\n    if (offsets.headerEdge !== edgeOffset || offsets.headerInner !== innerOffset) {\n      offsets.headerEdge = edgeOffset;\n      offsets.headerInner = innerOffset;\n\n      this._change([\"TILING\"]);\n    }\n  },\n  _calculateLabelSettings: function _calculateLabelSettings(settings, options, filter) {\n    var bBox = this._getTextBBox(options.font);\n\n    var paddingLeftRight = pickPositiveInteger(options.paddingLeftRight);\n    var paddingTopBottom = pickPositiveInteger(options.paddingTopBottom);\n\n    var tileLabelOptions = this._getOption(\"tile.label\");\n\n    var groupLabelOptions = this._getOption(\"group.label\");\n\n    settings.labelState = _buildTextAppearance(options, filter);\n    settings.labelState.visible = !(\"visible\" in options) || !!options.visible;\n    settings.labelParams = {\n      height: bBox.height,\n      rtlEnabled: this._getOption(\"rtlEnabled\", true),\n      paddingTopBottom: paddingTopBottom,\n      paddingLeftRight: paddingLeftRight,\n      tileLabelWordWrap: tileLabelOptions.wordWrap,\n      tileLabelOverflow: tileLabelOptions.textOverflow,\n      groupLabelOverflow: groupLabelOptions.textOverflow\n    };\n  },\n  _changeMaxDepth: function _changeMaxDepth() {\n    var maxDepth = this._getOption(\"maxDepth\", true);\n\n    maxDepth = maxDepth >= 1 ? Math.round(maxDepth) : 1 / 0;\n\n    if (this._maxDepth !== maxDepth) {\n      this._maxDepth = maxDepth;\n\n      this._change([\"NODES_RESET\"]);\n    }\n  },\n  _resetNodes: function _resetNodes() {\n    this._tilesGroup.clear();\n\n    this._renderer.initHatching();\n\n    this._context.forceReset = true;\n    this._context.minLevel = this._topNode.level + 1;\n    this._context.maxLevel = this._context.minLevel + this._maxDepth - 1;\n\n    this._change([\"TILES\", \"LABELS\", \"TILING\"]);\n  },\n  _processNodes: function _processNodes(context, process) {\n    processNodes(context, this._topNode, process);\n  },\n  _applyTilesAppearance: function _applyTilesAppearance() {\n    var colorizer = _getColorizer(this._getOption(\"colorizer\"), this._themeManager, this._topNode);\n\n    this._processNodes({\n      renderer: this._renderer,\n      group: this._tilesGroup,\n      setTrackerData: this._handlers.setTrackerData,\n      colorField: this._getOption(\"colorField\", true) || \"color\",\n      getColor: colorizer\n    }, processTileAppearance);\n  },\n  _applyLabelsAppearance: function _applyLabelsAppearance() {\n    this._labelsGroup.clear();\n\n    this._processNodes({\n      renderer: this._renderer,\n      group: this._labelsGroup,\n      setTrackerData: this._handlers.setTrackerData,\n      labelField: this._getOption(\"labelField\", true) || \"name\"\n    }, processLabelAppearance);\n\n    this._change([\"LABELS_LAYOUT\"]);\n  },\n  _performTiling: function _performTiling() {\n    var context = {\n      algorithm: _getTilingAlgorithm(this._getOption(\"layoutAlgorithm\", true)),\n      directions: directions[String(this._getOption(\"layoutDirection\", true)).toLowerCase()] || directions.lefttoprightbottom,\n      headerHeight: this._headerHeight,\n      groupPadding: this._groupPadding,\n      rectOffsets: this._rectOffsets\n    };\n    this._topNode.innerRect = this._tilingRect;\n    calculateRects(context, this._topNode);\n\n    this._processNodes(context, processTiling);\n\n    this._change([\"LABELS_LAYOUT\"]);\n\n    this._onTilingPerformed();\n  },\n  _onTilingPerformed: _noop,\n  _performLabelsLayout: function _performLabelsLayout() {\n    this._processNodes(null, processLabelsLayout);\n  },\n  _getTextBBox: function _getTextBBox(fontOptions) {\n    var renderer = this._renderer;\n    var text = this._textForCalculations || renderer.text(\"0\", 0, 0);\n    this._textForCalculations = text;\n    text.css(_patchFontOptions(fontOptions)).append(renderer.root);\n    var bBox = text.getBBox();\n    text.remove();\n    return bBox;\n  }\n});\n\nfunction traverseDataItems(root, dataItems, level, params) {\n  var nodes = [];\n  var allNodes = params.nodes;\n  var node;\n  var i;\n  var ii = dataItems.length;\n  var dataItem;\n  var totalValue = 0;\n  var items;\n\n  for (i = 0; i < ii; ++i) {\n    var _items;\n\n    dataItem = dataItems[i];\n    node = new Node();\n    node._id = allNodes.length;\n    node.ctx = params.ctx;\n    node.parent = root;\n    node.level = level;\n    node.index = nodes.length;\n    node.data = dataItem;\n    params.buildNode(node);\n    allNodes.push(node);\n    nodes.push(node);\n    items = dataItem[params.itemsField];\n\n    if (null !== (_items = items) && void 0 !== _items && _items.length) {\n      traverseDataItems(node, items, level + 1, params);\n    }\n\n    if (dataItem[params.valueField] > 0) {\n      node.value = Number(dataItem[params.valueField]);\n    }\n\n    totalValue += node.value;\n  }\n\n  root.nodes = nodes;\n  root.value = totalValue;\n}\n\nfunction processNodes(context, root, process) {\n  var nodes = root.nodes;\n  var node;\n  var i;\n  var ii = nodes.length;\n\n  for (i = 0; i < ii; ++i) {\n    node = nodes[i];\n    process(context, node);\n\n    if (node.isNode()) {\n      processNodes(context, node, process);\n    }\n  }\n}\n\nvar createTile = [createLeaf, createGroup];\n\nfunction processTileAppearance(context, node) {\n  node.color = node.data[context.colorField] || context.getColor(node) || node.parent.color;\n  node.updateStyles();\n  node.tile = !node.ctx.forceReset && node.tile || createTile[Number(node.isNode())](context, node);\n  node.applyState();\n}\n\nfunction createLeaf(context, node) {\n  var tile = context.renderer.simpleRect().append(context.group);\n  context.setTrackerData(node, tile);\n  return tile;\n}\n\nfunction createGroup(context, node) {\n  var outer = context.renderer.simpleRect().append(context.group);\n  var inner = context.renderer.simpleRect().append(context.group);\n  context.setTrackerData(node, inner);\n  return {\n    outer: outer,\n    inner: inner\n  };\n}\n\nfunction processLabelAppearance(context, node) {\n  node.updateLabelStyle();\n\n  if (node.labelState.visible) {\n    createLabel(context, node, node.labelState, node.labelParams);\n  }\n}\n\nfunction createLabel(context, currentNode, settings, params) {\n  var textData = currentNode.data[context.labelField];\n  currentNode.label = textData ? String(textData) : null;\n  textData = currentNode.customLabel || currentNode.label;\n\n  if (textData) {\n    currentNode.text = context.renderer.text(textData).attr(settings.attr).css(settings.css).append(context.group);\n    context.setTrackerData(currentNode, currentNode.text);\n  }\n}\n\nvar emptyRect = [0, 0, 0, 0];\n\nfunction calculateRects(context, root) {\n  var nodes = root.nodes;\n  var items = [];\n  var rects = [];\n  var sum = 0;\n  var i;\n  var ii = items.length = rects.length = nodes.length;\n\n  for (i = 0; i < ii; ++i) {\n    sum += nodes[i].value;\n    items[i] = {\n      value: nodes[i].value,\n      i: i\n    };\n  }\n\n  if (sum > 0) {\n    context.algorithm({\n      items: items.slice(),\n      sum: sum,\n      rect: root.innerRect.slice(),\n      isRotated: 1 & nodes[0].level,\n      directions: context.directions\n    });\n  }\n\n  for (i = 0; i < ii; ++i) {\n    rects[i] = items[i].rect || emptyRect;\n  }\n\n  root.rects = rects;\n}\n\nfunction processTiling(context, node) {\n  var rect = node.parent.rects[node.index];\n  var rectOffsets = context.rectOffsets;\n  var headerHeight;\n\n  if (node.isNode()) {\n    setRectAttrs(node.tile.outer, buildTileRect(rect, node.parent.innerRect, rectOffsets.headerEdge, rectOffsets.headerInner));\n    rect = marginateRect(rect, context.groupPadding);\n    headerHeight = Math.min(context.headerHeight, rect[3] - rect[1]);\n    node.rect = [rect[0], rect[1], rect[2], rect[1] + headerHeight];\n    setRectAttrs(node.tile.inner, marginateRect(node.rect, rectOffsets.headerEdge));\n    rect[1] += headerHeight;\n    node.innerRect = rect;\n    calculateRects(context, node);\n  } else {\n    node.rect = rect;\n    setRectAttrs(node.tile, buildTileRect(rect, node.parent.innerRect, rectOffsets.tileEdge, rectOffsets.tileInner));\n  }\n}\n\nfunction marginateRect(rect, margin) {\n  return [rect[0] + margin, rect[1] + margin, rect[2] - margin, rect[3] - margin];\n}\n\nfunction buildTileRect(rect, outer, edgeOffset, innerOffset) {\n  return [rect[0] + (rect[0] === outer[0] ? edgeOffset : +innerOffset), rect[1] + (rect[1] === outer[1] ? edgeOffset : +innerOffset), rect[2] - (rect[2] === outer[2] ? edgeOffset : -innerOffset), rect[3] - (rect[3] === outer[3] ? edgeOffset : -innerOffset)];\n}\n\nfunction setRectAttrs(element, rect) {\n  element.attr({\n    x: rect[0],\n    y: rect[1],\n    width: _max(rect[2] - rect[0], 0),\n    height: _max(rect[3] - rect[1], 0)\n  });\n}\n\nfunction processLabelsLayout(context, node) {\n  if (node.text && node.labelState.visible) {\n    layoutTextNode(node, node.labelParams);\n  }\n}\n\nfunction layoutTextNode(node, params) {\n  var rect = node.rect;\n  var text = node.text;\n  var bBox = text.getBBox();\n  var paddingLeftRight = params.paddingLeftRight;\n  var paddingTopBottom = params.paddingTopBottom;\n  var effectiveWidth = rect[2] - rect[0] - 2 * paddingLeftRight;\n  text.setMaxSize(effectiveWidth, rect[3] - rect[1] - paddingTopBottom, node.isNode() ? {\n    textOverflow: params.groupLabelOverflow,\n    wordWrap: \"none\"\n  } : {\n    textOverflow: params.tileLabelOverflow,\n    wordWrap: params.tileLabelWordWrap,\n    hideOverflowEllipsis: true\n  });\n  text.move(params.rtlEnabled ? rect[2] - paddingLeftRight - bBox.x - bBox.width : rect[0] + paddingLeftRight - bBox.x, rect[1] + paddingTopBottom - bBox.y);\n}\n\nimport componentRegistrator from \"../../core/component_registrator\";\ncomponentRegistrator(\"dxTreeMap\", dxTreeMap);\nexport default dxTreeMap;\nimport { plugin } from \"../core/data_source\";\ndxTreeMap.addPlugin(plugin);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/tree_map/tree_map.base.js"],"names":["buildRectAppearance","_buildRectAppearance","buildTextAppearance","_buildTextAppearance","Node","getAlgorithm","_getTilingAlgorithm","setDefaultAlgorithm","getColorizer","_getColorizer","setDefaultColorizer","patchFontOptions","_patchFontOptions","noop","_noop","baseWidget","_max","Math","max","directions","lefttoprightbottom","leftbottomrighttop","righttopleftbottom","rightbottomlefttop","pickPositiveInteger","val","round","dxTreeMap","inherit","_handlers","beginBuildNodes","buildNode","endBuildNodes","setTrackerData","calculateState","options","_rootClass","_rootClassPrefix","_getDefaultSize","width","height","_themeSection","_fontFields","_init","that","_rectOffsets","Object","create","_context","suspend","_applyingChanges","_suspendChanges","resume","_resumeChanges","change","codes","_change","settings","calculateLabelState","_root","_topNode","nodes","callBase","apply","arguments","_initialChanges","_initCore","renderer","_renderer","_createProxyType","_tilesGroup","g","linkOn","root","linkAppend","_labelsGroup","_disposeCore","_filter","dispose","linkOff","_applySize","rect","_tilingRect","slice","_optionChangesMap","dataSource","valueField","childrenField","colorField","colorizer","labelField","tile","group","maxDepth","layoutAlgorithm","layoutDirection","_themeDependentChanges","_changeDataSource","_isDataExpected","_isSyncData","_updateDataSource","_dataSourceChangedHandler","_requestChange","_optionChangesOrder","_change_DATA_SOURCE","_change_TILE_SETTINGS","_changeTileSettings","_change_GROUP_SETTINGS","_changeGroupSettings","_change_MAX_DEPTH","_changeMaxDepth","_customChangesOrder","_change_NODES_CREATE","_buildNodes","_change_NODES_RESET","_resetNodes","_change_TILES","_applyTilesAppearance","_change_LABELS","_applyLabelsAppearance","_change_TILING","_performTiling","_change_LABELS_LAYOUT","_performLabelsLayout","_applyChanges","_drawn","forceReset","_id","parent","data","level","index","ctx","label","_nodes","processedData","_processDataSourceItems","_dataSourceItems","traverseDataItems","items","itemsField","isPlain","_getOption","_onNodesCreated","offsets","borderWidth","border","edgeOffset","innerOffset","labelOptions","state","shadowFilter","attr","shadow","_calculateLabelSettings","id","tileEdge","tileInner","headerHeight","groupPadding","padding","labelParams","paddingTopBottom","_headerHeight","_groupPadding","headerEdge","headerInner","filter","bBox","_getTextBBox","font","paddingLeftRight","tileLabelOptions","groupLabelOptions","labelState","visible","rtlEnabled","tileLabelWordWrap","wordWrap","tileLabelOverflow","textOverflow","groupLabelOverflow","_maxDepth","clear","initHatching","minLevel","maxLevel","_processNodes","context","process","processNodes","_themeManager","getColor","processTileAppearance","processLabelAppearance","algorithm","String","toLowerCase","rectOffsets","innerRect","calculateRects","processTiling","_onTilingPerformed","processLabelsLayout","fontOptions","text","_textForCalculations","css","append","getBBox","remove","dataItems","params","allNodes","node","i","ii","length","dataItem","totalValue","_items","push","value","Number","isNode","createTile","createLeaf","createGroup","color","updateStyles","applyState","simpleRect","outer","inner","updateLabelStyle","createLabel","currentNode","textData","customLabel","emptyRect","rects","sum","isRotated","setRectAttrs","buildTileRect","marginateRect","min","margin","element","x","y","layoutTextNode","effectiveWidth","setMaxSize","hideOverflowEllipsis","move","componentRegistrator","plugin","addPlugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/tree_map.base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    buildRectAppearance as _buildRectAppearance,\r\n    buildTextAppearance as _buildTextAppearance\r\n} from \"./common\";\r\nimport Node from \"./node\";\r\nimport {\r\n    getAlgorithm as _getTilingAlgorithm,\r\n    setDefaultAlgorithm\r\n} from \"./tiling\";\r\nimport {\r\n    getColorizer as _getColorizer,\r\n    setDefaultColorizer\r\n} from \"./colorizing\";\r\nimport {\r\n    patchFontOptions as _patchFontOptions\r\n} from \"../core/utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nimport baseWidget from \"../core/base_widget\";\r\nvar _max = Math.max;\r\nvar directions = {\r\n    lefttoprightbottom: [1, 1],\r\n    leftbottomrighttop: [1, -1],\r\n    righttopleftbottom: [-1, 1],\r\n    rightbottomlefttop: [-1, -1]\r\n};\r\nimport \"./tiling.squarified\";\r\nsetDefaultAlgorithm(\"squarified\");\r\nimport \"./colorizing.discrete\";\r\nsetDefaultColorizer(\"discrete\");\r\n\r\nfunction pickPositiveInteger(val) {\r\n    return val > 0 ? Math.round(val) : 0\r\n}\r\nvar dxTreeMap = baseWidget.inherit({\r\n    _handlers: {\r\n        beginBuildNodes: _noop,\r\n        buildNode: _noop,\r\n        endBuildNodes: _noop,\r\n        setTrackerData: _noop,\r\n        calculateState: function(options) {\r\n            return _buildRectAppearance(options)\r\n        }\r\n    },\r\n    _rootClass: \"dxtm-tree-map\",\r\n    _rootClassPrefix: \"dxtm\",\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _themeSection: \"treeMap\",\r\n    _fontFields: [\"tile.label.font\", \"group.label.font\"],\r\n    _init: function() {\r\n        var that = this;\r\n        that._rectOffsets = {};\r\n        that._handlers = Object.create(that._handlers);\r\n        that._context = {\r\n            suspend: function() {\r\n                if (!that._applyingChanges) {\r\n                    that._suspendChanges()\r\n                }\r\n            },\r\n            resume: function() {\r\n                if (!that._applyingChanges) {\r\n                    that._resumeChanges()\r\n                }\r\n            },\r\n            change: function(codes) {\r\n                that._change(codes)\r\n            },\r\n            settings: [{}, {}],\r\n            calculateState: that._handlers.calculateState,\r\n            calculateLabelState: _buildTextAppearance\r\n        };\r\n        that._root = that._topNode = {\r\n            nodes: []\r\n        };\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _initialChanges: [\"DATA_SOURCE\"],\r\n    _initCore: function() {\r\n        var renderer = this._renderer;\r\n        this._createProxyType();\r\n        this._tilesGroup = renderer.g().linkOn(renderer.root, \"tiles\").linkAppend();\r\n        this._labelsGroup = renderer.g().linkOn(renderer.root, \"labels\").linkAppend()\r\n    },\r\n    _createProxyType: _noop,\r\n    _disposeCore: function() {\r\n        this._filter && this._filter.dispose();\r\n        this._labelsGroup.linkOff();\r\n        this._tilesGroup.linkOff()\r\n    },\r\n    _applySize: function(rect) {\r\n        this._tilingRect = rect.slice();\r\n        this._change([\"TILING\"])\r\n    },\r\n    _optionChangesMap: {\r\n        dataSource: \"DATA_SOURCE\",\r\n        valueField: \"NODES_CREATE\",\r\n        childrenField: \"NODES_CREATE\",\r\n        colorField: \"TILES\",\r\n        colorizer: \"TILES\",\r\n        labelField: \"LABELS\",\r\n        tile: \"TILE_SETTINGS\",\r\n        group: \"GROUP_SETTINGS\",\r\n        maxDepth: \"MAX_DEPTH\",\r\n        layoutAlgorithm: \"TILING\",\r\n        layoutDirection: \"TILING\"\r\n    },\r\n    _themeDependentChanges: [\"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\r\n    _changeDataSource: function() {\r\n        this._isDataExpected = this._isSyncData = true;\r\n        this._updateDataSource();\r\n        this._isSyncData = false;\r\n        if (this._isDataExpected) {\r\n            this._suspendChanges()\r\n        }\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (this._isDataExpected) {\r\n            this._isDataExpected = false;\r\n            this._change([\"NODES_CREATE\"]);\r\n            if (!this._isSyncData) {\r\n                this._resumeChanges()\r\n            }\r\n        } else {\r\n            this._requestChange([\"NODES_CREATE\"])\r\n        }\r\n    },\r\n    _optionChangesOrder: [\"DATA_SOURCE\", \"TILE_SETTINGS\", \"GROUP_SETTINGS\", \"MAX_DEPTH\"],\r\n    _change_DATA_SOURCE: function() {\r\n        this._changeDataSource()\r\n    },\r\n    _change_TILE_SETTINGS: function() {\r\n        this._changeTileSettings()\r\n    },\r\n    _change_GROUP_SETTINGS: function() {\r\n        this._changeGroupSettings()\r\n    },\r\n    _change_MAX_DEPTH: function() {\r\n        this._changeMaxDepth()\r\n    },\r\n    _customChangesOrder: [\"NODES_CREATE\", \"NODES_RESET\", \"TILES\", \"LABELS\", \"TILING\", \"LABELS_LAYOUT\"],\r\n    _change_NODES_CREATE: function() {\r\n        this._buildNodes()\r\n    },\r\n    _change_NODES_RESET: function() {\r\n        this._resetNodes()\r\n    },\r\n    _change_TILES: function() {\r\n        this._applyTilesAppearance()\r\n    },\r\n    _change_LABELS: function() {\r\n        this._applyLabelsAppearance()\r\n    },\r\n    _change_TILING: function() {\r\n        this._performTiling()\r\n    },\r\n    _change_LABELS_LAYOUT: function() {\r\n        this._performLabelsLayout()\r\n    },\r\n    _applyChanges: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        if (!that._isDataExpected) {\r\n            that._drawn()\r\n        }\r\n        that._context.forceReset = false\r\n    },\r\n    _buildNodes: function() {\r\n        var root = this._root = this._topNode = new Node;\r\n        root._id = 0;\r\n        root.parent = {};\r\n        root.data = {};\r\n        root.level = root.index = -1;\r\n        root.ctx = this._context;\r\n        root.label = null;\r\n        this._nodes = [root];\r\n        this._handlers.beginBuildNodes();\r\n        var processedData = this._processDataSourceItems(this._dataSourceItems() || []);\r\n        traverseDataItems(root, processedData.items, 0, {\r\n            itemsField: !processedData.isPlain && this._getOption(\"childrenField\", true) || \"items\",\r\n            valueField: this._getOption(\"valueField\", true) || \"value\",\r\n            buildNode: this._handlers.buildNode,\r\n            ctx: this._context,\r\n            nodes: this._nodes\r\n        });\r\n        this._onNodesCreated();\r\n        this._handlers.endBuildNodes();\r\n        this._change([\"NODES_RESET\"])\r\n    },\r\n    _onNodesCreated: _noop,\r\n    _processDataSourceItems: function(items) {\r\n        return {\r\n            items: items,\r\n            isPlain: false\r\n        }\r\n    },\r\n    _changeTileSettings: function() {\r\n        var options = this._getOption(\"tile\");\r\n        var offsets = this._rectOffsets;\r\n        var borderWidth = pickPositiveInteger(options.border.width);\r\n        var edgeOffset = borderWidth / 2;\r\n        var innerOffset = 1 & borderWidth ? .5 : 0;\r\n        var labelOptions = options.label;\r\n        var settings = this._context.settings[0];\r\n        this._change([\"TILES\", \"LABELS\"]);\r\n        settings.state = this._handlers.calculateState(options);\r\n        this._filter = this._filter || this._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\");\r\n        this._filter.attr(labelOptions.shadow);\r\n        this._calculateLabelSettings(settings, labelOptions, this._filter.id);\r\n        if (offsets.tileEdge !== edgeOffset || offsets.tileInner !== innerOffset) {\r\n            offsets.tileEdge = edgeOffset;\r\n            offsets.tileInner = innerOffset;\r\n            this._change([\"TILING\"])\r\n        }\r\n    },\r\n    _changeGroupSettings: function() {\r\n        var options = this._getOption(\"group\");\r\n        var labelOptions = options.label;\r\n        var offsets = this._rectOffsets;\r\n        var borderWidth = pickPositiveInteger(options.border.width);\r\n        var edgeOffset = borderWidth / 2;\r\n        var innerOffset = 1 & borderWidth ? .5 : 0;\r\n        var headerHeight = 0;\r\n        var groupPadding = pickPositiveInteger(options.padding);\r\n        var settings = this._context.settings[1];\r\n        this._change([\"TILES\", \"LABELS\"]);\r\n        settings.state = this._handlers.calculateState(options);\r\n        this._calculateLabelSettings(settings, labelOptions);\r\n        if (options.headerHeight >= 0) {\r\n            headerHeight = pickPositiveInteger(options.headerHeight)\r\n        } else {\r\n            headerHeight = settings.labelParams.height + 2 * pickPositiveInteger(labelOptions.paddingTopBottom)\r\n        }\r\n        if (this._headerHeight !== headerHeight) {\r\n            this._headerHeight = headerHeight;\r\n            this._change([\"TILING\"])\r\n        }\r\n        if (this._groupPadding !== groupPadding) {\r\n            this._groupPadding = groupPadding;\r\n            this._change([\"TILING\"])\r\n        }\r\n        if (offsets.headerEdge !== edgeOffset || offsets.headerInner !== innerOffset) {\r\n            offsets.headerEdge = edgeOffset;\r\n            offsets.headerInner = innerOffset;\r\n            this._change([\"TILING\"])\r\n        }\r\n    },\r\n    _calculateLabelSettings: function(settings, options, filter) {\r\n        var bBox = this._getTextBBox(options.font);\r\n        var paddingLeftRight = pickPositiveInteger(options.paddingLeftRight);\r\n        var paddingTopBottom = pickPositiveInteger(options.paddingTopBottom);\r\n        var tileLabelOptions = this._getOption(\"tile.label\");\r\n        var groupLabelOptions = this._getOption(\"group.label\");\r\n        settings.labelState = _buildTextAppearance(options, filter);\r\n        settings.labelState.visible = !(\"visible\" in options) || !!options.visible;\r\n        settings.labelParams = {\r\n            height: bBox.height,\r\n            rtlEnabled: this._getOption(\"rtlEnabled\", true),\r\n            paddingTopBottom: paddingTopBottom,\r\n            paddingLeftRight: paddingLeftRight,\r\n            tileLabelWordWrap: tileLabelOptions.wordWrap,\r\n            tileLabelOverflow: tileLabelOptions.textOverflow,\r\n            groupLabelOverflow: groupLabelOptions.textOverflow\r\n        }\r\n    },\r\n    _changeMaxDepth: function() {\r\n        var maxDepth = this._getOption(\"maxDepth\", true);\r\n        maxDepth = maxDepth >= 1 ? Math.round(maxDepth) : 1 / 0;\r\n        if (this._maxDepth !== maxDepth) {\r\n            this._maxDepth = maxDepth;\r\n            this._change([\"NODES_RESET\"])\r\n        }\r\n    },\r\n    _resetNodes: function() {\r\n        this._tilesGroup.clear();\r\n        this._renderer.initHatching();\r\n        this._context.forceReset = true;\r\n        this._context.minLevel = this._topNode.level + 1;\r\n        this._context.maxLevel = this._context.minLevel + this._maxDepth - 1;\r\n        this._change([\"TILES\", \"LABELS\", \"TILING\"])\r\n    },\r\n    _processNodes: function(context, process) {\r\n        processNodes(context, this._topNode, process)\r\n    },\r\n    _applyTilesAppearance: function() {\r\n        var colorizer = _getColorizer(this._getOption(\"colorizer\"), this._themeManager, this._topNode);\r\n        this._processNodes({\r\n            renderer: this._renderer,\r\n            group: this._tilesGroup,\r\n            setTrackerData: this._handlers.setTrackerData,\r\n            colorField: this._getOption(\"colorField\", true) || \"color\",\r\n            getColor: colorizer\r\n        }, processTileAppearance)\r\n    },\r\n    _applyLabelsAppearance: function() {\r\n        this._labelsGroup.clear();\r\n        this._processNodes({\r\n            renderer: this._renderer,\r\n            group: this._labelsGroup,\r\n            setTrackerData: this._handlers.setTrackerData,\r\n            labelField: this._getOption(\"labelField\", true) || \"name\"\r\n        }, processLabelAppearance);\r\n        this._change([\"LABELS_LAYOUT\"])\r\n    },\r\n    _performTiling: function() {\r\n        var context = {\r\n            algorithm: _getTilingAlgorithm(this._getOption(\"layoutAlgorithm\", true)),\r\n            directions: directions[String(this._getOption(\"layoutDirection\", true)).toLowerCase()] || directions.lefttoprightbottom,\r\n            headerHeight: this._headerHeight,\r\n            groupPadding: this._groupPadding,\r\n            rectOffsets: this._rectOffsets\r\n        };\r\n        this._topNode.innerRect = this._tilingRect;\r\n        calculateRects(context, this._topNode);\r\n        this._processNodes(context, processTiling);\r\n        this._change([\"LABELS_LAYOUT\"]);\r\n        this._onTilingPerformed()\r\n    },\r\n    _onTilingPerformed: _noop,\r\n    _performLabelsLayout: function() {\r\n        this._processNodes(null, processLabelsLayout)\r\n    },\r\n    _getTextBBox: function(fontOptions) {\r\n        var renderer = this._renderer;\r\n        var text = this._textForCalculations || renderer.text(\"0\", 0, 0);\r\n        this._textForCalculations = text;\r\n        text.css(_patchFontOptions(fontOptions)).append(renderer.root);\r\n        var bBox = text.getBBox();\r\n        text.remove();\r\n        return bBox\r\n    }\r\n});\r\n\r\nfunction traverseDataItems(root, dataItems, level, params) {\r\n    var nodes = [];\r\n    var allNodes = params.nodes;\r\n    var node;\r\n    var i;\r\n    var ii = dataItems.length;\r\n    var dataItem;\r\n    var totalValue = 0;\r\n    var items;\r\n    for (i = 0; i < ii; ++i) {\r\n        var _items;\r\n        dataItem = dataItems[i];\r\n        node = new Node;\r\n        node._id = allNodes.length;\r\n        node.ctx = params.ctx;\r\n        node.parent = root;\r\n        node.level = level;\r\n        node.index = nodes.length;\r\n        node.data = dataItem;\r\n        params.buildNode(node);\r\n        allNodes.push(node);\r\n        nodes.push(node);\r\n        items = dataItem[params.itemsField];\r\n        if (null !== (_items = items) && void 0 !== _items && _items.length) {\r\n            traverseDataItems(node, items, level + 1, params)\r\n        }\r\n        if (dataItem[params.valueField] > 0) {\r\n            node.value = Number(dataItem[params.valueField])\r\n        }\r\n        totalValue += node.value\r\n    }\r\n    root.nodes = nodes;\r\n    root.value = totalValue\r\n}\r\n\r\nfunction processNodes(context, root, process) {\r\n    var nodes = root.nodes;\r\n    var node;\r\n    var i;\r\n    var ii = nodes.length;\r\n    for (i = 0; i < ii; ++i) {\r\n        node = nodes[i];\r\n        process(context, node);\r\n        if (node.isNode()) {\r\n            processNodes(context, node, process)\r\n        }\r\n    }\r\n}\r\nvar createTile = [createLeaf, createGroup];\r\n\r\nfunction processTileAppearance(context, node) {\r\n    node.color = node.data[context.colorField] || context.getColor(node) || node.parent.color;\r\n    node.updateStyles();\r\n    node.tile = !node.ctx.forceReset && node.tile || createTile[Number(node.isNode())](context, node);\r\n    node.applyState()\r\n}\r\n\r\nfunction createLeaf(context, node) {\r\n    var tile = context.renderer.simpleRect().append(context.group);\r\n    context.setTrackerData(node, tile);\r\n    return tile\r\n}\r\n\r\nfunction createGroup(context, node) {\r\n    var outer = context.renderer.simpleRect().append(context.group);\r\n    var inner = context.renderer.simpleRect().append(context.group);\r\n    context.setTrackerData(node, inner);\r\n    return {\r\n        outer: outer,\r\n        inner: inner\r\n    }\r\n}\r\n\r\nfunction processLabelAppearance(context, node) {\r\n    node.updateLabelStyle();\r\n    if (node.labelState.visible) {\r\n        createLabel(context, node, node.labelState, node.labelParams)\r\n    }\r\n}\r\n\r\nfunction createLabel(context, currentNode, settings, params) {\r\n    var textData = currentNode.data[context.labelField];\r\n    currentNode.label = textData ? String(textData) : null;\r\n    textData = currentNode.customLabel || currentNode.label;\r\n    if (textData) {\r\n        currentNode.text = context.renderer.text(textData).attr(settings.attr).css(settings.css).append(context.group);\r\n        context.setTrackerData(currentNode, currentNode.text)\r\n    }\r\n}\r\nvar emptyRect = [0, 0, 0, 0];\r\n\r\nfunction calculateRects(context, root) {\r\n    var nodes = root.nodes;\r\n    var items = [];\r\n    var rects = [];\r\n    var sum = 0;\r\n    var i;\r\n    var ii = items.length = rects.length = nodes.length;\r\n    for (i = 0; i < ii; ++i) {\r\n        sum += nodes[i].value;\r\n        items[i] = {\r\n            value: nodes[i].value,\r\n            i: i\r\n        }\r\n    }\r\n    if (sum > 0) {\r\n        context.algorithm({\r\n            items: items.slice(),\r\n            sum: sum,\r\n            rect: root.innerRect.slice(),\r\n            isRotated: 1 & nodes[0].level,\r\n            directions: context.directions\r\n        })\r\n    }\r\n    for (i = 0; i < ii; ++i) {\r\n        rects[i] = items[i].rect || emptyRect\r\n    }\r\n    root.rects = rects\r\n}\r\n\r\nfunction processTiling(context, node) {\r\n    var rect = node.parent.rects[node.index];\r\n    var rectOffsets = context.rectOffsets;\r\n    var headerHeight;\r\n    if (node.isNode()) {\r\n        setRectAttrs(node.tile.outer, buildTileRect(rect, node.parent.innerRect, rectOffsets.headerEdge, rectOffsets.headerInner));\r\n        rect = marginateRect(rect, context.groupPadding);\r\n        headerHeight = Math.min(context.headerHeight, rect[3] - rect[1]);\r\n        node.rect = [rect[0], rect[1], rect[2], rect[1] + headerHeight];\r\n        setRectAttrs(node.tile.inner, marginateRect(node.rect, rectOffsets.headerEdge));\r\n        rect[1] += headerHeight;\r\n        node.innerRect = rect;\r\n        calculateRects(context, node)\r\n    } else {\r\n        node.rect = rect;\r\n        setRectAttrs(node.tile, buildTileRect(rect, node.parent.innerRect, rectOffsets.tileEdge, rectOffsets.tileInner))\r\n    }\r\n}\r\n\r\nfunction marginateRect(rect, margin) {\r\n    return [rect[0] + margin, rect[1] + margin, rect[2] - margin, rect[3] - margin]\r\n}\r\n\r\nfunction buildTileRect(rect, outer, edgeOffset, innerOffset) {\r\n    return [rect[0] + (rect[0] === outer[0] ? edgeOffset : +innerOffset), rect[1] + (rect[1] === outer[1] ? edgeOffset : +innerOffset), rect[2] - (rect[2] === outer[2] ? edgeOffset : -innerOffset), rect[3] - (rect[3] === outer[3] ? edgeOffset : -innerOffset)]\r\n}\r\n\r\nfunction setRectAttrs(element, rect) {\r\n    element.attr({\r\n        x: rect[0],\r\n        y: rect[1],\r\n        width: _max(rect[2] - rect[0], 0),\r\n        height: _max(rect[3] - rect[1], 0)\r\n    })\r\n}\r\n\r\nfunction processLabelsLayout(context, node) {\r\n    if (node.text && node.labelState.visible) {\r\n        layoutTextNode(node, node.labelParams)\r\n    }\r\n}\r\n\r\nfunction layoutTextNode(node, params) {\r\n    var rect = node.rect;\r\n    var text = node.text;\r\n    var bBox = text.getBBox();\r\n    var paddingLeftRight = params.paddingLeftRight;\r\n    var paddingTopBottom = params.paddingTopBottom;\r\n    var effectiveWidth = rect[2] - rect[0] - 2 * paddingLeftRight;\r\n    text.setMaxSize(effectiveWidth, rect[3] - rect[1] - paddingTopBottom, node.isNode() ? {\r\n        textOverflow: params.groupLabelOverflow,\r\n        wordWrap: \"none\"\r\n    } : {\r\n        textOverflow: params.tileLabelOverflow,\r\n        wordWrap: params.tileLabelWordWrap,\r\n        hideOverflowEllipsis: true\r\n    });\r\n    text.move(params.rtlEnabled ? rect[2] - paddingLeftRight - bBox.x - bBox.width : rect[0] + paddingLeftRight - bBox.x, rect[1] + paddingTopBottom - bBox.y)\r\n}\r\nimport componentRegistrator from \"../../core/component_registrator\";\r\ncomponentRegistrator(\"dxTreeMap\", dxTreeMap);\r\nexport default dxTreeMap;\r\nimport {\r\n    plugin\r\n} from \"../core/data_source\";\r\ndxTreeMap.addPlugin(plugin);\r\n"]},"metadata":{},"sourceType":"module"}