{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/core/template_manager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"./renderer\";\nimport { isDefined, isFunction, isRenderer } from \"./utils/type\";\nimport { noop } from \"./utils/common\";\nimport { extend } from \"./utils/extend\";\nimport { FunctionTemplate } from \"./templates/function_template\";\nimport { EmptyTemplate } from \"./templates/empty_template\";\nimport { findTemplates, suitableTemplatesByName, templateKey, getNormalizedTemplateArgs, validateTemplateSource, defaultCreateElement, acquireTemplate } from \"./utils/template_manager\";\nvar TEXT_NODE = 3;\nvar ANONYMOUS_TEMPLATE_NAME = \"template\";\nvar TEMPLATE_OPTIONS_NAME = \"dxTemplate\";\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nvar DX_POLYMORPH_WIDGET_TEMPLATE = new FunctionTemplate(function (_ref) {\n  var model = _ref.model,\n      parent = _ref.parent;\n  var widgetName = model.widget;\n\n  if (!widgetName) {\n    return $();\n  }\n\n  var widgetElement = $(\"<div>\");\n  var widgetOptions = model.options || {};\n\n  if (parent) {\n    parent._createComponent(widgetElement, widgetName, widgetOptions);\n  } else {\n    widgetElement[widgetName](widgetOptions);\n  }\n\n  return widgetElement;\n});\nexport var TemplateManager = /*#__PURE__*/function () {\n  function TemplateManager(createElement, anonymousTemplateName) {\n    _classCallCheck(this, TemplateManager);\n\n    this._tempTemplates = [];\n    this._defaultTemplates = {};\n    this._anonymousTemplateName = anonymousTemplateName || ANONYMOUS_TEMPLATE_NAME;\n    this._createElement = createElement || defaultCreateElement;\n    this._createTemplateIfNeeded = this._createTemplateIfNeeded.bind(this);\n  }\n\n  _createClass(TemplateManager, [{\n    key: \"anonymousTemplateName\",\n    get: function get() {\n      return this._anonymousTemplateName;\n    }\n  }, {\n    key: \"addDefaultTemplates\",\n    value: function addDefaultTemplates(templates) {\n      this._defaultTemplates = extend({}, this._defaultTemplates, templates);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._tempTemplates.forEach(function (tempTemplate) {\n        tempTemplate.template.dispose && tempTemplate.template.dispose();\n      });\n\n      this._tempTemplates = [];\n    }\n  }, {\n    key: \"extractTemplates\",\n    value: function extractTemplates($el) {\n      var templates = this._extractTemplates($el);\n\n      var anonymousTemplateMeta = this._extractAnonymousTemplate($el);\n\n      return {\n        templates: templates,\n        anonymousTemplateMeta: anonymousTemplateMeta\n      };\n    }\n  }, {\n    key: \"_extractTemplates\",\n    value: function _extractTemplates($el) {\n      var _this = this;\n\n      var templates = findTemplates($el, TEMPLATE_OPTIONS_NAME);\n      var suitableTemplates = suitableTemplatesByName(templates);\n      templates.forEach(function (_ref2) {\n        var element = _ref2.element,\n            name = _ref2.options.name;\n\n        if (element === suitableTemplates[name]) {\n          $(element).addClass(TEMPLATE_WRAPPER_CLASS).detach();\n        } else {\n          $(element).remove();\n        }\n      });\n      return Object.keys(suitableTemplates).map(function (name) {\n        return {\n          name: name,\n          template: _this._createTemplate(suitableTemplates[name])\n        };\n      });\n    }\n  }, {\n    key: \"_extractAnonymousTemplate\",\n    value: function _extractAnonymousTemplate($el) {\n      var $anonymousTemplate = $el.contents().detach();\n      var $notJunkTemplateContent = $anonymousTemplate.filter(function (_, element) {\n        var isTextNode = element.nodeType === TEXT_NODE;\n        var isEmptyText = $(element).text().trim().length < 1;\n        return !(isTextNode && isEmptyText);\n      });\n      return $notJunkTemplateContent.length > 0 ? {\n        template: this._createTemplate($anonymousTemplate),\n        name: this._anonymousTemplateName\n      } : {};\n    }\n  }, {\n    key: \"_createTemplateIfNeeded\",\n    value: function _createTemplateIfNeeded(templateSource) {\n      var cachedTemplate = this._tempTemplates.filter(function (tempTemplate) {\n        return tempTemplate.source === templateKey(templateSource);\n      })[0];\n\n      if (cachedTemplate) {\n        return cachedTemplate.template;\n      }\n\n      var template = this._createTemplate(templateSource);\n\n      this._tempTemplates.push({\n        template: template,\n        source: templateKey(templateSource)\n      });\n\n      return template;\n    }\n  }, {\n    key: \"_createTemplate\",\n    value: function _createTemplate(templateSource) {\n      return this._createElement(validateTemplateSource(templateSource));\n    }\n  }, {\n    key: \"getTemplate\",\n    value: function getTemplate(templateSource, templates, _ref3, context) {\n      var _this2 = this;\n\n      var isAsyncTemplate = _ref3.isAsyncTemplate,\n          skipTemplates = _ref3.skipTemplates;\n\n      if (!isFunction(templateSource)) {\n        return acquireTemplate(templateSource, this._createTemplateIfNeeded, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates);\n      }\n\n      return new FunctionTemplate(function (options) {\n        var templateSourceResult = templateSource.apply(context, getNormalizedTemplateArgs(options));\n\n        if (!isDefined(templateSourceResult)) {\n          return new EmptyTemplate();\n        }\n\n        var dispose = false;\n        var template = acquireTemplate(templateSourceResult, function (templateSource) {\n          if (templateSource.nodeType || isRenderer(templateSource) && !$(templateSource).is(\"script\")) {\n            return new FunctionTemplate(function () {\n              return templateSource;\n            });\n          }\n\n          dispose = true;\n          return _this2._createTemplate(templateSource);\n        }, templates, isAsyncTemplate, skipTemplates, _this2._defaultTemplates);\n        var result = template.render(options);\n        dispose && template.dispose && template.dispose();\n        return result;\n      });\n    }\n  }], [{\n    key: \"createDefaultOptions\",\n    value: function createDefaultOptions() {\n      return {\n        integrationOptions: {\n          watchMethod: function watchMethod(fn, callback) {\n            var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n\n            if (!options.skipImmediate) {\n              callback(fn());\n            }\n\n            return noop;\n          },\n          templates: {\n            \"dx-polymorph-widget\": DX_POLYMORPH_WIDGET_TEMPLATE\n          },\n          useDeferUpdateForTemplates: true\n        }\n      };\n    }\n  }]);\n\n  return TemplateManager;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/core/template_manager.js"],"names":["$","isDefined","isFunction","isRenderer","noop","extend","FunctionTemplate","EmptyTemplate","findTemplates","suitableTemplatesByName","templateKey","getNormalizedTemplateArgs","validateTemplateSource","defaultCreateElement","acquireTemplate","TEXT_NODE","ANONYMOUS_TEMPLATE_NAME","TEMPLATE_OPTIONS_NAME","TEMPLATE_WRAPPER_CLASS","DX_POLYMORPH_WIDGET_TEMPLATE","_ref","model","parent","widgetName","widget","widgetElement","widgetOptions","options","_createComponent","TemplateManager","createElement","anonymousTemplateName","_tempTemplates","_defaultTemplates","_anonymousTemplateName","_createElement","_createTemplateIfNeeded","bind","templates","forEach","tempTemplate","template","dispose","$el","_extractTemplates","anonymousTemplateMeta","_extractAnonymousTemplate","suitableTemplates","_ref2","element","name","addClass","detach","remove","Object","keys","map","_createTemplate","$anonymousTemplate","contents","$notJunkTemplateContent","filter","_","isTextNode","nodeType","isEmptyText","text","trim","length","templateSource","cachedTemplate","source","push","_ref3","context","isAsyncTemplate","skipTemplates","templateSourceResult","apply","is","result","render","integrationOptions","watchMethod","fn","callback","arguments","skipImmediate","useDeferUpdateForTemplates"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/template_manager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"./renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isRenderer\r\n} from \"./utils/type\";\r\nimport {\r\n    noop\r\n} from \"./utils/common\";\r\nimport {\r\n    extend\r\n} from \"./utils/extend\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"./templates/function_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"./templates/empty_template\";\r\nimport {\r\n    findTemplates,\r\n    suitableTemplatesByName,\r\n    templateKey,\r\n    getNormalizedTemplateArgs,\r\n    validateTemplateSource,\r\n    defaultCreateElement,\r\n    acquireTemplate\r\n} from \"./utils/template_manager\";\r\nvar TEXT_NODE = 3;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"template\";\r\nvar TEMPLATE_OPTIONS_NAME = \"dxTemplate\";\r\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nvar DX_POLYMORPH_WIDGET_TEMPLATE = new FunctionTemplate(_ref => {\r\n    var {\r\n        model: model,\r\n        parent: parent\r\n    } = _ref;\r\n    var widgetName = model.widget;\r\n    if (!widgetName) {\r\n        return $()\r\n    }\r\n    var widgetElement = $(\"<div>\");\r\n    var widgetOptions = model.options || {};\r\n    if (parent) {\r\n        parent._createComponent(widgetElement, widgetName, widgetOptions)\r\n    } else {\r\n        widgetElement[widgetName](widgetOptions)\r\n    }\r\n    return widgetElement\r\n});\r\nexport class TemplateManager {\r\n    constructor(createElement, anonymousTemplateName) {\r\n        this._tempTemplates = [];\r\n        this._defaultTemplates = {};\r\n        this._anonymousTemplateName = anonymousTemplateName || ANONYMOUS_TEMPLATE_NAME;\r\n        this._createElement = createElement || defaultCreateElement;\r\n        this._createTemplateIfNeeded = this._createTemplateIfNeeded.bind(this)\r\n    }\r\n    static createDefaultOptions() {\r\n        return {\r\n            integrationOptions: {\r\n                watchMethod: function(fn, callback) {\r\n                    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n                    if (!options.skipImmediate) {\r\n                        callback(fn())\r\n                    }\r\n                    return noop\r\n                },\r\n                templates: {\r\n                    \"dx-polymorph-widget\": DX_POLYMORPH_WIDGET_TEMPLATE\r\n                },\r\n                useDeferUpdateForTemplates: true\r\n            }\r\n        }\r\n    }\r\n    get anonymousTemplateName() {\r\n        return this._anonymousTemplateName\r\n    }\r\n    addDefaultTemplates(templates) {\r\n        this._defaultTemplates = extend({}, this._defaultTemplates, templates)\r\n    }\r\n    dispose() {\r\n        this._tempTemplates.forEach(tempTemplate => {\r\n            tempTemplate.template.dispose && tempTemplate.template.dispose()\r\n        });\r\n        this._tempTemplates = []\r\n    }\r\n    extractTemplates($el) {\r\n        var templates = this._extractTemplates($el);\r\n        var anonymousTemplateMeta = this._extractAnonymousTemplate($el);\r\n        return {\r\n            templates: templates,\r\n            anonymousTemplateMeta: anonymousTemplateMeta\r\n        }\r\n    }\r\n    _extractTemplates($el) {\r\n        var templates = findTemplates($el, TEMPLATE_OPTIONS_NAME);\r\n        var suitableTemplates = suitableTemplatesByName(templates);\r\n        templates.forEach(_ref2 => {\r\n            var {\r\n                element: element,\r\n                options: {\r\n                    name: name\r\n                }\r\n            } = _ref2;\r\n            if (element === suitableTemplates[name]) {\r\n                $(element).addClass(TEMPLATE_WRAPPER_CLASS).detach()\r\n            } else {\r\n                $(element).remove()\r\n            }\r\n        });\r\n        return Object.keys(suitableTemplates).map(name => ({\r\n            name: name,\r\n            template: this._createTemplate(suitableTemplates[name])\r\n        }))\r\n    }\r\n    _extractAnonymousTemplate($el) {\r\n        var $anonymousTemplate = $el.contents().detach();\r\n        var $notJunkTemplateContent = $anonymousTemplate.filter((_, element) => {\r\n            var isTextNode = element.nodeType === TEXT_NODE;\r\n            var isEmptyText = $(element).text().trim().length < 1;\r\n            return !(isTextNode && isEmptyText)\r\n        });\r\n        return $notJunkTemplateContent.length > 0 ? {\r\n            template: this._createTemplate($anonymousTemplate),\r\n            name: this._anonymousTemplateName\r\n        } : {}\r\n    }\r\n    _createTemplateIfNeeded(templateSource) {\r\n        var cachedTemplate = this._tempTemplates.filter(tempTemplate => tempTemplate.source === templateKey(templateSource))[0];\r\n        if (cachedTemplate) {\r\n            return cachedTemplate.template\r\n        }\r\n        var template = this._createTemplate(templateSource);\r\n        this._tempTemplates.push({\r\n            template: template,\r\n            source: templateKey(templateSource)\r\n        });\r\n        return template\r\n    }\r\n    _createTemplate(templateSource) {\r\n        return this._createElement(validateTemplateSource(templateSource))\r\n    }\r\n    getTemplate(templateSource, templates, _ref3, context) {\r\n        var {\r\n            isAsyncTemplate: isAsyncTemplate,\r\n            skipTemplates: skipTemplates\r\n        } = _ref3;\r\n        if (!isFunction(templateSource)) {\r\n            return acquireTemplate(templateSource, this._createTemplateIfNeeded, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates)\r\n        }\r\n        return new FunctionTemplate(options => {\r\n            var templateSourceResult = templateSource.apply(context, getNormalizedTemplateArgs(options));\r\n            if (!isDefined(templateSourceResult)) {\r\n                return new EmptyTemplate\r\n            }\r\n            var dispose = false;\r\n            var template = acquireTemplate(templateSourceResult, templateSource => {\r\n                if (templateSource.nodeType || isRenderer(templateSource) && !$(templateSource).is(\"script\")) {\r\n                    return new FunctionTemplate(() => templateSource)\r\n                }\r\n                dispose = true;\r\n                return this._createTemplate(templateSource)\r\n            }, templates, isAsyncTemplate, skipTemplates, this._defaultTemplates);\r\n            var result = template.render(options);\r\n            dispose && template.dispose && template.dispose();\r\n            return result\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}