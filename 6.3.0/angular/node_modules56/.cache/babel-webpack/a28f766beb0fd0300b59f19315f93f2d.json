{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/viz/vector_map/projection.main.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { makeEventEmitter } from \"./event_emitter\";\nvar _Number = Number;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _abs = Math.abs;\nvar _round = Math.round;\nvar _ln = Math.log;\nvar _pow = Math.pow;\nvar TWO_TO_LN2 = 2 / Math.LN2;\nvar MIN_BOUNDS_RANGE = 1 / 3600 / 180 / 10;\nvar DEFAULT_MIN_ZOOM = 1;\nvar DEFAULT_MAX_ZOOM = 256;\nvar DEFAULT_CENTER = [NaN, NaN];\nvar DEFAULT_ENGINE_NAME = \"mercator\";\n\nfunction floatsEqual(f1, f2) {\n  return _abs(f1 - f2) < 1e-8;\n}\n\nfunction arraysEqual(a1, a2) {\n  return floatsEqual(a1[0], a2[0]) && floatsEqual(a1[1], a2[1]);\n}\n\nfunction parseAndClamp(value, minValue, maxValue, defaultValue) {\n  var val = _Number(value);\n\n  return isFinite(val) ? _min(_max(val, minValue), maxValue) : defaultValue;\n}\n\nfunction parseAndClampArray(value, minValue, maxValue, defaultValue) {\n  return [parseAndClamp(value[0], minValue[0], maxValue[0], defaultValue[0]), parseAndClamp(value[1], minValue[1], maxValue[1], defaultValue[1])];\n}\n\nfunction getEngine(engine) {\n  return engine instanceof Engine && engine || projection.get(engine) || projection(engine) || projection.get(DEFAULT_ENGINE_NAME);\n}\n\nexport var Projection = function Projection(parameters) {\n  this._initEvents();\n\n  this._params = parameters;\n  this._engine = getEngine();\n  this._center = this._engine.center();\n\n  this._adjustCenter();\n};\nProjection.prototype = {\n  constructor: Projection,\n  _minZoom: DEFAULT_MIN_ZOOM,\n  _maxZoom: DEFAULT_MAX_ZOOM,\n  _zoom: DEFAULT_MIN_ZOOM,\n  _center: DEFAULT_CENTER,\n  _canvas: {},\n  _scale: [],\n  dispose: function dispose() {\n    this._disposeEvents();\n  },\n  setEngine: function setEngine(value) {\n    var engine = getEngine(value);\n\n    if (this._engine !== engine) {\n      this._engine = engine;\n\n      this._fire(\"engine\");\n\n      if (this._changeCenter(engine.center())) {\n        this._triggerCenterChanged();\n      }\n\n      if (this._changeZoom(this._minZoom)) {\n        this._triggerZoomChanged();\n      }\n\n      this._adjustCenter();\n\n      this._setupScreen();\n    }\n  },\n  setBounds: function setBounds(bounds) {\n    if (void 0 !== bounds) {\n      this.setEngine(this._engine.original().bounds(bounds));\n    }\n  },\n  _setupScreen: function _setupScreen() {\n    var canvas = this._canvas;\n    var width = canvas.width;\n    var height = canvas.height;\n    var engine = this._engine;\n    var aspectRatio = engine.ar();\n    this._x0 = canvas.left + width / 2;\n    this._y0 = canvas.top + height / 2;\n    var min = [this.project([engine.min()[0], 0])[0], this.project([0, engine.min()[1]])[1]];\n    var max = [this.project([engine.max()[0], 0])[0], this.project([0, engine.max()[1]])[1]];\n    var screenAR = width / height;\n\n    var boundsAR = _abs(max[0] - min[0]) / _abs(max[1] - min[1]);\n\n    var correction;\n\n    if (isNaN(boundsAR) || 0 === boundsAR || _min(screenAR, aspectRatio) <= aspectRatio * boundsAR && aspectRatio * boundsAR <= _max(screenAR, aspectRatio)) {\n      correction = 1;\n    } else {\n      correction = boundsAR > 1 ? boundsAR : 1 / boundsAR;\n    }\n\n    if (aspectRatio * boundsAR >= screenAR) {\n      this._xRadius = width / 2 / correction;\n      this._yRadius = width / 2 / (aspectRatio * correction);\n    } else {\n      this._xRadius = height / 2 * (aspectRatio / correction);\n      this._yRadius = height / 2 / correction;\n    }\n\n    this._fire(\"screen\");\n  },\n  setSize: function setSize(canvas) {\n    this._canvas = canvas;\n\n    this._setupScreen();\n  },\n  getCanvas: function getCanvas() {\n    return this._canvas;\n  },\n  _toScreen: function _toScreen(coordinates) {\n    return [this._x0 + this._xRadius * coordinates[0], this._y0 + this._yRadius * coordinates[1]];\n  },\n  _fromScreen: function _fromScreen(coordinates) {\n    return [(coordinates[0] - this._x0) / this._xRadius, (coordinates[1] - this._y0) / this._yRadius];\n  },\n  _toTransformed: function _toTransformed(coordinates) {\n    return [coordinates[0] * this._zoom + this._xCenter, coordinates[1] * this._zoom + this._yCenter];\n  },\n  _toTransformedFast: function _toTransformedFast(coordinates) {\n    return [coordinates[0] * this._zoom, coordinates[1] * this._zoom];\n  },\n  _fromTransformed: function _fromTransformed(coordinates) {\n    return [(coordinates[0] - this._xCenter) / this._zoom, (coordinates[1] - this._yCenter) / this._zoom];\n  },\n  _adjustCenter: function _adjustCenter() {\n    var center = this._engine.project(this._center);\n\n    this._xCenter = -center[0] * this._zoom || 0;\n    this._yCenter = -center[1] * this._zoom || 0;\n  },\n  project: function project(coordinates) {\n    return this._engine.project(coordinates);\n  },\n  transform: function transform(coordinates) {\n    return this._toScreen(this._toTransformedFast(coordinates));\n  },\n  isInvertible: function isInvertible() {\n    return this._engine.isInvertible();\n  },\n  getSquareSize: function getSquareSize(size) {\n    return [size[0] * this._zoom * this._xRadius, size[1] * this._zoom * this._yRadius];\n  },\n  getZoom: function getZoom() {\n    return this._zoom;\n  },\n  _changeZoom: function _changeZoom(value) {\n    var oldZoom = this._zoom;\n    var newZoom = this._zoom = parseAndClamp(value, this._minZoom, this._maxZoom, this._minZoom);\n    var isChanged = !floatsEqual(oldZoom, newZoom);\n\n    if (isChanged) {\n      this._adjustCenter();\n\n      this._fire(\"zoom\");\n    }\n\n    return isChanged;\n  },\n  setZoom: function setZoom(value) {\n    if (this._engine.isInvertible() && this._changeZoom(value)) {\n      this._triggerZoomChanged();\n    }\n  },\n  getScaledZoom: function getScaledZoom() {\n    return _round((this._scale.length - 1) * _ln(this._zoom) / _ln(this._maxZoom));\n  },\n  setScaledZoom: function setScaledZoom(scaledZoom) {\n    this.setZoom(this._scale[_round(scaledZoom)]);\n  },\n  changeScaledZoom: function changeScaledZoom(deltaZoom) {\n    this.setZoom(this._scale[_max(_min(_round(this.getScaledZoom() + deltaZoom), this._scale.length - 1), 0)]);\n  },\n  getZoomScalePartition: function getZoomScalePartition() {\n    return this._scale.length - 1;\n  },\n  _setupScaling: function _setupScaling() {\n    var k = _max(_round(TWO_TO_LN2 * _ln(this._maxZoom)), 4);\n\n    var step = _pow(this._maxZoom, 1 / k);\n\n    var zoom = this._minZoom;\n    this._scale = [zoom];\n\n    for (var i = 1; i <= k; ++i) {\n      this._scale.push(zoom *= step);\n    }\n  },\n  setMaxZoom: function setMaxZoom(maxZoom) {\n    this._minZoom = DEFAULT_MIN_ZOOM;\n    this._maxZoom = parseAndClamp(maxZoom, this._minZoom, _Number.MAX_VALUE, DEFAULT_MAX_ZOOM);\n\n    this._setupScaling();\n\n    if (this._zoom > this._maxZoom) {\n      this.setZoom(this._maxZoom);\n    }\n\n    this._fire(\"max-zoom\");\n  },\n  getCenter: function getCenter() {\n    return this._center.slice();\n  },\n  setCenter: function setCenter(value) {\n    if (this._engine.isInvertible() && this._changeCenter(value || [])) {\n      this._triggerCenterChanged();\n    }\n  },\n  _changeCenter: function _changeCenter(value) {\n    var engine = this._engine;\n    var oldCenter = this._center;\n    var newCenter = this._center = parseAndClampArray(value, engine.min(), engine.max(), engine.center());\n    var isChanged = !arraysEqual(oldCenter, newCenter);\n\n    if (isChanged) {\n      this._adjustCenter();\n\n      this._fire(\"center\");\n    }\n\n    return isChanged;\n  },\n  _triggerCenterChanged: function _triggerCenterChanged() {\n    this._params.centerChanged(this.getCenter());\n  },\n  _triggerZoomChanged: function _triggerZoomChanged() {\n    this._params.zoomChanged(this.getZoom());\n  },\n  setCenterByPoint: function setCenterByPoint(coordinates, screenPosition) {\n    var p = this._engine.project(coordinates);\n\n    var q = this._fromScreen(screenPosition);\n\n    this.setCenter(this._engine.unproject([-q[0] / this._zoom + p[0], -q[1] / this._zoom + p[1]]));\n  },\n  beginMoveCenter: function beginMoveCenter() {\n    if (this._engine.isInvertible()) {\n      this._moveCenter = this._center;\n    }\n  },\n  endMoveCenter: function endMoveCenter() {\n    if (this._moveCenter) {\n      if (!arraysEqual(this._moveCenter, this._center)) {\n        this._triggerCenterChanged();\n      }\n\n      this._moveCenter = null;\n    }\n  },\n  moveCenter: function moveCenter(shift) {\n    if (this._moveCenter) {\n      var current = this.toScreenPoint(this._center);\n\n      this._changeCenter(this.fromScreenPoint([current[0] + shift[0], current[1] + shift[1]]));\n    }\n  },\n  getViewport: function getViewport() {\n    var unproject = this._engine.unproject;\n    var lt = unproject(this._fromTransformed([-1, -1]));\n    var lb = unproject(this._fromTransformed([-1, 1]));\n    var rt = unproject(this._fromTransformed([1, -1]));\n    var rb = unproject(this._fromTransformed([1, 1]));\n    var minMax = findMinMax([selectFarthestPoint(lt[0], lb[0], rt[0], rb[0]), selectFarthestPoint(lt[1], rt[1], lb[1], rb[1])], [selectFarthestPoint(rt[0], rb[0], lt[0], lb[0]), selectFarthestPoint(lb[1], rb[1], lt[1], rt[1])]);\n    return [].concat(minMax.min, minMax.max);\n  },\n  setViewport: function setViewport(viewport) {\n    var engine = this._engine;\n    var data = viewport ? getZoomAndCenterFromViewport(engine.project, engine.unproject, viewport) : [this._minZoom, engine.center()];\n    this.setZoom(data[0]);\n    this.setCenter(data[1]);\n  },\n  getTransform: function getTransform() {\n    return {\n      translateX: this._xCenter * this._xRadius,\n      translateY: this._yCenter * this._yRadius\n    };\n  },\n  fromScreenPoint: function fromScreenPoint(coordinates) {\n    return this._engine.unproject(this._fromTransformed(this._fromScreen(coordinates)));\n  },\n  toScreenPoint: function toScreenPoint(coordinates) {\n    return this._toScreen(this._toTransformed(this._engine.project(coordinates)));\n  },\n  _eventNames: [\"engine\", \"screen\", \"center\", \"zoom\", \"max-zoom\"]\n};\nmakeEventEmitter(Projection);\n\nfunction selectFarthestPoint(point1, point2, basePoint1, basePoint2) {\n  var basePoint = (basePoint1 + basePoint2) / 2;\n  return _abs(point1 - basePoint) > _abs(point2 - basePoint) ? point1 : point2;\n}\n\nfunction selectClosestPoint(point1, point2, basePoint1, basePoint2) {\n  var basePoint = (basePoint1 + basePoint2) / 2;\n  return _abs(point1 - basePoint) < _abs(point2 - basePoint) ? point1 : point2;\n}\n\nfunction getZoomAndCenterFromViewport(project, unproject, viewport) {\n  var lt = project([viewport[0], viewport[3]]);\n  var lb = project([viewport[0], viewport[1]]);\n  var rt = project([viewport[2], viewport[3]]);\n  var rb = project([viewport[2], viewport[1]]);\n  var l = selectClosestPoint(lt[0], lb[0], rt[0], rb[0]);\n  var r = selectClosestPoint(rt[0], rb[0], lt[0], lb[0]);\n  var t = selectClosestPoint(lt[1], rt[1], lb[1], rb[1]);\n  var b = selectClosestPoint(lb[1], rb[1], lt[1], rt[1]);\n  return [2 / _max(_abs(l - r), _abs(t - b)), unproject([(l + r) / 2, (t + b) / 2])];\n}\n\nfunction setMinMax(engine, p1, p2) {\n  var _findMinMax = findMinMax(p1, p2),\n      min = _findMinMax.min,\n      max = _findMinMax.max;\n\n  engine.min = returnArray(min);\n  engine.max = returnArray(max);\n}\n\nvar Engine = /*#__PURE__*/function () {\n  function Engine(parameters) {\n    _classCallCheck(this, Engine);\n\n    var project = createProjectMethod(parameters.to);\n    var unproject = parameters.from ? createUnprojectMethod(parameters.from) : returnValue(DEFAULT_CENTER);\n    this.project = project;\n    this.unproject = unproject;\n    this.original = returnValue(this);\n\n    this.source = function () {\n      return extend({}, parameters);\n    };\n\n    this.isInvertible = returnValue(!!parameters.from);\n    this.ar = returnValue(parameters.aspectRatio > 0 ? _Number(parameters.aspectRatio) : 1);\n    this.center = returnArray(unproject([0, 0]));\n    setMinMax(this, [unproject([-1, 0])[0], unproject([0, 1])[1]], [unproject([1, 0])[0], unproject([0, -1])[1]]);\n  }\n\n  _createClass(Engine, [{\n    key: \"aspectRatio\",\n    value: function aspectRatio(_aspectRatio) {\n      var engine = new Engine(extend(this.source(), {\n        aspectRatio: _aspectRatio\n      }));\n      engine.original = this.original;\n      engine.min = this.min;\n      engine.max = this.max;\n      return engine;\n    }\n  }, {\n    key: \"bounds\",\n    value: function bounds(_bounds) {\n      _bounds = _bounds || [];\n      var parameters = this.source();\n      var min = this.min();\n      var max = this.max();\n      var b1 = parseAndClampArray([_bounds[0], _bounds[1]], min, max, min);\n      var b2 = parseAndClampArray([_bounds[2], _bounds[3]], min, max, max);\n      var p1 = parameters.to(b1);\n      var p2 = parameters.to(b2);\n\n      var delta = _min(_abs(p2[0] - p1[0]) > MIN_BOUNDS_RANGE ? _abs(p2[0] - p1[0]) : 2, _abs(p2[1] - p1[1]) > MIN_BOUNDS_RANGE ? _abs(p2[1] - p1[1]) : 2);\n\n      if (delta < 2) {\n        extend(parameters, createProjectUnprojectMethods(parameters.to, parameters.from, p1, p2, delta));\n      }\n\n      var engine = new Engine(parameters);\n      engine.original = this.original;\n      setMinMax(engine, b1, b2);\n      return engine;\n    }\n  }]);\n\n  return Engine;\n}();\n\nfunction invertVerticalAxis(pair) {\n  return [pair[0], -pair[1]];\n}\n\nfunction createProjectMethod(method) {\n  return function (arg) {\n    return invertVerticalAxis(method(arg));\n  };\n}\n\nfunction createUnprojectMethod(method) {\n  return function (arg) {\n    return method(invertVerticalAxis(arg));\n  };\n}\n\nfunction returnValue(value) {\n  return function () {\n    return value;\n  };\n}\n\nfunction returnArray(value) {\n  return function () {\n    return value.slice();\n  };\n}\n\nfunction findMinMax(p1, p2) {\n  return {\n    min: [_min(p1[0], p2[0]), _min(p1[1], p2[1])],\n    max: [_max(p1[0], p2[0]), _max(p1[1], p2[1])]\n  };\n}\n\nexport var projection = function projection(parameters) {\n  return parameters && parameters.to ? new Engine(parameters) : null;\n};\nvar projectionsCache = {};\n\nprojection.get = function (name) {\n  return projectionsCache[name] || null;\n};\n\nprojection.add = function (name, engine) {\n  engine = engine instanceof Engine && engine || projection(engine);\n\n  if (!projectionsCache[name] && engine) {\n    projectionsCache[name] = engine;\n  }\n\n  return projection;\n};\n\nfunction createProjectUnprojectMethods(project, unproject, p1, p2, delta) {\n  var x0 = (p1[0] + p2[0]) / 2 - delta / 2;\n  var y0 = (p1[1] + p2[1]) / 2 - delta / 2;\n  var k = 2 / delta;\n  return {\n    to: function to(coordinates) {\n      var _project = project(coordinates),\n          _project2 = _slicedToArray(_project, 2),\n          p0 = _project2[0],\n          p1 = _project2[1];\n\n      return [(p0 - x0) * k - 1, (p1 - y0) * k - 1];\n    },\n    from: function from(coordinates) {\n      return unproject([x0 + (coordinates[0] + 1) / k, y0 + (coordinates[1] + 1) / k]);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/vector_map/projection.main.js"],"names":["extend","makeEventEmitter","_Number","Number","_min","Math","min","_max","max","_abs","abs","_round","round","_ln","log","_pow","pow","TWO_TO_LN2","LN2","MIN_BOUNDS_RANGE","DEFAULT_MIN_ZOOM","DEFAULT_MAX_ZOOM","DEFAULT_CENTER","NaN","DEFAULT_ENGINE_NAME","floatsEqual","f1","f2","arraysEqual","a1","a2","parseAndClamp","value","minValue","maxValue","defaultValue","val","isFinite","parseAndClampArray","getEngine","engine","Engine","projection","get","Projection","parameters","_initEvents","_params","_engine","_center","center","_adjustCenter","prototype","constructor","_minZoom","_maxZoom","_zoom","_canvas","_scale","dispose","_disposeEvents","setEngine","_fire","_changeCenter","_triggerCenterChanged","_changeZoom","_triggerZoomChanged","_setupScreen","setBounds","bounds","original","canvas","width","height","aspectRatio","ar","_x0","left","_y0","top","project","screenAR","boundsAR","correction","isNaN","_xRadius","_yRadius","setSize","getCanvas","_toScreen","coordinates","_fromScreen","_toTransformed","_xCenter","_yCenter","_toTransformedFast","_fromTransformed","transform","isInvertible","getSquareSize","size","getZoom","oldZoom","newZoom","isChanged","setZoom","getScaledZoom","length","setScaledZoom","scaledZoom","changeScaledZoom","deltaZoom","getZoomScalePartition","_setupScaling","k","step","zoom","i","push","setMaxZoom","maxZoom","MAX_VALUE","getCenter","slice","setCenter","oldCenter","newCenter","centerChanged","zoomChanged","setCenterByPoint","screenPosition","p","q","unproject","beginMoveCenter","_moveCenter","endMoveCenter","moveCenter","shift","current","toScreenPoint","fromScreenPoint","getViewport","lt","lb","rt","rb","minMax","findMinMax","selectFarthestPoint","concat","setViewport","viewport","data","getZoomAndCenterFromViewport","getTransform","translateX","translateY","_eventNames","point1","point2","basePoint1","basePoint2","basePoint","selectClosestPoint","l","r","t","b","setMinMax","p1","p2","returnArray","createProjectMethod","to","from","createUnprojectMethod","returnValue","source","b1","b2","delta","createProjectUnprojectMethods","invertVerticalAxis","pair","method","arg","projectionsCache","name","add","x0","y0","p0"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/vector_map/projection.main.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    makeEventEmitter\r\n} from \"./event_emitter\";\r\nvar _Number = Number;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _abs = Math.abs;\r\nvar _round = Math.round;\r\nvar _ln = Math.log;\r\nvar _pow = Math.pow;\r\nvar TWO_TO_LN2 = 2 / Math.LN2;\r\nvar MIN_BOUNDS_RANGE = 1 / 3600 / 180 / 10;\r\nvar DEFAULT_MIN_ZOOM = 1;\r\nvar DEFAULT_MAX_ZOOM = 256;\r\nvar DEFAULT_CENTER = [NaN, NaN];\r\nvar DEFAULT_ENGINE_NAME = \"mercator\";\r\n\r\nfunction floatsEqual(f1, f2) {\r\n    return _abs(f1 - f2) < 1e-8\r\n}\r\n\r\nfunction arraysEqual(a1, a2) {\r\n    return floatsEqual(a1[0], a2[0]) && floatsEqual(a1[1], a2[1])\r\n}\r\n\r\nfunction parseAndClamp(value, minValue, maxValue, defaultValue) {\r\n    var val = _Number(value);\r\n    return isFinite(val) ? _min(_max(val, minValue), maxValue) : defaultValue\r\n}\r\n\r\nfunction parseAndClampArray(value, minValue, maxValue, defaultValue) {\r\n    return [parseAndClamp(value[0], minValue[0], maxValue[0], defaultValue[0]), parseAndClamp(value[1], minValue[1], maxValue[1], defaultValue[1])]\r\n}\r\n\r\nfunction getEngine(engine) {\r\n    return engine instanceof Engine && engine || projection.get(engine) || projection(engine) || projection.get(DEFAULT_ENGINE_NAME)\r\n}\r\nexport var Projection = function(parameters) {\r\n    this._initEvents();\r\n    this._params = parameters;\r\n    this._engine = getEngine();\r\n    this._center = this._engine.center();\r\n    this._adjustCenter()\r\n};\r\nProjection.prototype = {\r\n    constructor: Projection,\r\n    _minZoom: DEFAULT_MIN_ZOOM,\r\n    _maxZoom: DEFAULT_MAX_ZOOM,\r\n    _zoom: DEFAULT_MIN_ZOOM,\r\n    _center: DEFAULT_CENTER,\r\n    _canvas: {},\r\n    _scale: [],\r\n    dispose: function() {\r\n        this._disposeEvents()\r\n    },\r\n    setEngine: function(value) {\r\n        var engine = getEngine(value);\r\n        if (this._engine !== engine) {\r\n            this._engine = engine;\r\n            this._fire(\"engine\");\r\n            if (this._changeCenter(engine.center())) {\r\n                this._triggerCenterChanged()\r\n            }\r\n            if (this._changeZoom(this._minZoom)) {\r\n                this._triggerZoomChanged()\r\n            }\r\n            this._adjustCenter();\r\n            this._setupScreen()\r\n        }\r\n    },\r\n    setBounds: function(bounds) {\r\n        if (void 0 !== bounds) {\r\n            this.setEngine(this._engine.original().bounds(bounds))\r\n        }\r\n    },\r\n    _setupScreen: function() {\r\n        var canvas = this._canvas;\r\n        var width = canvas.width;\r\n        var height = canvas.height;\r\n        var engine = this._engine;\r\n        var aspectRatio = engine.ar();\r\n        this._x0 = canvas.left + width / 2;\r\n        this._y0 = canvas.top + height / 2;\r\n        var min = [this.project([engine.min()[0], 0])[0], this.project([0, engine.min()[1]])[1]];\r\n        var max = [this.project([engine.max()[0], 0])[0], this.project([0, engine.max()[1]])[1]];\r\n        var screenAR = width / height;\r\n        var boundsAR = _abs(max[0] - min[0]) / _abs(max[1] - min[1]);\r\n        var correction;\r\n        if (isNaN(boundsAR) || 0 === boundsAR || _min(screenAR, aspectRatio) <= aspectRatio * boundsAR && aspectRatio * boundsAR <= _max(screenAR, aspectRatio)) {\r\n            correction = 1\r\n        } else {\r\n            correction = boundsAR > 1 ? boundsAR : 1 / boundsAR\r\n        }\r\n        if (aspectRatio * boundsAR >= screenAR) {\r\n            this._xRadius = width / 2 / correction;\r\n            this._yRadius = width / 2 / (aspectRatio * correction)\r\n        } else {\r\n            this._xRadius = height / 2 * (aspectRatio / correction);\r\n            this._yRadius = height / 2 / correction\r\n        }\r\n        this._fire(\"screen\")\r\n    },\r\n    setSize: function(canvas) {\r\n        this._canvas = canvas;\r\n        this._setupScreen()\r\n    },\r\n    getCanvas: function() {\r\n        return this._canvas\r\n    },\r\n    _toScreen: function(coordinates) {\r\n        return [this._x0 + this._xRadius * coordinates[0], this._y0 + this._yRadius * coordinates[1]]\r\n    },\r\n    _fromScreen: function(coordinates) {\r\n        return [(coordinates[0] - this._x0) / this._xRadius, (coordinates[1] - this._y0) / this._yRadius]\r\n    },\r\n    _toTransformed: function(coordinates) {\r\n        return [coordinates[0] * this._zoom + this._xCenter, coordinates[1] * this._zoom + this._yCenter]\r\n    },\r\n    _toTransformedFast: function(coordinates) {\r\n        return [coordinates[0] * this._zoom, coordinates[1] * this._zoom]\r\n    },\r\n    _fromTransformed: function(coordinates) {\r\n        return [(coordinates[0] - this._xCenter) / this._zoom, (coordinates[1] - this._yCenter) / this._zoom]\r\n    },\r\n    _adjustCenter: function() {\r\n        var center = this._engine.project(this._center);\r\n        this._xCenter = -center[0] * this._zoom || 0;\r\n        this._yCenter = -center[1] * this._zoom || 0\r\n    },\r\n    project: function(coordinates) {\r\n        return this._engine.project(coordinates)\r\n    },\r\n    transform: function(coordinates) {\r\n        return this._toScreen(this._toTransformedFast(coordinates))\r\n    },\r\n    isInvertible: function() {\r\n        return this._engine.isInvertible()\r\n    },\r\n    getSquareSize: function(size) {\r\n        return [size[0] * this._zoom * this._xRadius, size[1] * this._zoom * this._yRadius]\r\n    },\r\n    getZoom: function() {\r\n        return this._zoom\r\n    },\r\n    _changeZoom: function(value) {\r\n        var oldZoom = this._zoom;\r\n        var newZoom = this._zoom = parseAndClamp(value, this._minZoom, this._maxZoom, this._minZoom);\r\n        var isChanged = !floatsEqual(oldZoom, newZoom);\r\n        if (isChanged) {\r\n            this._adjustCenter();\r\n            this._fire(\"zoom\")\r\n        }\r\n        return isChanged\r\n    },\r\n    setZoom: function(value) {\r\n        if (this._engine.isInvertible() && this._changeZoom(value)) {\r\n            this._triggerZoomChanged()\r\n        }\r\n    },\r\n    getScaledZoom: function() {\r\n        return _round((this._scale.length - 1) * _ln(this._zoom) / _ln(this._maxZoom))\r\n    },\r\n    setScaledZoom: function(scaledZoom) {\r\n        this.setZoom(this._scale[_round(scaledZoom)])\r\n    },\r\n    changeScaledZoom: function(deltaZoom) {\r\n        this.setZoom(this._scale[_max(_min(_round(this.getScaledZoom() + deltaZoom), this._scale.length - 1), 0)])\r\n    },\r\n    getZoomScalePartition: function() {\r\n        return this._scale.length - 1\r\n    },\r\n    _setupScaling: function() {\r\n        var k = _max(_round(TWO_TO_LN2 * _ln(this._maxZoom)), 4);\r\n        var step = _pow(this._maxZoom, 1 / k);\r\n        var zoom = this._minZoom;\r\n        this._scale = [zoom];\r\n        for (var i = 1; i <= k; ++i) {\r\n            this._scale.push(zoom *= step)\r\n        }\r\n    },\r\n    setMaxZoom: function(maxZoom) {\r\n        this._minZoom = DEFAULT_MIN_ZOOM;\r\n        this._maxZoom = parseAndClamp(maxZoom, this._minZoom, _Number.MAX_VALUE, DEFAULT_MAX_ZOOM);\r\n        this._setupScaling();\r\n        if (this._zoom > this._maxZoom) {\r\n            this.setZoom(this._maxZoom)\r\n        }\r\n        this._fire(\"max-zoom\")\r\n    },\r\n    getCenter: function() {\r\n        return this._center.slice()\r\n    },\r\n    setCenter: function(value) {\r\n        if (this._engine.isInvertible() && this._changeCenter(value || [])) {\r\n            this._triggerCenterChanged()\r\n        }\r\n    },\r\n    _changeCenter: function(value) {\r\n        var engine = this._engine;\r\n        var oldCenter = this._center;\r\n        var newCenter = this._center = parseAndClampArray(value, engine.min(), engine.max(), engine.center());\r\n        var isChanged = !arraysEqual(oldCenter, newCenter);\r\n        if (isChanged) {\r\n            this._adjustCenter();\r\n            this._fire(\"center\")\r\n        }\r\n        return isChanged\r\n    },\r\n    _triggerCenterChanged: function() {\r\n        this._params.centerChanged(this.getCenter())\r\n    },\r\n    _triggerZoomChanged: function() {\r\n        this._params.zoomChanged(this.getZoom())\r\n    },\r\n    setCenterByPoint: function(coordinates, screenPosition) {\r\n        var p = this._engine.project(coordinates);\r\n        var q = this._fromScreen(screenPosition);\r\n        this.setCenter(this._engine.unproject([-q[0] / this._zoom + p[0], -q[1] / this._zoom + p[1]]))\r\n    },\r\n    beginMoveCenter: function() {\r\n        if (this._engine.isInvertible()) {\r\n            this._moveCenter = this._center\r\n        }\r\n    },\r\n    endMoveCenter: function() {\r\n        if (this._moveCenter) {\r\n            if (!arraysEqual(this._moveCenter, this._center)) {\r\n                this._triggerCenterChanged()\r\n            }\r\n            this._moveCenter = null\r\n        }\r\n    },\r\n    moveCenter: function(shift) {\r\n        if (this._moveCenter) {\r\n            var current = this.toScreenPoint(this._center);\r\n            this._changeCenter(this.fromScreenPoint([current[0] + shift[0], current[1] + shift[1]]))\r\n        }\r\n    },\r\n    getViewport: function() {\r\n        var unproject = this._engine.unproject;\r\n        var lt = unproject(this._fromTransformed([-1, -1]));\r\n        var lb = unproject(this._fromTransformed([-1, 1]));\r\n        var rt = unproject(this._fromTransformed([1, -1]));\r\n        var rb = unproject(this._fromTransformed([1, 1]));\r\n        var minMax = findMinMax([selectFarthestPoint(lt[0], lb[0], rt[0], rb[0]), selectFarthestPoint(lt[1], rt[1], lb[1], rb[1])], [selectFarthestPoint(rt[0], rb[0], lt[0], lb[0]), selectFarthestPoint(lb[1], rb[1], lt[1], rt[1])]);\r\n        return [].concat(minMax.min, minMax.max)\r\n    },\r\n    setViewport: function(viewport) {\r\n        var engine = this._engine;\r\n        var data = viewport ? getZoomAndCenterFromViewport(engine.project, engine.unproject, viewport) : [this._minZoom, engine.center()];\r\n        this.setZoom(data[0]);\r\n        this.setCenter(data[1])\r\n    },\r\n    getTransform: function() {\r\n        return {\r\n            translateX: this._xCenter * this._xRadius,\r\n            translateY: this._yCenter * this._yRadius\r\n        }\r\n    },\r\n    fromScreenPoint: function(coordinates) {\r\n        return this._engine.unproject(this._fromTransformed(this._fromScreen(coordinates)))\r\n    },\r\n    toScreenPoint: function(coordinates) {\r\n        return this._toScreen(this._toTransformed(this._engine.project(coordinates)))\r\n    },\r\n    _eventNames: [\"engine\", \"screen\", \"center\", \"zoom\", \"max-zoom\"]\r\n};\r\nmakeEventEmitter(Projection);\r\n\r\nfunction selectFarthestPoint(point1, point2, basePoint1, basePoint2) {\r\n    var basePoint = (basePoint1 + basePoint2) / 2;\r\n    return _abs(point1 - basePoint) > _abs(point2 - basePoint) ? point1 : point2\r\n}\r\n\r\nfunction selectClosestPoint(point1, point2, basePoint1, basePoint2) {\r\n    var basePoint = (basePoint1 + basePoint2) / 2;\r\n    return _abs(point1 - basePoint) < _abs(point2 - basePoint) ? point1 : point2\r\n}\r\n\r\nfunction getZoomAndCenterFromViewport(project, unproject, viewport) {\r\n    var lt = project([viewport[0], viewport[3]]);\r\n    var lb = project([viewport[0], viewport[1]]);\r\n    var rt = project([viewport[2], viewport[3]]);\r\n    var rb = project([viewport[2], viewport[1]]);\r\n    var l = selectClosestPoint(lt[0], lb[0], rt[0], rb[0]);\r\n    var r = selectClosestPoint(rt[0], rb[0], lt[0], lb[0]);\r\n    var t = selectClosestPoint(lt[1], rt[1], lb[1], rb[1]);\r\n    var b = selectClosestPoint(lb[1], rb[1], lt[1], rt[1]);\r\n    return [2 / _max(_abs(l - r), _abs(t - b)), unproject([(l + r) / 2, (t + b) / 2])]\r\n}\r\n\r\nfunction setMinMax(engine, p1, p2) {\r\n    var {\r\n        min: min,\r\n        max: max\r\n    } = findMinMax(p1, p2);\r\n    engine.min = returnArray(min);\r\n    engine.max = returnArray(max)\r\n}\r\nvar Engine = class {\r\n    constructor(parameters) {\r\n        var project = createProjectMethod(parameters.to);\r\n        var unproject = parameters.from ? createUnprojectMethod(parameters.from) : returnValue(DEFAULT_CENTER);\r\n        this.project = project;\r\n        this.unproject = unproject;\r\n        this.original = returnValue(this);\r\n        this.source = function() {\r\n            return extend({}, parameters)\r\n        };\r\n        this.isInvertible = returnValue(!!parameters.from);\r\n        this.ar = returnValue(parameters.aspectRatio > 0 ? _Number(parameters.aspectRatio) : 1);\r\n        this.center = returnArray(unproject([0, 0]));\r\n        setMinMax(this, [unproject([-1, 0])[0], unproject([0, 1])[1]], [unproject([1, 0])[0], unproject([0, -1])[1]])\r\n    }\r\n    aspectRatio(aspectRatio) {\r\n        var engine = new Engine(extend(this.source(), {\r\n            aspectRatio: aspectRatio\r\n        }));\r\n        engine.original = this.original;\r\n        engine.min = this.min;\r\n        engine.max = this.max;\r\n        return engine\r\n    }\r\n    bounds(bounds) {\r\n        bounds = bounds || [];\r\n        var parameters = this.source();\r\n        var min = this.min();\r\n        var max = this.max();\r\n        var b1 = parseAndClampArray([bounds[0], bounds[1]], min, max, min);\r\n        var b2 = parseAndClampArray([bounds[2], bounds[3]], min, max, max);\r\n        var p1 = parameters.to(b1);\r\n        var p2 = parameters.to(b2);\r\n        var delta = _min(_abs(p2[0] - p1[0]) > MIN_BOUNDS_RANGE ? _abs(p2[0] - p1[0]) : 2, _abs(p2[1] - p1[1]) > MIN_BOUNDS_RANGE ? _abs(p2[1] - p1[1]) : 2);\r\n        if (delta < 2) {\r\n            extend(parameters, createProjectUnprojectMethods(parameters.to, parameters.from, p1, p2, delta))\r\n        }\r\n        var engine = new Engine(parameters);\r\n        engine.original = this.original;\r\n        setMinMax(engine, b1, b2);\r\n        return engine\r\n    }\r\n};\r\n\r\nfunction invertVerticalAxis(pair) {\r\n    return [pair[0], -pair[1]]\r\n}\r\n\r\nfunction createProjectMethod(method) {\r\n    return arg => invertVerticalAxis(method(arg))\r\n}\r\n\r\nfunction createUnprojectMethod(method) {\r\n    return arg => method(invertVerticalAxis(arg))\r\n}\r\n\r\nfunction returnValue(value) {\r\n    return () => value\r\n}\r\n\r\nfunction returnArray(value) {\r\n    return () => value.slice()\r\n}\r\n\r\nfunction findMinMax(p1, p2) {\r\n    return {\r\n        min: [_min(p1[0], p2[0]), _min(p1[1], p2[1])],\r\n        max: [_max(p1[0], p2[0]), _max(p1[1], p2[1])]\r\n    }\r\n}\r\nexport var projection = function(parameters) {\r\n    return parameters && parameters.to ? new Engine(parameters) : null\r\n};\r\nvar projectionsCache = {};\r\nprojection.get = function(name) {\r\n    return projectionsCache[name] || null\r\n};\r\nprojection.add = function(name, engine) {\r\n    engine = engine instanceof Engine && engine || projection(engine);\r\n    if (!projectionsCache[name] && engine) {\r\n        projectionsCache[name] = engine\r\n    }\r\n    return projection\r\n};\r\n\r\nfunction createProjectUnprojectMethods(project, unproject, p1, p2, delta) {\r\n    var x0 = (p1[0] + p2[0]) / 2 - delta / 2;\r\n    var y0 = (p1[1] + p2[1]) / 2 - delta / 2;\r\n    var k = 2 / delta;\r\n    return {\r\n        to: function(coordinates) {\r\n            var [p0, p1] = project(coordinates);\r\n            return [(p0 - x0) * k - 1, (p1 - y0) * k - 1]\r\n        },\r\n        from: function(coordinates) {\r\n            return unproject([x0 + (coordinates[0] + 1) / k, y0 + (coordinates[1] + 1) / k])\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}