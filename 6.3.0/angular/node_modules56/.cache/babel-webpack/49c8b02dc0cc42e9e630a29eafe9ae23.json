{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/vdom\";\nimport { Row } from \"../row\";\nimport { TimePanelCell as Cell } from \"./cell\";\nimport { CellBase } from \"../cell\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel, isVerticalGroupOrientation } from \"../../utils\";\nimport { Table } from \"../table\";\nimport { AllDayPanelTitle } from \"../date_table/all_day_panel/title\";\nexport var viewFunction = function viewFunction(_ref) {\n  var bottomVirtualRowHeight = _ref.bottomVirtualRowHeight,\n      isVerticalGrouping = _ref.isVerticalGroupOrientation,\n      _ref$props = _ref.props,\n      groupOrientation = _ref$props.groupOrientation,\n      timeCellTemplate = _ref$props.timeCellTemplate,\n      timePanelData = _ref$props.timePanelData,\n      restAttributes = _ref.restAttributes,\n      topVirtualRowHeight = _ref.topVirtualRowHeight;\n  return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\n    topVirtualRowHeight: topVirtualRowHeight,\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    virtualCellsCount: 1,\n    className: \"dx-scheduler-time-panel\",\n    children: timePanelData.groupedData.map(function (_ref2, index) {\n      var dateTable = _ref2.dateTable,\n          groupIndex = _ref2.groupIndex;\n      return createFragment([getIsGroupedAllDayPanel(timePanelData, index) && createComponentVNode(2, Row, {\n        children: createComponentVNode(2, CellBase, {\n          className: \"dx-scheduler-time-panel-title-cell\",\n          children: createComponentVNode(2, AllDayPanelTitle)\n        })\n      }), dateTable.map(function (cell) {\n        var cellCountInGroupRow = timePanelData.cellCountInGroupRow;\n        var groups = cell.groups,\n            cellIndex = cell.index,\n            isFirstGroupCell = cell.isFirstGroupCell,\n            isLastGroupCell = cell.isLastGroupCell,\n            key = cell.key,\n            startDate = cell.startDate,\n            text = cell.text;\n        return createComponentVNode(2, Row, {\n          className: \"dx-scheduler-time-panel-row\",\n          children: createComponentVNode(2, Cell, {\n            startDate: startDate,\n            text: text,\n            groups: isVerticalGrouping ? groups : void 0,\n            groupIndex: isVerticalGrouping ? groupIndex : void 0,\n            isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,\n            isLastGroupCell: isVerticalGrouping && isLastGroupCell,\n            index: Math.floor(cellIndex / cellCountInGroupRow),\n            timeCellTemplate: timeCellTemplate\n          })\n        }, key);\n      })], 0, getKeyByGroup(groupIndex, groupOrientation));\n    })\n  })));\n};\nexport var TimePanelTableLayoutProps = {\n  className: \"\",\n  allDayPanelVisible: false,\n  timePanelData: {\n    groupedData: [],\n    cellCountInGroupRow: 0,\n    leftVirtualCellCount: 0,\n    rightVirtualCellCount: 0,\n    topVirtualRowCount: 0,\n    bottomVirtualRowCount: 0\n  }\n};\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var TimePanelTableLayout = /*#__PURE__*/function (_InfernoWrapperCompon) {\n  _inherits(TimePanelTableLayout, _InfernoWrapperCompon);\n\n  var _super = _createSuper(TimePanelTableLayout);\n\n  function TimePanelTableLayout(props) {\n    var _this;\n\n    _classCallCheck(this, TimePanelTableLayout);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TimePanelTableLayout, [{\n    key: \"topVirtualRowHeight\",\n    get: function get() {\n      return this.props.timePanelData.topVirtualRowHeight || 0;\n    }\n  }, {\n    key: \"bottomVirtualRowHeight\",\n    get: function get() {\n      return this.props.timePanelData.bottomVirtualRowHeight || 0;\n    }\n  }, {\n    key: \"isVerticalGroupOrientation\",\n    get: function get() {\n      var groupOrientation = this.props.groupOrientation;\n      return isVerticalGroupOrientation(groupOrientation);\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, [\"allDayPanelVisible\", \"className\", \"groupOrientation\", \"timeCellTemplate\", \"timePanelData\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          timeCellTemplate: getTemplate(props.timeCellTemplate)\n        }),\n        topVirtualRowHeight: this.topVirtualRowHeight,\n        bottomVirtualRowHeight: this.bottomVirtualRowHeight,\n        isVerticalGroupOrientation: this.isVerticalGroupOrientation,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return TimePanelTableLayout;\n}(InfernoWrapperComponent);\nTimePanelTableLayout.defaultProps = _extends({}, TimePanelTableLayoutProps);","map":null,"metadata":{},"sourceType":"module"}