{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.range.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { addColorizer, createColorCodeGetter as _createColorCodeGetter } from \"./colorizing\";\n\nfunction getPaletteIndex(value, items) {\n  var start = 0;\n  var end = items.length - 1;\n  var index = -1;\n  var middle;\n\n  if (items[start] <= value && value <= items[end]) {\n    if (value === items[end]) {\n      index = end - 1;\n    } else {\n      while (end - start > 1) {\n        middle = start + end >> 1;\n\n        if (value < items[middle]) {\n          end = middle;\n        } else {\n          start = middle;\n        }\n      }\n\n      index = start;\n    }\n  }\n\n  return index;\n}\n\nfunction rangeColorizer(options, themeManager) {\n  var range = options.range || [];\n  var palette = themeManager.createDiscretePalette(options.palette, range.length - 1);\n\n  var getValue = _createColorCodeGetter(options);\n\n  return function (node) {\n    return palette.getColor(getPaletteIndex(getValue(node), range));\n  };\n}\n\naddColorizer(\"range\", rangeColorizer);\nexport default rangeColorizer;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/tree_map/colorizing.range.js"],"names":["addColorizer","createColorCodeGetter","_createColorCodeGetter","getPaletteIndex","value","items","start","end","length","index","middle","rangeColorizer","options","themeManager","range","palette","createDiscretePalette","getValue","node","getColor"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,YADJ,EAEIC,qBAAqB,IAAIC,sBAF7B,QAGO,cAHP;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACnC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAzB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAJ;;AACA,MAAIL,KAAK,CAACC,KAAD,CAAL,IAAgBF,KAAhB,IAAyBA,KAAK,IAAIC,KAAK,CAACE,GAAD,CAA3C,EAAkD;AAC9C,QAAIH,KAAK,KAAKC,KAAK,CAACE,GAAD,CAAnB,EAA0B;AACtBE,MAAAA,KAAK,GAAGF,GAAG,GAAG,CAAd;AACH,KAFD,MAEO;AACH,aAAOA,GAAG,GAAGD,KAAN,GAAc,CAArB,EAAwB;AACpBI,QAAAA,MAAM,GAAGJ,KAAK,GAAGC,GAAR,IAAe,CAAxB;;AACA,YAAIH,KAAK,GAAGC,KAAK,CAACK,MAAD,CAAjB,EAA2B;AACvBH,UAAAA,GAAG,GAAGG,MAAN;AACH,SAFD,MAEO;AACHJ,UAAAA,KAAK,GAAGI,MAAR;AACH;AACJ;;AACDD,MAAAA,KAAK,GAAGH,KAAR;AACH;AACJ;;AACD,SAAOG,KAAP;AACH;;AAED,SAASE,cAAT,CAAwBC,OAAxB,EAAiCC,YAAjC,EAA+C;AAC3C,MAAIC,KAAK,GAAGF,OAAO,CAACE,KAAR,IAAiB,EAA7B;AACA,MAAIC,OAAO,GAAGF,YAAY,CAACG,qBAAb,CAAmCJ,OAAO,CAACG,OAA3C,EAAoDD,KAAK,CAACN,MAAN,GAAe,CAAnE,CAAd;;AACA,MAAIS,QAAQ,GAAGf,sBAAsB,CAACU,OAAD,CAArC;;AACA,SAAO,UAASM,IAAT,EAAe;AAClB,WAAOH,OAAO,CAACI,QAAR,CAAiBhB,eAAe,CAACc,QAAQ,CAACC,IAAD,CAAT,EAAiBJ,KAAjB,CAAhC,CAAP;AACH,GAFD;AAGH;;AACDd,YAAY,CAAC,OAAD,EAAUW,cAAV,CAAZ;AACA,eAAeA,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.range.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    addColorizer,\r\n    createColorCodeGetter as _createColorCodeGetter\r\n} from \"./colorizing\";\r\n\r\nfunction getPaletteIndex(value, items) {\r\n    var start = 0;\r\n    var end = items.length - 1;\r\n    var index = -1;\r\n    var middle;\r\n    if (items[start] <= value && value <= items[end]) {\r\n        if (value === items[end]) {\r\n            index = end - 1\r\n        } else {\r\n            while (end - start > 1) {\r\n                middle = start + end >> 1;\r\n                if (value < items[middle]) {\r\n                    end = middle\r\n                } else {\r\n                    start = middle\r\n                }\r\n            }\r\n            index = start\r\n        }\r\n    }\r\n    return index\r\n}\r\n\r\nfunction rangeColorizer(options, themeManager) {\r\n    var range = options.range || [];\r\n    var palette = themeManager.createDiscretePalette(options.palette, range.length - 1);\r\n    var getValue = _createColorCodeGetter(options);\r\n    return function(node) {\r\n        return palette.getColor(getPaletteIndex(getValue(node), range))\r\n    }\r\n}\r\naddColorizer(\"range\", rangeColorizer);\r\nexport default rangeColorizer;\r\n"]},"metadata":{},"sourceType":"module"}