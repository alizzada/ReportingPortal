{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/chart.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../core/utils/common\";\nimport { extend as _extend } from \"../core/utils/extend\";\nimport { inArray } from \"../core/utils/array\";\nimport { hasWindow } from \"../core/utils/window\";\nimport { each as _each } from \"../core/utils/iterator\";\nimport registerComponent from \"../core/component_registrator\";\nimport { prepareSegmentRectPoints } from \"./utils\";\nimport { map as _map, getLog, getCategoriesInfo, updatePanesCanvases, convertVisualRangeObject, PANE_PADDING, normalizePanesHeight, rangesAreEqual, isRelativeHeightPane } from \"./core/utils\";\nimport { type, isDefined as _isDefined } from \"../core/utils/type\";\nimport { getPrecision } from \"../core/utils/math\";\nimport { overlapping } from \"./chart_components/base_chart\";\nimport multiAxesSynchronizer from \"./chart_components/multi_axes_synchronizer\";\nimport { AdvancedChart } from \"./chart_components/advanced_chart\";\nimport { ScrollBar } from \"./chart_components/scroll_bar\";\nimport { Crosshair } from \"./chart_components/crosshair\";\nimport rangeDataCalculator from \"./series/helpers/range_data_calculator\";\nimport { LayoutManager } from \"./chart_components/layout_manager\";\nimport { Range } from \"./translators/range\";\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\nvar DEFAULT_PANES = [{\n  name: DEFAULT_PANE_NAME,\n  border: {}\n}];\nvar DISCRETE = \"discrete\";\nvar _isArray = Array.isArray;\n\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\n  var result;\n\n  for (var i = 0; i < axes.length; i++) {\n    if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\n      result = axes[i].name;\n      break;\n    }\n  }\n\n  if (!result) {\n    result = axes[0].name;\n  }\n\n  return result;\n}\n\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\n  var gridOpt = axis.getOptions().grid;\n  var minorGridOpt = axis.getOptions().minorGrid;\n  gridOpt.visible = gridVisibility;\n  minorGridOpt && (minorGridOpt.visible = minorGridVisibility);\n}\n\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\n  var axisShown = false;\n  var hiddenStubAxis = [];\n  var minorGridVisibility = axesForPane.some(function (axis) {\n    var minorGridOptions = axis.getOptions().minorGrid;\n    return minorGridOptions && minorGridOptions.visible;\n  });\n  var gridVisibility = axesForPane.some(function (axis) {\n    var gridOptions = axis.getOptions().grid;\n    return gridOptions && gridOptions.visible;\n  });\n\n  if (axesForPane.length > 1) {\n    axesForPane.forEach(function (axis) {\n      var gridOpt = axis.getOptions().grid;\n\n      if (axisShown) {\n        changeVisibilityAxisGrids(axis, false, false);\n      } else if (gridOpt && gridOpt.visible) {\n        if (axis.getTranslator().getBusinessRange().isEmpty()) {\n          changeVisibilityAxisGrids(axis, false, false);\n          hiddenStubAxis.push(axis);\n        } else {\n          axisShown = true;\n          changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility);\n        }\n      }\n    });\n    !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility);\n  }\n}\n\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\n  var result;\n  var axInd;\n\n  for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\n    if (valueAxesOptions[axInd].name === axisName) {\n      result = valueAxesOptions[axInd];\n      result.priority = axInd;\n      break;\n    }\n  }\n\n  if (!result) {\n    for (axInd = 0; axInd < valueAxes.length; axInd++) {\n      if (valueAxes[axInd].name === axisName) {\n        result = valueAxes[axInd].getOptions();\n        result.priority = valueAxes[axInd].priority;\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction findAxis(paneName, axisName, axes) {\n  var axis;\n  var i;\n\n  for (i = 0; i < axes.length; i++) {\n    axis = axes[i];\n\n    if (axis.name === axisName && axis.pane === paneName) {\n      return axis;\n    }\n  }\n\n  if (paneName) {\n    return findAxis(void 0, axisName, axes);\n  }\n}\n\nfunction compareAxes(a, b) {\n  return a.priority - b.priority;\n}\n\nfunction doesPaneExist(panes, paneName) {\n  var found = false;\n\n  _each(panes, function (_, pane) {\n    if (pane.name === paneName) {\n      found = true;\n      return false;\n    }\n  });\n\n  return found;\n}\n\nfunction accumulate(field, src1, src2, auxSpacing) {\n  var val1 = src1[field] || 0;\n  var val2 = src2[field] || 0;\n  return val1 + val2 + (val1 && val2 ? auxSpacing : 0);\n}\n\nfunction pickMax(field, src1, src2) {\n  return pickMaxValue(src1[field], src2[field]);\n}\n\nfunction pickMaxValue(val1, val2) {\n  return Math.max(val1 || 0, val2 || 0);\n}\n\nfunction getAxisMargins(axis) {\n  return axis.getMargins();\n}\n\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\n  return axes.reduce(function (margins, axis) {\n    var _axis$getOrthogonalAx;\n\n    var axisMargins = getMarginsFunc(axis);\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\n    paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\n    paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\n    paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    var orthogonalAxis = null === (_axis$getOrthogonalAx = axis.getOrthogonalAxis) || void 0 === _axis$getOrthogonalAx ? void 0 : _axis$getOrthogonalAx.call(axis);\n\n    if (orthogonalAxis && orthogonalAxis.customPositionIsAvailable() && (!axis.customPositionIsBoundaryOrthogonalAxis() || !orthogonalAxis.customPositionEqualsToPredefined())) {\n      margins[orthogonalAxis.getResolvedBoundaryPosition()] = 0;\n    }\n\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction getVerticalAxesMargins(axes) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = axis.getMargins();\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\n    paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\n    paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\n    paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\n  axes.forEach(function (axis) {\n    axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3);\n  });\n}\n\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\n  function getMargin(side, margins, pane) {\n    var m = -1 === (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) ? margins : margins.panes[pane] || {};\n    return m[side];\n  }\n\n  function getMaxMargin(side, margins1, margins2, pane) {\n    return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane));\n  }\n\n  var getOriginalField = function getOriginalField(field) {\n    return \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\n  };\n\n  function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\n    paneNames = paneNames.sort(function (p1, p2) {\n      return canvases[p2][startMargin] - canvases[p1][startMargin];\n    });\n    paneNames.forEach(function (pane) {\n      var canvas = canvases[pane];\n      oppositeMargins.forEach(function (margin) {\n        canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane);\n      });\n    });\n    var firstPane = canvases[paneNames[0]];\n    var emptySpace = paneNames.reduce(function (space, paneName) {\n      space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\n      return space;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - PANE_PADDING * (paneNames.length - 1);\n    emptySpace -= Object.keys(sizes).reduce(function (prev, key) {\n      return prev + (!isRelativeHeightPane(sizes[key]) ? sizes[key].height : 0);\n    }, 0);\n    paneNames.reduce(function (offset, pane) {\n      var canvas = canvases[pane];\n      var paneSize = sizes[pane];\n      offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\n      canvas[endMargin] = firstPane[sizeField] - offset;\n      offset -= !isRelativeHeightPane(paneSize) ? paneSize.height : Math.floor(emptySpace * paneSize.height);\n      canvas[startMargin] = offset;\n      offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + PANE_PADDING;\n      return offset;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0));\n  }\n\n  var paneNames = Object.keys(canvases);\n\n  if (!isRotated) {\n    shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"]);\n  } else {\n    shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"]);\n  }\n\n  return canvases;\n}\n\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\n  if (condition) {\n    performActionOnAxes(axes, \"createTicks\", canvases);\n    multiAxesSynchronizer.synchronize(axes);\n  }\n\n  performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions);\n}\n\nfunction shiftAxis(side1, side2) {\n  var shifts = {};\n  return function (axis) {\n    if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\n      var shift = shifts[axis.pane] = shifts[axis.pane] || {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      };\n      var spacing = axis.getMultipleAxesSpacing();\n      var margins = axis.getMargins();\n      axis.shift(shift);\n      shift[side1] = accumulate(side1, shift, margins, spacing);\n      shift[side2] = accumulate(side2, shift, margins, spacing);\n    } else {\n      axis.shift({\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      });\n    }\n  };\n}\n\nfunction getCommonSize(side, margins) {\n  var size = 0;\n  var pane;\n  var paneMargins;\n\n  for (pane in margins.panes) {\n    paneMargins = margins.panes[pane];\n    size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right;\n  }\n\n  return size;\n}\n\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\n  var size = 0;\n\n  if (sizeShortage[side] > 0) {\n    size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n    performActionOnAxes(axes, \"hideTitle\");\n    sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n  }\n\n  if (sizeShortage[side] > 0) {\n    performActionOnAxes(axes, \"hideOuterElements\");\n  }\n}\n\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\n  var pointsCount = pointsToAnimation.reduce(function (sum, count) {\n    return sum + count;\n  }, 0) / pointsToAnimation.length;\n  return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit;\n}\n\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\n  var series = [];\n  var overloadedSeries = {};\n  var argVisualRange = argAxis.visualRange();\n  var argTranslator = argAxis.getTranslator();\n  var argViewPortFilter = rangeDataCalculator.getViewPortFilter(argVisualRange || {});\n  filteredSeries.forEach(function (s) {\n    var valAxis = s.getValueAxis();\n    var valVisualRange = valAxis.getCanvasRange();\n    var valTranslator = valAxis.getTranslator();\n    var seriesIndex = allSeries.indexOf(s);\n    var valViewPortFilter = rangeDataCalculator.getViewPortFilter(valVisualRange || {});\n    overloadedSeries[seriesIndex] = {};\n    filteredSeries.forEach(function (sr) {\n      return overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0;\n    });\n    var seriesPoints = [];\n    s.getPoints().filter(function (p) {\n      return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)));\n    }).forEach(function (p) {\n      var tp = {\n        seriesIndex: seriesIndex,\n        argument: p.argument,\n        value: p.getMaxValue(true),\n        size: p.bubbleSize || p.getOptions().size\n      };\n\n      if (p.getMinValue(true) !== p.getMaxValue(true)) {\n        var mp = _extend({}, tp);\n\n        mp.value = p.getMinValue(true);\n        mp.x = argTranslator.to(mp.argument, 1);\n        mp.y = valTranslator.to(mp.value, 1);\n        seriesPoints.push(mp);\n      }\n\n      tp.x = argTranslator.to(tp.argument, 1);\n      tp.y = valTranslator.to(tp.value, 1);\n      seriesPoints.push(tp);\n    });\n    overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\n    overloadedSeries[seriesIndex].total = 0;\n    overloadedSeries[seriesIndex].continuousSeries = 0;\n    series.push({\n      name: s.name,\n      index: seriesIndex,\n      points: seriesPoints\n    });\n  });\n  return {\n    series: series,\n    overloadedSeries: overloadedSeries\n  };\n}\n\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\n  var argAxisType = argAxis.getOptions().type;\n  filteredSeries.forEach(function (s) {\n    var seriesIndex = allSeries.indexOf(s);\n    s.autoHidePointMarkers = false;\n    var tickCount = argAxis.getTicksValues().majorTicksValues.length;\n\n    if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\n      for (var index in overloadedSeries[seriesIndex]) {\n        var i = parseInt(index);\n\n        if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\n          continue;\n        }\n\n        if (i === seriesIndex) {\n          if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\n            s.autoHidePointMarkers = true;\n            break;\n          }\n        } else if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\n          s.autoHidePointMarkers = true;\n          break;\n        }\n      }\n    }\n  });\n}\n\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\n  var area = canvas.width * canvas.height;\n  var seriesPoints = markersInfo.series;\n\n  var _loop = function _loop(i) {\n    var currentSeries = series.filter(function (s) {\n      return s.name === seriesPoints[i].name;\n    })[0];\n    var points = seriesPoints[i].points;\n    var pointSize = points.length ? points[0].size : 0;\n    var pointsArea = pointSize * pointSize * points.length;\n\n    if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\n      var index = seriesPoints[i].index;\n      currentSeries.autoHidePointMarkers = true;\n      seriesPoints.splice(i, 1);\n      series.splice(series.indexOf(currentSeries), 1);\n      delete markersInfo.overloadedSeries[index];\n    }\n  };\n\n  for (var i = seriesPoints.length - 1; i >= 0; i--) {\n    _loop(i);\n  }\n}\n\nfunction updateMarkersInfo(points, overloadedSeries) {\n  var isContinuousSeries = false;\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var curPoint = points[i];\n    var size = curPoint.size;\n\n    if (_isDefined(curPoint.x) && _isDefined(curPoint.y)) {\n      for (var j = i + 1; j < points.length; j++) {\n        var nextPoint = points[j];\n        var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\n        var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\n\n        if (!_isDefined(next_x) || Math.abs(curPoint.x - next_x) >= size) {\n          isContinuousSeries &= j !== i + 1;\n          break;\n        } else {\n          var distance = _isDefined(next_x) && _isDefined(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\n\n          if (distance && distance < size) {\n            overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\n            overloadedSeries[curPoint.seriesIndex].total++;\n\n            if (!isContinuousSeries) {\n              overloadedSeries[curPoint.seriesIndex].continuousSeries++;\n              isContinuousSeries = true;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nvar dxChart = AdvancedChart.inherit({\n  _themeSection: \"chart\",\n  _fontFields: [\"crosshair.label.font\"],\n  _initCore: function _initCore() {\n    this.paneAxis = {};\n    this.callBase();\n  },\n  _init: function _init() {\n    this._containerInitialHeight = hasWindow() ? this._$element.height() : 0;\n    this.callBase();\n  },\n  _correctAxes: function _correctAxes() {\n    this._correctValueAxes(true);\n  },\n  _getExtraOptions: noop,\n  _createPanes: function _createPanes() {\n    var panes = this.option(\"panes\");\n    var panesNameCounter = 0;\n    var defaultPane;\n\n    if (!panes || _isArray(panes) && !panes.length) {\n      panes = DEFAULT_PANES;\n    }\n\n    this.callBase();\n    defaultPane = this.option(\"defaultPane\");\n    panes = _extend(true, [], _isArray(panes) ? panes : [panes]);\n\n    _each(panes, function (_, pane) {\n      pane.name = !_isDefined(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name;\n    });\n\n    if (_isDefined(defaultPane)) {\n      if (!doesPaneExist(panes, defaultPane)) {\n        this._incidentOccurred(\"W2101\", [defaultPane]);\n\n        defaultPane = panes[panes.length - 1].name;\n      }\n    } else {\n      defaultPane = panes[panes.length - 1].name;\n    }\n\n    this.defaultPane = defaultPane;\n    panes = this._isRotated() ? panes.reverse() : panes;\n    return panes;\n  },\n  _getAxisRenderingOptions: function _getAxisRenderingOptions() {\n    return {\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    };\n  },\n  _prepareAxisOptions: function _prepareAxisOptions(typeSelector, userOptions, rotated) {\n    return {\n      isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\n      containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\n    };\n  },\n  _checkPaneName: function _checkPaneName(seriesTheme) {\n    var paneList = _map(this.panes, function (pane) {\n      return pane.name;\n    });\n\n    seriesTheme.pane = seriesTheme.pane || this.defaultPane;\n    return -1 !== inArray(seriesTheme.pane, paneList);\n  },\n  _initCustomPositioningAxes: function _initCustomPositioningAxes() {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n    var valueAxisName = argumentAxis.getOptions().customPositionAxis;\n\n    var valueAxis = that._valueAxes.filter(function (v) {\n      return v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name);\n    })[0];\n\n    that._valueAxes.forEach(function (v) {\n      if (argumentAxis !== v.getOrthogonalAxis()) {\n        v.getOrthogonalAxis = function () {\n          return argumentAxis;\n        };\n\n        v.customPositionIsBoundaryOrthogonalAxis = function () {\n          return argumentAxis.customPositionIsBoundary();\n        };\n      }\n    });\n\n    if (_isDefined(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\n      argumentAxis.getOrthogonalAxis = function () {\n        return valueAxis;\n      };\n\n      argumentAxis.customPositionIsBoundaryOrthogonalAxis = function () {\n        return that._valueAxes.some(function (v) {\n          return v.customPositionIsBoundary();\n        });\n      };\n    } else if (_isDefined(argumentAxis.getOrthogonalAxis()) && !_isDefined(valueAxis)) {\n      argumentAxis.getOrthogonalAxis = noop;\n    }\n  },\n  _getAllAxes: function _getAllAxes() {\n    return this._argumentAxes.concat(this._valueAxes);\n  },\n  _resetAxesAnimation: function _resetAxesAnimation(isFirstDrawing, isHorizontal) {\n    var axes = _isDefined(isHorizontal) ? isHorizontal ^ this._isRotated() ? this._argumentAxes : this._valueAxes : this._getAllAxes();\n    axes.forEach(function (a) {\n      a.resetApplyingAnimation(isFirstDrawing);\n    });\n  },\n  _cleanGroups: function _cleanGroups() {\n    this._getAllAxes().forEach(function (a) {\n      return a.beforeCleanGroups();\n    });\n\n    this.callBase();\n\n    this._getAllAxes().forEach(function (a) {\n      return a.afterCleanGroups();\n    });\n  },\n  _axesBoundaryPositioning: function _axesBoundaryPositioning() {\n    var allAxes = this._getAllAxes();\n\n    var boundaryStateChanged = false;\n    allAxes.forEach(function (a) {\n      if (!a.customPositionIsAvailable()) {\n        return false;\n      }\n\n      var prevBoundaryState = a.customPositionIsBoundary();\n      a._customBoundaryPosition = a.getCustomBoundaryPosition();\n      boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary();\n    });\n    return boundaryStateChanged;\n  },\n  _getValueAxis: function _getValueAxis(paneName, axisName) {\n    var valueAxes = this._valueAxes;\n    var valueAxisOptions = this.option(\"valueAxis\") || {};\n    var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\n\n    var rotated = this._isRotated();\n\n    var crosshairMargins = this._getCrosshairMargins();\n\n    var axisOptions;\n    var axis;\n    axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, this.defaultPane);\n    axis = findAxis(paneName, axisName, valueAxes);\n\n    if (!axis) {\n      axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\n\n      if (!axisOptions) {\n        this._incidentOccurred(\"W2102\", [axisName]);\n\n        axisOptions = {\n          name: axisName,\n          priority: valueAxes.length\n        };\n      }\n\n      axis = this._createAxis(false, this._populateAxesOptions(\"valueAxis\", axisOptions, {\n        pane: paneName,\n        name: axisName,\n        optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\n        crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n      }, rotated));\n      axis.applyVisualRangeSetter(this._getVisualRangeSetter());\n      valueAxes.push(axis);\n    }\n\n    axis.setPane(paneName);\n    return axis;\n  },\n  _correctValueAxes: function _correctValueAxes(needHideGrids) {\n    var that = this;\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var valueAxes = that._valueAxes;\n    var paneWithAxis = {};\n    that.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n      paneWithAxis[axis.pane] = true;\n    });\n    that.panes.forEach(function (pane) {\n      var paneName = pane.name;\n\n      if (!paneWithAxis[paneName]) {\n        that._getValueAxis(paneName);\n      }\n\n      if (needHideGrids && synchronizeMultiAxes) {\n        hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function (axis) {\n          return axis.pane === paneName;\n        }));\n      }\n    });\n    that._valueAxes = valueAxes.filter(function (axis) {\n      if (!axis.pane) {\n        axis.setPane(that.defaultPane);\n      }\n\n      return doesPaneExist(that.panes, axis.pane);\n    }).sort(compareAxes);\n    var defaultAxis = this.getValueAxis();\n\n    that._valueAxes.forEach(function (axis) {\n      var optionPath = axis.getOptions().optionPath;\n\n      if (optionPath) {\n        var axesWithSamePath = that._valueAxes.filter(function (a) {\n          return a.getOptions().optionPath === optionPath;\n        });\n\n        if (axesWithSamePath.length > 1) {\n          if (axesWithSamePath.some(function (a) {\n            return a === defaultAxis;\n          })) {\n            axesWithSamePath.forEach(function (a) {\n              if (a !== defaultAxis) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          } else {\n            axesWithSamePath.forEach(function (a, i) {\n              if (0 !== i) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          }\n        }\n      }\n    });\n  },\n  _getSeriesForPane: function _getSeriesForPane(paneName) {\n    var paneSeries = [];\n\n    _each(this.series, function (_, oneSeries) {\n      if (oneSeries.pane === paneName) {\n        paneSeries.push(oneSeries);\n      }\n    });\n\n    return paneSeries;\n  },\n  _createPanesBorderOptions: function _createPanesBorderOptions() {\n    var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\n\n    var panesBorderOptions = {};\n    this.panes.forEach(function (pane) {\n      return panesBorderOptions[pane.name] = _extend(true, {}, commonBorderOptions, pane.border);\n    });\n    return panesBorderOptions;\n  },\n  _createScrollBar: function _createScrollBar() {\n    var scrollBarOptions = this._themeManager.getOptions(\"scrollBar\") || {};\n    var scrollBarGroup = this._scrollBarGroup;\n\n    if (scrollBarOptions.visible) {\n      scrollBarOptions.rotated = this._isRotated();\n      this._scrollBar = (this._scrollBar || new ScrollBar(this._renderer, scrollBarGroup)).update(scrollBarOptions);\n    } else {\n      scrollBarGroup.linkRemove();\n      this._scrollBar && this._scrollBar.dispose();\n      this._scrollBar = null;\n    }\n  },\n  _prepareToRender: function _prepareToRender(drawOptions) {\n    var panesBorderOptions = this._createPanesBorderOptions();\n\n    this._createPanesBackground();\n\n    this._appendAxesGroups();\n\n    this._adjustViewport();\n\n    return panesBorderOptions;\n  },\n  _adjustViewport: function _adjustViewport() {\n    var argumentAxis = this.getArgumentAxis();\n\n    var adjustOnZoom = this._themeManager.getOptions(\"adjustOnZoom\");\n\n    var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\n\n    if (!adjustOnZoom) {\n      return;\n    }\n\n    this._valueAxes.forEach(function (axis) {\n      return axis.adjust(alignToBounds);\n    });\n  },\n  _recreateSizeDependentObjects: function _recreateSizeDependentObjects(isCanvasChanged) {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var useAggregation = series.some(function (s) {\n      return s.useAggregation();\n    });\n\n    var zoomChanged = that._isZooming();\n\n    if (!useAggregation) {\n      return;\n    }\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n    });\n\n    series.forEach(function (series) {\n      if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\n        series.createPoints();\n      }\n    });\n\n    that._processSeriesFamilies();\n  },\n  _isZooming: function _isZooming() {\n    var argumentAxis = this.getArgumentAxis();\n\n    if (!argumentAxis || !argumentAxis.getTranslator()) {\n      return false;\n    }\n\n    var businessRange = argumentAxis.getTranslator().getBusinessRange();\n    var zoomRange = argumentAxis.getViewport();\n    var min = zoomRange ? zoomRange.min : 0;\n    var max = zoomRange ? zoomRange.max : 0;\n\n    if (\"logarithmic\" === businessRange.axisType) {\n      min = getLog(min, businessRange.base);\n      max = getLog(max, businessRange.base);\n    }\n\n    var viewportDistance = businessRange.axisType === DISCRETE ? getCategoriesInfo(businessRange.categories, min, max).categories.length : Math.abs(max - min);\n    var precision = getPrecision(viewportDistance);\n    precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\n    var zoomChanged = Math.round((this._zoomLength - viewportDistance) * precision) / precision !== 0;\n    this._zoomLength = viewportDistance;\n    return zoomChanged;\n  },\n  _handleSeriesDataUpdated: function _handleSeriesDataUpdated() {\n    var that = this;\n    var viewport = new Range();\n    that.series.forEach(function (s) {\n      viewport.addRange(s.getArgumentRange());\n    });\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n      axis.setBusinessRange(viewport, that._axesReinitialized);\n    });\n\n    that.callBase();\n  },\n  _isLegendInside: function _isLegendInside() {\n    return this._legend && \"inside\" === this._legend.getPosition();\n  },\n  _isRotated: function _isRotated() {\n    return this._themeManager.getOptions(\"rotated\");\n  },\n  _getLayoutTargets: function _getLayoutTargets() {\n    return this.panes;\n  },\n  _applyClipRects: function _applyClipRects(panesBorderOptions) {\n    this._drawPanesBorders(panesBorderOptions);\n\n    this._createClipRectsForPanes();\n\n    this._applyClipRectsForAxes();\n\n    this._fillPanesBackground();\n  },\n  _updateLegendPosition: function _updateLegendPosition(drawOptions, legendHasInsidePosition) {\n    if (drawOptions.drawLegend && this._legend && legendHasInsidePosition) {\n      var panes = this.panes;\n\n      var newCanvas = _extend({}, panes[0].canvas);\n\n      var layoutManager = new LayoutManager();\n      newCanvas.right = panes[panes.length - 1].canvas.right;\n      newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\n      layoutManager.layoutInsideLegend(this._legend, newCanvas);\n    }\n  },\n  _allowLegendInsidePosition: function _allowLegendInsidePosition() {\n    return true;\n  },\n  _applyExtraSettings: function _applyExtraSettings(series) {\n    var paneIndex = this._getPaneIndex(series.pane);\n\n    var panesClipRects = this._panesClipRects;\n    var wideClipRect = panesClipRects.wide[paneIndex];\n    series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, this._getPaneBorderVisibility(paneIndex));\n  },\n  _updatePanesCanvases: function _updatePanesCanvases(drawOptions) {\n    if (!drawOptions.recreateCanvas) {\n      return;\n    }\n\n    updatePanesCanvases(this.panes, this._canvas, this._isRotated());\n  },\n  _normalizePanesHeight: function _normalizePanesHeight() {\n    normalizePanesHeight(this.panes);\n  },\n  _renderScaleBreaks: function _renderScaleBreaks() {\n    this._valueAxes.concat(this._argumentAxes).forEach(function (axis) {\n      axis.drawScaleBreaks();\n    });\n  },\n  _getArgFilter: function _getArgFilter() {\n    return rangeDataCalculator.getViewPortFilter(this.getArgumentAxis().visualRange() || {});\n  },\n  _applyPointMarkersAutoHiding: function _applyPointMarkersAutoHiding() {\n    var that = this;\n    var allSeries = that.series;\n\n    if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\n      allSeries.forEach(function (s) {\n        return s.autoHidePointMarkers = false;\n      });\n      return;\n    }\n\n    that.panes.forEach(function (_ref) {\n      var borderCoords = _ref.borderCoords,\n          name = _ref.name;\n      var series = allSeries.filter(function (s) {\n        return s.pane === name && s.usePointsToDefineAutoHiding();\n      });\n      var argAxis = that.getArgumentAxis();\n      var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\n      fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\n\n      if (markersInfo.series.length) {\n        var argVisualRange = argAxis.visualRange();\n        var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\n        var sortingCallback = argAxisIsDiscrete ? function (p1, p2) {\n          return argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument);\n        } : function (p1, p2) {\n          return p1.argument - p2.argument;\n        };\n        var points = [];\n        markersInfo.series.forEach(function (s) {\n          return points = points.concat(s.points);\n        });\n        points.sort(sortingCallback);\n        updateMarkersInfo(points, markersInfo.overloadedSeries);\n        applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis);\n      }\n    });\n  },\n  _renderAxes: function _renderAxes(drawOptions, panesBorderOptions) {\n    function calculateTitlesWidth(axes) {\n      return axes.map(function (axis) {\n        if (!axis.getTitle) {\n          return 0;\n        }\n\n        var title = axis.getTitle();\n        return title ? title.bBox.width : 0;\n      });\n    }\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var scrollBar = that._scrollBar ? [that._scrollBar] : [];\n    var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\n    var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\n    var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\n    var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n    var allElements = allAxes.concat(scrollBar);\n    var verticalAxesFirstDrawing = verticalAxes.some(function (v) {\n      return v.isFirstDrawing();\n    });\n\n    that._normalizePanesHeight();\n\n    that._updatePanesCanvases(drawOptions);\n\n    var panesCanvases = that.panes.reduce(function (canvases, pane) {\n      canvases[pane.name] = _extend({}, pane.canvas);\n      return canvases;\n    }, {});\n    var paneSizes = that.panes.reduce(function (sizes, pane) {\n      sizes[pane.name] = {\n        height: pane.height,\n        unit: pane.unit\n      };\n      return sizes;\n    }, {});\n\n    var cleanPanesCanvases = _extend(true, {}, panesCanvases);\n\n    that._initCustomPositioningAxes();\n\n    var needCustomAdjustAxes = that._axesBoundaryPositioning();\n\n    if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\n      drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      performActionOnAxes(allAxes, \"prepareAnimation\");\n\n      that._renderScaleBreaks();\n\n      horizontalAxes.forEach(function (a) {\n        return a.resolveOverlappingForCustomPositioning(verticalAxes);\n      });\n      verticalAxes.forEach(function (a) {\n        return a.resolveOverlappingForCustomPositioning(horizontalAxes);\n      });\n      return false;\n    }\n\n    if (needCustomAdjustAxes) {\n      allAxes.forEach(function (a) {\n        return a.customPositionIsAvailable() && a.shift({\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        });\n      });\n    }\n\n    if (that._scrollBar) {\n      that._scrollBar.setPane(that.panes);\n    }\n\n    var vAxesMargins = {\n      panes: {}\n    };\n    var hAxesMargins = getHorizontalAxesMargins(horizontalElements, function (axis) {\n      return axis.estimateMargins(panesCanvases[axis.pane]);\n    });\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n\n    var drawAxesAndSetCanvases = function drawAxesAndSetCanvases(isHorizontal) {\n      var axes = isHorizontal ? horizontalAxes : verticalAxes;\n      var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\n      drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\n\n      if (isHorizontal) {\n        hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins);\n      } else {\n        vAxesMargins = getVerticalAxesMargins(verticalElements);\n      }\n\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    };\n\n    drawAxesAndSetCanvases(false);\n    drawAxesAndSetCanvases(true);\n\n    if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\n      drawAxesAndSetCanvases(false);\n    }\n\n    var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n\n    var visibleSeries = that._getVisibleSeries();\n\n    var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\n\n    var axesIsAnimated = axisAnimationEnabled(drawOptions, pointsToAnimation);\n    performActionOnAxes(allElements, \"updateSize\", panesCanvases, axesIsAnimated);\n    horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\n    verticalElements.forEach(shiftAxis(\"left\", \"right\"));\n\n    that._renderScaleBreaks();\n\n    that.panes.forEach(function (pane) {\n      _extend(pane.canvas, panesCanvases[pane.name]);\n    });\n\n    that._valueAxes.forEach(function (axis) {\n      axis.setInitRange();\n    });\n\n    verticalAxes.forEach(function (axis, i) {\n      var _axis$hasWrap;\n\n      if (null !== (_axis$hasWrap = axis.hasWrap) && void 0 !== _axis$hasWrap && _axis$hasWrap.call(axis)) {\n        var title = axis.getTitle();\n        var newTitleWidth = title ? title.bBox.width : 0;\n        var offset = newTitleWidth - oldTitlesWidth[i];\n\n        if (\"right\" === axis.getOptions().position) {\n          vAxesMargins.right += offset;\n        } else {\n          vAxesMargins.left += offset;\n          that.panes.forEach(function (_ref2) {\n            var name = _ref2.name;\n            return vAxesMargins.panes[name].left += offset;\n          });\n        }\n\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\n        oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n      }\n    });\n\n    if (verticalAxes.some(function (v) {\n      return v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition;\n    })) {\n      axesIsAnimated && that._resetAxesAnimation(verticalAxesFirstDrawing, false);\n      performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, axesIsAnimated);\n    }\n\n    horizontalAxes.forEach(function (a) {\n      return a.resolveOverlappingForCustomPositioning(verticalAxes);\n    });\n    verticalAxes.forEach(function (a) {\n      return a.resolveOverlappingForCustomPositioning(horizontalAxes);\n    });\n    return cleanPanesCanvases;\n  },\n  _getExtraTemplatesItems: function _getExtraTemplatesItems() {\n    var allAxes = (this._argumentAxes || []).concat(this._valueAxes || []);\n\n    var elements = this._collectTemplatesFromItems(allAxes);\n\n    return {\n      items: elements.items,\n      groups: elements.groups,\n      launchRequest: function launchRequest() {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(true);\n        });\n      },\n      doneRequest: function doneRequest() {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(false);\n        });\n      }\n    };\n  },\n  _estimateTickIntervals: function _estimateTickIntervals(axes, canvases) {\n    return axes.some(function (axis) {\n      return axis.estimateTickInterval(canvases[axis.pane]);\n    });\n  },\n  checkForMoreSpaceForPanesCanvas: function checkForMoreSpaceForPanesCanvas() {\n    var rotated = this._isRotated();\n\n    var panesAreCustomSized = this.panes.filter(function (p) {\n      return p.unit;\n    }).length === this.panes.length;\n    var needSpace = false;\n\n    if (panesAreCustomSized) {\n      var needHorizontalSpace = 0;\n      var needVerticalSpace = 0;\n\n      if (rotated) {\n        var argAxisRightMargin = this.getArgumentAxis().getMargins().right;\n        var rightPanesIndent = Math.min.apply(Math, this.panes.map(function (p) {\n          return p.canvas.right;\n        }));\n        needHorizontalSpace = this._canvas.right + argAxisRightMargin - rightPanesIndent;\n      } else {\n        var argAxisBottomMargin = this.getArgumentAxis().getMargins().bottom;\n        var bottomPanesIndent = Math.min.apply(Math, this.panes.map(function (p) {\n          return p.canvas.bottom;\n        }));\n        needVerticalSpace = this._canvas.bottom + argAxisBottomMargin - bottomPanesIndent;\n      }\n\n      needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n        width: needHorizontalSpace,\n        height: needVerticalSpace\n      } : false;\n\n      if (0 !== needVerticalSpace) {\n        var realSize = this.getSize();\n        var customSize = this.option(\"size\");\n        var container = this._$element[0];\n        var containerHasStyledHeight = !!parseInt(container.style.height) || 0 !== this._containerInitialHeight;\n\n        if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\n          this._forceResize(realSize.width, realSize.height + needVerticalSpace);\n\n          needSpace = false;\n        }\n      }\n    } else {\n      needSpace = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), rotated, function (pane) {\n        return {\n          width: rotated && !!pane.unit,\n          height: !rotated && !!pane.unit\n        };\n      });\n    }\n\n    return needSpace;\n  },\n  _forceResize: function _forceResize(width, height) {\n    this._renderer.resize(width, height);\n\n    this._updateSize();\n\n    this._setContentSize();\n\n    this._preserveOriginalCanvas();\n\n    this._updateCanvasClipRect(this._canvas);\n  },\n  _shrinkAxes: function _shrinkAxes(sizeShortage, panesCanvases) {\n    if (!sizeShortage || !panesCanvases) {\n      return;\n    }\n\n    this._renderer.stopAllAnimations(true);\n\n    var rotated = this._isRotated();\n\n    var scrollBar = this._scrollBar ? [this._scrollBar] : [];\n    var extendedArgAxes = this._isArgumentAxisBeforeScrollBar() ? this._argumentAxes.concat(scrollBar) : scrollBar.concat(this._argumentAxes);\n    var verticalAxes = rotated ? extendedArgAxes : this._valueAxes;\n    var horizontalAxes = rotated ? this._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n\n    if (sizeShortage.width || sizeShortage.height) {\n      checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\n      checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      var paneSizes = this.panes.reduce(function (sizes, pane) {\n        sizes[pane.name] = {\n          height: pane.height,\n          unit: pane.unit\n        };\n        return sizes;\n      }, {});\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\n      verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\n      this.panes.forEach(function (pane) {\n        return _extend(pane.canvas, panesCanvases[pane.name]);\n      });\n    }\n  },\n  _isArgumentAxisBeforeScrollBar: function _isArgumentAxisBeforeScrollBar() {\n    var argumentAxis = this.getArgumentAxis();\n\n    if (this._scrollBar) {\n      var _argumentAxis$getOpti;\n\n      var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\n      var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\n\n      var scrollBarPosition = this._scrollBar.getOptions().position;\n\n      return argumentAxis.hasNonBoundaryPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition;\n    }\n\n    return false;\n  },\n  _getPanesParameters: function _getPanesParameters() {\n    var panes = this.panes;\n    var i;\n    var params = [];\n\n    for (i = 0; i < panes.length; i++) {\n      if (this._getPaneBorderVisibility(i)) {\n        params.push({\n          coords: panes[i].borderCoords,\n          clipRect: this._panesClipRects.fixed[i]\n        });\n      }\n    }\n\n    return params;\n  },\n  _createCrosshairCursor: function _createCrosshairCursor() {\n    var options = this._themeManager.getOptions(\"crosshair\") || {};\n    var argumentAxis = this.getArgumentAxis();\n    var axes = !this._isRotated() ? [[argumentAxis], this._valueAxes] : [this._valueAxes, [argumentAxis]];\n    var parameters = {\n      canvas: this._getCommonCanvas(),\n      panes: this._getPanesParameters(),\n      axes: axes\n    };\n\n    if (!options || !options.enabled) {\n      return;\n    }\n\n    if (!this._crosshair) {\n      this._crosshair = new Crosshair(this._renderer, options, parameters, this._crosshairCursorGroup);\n    } else {\n      this._crosshair.update(options, parameters);\n    }\n\n    this._crosshair.render();\n  },\n  _getCommonCanvas: function _getCommonCanvas() {\n    var i;\n    var canvas;\n    var commonCanvas;\n    var panes = this.panes;\n\n    for (i = 0; i < panes.length; i++) {\n      canvas = panes[i].canvas;\n\n      if (!commonCanvas) {\n        commonCanvas = _extend({}, canvas);\n      } else {\n        commonCanvas.right = canvas.right;\n        commonCanvas.bottom = canvas.bottom;\n      }\n    }\n\n    return commonCanvas;\n  },\n  _createPanesBackground: function _createPanesBackground() {\n    var defaultBackgroundColor = this._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\n\n    var backgroundColor;\n    var renderer = this._renderer;\n    var rect;\n    var i;\n    var rects = [];\n\n    this._panesBackgroundGroup.clear();\n\n    for (i = 0; i < this.panes.length; i++) {\n      backgroundColor = this.panes[i].backgroundColor || defaultBackgroundColor;\n\n      if (!backgroundColor || \"none\" === backgroundColor) {\n        rects.push(null);\n        continue;\n      }\n\n      rect = renderer.rect(0, 0, 0, 0).attr({\n        fill: backgroundColor,\n        \"stroke-width\": 0\n      }).append(this._panesBackgroundGroup);\n      rects.push(rect);\n    }\n\n    this.panesBackground = rects;\n  },\n  _fillPanesBackground: function _fillPanesBackground() {\n    var that = this;\n    var bc;\n\n    _each(that.panes, function (i, pane) {\n      bc = pane.borderCoords;\n\n      if (null !== that.panesBackground[i]) {\n        that.panesBackground[i].attr({\n          x: bc.left,\n          y: bc.top,\n          width: bc.width,\n          height: bc.height\n        });\n      }\n    });\n  },\n  _calcPaneBorderCoords: function _calcPaneBorderCoords(pane) {\n    var canvas = pane.canvas;\n    var bc = pane.borderCoords = pane.borderCoords || {};\n    bc.left = canvas.left;\n    bc.top = canvas.top;\n    bc.right = canvas.width - canvas.right;\n    bc.bottom = canvas.height - canvas.bottom;\n    bc.width = Math.max(bc.right - bc.left, 0);\n    bc.height = Math.max(bc.bottom - bc.top, 0);\n  },\n  _drawPanesBorders: function _drawPanesBorders(panesBorderOptions) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    that._panesBorderGroup.linkRemove().clear();\n\n    _each(that.panes, function (i, pane) {\n      var borderOptions = panesBorderOptions[pane.name];\n      var attr = {\n        fill: \"none\",\n        stroke: borderOptions.color,\n        \"stroke-opacity\": borderOptions.opacity,\n        \"stroke-width\": borderOptions.width,\n        dashStyle: borderOptions.dashStyle,\n        \"stroke-linecap\": \"square\"\n      };\n\n      that._calcPaneBorderCoords(pane, rotated);\n\n      if (!borderOptions.visible) {\n        return;\n      }\n\n      var bc = pane.borderCoords;\n      var segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\n\n      that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup);\n    });\n\n    that._panesBorderGroup.linkAppend();\n  },\n  _createClipRect: function _createClipRect(clipArray, index, left, top, width, height) {\n    var clipRect = clipArray[index];\n\n    if (!clipRect) {\n      clipRect = this._renderer.clipRect(left, top, width, height);\n      clipArray[index] = clipRect;\n    } else {\n      clipRect.attr({\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      });\n    }\n  },\n  _createClipRectsForPanes: function _createClipRectsForPanes() {\n    var that = this;\n    var canvas = that._canvas;\n\n    _each(that.panes, function (i, pane) {\n      var needWideClipRect = false;\n      var bc = pane.borderCoords;\n      var left = bc.left;\n      var top = bc.top;\n      var width = bc.width;\n      var height = bc.height;\n      var panesClipRects = that._panesClipRects;\n\n      that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\n\n      that._createClipRect(panesClipRects.base, i, left, top, width, height);\n\n      _each(that.series, function (_, series) {\n        if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\n          needWideClipRect = true;\n        }\n      });\n\n      if (needWideClipRect) {\n        if (that._isRotated()) {\n          top = 0;\n          height = canvas.height;\n        } else {\n          left = 0;\n          width = canvas.width;\n        }\n\n        that._createClipRect(panesClipRects.wide, i, left, top, width, height);\n      } else {\n        panesClipRects.wide[i] = null;\n      }\n    });\n  },\n  _applyClipRectsForAxes: function _applyClipRectsForAxes() {\n    var axes = this._getAllAxes();\n\n    var chartCanvasClipRectID = this._getCanvasClipRectID();\n\n    for (var i = 0; i < axes.length; i++) {\n      var elementsClipRectID = this._getElementsClipRectID(axes[i].pane);\n\n      axes[i].applyClipRects(elementsClipRectID, chartCanvasClipRectID);\n    }\n  },\n  _getPaneBorderVisibility: function _getPaneBorderVisibility(paneIndex) {\n    var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\n\n    var pane = this.panes[paneIndex] || {};\n    var paneBorder = pane.border || {};\n    return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible;\n  },\n  _getCanvasForPane: function _getCanvasForPane(paneName) {\n    var panes = this.panes;\n    var panesNumber = panes.length;\n    var i;\n\n    for (i = 0; i < panesNumber; i++) {\n      if (panes[i].name === paneName) {\n        return panes[i].canvas;\n      }\n    }\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    var themeManager = this._themeManager;\n    return _extend(this.callBase(), {\n      chart: this,\n      rotated: this._isRotated(),\n      crosshair: this._getCrosshairOptions().enabled ? this._crosshair : null,\n      stickyHovering: themeManager.getOptions(\"stickyHovering\")\n    });\n  },\n  _resolveLabelOverlappingStack: function _resolveLabelOverlappingStack() {\n    var that = this;\n\n    var isRotated = that._isRotated();\n\n    var shiftDirection = isRotated ? function (box, length) {\n      return {\n        x: box.x - length,\n        y: box.y\n      };\n    } : function (box, length) {\n      return {\n        x: box.x,\n        y: box.y - length\n      };\n    };\n\n    _each(that._getStackPoints(), function (_, stacks) {\n      _each(stacks, function (_, points) {\n        overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, function (a, b) {\n          var coordPosition = isRotated ? 1 : 0;\n          var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\n          var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\n\n          if (figureCenter1 - figureCenter12 === 0) {\n            return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1);\n          }\n\n          return 0;\n        });\n      });\n    });\n  },\n  _getStackPoints: function _getStackPoints() {\n    var stackPoints = {};\n\n    var visibleSeries = this._getVisibleSeries();\n\n    _each(visibleSeries, function (_, singleSeries) {\n      var points = singleSeries.getPoints();\n      var stackName = singleSeries.getStackName() || null;\n\n      _each(points, function (_, point) {\n        var argument = point.argument;\n\n        if (!stackPoints[argument]) {\n          stackPoints[argument] = {};\n        }\n\n        if (!stackPoints[argument][stackName]) {\n          stackPoints[argument][stackName] = [];\n        }\n\n        stackPoints[argument][stackName].push(point);\n      });\n    });\n\n    return stackPoints;\n  },\n  _getCrosshairOptions: function _getCrosshairOptions() {\n    return this._getOption(\"crosshair\");\n  },\n  zoomArgument: function zoomArgument(min, max) {\n    if (!this._initialized || !_isDefined(min) && !_isDefined(max)) {\n      return;\n    }\n\n    this.getArgumentAxis().visualRange([min, max]);\n  },\n  resetVisualRange: function resetVisualRange() {\n    var that = this;\n    var axes = that._argumentAxes;\n    var nonVirtualArgumentAxis = that.getArgumentAxis();\n    axes.forEach(function (axis) {\n      axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n    that.callBase();\n  },\n  getVisibleArgumentBounds: function getVisibleArgumentBounds() {\n    var translator = this._argumentAxes[0].getTranslator();\n\n    var range = translator.getBusinessRange();\n    var isDiscrete = range.axisType === DISCRETE;\n    var categories = range.categories;\n    return {\n      minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\n      maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\n    };\n  },\n  _change_FULL_RENDER: function _change_FULL_RENDER() {\n    this.callBase();\n\n    if (this._changes.has(VISUAL_RANGE)) {\n      this._raiseZoomEndHandlers();\n    }\n  },\n  _getAxesForScaling: function _getAxesForScaling() {\n    return [this.getArgumentAxis()].concat(this._valueAxes);\n  },\n  _applyVisualRangeByVirtualAxes: function _applyVisualRangeByVirtualAxes(axis, range) {\n    if (axis.isArgumentAxis) {\n      if (axis !== this.getArgumentAxis()) {\n        return true;\n      }\n\n      this._argumentAxes.filter(function (a) {\n        return a !== axis;\n      }).forEach(function (a) {\n        return a.visualRange(range, {\n          start: true,\n          end: true\n        });\n      });\n    }\n\n    return false;\n  },\n  _raiseZoomEndHandlers: function _raiseZoomEndHandlers() {\n    this._argumentAxes.forEach(function (axis) {\n      return axis.handleZoomEnd();\n    });\n\n    this.callBase();\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n\n    _extend(this._optionsByReference, {\n      \"argumentAxis.visualRange\": true\n    });\n  },\n  option: function option() {\n    var option = this.callBase.apply(this, arguments);\n\n    var valueAxis = this._options.silent(\"valueAxis\");\n\n    if (\"array\" === type(valueAxis)) {\n      for (var i = 0; i < valueAxis.length; i++) {\n        var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\n        this._optionsByReference[optionPath] = true;\n      }\n    }\n\n    return option;\n  },\n  _notifyVisualRange: function _notifyVisualRange() {\n    var argAxis = this._argumentAxes[0];\n    var argumentVisualRange = convertVisualRangeObject(argAxis.visualRange(), !_isArray(this.option(\"argumentAxis.visualRange\")));\n\n    if (!argAxis.skipEventRising || !rangesAreEqual(argumentVisualRange, this.option(\"argumentAxis.visualRange\"))) {\n      this.option(\"argumentAxis.visualRange\", argumentVisualRange);\n    } else {\n      argAxis.skipEventRising = null;\n    }\n\n    this.callBase();\n  }\n});\nimport shutterZoom from \"./chart_components/shutter_zoom\";\nimport zoomAndPan from \"./chart_components/zoom_and_pan\";\nimport { plugins } from \"./core/annotations\";\ndxChart.addPlugin(shutterZoom);\ndxChart.addPlugin(zoomAndPan);\ndxChart.addPlugin(plugins.core);\ndxChart.addPlugin(plugins.chart);\nregisterComponent(\"dxChart\", dxChart);\nexport default dxChart;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/chart.js"],"names":["noop","extend","_extend","inArray","hasWindow","each","_each","registerComponent","prepareSegmentRectPoints","map","_map","getLog","getCategoriesInfo","updatePanesCanvases","convertVisualRangeObject","PANE_PADDING","normalizePanesHeight","rangesAreEqual","isRelativeHeightPane","type","isDefined","_isDefined","getPrecision","overlapping","multiAxesSynchronizer","AdvancedChart","ScrollBar","Crosshair","rangeDataCalculator","LayoutManager","Range","DEFAULT_PANE_NAME","VISUAL_RANGE","DEFAULT_PANES","name","border","DISCRETE","_isArray","Array","isArray","getFirstAxisNameForPane","axes","paneName","defaultPane","result","i","length","pane","changeVisibilityAxisGrids","axis","gridVisibility","minorGridVisibility","gridOpt","getOptions","grid","minorGridOpt","minorGrid","visible","hideGridsOnNonFirstValueAxisForPane","axesForPane","axisShown","hiddenStubAxis","some","minorGridOptions","gridOptions","forEach","getTranslator","getBusinessRange","isEmpty","push","findAxisOptions","valueAxes","valueAxesOptions","axisName","axInd","priority","findAxis","compareAxes","a","b","doesPaneExist","panes","found","_","accumulate","field","src1","src2","auxSpacing","val1","val2","pickMax","pickMaxValue","Math","max","getAxisMargins","getMargins","getHorizontalAxesMargins","getMarginsFunc","reduce","margins","_axis$getOrthogonalAx","axisMargins","paneMargins","spacing","getMultipleAxesSpacing","top","bottom","left","right","orthogonalAxis","getOrthogonalAxis","call","customPositionIsAvailable","customPositionIsBoundaryOrthogonalAxis","customPositionEqualsToPredefined","getResolvedBoundaryPosition","getVerticalAxesMargins","performActionOnAxes","action","actionArgument1","actionArgument2","actionArgument3","shrinkCanvases","isRotated","canvases","sizes","verticalMargins","horizontalMargins","getMargin","side","m","indexOf","getMaxMargin","margins1","margins2","getOriginalField","concat","toUpperCase","slice","shrink","paneNames","sizeField","startMargin","endMargin","oppositeMargins","sort","p1","p2","canvas","margin","firstPane","emptySpace","space","Object","keys","prev","key","height","offset","paneSize","floor","drawAxesWithTicks","condition","panesBorderOptions","synchronize","shiftAxis","side1","side2","shifts","shift","getCommonSize","size","checkUsedSpace","sizeShortage","getMarginFunc","axisAnimationEnabled","drawOptions","pointsToAnimation","pointsCount","sum","count","animate","animationPointsLimit","collectMarkersInfoBySeries","allSeries","filteredSeries","argAxis","series","overloadedSeries","argVisualRange","visualRange","argTranslator","argViewPortFilter","getViewPortFilter","s","valAxis","getValueAxis","valVisualRange","getCanvasRange","valTranslator","seriesIndex","valViewPortFilter","sr","seriesPoints","getPoints","filter","p","argument","getMinValue","getMaxValue","tp","value","bubbleSize","mp","x","to","y","total","continuousSeries","index","points","applyAutoHidePointMarkers","argAxisType","autoHidePointMarkers","tickCount","getTicksValues","majorTicksValues","autoHidePointMarkersEnabled","parseInt","isNaN","fastHidingPointMarkersByArea","markersInfo","area","width","_loop","currentSeries","pointSize","pointsArea","splice","updateMarkersInfo","isContinuousSeries","curPoint","j","nextPoint","next_x","next_y","abs","distance","sqrt","pow","dxChart","inherit","_themeSection","_fontFields","_initCore","paneAxis","callBase","_init","_containerInitialHeight","_$element","_correctAxes","_correctValueAxes","_getExtraOptions","_createPanes","option","panesNameCounter","_incidentOccurred","_isRotated","reverse","_getAxisRenderingOptions","axisType","drawingType","_prepareAxisOptions","typeSelector","userOptions","rotated","isHorizontal","containerColor","_themeManager","_checkPaneName","seriesTheme","paneList","_initCustomPositioningAxes","that","argumentAxis","getArgumentAxis","valueAxisName","customPositionAxis","valueAxis","_valueAxes","v","customPositionIsBoundary","_getAllAxes","_argumentAxes","_resetAxesAnimation","isFirstDrawing","resetApplyingAnimation","_cleanGroups","beforeCleanGroups","afterCleanGroups","_axesBoundaryPositioning","allAxes","boundaryStateChanged","prevBoundaryState","_customBoundaryPosition","getCustomBoundaryPosition","_getValueAxis","valueAxisOptions","crosshairMargins","_getCrosshairMargins","axisOptions","_createAxis","_populateAxesOptions","optionPath","crosshairMargin","applyVisualRangeSetter","_getVisualRangeSetter","setPane","needHideGrids","synchronizeMultiAxes","paneWithAxis","defaultAxis","axesWithSamePath","_getSeriesForPane","paneSeries","oneSeries","_createPanesBorderOptions","commonBorderOptions","_createScrollBar","scrollBarOptions","scrollBarGroup","_scrollBarGroup","_scrollBar","_renderer","update","linkRemove","dispose","_prepareToRender","_createPanesBackground","_appendAxesGroups","_adjustViewport","adjustOnZoom","alignToBounds","dataVisualRangeIsReduced","adjust","_recreateSizeDependentObjects","isCanvasChanged","_getVisibleSeries","useAggregation","zoomChanged","_isZooming","updateCanvas","_canvas","_useAllAggregatedPoints","createPoints","_processSeriesFamilies","businessRange","zoomRange","getViewport","min","base","viewportDistance","categories","precision","round","_zoomLength","_handleSeriesDataUpdated","viewport","addRange","getArgumentRange","setBusinessRange","_axesReinitialized","_isLegendInside","_legend","getPosition","_getLayoutTargets","_applyClipRects","_drawPanesBorders","_createClipRectsForPanes","_applyClipRectsForAxes","_fillPanesBackground","_updateLegendPosition","legendHasInsidePosition","drawLegend","newCanvas","layoutManager","layoutInsideLegend","_allowLegendInsidePosition","_applyExtraSettings","paneIndex","_getPaneIndex","panesClipRects","_panesClipRects","wideClipRect","wide","setClippingParams","id","_getPaneBorderVisibility","_updatePanesCanvases","recreateCanvas","_normalizePanesHeight","_renderScaleBreaks","drawScaleBreaks","_getArgFilter","_applyPointMarkersAutoHiding","_ref","borderCoords","usePointsToDefineAutoHiding","argAxisIsDiscrete","sortingCallback","_renderAxes","calculateTitlesWidth","getTitle","title","bBox","scrollBar","extendedArgAxes","_isArgumentAxisBeforeScrollBar","verticalAxes","verticalElements","horizontalAxes","horizontalElements","allElements","verticalAxesFirstDrawing","panesCanvases","paneSizes","unit","cleanPanesCanvases","needCustomAdjustAxes","adjustAxes","resolveOverlappingForCustomPositioning","vAxesMargins","hAxesMargins","estimateMargins","drawAxesAndSetCanvases","_changesApplying","_estimateTickIntervals","oldTitlesWidth","visibleSeries","_getPointsToAnimation","axesIsAnimated","setInitRange","_axis$hasWrap","hasWrap","newTitleWidth","position","_ref2","getCustomPosition","_axisPosition","_getExtraTemplatesItems","elements","_collectTemplatesFromItems","items","groups","launchRequest","setRenderedState","doneRequest","estimateTickInterval","checkForMoreSpaceForPanesCanvas","panesAreCustomSized","needSpace","needHorizontalSpace","needVerticalSpace","argAxisRightMargin","rightPanesIndent","apply","argAxisBottomMargin","bottomPanesIndent","realSize","getSize","customSize","container","containerHasStyledHeight","style","_forceResize","needMoreSpaceForPanesCanvas","resize","_updateSize","_setContentSize","_preserveOriginalCanvas","_updateCanvasClipRect","_shrinkAxes","stopAllAnimations","_argumentAxis$getOpti","argAxisPosition","argAxisLabelPosition","label","scrollBarPosition","hasNonBoundaryPosition","_getPanesParameters","params","coords","clipRect","fixed","_createCrosshairCursor","options","parameters","_getCommonCanvas","enabled","_crosshair","_crosshairCursorGroup","render","commonCanvas","defaultBackgroundColor","backgroundColor","renderer","rect","rects","_panesBackgroundGroup","clear","attr","fill","append","panesBackground","bc","_calcPaneBorderCoords","_panesBorderGroup","borderOptions","stroke","color","opacity","dashStyle","segmentRectParams","path","pathType","linkAppend","_createClipRect","clipArray","needWideClipRect","isFinancialSeries","areErrorBarsVisible","chartCanvasClipRectID","_getCanvasClipRectID","elementsClipRectID","_getElementsClipRectID","applyClipRects","commonPaneBorderVisible","paneBorder","_getCanvasForPane","panesNumber","_getTrackerSettings","themeManager","chart","crosshair","_getCrosshairOptions","stickyHovering","_resolveLabelOverlappingStack","shiftDirection","box","_getStackPoints","stacks","resolveLabelOverlappingInOneDirection","coordPosition","figureCenter1","labels","getFigureCenter","figureCenter12","getPoint","isInverted","stackPoints","singleSeries","stackName","getStackName","point","_getOption","zoomArgument","_initialized","resetVisualRange","nonVirtualArgumentAxis","_applyCustomVisualRangeOption","getVisibleArgumentBounds","translator","range","isDiscrete","minVisible","maxVisible","_change_FULL_RENDER","_changes","has","_raiseZoomEndHandlers","_getAxesForScaling","_applyVisualRangeByVirtualAxes","isArgumentAxis","start","end","handleZoomEnd","_setOptionsByReference","_optionsByReference","arguments","_options","silent","_notifyVisualRange","argumentVisualRange","skipEventRising","shutterZoom","zoomAndPan","plugins","addPlugin","core"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend as _extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    inArray\r\n} from \"../core/utils/array\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    each as _each\r\n} from \"../core/utils/iterator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    prepareSegmentRectPoints\r\n} from \"./utils\";\r\nimport {\r\n    map as _map,\r\n    getLog,\r\n    getCategoriesInfo,\r\n    updatePanesCanvases,\r\n    convertVisualRangeObject,\r\n    PANE_PADDING,\r\n    normalizePanesHeight,\r\n    rangesAreEqual,\r\n    isRelativeHeightPane\r\n} from \"./core/utils\";\r\nimport {\r\n    type,\r\n    isDefined as _isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    getPrecision\r\n} from \"../core/utils/math\";\r\nimport {\r\n    overlapping\r\n} from \"./chart_components/base_chart\";\r\nimport multiAxesSynchronizer from \"./chart_components/multi_axes_synchronizer\";\r\nimport {\r\n    AdvancedChart\r\n} from \"./chart_components/advanced_chart\";\r\nimport {\r\n    ScrollBar\r\n} from \"./chart_components/scroll_bar\";\r\nimport {\r\n    Crosshair\r\n} from \"./chart_components/crosshair\";\r\nimport rangeDataCalculator from \"./series/helpers/range_data_calculator\";\r\nimport {\r\n    LayoutManager\r\n} from \"./chart_components/layout_manager\";\r\nimport {\r\n    Range\r\n} from \"./translators/range\";\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\nvar DEFAULT_PANES = [{\r\n    name: DEFAULT_PANE_NAME,\r\n    border: {}\r\n}];\r\nvar DISCRETE = \"discrete\";\r\nvar _isArray = Array.isArray;\r\n\r\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\r\n    var result;\r\n    for (var i = 0; i < axes.length; i++) {\r\n        if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\r\n            result = axes[i].name;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = axes[0].name\r\n    }\r\n    return result\r\n}\r\n\r\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\r\n    var gridOpt = axis.getOptions().grid;\r\n    var minorGridOpt = axis.getOptions().minorGrid;\r\n    gridOpt.visible = gridVisibility;\r\n    minorGridOpt && (minorGridOpt.visible = minorGridVisibility)\r\n}\r\n\r\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\r\n    var axisShown = false;\r\n    var hiddenStubAxis = [];\r\n    var minorGridVisibility = axesForPane.some((function(axis) {\r\n        var minorGridOptions = axis.getOptions().minorGrid;\r\n        return minorGridOptions && minorGridOptions.visible\r\n    }));\r\n    var gridVisibility = axesForPane.some((function(axis) {\r\n        var gridOptions = axis.getOptions().grid;\r\n        return gridOptions && gridOptions.visible\r\n    }));\r\n    if (axesForPane.length > 1) {\r\n        axesForPane.forEach((function(axis) {\r\n            var gridOpt = axis.getOptions().grid;\r\n            if (axisShown) {\r\n                changeVisibilityAxisGrids(axis, false, false)\r\n            } else if (gridOpt && gridOpt.visible) {\r\n                if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                    changeVisibilityAxisGrids(axis, false, false);\r\n                    hiddenStubAxis.push(axis)\r\n                } else {\r\n                    axisShown = true;\r\n                    changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility)\r\n                }\r\n            }\r\n        }));\r\n        !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility)\r\n    }\r\n}\r\n\r\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\r\n    var result;\r\n    var axInd;\r\n    for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\r\n        if (valueAxesOptions[axInd].name === axisName) {\r\n            result = valueAxesOptions[axInd];\r\n            result.priority = axInd;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (axInd = 0; axInd < valueAxes.length; axInd++) {\r\n            if (valueAxes[axInd].name === axisName) {\r\n                result = valueAxes[axInd].getOptions();\r\n                result.priority = valueAxes[axInd].priority;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction findAxis(paneName, axisName, axes) {\r\n    var axis;\r\n    var i;\r\n    for (i = 0; i < axes.length; i++) {\r\n        axis = axes[i];\r\n        if (axis.name === axisName && axis.pane === paneName) {\r\n            return axis\r\n        }\r\n    }\r\n    if (paneName) {\r\n        return findAxis(void 0, axisName, axes)\r\n    }\r\n}\r\n\r\nfunction compareAxes(a, b) {\r\n    return a.priority - b.priority\r\n}\r\n\r\nfunction doesPaneExist(panes, paneName) {\r\n    var found = false;\r\n    _each(panes, (function(_, pane) {\r\n        if (pane.name === paneName) {\r\n            found = true;\r\n            return false\r\n        }\r\n    }));\r\n    return found\r\n}\r\n\r\nfunction accumulate(field, src1, src2, auxSpacing) {\r\n    var val1 = src1[field] || 0;\r\n    var val2 = src2[field] || 0;\r\n    return val1 + val2 + (val1 && val2 ? auxSpacing : 0)\r\n}\r\n\r\nfunction pickMax(field, src1, src2) {\r\n    return pickMaxValue(src1[field], src2[field])\r\n}\r\n\r\nfunction pickMaxValue(val1, val2) {\r\n    return Math.max(val1 || 0, val2 || 0)\r\n}\r\n\r\nfunction getAxisMargins(axis) {\r\n    return axis.getMargins()\r\n}\r\n\r\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var _axis$getOrthogonalAx;\r\n        var axisMargins = getMarginsFunc(axis);\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\r\n        paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\r\n        paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\r\n        paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        var orthogonalAxis = null === (_axis$getOrthogonalAx = axis.getOrthogonalAxis) || void 0 === _axis$getOrthogonalAx ? void 0 : _axis$getOrthogonalAx.call(axis);\r\n        if (orthogonalAxis && orthogonalAxis.customPositionIsAvailable() && (!axis.customPositionIsBoundaryOrthogonalAxis() || !orthogonalAxis.customPositionEqualsToPredefined())) {\r\n            margins[orthogonalAxis.getResolvedBoundaryPosition()] = 0\r\n        }\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction getVerticalAxesMargins(axes) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var axisMargins = axis.getMargins();\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\r\n        paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\r\n        paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\r\n        paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\r\n    axes.forEach((function(axis) {\r\n        axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3)\r\n    }))\r\n}\r\n\r\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\r\n    function getMargin(side, margins, pane) {\r\n        var m = -1 === (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) ? margins : margins.panes[pane] || {};\r\n        return m[side]\r\n    }\r\n\r\n    function getMaxMargin(side, margins1, margins2, pane) {\r\n        return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane))\r\n    }\r\n    var getOriginalField = field => \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\r\n\r\n    function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\r\n        paneNames = paneNames.sort((p1, p2) => canvases[p2][startMargin] - canvases[p1][startMargin]);\r\n        paneNames.forEach(pane => {\r\n            var canvas = canvases[pane];\r\n            oppositeMargins.forEach(margin => {\r\n                canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane)\r\n            })\r\n        });\r\n        var firstPane = canvases[paneNames[0]];\r\n        var emptySpace = paneNames.reduce((space, paneName) => {\r\n            space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\r\n            return space\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - PANE_PADDING * (paneNames.length - 1);\r\n        emptySpace -= Object.keys(sizes).reduce((prev, key) => prev + (!isRelativeHeightPane(sizes[key]) ? sizes[key].height : 0), 0);\r\n        paneNames.reduce((offset, pane) => {\r\n            var canvas = canvases[pane];\r\n            var paneSize = sizes[pane];\r\n            offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\r\n            canvas[endMargin] = firstPane[sizeField] - offset;\r\n            offset -= !isRelativeHeightPane(paneSize) ? paneSize.height : Math.floor(emptySpace * paneSize.height);\r\n            canvas[startMargin] = offset;\r\n            offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + PANE_PADDING;\r\n            return offset\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0))\r\n    }\r\n    var paneNames = Object.keys(canvases);\r\n    if (!isRotated) {\r\n        shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"])\r\n    } else {\r\n        shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"])\r\n    }\r\n    return canvases\r\n}\r\n\r\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\r\n    if (condition) {\r\n        performActionOnAxes(axes, \"createTicks\", canvases);\r\n        multiAxesSynchronizer.synchronize(axes)\r\n    }\r\n    performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions)\r\n}\r\n\r\nfunction shiftAxis(side1, side2) {\r\n    var shifts = {};\r\n    return function(axis) {\r\n        if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\r\n            var shift = shifts[axis.pane] = shifts[axis.pane] || {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            };\r\n            var spacing = axis.getMultipleAxesSpacing();\r\n            var margins = axis.getMargins();\r\n            axis.shift(shift);\r\n            shift[side1] = accumulate(side1, shift, margins, spacing);\r\n            shift[side2] = accumulate(side2, shift, margins, spacing)\r\n        } else {\r\n            axis.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCommonSize(side, margins) {\r\n    var size = 0;\r\n    var pane;\r\n    var paneMargins;\r\n    for (pane in margins.panes) {\r\n        paneMargins = margins.panes[pane];\r\n        size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right\r\n    }\r\n    return size\r\n}\r\n\r\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\r\n    var size = 0;\r\n    if (sizeShortage[side] > 0) {\r\n        size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\r\n        performActionOnAxes(axes, \"hideTitle\");\r\n        sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins))\r\n    }\r\n    if (sizeShortage[side] > 0) {\r\n        performActionOnAxes(axes, \"hideOuterElements\")\r\n    }\r\n}\r\n\r\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\r\n    var pointsCount = pointsToAnimation.reduce((sum, count) => sum + count, 0) / pointsToAnimation.length;\r\n    return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit\r\n}\r\n\r\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\r\n    var series = [];\r\n    var overloadedSeries = {};\r\n    var argVisualRange = argAxis.visualRange();\r\n    var argTranslator = argAxis.getTranslator();\r\n    var argViewPortFilter = rangeDataCalculator.getViewPortFilter(argVisualRange || {});\r\n    filteredSeries.forEach(s => {\r\n        var valAxis = s.getValueAxis();\r\n        var valVisualRange = valAxis.getCanvasRange();\r\n        var valTranslator = valAxis.getTranslator();\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        var valViewPortFilter = rangeDataCalculator.getViewPortFilter(valVisualRange || {});\r\n        overloadedSeries[seriesIndex] = {};\r\n        filteredSeries.forEach(sr => overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0);\r\n        var seriesPoints = [];\r\n        s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).forEach(p => {\r\n            var tp = {\r\n                seriesIndex: seriesIndex,\r\n                argument: p.argument,\r\n                value: p.getMaxValue(true),\r\n                size: p.bubbleSize || p.getOptions().size\r\n            };\r\n            if (p.getMinValue(true) !== p.getMaxValue(true)) {\r\n                var mp = _extend({}, tp);\r\n                mp.value = p.getMinValue(true);\r\n                mp.x = argTranslator.to(mp.argument, 1);\r\n                mp.y = valTranslator.to(mp.value, 1);\r\n                seriesPoints.push(mp)\r\n            }\r\n            tp.x = argTranslator.to(tp.argument, 1);\r\n            tp.y = valTranslator.to(tp.value, 1);\r\n            seriesPoints.push(tp)\r\n        });\r\n        overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\r\n        overloadedSeries[seriesIndex].total = 0;\r\n        overloadedSeries[seriesIndex].continuousSeries = 0;\r\n        series.push({\r\n            name: s.name,\r\n            index: seriesIndex,\r\n            points: seriesPoints\r\n        })\r\n    });\r\n    return {\r\n        series: series,\r\n        overloadedSeries: overloadedSeries\r\n    }\r\n}\r\n\r\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\r\n    var argAxisType = argAxis.getOptions().type;\r\n    filteredSeries.forEach(s => {\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        s.autoHidePointMarkers = false;\r\n        var tickCount = argAxis.getTicksValues().majorTicksValues.length;\r\n        if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\r\n            for (var index in overloadedSeries[seriesIndex]) {\r\n                var i = parseInt(index);\r\n                if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\r\n                    continue\r\n                }\r\n                if (i === seriesIndex) {\r\n                    if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\r\n                        s.autoHidePointMarkers = true;\r\n                        break\r\n                    }\r\n                } else if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\r\n                    s.autoHidePointMarkers = true;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\r\n    var area = canvas.width * canvas.height;\r\n    var seriesPoints = markersInfo.series;\r\n    var _loop = function(i) {\r\n        var currentSeries = series.filter(s => s.name === seriesPoints[i].name)[0];\r\n        var points = seriesPoints[i].points;\r\n        var pointSize = points.length ? points[0].size : 0;\r\n        var pointsArea = pointSize * pointSize * points.length;\r\n        if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\r\n            var index = seriesPoints[i].index;\r\n            currentSeries.autoHidePointMarkers = true;\r\n            seriesPoints.splice(i, 1);\r\n            series.splice(series.indexOf(currentSeries), 1);\r\n            delete markersInfo.overloadedSeries[index]\r\n        }\r\n    };\r\n    for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n        _loop(i)\r\n    }\r\n}\r\n\r\nfunction updateMarkersInfo(points, overloadedSeries) {\r\n    var isContinuousSeries = false;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var curPoint = points[i];\r\n        var size = curPoint.size;\r\n        if (_isDefined(curPoint.x) && _isDefined(curPoint.y)) {\r\n            for (var j = i + 1; j < points.length; j++) {\r\n                var nextPoint = points[j];\r\n                var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\r\n                var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\r\n                if (!_isDefined(next_x) || Math.abs(curPoint.x - next_x) >= size) {\r\n                    isContinuousSeries &= j !== i + 1;\r\n                    break\r\n                } else {\r\n                    var distance = _isDefined(next_x) && _isDefined(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\r\n                    if (distance && distance < size) {\r\n                        overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\r\n                        overloadedSeries[curPoint.seriesIndex].total++;\r\n                        if (!isContinuousSeries) {\r\n                            overloadedSeries[curPoint.seriesIndex].continuousSeries++;\r\n                            isContinuousSeries = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nvar dxChart = AdvancedChart.inherit({\r\n    _themeSection: \"chart\",\r\n    _fontFields: [\"crosshair.label.font\"],\r\n    _initCore: function() {\r\n        this.paneAxis = {};\r\n        this.callBase()\r\n    },\r\n    _init() {\r\n        this._containerInitialHeight = hasWindow() ? this._$element.height() : 0;\r\n        this.callBase()\r\n    },\r\n    _correctAxes: function() {\r\n        this._correctValueAxes(true)\r\n    },\r\n    _getExtraOptions: noop,\r\n    _createPanes: function() {\r\n        var panes = this.option(\"panes\");\r\n        var panesNameCounter = 0;\r\n        var defaultPane;\r\n        if (!panes || _isArray(panes) && !panes.length) {\r\n            panes = DEFAULT_PANES\r\n        }\r\n        this.callBase();\r\n        defaultPane = this.option(\"defaultPane\");\r\n        panes = _extend(true, [], _isArray(panes) ? panes : [panes]);\r\n        _each(panes, (function(_, pane) {\r\n            pane.name = !_isDefined(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name\r\n        }));\r\n        if (_isDefined(defaultPane)) {\r\n            if (!doesPaneExist(panes, defaultPane)) {\r\n                this._incidentOccurred(\"W2101\", [defaultPane]);\r\n                defaultPane = panes[panes.length - 1].name\r\n            }\r\n        } else {\r\n            defaultPane = panes[panes.length - 1].name\r\n        }\r\n        this.defaultPane = defaultPane;\r\n        panes = this._isRotated() ? panes.reverse() : panes;\r\n        return panes\r\n    },\r\n    _getAxisRenderingOptions: function() {\r\n        return {\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, userOptions, rotated) {\r\n        return {\r\n            isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\r\n            containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\r\n        }\r\n    },\r\n    _checkPaneName: function(seriesTheme) {\r\n        var paneList = _map(this.panes, (function(pane) {\r\n            return pane.name\r\n        }));\r\n        seriesTheme.pane = seriesTheme.pane || this.defaultPane;\r\n        return -1 !== inArray(seriesTheme.pane, paneList)\r\n    },\r\n    _initCustomPositioningAxes() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var valueAxisName = argumentAxis.getOptions().customPositionAxis;\r\n        var valueAxis = that._valueAxes.filter(v => v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name))[0];\r\n        that._valueAxes.forEach(v => {\r\n            if (argumentAxis !== v.getOrthogonalAxis()) {\r\n                v.getOrthogonalAxis = () => argumentAxis;\r\n                v.customPositionIsBoundaryOrthogonalAxis = () => argumentAxis.customPositionIsBoundary()\r\n            }\r\n        });\r\n        if (_isDefined(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\r\n            argumentAxis.getOrthogonalAxis = () => valueAxis;\r\n            argumentAxis.customPositionIsBoundaryOrthogonalAxis = () => that._valueAxes.some(v => v.customPositionIsBoundary())\r\n        } else if (_isDefined(argumentAxis.getOrthogonalAxis()) && !_isDefined(valueAxis)) {\r\n            argumentAxis.getOrthogonalAxis = noop\r\n        }\r\n    },\r\n    _getAllAxes() {\r\n        return this._argumentAxes.concat(this._valueAxes)\r\n    },\r\n    _resetAxesAnimation(isFirstDrawing, isHorizontal) {\r\n        var axes = _isDefined(isHorizontal) ? isHorizontal ^ this._isRotated() ? this._argumentAxes : this._valueAxes : this._getAllAxes();\r\n        axes.forEach(a => {\r\n            a.resetApplyingAnimation(isFirstDrawing)\r\n        })\r\n    },\r\n    _cleanGroups() {\r\n        this._getAllAxes().forEach(a => a.beforeCleanGroups());\r\n        this.callBase();\r\n        this._getAllAxes().forEach(a => a.afterCleanGroups())\r\n    },\r\n    _axesBoundaryPositioning() {\r\n        var allAxes = this._getAllAxes();\r\n        var boundaryStateChanged = false;\r\n        allAxes.forEach(a => {\r\n            if (!a.customPositionIsAvailable()) {\r\n                return false\r\n            }\r\n            var prevBoundaryState = a.customPositionIsBoundary();\r\n            a._customBoundaryPosition = a.getCustomBoundaryPosition();\r\n            boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary()\r\n        });\r\n        return boundaryStateChanged\r\n    },\r\n    _getValueAxis: function(paneName, axisName) {\r\n        var valueAxes = this._valueAxes;\r\n        var valueAxisOptions = this.option(\"valueAxis\") || {};\r\n        var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\r\n        var rotated = this._isRotated();\r\n        var crosshairMargins = this._getCrosshairMargins();\r\n        var axisOptions;\r\n        var axis;\r\n        axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, this.defaultPane);\r\n        axis = findAxis(paneName, axisName, valueAxes);\r\n        if (!axis) {\r\n            axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\r\n            if (!axisOptions) {\r\n                this._incidentOccurred(\"W2102\", [axisName]);\r\n                axisOptions = {\r\n                    name: axisName,\r\n                    priority: valueAxes.length\r\n                }\r\n            }\r\n            axis = this._createAxis(false, this._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                pane: paneName,\r\n                name: axisName,\r\n                optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n            }, rotated));\r\n            axis.applyVisualRangeSetter(this._getVisualRangeSetter());\r\n            valueAxes.push(axis)\r\n        }\r\n        axis.setPane(paneName);\r\n        return axis\r\n    },\r\n    _correctValueAxes: function(needHideGrids) {\r\n        var that = this;\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var valueAxes = that._valueAxes;\r\n        var paneWithAxis = {};\r\n        that.series.forEach((function(series) {\r\n            var axis = series.getValueAxis();\r\n            paneWithAxis[axis.pane] = true\r\n        }));\r\n        that.panes.forEach((function(pane) {\r\n            var paneName = pane.name;\r\n            if (!paneWithAxis[paneName]) {\r\n                that._getValueAxis(paneName)\r\n            }\r\n            if (needHideGrids && synchronizeMultiAxes) {\r\n                hideGridsOnNonFirstValueAxisForPane(valueAxes.filter((function(axis) {\r\n                    return axis.pane === paneName\r\n                })))\r\n            }\r\n        }));\r\n        that._valueAxes = valueAxes.filter((function(axis) {\r\n            if (!axis.pane) {\r\n                axis.setPane(that.defaultPane)\r\n            }\r\n            return doesPaneExist(that.panes, axis.pane)\r\n        })).sort(compareAxes);\r\n        var defaultAxis = this.getValueAxis();\r\n        that._valueAxes.forEach(axis => {\r\n            var optionPath = axis.getOptions().optionPath;\r\n            if (optionPath) {\r\n                var axesWithSamePath = that._valueAxes.filter(a => a.getOptions().optionPath === optionPath);\r\n                if (axesWithSamePath.length > 1) {\r\n                    if (axesWithSamePath.some(a => a === defaultAxis)) {\r\n                        axesWithSamePath.forEach(a => {\r\n                            if (a !== defaultAxis) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    } else {\r\n                        axesWithSamePath.forEach((a, i) => {\r\n                            if (0 !== i) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSeriesForPane: function(paneName) {\r\n        var paneSeries = [];\r\n        _each(this.series, (function(_, oneSeries) {\r\n            if (oneSeries.pane === paneName) {\r\n                paneSeries.push(oneSeries)\r\n            }\r\n        }));\r\n        return paneSeries\r\n    },\r\n    _createPanesBorderOptions: function() {\r\n        var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\r\n        var panesBorderOptions = {};\r\n        this.panes.forEach(pane => panesBorderOptions[pane.name] = _extend(true, {}, commonBorderOptions, pane.border));\r\n        return panesBorderOptions\r\n    },\r\n    _createScrollBar: function() {\r\n        var scrollBarOptions = this._themeManager.getOptions(\"scrollBar\") || {};\r\n        var scrollBarGroup = this._scrollBarGroup;\r\n        if (scrollBarOptions.visible) {\r\n            scrollBarOptions.rotated = this._isRotated();\r\n            this._scrollBar = (this._scrollBar || new ScrollBar(this._renderer, scrollBarGroup)).update(scrollBarOptions)\r\n        } else {\r\n            scrollBarGroup.linkRemove();\r\n            this._scrollBar && this._scrollBar.dispose();\r\n            this._scrollBar = null\r\n        }\r\n    },\r\n    _prepareToRender(drawOptions) {\r\n        var panesBorderOptions = this._createPanesBorderOptions();\r\n        this._createPanesBackground();\r\n        this._appendAxesGroups();\r\n        this._adjustViewport();\r\n        return panesBorderOptions\r\n    },\r\n    _adjustViewport() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        var adjustOnZoom = this._themeManager.getOptions(\"adjustOnZoom\");\r\n        var alignToBounds = !argumentAxis.dataVisualRangeIsReduced();\r\n        if (!adjustOnZoom) {\r\n            return\r\n        }\r\n        this._valueAxes.forEach(axis => axis.adjust(alignToBounds))\r\n    },\r\n    _recreateSizeDependentObjects(isCanvasChanged) {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var useAggregation = series.some(s => s.useAggregation());\r\n        var zoomChanged = that._isZooming();\r\n        if (!useAggregation) {\r\n            return\r\n        }\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true)\r\n        }));\r\n        series.forEach((function(series) {\r\n            if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\r\n                series.createPoints()\r\n            }\r\n        }));\r\n        that._processSeriesFamilies()\r\n    },\r\n    _isZooming() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (!argumentAxis || !argumentAxis.getTranslator()) {\r\n            return false\r\n        }\r\n        var businessRange = argumentAxis.getTranslator().getBusinessRange();\r\n        var zoomRange = argumentAxis.getViewport();\r\n        var min = zoomRange ? zoomRange.min : 0;\r\n        var max = zoomRange ? zoomRange.max : 0;\r\n        if (\"logarithmic\" === businessRange.axisType) {\r\n            min = getLog(min, businessRange.base);\r\n            max = getLog(max, businessRange.base)\r\n        }\r\n        var viewportDistance = businessRange.axisType === DISCRETE ? getCategoriesInfo(businessRange.categories, min, max).categories.length : Math.abs(max - min);\r\n        var precision = getPrecision(viewportDistance);\r\n        precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\r\n        var zoomChanged = Math.round((this._zoomLength - viewportDistance) * precision) / precision !== 0;\r\n        this._zoomLength = viewportDistance;\r\n        return zoomChanged\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var that = this;\r\n        var viewport = new Range;\r\n        that.series.forEach((function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        }));\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true);\r\n            axis.setBusinessRange(viewport, that._axesReinitialized)\r\n        }));\r\n        that.callBase()\r\n    },\r\n    _isLegendInside: function() {\r\n        return this._legend && \"inside\" === this._legend.getPosition()\r\n    },\r\n    _isRotated: function() {\r\n        return this._themeManager.getOptions(\"rotated\")\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return this.panes\r\n    },\r\n    _applyClipRects: function(panesBorderOptions) {\r\n        this._drawPanesBorders(panesBorderOptions);\r\n        this._createClipRectsForPanes();\r\n        this._applyClipRectsForAxes();\r\n        this._fillPanesBackground()\r\n    },\r\n    _updateLegendPosition: function(drawOptions, legendHasInsidePosition) {\r\n        if (drawOptions.drawLegend && this._legend && legendHasInsidePosition) {\r\n            var panes = this.panes;\r\n            var newCanvas = _extend({}, panes[0].canvas);\r\n            var layoutManager = new LayoutManager;\r\n            newCanvas.right = panes[panes.length - 1].canvas.right;\r\n            newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\r\n            layoutManager.layoutInsideLegend(this._legend, newCanvas)\r\n        }\r\n    },\r\n    _allowLegendInsidePosition: () => true,\r\n    _applyExtraSettings: function(series) {\r\n        var paneIndex = this._getPaneIndex(series.pane);\r\n        var panesClipRects = this._panesClipRects;\r\n        var wideClipRect = panesClipRects.wide[paneIndex];\r\n        series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, this._getPaneBorderVisibility(paneIndex))\r\n    },\r\n    _updatePanesCanvases: function(drawOptions) {\r\n        if (!drawOptions.recreateCanvas) {\r\n            return\r\n        }\r\n        updatePanesCanvases(this.panes, this._canvas, this._isRotated())\r\n    },\r\n    _normalizePanesHeight: function() {\r\n        normalizePanesHeight(this.panes)\r\n    },\r\n    _renderScaleBreaks: function() {\r\n        this._valueAxes.concat(this._argumentAxes).forEach((function(axis) {\r\n            axis.drawScaleBreaks()\r\n        }))\r\n    },\r\n    _getArgFilter() {\r\n        return rangeDataCalculator.getViewPortFilter(this.getArgumentAxis().visualRange() || {})\r\n    },\r\n    _applyPointMarkersAutoHiding() {\r\n        var that = this;\r\n        var allSeries = that.series;\r\n        if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\r\n            allSeries.forEach(s => s.autoHidePointMarkers = false);\r\n            return\r\n        }\r\n        that.panes.forEach(_ref => {\r\n            var {\r\n                borderCoords: borderCoords,\r\n                name: name\r\n            } = _ref;\r\n            var series = allSeries.filter(s => s.pane === name && s.usePointsToDefineAutoHiding());\r\n            var argAxis = that.getArgumentAxis();\r\n            var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\r\n            fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\r\n            if (markersInfo.series.length) {\r\n                var argVisualRange = argAxis.visualRange();\r\n                var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\r\n                var sortingCallback = argAxisIsDiscrete ? (p1, p2) => argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument) : (p1, p2) => p1.argument - p2.argument;\r\n                var points = [];\r\n                markersInfo.series.forEach(s => points = points.concat(s.points));\r\n                points.sort(sortingCallback);\r\n                updateMarkersInfo(points, markersInfo.overloadedSeries);\r\n                applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis)\r\n            }\r\n        })\r\n    },\r\n    _renderAxes: function(drawOptions, panesBorderOptions) {\r\n        function calculateTitlesWidth(axes) {\r\n            return axes.map(axis => {\r\n                if (!axis.getTitle) {\r\n                    return 0\r\n                }\r\n                var title = axis.getTitle();\r\n                return title ? title.bBox.width : 0\r\n            })\r\n        }\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var scrollBar = that._scrollBar ? [that._scrollBar] : [];\r\n        var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\r\n        var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\r\n        var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        var allElements = allAxes.concat(scrollBar);\r\n        var verticalAxesFirstDrawing = verticalAxes.some(v => v.isFirstDrawing());\r\n        that._normalizePanesHeight();\r\n        that._updatePanesCanvases(drawOptions);\r\n        var panesCanvases = that.panes.reduce((function(canvases, pane) {\r\n            canvases[pane.name] = _extend({}, pane.canvas);\r\n            return canvases\r\n        }), {});\r\n        var paneSizes = that.panes.reduce((sizes, pane) => {\r\n            sizes[pane.name] = {\r\n                height: pane.height,\r\n                unit: pane.unit\r\n            };\r\n            return sizes\r\n        }, {});\r\n        var cleanPanesCanvases = _extend(true, {}, panesCanvases);\r\n        that._initCustomPositioningAxes();\r\n        var needCustomAdjustAxes = that._axesBoundaryPositioning();\r\n        if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\r\n            drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            performActionOnAxes(allAxes, \"prepareAnimation\");\r\n            that._renderScaleBreaks();\r\n            horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n            verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n            return false\r\n        }\r\n        if (needCustomAdjustAxes) {\r\n            allAxes.forEach(a => a.customPositionIsAvailable() && a.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            }))\r\n        }\r\n        if (that._scrollBar) {\r\n            that._scrollBar.setPane(that.panes)\r\n        }\r\n        var vAxesMargins = {\r\n            panes: {}\r\n        };\r\n        var hAxesMargins = getHorizontalAxesMargins(horizontalElements, axis => axis.estimateMargins(panesCanvases[axis.pane]));\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        var drawAxesAndSetCanvases = isHorizontal => {\r\n            var axes = isHorizontal ? horizontalAxes : verticalAxes;\r\n            var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\r\n            drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\r\n            if (isHorizontal) {\r\n                hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins)\r\n            } else {\r\n                vAxesMargins = getVerticalAxesMargins(verticalElements)\r\n            }\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins)\r\n        };\r\n        drawAxesAndSetCanvases(false);\r\n        drawAxesAndSetCanvases(true);\r\n        if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\r\n            drawAxesAndSetCanvases(false)\r\n        }\r\n        var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\r\n        var visibleSeries = that._getVisibleSeries();\r\n        var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\r\n        var axesIsAnimated = axisAnimationEnabled(drawOptions, pointsToAnimation);\r\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, axesIsAnimated);\r\n        horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\r\n        verticalElements.forEach(shiftAxis(\"left\", \"right\"));\r\n        that._renderScaleBreaks();\r\n        that.panes.forEach((function(pane) {\r\n            _extend(pane.canvas, panesCanvases[pane.name])\r\n        }));\r\n        that._valueAxes.forEach(axis => {\r\n            axis.setInitRange()\r\n        });\r\n        verticalAxes.forEach((axis, i) => {\r\n            var _axis$hasWrap;\r\n            if (null !== (_axis$hasWrap = axis.hasWrap) && void 0 !== _axis$hasWrap && _axis$hasWrap.call(axis)) {\r\n                var title = axis.getTitle();\r\n                var newTitleWidth = title ? title.bBox.width : 0;\r\n                var offset = newTitleWidth - oldTitlesWidth[i];\r\n                if (\"right\" === axis.getOptions().position) {\r\n                    vAxesMargins.right += offset\r\n                } else {\r\n                    vAxesMargins.left += offset;\r\n                    that.panes.forEach(_ref2 => {\r\n                        var {\r\n                            name: name\r\n                        } = _ref2;\r\n                        return vAxesMargins.panes[name].left += offset\r\n                    })\r\n                }\r\n                panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n                performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\r\n                oldTitlesWidth = calculateTitlesWidth(verticalAxes)\r\n            }\r\n        });\r\n        if (verticalAxes.some(v => v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition)) {\r\n            axesIsAnimated && that._resetAxesAnimation(verticalAxesFirstDrawing, false);\r\n            performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, axesIsAnimated)\r\n        }\r\n        horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n        verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n        return cleanPanesCanvases\r\n    },\r\n    _getExtraTemplatesItems() {\r\n        var allAxes = (this._argumentAxes || []).concat(this._valueAxes || []);\r\n        var elements = this._collectTemplatesFromItems(allAxes);\r\n        return {\r\n            items: elements.items,\r\n            groups: elements.groups,\r\n            launchRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(true)\r\n                }))\r\n            },\r\n            doneRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(false)\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _estimateTickIntervals: (axes, canvases) => axes.some(axis => axis.estimateTickInterval(canvases[axis.pane])),\r\n    checkForMoreSpaceForPanesCanvas() {\r\n        var rotated = this._isRotated();\r\n        var panesAreCustomSized = this.panes.filter(p => p.unit).length === this.panes.length;\r\n        var needSpace = false;\r\n        if (panesAreCustomSized) {\r\n            var needHorizontalSpace = 0;\r\n            var needVerticalSpace = 0;\r\n            if (rotated) {\r\n                var argAxisRightMargin = this.getArgumentAxis().getMargins().right;\r\n                var rightPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.right));\r\n                needHorizontalSpace = this._canvas.right + argAxisRightMargin - rightPanesIndent\r\n            } else {\r\n                var argAxisBottomMargin = this.getArgumentAxis().getMargins().bottom;\r\n                var bottomPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.bottom));\r\n                needVerticalSpace = this._canvas.bottom + argAxisBottomMargin - bottomPanesIndent\r\n            }\r\n            needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n                width: needHorizontalSpace,\r\n                height: needVerticalSpace\r\n            } : false;\r\n            if (0 !== needVerticalSpace) {\r\n                var realSize = this.getSize();\r\n                var customSize = this.option(\"size\");\r\n                var container = this._$element[0];\r\n                var containerHasStyledHeight = !!parseInt(container.style.height) || 0 !== this._containerInitialHeight;\r\n                if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\r\n                    this._forceResize(realSize.width, realSize.height + needVerticalSpace);\r\n                    needSpace = false\r\n                }\r\n            }\r\n        } else {\r\n            needSpace = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), rotated, pane => ({\r\n                width: rotated && !!pane.unit,\r\n                height: !rotated && !!pane.unit\r\n            }))\r\n        }\r\n        return needSpace\r\n    },\r\n    _forceResize(width, height) {\r\n        this._renderer.resize(width, height);\r\n        this._updateSize();\r\n        this._setContentSize();\r\n        this._preserveOriginalCanvas();\r\n        this._updateCanvasClipRect(this._canvas)\r\n    },\r\n    _shrinkAxes(sizeShortage, panesCanvases) {\r\n        if (!sizeShortage || !panesCanvases) {\r\n            return\r\n        }\r\n        this._renderer.stopAllAnimations(true);\r\n        var rotated = this._isRotated();\r\n        var scrollBar = this._scrollBar ? [this._scrollBar] : [];\r\n        var extendedArgAxes = this._isArgumentAxisBeforeScrollBar() ? this._argumentAxes.concat(scrollBar) : scrollBar.concat(this._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : this._valueAxes;\r\n        var horizontalAxes = rotated ? this._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        if (sizeShortage.width || sizeShortage.height) {\r\n            checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\r\n            checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            var paneSizes = this.panes.reduce((sizes, pane) => {\r\n                sizes[pane.name] = {\r\n                    height: pane.height,\r\n                    unit: pane.unit\r\n                };\r\n                return sizes\r\n            }, {});\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n            verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n            this.panes.forEach(pane => _extend(pane.canvas, panesCanvases[pane.name]))\r\n        }\r\n    },\r\n    _isArgumentAxisBeforeScrollBar() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (this._scrollBar) {\r\n            var _argumentAxis$getOpti;\r\n            var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\r\n            var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\r\n            var scrollBarPosition = this._scrollBar.getOptions().position;\r\n            return argumentAxis.hasNonBoundaryPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition\r\n        }\r\n        return false\r\n    },\r\n    _getPanesParameters: function() {\r\n        var panes = this.panes;\r\n        var i;\r\n        var params = [];\r\n        for (i = 0; i < panes.length; i++) {\r\n            if (this._getPaneBorderVisibility(i)) {\r\n                params.push({\r\n                    coords: panes[i].borderCoords,\r\n                    clipRect: this._panesClipRects.fixed[i]\r\n                })\r\n            }\r\n        }\r\n        return params\r\n    },\r\n    _createCrosshairCursor: function() {\r\n        var options = this._themeManager.getOptions(\"crosshair\") || {};\r\n        var argumentAxis = this.getArgumentAxis();\r\n        var axes = !this._isRotated() ? [\r\n            [argumentAxis], this._valueAxes\r\n        ] : [this._valueAxes, [argumentAxis]];\r\n        var parameters = {\r\n            canvas: this._getCommonCanvas(),\r\n            panes: this._getPanesParameters(),\r\n            axes: axes\r\n        };\r\n        if (!options || !options.enabled) {\r\n            return\r\n        }\r\n        if (!this._crosshair) {\r\n            this._crosshair = new Crosshair(this._renderer, options, parameters, this._crosshairCursorGroup)\r\n        } else {\r\n            this._crosshair.update(options, parameters)\r\n        }\r\n        this._crosshair.render()\r\n    },\r\n    _getCommonCanvas: function() {\r\n        var i;\r\n        var canvas;\r\n        var commonCanvas;\r\n        var panes = this.panes;\r\n        for (i = 0; i < panes.length; i++) {\r\n            canvas = panes[i].canvas;\r\n            if (!commonCanvas) {\r\n                commonCanvas = _extend({}, canvas)\r\n            } else {\r\n                commonCanvas.right = canvas.right;\r\n                commonCanvas.bottom = canvas.bottom\r\n            }\r\n        }\r\n        return commonCanvas\r\n    },\r\n    _createPanesBackground: function() {\r\n        var defaultBackgroundColor = this._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\r\n        var backgroundColor;\r\n        var renderer = this._renderer;\r\n        var rect;\r\n        var i;\r\n        var rects = [];\r\n        this._panesBackgroundGroup.clear();\r\n        for (i = 0; i < this.panes.length; i++) {\r\n            backgroundColor = this.panes[i].backgroundColor || defaultBackgroundColor;\r\n            if (!backgroundColor || \"none\" === backgroundColor) {\r\n                rects.push(null);\r\n                continue\r\n            }\r\n            rect = renderer.rect(0, 0, 0, 0).attr({\r\n                fill: backgroundColor,\r\n                \"stroke-width\": 0\r\n            }).append(this._panesBackgroundGroup);\r\n            rects.push(rect)\r\n        }\r\n        this.panesBackground = rects\r\n    },\r\n    _fillPanesBackground: function() {\r\n        var that = this;\r\n        var bc;\r\n        _each(that.panes, (function(i, pane) {\r\n            bc = pane.borderCoords;\r\n            if (null !== that.panesBackground[i]) {\r\n                that.panesBackground[i].attr({\r\n                    x: bc.left,\r\n                    y: bc.top,\r\n                    width: bc.width,\r\n                    height: bc.height\r\n                })\r\n            }\r\n        }))\r\n    },\r\n    _calcPaneBorderCoords: function(pane) {\r\n        var canvas = pane.canvas;\r\n        var bc = pane.borderCoords = pane.borderCoords || {};\r\n        bc.left = canvas.left;\r\n        bc.top = canvas.top;\r\n        bc.right = canvas.width - canvas.right;\r\n        bc.bottom = canvas.height - canvas.bottom;\r\n        bc.width = Math.max(bc.right - bc.left, 0);\r\n        bc.height = Math.max(bc.bottom - bc.top, 0)\r\n    },\r\n    _drawPanesBorders: function(panesBorderOptions) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        that._panesBorderGroup.linkRemove().clear();\r\n        _each(that.panes, (function(i, pane) {\r\n            var borderOptions = panesBorderOptions[pane.name];\r\n            var attr = {\r\n                fill: \"none\",\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                \"stroke-width\": borderOptions.width,\r\n                dashStyle: borderOptions.dashStyle,\r\n                \"stroke-linecap\": \"square\"\r\n            };\r\n            that._calcPaneBorderCoords(pane, rotated);\r\n            if (!borderOptions.visible) {\r\n                return\r\n            }\r\n            var bc = pane.borderCoords;\r\n            var segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\r\n            that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup)\r\n        }));\r\n        that._panesBorderGroup.linkAppend()\r\n    },\r\n    _createClipRect: function(clipArray, index, left, top, width, height) {\r\n        var clipRect = clipArray[index];\r\n        if (!clipRect) {\r\n            clipRect = this._renderer.clipRect(left, top, width, height);\r\n            clipArray[index] = clipRect\r\n        } else {\r\n            clipRect.attr({\r\n                x: left,\r\n                y: top,\r\n                width: width,\r\n                height: height\r\n            })\r\n        }\r\n    },\r\n    _createClipRectsForPanes: function() {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        _each(that.panes, (function(i, pane) {\r\n            var needWideClipRect = false;\r\n            var bc = pane.borderCoords;\r\n            var left = bc.left;\r\n            var top = bc.top;\r\n            var width = bc.width;\r\n            var height = bc.height;\r\n            var panesClipRects = that._panesClipRects;\r\n            that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\r\n            that._createClipRect(panesClipRects.base, i, left, top, width, height);\r\n            _each(that.series, (function(_, series) {\r\n                if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\r\n                    needWideClipRect = true\r\n                }\r\n            }));\r\n            if (needWideClipRect) {\r\n                if (that._isRotated()) {\r\n                    top = 0;\r\n                    height = canvas.height\r\n                } else {\r\n                    left = 0;\r\n                    width = canvas.width\r\n                }\r\n                that._createClipRect(panesClipRects.wide, i, left, top, width, height)\r\n            } else {\r\n                panesClipRects.wide[i] = null\r\n            }\r\n        }))\r\n    },\r\n    _applyClipRectsForAxes() {\r\n        var axes = this._getAllAxes();\r\n        var chartCanvasClipRectID = this._getCanvasClipRectID();\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var elementsClipRectID = this._getElementsClipRectID(axes[i].pane);\r\n            axes[i].applyClipRects(elementsClipRectID, chartCanvasClipRectID)\r\n        }\r\n    },\r\n    _getPaneBorderVisibility: function(paneIndex) {\r\n        var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\r\n        var pane = this.panes[paneIndex] || {};\r\n        var paneBorder = pane.border || {};\r\n        return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible\r\n    },\r\n    _getCanvasForPane: function(paneName) {\r\n        var panes = this.panes;\r\n        var panesNumber = panes.length;\r\n        var i;\r\n        for (i = 0; i < panesNumber; i++) {\r\n            if (panes[i].name === paneName) {\r\n                return panes[i].canvas\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var themeManager = this._themeManager;\r\n        return _extend(this.callBase(), {\r\n            chart: this,\r\n            rotated: this._isRotated(),\r\n            crosshair: this._getCrosshairOptions().enabled ? this._crosshair : null,\r\n            stickyHovering: themeManager.getOptions(\"stickyHovering\")\r\n        })\r\n    },\r\n    _resolveLabelOverlappingStack: function() {\r\n        var that = this;\r\n        var isRotated = that._isRotated();\r\n        var shiftDirection = isRotated ? function(box, length) {\r\n            return {\r\n                x: box.x - length,\r\n                y: box.y\r\n            }\r\n        } : function(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        };\r\n        _each(that._getStackPoints(), (function(_, stacks) {\r\n            _each(stacks, (function(_, points) {\r\n                overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, shiftDirection, (a, b) => {\r\n                    var coordPosition = isRotated ? 1 : 0;\r\n                    var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\r\n                    var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\r\n                    if (figureCenter1 - figureCenter12 === 0) {\r\n                        return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1)\r\n                    }\r\n                    return 0\r\n                })\r\n            }))\r\n        }))\r\n    },\r\n    _getStackPoints: function() {\r\n        var stackPoints = {};\r\n        var visibleSeries = this._getVisibleSeries();\r\n        _each(visibleSeries, (function(_, singleSeries) {\r\n            var points = singleSeries.getPoints();\r\n            var stackName = singleSeries.getStackName() || null;\r\n            _each(points, (function(_, point) {\r\n                var argument = point.argument;\r\n                if (!stackPoints[argument]) {\r\n                    stackPoints[argument] = {}\r\n                }\r\n                if (!stackPoints[argument][stackName]) {\r\n                    stackPoints[argument][stackName] = []\r\n                }\r\n                stackPoints[argument][stackName].push(point)\r\n            }))\r\n        }));\r\n        return stackPoints\r\n    },\r\n    _getCrosshairOptions: function() {\r\n        return this._getOption(\"crosshair\")\r\n    },\r\n    zoomArgument(min, max) {\r\n        if (!this._initialized || !_isDefined(min) && !_isDefined(max)) {\r\n            return\r\n        }\r\n        this.getArgumentAxis().visualRange([min, max])\r\n    },\r\n    resetVisualRange() {\r\n        var that = this;\r\n        var axes = that._argumentAxes;\r\n        var nonVirtualArgumentAxis = that.getArgumentAxis();\r\n        axes.forEach(axis => {\r\n            axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that.callBase()\r\n    },\r\n    getVisibleArgumentBounds: function() {\r\n        var translator = this._argumentAxes[0].getTranslator();\r\n        var range = translator.getBusinessRange();\r\n        var isDiscrete = range.axisType === DISCRETE;\r\n        var categories = range.categories;\r\n        return {\r\n            minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\r\n            maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this.callBase();\r\n        if (this._changes.has(VISUAL_RANGE)) {\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    _getAxesForScaling() {\r\n        return [this.getArgumentAxis()].concat(this._valueAxes)\r\n    },\r\n    _applyVisualRangeByVirtualAxes(axis, range) {\r\n        if (axis.isArgumentAxis) {\r\n            if (axis !== this.getArgumentAxis()) {\r\n                return true\r\n            }\r\n            this._argumentAxes.filter(a => a !== axis).forEach(a => a.visualRange(range, {\r\n                start: true,\r\n                end: true\r\n            }))\r\n        }\r\n        return false\r\n    },\r\n    _raiseZoomEndHandlers() {\r\n        this._argumentAxes.forEach(axis => axis.handleZoomEnd());\r\n        this.callBase()\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        _extend(this._optionsByReference, {\r\n            \"argumentAxis.visualRange\": true\r\n        })\r\n    },\r\n    option() {\r\n        var option = this.callBase.apply(this, arguments);\r\n        var valueAxis = this._options.silent(\"valueAxis\");\r\n        if (\"array\" === type(valueAxis)) {\r\n            for (var i = 0; i < valueAxis.length; i++) {\r\n                var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\r\n                this._optionsByReference[optionPath] = true\r\n            }\r\n        }\r\n        return option\r\n    },\r\n    _notifyVisualRange() {\r\n        var argAxis = this._argumentAxes[0];\r\n        var argumentVisualRange = convertVisualRangeObject(argAxis.visualRange(), !_isArray(this.option(\"argumentAxis.visualRange\")));\r\n        if (!argAxis.skipEventRising || !rangesAreEqual(argumentVisualRange, this.option(\"argumentAxis.visualRange\"))) {\r\n            this.option(\"argumentAxis.visualRange\", argumentVisualRange)\r\n        } else {\r\n            argAxis.skipEventRising = null\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nimport shutterZoom from \"./chart_components/shutter_zoom\";\r\nimport zoomAndPan from \"./chart_components/zoom_and_pan\";\r\nimport {\r\n    plugins\r\n} from \"./core/annotations\";\r\ndxChart.addPlugin(shutterZoom);\r\ndxChart.addPlugin(zoomAndPan);\r\ndxChart.addPlugin(plugins.core);\r\ndxChart.addPlugin(plugins.chart);\r\nregisterComponent(\"dxChart\", dxChart);\r\nexport default dxChart;\r\n"]},"metadata":{},"sourceType":"module"}