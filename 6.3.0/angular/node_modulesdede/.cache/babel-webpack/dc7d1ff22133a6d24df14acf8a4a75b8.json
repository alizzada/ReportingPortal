{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/vdom\";\nimport { Row } from \"../row\";\nimport { TimePanelCell as Cell } from \"./cell\";\nimport { CellBase } from \"../cell\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel, isVerticalGroupOrientation } from \"../../utils\";\nimport { Table } from \"../table\";\nimport { AllDayPanelTitle } from \"../date_table/all_day_panel/title\";\nexport var viewFunction = function viewFunction(_ref) {\n  var bottomVirtualRowHeight = _ref.bottomVirtualRowHeight,\n      isVerticalGrouping = _ref.isVerticalGroupOrientation,\n      _ref$props = _ref.props,\n      groupOrientation = _ref$props.groupOrientation,\n      timeCellTemplate = _ref$props.timeCellTemplate,\n      timePanelData = _ref$props.timePanelData,\n      restAttributes = _ref.restAttributes,\n      topVirtualRowHeight = _ref.topVirtualRowHeight;\n  return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\n    topVirtualRowHeight: topVirtualRowHeight,\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    virtualCellsCount: 1,\n    className: \"dx-scheduler-time-panel\",\n    children: timePanelData.groupedData.map(function (_ref2, index) {\n      var dateTable = _ref2.dateTable,\n          groupIndex = _ref2.groupIndex;\n      return createFragment([getIsGroupedAllDayPanel(timePanelData, index) && createComponentVNode(2, Row, {\n        children: createComponentVNode(2, CellBase, {\n          className: \"dx-scheduler-time-panel-title-cell\",\n          children: createComponentVNode(2, AllDayPanelTitle)\n        })\n      }), dateTable.map(function (cell) {\n        var cellCountInGroupRow = timePanelData.cellCountInGroupRow;\n        var groups = cell.groups,\n            cellIndex = cell.index,\n            isFirstGroupCell = cell.isFirstGroupCell,\n            isLastGroupCell = cell.isLastGroupCell,\n            key = cell.key,\n            startDate = cell.startDate,\n            text = cell.text;\n        return createComponentVNode(2, Row, {\n          className: \"dx-scheduler-time-panel-row\",\n          children: createComponentVNode(2, Cell, {\n            startDate: startDate,\n            text: text,\n            groups: isVerticalGrouping ? groups : void 0,\n            groupIndex: isVerticalGrouping ? groupIndex : void 0,\n            isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,\n            isLastGroupCell: isVerticalGrouping && isLastGroupCell,\n            index: Math.floor(cellIndex / cellCountInGroupRow),\n            timeCellTemplate: timeCellTemplate\n          })\n        }, key);\n      })], 0, getKeyByGroup(groupIndex, groupOrientation));\n    })\n  })));\n};\nexport var TimePanelTableLayoutProps = {\n  className: \"\",\n  allDayPanelVisible: false,\n  timePanelData: {\n    groupedData: [],\n    cellCountInGroupRow: 0,\n    leftVirtualCellCount: 0,\n    rightVirtualCellCount: 0,\n    topVirtualRowCount: 0,\n    bottomVirtualRowCount: 0\n  }\n};\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var TimePanelTableLayout = /*#__PURE__*/function (_InfernoWrapperCompon) {\n  _inherits(TimePanelTableLayout, _InfernoWrapperCompon);\n\n  var _super = _createSuper(TimePanelTableLayout);\n\n  function TimePanelTableLayout(props) {\n    var _this;\n\n    _classCallCheck(this, TimePanelTableLayout);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TimePanelTableLayout, [{\n    key: \"topVirtualRowHeight\",\n    get: function get() {\n      return this.props.timePanelData.topVirtualRowHeight || 0;\n    }\n  }, {\n    key: \"bottomVirtualRowHeight\",\n    get: function get() {\n      return this.props.timePanelData.bottomVirtualRowHeight || 0;\n    }\n  }, {\n    key: \"isVerticalGroupOrientation\",\n    get: function get() {\n      var groupOrientation = this.props.groupOrientation;\n      return isVerticalGroupOrientation(groupOrientation);\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, [\"allDayPanelVisible\", \"className\", \"groupOrientation\", \"timeCellTemplate\", \"timePanelData\"]);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          timeCellTemplate: getTemplate(props.timeCellTemplate)\n        }),\n        topVirtualRowHeight: this.topVirtualRowHeight,\n        bottomVirtualRowHeight: this.bottomVirtualRowHeight,\n        isVerticalGroupOrientation: this.isVerticalGroupOrientation,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return TimePanelTableLayout;\n}(InfernoWrapperComponent);\nTimePanelTableLayout.defaultProps = _extends({}, TimePanelTableLayoutProps);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js"],"names":["_objectWithoutPropertiesLoose","_extends","createFragment","createComponentVNode","normalizeProps","Fragment","InfernoWrapperComponent","Row","TimePanelCell","Cell","CellBase","getKeyByGroup","getIsGroupedAllDayPanel","isVerticalGroupOrientation","Table","AllDayPanelTitle","viewFunction","_ref","bottomVirtualRowHeight","isVerticalGrouping","props","groupOrientation","timeCellTemplate","timePanelData","restAttributes","topVirtualRowHeight","virtualCellsCount","className","children","groupedData","map","_ref2","index","dateTable","groupIndex","cell","cellCountInGroupRow","groups","cellIndex","isFirstGroupCell","isLastGroupCell","key","startDate","text","Math","floor","TimePanelTableLayoutProps","allDayPanelVisible","leftVirtualCellCount","rightVirtualCellCount","topVirtualRowCount","bottomVirtualRowCount","getTemplate","TemplateProp","defaultProps","TimePanelTableLayout","state","_this$props","restProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    Row\r\n} from \"../row\";\r\nimport {\r\n    TimePanelCell as Cell\r\n} from \"./cell\";\r\nimport {\r\n    CellBase\r\n} from \"../cell\";\r\nimport {\r\n    getKeyByGroup,\r\n    getIsGroupedAllDayPanel,\r\n    isVerticalGroupOrientation\r\n} from \"../../utils\";\r\nimport {\r\n    Table\r\n} from \"../table\";\r\nimport {\r\n    AllDayPanelTitle\r\n} from \"../date_table/all_day_panel/title\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        bottomVirtualRowHeight: bottomVirtualRowHeight,\r\n        isVerticalGroupOrientation: isVerticalGrouping,\r\n        props: {\r\n            groupOrientation: groupOrientation,\r\n            timeCellTemplate: timeCellTemplate,\r\n            timePanelData: timePanelData\r\n        },\r\n        restAttributes: restAttributes,\r\n        topVirtualRowHeight: topVirtualRowHeight\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\r\n        topVirtualRowHeight: topVirtualRowHeight,\r\n        bottomVirtualRowHeight: bottomVirtualRowHeight,\r\n        virtualCellsCount: 1,\r\n        className: \"dx-scheduler-time-panel\",\r\n        children: timePanelData.groupedData.map((_ref2, index) => {\r\n            var {\r\n                dateTable: dateTable,\r\n                groupIndex: groupIndex\r\n            } = _ref2;\r\n            return createFragment([getIsGroupedAllDayPanel(timePanelData, index) && createComponentVNode(2, Row, {\r\n                children: createComponentVNode(2, CellBase, {\r\n                    className: \"dx-scheduler-time-panel-title-cell\",\r\n                    children: createComponentVNode(2, AllDayPanelTitle)\r\n                })\r\n            }), dateTable.map(cell => {\r\n                var {\r\n                    cellCountInGroupRow: cellCountInGroupRow\r\n                } = timePanelData;\r\n                var {\r\n                    groups: groups,\r\n                    index: cellIndex,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    key: key,\r\n                    startDate: startDate,\r\n                    text: text\r\n                } = cell;\r\n                return createComponentVNode(2, Row, {\r\n                    className: \"dx-scheduler-time-panel-row\",\r\n                    children: createComponentVNode(2, Cell, {\r\n                        startDate: startDate,\r\n                        text: text,\r\n                        groups: isVerticalGrouping ? groups : void 0,\r\n                        groupIndex: isVerticalGrouping ? groupIndex : void 0,\r\n                        isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,\r\n                        isLastGroupCell: isVerticalGrouping && isLastGroupCell,\r\n                        index: Math.floor(cellIndex / cellCountInGroupRow),\r\n                        timeCellTemplate: timeCellTemplate\r\n                    })\r\n                }, key)\r\n            })], 0, getKeyByGroup(groupIndex, groupOrientation))\r\n        })\r\n    })))\r\n};\r\nexport var TimePanelTableLayoutProps = {\r\n    className: \"\",\r\n    allDayPanelVisible: false,\r\n    timePanelData: {\r\n        groupedData: [],\r\n        cellCountInGroupRow: 0,\r\n        leftVirtualCellCount: 0,\r\n        rightVirtualCellCount: 0,\r\n        topVirtualRowCount: 0,\r\n        bottomVirtualRowCount: 0\r\n    }\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class TimePanelTableLayout extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get topVirtualRowHeight() {\r\n        return this.props.timePanelData.topVirtualRowHeight || 0\r\n    }\r\n    get bottomVirtualRowHeight() {\r\n        return this.props.timePanelData.bottomVirtualRowHeight || 0\r\n    }\r\n    get isVerticalGroupOrientation() {\r\n        var {\r\n            groupOrientation: groupOrientation\r\n        } = this.props;\r\n        return isVerticalGroupOrientation(groupOrientation)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, [\"allDayPanelVisible\", \"className\", \"groupOrientation\", \"timeCellTemplate\", \"timePanelData\"]);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                timeCellTemplate: getTemplate(props.timeCellTemplate)\r\n            }),\r\n            topVirtualRowHeight: this.topVirtualRowHeight,\r\n            bottomVirtualRowHeight: this.bottomVirtualRowHeight,\r\n            isVerticalGroupOrientation: this.isVerticalGroupOrientation,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nTimePanelTableLayout.defaultProps = _extends({}, TimePanelTableLayoutProps);\r\n"]},"metadata":{},"sourceType":"module"}