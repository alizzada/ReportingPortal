{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/variable_wrapper.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { logger } from \"./console\";\nimport dependencyInjector from \"./dependency_injector\";\nexport default dependencyInjector({\n  isWrapped: function isWrapped() {\n    return false;\n  },\n  isWritableWrapped: function isWritableWrapped() {\n    return false;\n  },\n  wrap: function wrap(value) {\n    return value;\n  },\n  unwrap: function unwrap(value) {\n    return value;\n  },\n  assign: function assign() {\n    logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\");\n  }\n});","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/core/utils/variable_wrapper.js"],"names":["logger","dependencyInjector","isWrapped","isWritableWrapped","wrap","value","unwrap","assign","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MADJ,QAEO,WAFP;AAGA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,eAAeA,kBAAkB,CAAC;AAC9BC,EAAAA,SAAS,EAAE,qBAAW;AAClB,WAAO,KAAP;AACH,GAH6B;AAI9BC,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,WAAO,KAAP;AACH,GAN6B;AAO9BC,EAAAA,IAAI,EAAE,cAASC,KAAT,EAAgB;AAClB,WAAOA,KAAP;AACH,GAT6B;AAU9BC,EAAAA,MAAM,EAAE,gBAASD,KAAT,EAAgB;AACpB,WAAOA,KAAP;AACH,GAZ6B;AAa9BE,EAAAA,MAAM,EAAE,kBAAW;AACfP,IAAAA,MAAM,CAACQ,KAAP,CAAa,oGAAb;AACH;AAf6B,CAAD,CAAjC","sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/variable_wrapper.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    logger\r\n} from \"./console\";\r\nimport dependencyInjector from \"./dependency_injector\";\r\nexport default dependencyInjector({\r\n    isWrapped: function() {\r\n        return false\r\n    },\r\n    isWritableWrapped: function() {\r\n        return false\r\n    },\r\n    wrap: function(value) {\r\n        return value\r\n    },\r\n    unwrap: function(value) {\r\n        return value\r\n    },\r\n    assign: function() {\r\n        logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\")\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}