{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/switch.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport devices from \"../core/devices\";\nimport { extend } from \"../core/utils/extend\";\nimport { render } from \"./widget/utils.ink_ripple\";\nimport registerComponent from \"../core/component_registrator\";\nimport Editor from \"./editor/editor\";\nimport { addNamespace } from \"../events/utils/index\";\nimport { lock } from \"../events/core/emitter.feedback\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport fx from \"../animation/fx\";\nimport messageLocalization from \"../localization/message\";\nimport { name as clickEventName } from \"../events/click\";\nimport Swipeable from \"../events/gesture/swipeable\";\nimport { Deferred } from \"../core/utils/deferred\";\nvar SWITCH_CLASS = \"dx-switch\";\nvar SWITCH_WRAPPER_CLASS = SWITCH_CLASS + \"-wrapper\";\nvar SWITCH_CONTAINER_CLASS = SWITCH_CLASS + \"-container\";\nvar SWITCH_INNER_CLASS = SWITCH_CLASS + \"-inner\";\nvar SWITCH_HANDLE_CLASS = SWITCH_CLASS + \"-handle\";\nvar SWITCH_ON_VALUE_CLASS = SWITCH_CLASS + \"-on-value\";\nvar SWITCH_ON_CLASS = SWITCH_CLASS + \"-on\";\nvar SWITCH_OFF_CLASS = SWITCH_CLASS + \"-off\";\nvar SWITCH_ANIMATION_DURATION = 100;\nvar Switch = Editor.inherit({\n  _supportedKeys: function _supportedKeys() {\n    var isRTL = this.option(\"rtlEnabled\");\n\n    var click = function click(e) {\n      e.preventDefault();\n\n      this._clickAction({\n        event: e\n      });\n    };\n\n    var move = function move(value, e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._saveValueChangeEvent(e);\n\n      this._animateValue(value);\n    };\n\n    return extend(this.callBase(), {\n      space: click,\n      enter: click,\n      leftArrow: move.bind(this, isRTL ? true : false),\n      rightArrow: move.bind(this, isRTL ? false : true)\n    });\n  },\n  _useTemplates: function _useTemplates() {\n    return false;\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      switchedOnText: messageLocalization.format(\"dxSwitch-switchedOnText\"),\n      switchedOffText: messageLocalization.format(\"dxSwitch-switchedOffText\"),\n      value: false,\n      useInkRipple: false\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: function device() {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  },\n  _feedbackHideTimeout: 0,\n  _animating: false,\n  _initMarkup: function _initMarkup() {\n    this._renderContainers();\n\n    this.option(\"useInkRipple\") && this._renderInkRipple();\n    this.$element().addClass(SWITCH_CLASS).append(this._$switchWrapper);\n\n    this._renderSubmitElement();\n\n    this._renderClick();\n\n    this.setAria(\"role\", \"button\");\n\n    this._renderSwipeable();\n\n    this.callBase();\n\n    this._renderSwitchInner();\n\n    this._renderLabels();\n\n    this._renderValue();\n  },\n  _getInnerOffset: function _getInnerOffset(value, offset) {\n    var ratio = (offset - this._offsetDirection() * Number(!value)) / 2;\n    return 100 * ratio + \"%\";\n  },\n  _getHandleOffset: function _getHandleOffset(value, offset) {\n    if (this.option(\"rtlEnabled\")) {\n      value = !value;\n    }\n\n    if (value) {\n      var calcValue = 100 * -offset - 100;\n      return calcValue + \"%\";\n    } else {\n      return 100 * -offset + \"%\";\n    }\n  },\n  _renderSwitchInner: function _renderSwitchInner() {\n    this._$switchInner = $(\"<div>\").addClass(SWITCH_INNER_CLASS).appendTo(this._$switchContainer);\n    this._$handle = $(\"<div>\").addClass(SWITCH_HANDLE_CLASS).appendTo(this._$switchInner);\n  },\n  _renderLabels: function _renderLabels() {\n    this._$labelOn = $(\"<div>\").addClass(SWITCH_ON_CLASS).prependTo(this._$switchInner);\n    this._$labelOff = $(\"<div>\").addClass(SWITCH_OFF_CLASS).appendTo(this._$switchInner);\n\n    this._setLabelsText();\n  },\n  _renderContainers: function _renderContainers() {\n    this._$switchContainer = $(\"<div>\").addClass(SWITCH_CONTAINER_CLASS);\n    this._$switchWrapper = $(\"<div>\").addClass(SWITCH_WRAPPER_CLASS).append(this._$switchContainer);\n  },\n  _renderSwipeable: function _renderSwipeable() {\n    this._createComponent(this.$element(), Swipeable, {\n      elastic: false,\n      immediate: true,\n      onStart: this._swipeStartHandler.bind(this),\n      onUpdated: this._swipeUpdateHandler.bind(this),\n      onEnd: this._swipeEndHandler.bind(this),\n      itemSizeFunc: this._getItemSizeFunc.bind(this)\n    });\n  },\n  _getItemSizeFunc: function _getItemSizeFunc() {\n    return this._$switchContainer.outerWidth(true) - getBoundingRect(this._$handle.get(0)).width;\n  },\n  _renderSubmitElement: function _renderSubmitElement() {\n    this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n  },\n  _getSubmitElement: function _getSubmitElement() {\n    return this._$submitElement;\n  },\n  _renderInkRipple: function _renderInkRipple() {\n    this._inkRipple = render({\n      waveSizeCoefficient: 1.7,\n      isCentered: true,\n      useHoldAnimation: false,\n      wavesNumber: 2\n    });\n  },\n  _renderInkWave: function _renderInkWave(element, dxEvent, doRender, waveIndex) {\n    if (!this._inkRipple) {\n      return;\n    }\n\n    var config = {\n      element: element,\n      event: dxEvent,\n      wave: waveIndex\n    };\n\n    if (doRender) {\n      this._inkRipple.showWave(config);\n    } else {\n      this._inkRipple.hideWave(config);\n    }\n  },\n  _updateFocusState: function _updateFocusState(e, value) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$handle, e, value, 0);\n  },\n  _toggleActiveState: function _toggleActiveState($element, value, e) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$handle, e, value, 1);\n  },\n  _offsetDirection: function _offsetDirection() {\n    return this.option(\"rtlEnabled\") ? -1 : 1;\n  },\n  _renderPosition: function _renderPosition(state, swipeOffset) {\n    var innerOffset = this._getInnerOffset(state, swipeOffset);\n\n    var handleOffset = this._getHandleOffset(state, swipeOffset);\n\n    this._$switchInner.css(\"transform\", \" translateX(\" + innerOffset + \")\");\n\n    this._$handle.css(\"transform\", \" translateX(\" + handleOffset + \")\");\n  },\n  _validateValue: function _validateValue() {\n    var check = this.option(\"value\");\n\n    if (\"boolean\" !== typeof check) {\n      this._options.silent(\"value\", !!check);\n    }\n  },\n  _renderClick: function _renderClick() {\n    var eventName = addNamespace(clickEventName, this.NAME);\n    var $element = this.$element();\n    this._clickAction = this._createAction(this._clickHandler.bind(this));\n    eventsEngine.off($element, eventName);\n    eventsEngine.on($element, eventName, function (e) {\n      this._clickAction({\n        event: e\n      });\n    }.bind(this));\n  },\n  _clickHandler: function _clickHandler(args) {\n    var e = args.event;\n\n    this._saveValueChangeEvent(e);\n\n    if (this._animating || this._swiping) {\n      return;\n    }\n\n    this._animateValue(!this.option(\"value\"));\n  },\n  _animateValue: function _animateValue(value) {\n    var startValue = this.option(\"value\");\n    var endValue = value;\n\n    if (startValue === endValue) {\n      return;\n    }\n\n    this._animating = true;\n\n    var fromInnerOffset = this._getInnerOffset(startValue, 0);\n\n    var toInnerOffset = this._getInnerOffset(endValue, 0);\n\n    var fromHandleOffset = this._getHandleOffset(startValue, 0);\n\n    var toHandleOffset = this._getHandleOffset(endValue, 0);\n\n    var that = this;\n    var fromInnerConfig = {};\n    var toInnerConfig = {};\n    var fromHandleConfig = {};\n    var toHandlerConfig = {};\n    fromInnerConfig.transform = \" translateX(\" + fromInnerOffset + \")\";\n    toInnerConfig.transform = \" translateX(\" + toInnerOffset + \")\";\n    fromHandleConfig.transform = \" translateX(\" + fromHandleOffset + \")\";\n    toHandlerConfig.transform = \" translateX(\" + toHandleOffset + \")\";\n    this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, endValue);\n    fx.animate(this._$handle, {\n      from: fromHandleConfig,\n      to: toHandlerConfig,\n      duration: SWITCH_ANIMATION_DURATION\n    });\n    fx.animate(this._$switchInner, {\n      from: fromInnerConfig,\n      to: toInnerConfig,\n      duration: SWITCH_ANIMATION_DURATION,\n      complete: function complete() {\n        that._animating = false;\n        that.option(\"value\", endValue);\n      }\n    });\n  },\n  _swipeStartHandler: function _swipeStartHandler(e) {\n    var state = this.option(\"value\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var maxOffOffset = rtlEnabled ? 0 : 1;\n    var maxOnOffset = rtlEnabled ? 1 : 0;\n    e.event.maxLeftOffset = state ? maxOffOffset : maxOnOffset;\n    e.event.maxRightOffset = state ? maxOnOffset : maxOffOffset;\n    this._swiping = true;\n    this._feedbackDeferred = new Deferred();\n    lock(this._feedbackDeferred);\n\n    this._toggleActiveState(this.$element(), this.option(\"activeStateEnabled\"));\n  },\n  _swipeUpdateHandler: function _swipeUpdateHandler(e) {\n    this._renderPosition(this.option(\"value\"), e.event.offset);\n  },\n  _swipeEndHandler: function _swipeEndHandler(e) {\n    var that = this;\n\n    var offsetDirection = this._offsetDirection();\n\n    var toInnerConfig = {};\n    var toHandleConfig = {};\n\n    var innerOffset = this._getInnerOffset(that.option(\"value\"), e.event.targetOffset);\n\n    var handleOffset = this._getHandleOffset(that.option(\"value\"), e.event.targetOffset);\n\n    toInnerConfig.transform = \" translateX(\" + innerOffset + \")\";\n    toHandleConfig.transform = \" translateX(\" + handleOffset + \")\";\n    fx.animate(this._$handle, {\n      to: toHandleConfig,\n      duration: SWITCH_ANIMATION_DURATION\n    });\n    fx.animate(this._$switchInner, {\n      to: toInnerConfig,\n      duration: SWITCH_ANIMATION_DURATION,\n      complete: function complete() {\n        that._swiping = false;\n        var pos = that.option(\"value\") + offsetDirection * e.event.targetOffset;\n\n        that._saveValueChangeEvent(e.event);\n\n        that.option(\"value\", Boolean(pos));\n\n        that._feedbackDeferred.resolve();\n\n        that._toggleActiveState(that.$element(), false);\n      }\n    });\n  },\n  _renderValue: function _renderValue() {\n    this._validateValue();\n\n    var val = this.option(\"value\");\n\n    this._renderPosition(val, 0);\n\n    this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, val);\n\n    this._getSubmitElement().val(val);\n\n    this.setAria({\n      pressed: val,\n      label: val ? this.option(\"switchedOnText\") : this.option(\"switchedOffText\")\n    });\n  },\n  _setLabelsText: function _setLabelsText() {\n    this._$labelOn && this._$labelOn.text(this.option(\"switchedOnText\"));\n    this._$labelOff && this._$labelOff.text(this.option(\"switchedOffText\"));\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible) {\n      this.repaint();\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"useInkRipple\":\n        this._invalidate();\n\n        break;\n\n      case \"width\":\n        delete this._marginBound;\n\n        this._refresh();\n\n        break;\n\n      case \"switchedOnText\":\n      case \"switchedOffText\":\n        this._setLabelsText();\n\n        break;\n\n      case \"value\":\n        this._renderValue();\n\n        this.callBase(args);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function _clean() {\n    delete this._inkRipple;\n    this.callBase();\n  }\n});\nregisterComponent(\"dxSwitch\", Switch);\nexport default Switch;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/switch.js"],"names":["$","eventsEngine","devices","extend","render","registerComponent","Editor","addNamespace","lock","getBoundingRect","fx","messageLocalization","name","clickEventName","Swipeable","Deferred","SWITCH_CLASS","SWITCH_WRAPPER_CLASS","SWITCH_CONTAINER_CLASS","SWITCH_INNER_CLASS","SWITCH_HANDLE_CLASS","SWITCH_ON_VALUE_CLASS","SWITCH_ON_CLASS","SWITCH_OFF_CLASS","SWITCH_ANIMATION_DURATION","Switch","inherit","_supportedKeys","isRTL","option","click","e","preventDefault","_clickAction","event","move","value","stopPropagation","_saveValueChangeEvent","_animateValue","callBase","space","enter","leftArrow","bind","rightArrow","_useTemplates","_getDefaultOptions","hoverStateEnabled","activeStateEnabled","switchedOnText","format","switchedOffText","useInkRipple","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","_feedbackHideTimeout","_animating","_initMarkup","_renderContainers","_renderInkRipple","$element","addClass","append","_$switchWrapper","_renderSubmitElement","_renderClick","setAria","_renderSwipeable","_renderSwitchInner","_renderLabels","_renderValue","_getInnerOffset","offset","ratio","_offsetDirection","Number","_getHandleOffset","calcValue","_$switchInner","appendTo","_$switchContainer","_$handle","_$labelOn","prependTo","_$labelOff","_setLabelsText","_createComponent","elastic","immediate","onStart","_swipeStartHandler","onUpdated","_swipeUpdateHandler","onEnd","_swipeEndHandler","itemSizeFunc","_getItemSizeFunc","outerWidth","get","width","_$submitElement","attr","_getSubmitElement","_inkRipple","waveSizeCoefficient","isCentered","useHoldAnimation","wavesNumber","_renderInkWave","element","dxEvent","doRender","waveIndex","config","wave","showWave","hideWave","_updateFocusState","apply","arguments","_toggleActiveState","_renderPosition","state","swipeOffset","innerOffset","handleOffset","css","_validateValue","check","_options","silent","eventName","NAME","_createAction","_clickHandler","off","on","args","_swiping","startValue","endValue","fromInnerOffset","toInnerOffset","fromHandleOffset","toHandleOffset","that","fromInnerConfig","toInnerConfig","fromHandleConfig","toHandlerConfig","transform","toggleClass","animate","from","to","duration","complete","rtlEnabled","maxOffOffset","maxOnOffset","maxLeftOffset","maxRightOffset","_feedbackDeferred","offsetDirection","toHandleConfig","targetOffset","pos","Boolean","resolve","val","pressed","label","text","_visibilityChanged","visible","repaint","_optionChanged","_invalidate","_marginBound","_refresh","_clean"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/switch.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    render\r\n} from \"./widget/utils.ink_ripple\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport Editor from \"./editor/editor\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nimport {\r\n    lock\r\n} from \"../events/core/emitter.feedback\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport fx from \"../animation/fx\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../events/click\";\r\nimport Swipeable from \"../events/gesture/swipeable\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar SWITCH_CLASS = \"dx-switch\";\r\nvar SWITCH_WRAPPER_CLASS = SWITCH_CLASS + \"-wrapper\";\r\nvar SWITCH_CONTAINER_CLASS = SWITCH_CLASS + \"-container\";\r\nvar SWITCH_INNER_CLASS = SWITCH_CLASS + \"-inner\";\r\nvar SWITCH_HANDLE_CLASS = SWITCH_CLASS + \"-handle\";\r\nvar SWITCH_ON_VALUE_CLASS = SWITCH_CLASS + \"-on-value\";\r\nvar SWITCH_ON_CLASS = SWITCH_CLASS + \"-on\";\r\nvar SWITCH_OFF_CLASS = SWITCH_CLASS + \"-off\";\r\nvar SWITCH_ANIMATION_DURATION = 100;\r\nvar Switch = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var click = function(e) {\r\n            e.preventDefault();\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        };\r\n        var move = function(value, e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._saveValueChangeEvent(e);\r\n            this._animateValue(value)\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: click,\r\n            enter: click,\r\n            leftArrow: move.bind(this, isRTL ? true : false),\r\n            rightArrow: move.bind(this, isRTL ? false : true)\r\n        })\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            switchedOnText: messageLocalization.format(\"dxSwitch-switchedOnText\"),\r\n            switchedOffText: messageLocalization.format(\"dxSwitch-switchedOffText\"),\r\n            value: false,\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _feedbackHideTimeout: 0,\r\n    _animating: false,\r\n    _initMarkup: function() {\r\n        this._renderContainers();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().addClass(SWITCH_CLASS).append(this._$switchWrapper);\r\n        this._renderSubmitElement();\r\n        this._renderClick();\r\n        this.setAria(\"role\", \"button\");\r\n        this._renderSwipeable();\r\n        this.callBase();\r\n        this._renderSwitchInner();\r\n        this._renderLabels();\r\n        this._renderValue()\r\n    },\r\n    _getInnerOffset: function(value, offset) {\r\n        var ratio = (offset - this._offsetDirection() * Number(!value)) / 2;\r\n        return 100 * ratio + \"%\"\r\n    },\r\n    _getHandleOffset: function(value, offset) {\r\n        if (this.option(\"rtlEnabled\")) {\r\n            value = !value\r\n        }\r\n        if (value) {\r\n            var calcValue = 100 * -offset - 100;\r\n            return calcValue + \"%\"\r\n        } else {\r\n            return 100 * -offset + \"%\"\r\n        }\r\n    },\r\n    _renderSwitchInner: function() {\r\n        this._$switchInner = $(\"<div>\").addClass(SWITCH_INNER_CLASS).appendTo(this._$switchContainer);\r\n        this._$handle = $(\"<div>\").addClass(SWITCH_HANDLE_CLASS).appendTo(this._$switchInner)\r\n    },\r\n    _renderLabels: function() {\r\n        this._$labelOn = $(\"<div>\").addClass(SWITCH_ON_CLASS).prependTo(this._$switchInner);\r\n        this._$labelOff = $(\"<div>\").addClass(SWITCH_OFF_CLASS).appendTo(this._$switchInner);\r\n        this._setLabelsText()\r\n    },\r\n    _renderContainers: function() {\r\n        this._$switchContainer = $(\"<div>\").addClass(SWITCH_CONTAINER_CLASS);\r\n        this._$switchWrapper = $(\"<div>\").addClass(SWITCH_WRAPPER_CLASS).append(this._$switchContainer)\r\n    },\r\n    _renderSwipeable: function() {\r\n        this._createComponent(this.$element(), Swipeable, {\r\n            elastic: false,\r\n            immediate: true,\r\n            onStart: this._swipeStartHandler.bind(this),\r\n            onUpdated: this._swipeUpdateHandler.bind(this),\r\n            onEnd: this._swipeEndHandler.bind(this),\r\n            itemSizeFunc: this._getItemSizeFunc.bind(this)\r\n        })\r\n    },\r\n    _getItemSizeFunc: function() {\r\n        return this._$switchContainer.outerWidth(true) - getBoundingRect(this._$handle.get(0)).width\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = render({\r\n            waveSizeCoefficient: 1.7,\r\n            isCentered: true,\r\n            useHoldAnimation: false,\r\n            wavesNumber: 2\r\n        })\r\n    },\r\n    _renderInkWave: function(element, dxEvent, doRender, waveIndex) {\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: element,\r\n            event: dxEvent,\r\n            wave: waveIndex\r\n        };\r\n        if (doRender) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _updateFocusState: function(e, value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$handle, e, value, 0)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$handle, e, value, 1)\r\n    },\r\n    _offsetDirection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _renderPosition: function(state, swipeOffset) {\r\n        var innerOffset = this._getInnerOffset(state, swipeOffset);\r\n        var handleOffset = this._getHandleOffset(state, swipeOffset);\r\n        this._$switchInner.css(\"transform\", \" translateX(\" + innerOffset + \")\");\r\n        this._$handle.css(\"transform\", \" translateX(\" + handleOffset + \")\")\r\n    },\r\n    _validateValue: function() {\r\n        var check = this.option(\"value\");\r\n        if (\"boolean\" !== typeof check) {\r\n            this._options.silent(\"value\", !!check)\r\n        }\r\n    },\r\n    _renderClick: function() {\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        var $element = this.$element();\r\n        this._clickAction = this._createAction(this._clickHandler.bind(this));\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, function(e) {\r\n            this._clickAction({\r\n                event: e\r\n            })\r\n        }.bind(this))\r\n    },\r\n    _clickHandler: function(args) {\r\n        var e = args.event;\r\n        this._saveValueChangeEvent(e);\r\n        if (this._animating || this._swiping) {\r\n            return\r\n        }\r\n        this._animateValue(!this.option(\"value\"))\r\n    },\r\n    _animateValue: function(value) {\r\n        var startValue = this.option(\"value\");\r\n        var endValue = value;\r\n        if (startValue === endValue) {\r\n            return\r\n        }\r\n        this._animating = true;\r\n        var fromInnerOffset = this._getInnerOffset(startValue, 0);\r\n        var toInnerOffset = this._getInnerOffset(endValue, 0);\r\n        var fromHandleOffset = this._getHandleOffset(startValue, 0);\r\n        var toHandleOffset = this._getHandleOffset(endValue, 0);\r\n        var that = this;\r\n        var fromInnerConfig = {};\r\n        var toInnerConfig = {};\r\n        var fromHandleConfig = {};\r\n        var toHandlerConfig = {};\r\n        fromInnerConfig.transform = \" translateX(\" + fromInnerOffset + \")\";\r\n        toInnerConfig.transform = \" translateX(\" + toInnerOffset + \")\";\r\n        fromHandleConfig.transform = \" translateX(\" + fromHandleOffset + \")\";\r\n        toHandlerConfig.transform = \" translateX(\" + toHandleOffset + \")\";\r\n        this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, endValue);\r\n        fx.animate(this._$handle, {\r\n            from: fromHandleConfig,\r\n            to: toHandlerConfig,\r\n            duration: SWITCH_ANIMATION_DURATION\r\n        });\r\n        fx.animate(this._$switchInner, {\r\n            from: fromInnerConfig,\r\n            to: toInnerConfig,\r\n            duration: SWITCH_ANIMATION_DURATION,\r\n            complete: function() {\r\n                that._animating = false;\r\n                that.option(\"value\", endValue)\r\n            }\r\n        })\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        var state = this.option(\"value\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var maxOffOffset = rtlEnabled ? 0 : 1;\r\n        var maxOnOffset = rtlEnabled ? 1 : 0;\r\n        e.event.maxLeftOffset = state ? maxOffOffset : maxOnOffset;\r\n        e.event.maxRightOffset = state ? maxOnOffset : maxOffOffset;\r\n        this._swiping = true;\r\n        this._feedbackDeferred = new Deferred;\r\n        lock(this._feedbackDeferred);\r\n        this._toggleActiveState(this.$element(), this.option(\"activeStateEnabled\"))\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        this._renderPosition(this.option(\"value\"), e.event.offset)\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        var that = this;\r\n        var offsetDirection = this._offsetDirection();\r\n        var toInnerConfig = {};\r\n        var toHandleConfig = {};\r\n        var innerOffset = this._getInnerOffset(that.option(\"value\"), e.event.targetOffset);\r\n        var handleOffset = this._getHandleOffset(that.option(\"value\"), e.event.targetOffset);\r\n        toInnerConfig.transform = \" translateX(\" + innerOffset + \")\";\r\n        toHandleConfig.transform = \" translateX(\" + handleOffset + \")\";\r\n        fx.animate(this._$handle, {\r\n            to: toHandleConfig,\r\n            duration: SWITCH_ANIMATION_DURATION\r\n        });\r\n        fx.animate(this._$switchInner, {\r\n            to: toInnerConfig,\r\n            duration: SWITCH_ANIMATION_DURATION,\r\n            complete: function() {\r\n                that._swiping = false;\r\n                var pos = that.option(\"value\") + offsetDirection * e.event.targetOffset;\r\n                that._saveValueChangeEvent(e.event);\r\n                that.option(\"value\", Boolean(pos));\r\n                that._feedbackDeferred.resolve();\r\n                that._toggleActiveState(that.$element(), false)\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        this._validateValue();\r\n        var val = this.option(\"value\");\r\n        this._renderPosition(val, 0);\r\n        this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, val);\r\n        this._getSubmitElement().val(val);\r\n        this.setAria({\r\n            pressed: val,\r\n            label: val ? this.option(\"switchedOnText\") : this.option(\"switchedOffText\")\r\n        })\r\n    },\r\n    _setLabelsText: function() {\r\n        this._$labelOn && this._$labelOn.text(this.option(\"switchedOnText\"));\r\n        this._$labelOff && this._$labelOff.text(this.option(\"switchedOffText\"))\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.repaint()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n                delete this._marginBound;\r\n                this._refresh();\r\n                break;\r\n            case \"switchedOnText\":\r\n            case \"switchedOffText\":\r\n                this._setLabelsText();\r\n                break;\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxSwitch\", Switch);\r\nexport default Switch;\r\n"]},"metadata":{},"sourceType":"module"}