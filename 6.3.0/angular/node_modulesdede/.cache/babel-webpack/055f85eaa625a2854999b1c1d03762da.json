{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop, grep } from \"../../core/utils/common\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined as _isDefined, isFunction } from \"../../core/utils/type\";\nimport { each as _each, reverseEach as _reverseEach } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inArray } from \"../../core/utils/array\";\nimport { isTouchEvent, isPointerEvent } from \"../../events/utils/index\";\nimport BaseWidget from \"../core/base_widget\";\nimport { Legend } from \"../components/legend\";\nimport { validateData } from \"../components/data_validator\";\nimport { Series } from \"../series/base_series\";\nimport { ThemeManager } from \"../components/chart_theme_manager\";\nimport { LayoutManager } from \"./layout_manager\";\nimport * as trackerModule from \"./tracker\";\nimport { map as _map, setCanvasValues as _setCanvasValues, processSeriesTemplate } from \"../core/utils\";\nvar _isArray = Array.isArray;\nvar REINIT_REFRESH_ACTION = \"_reinit\";\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\nvar RESIZE_REFRESH_ACTION = \"_resize\";\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\nvar DEFAULT_OPACITY = .3;\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\nvar FONT = \"font\";\n\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\n  var canvasSize = stubCanvas.end - stubCanvas.start;\n  var size = 0;\n  rollingStocks.forEach(function (rollingStock) {\n    size += rollingStock.getBoundingRect().width;\n  });\n\n  while (canvasSize < size) {\n    size -= findAndKillSmallValue(rollingStocks);\n  }\n}\n\nfunction findAndKillSmallValue(rollingStocks) {\n  var smallestObject = rollingStocks.reduce(function (prev, rollingStock, index) {\n    if (!rollingStock) {\n      return prev;\n    }\n\n    var value = rollingStock.value();\n    return value < prev.value ? {\n      value: value,\n      rollingStock: rollingStock,\n      index: index\n    } : prev;\n  }, {\n    rollingStock: void 0,\n    value: 1 / 0,\n    index: void 0\n  });\n  smallestObject.rollingStock.getLabels()[0].draw(false);\n  var width = smallestObject.rollingStock.getBoundingRect().width;\n  rollingStocks[smallestObject.index] = null;\n  return width;\n}\n\nfunction checkStackOverlap(rollingStocks) {\n  var i;\n  var j;\n  var iLength;\n  var jLength;\n  var overlap = false;\n\n  for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\n    for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\n      if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\n        overlap = true;\n        break;\n      }\n    }\n\n    if (overlap) {\n      break;\n    }\n  }\n\n  return overlap;\n}\n\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, shiftFunction) {\n  var customSorting = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function () {\n    return 0;\n  };\n  var rollingStocks = [];\n  var stubCanvas = {\n    start: isRotated ? canvas.left : canvas.top,\n    end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\n  };\n  var hasStackedSeries = false;\n  points.forEach(function (p) {\n    if (!p) {\n      return;\n    }\n\n    hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\n    p.getLabels().forEach(function (l) {\n      l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction));\n    });\n  });\n\n  if (hasStackedSeries) {\n    !isRotated && rollingStocks.reverse();\n  } else {\n    var rollingStocksTmp = rollingStocks.slice();\n    rollingStocks.sort(function (a, b) {\n      return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b);\n    });\n  }\n\n  if (!checkStackOverlap(rollingStocks)) {\n    return false;\n  }\n\n  checkHeightRollingStock(rollingStocks, stubCanvas);\n  prepareOverlapStacks(rollingStocks);\n  rollingStocks.reverse();\n  moveRollingStock(rollingStocks, stubCanvas);\n  return true;\n}\n\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\n  if (!firstRolling || !secondRolling) {\n    return;\n  }\n\n  var firstRect = firstRolling.getBoundingRect();\n  var secondRect = secondRolling.getBoundingRect();\n  var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\n  return firstRect.end > secondRect.start && oppositeOverlapping;\n}\n\nfunction prepareOverlapStacks(rollingStocks) {\n  var i;\n  var currentRollingStock;\n  var root;\n\n  for (i = 0; i < rollingStocks.length - 1; i++) {\n    currentRollingStock = root || rollingStocks[i];\n\n    if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\n      currentRollingStock.toChain(rollingStocks[i + 1]);\n      rollingStocks[i + 1] = null;\n      root = currentRollingStock;\n    } else {\n      root = rollingStocks[i + 1] || currentRollingStock;\n    }\n  }\n}\n\nfunction moveRollingStock(rollingStocks, canvas) {\n  var i;\n  var j;\n  var currentRollingStock;\n  var nextRollingStock;\n  var currentBBox;\n  var nextBBox;\n\n  for (i = 0; i < rollingStocks.length; i++) {\n    currentRollingStock = rollingStocks[i];\n\n    if (rollingStocksIsOut(currentRollingStock, canvas)) {\n      currentBBox = currentRollingStock.getBoundingRect();\n\n      for (j = i + 1; j < rollingStocks.length; j++) {\n        nextRollingStock = rollingStocks[j];\n\n        if (!nextRollingStock) {\n          continue;\n        }\n\n        nextBBox = nextRollingStock.getBoundingRect();\n\n        if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\n          nextRollingStock.toChain(currentRollingStock);\n          rollingStocks[i] = currentRollingStock = null;\n          break;\n        }\n      }\n    }\n\n    currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas);\n  }\n}\n\nfunction rollingStocksIsOut(rollingStock, canvas) {\n  return rollingStock && rollingStock.getBoundingRect().end > canvas.end;\n}\n\nfunction RollingStock(label, isRotated, shiftFunction) {\n  var bBox = label.getBoundingRect();\n  var x = bBox.x;\n  var y = bBox.y;\n  var endX = bBox.x + bBox.width;\n  var endY = bBox.y + bBox.height;\n  this.labels = [label];\n  this.shiftFunction = shiftFunction;\n  this._bBox = {\n    start: isRotated ? x : y,\n    width: isRotated ? bBox.width : bBox.height,\n    end: isRotated ? endX : endY,\n    oppositeStart: isRotated ? y : x,\n    oppositeEnd: isRotated ? endY : endX\n  };\n  this._initialPosition = isRotated ? bBox.x : bBox.y;\n  return this;\n}\n\nRollingStock.prototype = {\n  toChain: function toChain(nextRollingStock) {\n    var nextRollingStockBBox = nextRollingStock.getBoundingRect();\n    nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\n\n    this._changeBoxWidth(nextRollingStockBBox.width);\n\n    this.labels = this.labels.concat(nextRollingStock.labels);\n  },\n  getBoundingRect: function getBoundingRect() {\n    return this._bBox;\n  },\n  shift: function shift(shiftLength) {\n    var shiftFunction = this.shiftFunction;\n\n    _each(this.labels, function (index, label) {\n      var bBox = label.getBoundingRect();\n      var coords = shiftFunction(bBox, shiftLength);\n\n      if (!label.hideInsideLabel(coords)) {\n        label.shift(coords.x, coords.y);\n      }\n    });\n\n    this._bBox.end -= shiftLength;\n    this._bBox.start -= shiftLength;\n  },\n  setRollingStockInCanvas: function setRollingStockInCanvas(canvas) {\n    if (this._bBox.end > canvas.end) {\n      this.shift(this._bBox.end - canvas.end);\n    }\n  },\n  getLabels: function getLabels() {\n    return this.labels;\n  },\n  value: function value() {\n    return this.labels[0].getData().value;\n  },\n  getInitialPosition: function getInitialPosition() {\n    return this._initialPosition;\n  },\n  _changeBoxWidth: function _changeBoxWidth(width) {\n    this._bBox.end += width;\n    this._bBox.width += width;\n  }\n};\n\nfunction getLegendFields(name) {\n  return {\n    nameField: name + \"Name\",\n    colorField: name + \"Color\",\n    indexField: name + \"Index\"\n  };\n}\n\nfunction getLegendSettings(legendDataField) {\n  var formatObjectFields = getLegendFields(legendDataField);\n  return {\n    getFormatObject: function getFormatObject(data) {\n      var res = {};\n      res[formatObjectFields.indexField] = data.id;\n      res[formatObjectFields.colorField] = data.states.normal.fill;\n      res[formatObjectFields.nameField] = data.text;\n      return res;\n    },\n    textField: formatObjectFields.nameField\n  };\n}\n\nfunction checkOverlapping(firstRect, secondRect) {\n  return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height);\n}\n\nexport var overlapping = {\n  resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\n};\nexport var BaseChart = BaseWidget.inherit({\n  _eventsMap: {\n    onSeriesClick: {\n      name: \"seriesClick\"\n    },\n    onPointClick: {\n      name: \"pointClick\"\n    },\n    onArgumentAxisClick: {\n      name: \"argumentAxisClick\"\n    },\n    onLegendClick: {\n      name: \"legendClick\"\n    },\n    onSeriesSelectionChanged: {\n      name: \"seriesSelectionChanged\"\n    },\n    onPointSelectionChanged: {\n      name: \"pointSelectionChanged\"\n    },\n    onSeriesHoverChanged: {\n      name: \"seriesHoverChanged\"\n    },\n    onPointHoverChanged: {\n      name: \"pointHoverChanged\"\n    },\n    onDone: {\n      name: \"done\"\n    },\n    onZoomStart: {\n      name: \"zoomStart\"\n    },\n    onZoomEnd: {\n      name: \"zoomEnd\"\n    }\n  },\n  _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\n  _rootClassPrefix: \"dxc\",\n  _rootClass: \"dxc-chart\",\n  _initialChanges: [\"INIT\"],\n  _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\n  _getThemeManagerOptions: function _getThemeManagerOptions() {\n    var themeOptions = this.callBase.apply(this, arguments);\n    themeOptions.options = this.option();\n    return themeOptions;\n  },\n  _createThemeManager: function _createThemeManager() {\n    var chartOption = this.option();\n    var themeManager = new ThemeManager(this._getThemeManagerOptions());\n    themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\n    return themeManager;\n  },\n  _initCore: function _initCore() {\n    this._canvasClipRect = this._renderer.clipRect();\n\n    this._createHtmlStructure();\n\n    this._createLegend();\n\n    this._createTracker();\n\n    this._needHandleRenderComplete = true;\n    this.layoutManager = new LayoutManager();\n\n    this._createScrollBar();\n\n    eventsEngine.on(this._$element, \"contextmenu\", function (event) {\n      if (isTouchEvent(event) || isPointerEvent(event)) {\n        event.preventDefault();\n      }\n    });\n    eventsEngine.on(this._$element, \"MSHoldVisual\", function (event) {\n      event.preventDefault();\n    });\n  },\n  _getLayoutItems: noop,\n  _layoutManagerOptions: function _layoutManagerOptions() {\n    return this._themeManager.getOptions(\"adaptiveLayout\");\n  },\n  _reinit: function _reinit() {\n    _setCanvasValues(this._canvas);\n\n    this._reinitAxes();\n\n    this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _correctAxes: noop,\n  _createHtmlStructure: function _createHtmlStructure() {\n    var renderer = this._renderer;\n    var root = renderer.root;\n\n    var createConstantLinesGroup = function createConstantLinesGroup() {\n      return renderer.g().attr({\n        class: \"dxc-constant-lines-group\"\n      }).linkOn(root, \"constant-lines\");\n    };\n\n    this._constantLinesGroup = {\n      dispose: function dispose() {\n        this.under.dispose();\n        this.above.dispose();\n      },\n      linkOff: function linkOff() {\n        this.under.linkOff();\n        this.above.linkOff();\n      },\n      clear: function clear() {\n        this.under.linkRemove().clear();\n        this.above.linkRemove().clear();\n      },\n      linkAppend: function linkAppend() {\n        this.under.linkAppend();\n        this.above.linkAppend();\n      }\n    };\n    this._backgroundRect = renderer.rect().attr({\n      fill: \"gray\",\n      opacity: 1e-4\n    }).append(root);\n    this._panesBackgroundGroup = renderer.g().attr({\n      class: \"dxc-background\"\n    }).append(root);\n    this._stripsGroup = renderer.g().attr({\n      class: \"dxc-strips-group\"\n    }).linkOn(root, \"strips\");\n    this._gridGroup = renderer.g().attr({\n      class: \"dxc-grids-group\"\n    }).linkOn(root, \"grids\");\n    this._panesBorderGroup = renderer.g().attr({\n      class: \"dxc-border\"\n    }).linkOn(root, \"border\");\n    this._axesGroup = renderer.g().attr({\n      class: \"dxc-axes-group\"\n    }).linkOn(root, \"axes\");\n    this._labelAxesGroup = renderer.g().attr({\n      class: \"dxc-strips-labels-group\"\n    }).linkOn(root, \"strips-labels\");\n    this._constantLinesGroup.under = createConstantLinesGroup();\n    this._seriesGroup = renderer.g().attr({\n      class: \"dxc-series-group\"\n    }).linkOn(root, \"series\");\n    this._constantLinesGroup.above = createConstantLinesGroup();\n    this._scaleBreaksGroup = renderer.g().attr({\n      class: \"dxc-scale-breaks\"\n    }).linkOn(root, \"scale-breaks\");\n    this._labelsGroup = renderer.g().attr({\n      class: \"dxc-labels-group\"\n    }).linkOn(root, \"labels\");\n    this._crosshairCursorGroup = renderer.g().attr({\n      class: \"dxc-crosshair-cursor\"\n    }).linkOn(root, \"crosshair\");\n    this._legendGroup = renderer.g().attr({\n      class: \"dxc-legend\",\n      \"clip-path\": this._getCanvasClipRectID()\n    }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\n    this._scrollBarGroup = renderer.g().attr({\n      class: \"dxc-scroll-bar\"\n    }).linkOn(root, \"scroll-bar\");\n  },\n  _disposeObjectsInArray: function _disposeObjectsInArray(propName, fieldNames) {\n    _each(this[propName] || [], function (_, item) {\n      if (fieldNames && item) {\n        _each(fieldNames, function (_, field) {\n          item[field] && item[field].dispose();\n        });\n      } else {\n        item && item.dispose();\n      }\n    });\n\n    this[propName] = null;\n  },\n  _disposeCore: function _disposeCore() {\n    var that = this;\n\n    var disposeObject = function disposeObject(propName) {\n      if (that[propName]) {\n        that[propName].dispose();\n        that[propName] = null;\n      }\n    };\n\n    var unlinkGroup = function unlinkGroup(name) {\n      that[name].linkOff();\n    };\n\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n\n    that._renderer.stopAllAnimations();\n\n    disposeObjectsInArray.call(that, \"series\");\n    disposeObject(\"_tracker\");\n    disposeObject(\"_crosshair\");\n    that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\n    unlinkGroup(\"_stripsGroup\");\n    unlinkGroup(\"_gridGroup\");\n    unlinkGroup(\"_axesGroup\");\n    unlinkGroup(\"_constantLinesGroup\");\n    unlinkGroup(\"_labelAxesGroup\");\n    unlinkGroup(\"_panesBorderGroup\");\n    unlinkGroup(\"_seriesGroup\");\n    unlinkGroup(\"_labelsGroup\");\n    unlinkGroup(\"_crosshairCursorGroup\");\n    unlinkGroup(\"_legendGroup\");\n    unlinkGroup(\"_scrollBarGroup\");\n    unlinkGroup(\"_scaleBreaksGroup\");\n    disposeObject(\"_canvasClipRect\");\n    disposeObject(\"_panesBackgroundGroup\");\n    disposeObject(\"_backgroundRect\");\n    disposeObject(\"_stripsGroup\");\n    disposeObject(\"_gridGroup\");\n    disposeObject(\"_axesGroup\");\n    disposeObject(\"_constantLinesGroup\");\n    disposeObject(\"_labelAxesGroup\");\n    disposeObject(\"_panesBorderGroup\");\n    disposeObject(\"_seriesGroup\");\n    disposeObject(\"_labelsGroup\");\n    disposeObject(\"_crosshairCursorGroup\");\n    disposeObject(\"_legendGroup\");\n    disposeObject(\"_scrollBarGroup\");\n    disposeObject(\"_scaleBreaksGroup\");\n  },\n  _getAnimationOptions: function _getAnimationOptions() {\n    return this._themeManager.getOptions(\"animation\");\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _getOption: function _getOption(name) {\n    return this._themeManager.getOptions(name);\n  },\n  _applySize: function _applySize(rect) {\n    this._rect = rect.slice();\n\n    if (!this._changes.has(\"FULL_RENDER\")) {\n      this._processRefreshData(RESIZE_REFRESH_ACTION);\n    }\n  },\n  _resize: function _resize() {\n    this._doRender(this.__renderOptions || {\n      animate: false,\n      isResize: true\n    });\n  },\n  _trackerType: \"ChartTracker\",\n  _createTracker: function _createTracker() {\n    this._tracker = new trackerModule[this._trackerType]({\n      seriesGroup: this._seriesGroup,\n      renderer: this._renderer,\n      tooltip: this._tooltip,\n      legend: this._legend,\n      eventTrigger: this._eventTrigger\n    });\n  },\n  _getTrackerSettings: function _getTrackerSettings() {\n    return extend({\n      chart: this\n    }, this._getSelectionModes());\n  },\n  _getSelectionModes: function _getSelectionModes() {\n    var themeManager = this._themeManager;\n    return {\n      seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\n      pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\n    };\n  },\n  _updateTracker: function _updateTracker(trackerCanvases) {\n    this._tracker.update(this._getTrackerSettings());\n\n    this._tracker.setCanvases({\n      left: 0,\n      right: this._canvas.width,\n      top: 0,\n      bottom: this._canvas.height\n    }, trackerCanvases);\n  },\n  _createCanvasFromRect: function _createCanvasFromRect(rect) {\n    var currentCanvas = this._canvas;\n    return _setCanvasValues({\n      left: rect[0],\n      top: rect[1],\n      right: currentCanvas.width - rect[2],\n      bottom: currentCanvas.height - rect[3],\n      width: currentCanvas.width,\n      height: currentCanvas.height\n    });\n  },\n  _doRender: function _doRender(_options) {\n    if (0 === this._canvas.width && 0 === this._canvas.height) {\n      return;\n    }\n\n    this._resetIsReady();\n\n    var drawOptions = this._prepareDrawOptions(_options);\n\n    var recreateCanvas = drawOptions.recreateCanvas;\n\n    this._preserveOriginalCanvas();\n\n    if (recreateCanvas) {\n      this.__currentCanvas = this._canvas;\n    } else {\n      this._canvas = this.__currentCanvas;\n    }\n\n    recreateCanvas && this._updateCanvasClipRect(this._canvas);\n    this._canvas = this._createCanvasFromRect(this._rect);\n\n    this._renderer.stopAllAnimations(true);\n\n    this._cleanGroups();\n\n    var startTime = new Date();\n\n    this._renderElements(drawOptions);\n\n    this._lastRenderingTime = new Date() - startTime;\n  },\n  _preserveOriginalCanvas: function _preserveOriginalCanvas() {\n    this.__originalCanvas = this._canvas;\n    this._canvas = extend({}, this._canvas);\n  },\n  _layoutAxes: noop,\n  _renderElements: function _renderElements(drawOptions) {\n    var that = this;\n\n    var preparedOptions = that._prepareToRender(drawOptions);\n\n    var isRotated = that._isRotated();\n\n    var isLegendInside = that._isLegendInside();\n\n    var trackerCanvases = [];\n    extend({}, that._canvas);\n    var argBusinessRange;\n    var zoomMinArg;\n    var zoomMaxArg;\n\n    that._renderer.lock();\n\n    if (drawOptions.drawLegend && that._legend) {\n      that._legendGroup.linkAppend();\n    }\n\n    that.layoutManager.setOptions(that._layoutManagerOptions());\n\n    var layoutTargets = that._getLayoutTargets();\n\n    this._layoutAxes(function (needSpace) {\n      var axisDrawOptions = needSpace ? extend({}, drawOptions, {\n        animate: false,\n        recreateCanvas: true\n      }) : drawOptions;\n\n      var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\n\n      that._shrinkAxes(needSpace, canvas);\n    });\n\n    that._applyClipRects(preparedOptions);\n\n    that._appendSeriesGroups();\n\n    that._createCrosshairCursor();\n\n    layoutTargets.forEach(function (_ref) {\n      var canvas = _ref.canvas;\n      trackerCanvases.push({\n        left: canvas.left,\n        right: canvas.width - canvas.right,\n        top: canvas.top,\n        bottom: canvas.height - canvas.bottom\n      });\n    });\n\n    if (that._scrollBar) {\n      argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\n\n      if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\n        zoomMinArg = zoomMaxArg = void 0;\n      } else {\n        zoomMinArg = argBusinessRange.minVisible;\n        zoomMaxArg = argBusinessRange.maxVisible;\n      }\n\n      that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg);\n    }\n\n    that._updateTracker(trackerCanvases);\n\n    that._updateLegendPosition(drawOptions, isLegendInside);\n\n    that._applyPointMarkersAutoHiding();\n\n    that._renderSeries(drawOptions, isRotated, isLegendInside);\n\n    that._renderer.unlock();\n  },\n  _updateLegendPosition: noop,\n  _createCrosshairCursor: noop,\n  _appendSeriesGroups: function _appendSeriesGroups() {\n    this._seriesGroup.linkAppend();\n\n    this._labelsGroup.linkAppend();\n\n    this._appendAdditionalSeriesGroups();\n  },\n  _renderSeries: function _renderSeries(drawOptions, isRotated, isLegendInside) {\n    this._calculateSeriesLayout(drawOptions, isRotated);\n\n    this._renderSeriesElements(drawOptions, isLegendInside);\n  },\n  _calculateSeriesLayout: function _calculateSeriesLayout(drawOptions, isRotated) {\n    drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\n\n    this._updateSeriesDimensions(drawOptions);\n  },\n  _getArgFilter: function _getArgFilter() {\n    return function () {\n      return true;\n    };\n  },\n  _getValFilter: function _getValFilter(series) {\n    return function () {\n      return true;\n    };\n  },\n  _getPointsToAnimation: function _getPointsToAnimation(series) {\n    var _this = this;\n\n    var argViewPortFilter = this._getArgFilter();\n\n    return series.map(function (s) {\n      var valViewPortFilter = _this._getValFilter(s);\n\n      return s.getPoints().filter(function (p) {\n        return p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)));\n      }).length;\n    });\n  },\n  _renderSeriesElements: function _renderSeriesElements(drawOptions, isLegendInside) {\n    var i;\n    var series = this.series;\n    var singleSeries;\n    var seriesLength = series.length;\n\n    var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\n\n    var pointsToAnimation = this._getPointsToAnimation(series);\n\n    for (i = 0; i < seriesLength; i++) {\n      singleSeries = series[i];\n\n      this._applyExtraSettings(singleSeries, drawOptions);\n\n      singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries));\n    }\n\n    if (\"none\" === resolveLabelOverlapping) {\n      this._adjustSeriesLabels(false);\n    } else {\n      this._locateLabels(resolveLabelOverlapping);\n    }\n\n    this._renderTrackers(isLegendInside);\n\n    this._tracker.repairTooltip();\n\n    this._renderExtraElements();\n\n    this._clearCanvas();\n\n    this._seriesElementsDrawn = true;\n  },\n  _changesApplied: function _changesApplied() {\n    if (this._seriesElementsDrawn) {\n      this._seriesElementsDrawn = false;\n\n      this._drawn();\n\n      this._renderCompleteHandler();\n    }\n  },\n  _locateLabels: function _locateLabels(resolveLabelOverlapping) {\n    this._resolveLabelOverlapping(resolveLabelOverlapping);\n  },\n  _renderExtraElements: function _renderExtraElements() {},\n  _clearCanvas: function _clearCanvas() {\n    this._canvas = this.__originalCanvas;\n  },\n  _resolveLabelOverlapping: function _resolveLabelOverlapping(resolveLabelOverlapping) {\n    var func;\n\n    switch (resolveLabelOverlapping) {\n      case \"stack\":\n        func = this._resolveLabelOverlappingStack;\n        break;\n\n      case \"hide\":\n        func = this._resolveLabelOverlappingHide;\n        break;\n\n      case \"shift\":\n        func = this._resolveLabelOverlappingShift;\n    }\n\n    return isFunction(func) && func.call(this);\n  },\n  _getVisibleSeries: function _getVisibleSeries() {\n    return grep(this.getAllSeries(), function (series) {\n      return series.isVisible();\n    });\n  },\n  _resolveLabelOverlappingHide: function _resolveLabelOverlappingHide() {\n    var labels = [];\n    var currentLabel;\n    var nextLabel;\n    var currentLabelRect;\n    var nextLabelRect;\n    var i;\n    var j;\n    var points;\n\n    var series = this._getVisibleSeries();\n\n    for (i = 0; i < series.length; i++) {\n      points = series[i].getVisiblePoints();\n\n      for (j = 0; j < points.length; j++) {\n        labels.push.apply(labels, points[j].getLabels());\n      }\n    }\n\n    for (i = 0; i < labels.length; i++) {\n      currentLabel = labels[i];\n\n      if (!currentLabel.isVisible()) {\n        continue;\n      }\n\n      currentLabelRect = currentLabel.getBoundingRect();\n\n      for (j = i + 1; j < labels.length; j++) {\n        nextLabel = labels[j];\n        nextLabelRect = nextLabel.getBoundingRect();\n\n        if (checkOverlapping(currentLabelRect, nextLabelRect)) {\n          nextLabel.draw(false);\n        }\n      }\n    }\n  },\n  _cleanGroups: function _cleanGroups() {\n    this._stripsGroup.linkRemove().clear();\n\n    this._gridGroup.linkRemove().clear();\n\n    this._axesGroup.linkRemove().clear();\n\n    this._constantLinesGroup.above.clear();\n\n    this._labelAxesGroup.linkRemove().clear();\n\n    this._labelsGroup.linkRemove().clear();\n\n    this._crosshairCursorGroup.linkRemove().clear();\n\n    this._scaleBreaksGroup.linkRemove().clear();\n  },\n  _allowLegendInsidePosition: function _allowLegendInsidePosition() {\n    return false;\n  },\n  _createLegend: function _createLegend() {\n    var legendSettings = getLegendSettings(this._legendDataField);\n    this._legend = new Legend({\n      renderer: this._renderer,\n      widget: this,\n      group: this._legendGroup,\n      backgroundClass: \"dxc-border\",\n      itemGroupClass: \"dxc-item\",\n      titleGroupClass: \"dxc-title\",\n      textField: legendSettings.textField,\n      getFormatObject: legendSettings.getFormatObject,\n      allowInsidePosition: this._allowLegendInsidePosition()\n    });\n\n    this._updateLegend();\n\n    this._layout.add(this._legend);\n  },\n  _updateLegend: function _updateLegend() {\n    var themeManager = this._themeManager;\n    var legendOptions = themeManager.getOptions(\"legend\");\n\n    var legendData = this._getLegendData();\n\n    legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\n    legendOptions._incidentOccurred = this._incidentOccurred;\n\n    this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\n\n    this._change([\"LAYOUT\"]);\n  },\n  _prepareDrawOptions: function _prepareDrawOptions(drawOptions) {\n    var animationOptions = this._getAnimationOptions();\n\n    var options = extend({}, {\n      force: false,\n      adjustAxes: true,\n      drawLegend: true,\n      drawTitle: true,\n      animate: animationOptions.enabled,\n      animationPointsLimit: animationOptions.maxPointCountSupported\n    }, drawOptions, this.__renderOptions);\n\n    if (!_isDefined(options.recreateCanvas)) {\n      options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle;\n    }\n\n    return options;\n  },\n  _processRefreshData: function _processRefreshData(newRefreshAction) {\n    var currentRefreshActionPosition = inArray(this._currentRefreshData, ACTIONS_BY_PRIORITY);\n    var newRefreshActionPosition = inArray(newRefreshAction, ACTIONS_BY_PRIORITY);\n\n    if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\n      this._currentRefreshData = newRefreshAction;\n    }\n\n    this._requestChange([\"REFRESH\"]);\n  },\n  _getLegendData: function _getLegendData() {\n    return _map(this._getLegendTargets(), function (item) {\n      var legendData = item.legendData;\n      var style = item.getLegendStyles;\n      var opacity = style.normal.opacity;\n\n      if (!item.visible) {\n        if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\n          opacity = DEFAULT_OPACITY;\n        }\n\n        legendData.textOpacity = DEFAULT_OPACITY;\n      }\n\n      var opacityStyle = {\n        opacity: opacity\n      };\n      legendData.states = {\n        hover: extend({}, style.hover, opacityStyle),\n        selection: extend({}, style.selection, opacityStyle),\n        normal: extend({}, style.normal, opacityStyle)\n      };\n      return legendData;\n    });\n  },\n  _getLegendOptions: function _getLegendOptions(item) {\n    return {\n      legendData: {\n        text: item[this._legendItemTextField],\n        id: item.index,\n        visible: true\n      },\n      getLegendStyles: item.getLegendStyles(),\n      visible: item.isVisible()\n    };\n  },\n  _disposeSeries: function _disposeSeries(seriesIndex) {\n    var _that$series;\n\n    if (this.series) {\n      if (_isDefined(seriesIndex)) {\n        this.series[seriesIndex].dispose();\n        this.series.splice(seriesIndex, 1);\n      } else {\n        _each(this.series, function (_, s) {\n          return s.dispose();\n        });\n\n        this.series.length = 0;\n      }\n    }\n\n    if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\n      this.series = [];\n    }\n  },\n  _disposeSeriesFamilies: function _disposeSeriesFamilies() {\n    _each(this.seriesFamilies || [], function (_, family) {\n      family.dispose();\n    });\n\n    this.seriesFamilies = null;\n    this._needHandleRenderComplete = true;\n  },\n  _optionChanged: function _optionChanged(arg) {\n    this._themeManager.resetOptions(arg.name);\n\n    this.callBase.apply(this, arguments);\n  },\n  _applyChanges: function _applyChanges() {\n    this._themeManager.update(this._options.silent());\n\n    this.callBase.apply(this, arguments);\n  },\n  _optionChangesMap: {\n    animation: \"ANIMATION\",\n    dataSource: \"DATA_SOURCE\",\n    palette: \"PALETTE\",\n    paletteExtensionMode: \"PALETTE\",\n    legend: \"FORCE_DATA_INIT\",\n    seriesTemplate: \"FORCE_DATA_INIT\",\n    export: \"FORCE_RENDER\",\n    valueAxis: \"AXES_AND_PANES\",\n    argumentAxis: \"AXES_AND_PANES\",\n    commonAxisSettings: \"AXES_AND_PANES\",\n    panes: \"AXES_AND_PANES\",\n    commonPaneSettings: \"AXES_AND_PANES\",\n    defaultPane: \"AXES_AND_PANES\",\n    containerBackgroundColor: \"AXES_AND_PANES\",\n    rotated: \"ROTATED\",\n    autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\n    customizePoint: \"REFRESH_SERIES_REINIT\",\n    customizeLabel: \"REFRESH_SERIES_REINIT\",\n    scrollBar: \"SCROLL_BAR\"\n  },\n  _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\n  _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\n  _change_ANIMATION: function _change_ANIMATION() {\n    this._renderer.updateAnimationOptions(this._getAnimationOptions());\n  },\n  _change_DATA_SOURCE: function _change_DATA_SOURCE() {\n    this._needHandleRenderComplete = true;\n\n    this._updateDataSource();\n  },\n  _change_PALETTE: function _change_PALETTE() {\n    this._themeManager.updatePalette();\n\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_REFRESH_SERIES_DATA_INIT: function _change_REFRESH_SERIES_DATA_INIT() {\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_DATA_INIT: function _change_DATA_INIT() {\n    if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\n      this._dataInit();\n    }\n  },\n  _change_FORCE_DATA_INIT: function _change_FORCE_DATA_INIT() {\n    this._dataInit();\n  },\n  _change_REFRESH_SERIES_FAMILIES: function _change_REFRESH_SERIES_FAMILIES() {\n    this._processSeriesFamilies();\n\n    this._populateBusinessRange();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_FORCE_RENDER: function _change_FORCE_RENDER() {\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_AXES_AND_PANES: function _change_AXES_AND_PANES() {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_ROTATED: function _change_ROTATED() {\n    this._createScrollBar();\n\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_SERIES_REINIT: function _change_REFRESH_SERIES_REINIT() {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_AXES: function _change_REFRESH_AXES() {\n    _setCanvasValues(this._canvas);\n\n    this._reinitAxes();\n\n    this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n  _change_SCROLL_BAR: function _change_SCROLL_BAR() {\n    this._createScrollBar();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_REINIT: function _change_REINIT() {\n    this._processRefreshData(REINIT_REFRESH_ACTION);\n  },\n  _change_FORCE_DRAWING: function _change_FORCE_DRAWING() {\n    this._resetComponentsAnimation();\n  },\n  _change_FORCE_FIRST_DRAWING: function _change_FORCE_FIRST_DRAWING() {\n    this._resetComponentsAnimation(true);\n  },\n  _resetComponentsAnimation: function _resetComponentsAnimation(isFirstDrawing) {\n    this.series.forEach(function (s) {\n      s.resetApplyingAnimation(isFirstDrawing);\n    });\n\n    this._resetAxesAnimation(isFirstDrawing);\n  },\n  _resetAxesAnimation: noop,\n  _refreshSeries: function _refreshSeries(actionName) {\n    this.needToPopulateSeries = true;\n\n    this._requestChange([actionName]);\n  },\n  _change_CORRECT_AXIS: function _change_CORRECT_AXIS() {\n    this._correctAxes();\n  },\n  _doRefresh: function _doRefresh() {\n    var methodName = this._currentRefreshData;\n\n    if (methodName) {\n      this._currentRefreshData = null;\n\n      this._renderer.stopAllAnimations(true);\n\n      this[methodName]();\n    }\n  },\n  _updateCanvasClipRect: function _updateCanvasClipRect(canvas) {\n    var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\n    var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\n\n    this._canvasClipRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n\n    this._backgroundRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n  },\n  _getCanvasClipRectID: function _getCanvasClipRectID() {\n    return this._canvasClipRect.id;\n  },\n  _dataSourceChangedHandler: function _dataSourceChangedHandler() {\n    if (this._changes.has(\"INIT\")) {\n      this._requestChange([\"DATA_INIT\"]);\n    } else {\n      this._requestChange([\"FORCE_DATA_INIT\"]);\n    }\n  },\n  _dataInit: function _dataInit() {\n    this._dataSpecificInit(true);\n  },\n  _processSingleSeries: function _processSingleSeries(singleSeries) {\n    singleSeries.createPoints(false);\n  },\n  _handleSeriesDataUpdated: function _handleSeriesDataUpdated() {\n    var _this2 = this;\n\n    if (this._getVisibleSeries().some(function (s) {\n      return s.useAggregation();\n    })) {\n      this._populateMarginOptions();\n    }\n\n    this.series.forEach(function (s) {\n      return _this2._processSingleSeries(s);\n    }, this);\n  },\n  _dataSpecificInit: function _dataSpecificInit(needRedraw) {\n    if (!this.series || this.needToPopulateSeries) {\n      this.series = this._populateSeries();\n    }\n\n    this._repopulateSeries();\n\n    this._seriesPopulatedHandlerCore();\n\n    this._populateBusinessRange();\n\n    this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\n\n    this._updateLegend();\n\n    if (needRedraw) {\n      this._requestChange([\"FULL_RENDER\"]);\n    }\n  },\n  _forceRender: function _forceRender() {\n    this._doRender({\n      force: true\n    });\n  },\n  _repopulateSeries: function _repopulateSeries() {\n    var themeManager = this._themeManager;\n\n    var data = this._dataSourceItems();\n\n    var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n\n    if (seriesTemplate) {\n      this._populateSeries(data);\n    }\n\n    this._groupSeries();\n\n    var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\n    themeManager.resetPalette();\n    this.series.forEach(function (singleSeries) {\n      singleSeries.updateData(parsedData[singleSeries.getArgumentField()]);\n    });\n\n    this._handleSeriesDataUpdated();\n  },\n  _renderCompleteHandler: function _renderCompleteHandler() {\n    var allSeriesInited = true;\n\n    if (this._needHandleRenderComplete) {\n      _each(this.series, function (_, s) {\n        allSeriesInited = allSeriesInited && s.canRenderCompleteHandle();\n      });\n\n      if (allSeriesInited) {\n        this._needHandleRenderComplete = false;\n\n        this._eventTrigger(\"done\", {\n          target: this\n        });\n      }\n    }\n  },\n  _dataIsReady: function _dataIsReady() {\n    return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded();\n  },\n  _populateSeriesOptions: function _populateSeriesOptions(data) {\n    var that = this;\n    var themeManager = that._themeManager;\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n    var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\n    var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\n\n    var extraOptions = that._getExtraOptions();\n\n    var particularSeriesOptions;\n    var seriesTheme;\n    var seriesThemes = [];\n\n    var seriesVisibilityChanged = function seriesVisibilityChanged(target) {\n      that._specialProcessSeries();\n\n      that._populateBusinessRange(target && target.getValueAxis(), true);\n\n      that._renderer.stopAllAnimations(true);\n\n      that._updateLegend();\n\n      that._requestChange([\"FULL_RENDER\"]);\n    };\n\n    for (var i = 0; i < allSeriesOptions.length; i++) {\n      particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\n\n      if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\n        particularSeriesOptions.name = \"Series \" + (i + 1).toString();\n      }\n\n      particularSeriesOptions.rotated = that._isRotated();\n      particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\n      particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\n      particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\n      particularSeriesOptions.incidentOccurred = that._incidentOccurred;\n      seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\n\n      if (that._checkPaneName(seriesTheme)) {\n        seriesThemes.push(seriesTheme);\n      }\n    }\n\n    return seriesThemes;\n  },\n  _populateSeries: function _populateSeries(data) {\n    var that = this;\n    var seriesBasis = [];\n    var incidentOccurred = that._incidentOccurred;\n\n    var seriesThemes = that._populateSeriesOptions(data);\n\n    var particularSeries;\n    var disposeSeriesFamilies = false;\n    that.needToPopulateSeries = false;\n\n    _each(seriesThemes, function (_, theme) {\n      var curSeries = that.series && that.series.filter(function (s) {\n        return s.name === theme.name && -1 === seriesBasis.map(function (sb) {\n          return sb.series;\n        }).indexOf(s);\n      })[0];\n\n      if (curSeries && curSeries.type === theme.type) {\n        seriesBasis.push({\n          series: curSeries,\n          options: theme\n        });\n      } else {\n        seriesBasis.push({\n          options: theme\n        });\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    that._tracker.clearHover();\n\n    _reverseEach(that.series, function (index, series) {\n      if (!seriesBasis.some(function (s) {\n        return series === s.series;\n      })) {\n        that._disposeSeries(index);\n\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(function (sb) {\n      return sb.series.name !== seriesThemes[sb.series.index].name;\n    }));\n    that.series = [];\n    disposeSeriesFamilies && that._disposeSeriesFamilies();\n\n    that._themeManager.resetPalette();\n\n    var eventPipe = function eventPipe(data) {\n      that.series.forEach(function (currentSeries) {\n        currentSeries.notify(data);\n      });\n    };\n\n    _each(seriesBasis, function (_, basis) {\n      var seriesTheme = basis.options;\n      var renderSettings = {\n        commonSeriesModes: that._getSelectionModes(),\n        argumentAxis: that.getArgumentAxis(),\n        valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\n      };\n\n      if (basis.series) {\n        particularSeries = basis.series;\n        particularSeries.updateOptions(seriesTheme, renderSettings);\n      } else {\n        particularSeries = new Series(extend({\n          renderer: that._renderer,\n          seriesGroup: that._seriesGroup,\n          labelsGroup: that._labelsGroup,\n          eventTrigger: that._eventTrigger,\n          eventPipe: eventPipe,\n          incidentOccurred: incidentOccurred\n        }, renderSettings), seriesTheme);\n      }\n\n      if (!particularSeries.isUpdated) {\n        incidentOccurred(\"E2101\", [seriesTheme.type]);\n      } else {\n        particularSeries.index = that.series.length;\n        that.series.push(particularSeries);\n      }\n    });\n\n    return that.series;\n  },\n  getStackedPoints: function getStackedPoints(point) {\n    var stackName = point.series.getStackName();\n    return this._getVisibleSeries().reduce(function (stackPoints, series) {\n      if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\n        stackPoints = stackPoints.concat(series.getPointsByArg(point.argument));\n      }\n\n      return stackPoints;\n    }, []);\n  },\n  getAllSeries: function getAllSeries() {\n    return (this.series || []).slice();\n  },\n  getSeriesByName: function getSeriesByName(name) {\n    var found = null;\n\n    _each(this.series, function (i, singleSeries) {\n      if (singleSeries.name === name) {\n        found = singleSeries;\n        return false;\n      }\n    });\n\n    return found;\n  },\n  getSeriesByPos: function getSeriesByPos(pos) {\n    return (this.series || [])[pos];\n  },\n  clearSelection: function clearSelection() {\n    this._tracker.clearSelection();\n  },\n  hideTooltip: function hideTooltip() {\n    this._tracker._hideTooltip();\n  },\n  clearHover: function clearHover() {\n    this._tracker.clearHover();\n  },\n  render: function render(renderOptions) {\n    var that = this;\n    that.__renderOptions = renderOptions;\n    that.__forceRender = renderOptions && renderOptions.force;\n    that.callBase.apply(that, arguments);\n    that.__renderOptions = that.__forceRender = null;\n    return that;\n  },\n  refresh: function refresh() {\n    this._disposeSeries();\n\n    this._disposeSeriesFamilies();\n\n    this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"]);\n  },\n  _getMinSize: function _getMinSize() {\n    var adaptiveLayout = this._layoutManagerOptions();\n\n    return [adaptiveLayout.width, adaptiveLayout.height];\n  },\n  _change_REFRESH: function _change_REFRESH() {\n    if (!this._changes.has(\"INIT\")) {\n      this._doRefresh();\n    } else {\n      this._currentRefreshData = null;\n    }\n  },\n  _change_FULL_RENDER: function _change_FULL_RENDER() {\n    this._forceRender();\n  },\n  _change_INIT: function _change_INIT() {\n    this._reinit();\n  },\n  _stopCurrentHandling: function _stopCurrentHandling() {\n    this._tracker.stopCurrentHandling();\n  }\n});\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\";\n});\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\";\n});\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\";\n});\nimport { plugin as exportPlugin } from \"../core/export\";\nimport { plugin as titlePlugin } from \"../core/title\";\nimport { plugin as dataSourcePlugin } from \"../core/data_source\";\nimport { plugin as tooltipPlugin } from \"../core/tooltip\";\nimport { plugin as loadingIndicatorPlugin } from \"../core/loading_indicator\";\nBaseChart.addPlugin(exportPlugin);\nBaseChart.addPlugin(titlePlugin);\nBaseChart.addPlugin(dataSourcePlugin);\nBaseChart.addPlugin(tooltipPlugin);\nBaseChart.addPlugin(loadingIndicatorPlugin);\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\n\nBaseChart.prototype._change_TITLE = function () {\n  _change_TITLE.apply(this, arguments);\n\n  this._change([\"FORCE_RENDER\"]);\n};","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/chart_components/base_chart.js"],"names":["noop","grep","eventsEngine","isDefined","_isDefined","isFunction","each","_each","reverseEach","_reverseEach","extend","inArray","isTouchEvent","isPointerEvent","BaseWidget","Legend","validateData","Series","ThemeManager","LayoutManager","trackerModule","map","_map","setCanvasValues","_setCanvasValues","processSeriesTemplate","_isArray","Array","isArray","REINIT_REFRESH_ACTION","REINIT_DATA_SOURCE_REFRESH_ACTION","DATA_INIT_REFRESH_ACTION","FORCE_RENDER_REFRESH_ACTION","RESIZE_REFRESH_ACTION","ACTIONS_BY_PRIORITY","DEFAULT_OPACITY","REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS","REFRESH_SERIES_FAMILIES_ACTION_OPTIONS","FORCE_RENDER_REFRESH_ACTION_OPTIONS","FONT","checkHeightRollingStock","rollingStocks","stubCanvas","canvasSize","end","start","size","forEach","rollingStock","getBoundingRect","width","findAndKillSmallValue","smallestObject","reduce","prev","index","value","getLabels","draw","checkStackOverlap","i","j","iLength","jLength","overlap","length","checkStacksOverlapping","resolveLabelOverlappingInOneDirection","points","canvas","isRotated","shiftFunction","customSorting","arguments","left","top","right","height","bottom","hasStackedSeries","p","series","isStackedSeries","isFullStackedSeries","l","isVisible","push","RollingStock","reverse","rollingStocksTmp","slice","sort","a","b","getInitialPosition","indexOf","prepareOverlapStacks","moveRollingStock","firstRolling","secondRolling","inTwoSides","firstRect","secondRect","oppositeOverlapping","oppositeStart","oppositeEnd","currentRollingStock","root","toChain","nextRollingStock","currentBBox","nextBBox","rollingStocksIsOut","setRollingStockInCanvas","label","bBox","x","y","endX","endY","labels","_bBox","_initialPosition","prototype","nextRollingStockBBox","shift","_changeBoxWidth","concat","shiftLength","coords","hideInsideLabel","getData","getLegendFields","name","nameField","colorField","indexField","getLegendSettings","legendDataField","formatObjectFields","getFormatObject","data","res","id","states","normal","fill","text","textField","checkOverlapping","overlapping","BaseChart","inherit","_eventsMap","onSeriesClick","onPointClick","onArgumentAxisClick","onLegendClick","onSeriesSelectionChanged","onPointSelectionChanged","onSeriesHoverChanged","onPointHoverChanged","onDone","onZoomStart","onZoomEnd","_fontFields","_rootClassPrefix","_rootClass","_initialChanges","_themeDependentChanges","_getThemeManagerOptions","themeOptions","callBase","apply","options","option","_createThemeManager","chartOption","themeManager","setTheme","theme","rtlEnabled","_initCore","_canvasClipRect","_renderer","clipRect","_createHtmlStructure","_createLegend","_createTracker","_needHandleRenderComplete","layoutManager","_createScrollBar","on","_$element","event","preventDefault","_getLayoutItems","_layoutManagerOptions","_themeManager","getOptions","_reinit","_canvas","_reinitAxes","_requestChange","_correctAxes","renderer","createConstantLinesGroup","g","attr","class","linkOn","_constantLinesGroup","dispose","under","above","linkOff","clear","linkRemove","linkAppend","_backgroundRect","rect","opacity","append","_panesBackgroundGroup","_stripsGroup","_gridGroup","_panesBorderGroup","_axesGroup","_labelAxesGroup","_seriesGroup","_scaleBreaksGroup","_labelsGroup","_crosshairCursorGroup","_legendGroup","_getCanvasClipRectID","enableLinks","_scrollBarGroup","_disposeObjectsInArray","propName","fieldNames","_","item","field","_disposeCore","that","disposeObject","unlinkGroup","disposeObjectsInArray","stopAllAnimations","call","_userOptions","_groupsData","_getAnimationOptions","_getDefaultSize","_getOption","_applySize","_rect","_changes","has","_processRefreshData","_resize","_doRender","__renderOptions","animate","isResize","_trackerType","_tracker","seriesGroup","tooltip","_tooltip","legend","_legend","eventTrigger","_eventTrigger","_getTrackerSettings","chart","_getSelectionModes","seriesSelectionMode","pointSelectionMode","_updateTracker","trackerCanvases","update","setCanvases","_createCanvasFromRect","currentCanvas","_options","_resetIsReady","drawOptions","_prepareDrawOptions","recreateCanvas","_preserveOriginalCanvas","__currentCanvas","_updateCanvasClipRect","_cleanGroups","startTime","Date","_renderElements","_lastRenderingTime","__originalCanvas","_layoutAxes","preparedOptions","_prepareToRender","_isRotated","isLegendInside","_isLegendInside","argBusinessRange","zoomMinArg","zoomMaxArg","lock","drawLegend","setOptions","layoutTargets","_getLayoutTargets","needSpace","axisDrawOptions","_renderAxes","_shrinkAxes","_applyClipRects","_appendSeriesGroups","_createCrosshairCursor","_ref","_scrollBar","_argumentAxes","getTranslator","getBusinessRange","axisType","categories","min","max","minVisible","maxVisible","init","valueMarginsEnabled","setPosition","_updateLegendPosition","_applyPointMarkersAutoHiding","_renderSeries","unlock","_appendAdditionalSeriesGroups","_calculateSeriesLayout","_renderSeriesElements","hideLayoutLabels","needMoreSpaceForPanesCanvas","keepLabels","_updateSeriesDimensions","_getArgFilter","_getValFilter","_getPointsToAnimation","argViewPortFilter","s","valViewPortFilter","getPoints","filter","visible","argument","getMinValue","getMaxValue","singleSeries","seriesLength","resolveLabelOverlapping","pointsToAnimation","_applyExtraSettings","animationPointsLimit","animationEnabled","_getLegendCallBack","_adjustSeriesLabels","_locateLabels","_renderTrackers","repairTooltip","_renderExtraElements","_clearCanvas","_seriesElementsDrawn","_changesApplied","_drawn","_renderCompleteHandler","_resolveLabelOverlapping","func","_resolveLabelOverlappingStack","_resolveLabelOverlappingHide","_resolveLabelOverlappingShift","_getVisibleSeries","getAllSeries","currentLabel","nextLabel","currentLabelRect","nextLabelRect","getVisiblePoints","_allowLegendInsidePosition","legendSettings","_legendDataField","widget","group","backgroundClass","itemGroupClass","titleGroupClass","allowInsidePosition","_updateLegend","_layout","add","legendOptions","legendData","_getLegendData","containerBackgroundColor","_incidentOccurred","title","_change","animationOptions","force","adjustAxes","drawTitle","enabled","maxPointCountSupported","newRefreshAction","currentRefreshActionPosition","_currentRefreshData","newRefreshActionPosition","_getLegendTargets","style","getLegendStyles","textOpacity","opacityStyle","hover","selection","_getLegendOptions","_legendItemTextField","_disposeSeries","seriesIndex","_that$series","splice","_disposeSeriesFamilies","seriesFamilies","family","_optionChanged","arg","resetOptions","_applyChanges","silent","_optionChangesMap","animation","dataSource","palette","paletteExtensionMode","seriesTemplate","export","valueAxis","argumentAxis","commonAxisSettings","panes","commonPaneSettings","defaultPane","rotated","autoHidePointMarkers","customizePoint","customizeLabel","scrollBar","_optionChangesOrder","_customChangesOrder","_change_ANIMATION","updateAnimationOptions","_change_DATA_SOURCE","_updateDataSource","_change_PALETTE","updatePalette","_refreshSeries","_change_REFRESH_SERIES_DATA_INIT","_change_DATA_INIT","needToPopulateSeries","_dataInit","_change_FORCE_DATA_INIT","_change_REFRESH_SERIES_FAMILIES","_processSeriesFamilies","_populateBusinessRange","_change_FORCE_RENDER","_change_AXES_AND_PANES","_change_ROTATED","_change_REFRESH_SERIES_REINIT","_change_REFRESH_AXES","_change_SCROLL_BAR","_change_REINIT","_change_FORCE_DRAWING","_resetComponentsAnimation","_change_FORCE_FIRST_DRAWING","isFirstDrawing","resetApplyingAnimation","_resetAxesAnimation","actionName","_change_CORRECT_AXIS","_doRefresh","methodName","Math","_dataSourceChangedHandler","_dataSpecificInit","_processSingleSeries","createPoints","_handleSeriesDataUpdated","some","useAggregation","_populateMarginOptions","needRedraw","_populateSeries","_repopulateSeries","_seriesPopulatedHandlerCore","updateSeries","_forceRender","_dataSourceItems","dataValidatorOptions","_groupSeries","parsedData","resetPalette","updateData","getArgumentField","allSeriesInited","canRenderCompleteHandle","target","_dataIsReady","_dataIsLoaded","_populateSeriesOptions","seriesOptions","allSeriesOptions","extraOptions","_getExtraOptions","particularSeriesOptions","seriesTheme","seriesThemes","seriesVisibilityChanged","_specialProcessSeries","getValueAxis","toString","visibilityChanged","incidentOccurred","_checkPaneName","seriesBasis","particularSeries","disposeSeriesFamilies","curSeries","sb","type","clearHover","eventPipe","currentSeries","notify","basis","renderSettings","commonSeriesModes","getArgumentAxis","_getValueAxis","pane","axis","updateOptions","labelsGroup","isUpdated","getStackedPoints","point","stackName","getStackName","stackPoints","getPointsByArg","getSeriesByName","found","getSeriesByPos","pos","clearSelection","hideTooltip","_hideTooltip","render","renderOptions","__forceRender","refresh","_getMinSize","adaptiveLayout","_change_REFRESH","_change_FULL_RENDER","_change_INIT","_stopCurrentHandling","stopCurrentHandling","plugin","exportPlugin","titlePlugin","dataSourcePlugin","tooltipPlugin","loadingIndicatorPlugin","addPlugin","_change_TITLE"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop,\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined as _isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each as _each,\r\n    reverseEach as _reverseEach\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isTouchEvent,\r\n    isPointerEvent\r\n} from \"../../events/utils/index\";\r\nimport BaseWidget from \"../core/base_widget\";\r\nimport {\r\n    Legend\r\n} from \"../components/legend\";\r\nimport {\r\n    validateData\r\n} from \"../components/data_validator\";\r\nimport {\r\n    Series\r\n} from \"../series/base_series\";\r\nimport {\r\n    ThemeManager\r\n} from \"../components/chart_theme_manager\";\r\nimport {\r\n    LayoutManager\r\n} from \"./layout_manager\";\r\nimport * as trackerModule from \"./tracker\";\r\nimport {\r\n    map as _map,\r\n    setCanvasValues as _setCanvasValues,\r\n    processSeriesTemplate\r\n} from \"../core/utils\";\r\nvar _isArray = Array.isArray;\r\nvar REINIT_REFRESH_ACTION = \"_reinit\";\r\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\r\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\r\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\r\nvar RESIZE_REFRESH_ACTION = \"_resize\";\r\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\r\nvar DEFAULT_OPACITY = .3;\r\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\r\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\r\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\r\nvar FONT = \"font\";\r\n\r\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\r\n    var canvasSize = stubCanvas.end - stubCanvas.start;\r\n    var size = 0;\r\n    rollingStocks.forEach((function(rollingStock) {\r\n        size += rollingStock.getBoundingRect().width\r\n    }));\r\n    while (canvasSize < size) {\r\n        size -= findAndKillSmallValue(rollingStocks)\r\n    }\r\n}\r\n\r\nfunction findAndKillSmallValue(rollingStocks) {\r\n    var smallestObject = rollingStocks.reduce((function(prev, rollingStock, index) {\r\n        if (!rollingStock) {\r\n            return prev\r\n        }\r\n        var value = rollingStock.value();\r\n        return value < prev.value ? {\r\n            value: value,\r\n            rollingStock: rollingStock,\r\n            index: index\r\n        } : prev\r\n    }), {\r\n        rollingStock: void 0,\r\n        value: 1 / 0,\r\n        index: void 0\r\n    });\r\n    smallestObject.rollingStock.getLabels()[0].draw(false);\r\n    var width = smallestObject.rollingStock.getBoundingRect().width;\r\n    rollingStocks[smallestObject.index] = null;\r\n    return width\r\n}\r\n\r\nfunction checkStackOverlap(rollingStocks) {\r\n    var i;\r\n    var j;\r\n    var iLength;\r\n    var jLength;\r\n    var overlap = false;\r\n    for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\r\n        for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\r\n            if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\r\n                overlap = true;\r\n                break\r\n            }\r\n        }\r\n        if (overlap) {\r\n            break\r\n        }\r\n    }\r\n    return overlap\r\n}\r\n\r\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, shiftFunction) {\r\n    var customSorting = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : () => 0;\r\n    var rollingStocks = [];\r\n    var stubCanvas = {\r\n        start: isRotated ? canvas.left : canvas.top,\r\n        end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n    };\r\n    var hasStackedSeries = false;\r\n    points.forEach((function(p) {\r\n        if (!p) {\r\n            return\r\n        }\r\n        hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\r\n        p.getLabels().forEach((function(l) {\r\n            l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction))\r\n        }))\r\n    }));\r\n    if (hasStackedSeries) {\r\n        !isRotated && rollingStocks.reverse()\r\n    } else {\r\n        var rollingStocksTmp = rollingStocks.slice();\r\n        rollingStocks.sort((function(a, b) {\r\n            return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b)\r\n        }))\r\n    }\r\n    if (!checkStackOverlap(rollingStocks)) {\r\n        return false\r\n    }\r\n    checkHeightRollingStock(rollingStocks, stubCanvas);\r\n    prepareOverlapStacks(rollingStocks);\r\n    rollingStocks.reverse();\r\n    moveRollingStock(rollingStocks, stubCanvas);\r\n    return true\r\n}\r\n\r\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\r\n    if (!firstRolling || !secondRolling) {\r\n        return\r\n    }\r\n    var firstRect = firstRolling.getBoundingRect();\r\n    var secondRect = secondRolling.getBoundingRect();\r\n    var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\r\n    return firstRect.end > secondRect.start && oppositeOverlapping\r\n}\r\n\r\nfunction prepareOverlapStacks(rollingStocks) {\r\n    var i;\r\n    var currentRollingStock;\r\n    var root;\r\n    for (i = 0; i < rollingStocks.length - 1; i++) {\r\n        currentRollingStock = root || rollingStocks[i];\r\n        if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\r\n            currentRollingStock.toChain(rollingStocks[i + 1]);\r\n            rollingStocks[i + 1] = null;\r\n            root = currentRollingStock\r\n        } else {\r\n            root = rollingStocks[i + 1] || currentRollingStock\r\n        }\r\n    }\r\n}\r\n\r\nfunction moveRollingStock(rollingStocks, canvas) {\r\n    var i;\r\n    var j;\r\n    var currentRollingStock;\r\n    var nextRollingStock;\r\n    var currentBBox;\r\n    var nextBBox;\r\n    for (i = 0; i < rollingStocks.length; i++) {\r\n        currentRollingStock = rollingStocks[i];\r\n        if (rollingStocksIsOut(currentRollingStock, canvas)) {\r\n            currentBBox = currentRollingStock.getBoundingRect();\r\n            for (j = i + 1; j < rollingStocks.length; j++) {\r\n                nextRollingStock = rollingStocks[j];\r\n                if (!nextRollingStock) {\r\n                    continue\r\n                }\r\n                nextBBox = nextRollingStock.getBoundingRect();\r\n                if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\r\n                    nextRollingStock.toChain(currentRollingStock);\r\n                    rollingStocks[i] = currentRollingStock = null;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas)\r\n    }\r\n}\r\n\r\nfunction rollingStocksIsOut(rollingStock, canvas) {\r\n    return rollingStock && rollingStock.getBoundingRect().end > canvas.end\r\n}\r\n\r\nfunction RollingStock(label, isRotated, shiftFunction) {\r\n    var bBox = label.getBoundingRect();\r\n    var x = bBox.x;\r\n    var y = bBox.y;\r\n    var endX = bBox.x + bBox.width;\r\n    var endY = bBox.y + bBox.height;\r\n    this.labels = [label];\r\n    this.shiftFunction = shiftFunction;\r\n    this._bBox = {\r\n        start: isRotated ? x : y,\r\n        width: isRotated ? bBox.width : bBox.height,\r\n        end: isRotated ? endX : endY,\r\n        oppositeStart: isRotated ? y : x,\r\n        oppositeEnd: isRotated ? endY : endX\r\n    };\r\n    this._initialPosition = isRotated ? bBox.x : bBox.y;\r\n    return this\r\n}\r\nRollingStock.prototype = {\r\n    toChain: function(nextRollingStock) {\r\n        var nextRollingStockBBox = nextRollingStock.getBoundingRect();\r\n        nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\r\n        this._changeBoxWidth(nextRollingStockBBox.width);\r\n        this.labels = this.labels.concat(nextRollingStock.labels)\r\n    },\r\n    getBoundingRect: function() {\r\n        return this._bBox\r\n    },\r\n    shift: function(shiftLength) {\r\n        var shiftFunction = this.shiftFunction;\r\n        _each(this.labels, (function(index, label) {\r\n            var bBox = label.getBoundingRect();\r\n            var coords = shiftFunction(bBox, shiftLength);\r\n            if (!label.hideInsideLabel(coords)) {\r\n                label.shift(coords.x, coords.y)\r\n            }\r\n        }));\r\n        this._bBox.end -= shiftLength;\r\n        this._bBox.start -= shiftLength\r\n    },\r\n    setRollingStockInCanvas: function(canvas) {\r\n        if (this._bBox.end > canvas.end) {\r\n            this.shift(this._bBox.end - canvas.end)\r\n        }\r\n    },\r\n    getLabels: function() {\r\n        return this.labels\r\n    },\r\n    value() {\r\n        return this.labels[0].getData().value\r\n    },\r\n    getInitialPosition: function() {\r\n        return this._initialPosition\r\n    },\r\n    _changeBoxWidth: function(width) {\r\n        this._bBox.end += width;\r\n        this._bBox.width += width\r\n    }\r\n};\r\n\r\nfunction getLegendFields(name) {\r\n    return {\r\n        nameField: name + \"Name\",\r\n        colorField: name + \"Color\",\r\n        indexField: name + \"Index\"\r\n    }\r\n}\r\n\r\nfunction getLegendSettings(legendDataField) {\r\n    var formatObjectFields = getLegendFields(legendDataField);\r\n    return {\r\n        getFormatObject: function(data) {\r\n            var res = {};\r\n            res[formatObjectFields.indexField] = data.id;\r\n            res[formatObjectFields.colorField] = data.states.normal.fill;\r\n            res[formatObjectFields.nameField] = data.text;\r\n            return res\r\n        },\r\n        textField: formatObjectFields.nameField\r\n    }\r\n}\r\n\r\nfunction checkOverlapping(firstRect, secondRect) {\r\n    return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height)\r\n}\r\nexport var overlapping = {\r\n    resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\r\n};\r\nexport var BaseChart = BaseWidget.inherit({\r\n    _eventsMap: {\r\n        onSeriesClick: {\r\n            name: \"seriesClick\"\r\n        },\r\n        onPointClick: {\r\n            name: \"pointClick\"\r\n        },\r\n        onArgumentAxisClick: {\r\n            name: \"argumentAxisClick\"\r\n        },\r\n        onLegendClick: {\r\n            name: \"legendClick\"\r\n        },\r\n        onSeriesSelectionChanged: {\r\n            name: \"seriesSelectionChanged\"\r\n        },\r\n        onPointSelectionChanged: {\r\n            name: \"pointSelectionChanged\"\r\n        },\r\n        onSeriesHoverChanged: {\r\n            name: \"seriesHoverChanged\"\r\n        },\r\n        onPointHoverChanged: {\r\n            name: \"pointHoverChanged\"\r\n        },\r\n        onDone: {\r\n            name: \"done\"\r\n        },\r\n        onZoomStart: {\r\n            name: \"zoomStart\"\r\n        },\r\n        onZoomEnd: {\r\n            name: \"zoomEnd\"\r\n        }\r\n    },\r\n    _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\r\n    _rootClassPrefix: \"dxc\",\r\n    _rootClass: \"dxc-chart\",\r\n    _initialChanges: [\"INIT\"],\r\n    _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\r\n    _getThemeManagerOptions() {\r\n        var themeOptions = this.callBase.apply(this, arguments);\r\n        themeOptions.options = this.option();\r\n        return themeOptions\r\n    },\r\n    _createThemeManager: function() {\r\n        var chartOption = this.option();\r\n        var themeManager = new ThemeManager(this._getThemeManagerOptions());\r\n        themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\r\n        return themeManager\r\n    },\r\n    _initCore: function() {\r\n        this._canvasClipRect = this._renderer.clipRect();\r\n        this._createHtmlStructure();\r\n        this._createLegend();\r\n        this._createTracker();\r\n        this._needHandleRenderComplete = true;\r\n        this.layoutManager = new LayoutManager;\r\n        this._createScrollBar();\r\n        eventsEngine.on(this._$element, \"contextmenu\", (function(event) {\r\n            if (isTouchEvent(event) || isPointerEvent(event)) {\r\n                event.preventDefault()\r\n            }\r\n        }));\r\n        eventsEngine.on(this._$element, \"MSHoldVisual\", (function(event) {\r\n            event.preventDefault()\r\n        }))\r\n    },\r\n    _getLayoutItems: noop,\r\n    _layoutManagerOptions: function() {\r\n        return this._themeManager.getOptions(\"adaptiveLayout\")\r\n    },\r\n    _reinit() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _correctAxes: noop,\r\n    _createHtmlStructure: function() {\r\n        var renderer = this._renderer;\r\n        var root = renderer.root;\r\n        var createConstantLinesGroup = function() {\r\n            return renderer.g().attr({\r\n                class: \"dxc-constant-lines-group\"\r\n            }).linkOn(root, \"constant-lines\")\r\n        };\r\n        this._constantLinesGroup = {\r\n            dispose: function() {\r\n                this.under.dispose();\r\n                this.above.dispose()\r\n            },\r\n            linkOff: function() {\r\n                this.under.linkOff();\r\n                this.above.linkOff()\r\n            },\r\n            clear: function() {\r\n                this.under.linkRemove().clear();\r\n                this.above.linkRemove().clear()\r\n            },\r\n            linkAppend: function() {\r\n                this.under.linkAppend();\r\n                this.above.linkAppend()\r\n            }\r\n        };\r\n        this._backgroundRect = renderer.rect().attr({\r\n            fill: \"gray\",\r\n            opacity: 1e-4\r\n        }).append(root);\r\n        this._panesBackgroundGroup = renderer.g().attr({\r\n            class: \"dxc-background\"\r\n        }).append(root);\r\n        this._stripsGroup = renderer.g().attr({\r\n            class: \"dxc-strips-group\"\r\n        }).linkOn(root, \"strips\");\r\n        this._gridGroup = renderer.g().attr({\r\n            class: \"dxc-grids-group\"\r\n        }).linkOn(root, \"grids\");\r\n        this._panesBorderGroup = renderer.g().attr({\r\n            class: \"dxc-border\"\r\n        }).linkOn(root, \"border\");\r\n        this._axesGroup = renderer.g().attr({\r\n            class: \"dxc-axes-group\"\r\n        }).linkOn(root, \"axes\");\r\n        this._labelAxesGroup = renderer.g().attr({\r\n            class: \"dxc-strips-labels-group\"\r\n        }).linkOn(root, \"strips-labels\");\r\n        this._constantLinesGroup.under = createConstantLinesGroup();\r\n        this._seriesGroup = renderer.g().attr({\r\n            class: \"dxc-series-group\"\r\n        }).linkOn(root, \"series\");\r\n        this._constantLinesGroup.above = createConstantLinesGroup();\r\n        this._scaleBreaksGroup = renderer.g().attr({\r\n            class: \"dxc-scale-breaks\"\r\n        }).linkOn(root, \"scale-breaks\");\r\n        this._labelsGroup = renderer.g().attr({\r\n            class: \"dxc-labels-group\"\r\n        }).linkOn(root, \"labels\");\r\n        this._crosshairCursorGroup = renderer.g().attr({\r\n            class: \"dxc-crosshair-cursor\"\r\n        }).linkOn(root, \"crosshair\");\r\n        this._legendGroup = renderer.g().attr({\r\n            class: \"dxc-legend\",\r\n            \"clip-path\": this._getCanvasClipRectID()\r\n        }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\r\n        this._scrollBarGroup = renderer.g().attr({\r\n            class: \"dxc-scroll-bar\"\r\n        }).linkOn(root, \"scroll-bar\")\r\n    },\r\n    _disposeObjectsInArray: function(propName, fieldNames) {\r\n        _each(this[propName] || [], (function(_, item) {\r\n            if (fieldNames && item) {\r\n                _each(fieldNames, (function(_, field) {\r\n                    item[field] && item[field].dispose()\r\n                }))\r\n            } else {\r\n                item && item.dispose()\r\n            }\r\n        }));\r\n        this[propName] = null\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        var disposeObject = function(propName) {\r\n            if (that[propName]) {\r\n                that[propName].dispose();\r\n                that[propName] = null\r\n            }\r\n        };\r\n        var unlinkGroup = function(name) {\r\n            that[name].linkOff()\r\n        };\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that._renderer.stopAllAnimations();\r\n        disposeObjectsInArray.call(that, \"series\");\r\n        disposeObject(\"_tracker\");\r\n        disposeObject(\"_crosshair\");\r\n        that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\r\n        unlinkGroup(\"_stripsGroup\");\r\n        unlinkGroup(\"_gridGroup\");\r\n        unlinkGroup(\"_axesGroup\");\r\n        unlinkGroup(\"_constantLinesGroup\");\r\n        unlinkGroup(\"_labelAxesGroup\");\r\n        unlinkGroup(\"_panesBorderGroup\");\r\n        unlinkGroup(\"_seriesGroup\");\r\n        unlinkGroup(\"_labelsGroup\");\r\n        unlinkGroup(\"_crosshairCursorGroup\");\r\n        unlinkGroup(\"_legendGroup\");\r\n        unlinkGroup(\"_scrollBarGroup\");\r\n        unlinkGroup(\"_scaleBreaksGroup\");\r\n        disposeObject(\"_canvasClipRect\");\r\n        disposeObject(\"_panesBackgroundGroup\");\r\n        disposeObject(\"_backgroundRect\");\r\n        disposeObject(\"_stripsGroup\");\r\n        disposeObject(\"_gridGroup\");\r\n        disposeObject(\"_axesGroup\");\r\n        disposeObject(\"_constantLinesGroup\");\r\n        disposeObject(\"_labelAxesGroup\");\r\n        disposeObject(\"_panesBorderGroup\");\r\n        disposeObject(\"_seriesGroup\");\r\n        disposeObject(\"_labelsGroup\");\r\n        disposeObject(\"_crosshairCursorGroup\");\r\n        disposeObject(\"_legendGroup\");\r\n        disposeObject(\"_scrollBarGroup\");\r\n        disposeObject(\"_scaleBreaksGroup\")\r\n    },\r\n    _getAnimationOptions: function() {\r\n        return this._themeManager.getOptions(\"animation\")\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _getOption: function(name) {\r\n        return this._themeManager.getOptions(name)\r\n    },\r\n    _applySize: function(rect) {\r\n        this._rect = rect.slice();\r\n        if (!this._changes.has(\"FULL_RENDER\")) {\r\n            this._processRefreshData(RESIZE_REFRESH_ACTION)\r\n        }\r\n    },\r\n    _resize: function() {\r\n        this._doRender(this.__renderOptions || {\r\n            animate: false,\r\n            isResize: true\r\n        })\r\n    },\r\n    _trackerType: \"ChartTracker\",\r\n    _createTracker: function() {\r\n        this._tracker = new trackerModule[this._trackerType]({\r\n            seriesGroup: this._seriesGroup,\r\n            renderer: this._renderer,\r\n            tooltip: this._tooltip,\r\n            legend: this._legend,\r\n            eventTrigger: this._eventTrigger\r\n        })\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return extend({\r\n            chart: this\r\n        }, this._getSelectionModes())\r\n    },\r\n    _getSelectionModes: function() {\r\n        var themeManager = this._themeManager;\r\n        return {\r\n            seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\r\n            pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\r\n        }\r\n    },\r\n    _updateTracker: function(trackerCanvases) {\r\n        this._tracker.update(this._getTrackerSettings());\r\n        this._tracker.setCanvases({\r\n            left: 0,\r\n            right: this._canvas.width,\r\n            top: 0,\r\n            bottom: this._canvas.height\r\n        }, trackerCanvases)\r\n    },\r\n    _createCanvasFromRect(rect) {\r\n        var currentCanvas = this._canvas;\r\n        return _setCanvasValues({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            right: currentCanvas.width - rect[2],\r\n            bottom: currentCanvas.height - rect[3],\r\n            width: currentCanvas.width,\r\n            height: currentCanvas.height\r\n        })\r\n    },\r\n    _doRender: function(_options) {\r\n        if (0 === this._canvas.width && 0 === this._canvas.height) {\r\n            return\r\n        }\r\n        this._resetIsReady();\r\n        var drawOptions = this._prepareDrawOptions(_options);\r\n        var recreateCanvas = drawOptions.recreateCanvas;\r\n        this._preserveOriginalCanvas();\r\n        if (recreateCanvas) {\r\n            this.__currentCanvas = this._canvas\r\n        } else {\r\n            this._canvas = this.__currentCanvas\r\n        }\r\n        recreateCanvas && this._updateCanvasClipRect(this._canvas);\r\n        this._canvas = this._createCanvasFromRect(this._rect);\r\n        this._renderer.stopAllAnimations(true);\r\n        this._cleanGroups();\r\n        var startTime = new Date;\r\n        this._renderElements(drawOptions);\r\n        this._lastRenderingTime = new Date - startTime\r\n    },\r\n    _preserveOriginalCanvas() {\r\n        this.__originalCanvas = this._canvas;\r\n        this._canvas = extend({}, this._canvas)\r\n    },\r\n    _layoutAxes: noop,\r\n    _renderElements: function(drawOptions) {\r\n        var that = this;\r\n        var preparedOptions = that._prepareToRender(drawOptions);\r\n        var isRotated = that._isRotated();\r\n        var isLegendInside = that._isLegendInside();\r\n        var trackerCanvases = [];\r\n        extend({}, that._canvas);\r\n        var argBusinessRange;\r\n        var zoomMinArg;\r\n        var zoomMaxArg;\r\n        that._renderer.lock();\r\n        if (drawOptions.drawLegend && that._legend) {\r\n            that._legendGroup.linkAppend()\r\n        }\r\n        that.layoutManager.setOptions(that._layoutManagerOptions());\r\n        var layoutTargets = that._getLayoutTargets();\r\n        this._layoutAxes(needSpace => {\r\n            var axisDrawOptions = needSpace ? extend({}, drawOptions, {\r\n                animate: false,\r\n                recreateCanvas: true\r\n            }) : drawOptions;\r\n            var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\r\n            that._shrinkAxes(needSpace, canvas)\r\n        });\r\n        that._applyClipRects(preparedOptions);\r\n        that._appendSeriesGroups();\r\n        that._createCrosshairCursor();\r\n        layoutTargets.forEach(_ref => {\r\n            var {\r\n                canvas: canvas\r\n            } = _ref;\r\n            trackerCanvases.push({\r\n                left: canvas.left,\r\n                right: canvas.width - canvas.right,\r\n                top: canvas.top,\r\n                bottom: canvas.height - canvas.bottom\r\n            })\r\n        });\r\n        if (that._scrollBar) {\r\n            argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\r\n            if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\r\n                zoomMinArg = zoomMaxArg = void 0\r\n            } else {\r\n                zoomMinArg = argBusinessRange.minVisible;\r\n                zoomMaxArg = argBusinessRange.maxVisible\r\n            }\r\n            that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg)\r\n        }\r\n        that._updateTracker(trackerCanvases);\r\n        that._updateLegendPosition(drawOptions, isLegendInside);\r\n        that._applyPointMarkersAutoHiding();\r\n        that._renderSeries(drawOptions, isRotated, isLegendInside);\r\n        that._renderer.unlock()\r\n    },\r\n    _updateLegendPosition: noop,\r\n    _createCrosshairCursor: noop,\r\n    _appendSeriesGroups: function() {\r\n        this._seriesGroup.linkAppend();\r\n        this._labelsGroup.linkAppend();\r\n        this._appendAdditionalSeriesGroups()\r\n    },\r\n    _renderSeries: function(drawOptions, isRotated, isLegendInside) {\r\n        this._calculateSeriesLayout(drawOptions, isRotated);\r\n        this._renderSeriesElements(drawOptions, isLegendInside)\r\n    },\r\n    _calculateSeriesLayout: function(drawOptions, isRotated) {\r\n        drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\r\n        this._updateSeriesDimensions(drawOptions)\r\n    },\r\n    _getArgFilter: () => () => true,\r\n    _getValFilter: series => () => true,\r\n    _getPointsToAnimation(series) {\r\n        var argViewPortFilter = this._getArgFilter();\r\n        return series.map(s => {\r\n            var valViewPortFilter = this._getValFilter(s);\r\n            return s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).length\r\n        })\r\n    },\r\n    _renderSeriesElements: function(drawOptions, isLegendInside) {\r\n        var i;\r\n        var series = this.series;\r\n        var singleSeries;\r\n        var seriesLength = series.length;\r\n        var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\r\n        var pointsToAnimation = this._getPointsToAnimation(series);\r\n        for (i = 0; i < seriesLength; i++) {\r\n            singleSeries = series[i];\r\n            this._applyExtraSettings(singleSeries, drawOptions);\r\n            singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries))\r\n        }\r\n        if (\"none\" === resolveLabelOverlapping) {\r\n            this._adjustSeriesLabels(false)\r\n        } else {\r\n            this._locateLabels(resolveLabelOverlapping)\r\n        }\r\n        this._renderTrackers(isLegendInside);\r\n        this._tracker.repairTooltip();\r\n        this._renderExtraElements();\r\n        this._clearCanvas();\r\n        this._seriesElementsDrawn = true\r\n    },\r\n    _changesApplied() {\r\n        if (this._seriesElementsDrawn) {\r\n            this._seriesElementsDrawn = false;\r\n            this._drawn();\r\n            this._renderCompleteHandler()\r\n        }\r\n    },\r\n    _locateLabels(resolveLabelOverlapping) {\r\n        this._resolveLabelOverlapping(resolveLabelOverlapping)\r\n    },\r\n    _renderExtraElements() {},\r\n    _clearCanvas: function() {\r\n        this._canvas = this.__originalCanvas\r\n    },\r\n    _resolveLabelOverlapping: function(resolveLabelOverlapping) {\r\n        var func;\r\n        switch (resolveLabelOverlapping) {\r\n            case \"stack\":\r\n                func = this._resolveLabelOverlappingStack;\r\n                break;\r\n            case \"hide\":\r\n                func = this._resolveLabelOverlappingHide;\r\n                break;\r\n            case \"shift\":\r\n                func = this._resolveLabelOverlappingShift\r\n        }\r\n        return isFunction(func) && func.call(this)\r\n    },\r\n    _getVisibleSeries: function() {\r\n        return grep(this.getAllSeries(), (function(series) {\r\n            return series.isVisible()\r\n        }))\r\n    },\r\n    _resolveLabelOverlappingHide: function() {\r\n        var labels = [];\r\n        var currentLabel;\r\n        var nextLabel;\r\n        var currentLabelRect;\r\n        var nextLabelRect;\r\n        var i;\r\n        var j;\r\n        var points;\r\n        var series = this._getVisibleSeries();\r\n        for (i = 0; i < series.length; i++) {\r\n            points = series[i].getVisiblePoints();\r\n            for (j = 0; j < points.length; j++) {\r\n                labels.push.apply(labels, points[j].getLabels())\r\n            }\r\n        }\r\n        for (i = 0; i < labels.length; i++) {\r\n            currentLabel = labels[i];\r\n            if (!currentLabel.isVisible()) {\r\n                continue\r\n            }\r\n            currentLabelRect = currentLabel.getBoundingRect();\r\n            for (j = i + 1; j < labels.length; j++) {\r\n                nextLabel = labels[j];\r\n                nextLabelRect = nextLabel.getBoundingRect();\r\n                if (checkOverlapping(currentLabelRect, nextLabelRect)) {\r\n                    nextLabel.draw(false)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _cleanGroups: function() {\r\n        this._stripsGroup.linkRemove().clear();\r\n        this._gridGroup.linkRemove().clear();\r\n        this._axesGroup.linkRemove().clear();\r\n        this._constantLinesGroup.above.clear();\r\n        this._labelAxesGroup.linkRemove().clear();\r\n        this._labelsGroup.linkRemove().clear();\r\n        this._crosshairCursorGroup.linkRemove().clear();\r\n        this._scaleBreaksGroup.linkRemove().clear()\r\n    },\r\n    _allowLegendInsidePosition: () => false,\r\n    _createLegend: function() {\r\n        var legendSettings = getLegendSettings(this._legendDataField);\r\n        this._legend = new Legend({\r\n            renderer: this._renderer,\r\n            widget: this,\r\n            group: this._legendGroup,\r\n            backgroundClass: \"dxc-border\",\r\n            itemGroupClass: \"dxc-item\",\r\n            titleGroupClass: \"dxc-title\",\r\n            textField: legendSettings.textField,\r\n            getFormatObject: legendSettings.getFormatObject,\r\n            allowInsidePosition: this._allowLegendInsidePosition()\r\n        });\r\n        this._updateLegend();\r\n        this._layout.add(this._legend)\r\n    },\r\n    _updateLegend: function() {\r\n        var themeManager = this._themeManager;\r\n        var legendOptions = themeManager.getOptions(\"legend\");\r\n        var legendData = this._getLegendData();\r\n        legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\r\n        legendOptions._incidentOccurred = this._incidentOccurred;\r\n        this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\r\n        this._change([\"LAYOUT\"])\r\n    },\r\n    _prepareDrawOptions: function(drawOptions) {\r\n        var animationOptions = this._getAnimationOptions();\r\n        var options = extend({}, {\r\n            force: false,\r\n            adjustAxes: true,\r\n            drawLegend: true,\r\n            drawTitle: true,\r\n            animate: animationOptions.enabled,\r\n            animationPointsLimit: animationOptions.maxPointCountSupported\r\n        }, drawOptions, this.__renderOptions);\r\n        if (!_isDefined(options.recreateCanvas)) {\r\n            options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle\r\n        }\r\n        return options\r\n    },\r\n    _processRefreshData: function(newRefreshAction) {\r\n        var currentRefreshActionPosition = inArray(this._currentRefreshData, ACTIONS_BY_PRIORITY);\r\n        var newRefreshActionPosition = inArray(newRefreshAction, ACTIONS_BY_PRIORITY);\r\n        if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\r\n            this._currentRefreshData = newRefreshAction\r\n        }\r\n        this._requestChange([\"REFRESH\"])\r\n    },\r\n    _getLegendData: function() {\r\n        return _map(this._getLegendTargets(), (function(item) {\r\n            var legendData = item.legendData;\r\n            var style = item.getLegendStyles;\r\n            var opacity = style.normal.opacity;\r\n            if (!item.visible) {\r\n                if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\r\n                    opacity = DEFAULT_OPACITY\r\n                }\r\n                legendData.textOpacity = DEFAULT_OPACITY\r\n            }\r\n            var opacityStyle = {\r\n                opacity: opacity\r\n            };\r\n            legendData.states = {\r\n                hover: extend({}, style.hover, opacityStyle),\r\n                selection: extend({}, style.selection, opacityStyle),\r\n                normal: extend({}, style.normal, opacityStyle)\r\n            };\r\n            return legendData\r\n        }))\r\n    },\r\n    _getLegendOptions: function(item) {\r\n        return {\r\n            legendData: {\r\n                text: item[this._legendItemTextField],\r\n                id: item.index,\r\n                visible: true\r\n            },\r\n            getLegendStyles: item.getLegendStyles(),\r\n            visible: item.isVisible()\r\n        }\r\n    },\r\n    _disposeSeries(seriesIndex) {\r\n        var _that$series;\r\n        if (this.series) {\r\n            if (_isDefined(seriesIndex)) {\r\n                this.series[seriesIndex].dispose();\r\n                this.series.splice(seriesIndex, 1)\r\n            } else {\r\n                _each(this.series, (_, s) => s.dispose());\r\n                this.series.length = 0\r\n            }\r\n        }\r\n        if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\r\n            this.series = []\r\n        }\r\n    },\r\n    _disposeSeriesFamilies() {\r\n        _each(this.seriesFamilies || [], (function(_, family) {\r\n            family.dispose()\r\n        }));\r\n        this.seriesFamilies = null;\r\n        this._needHandleRenderComplete = true\r\n    },\r\n    _optionChanged: function(arg) {\r\n        this._themeManager.resetOptions(arg.name);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _applyChanges() {\r\n        this._themeManager.update(this._options.silent());\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _optionChangesMap: {\r\n        animation: \"ANIMATION\",\r\n        dataSource: \"DATA_SOURCE\",\r\n        palette: \"PALETTE\",\r\n        paletteExtensionMode: \"PALETTE\",\r\n        legend: \"FORCE_DATA_INIT\",\r\n        seriesTemplate: \"FORCE_DATA_INIT\",\r\n        export: \"FORCE_RENDER\",\r\n        valueAxis: \"AXES_AND_PANES\",\r\n        argumentAxis: \"AXES_AND_PANES\",\r\n        commonAxisSettings: \"AXES_AND_PANES\",\r\n        panes: \"AXES_AND_PANES\",\r\n        commonPaneSettings: \"AXES_AND_PANES\",\r\n        defaultPane: \"AXES_AND_PANES\",\r\n        containerBackgroundColor: \"AXES_AND_PANES\",\r\n        rotated: \"ROTATED\",\r\n        autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\r\n        customizePoint: \"REFRESH_SERIES_REINIT\",\r\n        customizeLabel: \"REFRESH_SERIES_REINIT\",\r\n        scrollBar: \"SCROLL_BAR\"\r\n    },\r\n    _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\r\n    _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\r\n    _change_ANIMATION: function() {\r\n        this._renderer.updateAnimationOptions(this._getAnimationOptions())\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        this._needHandleRenderComplete = true;\r\n        this._updateDataSource()\r\n    },\r\n    _change_PALETTE: function() {\r\n        this._themeManager.updatePalette();\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_DATA_INIT: function() {\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_DATA_INIT: function() {\r\n        if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\r\n            this._dataInit()\r\n        }\r\n    },\r\n    _change_FORCE_DATA_INIT: function() {\r\n        this._dataInit()\r\n    },\r\n    _change_REFRESH_SERIES_FAMILIES: function() {\r\n        this._processSeriesFamilies();\r\n        this._populateBusinessRange();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_RENDER: function() {\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_AXES_AND_PANES: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_ROTATED: function() {\r\n        this._createScrollBar();\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_REINIT: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_AXES() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _change_SCROLL_BAR: function() {\r\n        this._createScrollBar();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_REINIT: function() {\r\n        this._processRefreshData(REINIT_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_DRAWING: function() {\r\n        this._resetComponentsAnimation()\r\n    },\r\n    _change_FORCE_FIRST_DRAWING: function() {\r\n        this._resetComponentsAnimation(true)\r\n    },\r\n    _resetComponentsAnimation: function(isFirstDrawing) {\r\n        this.series.forEach(s => {\r\n            s.resetApplyingAnimation(isFirstDrawing)\r\n        });\r\n        this._resetAxesAnimation(isFirstDrawing)\r\n    },\r\n    _resetAxesAnimation: noop,\r\n    _refreshSeries: function(actionName) {\r\n        this.needToPopulateSeries = true;\r\n        this._requestChange([actionName])\r\n    },\r\n    _change_CORRECT_AXIS() {\r\n        this._correctAxes()\r\n    },\r\n    _doRefresh: function() {\r\n        var methodName = this._currentRefreshData;\r\n        if (methodName) {\r\n            this._currentRefreshData = null;\r\n            this._renderer.stopAllAnimations(true);\r\n            this[methodName]()\r\n        }\r\n    },\r\n    _updateCanvasClipRect: function(canvas) {\r\n        var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\r\n        var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\r\n        this._canvasClipRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        });\r\n        this._backgroundRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _getCanvasClipRectID: function() {\r\n        return this._canvasClipRect.id\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (this._changes.has(\"INIT\")) {\r\n            this._requestChange([\"DATA_INIT\"])\r\n        } else {\r\n            this._requestChange([\"FORCE_DATA_INIT\"])\r\n        }\r\n    },\r\n    _dataInit: function() {\r\n        this._dataSpecificInit(true)\r\n    },\r\n    _processSingleSeries: function(singleSeries) {\r\n        singleSeries.createPoints(false)\r\n    },\r\n    _handleSeriesDataUpdated() {\r\n        if (this._getVisibleSeries().some(s => s.useAggregation())) {\r\n            this._populateMarginOptions()\r\n        }\r\n        this.series.forEach(s => this._processSingleSeries(s), this)\r\n    },\r\n    _dataSpecificInit(needRedraw) {\r\n        if (!this.series || this.needToPopulateSeries) {\r\n            this.series = this._populateSeries()\r\n        }\r\n        this._repopulateSeries();\r\n        this._seriesPopulatedHandlerCore();\r\n        this._populateBusinessRange();\r\n        this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\r\n        this._updateLegend();\r\n        if (needRedraw) {\r\n            this._requestChange([\"FULL_RENDER\"])\r\n        }\r\n    },\r\n    _forceRender: function() {\r\n        this._doRender({\r\n            force: true\r\n        })\r\n    },\r\n    _repopulateSeries: function() {\r\n        var themeManager = this._themeManager;\r\n        var data = this._dataSourceItems();\r\n        var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        if (seriesTemplate) {\r\n            this._populateSeries(data)\r\n        }\r\n        this._groupSeries();\r\n        var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\r\n        themeManager.resetPalette();\r\n        this.series.forEach((function(singleSeries) {\r\n            singleSeries.updateData(parsedData[singleSeries.getArgumentField()])\r\n        }));\r\n        this._handleSeriesDataUpdated()\r\n    },\r\n    _renderCompleteHandler: function() {\r\n        var allSeriesInited = true;\r\n        if (this._needHandleRenderComplete) {\r\n            _each(this.series, (function(_, s) {\r\n                allSeriesInited = allSeriesInited && s.canRenderCompleteHandle()\r\n            }));\r\n            if (allSeriesInited) {\r\n                this._needHandleRenderComplete = false;\r\n                this._eventTrigger(\"done\", {\r\n                    target: this\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _dataIsReady: function() {\r\n        return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded()\r\n    },\r\n    _populateSeriesOptions(data) {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\r\n        var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\r\n        var extraOptions = that._getExtraOptions();\r\n        var particularSeriesOptions;\r\n        var seriesTheme;\r\n        var seriesThemes = [];\r\n        var seriesVisibilityChanged = target => {\r\n            that._specialProcessSeries();\r\n            that._populateBusinessRange(target && target.getValueAxis(), true);\r\n            that._renderer.stopAllAnimations(true);\r\n            that._updateLegend();\r\n            that._requestChange([\"FULL_RENDER\"])\r\n        };\r\n        for (var i = 0; i < allSeriesOptions.length; i++) {\r\n            particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\r\n            if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\r\n                particularSeriesOptions.name = \"Series \" + (i + 1).toString()\r\n            }\r\n            particularSeriesOptions.rotated = that._isRotated();\r\n            particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\r\n            particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\r\n            particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\r\n            particularSeriesOptions.incidentOccurred = that._incidentOccurred;\r\n            seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\r\n            if (that._checkPaneName(seriesTheme)) {\r\n                seriesThemes.push(seriesTheme)\r\n            }\r\n        }\r\n        return seriesThemes\r\n    },\r\n    _populateSeries(data) {\r\n        var that = this;\r\n        var seriesBasis = [];\r\n        var incidentOccurred = that._incidentOccurred;\r\n        var seriesThemes = that._populateSeriesOptions(data);\r\n        var particularSeries;\r\n        var disposeSeriesFamilies = false;\r\n        that.needToPopulateSeries = false;\r\n        _each(seriesThemes, (_, theme) => {\r\n            var curSeries = that.series && that.series.filter(s => s.name === theme.name && -1 === seriesBasis.map(sb => sb.series).indexOf(s))[0];\r\n            if (curSeries && curSeries.type === theme.type) {\r\n                seriesBasis.push({\r\n                    series: curSeries,\r\n                    options: theme\r\n                })\r\n            } else {\r\n                seriesBasis.push({\r\n                    options: theme\r\n                });\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        that._tracker.clearHover();\r\n        _reverseEach(that.series, (index, series) => {\r\n            if (!seriesBasis.some(s => series === s.series)) {\r\n                that._disposeSeries(index);\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(sb => sb.series.name !== seriesThemes[sb.series.index].name));\r\n        that.series = [];\r\n        disposeSeriesFamilies && that._disposeSeriesFamilies();\r\n        that._themeManager.resetPalette();\r\n        var eventPipe = function(data) {\r\n            that.series.forEach((function(currentSeries) {\r\n                currentSeries.notify(data)\r\n            }))\r\n        };\r\n        _each(seriesBasis, (_, basis) => {\r\n            var seriesTheme = basis.options;\r\n            var renderSettings = {\r\n                commonSeriesModes: that._getSelectionModes(),\r\n                argumentAxis: that.getArgumentAxis(),\r\n                valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\r\n            };\r\n            if (basis.series) {\r\n                particularSeries = basis.series;\r\n                particularSeries.updateOptions(seriesTheme, renderSettings)\r\n            } else {\r\n                particularSeries = new Series(extend({\r\n                    renderer: that._renderer,\r\n                    seriesGroup: that._seriesGroup,\r\n                    labelsGroup: that._labelsGroup,\r\n                    eventTrigger: that._eventTrigger,\r\n                    eventPipe: eventPipe,\r\n                    incidentOccurred: incidentOccurred\r\n                }, renderSettings), seriesTheme)\r\n            }\r\n            if (!particularSeries.isUpdated) {\r\n                incidentOccurred(\"E2101\", [seriesTheme.type])\r\n            } else {\r\n                particularSeries.index = that.series.length;\r\n                that.series.push(particularSeries)\r\n            }\r\n        });\r\n        return that.series\r\n    },\r\n    getStackedPoints: function(point) {\r\n        var stackName = point.series.getStackName();\r\n        return this._getVisibleSeries().reduce((stackPoints, series) => {\r\n            if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\r\n                stackPoints = stackPoints.concat(series.getPointsByArg(point.argument))\r\n            }\r\n            return stackPoints\r\n        }, [])\r\n    },\r\n    getAllSeries: function() {\r\n        return (this.series || []).slice()\r\n    },\r\n    getSeriesByName: function(name) {\r\n        var found = null;\r\n        _each(this.series, (function(i, singleSeries) {\r\n            if (singleSeries.name === name) {\r\n                found = singleSeries;\r\n                return false\r\n            }\r\n        }));\r\n        return found\r\n    },\r\n    getSeriesByPos: function(pos) {\r\n        return (this.series || [])[pos]\r\n    },\r\n    clearSelection: function() {\r\n        this._tracker.clearSelection()\r\n    },\r\n    hideTooltip: function() {\r\n        this._tracker._hideTooltip()\r\n    },\r\n    clearHover() {\r\n        this._tracker.clearHover()\r\n    },\r\n    render: function(renderOptions) {\r\n        var that = this;\r\n        that.__renderOptions = renderOptions;\r\n        that.__forceRender = renderOptions && renderOptions.force;\r\n        that.callBase.apply(that, arguments);\r\n        that.__renderOptions = that.__forceRender = null;\r\n        return that\r\n    },\r\n    refresh: function() {\r\n        this._disposeSeries();\r\n        this._disposeSeriesFamilies();\r\n        this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"])\r\n    },\r\n    _getMinSize() {\r\n        var adaptiveLayout = this._layoutManagerOptions();\r\n        return [adaptiveLayout.width, adaptiveLayout.height]\r\n    },\r\n    _change_REFRESH() {\r\n        if (!this._changes.has(\"INIT\")) {\r\n            this._doRefresh()\r\n        } else {\r\n            this._currentRefreshData = null\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this._forceRender()\r\n    },\r\n    _change_INIT() {\r\n        this._reinit()\r\n    },\r\n    _stopCurrentHandling: function() {\r\n        this._tracker.stopCurrentHandling()\r\n    }\r\n});\r\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\"\r\n}));\r\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\"\r\n}));\r\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\"\r\n}));\r\nimport {\r\n    plugin as exportPlugin\r\n} from \"../core/export\";\r\nimport {\r\n    plugin as titlePlugin\r\n} from \"../core/title\";\r\nimport {\r\n    plugin as dataSourcePlugin\r\n} from \"../core/data_source\";\r\nimport {\r\n    plugin as tooltipPlugin\r\n} from \"../core/tooltip\";\r\nimport {\r\n    plugin as loadingIndicatorPlugin\r\n} from \"../core/loading_indicator\";\r\nBaseChart.addPlugin(exportPlugin);\r\nBaseChart.addPlugin(titlePlugin);\r\nBaseChart.addPlugin(dataSourcePlugin);\r\nBaseChart.addPlugin(tooltipPlugin);\r\nBaseChart.addPlugin(loadingIndicatorPlugin);\r\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\r\nBaseChart.prototype._change_TITLE = function() {\r\n    _change_TITLE.apply(this, arguments);\r\n    this._change([\"FORCE_RENDER\"])\r\n};\r\n"]},"metadata":{},"sourceType":"module"}