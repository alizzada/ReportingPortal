{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_vertical.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport { each } from \"../../../core/utils/iterator\";\nimport SchedulerWorkSpaceIndicator from \"./ui.scheduler.work_space.indicator\";\nimport dateLocalization from \"../../../localization/date\";\nimport timeZoneUtils from \"../utils.timeZone\";\n\nvar SchedulerWorkspaceVertical = /*#__PURE__*/function (_SchedulerWorkSpaceIn) {\n  _inherits(SchedulerWorkspaceVertical, _SchedulerWorkSpaceIn);\n\n  var _super = _createSuper(SchedulerWorkspaceVertical);\n\n  function SchedulerWorkspaceVertical() {\n    _classCallCheck(this, SchedulerWorkspaceVertical);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerWorkspaceVertical, [{\n    key: \"_getCellsBetween\",\n    value: function _getCellsBetween($first, $last) {\n      if (this._hasAllDayClass($last)) {\n        return _get(_getPrototypeOf(SchedulerWorkspaceVertical.prototype), \"_getCellsBetween\", this).call(this, $first, $last);\n      }\n\n      var $cells = this._getCells();\n\n      var firstColumn = $first.index();\n      var firstRow = $first.parent().index();\n      var lastColumn = $last.index();\n      var lastRow = $last.parent().index();\n\n      var groupCount = this._getGroupCount();\n\n      var cellCount = groupCount > 0 ? this._getTotalCellCount(groupCount) : this._getCellCount();\n\n      var rowCount = this._getTotalRowCount(groupCount);\n\n      var result = [];\n\n      for (var i = 0; i < cellCount; i++) {\n        for (var j = 0; j < rowCount; j++) {\n          var cell = $cells.get(cellCount * j + i);\n          result.push(cell);\n        }\n      }\n\n      var lastCellGroup = this.getCellData($last).groups;\n      var indexesDifference = this.option(\"showAllDayPanel\") && this._isVerticalGroupedWorkSpace() ? this._getGroupIndexByResourceId(lastCellGroup) + 1 : 0;\n      var newFirstIndex = rowCount * firstColumn + firstRow - indexesDifference;\n      var newLastIndex = rowCount * lastColumn + lastRow - indexesDifference;\n\n      if (newFirstIndex > newLastIndex) {\n        var buffer = newFirstIndex;\n        newFirstIndex = newLastIndex;\n        newLastIndex = buffer;\n      }\n\n      $cells = $(result).slice(newFirstIndex, newLastIndex + 1);\n\n      if (this._getGroupCount()) {\n        var arr = [];\n\n        var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n        each($cells, function (_, cell) {\n          var groupIndex = this._getGroupIndexByCell($(cell));\n\n          if (focusedGroupIndex === groupIndex) {\n            arr.push(cell);\n          }\n        }.bind(this));\n        $cells = $(arr);\n      }\n\n      return $cells;\n    }\n  }, {\n    key: \"_getCellFromNextColumn\",\n    value: function _getCellFromNextColumn(direction, isMultiSelection) {\n      var $nextCell = _get(_getPrototypeOf(SchedulerWorkspaceVertical.prototype), \"_getCellFromNextColumn\", this).call(this, direction, isMultiSelection);\n\n      var $focusedCell = this._$focusedCell;\n\n      if ($focusedCell.parent().index() !== $nextCell.parent().index() && isMultiSelection) {\n        $nextCell = $focusedCell;\n      }\n\n      return $nextCell;\n    }\n  }, {\n    key: \"_getFormat\",\n    value: function _getFormat() {\n      return this._formatWeekdayAndDay;\n    }\n  }, {\n    key: \"renovatedRenderSupported\",\n    value: function renovatedRenderSupported() {\n      return true;\n    }\n  }, {\n    key: \"generateRenderOptions\",\n    value: function generateRenderOptions() {\n      var _this = this;\n\n      var startViewDate = timeZoneUtils.getDateWithoutTimezoneChange(this.getStartViewDate());\n\n      var _getTimeText = function _getTimeText(row, column) {\n        var index = row % _this._getRowCount();\n\n        if (index % 2 === 0 && 0 === column) {\n          return dateLocalization.format(_this._getTimeCellDateCore(startViewDate, row), \"shorttime\");\n        }\n\n        return \"\";\n      };\n\n      var options = _get(_getPrototypeOf(SchedulerWorkspaceVertical.prototype), \"generateRenderOptions\", this).call(this);\n\n      options.cellDataGetters.push(function (_, rowIndex, cellIndex) {\n        return {\n          value: {\n            text: _getTimeText(rowIndex, cellIndex)\n          }\n        };\n      });\n      return options;\n    }\n  }]);\n\n  return SchedulerWorkspaceVertical;\n}(SchedulerWorkSpaceIndicator);\n\nexport default SchedulerWorkspaceVertical;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_vertical.js"],"names":["$","each","SchedulerWorkSpaceIndicator","dateLocalization","timeZoneUtils","SchedulerWorkspaceVertical","$first","$last","_hasAllDayClass","$cells","_getCells","firstColumn","index","firstRow","parent","lastColumn","lastRow","groupCount","_getGroupCount","cellCount","_getTotalCellCount","_getCellCount","rowCount","_getTotalRowCount","result","i","j","cell","get","push","lastCellGroup","getCellData","groups","indexesDifference","option","_isVerticalGroupedWorkSpace","_getGroupIndexByResourceId","newFirstIndex","newLastIndex","buffer","slice","arr","focusedGroupIndex","_getGroupIndexByCell","_","groupIndex","bind","direction","isMultiSelection","$nextCell","$focusedCell","_$focusedCell","_formatWeekdayAndDay","startViewDate","getDateWithoutTimezoneChange","getStartViewDate","_getTimeText","row","column","_getRowCount","format","_getTimeCellDateCore","options","cellDataGetters","rowIndex","cellIndex","value","text"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_vertical.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport SchedulerWorkSpaceIndicator from \"./ui.scheduler.work_space.indicator\";\r\nimport dateLocalization from \"../../../localization/date\";\r\nimport timeZoneUtils from \"../utils.timeZone\";\r\nclass SchedulerWorkspaceVertical extends SchedulerWorkSpaceIndicator {\r\n    _getCellsBetween($first, $last) {\r\n        if (this._hasAllDayClass($last)) {\r\n            return super._getCellsBetween($first, $last)\r\n        }\r\n        var $cells = this._getCells();\r\n        var firstColumn = $first.index();\r\n        var firstRow = $first.parent().index();\r\n        var lastColumn = $last.index();\r\n        var lastRow = $last.parent().index();\r\n        var groupCount = this._getGroupCount();\r\n        var cellCount = groupCount > 0 ? this._getTotalCellCount(groupCount) : this._getCellCount();\r\n        var rowCount = this._getTotalRowCount(groupCount);\r\n        var result = [];\r\n        for (var i = 0; i < cellCount; i++) {\r\n            for (var j = 0; j < rowCount; j++) {\r\n                var cell = $cells.get(cellCount * j + i);\r\n                result.push(cell)\r\n            }\r\n        }\r\n        var lastCellGroup = this.getCellData($last).groups;\r\n        var indexesDifference = this.option(\"showAllDayPanel\") && this._isVerticalGroupedWorkSpace() ? this._getGroupIndexByResourceId(lastCellGroup) + 1 : 0;\r\n        var newFirstIndex = rowCount * firstColumn + firstRow - indexesDifference;\r\n        var newLastIndex = rowCount * lastColumn + lastRow - indexesDifference;\r\n        if (newFirstIndex > newLastIndex) {\r\n            var buffer = newFirstIndex;\r\n            newFirstIndex = newLastIndex;\r\n            newLastIndex = buffer\r\n        }\r\n        $cells = $(result).slice(newFirstIndex, newLastIndex + 1);\r\n        if (this._getGroupCount()) {\r\n            var arr = [];\r\n            var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n            each($cells, function(_, cell) {\r\n                var groupIndex = this._getGroupIndexByCell($(cell));\r\n                if (focusedGroupIndex === groupIndex) {\r\n                    arr.push(cell)\r\n                }\r\n            }.bind(this));\r\n            $cells = $(arr)\r\n        }\r\n        return $cells\r\n    }\r\n    _getCellFromNextColumn(direction, isMultiSelection) {\r\n        var $nextCell = super._getCellFromNextColumn(direction, isMultiSelection);\r\n        var $focusedCell = this._$focusedCell;\r\n        if ($focusedCell.parent().index() !== $nextCell.parent().index() && isMultiSelection) {\r\n            $nextCell = $focusedCell\r\n        }\r\n        return $nextCell\r\n    }\r\n    _getFormat() {\r\n        return this._formatWeekdayAndDay\r\n    }\r\n    renovatedRenderSupported() {\r\n        return true\r\n    }\r\n    generateRenderOptions() {\r\n        var startViewDate = timeZoneUtils.getDateWithoutTimezoneChange(this.getStartViewDate());\r\n        var _getTimeText = (row, column) => {\r\n            var index = row % this._getRowCount();\r\n            if (index % 2 === 0 && 0 === column) {\r\n                return dateLocalization.format(this._getTimeCellDateCore(startViewDate, row), \"shorttime\")\r\n            }\r\n            return \"\"\r\n        };\r\n        var options = super.generateRenderOptions();\r\n        options.cellDataGetters.push((_, rowIndex, cellIndex) => ({\r\n            value: {\r\n                text: _getTimeText(rowIndex, cellIndex)\r\n            }\r\n        }));\r\n        return options\r\n    }\r\n}\r\nexport default SchedulerWorkspaceVertical;\r\n"]},"metadata":{},"sourceType":"module"}