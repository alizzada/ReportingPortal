{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/bar_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar PI_DIV_180 = Math.PI / 180;\nvar _abs = Math.abs;\nvar _round = Math.round;\nvar _floor = Math.floor;\nvar _min = Math.min;\nvar _max = Math.max;\nimport registerComponent from \"../../core/component_registrator\";\nimport { clone } from \"../../core/utils/object\";\nimport { noop } from \"../../core/utils/common\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeEnum as _normalizeEnum, convertAngleToRendererSpace, getCosAndSin, patchFontOptions } from \"../core/utils\";\nimport { BaseGauge, getSampleText, formatValue, compareArrays } from \"./base_gauge\";\nvar _getSampleText = getSampleText;\nvar _formatValue = formatValue;\nvar _compareArrays = compareArrays;\nimport dxCircularGauge from \"./circular_gauge\";\nvar _isArray = Array.isArray;\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\nvar _getCosAndSin = getCosAndSin;\nvar _patchFontOptions = patchFontOptions;\nvar _Number = Number;\nvar _isFinite = isFinite;\nvar _noop = noop;\nvar _extend = extend;\nimport { plugin as pluginLegend } from \"../components/legend\";\nvar OPTION_VALUES = \"values\";\nvar BarWrapper;\nexport var dxBarGauge = BaseGauge.inherit({\n  _rootClass: \"dxbg-bar-gauge\",\n  _themeSection: \"barGauge\",\n  _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\n  _initCore: function _initCore() {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    that._barsGroup = that._renderer.g().attr({\n      class: \"dxbg-bars\"\n    }).linkOn(that._renderer.root, \"bars\");\n    that._values = [];\n    that._context = {\n      renderer: that._renderer,\n      translator: that._translator,\n      tracker: that._tracker,\n      group: that._barsGroup\n    };\n\n    that._animateStep = function (pos) {\n      var bars = that._bars;\n      var i;\n      var ii;\n\n      for (i = 0, ii = bars.length; i < ii; ++i) {\n        bars[i].animate(pos);\n      }\n    };\n\n    that._animateComplete = function () {\n      that._bars.forEach(function (bar) {\n        return bar.endAnimation();\n      });\n\n      that._checkOverlap();\n    };\n  },\n  _disposeCore: function _disposeCore() {\n    var that = this;\n\n    that._barsGroup.linkOff();\n\n    that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\n    that.callBase.apply(that, arguments);\n  },\n  _setupDomainCore: function _setupDomainCore() {\n    var startValue = this.option(\"startValue\");\n    var endValue = this.option(\"endValue\");\n    _isFinite(startValue) || (startValue = 0);\n    _isFinite(endValue) || (endValue = 100);\n\n    this._translator.setDomain(startValue, endValue);\n\n    this._baseValue = this._translator.adjust(this.option(\"baseValue\"));\n    _isFinite(this._baseValue) || (this._baseValue = startValue < endValue ? startValue : endValue);\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 300,\n      height: 300\n    };\n  },\n  _setupCodomain: dxCircularGauge.prototype._setupCodomain,\n  _getApproximateScreenRange: function _getApproximateScreenRange() {\n    var sides = this._area.sides;\n    var width = this._canvas.width / (sides.right - sides.left);\n    var height = this._canvas.height / (sides.down - sides.up);\n    var r = width < height ? width : height;\n    return -this._translator.getCodomainRange() * r * PI_DIV_180;\n  },\n  _setupAnimationSettings: function _setupAnimationSettings() {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    if (that._animationSettings) {\n      that._animationSettings.step = that._animateStep;\n      that._animationSettings.complete = that._animateComplete;\n    }\n  },\n  _cleanContent: function _cleanContent() {\n    this._barsGroup.linkRemove();\n\n    this._animationSettings && this._barsGroup.stopAnimation();\n\n    this._barsGroup.clear();\n  },\n  _renderContent: function _renderContent() {\n    var labelOptions = this.option(\"label\");\n    var text;\n    var bBox;\n    var context = this._context;\n\n    this._barsGroup.linkAppend();\n\n    context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\n\n    if (context.textEnabled) {\n      context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\n      labelOptions = _extend(true, {}, this._themeManager.theme().label, labelOptions);\n      context.formatOptions = {\n        format: void 0 !== labelOptions.format ? labelOptions.format : this._defaultFormatOptions,\n        customizeText: labelOptions.customizeText\n      };\n      context.textOptions = {\n        align: \"center\"\n      };\n      context.fontStyles = _patchFontOptions(_extend({}, this._themeManager.theme().label.font, labelOptions.font, {\n        color: null\n      }));\n      this._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\n      context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\n      context.lineColor = labelOptions.connectorColor || null;\n      text = this._renderer.text(_getSampleText(this._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(this._barsGroup);\n      bBox = text.getBBox();\n      text.remove();\n      context.textY = bBox.y;\n      context.textWidth = bBox.width;\n      context.textHeight = bBox.height;\n    }\n\n    dxCircularGauge.prototype._applyMainLayout.call(this);\n\n    this._renderBars();\n  },\n  _measureMainElements: function _measureMainElements() {\n    var result = {\n      maxRadius: this._area.radius\n    };\n\n    if (this._context.textEnabled) {\n      result.horizontalMargin = this._context.textWidth;\n      result.verticalMargin = this._context.textHeight;\n      result.inverseHorizontalMargin = this._context.textWidth / 2;\n      result.inverseVerticalMargin = this._context.textHeight / 2;\n    }\n\n    return result;\n  },\n  _renderBars: function _renderBars() {\n    var options = _extend({}, this._themeManager.theme(), this.option());\n\n    var radius;\n    var area = this._area;\n    var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\n    radius = area.radius;\n\n    if (this._context.textEnabled) {\n      this._textIndent = _round(_min(this._textIndent, radius / 2));\n      radius -= this._textIndent;\n    }\n\n    this._outerRadius = _floor(radius);\n    this._innerRadius = _floor(radius * relativeInnerRadius);\n    this._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\n\n    _extend(this._context, {\n      backgroundColor: options.backgroundColor,\n      x: area.x,\n      y: area.y,\n      startAngle: area.startCoord,\n      endAngle: area.endCoord,\n      baseAngle: this._translator.translate(this._baseValue)\n    });\n\n    this._arrangeBars();\n  },\n  _arrangeBars: function _arrangeBars() {\n    var radius = this._outerRadius - this._innerRadius;\n    var context = this._context;\n    var i;\n    var count = this._bars.length;\n\n    this._beginValueChanging();\n\n    context.barSize = count > 0 ? _max((radius - (count - 1) * this._barSpacing) / count, 1) : 0;\n    var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), this._barSpacing), 0) : 0;\n\n    var _count = _min(_floor((radius + spacing) / context.barSize), count);\n\n    this._setBarsCount(count);\n\n    radius = this._outerRadius;\n    context.textRadius = radius;\n    context.textIndent = this._textIndent;\n\n    this._palette.reset();\n\n    var unitOffset = context.barSize + spacing;\n\n    var colors = this._palette.generateColors(_count);\n\n    for (i = 0; i < _count; ++i, radius -= unitOffset) {\n      this._bars[i].arrange({\n        radius: radius,\n        color: colors[i]\n      });\n    }\n\n    for (var _i = _count; _i < count; _i++) {\n      this._bars[_i].hide();\n    }\n\n    if (this._animationSettings && !this._noAnimation) {\n      this._animateBars();\n    } else {\n      this._updateBars();\n    }\n\n    this._endValueChanging();\n  },\n  _setBarsCount: function _setBarsCount() {\n    if (this._bars.length > 0) {\n      if (this._dummyBackground) {\n        this._dummyBackground.dispose();\n\n        this._dummyBackground = null;\n      }\n    } else {\n      if (!this._dummyBackground) {\n        this._dummyBackground = this._renderer.arc().attr({\n          \"stroke-linejoin\": \"round\"\n        });\n      }\n\n      this._dummyBackground.attr({\n        x: this._context.x,\n        y: this._context.y,\n        outerRadius: this._outerRadius,\n        innerRadius: this._innerRadius,\n        startAngle: this._context.endAngle,\n        endAngle: this._context.startAngle,\n        fill: this._context.backgroundColor\n      }).append(this._barsGroup);\n    }\n  },\n  _updateBars: function _updateBars() {\n    this._bars.forEach(function (bar) {\n      return bar.applyValue();\n    });\n\n    this._checkOverlap();\n  },\n  _checkOverlap: function _checkOverlap() {\n    var bars = this._bars;\n\n    var overlapStrategy = _normalizeEnum(this._getOption(\"resolveLabelOverlapping\", true));\n\n    if (\"none\" === overlapStrategy) {\n      return;\n    }\n\n    var sortedBars = bars.concat().sort(function (a, b) {\n      return a.getValue() - b.getValue();\n    });\n    var currentIndex = 0;\n    var nextIndex = 1;\n\n    while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\n      var current = sortedBars[currentIndex];\n      var next = sortedBars[nextIndex];\n\n      if (current.checkIntersect(next)) {\n        next.hideLabel();\n        nextIndex++;\n      } else {\n        currentIndex = nextIndex;\n        nextIndex = currentIndex + 1;\n      }\n    }\n  },\n  _animateBars: function _animateBars() {\n    var i;\n    var ii = this._bars.length;\n\n    if (ii > 0) {\n      for (i = 0; i < ii; ++i) {\n        this._bars[i].beginAnimation();\n      }\n\n      this._barsGroup.animate({\n        _: 0\n      }, this._animationSettings);\n    }\n  },\n  _buildNodes: function _buildNodes() {\n    var that = this;\n\n    var options = that._options.silent();\n\n    that._palette = that._themeManager.createPalette(options.palette, {\n      useHighlight: true,\n      extensionMode: options.paletteExtensionMode\n    });\n\n    that._palette.reset();\n\n    that._bars = that._bars || [];\n    that._animationSettings && that._barsGroup.stopAnimation();\n\n    var barValues = that._values.filter(_isFinite);\n\n    var count = barValues.length;\n\n    if (that._bars.length > count) {\n      var ii = that._bars.length;\n\n      for (var i = count; i < ii; ++i) {\n        that._bars[i].dispose();\n      }\n\n      that._bars.splice(count, ii - count);\n    } else if (that._bars.length < count) {\n      for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\n        that._bars.push(new BarWrapper(_i2, that._context));\n      }\n    }\n\n    that._bars.forEach(function (bar, index) {\n      bar.update({\n        color: that._palette.getNextColor(count),\n        value: barValues[index]\n      });\n    });\n  },\n  _updateValues: function _updateValues(values) {\n    var list = _isArray(values) && values || _isFinite(values) && [values] || [];\n    var i;\n    var ii = list.length;\n    var value;\n    this._values.length = ii;\n\n    for (i = 0; i < ii; ++i) {\n      value = list[i];\n      this._values[i] = value = _Number(_isFinite(value) ? value : this._values[i]);\n    }\n\n    if (!this._resizing) {\n      if (!_compareArrays(this._values, this.option(OPTION_VALUES))) {\n        this.option(OPTION_VALUES, this._values.slice());\n      }\n    }\n\n    this._change([\"NODES\"]);\n  },\n  values: function values(arg) {\n    if (void 0 !== arg) {\n      this._updateValues(arg);\n\n      return this;\n    } else {\n      return this._values.slice(0);\n    }\n  },\n  _optionChangesMap: {\n    backgroundColor: \"MOSTLY_TOTAL\",\n    relativeInnerRadius: \"MOSTLY_TOTAL\",\n    barSpacing: \"MOSTLY_TOTAL\",\n    label: \"MOSTLY_TOTAL\",\n    resolveLabelOverlapping: \"MOSTLY_TOTAL\",\n    palette: \"MOSTLY_TOTAL\",\n    paletteExtensionMode: \"MOSTLY_TOTAL\",\n    values: \"VALUES\"\n  },\n  _change_VALUES: function _change_VALUES() {\n    this._updateValues(this.option(OPTION_VALUES));\n  },\n  _factory: clone(BaseGauge.prototype._factory),\n  _optionChangesOrder: [\"VALUES\", \"NODES\"],\n  _initialChanges: [\"VALUES\"],\n  _change_NODES: function _change_NODES() {\n    this._buildNodes();\n  },\n  _change_MOSTLY_TOTAL: function _change_MOSTLY_TOTAL() {\n    this._change([\"NODES\"]);\n\n    this.callBase();\n  },\n  _proxyData: [],\n  _getLegendData: function _getLegendData() {\n    var formatOptions = {};\n\n    var options = this._options.silent();\n\n    var labelFormatOptions = (options.label || {}).format;\n    var legendFormatOptions = (options.legend || {}).itemTextFormat;\n\n    if (legendFormatOptions) {\n      formatOptions.format = legendFormatOptions;\n    } else {\n      formatOptions.format = labelFormatOptions || this._defaultFormatOptions;\n    }\n\n    return (this._bars || []).map(function (b) {\n      return {\n        id: b.index,\n        item: {\n          value: b.getValue(),\n          color: b.getColor(),\n          index: b.index\n        },\n        text: _formatValue(b.getValue(), formatOptions),\n        visible: true,\n        states: {\n          normal: {\n            fill: b.getColor()\n          }\n        }\n      };\n    });\n  }\n});\n\nBarWrapper = function BarWrapper(index, context) {\n  this._context = context;\n  this._tracker = context.renderer.arc().attr({\n    \"stroke-linejoin\": \"round\"\n  });\n  this.index = index;\n};\n\n_extend(BarWrapper.prototype, {\n  dispose: function dispose() {\n    this._background.dispose();\n\n    this._bar.dispose();\n\n    if (this._context.textEnabled) {\n      this._line.dispose();\n\n      this._text.dispose();\n    }\n\n    this._context.tracker.detach(this._tracker);\n\n    this._context = this._settings = this._background = this._bar = this._line = this._text = this._tracker = null;\n    return this;\n  },\n  arrange: function arrange(options) {\n    var context = this._context;\n    this._visible = true;\n    context.tracker.attach(this._tracker, this, {\n      index: this.index\n    });\n    this._background = context.renderer.arc().attr({\n      \"stroke-linejoin\": \"round\",\n      fill: context.backgroundColor\n    }).append(context.group);\n    this._settings = this._settings || {\n      x: context.x,\n      y: context.y,\n      startAngle: context.baseAngle,\n      endAngle: context.baseAngle\n    };\n    this._bar = context.renderer.arc().attr(_extend({\n      \"stroke-linejoin\": \"round\"\n    }, this._settings)).append(context.group);\n\n    if (context.textEnabled) {\n      this._line = context.renderer.path([], \"line\").attr({\n        \"stroke-width\": context.lineWidth\n      }).append(context.group);\n      this._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group);\n    }\n\n    this._angle = isFinite(this._angle) ? this._angle : context.baseAngle;\n    this._settings.outerRadius = options.radius;\n    this._settings.innerRadius = options.radius - context.barSize;\n    this._settings.x = context.x;\n    this._settings.y = context.y;\n\n    this._background.attr(_extend({}, this._settings, {\n      startAngle: context.endAngle,\n      endAngle: context.startAngle,\n      fill: this._context.backgroundColor\n    }));\n\n    this._bar.attr({\n      x: context.x,\n      y: context.y,\n      outerRadius: this._settings.outerRadius,\n      innerRadius: this._settings.innerRadius,\n      fill: this._color\n    });\n\n    this._tracker.attr(this._settings);\n\n    if (context.textEnabled) {\n      this._line.attr({\n        points: [context.x, context.y - this._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\n        stroke: context.lineColor || this._color\n      }).sharp();\n\n      this._text.css({\n        fill: context.textColor || this._color\n      });\n    }\n\n    return this;\n  },\n  getTooltipParameters: function getTooltipParameters() {\n    var cosSin = _getCosAndSin((this._angle + this._context.baseAngle) / 2);\n\n    return {\n      x: _round(this._context.x + (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.cos),\n      y: _round(this._context.y - (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.sin),\n      offset: 0,\n      color: this._color,\n      value: this._value\n    };\n  },\n  setAngle: function setAngle(angle) {\n    var context = this._context;\n    var settings = this._settings;\n    var cosSin;\n    this._angle = angle;\n    setAngles(settings, context.baseAngle, angle);\n\n    this._bar.attr(settings);\n\n    this._tracker.attr(settings);\n\n    if (context.textEnabled) {\n      cosSin = _getCosAndSin(angle);\n      var indent = context.textIndent;\n      var radius = context.textRadius + indent;\n      var x = context.x + radius * cosSin.cos;\n      var y = context.y - radius * cosSin.sin;\n      var halfWidth = .5 * context.textWidth;\n      var textHeight = context.textHeight;\n      var textY = context.textY;\n\n      if (_abs(x - context.x) > indent) {\n        x += x < context.x ? -halfWidth : halfWidth;\n      }\n\n      if (_abs(y - context.y) <= indent) {\n        y -= textY + .5 * textHeight;\n      } else {\n        y -= y < context.y ? textY + textHeight : textY;\n      }\n\n      var text = _formatValue(this._value, context.formatOptions, {\n        index: this.index\n      });\n\n      var visibility = \"\" === text ? \"hidden\" : null;\n\n      this._text.attr({\n        text: text,\n        x: x,\n        y: y,\n        visibility: visibility\n      });\n\n      this._line.attr({\n        visibility: visibility\n      });\n\n      this._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y);\n    }\n\n    return this;\n  },\n  hideLabel: function hideLabel() {\n    this._text.attr({\n      visibility: \"hidden\"\n    });\n\n    this._line.attr({\n      visibility: \"hidden\"\n    });\n  },\n  checkIntersect: function checkIntersect(anotherBar) {\n    var coords = this.calculateLabelCoords();\n    var anotherCoords = anotherBar.calculateLabelCoords();\n\n    if (!coords || !anotherCoords) {\n      return false;\n    }\n\n    var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\n    var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\n    return width * height !== 0;\n  },\n  calculateLabelCoords: function calculateLabelCoords() {\n    if (!this._text) {\n      return;\n    }\n\n    var box = this._text.getBBox();\n\n    return {\n      topLeft: {\n        x: box.x,\n        y: box.y\n      },\n      bottomRight: {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }\n    };\n  },\n  _processValue: function _processValue(value) {\n    return this._context.translator.translate(this._context.translator.adjust(value));\n  },\n  applyValue: function applyValue() {\n    if (!this._visible) {\n      return this;\n    }\n\n    return this.setAngle(this._processValue(this.getValue()));\n  },\n  update: function update(_ref) {\n    var color = _ref.color,\n        value = _ref.value;\n    this._color = color;\n    this._value = value;\n  },\n  hide: function hide() {\n    this._visible = false;\n  },\n  getColor: function getColor() {\n    return this._color;\n  },\n  getValue: function getValue() {\n    return this._value;\n  },\n  beginAnimation: function beginAnimation() {\n    if (!this._visible) {\n      return this;\n    }\n\n    var angle = this._processValue(this.getValue());\n\n    if (!compareFloats(this._angle, angle)) {\n      this._start = this._angle;\n      this._delta = angle - this._angle;\n\n      this._tracker.attr({\n        visibility: \"hidden\"\n      });\n\n      if (this._context.textEnabled) {\n        this._line.attr({\n          visibility: \"hidden\"\n        });\n\n        this._text.attr({\n          visibility: \"hidden\"\n        });\n      }\n    } else {\n      this.animate = _noop;\n      this.setAngle(this._angle);\n    }\n  },\n  animate: function animate(pos) {\n    if (!this._visible) {\n      return this;\n    }\n\n    this._angle = this._start + this._delta * pos;\n    setAngles(this._settings, this._context.baseAngle, this._angle);\n\n    this._bar.attr(this._settings);\n  },\n  endAnimation: function endAnimation() {\n    if (void 0 !== this._delta) {\n      if (compareFloats(this._angle, this._start + this._delta)) {\n        this._tracker.attr({\n          visibility: null\n        });\n\n        this.setAngle(this._angle);\n      }\n    } else {\n      delete this.animate;\n    }\n\n    delete this._start;\n    delete this._delta;\n  }\n});\n\nfunction setAngles(target, angle1, angle2) {\n  target.startAngle = angle1 < angle2 ? angle1 : angle2;\n  target.endAngle = angle1 < angle2 ? angle2 : angle1;\n}\n\nfunction compareFloats(value1, value2) {\n  return _abs(value1 - value2) < 1e-4;\n}\n\nregisterComponent(\"dxBarGauge\", dxBarGauge);\ndxBarGauge.addPlugin(pluginLegend);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/gauges/bar_gauge.js"],"names":["PI_DIV_180","Math","PI","_abs","abs","_round","round","_floor","floor","_min","min","_max","max","registerComponent","clone","noop","extend","normalizeEnum","_normalizeEnum","convertAngleToRendererSpace","getCosAndSin","patchFontOptions","BaseGauge","getSampleText","formatValue","compareArrays","_getSampleText","_formatValue","_compareArrays","dxCircularGauge","_isArray","Array","isArray","_convertAngleToRendererSpace","_getCosAndSin","_patchFontOptions","_Number","Number","_isFinite","isFinite","_noop","_extend","plugin","pluginLegend","OPTION_VALUES","BarWrapper","dxBarGauge","inherit","_rootClass","_themeSection","_fontFields","_initCore","that","callBase","apply","arguments","_barsGroup","_renderer","g","attr","class","linkOn","root","_values","_context","renderer","translator","_translator","tracker","_tracker","group","_animateStep","pos","bars","_bars","i","ii","length","animate","_animateComplete","forEach","bar","endAnimation","_checkOverlap","_disposeCore","linkOff","_setupDomainCore","startValue","option","endValue","setDomain","_baseValue","adjust","_getDefaultSize","width","height","_setupCodomain","prototype","_getApproximateScreenRange","sides","_area","_canvas","right","left","down","up","r","getCodomainRange","_setupAnimationSettings","_animationSettings","step","complete","_cleanContent","linkRemove","stopAnimation","clear","_renderContent","labelOptions","text","bBox","context","linkAppend","textEnabled","visible","textColor","font","color","_themeManager","theme","label","formatOptions","format","_defaultFormatOptions","customizeText","textOptions","align","fontStyles","_textIndent","indent","lineWidth","connectorWidth","lineColor","connectorColor","css","append","getBBox","remove","textY","y","textWidth","textHeight","_applyMainLayout","call","_renderBars","_measureMainElements","result","maxRadius","radius","horizontalMargin","verticalMargin","inverseHorizontalMargin","inverseVerticalMargin","options","area","relativeInnerRadius","_outerRadius","_innerRadius","_barSpacing","barSpacing","backgroundColor","x","startAngle","startCoord","endAngle","endCoord","baseAngle","translate","_arrangeBars","count","_beginValueChanging","barSize","spacing","_count","_setBarsCount","textRadius","textIndent","_palette","reset","unitOffset","colors","generateColors","arrange","_i","hide","_noAnimation","_animateBars","_updateBars","_endValueChanging","_dummyBackground","dispose","arc","outerRadius","innerRadius","fill","applyValue","overlapStrategy","_getOption","sortedBars","concat","sort","a","b","getValue","currentIndex","nextIndex","current","next","checkIntersect","hideLabel","beginAnimation","_","_buildNodes","_options","silent","createPalette","palette","useHighlight","extensionMode","paletteExtensionMode","barValues","filter","splice","_i2","push","index","update","getNextColor","value","_updateValues","values","list","_resizing","slice","_change","arg","_optionChangesMap","resolveLabelOverlapping","_change_VALUES","_factory","_optionChangesOrder","_initialChanges","_change_NODES","_change_MOSTLY_TOTAL","_proxyData","_getLegendData","labelFormatOptions","legendFormatOptions","legend","itemTextFormat","map","id","item","getColor","states","normal","_background","_bar","_line","_text","detach","_settings","_visible","attach","path","_angle","_color","points","stroke","sharp","getTooltipParameters","cosSin","cos","sin","offset","_value","setAngle","angle","settings","setAngles","halfWidth","visibility","rotate","anotherBar","coords","calculateLabelCoords","anotherCoords","bottomRight","topLeft","box","_processValue","_ref","compareFloats","_start","_delta","target","angle1","angle2","value1","value2","addPlugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/bar_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar PI_DIV_180 = Math.PI / 180;\r\nvar _abs = Math.abs;\r\nvar _round = Math.round;\r\nvar _floor = Math.floor;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    clone\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum,\r\n    convertAngleToRendererSpace,\r\n    getCosAndSin,\r\n    patchFontOptions\r\n} from \"../core/utils\";\r\nimport {\r\n    BaseGauge,\r\n    getSampleText,\r\n    formatValue,\r\n    compareArrays\r\n} from \"./base_gauge\";\r\nvar _getSampleText = getSampleText;\r\nvar _formatValue = formatValue;\r\nvar _compareArrays = compareArrays;\r\nimport dxCircularGauge from \"./circular_gauge\";\r\nvar _isArray = Array.isArray;\r\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\r\nvar _getCosAndSin = getCosAndSin;\r\nvar _patchFontOptions = patchFontOptions;\r\nvar _Number = Number;\r\nvar _isFinite = isFinite;\r\nvar _noop = noop;\r\nvar _extend = extend;\r\nimport {\r\n    plugin as pluginLegend\r\n} from \"../components/legend\";\r\nvar OPTION_VALUES = \"values\";\r\nvar BarWrapper;\r\nexport var dxBarGauge = BaseGauge.inherit({\r\n    _rootClass: \"dxbg-bar-gauge\",\r\n    _themeSection: \"barGauge\",\r\n    _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._barsGroup = that._renderer.g().attr({\r\n            class: \"dxbg-bars\"\r\n        }).linkOn(that._renderer.root, \"bars\");\r\n        that._values = [];\r\n        that._context = {\r\n            renderer: that._renderer,\r\n            translator: that._translator,\r\n            tracker: that._tracker,\r\n            group: that._barsGroup\r\n        };\r\n        that._animateStep = function(pos) {\r\n            var bars = that._bars;\r\n            var i;\r\n            var ii;\r\n            for (i = 0, ii = bars.length; i < ii; ++i) {\r\n                bars[i].animate(pos)\r\n            }\r\n        };\r\n        that._animateComplete = function() {\r\n            that._bars.forEach(bar => bar.endAnimation());\r\n            that._checkOverlap()\r\n        }\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that._barsGroup.linkOff();\r\n        that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _setupDomainCore: function() {\r\n        var startValue = this.option(\"startValue\");\r\n        var endValue = this.option(\"endValue\");\r\n        _isFinite(startValue) || (startValue = 0);\r\n        _isFinite(endValue) || (endValue = 100);\r\n        this._translator.setDomain(startValue, endValue);\r\n        this._baseValue = this._translator.adjust(this.option(\"baseValue\"));\r\n        _isFinite(this._baseValue) || (this._baseValue = startValue < endValue ? startValue : endValue)\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 300,\r\n            height: 300\r\n        }\r\n    },\r\n    _setupCodomain: dxCircularGauge.prototype._setupCodomain,\r\n    _getApproximateScreenRange: function() {\r\n        var sides = this._area.sides;\r\n        var width = this._canvas.width / (sides.right - sides.left);\r\n        var height = this._canvas.height / (sides.down - sides.up);\r\n        var r = width < height ? width : height;\r\n        return -this._translator.getCodomainRange() * r * PI_DIV_180\r\n    },\r\n    _setupAnimationSettings: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        if (that._animationSettings) {\r\n            that._animationSettings.step = that._animateStep;\r\n            that._animationSettings.complete = that._animateComplete\r\n        }\r\n    },\r\n    _cleanContent: function() {\r\n        this._barsGroup.linkRemove();\r\n        this._animationSettings && this._barsGroup.stopAnimation();\r\n        this._barsGroup.clear()\r\n    },\r\n    _renderContent: function() {\r\n        var labelOptions = this.option(\"label\");\r\n        var text;\r\n        var bBox;\r\n        var context = this._context;\r\n        this._barsGroup.linkAppend();\r\n        context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\r\n        if (context.textEnabled) {\r\n            context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\r\n            labelOptions = _extend(true, {}, this._themeManager.theme().label, labelOptions);\r\n            context.formatOptions = {\r\n                format: void 0 !== labelOptions.format ? labelOptions.format : this._defaultFormatOptions,\r\n                customizeText: labelOptions.customizeText\r\n            };\r\n            context.textOptions = {\r\n                align: \"center\"\r\n            };\r\n            context.fontStyles = _patchFontOptions(_extend({}, this._themeManager.theme().label.font, labelOptions.font, {\r\n                color: null\r\n            }));\r\n            this._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\r\n            context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\r\n            context.lineColor = labelOptions.connectorColor || null;\r\n            text = this._renderer.text(_getSampleText(this._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(this._barsGroup);\r\n            bBox = text.getBBox();\r\n            text.remove();\r\n            context.textY = bBox.y;\r\n            context.textWidth = bBox.width;\r\n            context.textHeight = bBox.height\r\n        }\r\n        dxCircularGauge.prototype._applyMainLayout.call(this);\r\n        this._renderBars()\r\n    },\r\n    _measureMainElements: function() {\r\n        var result = {\r\n            maxRadius: this._area.radius\r\n        };\r\n        if (this._context.textEnabled) {\r\n            result.horizontalMargin = this._context.textWidth;\r\n            result.verticalMargin = this._context.textHeight;\r\n            result.inverseHorizontalMargin = this._context.textWidth / 2;\r\n            result.inverseVerticalMargin = this._context.textHeight / 2\r\n        }\r\n        return result\r\n    },\r\n    _renderBars: function() {\r\n        var options = _extend({}, this._themeManager.theme(), this.option());\r\n        var radius;\r\n        var area = this._area;\r\n        var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\r\n        radius = area.radius;\r\n        if (this._context.textEnabled) {\r\n            this._textIndent = _round(_min(this._textIndent, radius / 2));\r\n            radius -= this._textIndent\r\n        }\r\n        this._outerRadius = _floor(radius);\r\n        this._innerRadius = _floor(radius * relativeInnerRadius);\r\n        this._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\r\n        _extend(this._context, {\r\n            backgroundColor: options.backgroundColor,\r\n            x: area.x,\r\n            y: area.y,\r\n            startAngle: area.startCoord,\r\n            endAngle: area.endCoord,\r\n            baseAngle: this._translator.translate(this._baseValue)\r\n        });\r\n        this._arrangeBars()\r\n    },\r\n    _arrangeBars: function() {\r\n        var radius = this._outerRadius - this._innerRadius;\r\n        var context = this._context;\r\n        var i;\r\n        var count = this._bars.length;\r\n        this._beginValueChanging();\r\n        context.barSize = count > 0 ? _max((radius - (count - 1) * this._barSpacing) / count, 1) : 0;\r\n        var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), this._barSpacing), 0) : 0;\r\n        var _count = _min(_floor((radius + spacing) / context.barSize), count);\r\n        this._setBarsCount(count);\r\n        radius = this._outerRadius;\r\n        context.textRadius = radius;\r\n        context.textIndent = this._textIndent;\r\n        this._palette.reset();\r\n        var unitOffset = context.barSize + spacing;\r\n        var colors = this._palette.generateColors(_count);\r\n        for (i = 0; i < _count; ++i, radius -= unitOffset) {\r\n            this._bars[i].arrange({\r\n                radius: radius,\r\n                color: colors[i]\r\n            })\r\n        }\r\n        for (var _i = _count; _i < count; _i++) {\r\n            this._bars[_i].hide()\r\n        }\r\n        if (this._animationSettings && !this._noAnimation) {\r\n            this._animateBars()\r\n        } else {\r\n            this._updateBars()\r\n        }\r\n        this._endValueChanging()\r\n    },\r\n    _setBarsCount: function() {\r\n        if (this._bars.length > 0) {\r\n            if (this._dummyBackground) {\r\n                this._dummyBackground.dispose();\r\n                this._dummyBackground = null\r\n            }\r\n        } else {\r\n            if (!this._dummyBackground) {\r\n                this._dummyBackground = this._renderer.arc().attr({\r\n                    \"stroke-linejoin\": \"round\"\r\n                })\r\n            }\r\n            this._dummyBackground.attr({\r\n                x: this._context.x,\r\n                y: this._context.y,\r\n                outerRadius: this._outerRadius,\r\n                innerRadius: this._innerRadius,\r\n                startAngle: this._context.endAngle,\r\n                endAngle: this._context.startAngle,\r\n                fill: this._context.backgroundColor\r\n            }).append(this._barsGroup)\r\n        }\r\n    },\r\n    _updateBars: function() {\r\n        this._bars.forEach(bar => bar.applyValue());\r\n        this._checkOverlap()\r\n    },\r\n    _checkOverlap: function() {\r\n        var bars = this._bars;\r\n        var overlapStrategy = _normalizeEnum(this._getOption(\"resolveLabelOverlapping\", true));\r\n        if (\"none\" === overlapStrategy) {\r\n            return\r\n        }\r\n        var sortedBars = bars.concat().sort((a, b) => a.getValue() - b.getValue());\r\n        var currentIndex = 0;\r\n        var nextIndex = 1;\r\n        while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\r\n            var current = sortedBars[currentIndex];\r\n            var next = sortedBars[nextIndex];\r\n            if (current.checkIntersect(next)) {\r\n                next.hideLabel();\r\n                nextIndex++\r\n            } else {\r\n                currentIndex = nextIndex;\r\n                nextIndex = currentIndex + 1\r\n            }\r\n        }\r\n    },\r\n    _animateBars: function() {\r\n        var i;\r\n        var ii = this._bars.length;\r\n        if (ii > 0) {\r\n            for (i = 0; i < ii; ++i) {\r\n                this._bars[i].beginAnimation()\r\n            }\r\n            this._barsGroup.animate({\r\n                _: 0\r\n            }, this._animationSettings)\r\n        }\r\n    },\r\n    _buildNodes() {\r\n        var that = this;\r\n        var options = that._options.silent();\r\n        that._palette = that._themeManager.createPalette(options.palette, {\r\n            useHighlight: true,\r\n            extensionMode: options.paletteExtensionMode\r\n        });\r\n        that._palette.reset();\r\n        that._bars = that._bars || [];\r\n        that._animationSettings && that._barsGroup.stopAnimation();\r\n        var barValues = that._values.filter(_isFinite);\r\n        var count = barValues.length;\r\n        if (that._bars.length > count) {\r\n            var ii = that._bars.length;\r\n            for (var i = count; i < ii; ++i) {\r\n                that._bars[i].dispose()\r\n            }\r\n            that._bars.splice(count, ii - count)\r\n        } else if (that._bars.length < count) {\r\n            for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\r\n                that._bars.push(new BarWrapper(_i2, that._context))\r\n            }\r\n        }\r\n        that._bars.forEach((bar, index) => {\r\n            bar.update({\r\n                color: that._palette.getNextColor(count),\r\n                value: barValues[index]\r\n            })\r\n        })\r\n    },\r\n    _updateValues: function(values) {\r\n        var list = _isArray(values) && values || _isFinite(values) && [values] || [];\r\n        var i;\r\n        var ii = list.length;\r\n        var value;\r\n        this._values.length = ii;\r\n        for (i = 0; i < ii; ++i) {\r\n            value = list[i];\r\n            this._values[i] = value = _Number(_isFinite(value) ? value : this._values[i])\r\n        }\r\n        if (!this._resizing) {\r\n            if (!_compareArrays(this._values, this.option(OPTION_VALUES))) {\r\n                this.option(OPTION_VALUES, this._values.slice())\r\n            }\r\n        }\r\n        this._change([\"NODES\"])\r\n    },\r\n    values: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._updateValues(arg);\r\n            return this\r\n        } else {\r\n            return this._values.slice(0)\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        backgroundColor: \"MOSTLY_TOTAL\",\r\n        relativeInnerRadius: \"MOSTLY_TOTAL\",\r\n        barSpacing: \"MOSTLY_TOTAL\",\r\n        label: \"MOSTLY_TOTAL\",\r\n        resolveLabelOverlapping: \"MOSTLY_TOTAL\",\r\n        palette: \"MOSTLY_TOTAL\",\r\n        paletteExtensionMode: \"MOSTLY_TOTAL\",\r\n        values: \"VALUES\"\r\n    },\r\n    _change_VALUES: function() {\r\n        this._updateValues(this.option(OPTION_VALUES))\r\n    },\r\n    _factory: clone(BaseGauge.prototype._factory),\r\n    _optionChangesOrder: [\"VALUES\", \"NODES\"],\r\n    _initialChanges: [\"VALUES\"],\r\n    _change_NODES() {\r\n        this._buildNodes()\r\n    },\r\n    _change_MOSTLY_TOTAL: function() {\r\n        this._change([\"NODES\"]);\r\n        this.callBase()\r\n    },\r\n    _proxyData: [],\r\n    _getLegendData() {\r\n        var formatOptions = {};\r\n        var options = this._options.silent();\r\n        var labelFormatOptions = (options.label || {}).format;\r\n        var legendFormatOptions = (options.legend || {}).itemTextFormat;\r\n        if (legendFormatOptions) {\r\n            formatOptions.format = legendFormatOptions\r\n        } else {\r\n            formatOptions.format = labelFormatOptions || this._defaultFormatOptions\r\n        }\r\n        return (this._bars || []).map(b => ({\r\n            id: b.index,\r\n            item: {\r\n                value: b.getValue(),\r\n                color: b.getColor(),\r\n                index: b.index\r\n            },\r\n            text: _formatValue(b.getValue(), formatOptions),\r\n            visible: true,\r\n            states: {\r\n                normal: {\r\n                    fill: b.getColor()\r\n                }\r\n            }\r\n        }))\r\n    }\r\n});\r\nBarWrapper = function(index, context) {\r\n    this._context = context;\r\n    this._tracker = context.renderer.arc().attr({\r\n        \"stroke-linejoin\": \"round\"\r\n    });\r\n    this.index = index\r\n};\r\n_extend(BarWrapper.prototype, {\r\n    dispose: function() {\r\n        this._background.dispose();\r\n        this._bar.dispose();\r\n        if (this._context.textEnabled) {\r\n            this._line.dispose();\r\n            this._text.dispose()\r\n        }\r\n        this._context.tracker.detach(this._tracker);\r\n        this._context = this._settings = this._background = this._bar = this._line = this._text = this._tracker = null;\r\n        return this\r\n    },\r\n    arrange: function(options) {\r\n        var context = this._context;\r\n        this._visible = true;\r\n        context.tracker.attach(this._tracker, this, {\r\n            index: this.index\r\n        });\r\n        this._background = context.renderer.arc().attr({\r\n            \"stroke-linejoin\": \"round\",\r\n            fill: context.backgroundColor\r\n        }).append(context.group);\r\n        this._settings = this._settings || {\r\n            x: context.x,\r\n            y: context.y,\r\n            startAngle: context.baseAngle,\r\n            endAngle: context.baseAngle\r\n        };\r\n        this._bar = context.renderer.arc().attr(_extend({\r\n            \"stroke-linejoin\": \"round\"\r\n        }, this._settings)).append(context.group);\r\n        if (context.textEnabled) {\r\n            this._line = context.renderer.path([], \"line\").attr({\r\n                \"stroke-width\": context.lineWidth\r\n            }).append(context.group);\r\n            this._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group)\r\n        }\r\n        this._angle = isFinite(this._angle) ? this._angle : context.baseAngle;\r\n        this._settings.outerRadius = options.radius;\r\n        this._settings.innerRadius = options.radius - context.barSize;\r\n        this._settings.x = context.x;\r\n        this._settings.y = context.y;\r\n        this._background.attr(_extend({}, this._settings, {\r\n            startAngle: context.endAngle,\r\n            endAngle: context.startAngle,\r\n            fill: this._context.backgroundColor\r\n        }));\r\n        this._bar.attr({\r\n            x: context.x,\r\n            y: context.y,\r\n            outerRadius: this._settings.outerRadius,\r\n            innerRadius: this._settings.innerRadius,\r\n            fill: this._color\r\n        });\r\n        this._tracker.attr(this._settings);\r\n        if (context.textEnabled) {\r\n            this._line.attr({\r\n                points: [context.x, context.y - this._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\r\n                stroke: context.lineColor || this._color\r\n            }).sharp();\r\n            this._text.css({\r\n                fill: context.textColor || this._color\r\n            })\r\n        }\r\n        return this\r\n    },\r\n    getTooltipParameters: function() {\r\n        var cosSin = _getCosAndSin((this._angle + this._context.baseAngle) / 2);\r\n        return {\r\n            x: _round(this._context.x + (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.cos),\r\n            y: _round(this._context.y - (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.sin),\r\n            offset: 0,\r\n            color: this._color,\r\n            value: this._value\r\n        }\r\n    },\r\n    setAngle: function(angle) {\r\n        var context = this._context;\r\n        var settings = this._settings;\r\n        var cosSin;\r\n        this._angle = angle;\r\n        setAngles(settings, context.baseAngle, angle);\r\n        this._bar.attr(settings);\r\n        this._tracker.attr(settings);\r\n        if (context.textEnabled) {\r\n            cosSin = _getCosAndSin(angle);\r\n            var indent = context.textIndent;\r\n            var radius = context.textRadius + indent;\r\n            var x = context.x + radius * cosSin.cos;\r\n            var y = context.y - radius * cosSin.sin;\r\n            var halfWidth = .5 * context.textWidth;\r\n            var textHeight = context.textHeight;\r\n            var textY = context.textY;\r\n            if (_abs(x - context.x) > indent) {\r\n                x += x < context.x ? -halfWidth : halfWidth\r\n            }\r\n            if (_abs(y - context.y) <= indent) {\r\n                y -= textY + .5 * textHeight\r\n            } else {\r\n                y -= y < context.y ? textY + textHeight : textY\r\n            }\r\n            var text = _formatValue(this._value, context.formatOptions, {\r\n                index: this.index\r\n            });\r\n            var visibility = \"\" === text ? \"hidden\" : null;\r\n            this._text.attr({\r\n                text: text,\r\n                x: x,\r\n                y: y,\r\n                visibility: visibility\r\n            });\r\n            this._line.attr({\r\n                visibility: visibility\r\n            });\r\n            this._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y)\r\n        }\r\n        return this\r\n    },\r\n    hideLabel: function() {\r\n        this._text.attr({\r\n            visibility: \"hidden\"\r\n        });\r\n        this._line.attr({\r\n            visibility: \"hidden\"\r\n        })\r\n    },\r\n    checkIntersect: function(anotherBar) {\r\n        var coords = this.calculateLabelCoords();\r\n        var anotherCoords = anotherBar.calculateLabelCoords();\r\n        if (!coords || !anotherCoords) {\r\n            return false\r\n        }\r\n        var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\r\n        var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\r\n        return width * height !== 0\r\n    },\r\n    calculateLabelCoords: function() {\r\n        if (!this._text) {\r\n            return\r\n        }\r\n        var box = this._text.getBBox();\r\n        return {\r\n            topLeft: {\r\n                x: box.x,\r\n                y: box.y\r\n            },\r\n            bottomRight: {\r\n                x: box.x + box.width,\r\n                y: box.y + box.height\r\n            }\r\n        }\r\n    },\r\n    _processValue: function(value) {\r\n        return this._context.translator.translate(this._context.translator.adjust(value))\r\n    },\r\n    applyValue() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        return this.setAngle(this._processValue(this.getValue()))\r\n    },\r\n    update(_ref) {\r\n        var {\r\n            color: color,\r\n            value: value\r\n        } = _ref;\r\n        this._color = color;\r\n        this._value = value\r\n    },\r\n    hide() {\r\n        this._visible = false\r\n    },\r\n    getColor() {\r\n        return this._color\r\n    },\r\n    getValue() {\r\n        return this._value\r\n    },\r\n    beginAnimation: function() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        var angle = this._processValue(this.getValue());\r\n        if (!compareFloats(this._angle, angle)) {\r\n            this._start = this._angle;\r\n            this._delta = angle - this._angle;\r\n            this._tracker.attr({\r\n                visibility: \"hidden\"\r\n            });\r\n            if (this._context.textEnabled) {\r\n                this._line.attr({\r\n                    visibility: \"hidden\"\r\n                });\r\n                this._text.attr({\r\n                    visibility: \"hidden\"\r\n                })\r\n            }\r\n        } else {\r\n            this.animate = _noop;\r\n            this.setAngle(this._angle)\r\n        }\r\n    },\r\n    animate: function(pos) {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        this._angle = this._start + this._delta * pos;\r\n        setAngles(this._settings, this._context.baseAngle, this._angle);\r\n        this._bar.attr(this._settings)\r\n    },\r\n    endAnimation: function() {\r\n        if (void 0 !== this._delta) {\r\n            if (compareFloats(this._angle, this._start + this._delta)) {\r\n                this._tracker.attr({\r\n                    visibility: null\r\n                });\r\n                this.setAngle(this._angle)\r\n            }\r\n        } else {\r\n            delete this.animate\r\n        }\r\n        delete this._start;\r\n        delete this._delta\r\n    }\r\n});\r\n\r\nfunction setAngles(target, angle1, angle2) {\r\n    target.startAngle = angle1 < angle2 ? angle1 : angle2;\r\n    target.endAngle = angle1 < angle2 ? angle2 : angle1\r\n}\r\n\r\nfunction compareFloats(value1, value2) {\r\n    return _abs(value1 - value2) < 1e-4\r\n}\r\nregisterComponent(\"dxBarGauge\", dxBarGauge);\r\ndxBarGauge.addPlugin(pluginLegend);\r\n"]},"metadata":{},"sourceType":"module"}