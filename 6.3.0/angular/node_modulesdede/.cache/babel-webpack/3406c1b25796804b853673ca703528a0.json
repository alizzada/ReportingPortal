{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.command_manager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { isString } from \"../../core/utils/type\";\nimport messageLocalization from \"../../localization/message\";\nexport var FileManagerCommandManager = /*#__PURE__*/function () {\n  function FileManagerCommandManager(permissions) {\n    _classCallCheck(this, FileManagerCommandManager);\n\n    this._actions = {};\n    this._permissions = permissions || {};\n\n    this._initCommands();\n  }\n\n  _createClass(FileManagerCommandManager, [{\n    key: \"_initCommands\",\n    value: function _initCommands() {\n      var _this = this;\n\n      this._commands = [{\n        name: \"create\",\n        text: messageLocalization.format(\"dxFileManager-commandCreate\"),\n        icon: \"newfolder\",\n        enabled: this._permissions.create,\n        noFileItemRequired: true\n      }, {\n        name: \"rename\",\n        text: messageLocalization.format(\"dxFileManager-commandRename\"),\n        icon: \"rename\",\n        enabled: this._permissions.rename,\n        isSingleFileItemCommand: true\n      }, {\n        name: \"move\",\n        text: messageLocalization.format(\"dxFileManager-commandMove\"),\n        icon: \"movetofolder\",\n        enabled: this._permissions.move\n      }, {\n        name: \"copy\",\n        text: messageLocalization.format(\"dxFileManager-commandCopy\"),\n        icon: \"copy\",\n        enabled: this._permissions.copy\n      }, {\n        name: \"delete\",\n        text: messageLocalization.format(\"dxFileManager-commandDelete\"),\n        icon: \"trash\",\n        enabled: this._permissions.delete\n      }, {\n        name: \"download\",\n        text: messageLocalization.format(\"dxFileManager-commandDownload\"),\n        icon: \"download\",\n        enabled: this._permissions.download\n      }, {\n        name: \"upload\",\n        text: messageLocalization.format(\"dxFileManager-commandUpload\"),\n        icon: \"upload\",\n        enabled: this._permissions.upload,\n        noFileItemRequired: true\n      }, {\n        name: \"refresh\",\n        text: messageLocalization.format(\"dxFileManager-commandRefresh\"),\n        icon: \"dx-filemanager-i dx-filemanager-i-refresh\",\n        enabled: true,\n        noFileItemRequired: true\n      }, {\n        name: \"thumbnails\",\n        text: messageLocalization.format(\"dxFileManager-commandThumbnails\"),\n        icon: \"mediumiconslayout\",\n        enabled: true,\n        noFileItemRequired: true\n      }, {\n        name: \"details\",\n        text: messageLocalization.format(\"dxFileManager-commandDetails\"),\n        icon: \"detailslayout\",\n        enabled: true,\n        noFileItemRequired: true\n      }, {\n        name: \"clearSelection\",\n        text: messageLocalization.format(\"dxFileManager-commandClearSelection\"),\n        icon: \"remove\",\n        enabled: true\n      }, {\n        name: \"showNavPane\",\n        hint: messageLocalization.format(\"dxFileManager-commandShowNavPane\"),\n        icon: \"menu\",\n        enabled: false,\n        noFileItemRequired: true\n      }];\n      this._commandMap = {};\n\n      this._commands.forEach(function (command) {\n        _this._commandMap[command.name] = command;\n      });\n    }\n  }, {\n    key: \"registerActions\",\n    value: function registerActions(actions) {\n      this._actions = extend(this._actions, actions);\n    }\n  }, {\n    key: \"executeCommand\",\n    value: function executeCommand(command, arg) {\n      var commandName = isString(command) ? command : command.name;\n      var action = this._actions[commandName];\n\n      if (action) {\n        return action(arg);\n      }\n    }\n  }, {\n    key: \"setCommandEnabled\",\n    value: function setCommandEnabled(commandName, enabled) {\n      var command = this.getCommandByName(commandName);\n\n      if (command) {\n        command.enabled = enabled;\n      }\n    }\n  }, {\n    key: \"getCommandByName\",\n    value: function getCommandByName(name) {\n      return this._commandMap[name];\n    }\n  }, {\n    key: \"isCommandAvailable\",\n    value: function isCommandAvailable(commandName, itemInfos) {\n      var command = this.getCommandByName(commandName);\n\n      if (!command || !command.enabled) {\n        return false;\n      }\n\n      if (command.noFileItemRequired) {\n        return true;\n      }\n\n      var itemsLength = itemInfos && itemInfos.length || 0;\n\n      if (0 === itemsLength || itemInfos.some(function (item) {\n        return item.fileItem.isRoot() || item.fileItem.isParentFolder;\n      })) {\n        return false;\n      }\n\n      if (\"download\" === commandName) {\n        return itemInfos.every(function (itemInfo) {\n          return !itemInfo.fileItem.isDirectory;\n        });\n      }\n\n      return !command.isSingleFileItemCommand || 1 === itemsLength;\n    }\n  }]);\n\n  return FileManagerCommandManager;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.command_manager.js"],"names":["extend","isString","messageLocalization","FileManagerCommandManager","permissions","_actions","_permissions","_initCommands","_commands","name","text","format","icon","enabled","create","noFileItemRequired","rename","isSingleFileItemCommand","move","copy","delete","download","upload","hint","_commandMap","forEach","command","actions","arg","commandName","action","getCommandByName","itemInfos","itemsLength","length","some","item","fileItem","isRoot","isParentFolder","every","itemInfo","isDirectory"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.command_manager.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nexport class FileManagerCommandManager {\r\n    constructor(permissions) {\r\n        this._actions = {};\r\n        this._permissions = permissions || {};\r\n        this._initCommands()\r\n    }\r\n    _initCommands() {\r\n        this._commands = [{\r\n            name: \"create\",\r\n            text: messageLocalization.format(\"dxFileManager-commandCreate\"),\r\n            icon: \"newfolder\",\r\n            enabled: this._permissions.create,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"rename\",\r\n            text: messageLocalization.format(\"dxFileManager-commandRename\"),\r\n            icon: \"rename\",\r\n            enabled: this._permissions.rename,\r\n            isSingleFileItemCommand: true\r\n        }, {\r\n            name: \"move\",\r\n            text: messageLocalization.format(\"dxFileManager-commandMove\"),\r\n            icon: \"movetofolder\",\r\n            enabled: this._permissions.move\r\n        }, {\r\n            name: \"copy\",\r\n            text: messageLocalization.format(\"dxFileManager-commandCopy\"),\r\n            icon: \"copy\",\r\n            enabled: this._permissions.copy\r\n        }, {\r\n            name: \"delete\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDelete\"),\r\n            icon: \"trash\",\r\n            enabled: this._permissions.delete\r\n        }, {\r\n            name: \"download\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDownload\"),\r\n            icon: \"download\",\r\n            enabled: this._permissions.download\r\n        }, {\r\n            name: \"upload\",\r\n            text: messageLocalization.format(\"dxFileManager-commandUpload\"),\r\n            icon: \"upload\",\r\n            enabled: this._permissions.upload,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"refresh\",\r\n            text: messageLocalization.format(\"dxFileManager-commandRefresh\"),\r\n            icon: \"dx-filemanager-i dx-filemanager-i-refresh\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"thumbnails\",\r\n            text: messageLocalization.format(\"dxFileManager-commandThumbnails\"),\r\n            icon: \"mediumiconslayout\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"details\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDetails\"),\r\n            icon: \"detailslayout\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"clearSelection\",\r\n            text: messageLocalization.format(\"dxFileManager-commandClearSelection\"),\r\n            icon: \"remove\",\r\n            enabled: true\r\n        }, {\r\n            name: \"showNavPane\",\r\n            hint: messageLocalization.format(\"dxFileManager-commandShowNavPane\"),\r\n            icon: \"menu\",\r\n            enabled: false,\r\n            noFileItemRequired: true\r\n        }];\r\n        this._commandMap = {};\r\n        this._commands.forEach(command => {\r\n            this._commandMap[command.name] = command\r\n        })\r\n    }\r\n    registerActions(actions) {\r\n        this._actions = extend(this._actions, actions)\r\n    }\r\n    executeCommand(command, arg) {\r\n        var commandName = isString(command) ? command : command.name;\r\n        var action = this._actions[commandName];\r\n        if (action) {\r\n            return action(arg)\r\n        }\r\n    }\r\n    setCommandEnabled(commandName, enabled) {\r\n        var command = this.getCommandByName(commandName);\r\n        if (command) {\r\n            command.enabled = enabled\r\n        }\r\n    }\r\n    getCommandByName(name) {\r\n        return this._commandMap[name]\r\n    }\r\n    isCommandAvailable(commandName, itemInfos) {\r\n        var command = this.getCommandByName(commandName);\r\n        if (!command || !command.enabled) {\r\n            return false\r\n        }\r\n        if (command.noFileItemRequired) {\r\n            return true\r\n        }\r\n        var itemsLength = itemInfos && itemInfos.length || 0;\r\n        if (0 === itemsLength || itemInfos.some(item => item.fileItem.isRoot() || item.fileItem.isParentFolder)) {\r\n            return false\r\n        }\r\n        if (\"download\" === commandName) {\r\n            return itemInfos.every(itemInfo => !itemInfo.fileItem.isDirectory)\r\n        }\r\n        return !command.isSingleFileItemCommand || 1 === itemsLength\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}