{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/slider/ui.slider_handle.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport Tooltip from \"../tooltip\";\nimport { resetPosition, move, locate } from \"../../animation/translator\";\nimport positionUtils from \"../../animation/position\";\nimport { fitIntoRange } from \"../../core/utils/math\";\nimport { isDefined, type } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport numberLocalization from \"../../localization/number\";\nvar SLIDER_CLASS = \"dx-slider\";\nvar SLIDER_HANDLE_CLASS = \"dx-slider-handle\";\nvar POSITION_ALIASES = {\n  top: {\n    my: \"bottom center\",\n    at: \"top center\",\n    collision: \"none\"\n  },\n  bottom: {\n    my: \"top center\",\n    at: \"bottom center\",\n    collision: \"none\"\n  },\n  right: {\n    my: \"left center\",\n    at: \"right center\",\n    collision: \"none\"\n  },\n  left: {\n    my: \"right center\",\n    at: \"left center\",\n    collision: \"none\"\n  }\n};\nvar SliderHandle = Widget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      hoverStateEnabled: false,\n      value: 0,\n      tooltipEnabled: false,\n      tooltipFormat: function tooltipFormat(v) {\n        return v;\n      },\n      tooltipPosition: \"top\",\n      tooltipShowMode: \"onHover\",\n      tooltipFitIn: null\n    });\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n    this.$element().addClass(SLIDER_HANDLE_CLASS);\n    this.setAria({\n      role: \"slider\",\n      valuenow: this.option(\"value\")\n    });\n  },\n  _render: function _render() {\n    this._renderTooltip();\n\n    this.callBase();\n  },\n  _renderTooltip: function _renderTooltip() {\n    if (this.option(\"tooltipEnabled\")) {\n      if (!this._$tooltip) {\n        this._$tooltip = $(\"<div>\").appendTo(this.$element());\n      }\n\n      this._$slider = this.$element().closest(\".\" + SLIDER_CLASS);\n\n      this._updateTooltip();\n    } else {\n      this._removeTooltip();\n    }\n  },\n  _createTooltip: function _createTooltip() {\n    if (this._tooltip) {\n      return false;\n    }\n\n    this._tooltip = this._createComponent(this._$tooltip, Tooltip, {\n      visible: true,\n      target: this.$element(),\n      closeOnOutsideClick: false,\n      container: this.$element(),\n      hideTopOverlayHandler: null,\n      closeOnTargetScroll: false,\n      onPositioned: function (args) {\n        this._saveTooltipElements(args.component);\n\n        this._saveTooltipLocation();\n\n        this._centeredTooltipPosition();\n      }.bind(this),\n      animation: null,\n      arrowPosition: null,\n      templatesRenderAsynchronously: false,\n      _fixedPosition: false\n    });\n    return true;\n  },\n  _removeTooltip: function _removeTooltip() {\n    if (!this._$tooltip) {\n      return;\n    }\n\n    this._$tooltip.remove();\n\n    delete this._$tooltip;\n    delete this._tooltip;\n  },\n  _renderTooltipPosition: function _renderTooltipPosition() {\n    if (!this._tooltip) {\n      return;\n    }\n\n    var position = this.option(\"tooltipPosition\");\n\n    this._saveTooltipElements();\n\n    this._resetTooltipPosition();\n\n    if (\"string\" === type(position)) {\n      position = extend({\n        boundary: this._$slider,\n        boundaryOffset: {\n          h: 1,\n          v: 1\n        }\n      }, POSITION_ALIASES[position]);\n    }\n\n    this._tooltip.option(\"position\", position);\n\n    this._saveTooltipLocation();\n  },\n  _saveTooltipElements: function _saveTooltipElements(tooltip) {\n    tooltip = this._tooltip || tooltip;\n    this._$tooltipContent = tooltip.$content().parent();\n    this._$tooltipArrow = this._$tooltipContent.find(\".dx-popover-arrow\");\n  },\n  _resetTooltipPosition: function _resetTooltipPosition() {\n    resetPosition(this._$tooltipContent);\n    resetPosition(this._$tooltipArrow);\n  },\n  _saveTooltipLocation: function _saveTooltipLocation() {\n    this._contentLocate = locate(this._$tooltipContent);\n  },\n  _centeredTooltipPosition: function _centeredTooltipPosition() {\n    if (!this._tooltip) {\n      return;\n    }\n\n    this._$tooltipContent.outerWidth(\"auto\");\n\n    var outerWidthWithoutRounding = getBoundingRect(this._$tooltipContent.get(0)).width;\n    var tooltipOuterWidth = Math.ceil(outerWidthWithoutRounding);\n    var roundedTooltipOuterWidth = tooltipOuterWidth % 2 + tooltipOuterWidth;\n\n    this._$tooltipContent.outerWidth(roundedTooltipOuterWidth);\n\n    var tooltipCenter = (roundedTooltipOuterWidth - this.$element().width()) / 2;\n    this._contentLocate.left = -tooltipCenter;\n\n    this._$tooltipArrow.css({\n      marginLeft: -this._$tooltipArrow.outerWidth() / 2,\n      left: \"50%\"\n    });\n\n    this._fitTooltip();\n  },\n  _fitTooltip: function _fitTooltip() {\n    if (!this._tooltip) {\n      return;\n    }\n\n    var position = this.option(\"tooltipPosition\");\n\n    if (\"string\" === type(position)) {\n      position = extend({\n        of: this.$element(),\n        boundary: this._$slider,\n        boundaryOffset: {\n          h: 2,\n          v: 1\n        }\n      }, POSITION_ALIASES[position], {\n        collision: \"fit none\"\n      });\n    }\n\n    var calculatePosition = positionUtils.calculate(this._$tooltipContent, position);\n    var isLeftSide = \"left\" === calculatePosition.h.collisionSide;\n    var arrowLeft = (isLeftSide ? -1 : 1) * calculatePosition.h.oversize;\n    var arrowMinLeft = this._contentLocate.left;\n\n    var arrowMaxRight = this._contentLocate.left + this._$tooltipContent.outerWidth() - this._$tooltipArrow.outerWidth();\n\n    move(this._$tooltipContent, {\n      left: this._contentLocate.left + (isLeftSide ? 1 : -1) * calculatePosition.h.oversize\n    });\n    move(this._$tooltipArrow, {\n      left: fitIntoRange(arrowLeft, arrowMinLeft, arrowMaxRight)\n    });\n  },\n  _getFormattedValue: function _getFormattedValue(value) {\n    return numberLocalization.format(value, this.option(\"tooltipFormat\"));\n  },\n  _renderValue: function _renderValue() {\n    if (!this._tooltip) {\n      return;\n    }\n\n    var value = this.option(\"value\");\n\n    this._tooltip.$content().html(this._getFormattedValue(value));\n\n    this._fitTooltip();\n  },\n  _updateTooltip: function _updateTooltip() {\n    var hoverMode = /^onhover$/i.test(this.option(\"tooltipShowMode\"));\n\n    if (!hoverMode) {\n      this._createTooltip();\n    }\n\n    this.$element().toggleClass(\"dx-slider-tooltip-on-hover\", hoverMode);\n\n    this._renderTooltipPosition();\n\n    this._renderValue();\n\n    this._centeredTooltipPosition();\n  },\n  _clean: function _clean() {\n    this.callBase();\n    delete this._$tooltip;\n    delete this._tooltip;\n  },\n  _ensureTooltipIsCentered: function _ensureTooltipIsCentered(value, previousValue) {\n    if (isDefined(value) && isDefined(previousValue) && value.toString().length !== previousValue.toString().length) {\n      this._centeredTooltipPosition();\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"tooltipFormat\":\n        this._renderValue();\n\n        break;\n\n      case \"value\":\n        this._renderValue();\n\n        var value = this._getFormattedValue(args.value);\n\n        var previousValue = this._getFormattedValue(args.previousValue);\n\n        this._ensureTooltipIsCentered(value, previousValue);\n\n        this.setAria(\"valuenow\", args.value);\n        break;\n\n      case \"tooltipEnabled\":\n        this._renderTooltip();\n\n        break;\n\n      case \"tooltipPosition\":\n        this._renderTooltipPosition();\n\n        this._centeredTooltipPosition();\n\n        break;\n\n      case \"tooltipShowMode\":\n        this._updateTooltip();\n\n        break;\n\n      case \"tooltipFitIn\":\n        this._fitTooltip();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  fitTooltipPosition: function fitTooltipPosition() {\n    this._fitTooltip();\n  },\n  updateTooltip: function updateTooltip() {\n    if (!this._createTooltip()) {\n      return;\n    }\n\n    this._renderTooltipPosition();\n\n    this._renderValue();\n\n    this._centeredTooltipPosition();\n  },\n  repaint: function repaint() {\n    this._renderTooltipPosition();\n\n    this._centeredTooltipPosition();\n\n    if (this._tooltip) {\n      this._tooltip._visibilityChanged(true);\n    }\n  }\n});\nexport default SliderHandle;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/slider/ui.slider_handle.js"],"names":["$","Widget","Tooltip","resetPosition","move","locate","positionUtils","fitIntoRange","isDefined","type","extend","getBoundingRect","numberLocalization","SLIDER_CLASS","SLIDER_HANDLE_CLASS","POSITION_ALIASES","top","my","at","collision","bottom","right","left","SliderHandle","inherit","_getDefaultOptions","callBase","hoverStateEnabled","value","tooltipEnabled","tooltipFormat","v","tooltipPosition","tooltipShowMode","tooltipFitIn","_initMarkup","$element","addClass","setAria","role","valuenow","option","_render","_renderTooltip","_$tooltip","appendTo","_$slider","closest","_updateTooltip","_removeTooltip","_createTooltip","_tooltip","_createComponent","visible","target","closeOnOutsideClick","container","hideTopOverlayHandler","closeOnTargetScroll","onPositioned","args","_saveTooltipElements","component","_saveTooltipLocation","_centeredTooltipPosition","bind","animation","arrowPosition","templatesRenderAsynchronously","_fixedPosition","remove","_renderTooltipPosition","position","_resetTooltipPosition","boundary","boundaryOffset","h","tooltip","_$tooltipContent","$content","parent","_$tooltipArrow","find","_contentLocate","outerWidth","outerWidthWithoutRounding","get","width","tooltipOuterWidth","Math","ceil","roundedTooltipOuterWidth","tooltipCenter","css","marginLeft","_fitTooltip","of","calculatePosition","calculate","isLeftSide","collisionSide","arrowLeft","oversize","arrowMinLeft","arrowMaxRight","_getFormattedValue","format","_renderValue","html","hoverMode","test","toggleClass","_clean","_ensureTooltipIsCentered","previousValue","toString","length","_optionChanged","name","fitTooltipPosition","updateTooltip","repaint","_visibilityChanged"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/slider/ui.slider_handle.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport Tooltip from \"../tooltip\";\r\nimport {\r\n    resetPosition,\r\n    move,\r\n    locate\r\n} from \"../../animation/translator\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    fitIntoRange\r\n} from \"../../core/utils/math\";\r\nimport {\r\n    isDefined,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport numberLocalization from \"../../localization/number\";\r\nvar SLIDER_CLASS = \"dx-slider\";\r\nvar SLIDER_HANDLE_CLASS = \"dx-slider-handle\";\r\nvar POSITION_ALIASES = {\r\n    top: {\r\n        my: \"bottom center\",\r\n        at: \"top center\",\r\n        collision: \"none\"\r\n    },\r\n    bottom: {\r\n        my: \"top center\",\r\n        at: \"bottom center\",\r\n        collision: \"none\"\r\n    },\r\n    right: {\r\n        my: \"left center\",\r\n        at: \"right center\",\r\n        collision: \"none\"\r\n    },\r\n    left: {\r\n        my: \"right center\",\r\n        at: \"left center\",\r\n        collision: \"none\"\r\n    }\r\n};\r\nvar SliderHandle = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: false,\r\n            value: 0,\r\n            tooltipEnabled: false,\r\n            tooltipFormat: function(v) {\r\n                return v\r\n            },\r\n            tooltipPosition: \"top\",\r\n            tooltipShowMode: \"onHover\",\r\n            tooltipFitIn: null\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(SLIDER_HANDLE_CLASS);\r\n        this.setAria({\r\n            role: \"slider\",\r\n            valuenow: this.option(\"value\")\r\n        })\r\n    },\r\n    _render: function() {\r\n        this._renderTooltip();\r\n        this.callBase()\r\n    },\r\n    _renderTooltip: function() {\r\n        if (this.option(\"tooltipEnabled\")) {\r\n            if (!this._$tooltip) {\r\n                this._$tooltip = $(\"<div>\").appendTo(this.$element())\r\n            }\r\n            this._$slider = this.$element().closest(\".\" + SLIDER_CLASS);\r\n            this._updateTooltip()\r\n        } else {\r\n            this._removeTooltip()\r\n        }\r\n    },\r\n    _createTooltip: function() {\r\n        if (this._tooltip) {\r\n            return false\r\n        }\r\n        this._tooltip = this._createComponent(this._$tooltip, Tooltip, {\r\n            visible: true,\r\n            target: this.$element(),\r\n            closeOnOutsideClick: false,\r\n            container: this.$element(),\r\n            hideTopOverlayHandler: null,\r\n            closeOnTargetScroll: false,\r\n            onPositioned: function(args) {\r\n                this._saveTooltipElements(args.component);\r\n                this._saveTooltipLocation();\r\n                this._centeredTooltipPosition()\r\n            }.bind(this),\r\n            animation: null,\r\n            arrowPosition: null,\r\n            templatesRenderAsynchronously: false,\r\n            _fixedPosition: false\r\n        });\r\n        return true\r\n    },\r\n    _removeTooltip: function() {\r\n        if (!this._$tooltip) {\r\n            return\r\n        }\r\n        this._$tooltip.remove();\r\n        delete this._$tooltip;\r\n        delete this._tooltip\r\n    },\r\n    _renderTooltipPosition: function() {\r\n        if (!this._tooltip) {\r\n            return\r\n        }\r\n        var position = this.option(\"tooltipPosition\");\r\n        this._saveTooltipElements();\r\n        this._resetTooltipPosition();\r\n        if (\"string\" === type(position)) {\r\n            position = extend({\r\n                boundary: this._$slider,\r\n                boundaryOffset: {\r\n                    h: 1,\r\n                    v: 1\r\n                }\r\n            }, POSITION_ALIASES[position])\r\n        }\r\n        this._tooltip.option(\"position\", position);\r\n        this._saveTooltipLocation()\r\n    },\r\n    _saveTooltipElements: function(tooltip) {\r\n        tooltip = this._tooltip || tooltip;\r\n        this._$tooltipContent = tooltip.$content().parent();\r\n        this._$tooltipArrow = this._$tooltipContent.find(\".dx-popover-arrow\")\r\n    },\r\n    _resetTooltipPosition: function() {\r\n        resetPosition(this._$tooltipContent);\r\n        resetPosition(this._$tooltipArrow)\r\n    },\r\n    _saveTooltipLocation: function() {\r\n        this._contentLocate = locate(this._$tooltipContent)\r\n    },\r\n    _centeredTooltipPosition: function() {\r\n        if (!this._tooltip) {\r\n            return\r\n        }\r\n        this._$tooltipContent.outerWidth(\"auto\");\r\n        var outerWidthWithoutRounding = getBoundingRect(this._$tooltipContent.get(0)).width;\r\n        var tooltipOuterWidth = Math.ceil(outerWidthWithoutRounding);\r\n        var roundedTooltipOuterWidth = tooltipOuterWidth % 2 + tooltipOuterWidth;\r\n        this._$tooltipContent.outerWidth(roundedTooltipOuterWidth);\r\n        var tooltipCenter = (roundedTooltipOuterWidth - this.$element().width()) / 2;\r\n        this._contentLocate.left = -tooltipCenter;\r\n        this._$tooltipArrow.css({\r\n            marginLeft: -this._$tooltipArrow.outerWidth() / 2,\r\n            left: \"50%\"\r\n        });\r\n        this._fitTooltip()\r\n    },\r\n    _fitTooltip: function() {\r\n        if (!this._tooltip) {\r\n            return\r\n        }\r\n        var position = this.option(\"tooltipPosition\");\r\n        if (\"string\" === type(position)) {\r\n            position = extend({\r\n                of: this.$element(),\r\n                boundary: this._$slider,\r\n                boundaryOffset: {\r\n                    h: 2,\r\n                    v: 1\r\n                }\r\n            }, POSITION_ALIASES[position], {\r\n                collision: \"fit none\"\r\n            })\r\n        }\r\n        var calculatePosition = positionUtils.calculate(this._$tooltipContent, position);\r\n        var isLeftSide = \"left\" === calculatePosition.h.collisionSide;\r\n        var arrowLeft = (isLeftSide ? -1 : 1) * calculatePosition.h.oversize;\r\n        var arrowMinLeft = this._contentLocate.left;\r\n        var arrowMaxRight = this._contentLocate.left + this._$tooltipContent.outerWidth() - this._$tooltipArrow.outerWidth();\r\n        move(this._$tooltipContent, {\r\n            left: this._contentLocate.left + (isLeftSide ? 1 : -1) * calculatePosition.h.oversize\r\n        });\r\n        move(this._$tooltipArrow, {\r\n            left: fitIntoRange(arrowLeft, arrowMinLeft, arrowMaxRight)\r\n        })\r\n    },\r\n    _getFormattedValue: function(value) {\r\n        return numberLocalization.format(value, this.option(\"tooltipFormat\"))\r\n    },\r\n    _renderValue: function() {\r\n        if (!this._tooltip) {\r\n            return\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._tooltip.$content().html(this._getFormattedValue(value));\r\n        this._fitTooltip()\r\n    },\r\n    _updateTooltip: function() {\r\n        var hoverMode = /^onhover$/i.test(this.option(\"tooltipShowMode\"));\r\n        if (!hoverMode) {\r\n            this._createTooltip()\r\n        }\r\n        this.$element().toggleClass(\"dx-slider-tooltip-on-hover\", hoverMode);\r\n        this._renderTooltipPosition();\r\n        this._renderValue();\r\n        this._centeredTooltipPosition()\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        delete this._$tooltip;\r\n        delete this._tooltip\r\n    },\r\n    _ensureTooltipIsCentered: function(value, previousValue) {\r\n        if (isDefined(value) && isDefined(previousValue) && value.toString().length !== previousValue.toString().length) {\r\n            this._centeredTooltipPosition()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"tooltipFormat\":\r\n                this._renderValue();\r\n                break;\r\n            case \"value\":\r\n                this._renderValue();\r\n                var value = this._getFormattedValue(args.value);\r\n                var previousValue = this._getFormattedValue(args.previousValue);\r\n                this._ensureTooltipIsCentered(value, previousValue);\r\n                this.setAria(\"valuenow\", args.value);\r\n                break;\r\n            case \"tooltipEnabled\":\r\n                this._renderTooltip();\r\n                break;\r\n            case \"tooltipPosition\":\r\n                this._renderTooltipPosition();\r\n                this._centeredTooltipPosition();\r\n                break;\r\n            case \"tooltipShowMode\":\r\n                this._updateTooltip();\r\n                break;\r\n            case \"tooltipFitIn\":\r\n                this._fitTooltip();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    fitTooltipPosition: function() {\r\n        this._fitTooltip()\r\n    },\r\n    updateTooltip: function() {\r\n        if (!this._createTooltip()) {\r\n            return\r\n        }\r\n        this._renderTooltipPosition();\r\n        this._renderValue();\r\n        this._centeredTooltipPosition()\r\n    },\r\n    repaint: function() {\r\n        this._renderTooltipPosition();\r\n        this._centeredTooltipPosition();\r\n        if (this._tooltip) {\r\n            this._tooltip._visibilityChanged(true)\r\n        }\r\n    }\r\n});\r\nexport default SliderHandle;\r\n"]},"metadata":{},"sourceType":"module"}