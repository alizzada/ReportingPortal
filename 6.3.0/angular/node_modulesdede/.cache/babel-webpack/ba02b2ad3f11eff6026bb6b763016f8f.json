{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.thumbnails.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport { name as contextMenuEventName } from \"../../events/contextmenu\";\nimport { getDisplayFileSize } from \"./ui.file_manager.common\";\nimport messageLocalization from \"../../localization/message\";\nimport FileManagerThumbnailListBox from \"./ui.file_manager.items_list.thumbnails.list_box\";\nimport FileManagerItemListBase from \"./ui.file_manager.item_list\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS = \"dx-filemanager-thumbnails\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS = \"dx-filemanager-thumbnails-item-thumbnail\";\nvar FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE = \"dxFileManager_thumbnails\";\n\nvar FileManagerThumbnailsItemList = /*#__PURE__*/function (_FileManagerItemListB) {\n  _inherits(FileManagerThumbnailsItemList, _FileManagerItemListB);\n\n  var _super = _createSuper(FileManagerThumbnailsItemList);\n\n  function FileManagerThumbnailsItemList() {\n    _classCallCheck(this, FileManagerThumbnailsItemList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerThumbnailsItemList, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_initMarkup\", this).call(this);\n\n      this.$element().addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS);\n      var contextMenuEvent = addNamespace(contextMenuEventName, FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE);\n      eventsEngine.on(this.$element(), contextMenuEvent, this._onContextMenu.bind(this));\n\n      this._createItemList();\n    }\n  }, {\n    key: \"_createItemList\",\n    value: function _createItemList() {\n      var _this = this;\n\n      var selectionMode = this._isMultipleSelectionMode() ? \"multiple\" : \"single\";\n      var $itemListContainer = $(\"<div>\").appendTo(this.$element());\n      this._itemList = this._createComponent($itemListContainer, FileManagerThumbnailListBox, {\n        dataSource: this._createDataSource(),\n        selectionMode: selectionMode,\n        selectedItemKeys: this.option(\"selectedItemKeys\"),\n        focusedItemKey: this.option(\"focusedItemKey\"),\n        activeStateEnabled: true,\n        hoverStateEnabled: true,\n        loopItemFocus: false,\n        focusStateEnabled: true,\n        onItemEnterKeyPressed: this._tryOpen.bind(this),\n        itemThumbnailTemplate: this._getItemThumbnailContainer.bind(this),\n        getTooltipText: this._getTooltipText.bind(this),\n        onSelectionChanged: this._onItemListSelectionChanged.bind(this),\n        onFocusedItemChanged: this._onItemListFocusedItemChanged.bind(this),\n        onContentReady: function onContentReady() {\n          var _this$_refreshDeferre;\n\n          return null === (_this$_refreshDeferre = _this._refreshDeferred) || void 0 === _this$_refreshDeferre ? void 0 : _this$_refreshDeferre.resolve();\n        }\n      });\n    }\n  }, {\n    key: \"_onContextMenu\",\n    value: function _onContextMenu(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (!this._isDesktop()) {\n        return;\n      }\n\n      var items = null;\n      var targetItemElement = $(e.target).closest(this._getItemSelector());\n      var targetItem = null;\n\n      if (targetItemElement.length > 0) {\n        targetItem = this._itemList.getItemByItemElement(targetItemElement);\n\n        this._itemList.selectItem(targetItem);\n\n        items = this._getFileItemsForContextMenu(targetItem);\n      }\n\n      var target = {\n        itemData: targetItem,\n        itemElement: targetItemElement.length ? targetItemElement : void 0\n      };\n\n      this._showContextMenu(items, e.target, e, target);\n    }\n  }, {\n    key: \"_getItemThumbnailCssClass\",\n    value: function _getItemThumbnailCssClass() {\n      return FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS;\n    }\n  }, {\n    key: \"_getItemSelector\",\n    value: function _getItemSelector() {\n      return \".\".concat(FILE_MANAGER_THUMBNAILS_ITEM_CLASS);\n    }\n  }, {\n    key: \"_getTooltipText\",\n    value: function _getTooltipText(fileItemInfo) {\n      var item = fileItemInfo.fileItem;\n\n      if (item.tooltipText) {\n        return item.tooltipText;\n      }\n\n      var text = \"\".concat(item.name, \"\\r\\n\");\n\n      if (!item.isDirectory) {\n        text += \"\".concat(messageLocalization.format(\"dxFileManager-listThumbnailsTooltipTextSize\"), \": \").concat(getDisplayFileSize(item.size), \"\\r\\n\");\n      }\n\n      text += \"\".concat(messageLocalization.format(\"dxFileManager-listThumbnailsTooltipTextDateModified\"), \": \").concat(item.dateModified);\n      return text;\n    }\n  }, {\n    key: \"_onItemDblClick\",\n    value: function _onItemDblClick(e) {\n      var $item = $(e.currentTarget);\n\n      var item = this._itemList.getItemByItemElement($item);\n\n      this._tryOpen(item);\n    }\n  }, {\n    key: \"_tryOpen\",\n    value: function _tryOpen(item) {\n      if (item) {\n        this._raiseSelectedItemOpened(item);\n      }\n    }\n  }, {\n    key: \"_getItemsInternal\",\n    value: function _getItemsInternal() {\n      return _get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_getItemsInternal\", this).call(this).then(function (items) {\n        var deferred = new Deferred();\n        setTimeout(function () {\n          return deferred.resolve(items);\n        });\n        return deferred.promise();\n      });\n    }\n  }, {\n    key: \"_disableDragging\",\n    value: function _disableDragging() {\n      return false;\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerThumbnailsItemList.prototype), \"_getDefaultOptions\", this).call(this), {\n        focusStateEnabled: true\n      });\n    }\n  }, {\n    key: \"_onItemListSelectionChanged\",\n    value: function _onItemListSelectionChanged(_ref) {\n      var addedItemKeys = _ref.addedItemKeys,\n          removedItemKeys = _ref.removedItemKeys;\n      var selectedItemInfos = this.getSelectedItems();\n      var selectedItems = selectedItemInfos.map(function (itemInfo) {\n        return itemInfo.fileItem;\n      });\n      var selectedItemKeys = selectedItems.map(function (item) {\n        return item.key;\n      });\n\n      this._tryRaiseSelectionChanged({\n        selectedItemInfos: selectedItemInfos,\n        selectedItems: selectedItems,\n        selectedItemKeys: selectedItemKeys,\n        currentSelectedItemKeys: addedItemKeys,\n        currentDeselectedItemKeys: removedItemKeys\n      });\n    }\n  }, {\n    key: \"_onItemListFocusedItemChanged\",\n    value: function _onItemListFocusedItemChanged(_ref2) {\n      var item = _ref2.item,\n          itemElement = _ref2.itemElement;\n\n      if (!this._isMultipleSelectionMode()) {\n        this._selectItemSingleSelection(item);\n      }\n\n      var fileSystemItem = (null === item || void 0 === item ? void 0 : item.fileItem) || null;\n\n      this._onFocusedItemChanged({\n        item: fileSystemItem,\n        itemKey: null === fileSystemItem || void 0 === fileSystemItem ? void 0 : fileSystemItem.key,\n        itemElement: itemElement || void 0\n      });\n    }\n  }, {\n    key: \"_setSelectedItemKeys\",\n    value: function _setSelectedItemKeys(itemKeys) {\n      this._itemList.option(\"selectedItemKeys\", itemKeys);\n    }\n  }, {\n    key: \"_setFocusedItemKey\",\n    value: function _setFocusedItemKey(itemKey) {\n      this._itemList.option(\"focusedItemKey\", itemKey);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh(options) {\n      var actualOptions = {\n        dataSource: this._createDataSource()\n      };\n\n      if (options && Object.prototype.hasOwnProperty.call(options, \"focusedItemKey\")) {\n        actualOptions.focusedItemKey = options.focusedItemKey;\n      }\n\n      this._itemList.option(actualOptions);\n\n      this._refreshDeferred = new Deferred();\n      return this._refreshDeferred.promise();\n    }\n  }, {\n    key: \"_deselectItem\",\n    value: function _deselectItem(item) {\n      var itemElement = this._itemList.getItemElementByItem(item);\n\n      this._itemList.unselectItem(itemElement);\n    }\n  }, {\n    key: \"_selectItemSingleSelection\",\n    value: function _selectItemSingleSelection(item) {\n      if (item) {\n        this._itemList.selectItem(item);\n      } else {\n        this._itemList.clearSelection();\n      }\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      this._itemList.clearSelection();\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      return this._itemList.getSelectedItems();\n    }\n  }]);\n\n  return FileManagerThumbnailsItemList;\n}(FileManagerItemListBase);\n\nexport default FileManagerThumbnailsItemList;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.item_list.thumbnails.js"],"names":["$","extend","Deferred","eventsEngine","addNamespace","name","contextMenuEventName","getDisplayFileSize","messageLocalization","FileManagerThumbnailListBox","FileManagerItemListBase","FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS","FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE","FileManagerThumbnailsItemList","$element","addClass","contextMenuEvent","on","_onContextMenu","bind","_createItemList","selectionMode","_isMultipleSelectionMode","$itemListContainer","appendTo","_itemList","_createComponent","dataSource","_createDataSource","selectedItemKeys","option","focusedItemKey","activeStateEnabled","hoverStateEnabled","loopItemFocus","focusStateEnabled","onItemEnterKeyPressed","_tryOpen","itemThumbnailTemplate","_getItemThumbnailContainer","getTooltipText","_getTooltipText","onSelectionChanged","_onItemListSelectionChanged","onFocusedItemChanged","_onItemListFocusedItemChanged","onContentReady","_this$_refreshDeferre","_refreshDeferred","resolve","e","preventDefault","stopPropagation","_isDesktop","items","targetItemElement","target","closest","_getItemSelector","targetItem","length","getItemByItemElement","selectItem","_getFileItemsForContextMenu","itemData","itemElement","_showContextMenu","concat","fileItemInfo","item","fileItem","tooltipText","text","isDirectory","format","size","dateModified","$item","currentTarget","_raiseSelectedItemOpened","then","deferred","setTimeout","promise","_ref","addedItemKeys","removedItemKeys","selectedItemInfos","getSelectedItems","selectedItems","map","itemInfo","key","_tryRaiseSelectionChanged","currentSelectedItemKeys","currentDeselectedItemKeys","_ref2","_selectItemSingleSelection","fileSystemItem","_onFocusedItemChanged","itemKey","itemKeys","options","actualOptions","Object","prototype","hasOwnProperty","call","getItemElementByItem","unselectItem","clearSelection"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.thumbnails.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as contextMenuEventName\r\n} from \"../../events/contextmenu\";\r\nimport {\r\n    getDisplayFileSize\r\n} from \"./ui.file_manager.common\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport FileManagerThumbnailListBox from \"./ui.file_manager.items_list.thumbnails.list_box\";\r\nimport FileManagerItemListBase from \"./ui.file_manager.item_list\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS = \"dx-filemanager-thumbnails\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS = \"dx-filemanager-thumbnails-item-thumbnail\";\r\nvar FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE = \"dxFileManager_thumbnails\";\r\nclass FileManagerThumbnailsItemList extends FileManagerItemListBase {\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.$element().addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CLASS);\r\n        var contextMenuEvent = addNamespace(contextMenuEventName, FILE_MANAGER_THUMBNAILS_EVENT_NAMESPACE);\r\n        eventsEngine.on(this.$element(), contextMenuEvent, this._onContextMenu.bind(this));\r\n        this._createItemList()\r\n    }\r\n    _createItemList() {\r\n        var selectionMode = this._isMultipleSelectionMode() ? \"multiple\" : \"single\";\r\n        var $itemListContainer = $(\"<div>\").appendTo(this.$element());\r\n        this._itemList = this._createComponent($itemListContainer, FileManagerThumbnailListBox, {\r\n            dataSource: this._createDataSource(),\r\n            selectionMode: selectionMode,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusedItemKey: this.option(\"focusedItemKey\"),\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            loopItemFocus: false,\r\n            focusStateEnabled: true,\r\n            onItemEnterKeyPressed: this._tryOpen.bind(this),\r\n            itemThumbnailTemplate: this._getItemThumbnailContainer.bind(this),\r\n            getTooltipText: this._getTooltipText.bind(this),\r\n            onSelectionChanged: this._onItemListSelectionChanged.bind(this),\r\n            onFocusedItemChanged: this._onItemListFocusedItemChanged.bind(this),\r\n            onContentReady: () => {\r\n                var _this$_refreshDeferre;\r\n                return null === (_this$_refreshDeferre = this._refreshDeferred) || void 0 === _this$_refreshDeferre ? void 0 : _this$_refreshDeferre.resolve()\r\n            }\r\n        })\r\n    }\r\n    _onContextMenu(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (!this._isDesktop()) {\r\n            return\r\n        }\r\n        var items = null;\r\n        var targetItemElement = $(e.target).closest(this._getItemSelector());\r\n        var targetItem = null;\r\n        if (targetItemElement.length > 0) {\r\n            targetItem = this._itemList.getItemByItemElement(targetItemElement);\r\n            this._itemList.selectItem(targetItem);\r\n            items = this._getFileItemsForContextMenu(targetItem)\r\n        }\r\n        var target = {\r\n            itemData: targetItem,\r\n            itemElement: targetItemElement.length ? targetItemElement : void 0\r\n        };\r\n        this._showContextMenu(items, e.target, e, target)\r\n    }\r\n    _getItemThumbnailCssClass() {\r\n        return FILE_MANAGER_THUMBNAILS_ITEM_THUMBNAIL_CLASS\r\n    }\r\n    _getItemSelector() {\r\n        return \".\".concat(FILE_MANAGER_THUMBNAILS_ITEM_CLASS)\r\n    }\r\n    _getTooltipText(fileItemInfo) {\r\n        var item = fileItemInfo.fileItem;\r\n        if (item.tooltipText) {\r\n            return item.tooltipText\r\n        }\r\n        var text = \"\".concat(item.name, \"\\r\\n\");\r\n        if (!item.isDirectory) {\r\n            text += \"\".concat(messageLocalization.format(\"dxFileManager-listThumbnailsTooltipTextSize\"), \": \").concat(getDisplayFileSize(item.size), \"\\r\\n\")\r\n        }\r\n        text += \"\".concat(messageLocalization.format(\"dxFileManager-listThumbnailsTooltipTextDateModified\"), \": \").concat(item.dateModified);\r\n        return text\r\n    }\r\n    _onItemDblClick(e) {\r\n        var $item = $(e.currentTarget);\r\n        var item = this._itemList.getItemByItemElement($item);\r\n        this._tryOpen(item)\r\n    }\r\n    _tryOpen(item) {\r\n        if (item) {\r\n            this._raiseSelectedItemOpened(item)\r\n        }\r\n    }\r\n    _getItemsInternal() {\r\n        return super._getItemsInternal().then(items => {\r\n            var deferred = new Deferred;\r\n            setTimeout(() => deferred.resolve(items));\r\n            return deferred.promise()\r\n        })\r\n    }\r\n    _disableDragging() {\r\n        return false\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            focusStateEnabled: true\r\n        })\r\n    }\r\n    _onItemListSelectionChanged(_ref) {\r\n        var {\r\n            addedItemKeys: addedItemKeys,\r\n            removedItemKeys: removedItemKeys\r\n        } = _ref;\r\n        var selectedItemInfos = this.getSelectedItems();\r\n        var selectedItems = selectedItemInfos.map(itemInfo => itemInfo.fileItem);\r\n        var selectedItemKeys = selectedItems.map(item => item.key);\r\n        this._tryRaiseSelectionChanged({\r\n            selectedItemInfos: selectedItemInfos,\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            currentSelectedItemKeys: addedItemKeys,\r\n            currentDeselectedItemKeys: removedItemKeys\r\n        })\r\n    }\r\n    _onItemListFocusedItemChanged(_ref2) {\r\n        var {\r\n            item: item,\r\n            itemElement: itemElement\r\n        } = _ref2;\r\n        if (!this._isMultipleSelectionMode()) {\r\n            this._selectItemSingleSelection(item)\r\n        }\r\n        var fileSystemItem = (null === item || void 0 === item ? void 0 : item.fileItem) || null;\r\n        this._onFocusedItemChanged({\r\n            item: fileSystemItem,\r\n            itemKey: null === fileSystemItem || void 0 === fileSystemItem ? void 0 : fileSystemItem.key,\r\n            itemElement: itemElement || void 0\r\n        })\r\n    }\r\n    _setSelectedItemKeys(itemKeys) {\r\n        this._itemList.option(\"selectedItemKeys\", itemKeys)\r\n    }\r\n    _setFocusedItemKey(itemKey) {\r\n        this._itemList.option(\"focusedItemKey\", itemKey)\r\n    }\r\n    refresh(options) {\r\n        var actualOptions = {\r\n            dataSource: this._createDataSource()\r\n        };\r\n        if (options && Object.prototype.hasOwnProperty.call(options, \"focusedItemKey\")) {\r\n            actualOptions.focusedItemKey = options.focusedItemKey\r\n        }\r\n        this._itemList.option(actualOptions);\r\n        this._refreshDeferred = new Deferred;\r\n        return this._refreshDeferred.promise()\r\n    }\r\n    _deselectItem(item) {\r\n        var itemElement = this._itemList.getItemElementByItem(item);\r\n        this._itemList.unselectItem(itemElement)\r\n    }\r\n    _selectItemSingleSelection(item) {\r\n        if (item) {\r\n            this._itemList.selectItem(item)\r\n        } else {\r\n            this._itemList.clearSelection()\r\n        }\r\n    }\r\n    clearSelection() {\r\n        this._itemList.clearSelection()\r\n    }\r\n    getSelectedItems() {\r\n        return this._itemList.getSelectedItems()\r\n    }\r\n}\r\nexport default FileManagerThumbnailsItemList;\r\n"]},"metadata":{},"sourceType":"module"}