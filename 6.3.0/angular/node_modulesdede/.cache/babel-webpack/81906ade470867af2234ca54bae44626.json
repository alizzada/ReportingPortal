{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.fields_area.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { AreaItem } from \"./ui.pivot_grid.area_item\";\nimport { capitalizeFirstLetter } from \"./ui.pivot_grid.utils\";\nimport Popup from \"../popup\";\nimport Button from \"../button\";\nvar DIV = \"<div>\";\nimport \"./ui.pivot_grid.field_chooser_base\";\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\n\nfunction renderGroupConnector(field, nextField, prevField, $container) {\n  if (prevField && prevField.groupName && prevField.groupName === field.groupName) {\n    $(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-prev\").appendTo($container);\n  }\n\n  if (nextField && nextField.groupName && nextField.groupName === field.groupName) {\n    $(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-next\").appendTo($container);\n  }\n}\n\nexport var FieldsArea = AreaItem.inherit({\n  ctor: function ctor(component, area) {\n    this.callBase(component);\n    this._area = area;\n  },\n  _getAreaName: function _getAreaName() {\n    return \"fields\";\n  },\n  _createGroupElement: function _createGroupElement() {\n    return $(DIV).addClass(\"dx-pivotgrid-fields-area\").addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).attr(\"group\", this._area);\n  },\n  isVisible: function isVisible() {\n    return !!this.option(\"fieldPanel.visible\") && this.option(\"fieldPanel.show\" + capitalizeFirstLetter(this._area) + \"Fields\");\n  },\n  _renderButton: function _renderButton(element) {\n    var that = this;\n    var container = $(\"<td>\").appendTo($(\"<tr>\").appendTo(element));\n\n    var button = that.component._createComponent($(DIV).appendTo(container), Button, {\n      text: \"Fields\",\n      icon: \"menu\",\n      width: \"auto\",\n      onClick: function onClick() {\n        var popup = that.tableElement().find(\".dx-fields-area-popup\").dxPopup(\"instance\");\n\n        if (!popup.option(\"visible\")) {\n          popup.show();\n        }\n      }\n    });\n\n    button.$element().addClass(\"dx-pivotgrid-fields-area-hamburger\");\n  },\n  _getPopupOptions: function _getPopupOptions(row, button) {\n    return {\n      contentTemplate: function contentTemplate() {\n        return $(\"<table>\").addClass(\"dx-area-field-container\").append($(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").append(row));\n      },\n      height: \"auto\",\n      width: \"auto\",\n      position: {\n        at: \"left\",\n        my: \"left\",\n        of: button\n      },\n      dragEnabled: false,\n      animation: {\n        show: {\n          type: \"pop\",\n          duration: 200\n        }\n      },\n      shading: false,\n      showTitle: false,\n      closeOnOutsideClick: true,\n      container: button.parent()\n    };\n  },\n  _renderPopup: function _renderPopup(tableElement, row) {\n    var button = tableElement.find(\".dx-button\");\n\n    var popupOptions = this._getPopupOptions(row, button);\n\n    var FieldChooserBase = this.component.$element().dxPivotGridFieldChooserBase(\"instance\");\n\n    if (this._rowPopup) {\n      this._rowPopup.$element().remove();\n    }\n\n    this._rowPopup = this.component._createComponent($(DIV).appendTo(tableElement), Popup, popupOptions);\n\n    this._rowPopup.$element().addClass(\"dx-fields-area-popup\");\n\n    this._rowPopup.content().addClass(\"dx-pivotgrid-fields-container\");\n\n    this._rowPopup.content().parent().attr(\"group\", \"row\");\n\n    FieldChooserBase.subscribeToEvents(this._rowPopup.content());\n    FieldChooserBase.renderSortable(this._rowPopup.content());\n  },\n  _shouldCreateButton: function _shouldCreateButton() {\n    return false;\n  },\n  _renderTableContent: function _renderTableContent(tableElement, data) {\n    var that = this;\n    var groupElement = this.groupElement();\n    var isVisible = this.isVisible();\n    var fieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\n    var head = $(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").appendTo(tableElement);\n    var area = that._area;\n    var row = $(\"<tr>\");\n    groupElement.toggleClass(\"dx-hidden\", !isVisible);\n    tableElement.addClass(\"dx-area-field-container\");\n\n    if (!isVisible) {\n      return;\n    }\n\n    each(data, function (index, field) {\n      if (field.area === area && false !== field.visible) {\n        var td = $(\"<td>\").append(fieldChooserBase.renderField(field, \"row\" === field.area));\n        var indicators = td.find(\".dx-column-indicators\");\n\n        if (indicators.length && that._shouldCreateButton()) {\n          indicators.insertAfter(indicators.next());\n        }\n\n        td.appendTo(row);\n        renderGroupConnector(field, data[index + 1], data[index - 1], td);\n      }\n    });\n\n    if (!row.children().length) {\n      $(\"<td>\").append($(DIV).addClass(\"dx-empty-area-text\").text(this.option(\"fieldPanel.texts.\" + area + \"FieldArea\"))).appendTo(row);\n    }\n\n    if (that._shouldCreateButton()) {\n      that._renderButton(head);\n\n      that._renderPopup(tableElement, row);\n    } else {\n      head.append(row);\n    }\n  },\n  reset: function reset() {\n    this.callBase();\n    this.groupElement().css(\"marginTop\", 0);\n  },\n  _renderVirtualContent: noop\n});","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.fields_area.js"],"names":["$","noop","each","AreaItem","capitalizeFirstLetter","Popup","Button","DIV","AREA_DRAG_CLASS","renderGroupConnector","field","nextField","prevField","$container","groupName","addClass","appendTo","FieldsArea","inherit","ctor","component","area","callBase","_area","_getAreaName","_createGroupElement","attr","isVisible","option","_renderButton","element","that","container","button","_createComponent","text","icon","width","onClick","popup","tableElement","find","dxPopup","show","$element","_getPopupOptions","row","contentTemplate","append","height","position","at","my","of","dragEnabled","animation","type","duration","shading","showTitle","closeOnOutsideClick","parent","_renderPopup","popupOptions","FieldChooserBase","dxPivotGridFieldChooserBase","_rowPopup","remove","content","subscribeToEvents","renderSortable","_shouldCreateButton","_renderTableContent","data","groupElement","fieldChooserBase","head","toggleClass","index","visible","td","renderField","indicators","length","insertAfter","next","children","reset","css","_renderVirtualContent"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.fields_area.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    AreaItem\r\n} from \"./ui.pivot_grid.area_item\";\r\nimport {\r\n    capitalizeFirstLetter\r\n} from \"./ui.pivot_grid.utils\";\r\nimport Popup from \"../popup\";\r\nimport Button from \"../button\";\r\nvar DIV = \"<div>\";\r\nimport \"./ui.pivot_grid.field_chooser_base\";\r\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\r\n\r\nfunction renderGroupConnector(field, nextField, prevField, $container) {\r\n    if (prevField && prevField.groupName && prevField.groupName === field.groupName) {\r\n        $(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-prev\").appendTo($container)\r\n    }\r\n    if (nextField && nextField.groupName && nextField.groupName === field.groupName) {\r\n        $(DIV).addClass(\"dx-group-connector\").addClass(\"dx-group-connector-next\").appendTo($container)\r\n    }\r\n}\r\nexport var FieldsArea = AreaItem.inherit({\r\n    ctor: function(component, area) {\r\n        this.callBase(component);\r\n        this._area = area\r\n    },\r\n    _getAreaName: function() {\r\n        return \"fields\"\r\n    },\r\n    _createGroupElement: function() {\r\n        return $(DIV).addClass(\"dx-pivotgrid-fields-area\").addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).attr(\"group\", this._area)\r\n    },\r\n    isVisible: function() {\r\n        return !!this.option(\"fieldPanel.visible\") && this.option(\"fieldPanel.show\" + capitalizeFirstLetter(this._area) + \"Fields\")\r\n    },\r\n    _renderButton: function(element) {\r\n        var that = this;\r\n        var container = $(\"<td>\").appendTo($(\"<tr>\").appendTo(element));\r\n        var button = that.component._createComponent($(DIV).appendTo(container), Button, {\r\n            text: \"Fields\",\r\n            icon: \"menu\",\r\n            width: \"auto\",\r\n            onClick: function() {\r\n                var popup = that.tableElement().find(\".dx-fields-area-popup\").dxPopup(\"instance\");\r\n                if (!popup.option(\"visible\")) {\r\n                    popup.show()\r\n                }\r\n            }\r\n        });\r\n        button.$element().addClass(\"dx-pivotgrid-fields-area-hamburger\")\r\n    },\r\n    _getPopupOptions: function(row, button) {\r\n        return {\r\n            contentTemplate: function() {\r\n                return $(\"<table>\").addClass(\"dx-area-field-container\").append($(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").append(row))\r\n            },\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            position: {\r\n                at: \"left\",\r\n                my: \"left\",\r\n                of: button\r\n            },\r\n            dragEnabled: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"pop\",\r\n                    duration: 200\r\n                }\r\n            },\r\n            shading: false,\r\n            showTitle: false,\r\n            closeOnOutsideClick: true,\r\n            container: button.parent()\r\n        }\r\n    },\r\n    _renderPopup: function(tableElement, row) {\r\n        var button = tableElement.find(\".dx-button\");\r\n        var popupOptions = this._getPopupOptions(row, button);\r\n        var FieldChooserBase = this.component.$element().dxPivotGridFieldChooserBase(\"instance\");\r\n        if (this._rowPopup) {\r\n            this._rowPopup.$element().remove()\r\n        }\r\n        this._rowPopup = this.component._createComponent($(DIV).appendTo(tableElement), Popup, popupOptions);\r\n        this._rowPopup.$element().addClass(\"dx-fields-area-popup\");\r\n        this._rowPopup.content().addClass(\"dx-pivotgrid-fields-container\");\r\n        this._rowPopup.content().parent().attr(\"group\", \"row\");\r\n        FieldChooserBase.subscribeToEvents(this._rowPopup.content());\r\n        FieldChooserBase.renderSortable(this._rowPopup.content())\r\n    },\r\n    _shouldCreateButton: function() {\r\n        return false\r\n    },\r\n    _renderTableContent: function(tableElement, data) {\r\n        var that = this;\r\n        var groupElement = this.groupElement();\r\n        var isVisible = this.isVisible();\r\n        var fieldChooserBase = that.component.$element().dxPivotGridFieldChooserBase(\"instance\");\r\n        var head = $(\"<thead>\").addClass(\"dx-pivotgrid-fields-area-head\").appendTo(tableElement);\r\n        var area = that._area;\r\n        var row = $(\"<tr>\");\r\n        groupElement.toggleClass(\"dx-hidden\", !isVisible);\r\n        tableElement.addClass(\"dx-area-field-container\");\r\n        if (!isVisible) {\r\n            return\r\n        }\r\n        each(data, (function(index, field) {\r\n            if (field.area === area && false !== field.visible) {\r\n                var td = $(\"<td>\").append(fieldChooserBase.renderField(field, \"row\" === field.area));\r\n                var indicators = td.find(\".dx-column-indicators\");\r\n                if (indicators.length && that._shouldCreateButton()) {\r\n                    indicators.insertAfter(indicators.next())\r\n                }\r\n                td.appendTo(row);\r\n                renderGroupConnector(field, data[index + 1], data[index - 1], td)\r\n            }\r\n        }));\r\n        if (!row.children().length) {\r\n            $(\"<td>\").append($(DIV).addClass(\"dx-empty-area-text\").text(this.option(\"fieldPanel.texts.\" + area + \"FieldArea\"))).appendTo(row)\r\n        }\r\n        if (that._shouldCreateButton()) {\r\n            that._renderButton(head);\r\n            that._renderPopup(tableElement, row)\r\n        } else {\r\n            head.append(row)\r\n        }\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this.groupElement().css(\"marginTop\", 0)\r\n    },\r\n    _renderVirtualContent: noop\r\n});\r\n"]},"metadata":{},"sourceType":"module"}