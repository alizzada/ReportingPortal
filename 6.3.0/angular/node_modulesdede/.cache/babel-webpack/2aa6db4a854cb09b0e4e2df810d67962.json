{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/linear_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each as _each } from \"../../core/utils/iterator\";\nvar _max = Math.max;\nvar _min = Math.min;\nvar _round = Math.round;\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { clone } from \"../../core/utils/object\";\nimport { BaseGauge } from \"./base_gauge\";\nimport { dxGauge, createIndicatorCreator } from \"./common\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nimport * as linearIndicators from \"./linear_indicators\";\nimport LinearRangeContainer from \"./linear_range_container\";\nvar dxLinearGauge = dxGauge.inherit({\n  _rootClass: \"dxg-linear-gauge\",\n  _factoryMethods: {\n    rangeContainer: \"createLinearRangeContainer\",\n    indicator: \"createLinearIndicator\"\n  },\n  _gridSpacingFactor: 25,\n  _scaleTypes: {\n    type: \"xyAxes\",\n    drawingType: \"linear\"\n  },\n  _getTicksOrientation: function _getTicksOrientation(scaleOptions) {\n    return scaleOptions.isHorizontal ? scaleOptions.verticalOrientation : scaleOptions.horizontalOrientation;\n  },\n  _getThemeManagerOptions: function _getThemeManagerOptions() {\n    var options = this.callBase.apply(this, arguments);\n    options.subTheme = \"_linear\";\n    return options;\n  },\n  _getInvertedState: function _getInvertedState() {\n    return !this._area.vertical && this.option(\"rtlEnabled\");\n  },\n  _prepareScaleSettings: function _prepareScaleSettings() {\n    var scaleOptions = this.callBase();\n    scaleOptions.inverted = this._getInvertedState();\n    return scaleOptions;\n  },\n  _updateScaleTickIndent: function _updateScaleTickIndent(scaleOptions) {\n    var indentFromTick = scaleOptions.label.indentFromTick;\n    var length = scaleOptions.tick.length;\n\n    var textParams = this._scale.measureLabels(extend({}, this._canvas));\n\n    var verticalTextCorrection = scaleOptions.isHorizontal ? textParams.height + textParams.y : 0;\n    var isIndentPositive = indentFromTick > 0;\n    var orientation;\n    var textCorrection;\n    var tickCorrection;\n\n    if (scaleOptions.isHorizontal) {\n      orientation = isIndentPositive ? {\n        center: .5,\n        top: 0,\n        bottom: 1\n      } : {\n        center: .5,\n        top: 1,\n        bottom: 0\n      };\n      tickCorrection = length * orientation[scaleOptions.verticalOrientation];\n      textCorrection = textParams.y;\n    } else {\n      orientation = isIndentPositive ? {\n        center: .5,\n        left: 0,\n        right: 1\n      } : {\n        center: .5,\n        left: 1,\n        right: 0\n      };\n      tickCorrection = length * orientation[scaleOptions.horizontalOrientation];\n      textCorrection = -textParams.width;\n    }\n\n    scaleOptions.label.indentFromAxis = -indentFromTick + (isIndentPositive ? -tickCorrection + textCorrection : tickCorrection - verticalTextCorrection);\n\n    this._scale.updateOptions(scaleOptions);\n  },\n  _shiftScale: function _shiftScale(layout, scaleOptions) {\n    var canvas = extend({}, this._canvas);\n    var isHorizontal = scaleOptions.isHorizontal;\n    var scale = this._scale;\n    canvas[isHorizontal ? \"left\" : \"top\"] = this._area[isHorizontal ? \"startCoord\" : \"endCoord\"];\n    canvas[isHorizontal ? \"right\" : \"bottom\"] = canvas[isHorizontal ? \"width\" : \"height\"] - this._area[isHorizontal ? \"endCoord\" : \"startCoord\"];\n    scale.draw(canvas);\n    scale.shift({\n      left: -layout.x,\n      top: -layout.y\n    });\n  },\n  _setupCodomain: function _setupCodomain() {\n    var geometry = this.option(\"geometry\") || {};\n\n    var vertical = \"vertical\" === _normalizeEnum(geometry.orientation);\n\n    this._area = {\n      vertical: vertical,\n      x: 0,\n      y: 0,\n      startCoord: -100,\n      endCoord: 100\n    };\n    this._rangeContainer.vertical = vertical;\n\n    this._translator.setInverted(this._getInvertedState());\n\n    this._translator.setCodomain(-100, 100);\n  },\n  _getScaleLayoutValue: function _getScaleLayoutValue() {\n    return this._area[this._area.vertical ? \"x\" : \"y\"];\n  },\n  _getTicksCoefficients: function _getTicksCoefficients(options) {\n    var coefs = {\n      inner: 0,\n      outer: 1\n    };\n\n    if (this._area.vertical) {\n      if (\"left\" === options.horizontalOrientation) {\n        coefs.inner = 1;\n        coefs.outer = 0;\n      } else if (\"center\" === options.horizontalOrientation) {\n        coefs.inner = coefs.outer = .5;\n      }\n    } else if (\"top\" === options.verticalOrientation) {\n      coefs.inner = 1;\n      coefs.outer = 0;\n    } else if (\"center\" === options.verticalOrientation) {\n      coefs.inner = coefs.outer = .5;\n    }\n\n    return coefs;\n  },\n  _correctScaleIndents: function _correctScaleIndents(result, indentFromTick, textParams) {\n    var vertical = this._area.vertical;\n\n    if (indentFromTick >= 0) {\n      result.max += indentFromTick + textParams[vertical ? \"width\" : \"height\"];\n    } else {\n      result.min -= -indentFromTick + textParams[vertical ? \"width\" : \"height\"];\n    }\n\n    result.indent = textParams[vertical ? \"height\" : \"width\"] / 2;\n  },\n  _measureMainElements: function _measureMainElements(elements, scaleMeasurement) {\n    var x = this._area.x;\n    var y = this._area.y;\n    var minBound = 1e3;\n    var maxBound = 0;\n    var indent = 0;\n    var scale = this._scale;\n\n    _each(elements.concat(scale), function (_, element) {\n      var bounds = element.measure ? element.measure({\n        x: x + element.getOffset(),\n        y: y + element.getOffset()\n      }) : scaleMeasurement;\n      void 0 !== bounds.max && (maxBound = _max(maxBound, bounds.max));\n      void 0 !== bounds.min && (minBound = _min(minBound, bounds.min));\n      bounds.indent > 0 && (indent = _max(indent, bounds.indent));\n    });\n\n    return {\n      minBound: minBound,\n      maxBound: maxBound,\n      indent: indent\n    };\n  },\n  _applyMainLayout: function _applyMainLayout(elements, scaleMeasurement) {\n    var measurements = this._measureMainElements(elements, scaleMeasurement);\n\n    var area = this._area;\n    var rect;\n    var offset;\n\n    if (area.vertical) {\n      rect = selectRectBySizes(this._innerRect, {\n        width: measurements.maxBound - measurements.minBound\n      });\n      offset = (rect.left + rect.right) / 2 - (measurements.minBound + measurements.maxBound) / 2;\n      area.startCoord = rect.bottom - measurements.indent;\n      area.endCoord = rect.top + measurements.indent;\n      area.x = _round(area.x + offset);\n    } else {\n      rect = selectRectBySizes(this._innerRect, {\n        height: measurements.maxBound - measurements.minBound\n      });\n      offset = (rect.top + rect.bottom) / 2 - (measurements.minBound + measurements.maxBound) / 2;\n      area.startCoord = rect.left + measurements.indent;\n      area.endCoord = rect.right - measurements.indent;\n      area.y = _round(area.y + offset);\n    }\n\n    this._translator.setCodomain(area.startCoord, area.endCoord);\n\n    this._innerRect = rect;\n  },\n  _getElementLayout: function _getElementLayout(offset) {\n    return {\n      x: _round(this._area.x + offset),\n      y: _round(this._area.y + offset)\n    };\n  },\n  _getApproximateScreenRange: function _getApproximateScreenRange() {\n    var area = this._area;\n    var s = area.vertical ? this._canvas.height : this._canvas.width;\n    s > area.totalSize && (s = area.totalSize);\n    s *= .8;\n    return s;\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    var geometry = this.option(\"geometry\") || {};\n\n    if (\"vertical\" === geometry.orientation) {\n      return {\n        width: 100,\n        height: 300\n      };\n    } else {\n      return {\n        width: 300,\n        height: 100\n      };\n    }\n  },\n  _factory: clone(BaseGauge.prototype._factory)\n});\n\nfunction selectRectBySizes(srcRect, sizes, margins) {\n  var rect = extend({}, srcRect);\n  var step;\n  margins = margins || {};\n\n  if (sizes) {\n    rect.left += margins.left || 0;\n    rect.right -= margins.right || 0;\n    rect.top += margins.top || 0;\n    rect.bottom -= margins.bottom || 0;\n\n    if (sizes.width > 0) {\n      step = (rect.right - rect.left - sizes.width) / 2;\n\n      if (step > 0) {\n        rect.left += step;\n        rect.right -= step;\n      }\n    }\n\n    if (sizes.height > 0) {\n      step = (rect.bottom - rect.top - sizes.height) / 2;\n\n      if (step > 0) {\n        rect.top += step;\n        rect.bottom -= step;\n      }\n    }\n  }\n\n  return rect;\n}\n\nvar indicators = dxLinearGauge.prototype._factory.indicators = {};\ndxLinearGauge.prototype._factory.createIndicator = createIndicatorCreator(indicators);\nindicators._default = linearIndicators._default;\nindicators.rectangle = linearIndicators.rectangle;\nindicators.rhombus = linearIndicators.rhombus;\nindicators.circle = linearIndicators.circle;\nindicators.trianglemarker = linearIndicators.trianglemarker;\nindicators.textcloud = linearIndicators.textcloud;\nindicators.rangebar = linearIndicators.rangebar;\ndxLinearGauge.prototype._factory.RangeContainer = LinearRangeContainer;\nregisterComponent(\"dxLinearGauge\", dxLinearGauge);\nexport default dxLinearGauge;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/gauges/linear_gauge.js"],"names":["each","_each","_max","Math","max","_min","min","_round","round","registerComponent","extend","clone","BaseGauge","dxGauge","createIndicatorCreator","normalizeEnum","_normalizeEnum","linearIndicators","LinearRangeContainer","dxLinearGauge","inherit","_rootClass","_factoryMethods","rangeContainer","indicator","_gridSpacingFactor","_scaleTypes","type","drawingType","_getTicksOrientation","scaleOptions","isHorizontal","verticalOrientation","horizontalOrientation","_getThemeManagerOptions","options","callBase","apply","arguments","subTheme","_getInvertedState","_area","vertical","option","_prepareScaleSettings","inverted","_updateScaleTickIndent","indentFromTick","label","length","tick","textParams","_scale","measureLabels","_canvas","verticalTextCorrection","height","y","isIndentPositive","orientation","textCorrection","tickCorrection","center","top","bottom","left","right","width","indentFromAxis","updateOptions","_shiftScale","layout","canvas","scale","draw","shift","x","_setupCodomain","geometry","startCoord","endCoord","_rangeContainer","_translator","setInverted","setCodomain","_getScaleLayoutValue","_getTicksCoefficients","coefs","inner","outer","_correctScaleIndents","result","indent","_measureMainElements","elements","scaleMeasurement","minBound","maxBound","concat","_","element","bounds","measure","getOffset","_applyMainLayout","measurements","area","rect","offset","selectRectBySizes","_innerRect","_getElementLayout","_getApproximateScreenRange","s","totalSize","_getDefaultSize","_factory","prototype","srcRect","sizes","margins","step","indicators","createIndicator","_default","rectangle","rhombus","circle","trianglemarker","textcloud","rangebar","RangeContainer"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/linear_gauge.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    each as _each\r\n} from \"../../core/utils/iterator\";\r\nvar _max = Math.max;\r\nvar _min = Math.min;\r\nvar _round = Math.round;\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    clone\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    BaseGauge\r\n} from \"./base_gauge\";\r\nimport {\r\n    dxGauge,\r\n    createIndicatorCreator\r\n} from \"./common\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nimport * as linearIndicators from \"./linear_indicators\";\r\nimport LinearRangeContainer from \"./linear_range_container\";\r\nvar dxLinearGauge = dxGauge.inherit({\r\n    _rootClass: \"dxg-linear-gauge\",\r\n    _factoryMethods: {\r\n        rangeContainer: \"createLinearRangeContainer\",\r\n        indicator: \"createLinearIndicator\"\r\n    },\r\n    _gridSpacingFactor: 25,\r\n    _scaleTypes: {\r\n        type: \"xyAxes\",\r\n        drawingType: \"linear\"\r\n    },\r\n    _getTicksOrientation: function(scaleOptions) {\r\n        return scaleOptions.isHorizontal ? scaleOptions.verticalOrientation : scaleOptions.horizontalOrientation\r\n    },\r\n    _getThemeManagerOptions() {\r\n        var options = this.callBase.apply(this, arguments);\r\n        options.subTheme = \"_linear\";\r\n        return options\r\n    },\r\n    _getInvertedState() {\r\n        return !this._area.vertical && this.option(\"rtlEnabled\")\r\n    },\r\n    _prepareScaleSettings: function() {\r\n        var scaleOptions = this.callBase();\r\n        scaleOptions.inverted = this._getInvertedState();\r\n        return scaleOptions\r\n    },\r\n    _updateScaleTickIndent: function(scaleOptions) {\r\n        var indentFromTick = scaleOptions.label.indentFromTick;\r\n        var length = scaleOptions.tick.length;\r\n        var textParams = this._scale.measureLabels(extend({}, this._canvas));\r\n        var verticalTextCorrection = scaleOptions.isHorizontal ? textParams.height + textParams.y : 0;\r\n        var isIndentPositive = indentFromTick > 0;\r\n        var orientation;\r\n        var textCorrection;\r\n        var tickCorrection;\r\n        if (scaleOptions.isHorizontal) {\r\n            orientation = isIndentPositive ? {\r\n                center: .5,\r\n                top: 0,\r\n                bottom: 1\r\n            } : {\r\n                center: .5,\r\n                top: 1,\r\n                bottom: 0\r\n            };\r\n            tickCorrection = length * orientation[scaleOptions.verticalOrientation];\r\n            textCorrection = textParams.y\r\n        } else {\r\n            orientation = isIndentPositive ? {\r\n                center: .5,\r\n                left: 0,\r\n                right: 1\r\n            } : {\r\n                center: .5,\r\n                left: 1,\r\n                right: 0\r\n            };\r\n            tickCorrection = length * orientation[scaleOptions.horizontalOrientation];\r\n            textCorrection = -textParams.width\r\n        }\r\n        scaleOptions.label.indentFromAxis = -indentFromTick + (isIndentPositive ? -tickCorrection + textCorrection : tickCorrection - verticalTextCorrection);\r\n        this._scale.updateOptions(scaleOptions)\r\n    },\r\n    _shiftScale: function(layout, scaleOptions) {\r\n        var canvas = extend({}, this._canvas);\r\n        var isHorizontal = scaleOptions.isHorizontal;\r\n        var scale = this._scale;\r\n        canvas[isHorizontal ? \"left\" : \"top\"] = this._area[isHorizontal ? \"startCoord\" : \"endCoord\"];\r\n        canvas[isHorizontal ? \"right\" : \"bottom\"] = canvas[isHorizontal ? \"width\" : \"height\"] - this._area[isHorizontal ? \"endCoord\" : \"startCoord\"];\r\n        scale.draw(canvas);\r\n        scale.shift({\r\n            left: -layout.x,\r\n            top: -layout.y\r\n        })\r\n    },\r\n    _setupCodomain: function() {\r\n        var geometry = this.option(\"geometry\") || {};\r\n        var vertical = \"vertical\" === _normalizeEnum(geometry.orientation);\r\n        this._area = {\r\n            vertical: vertical,\r\n            x: 0,\r\n            y: 0,\r\n            startCoord: -100,\r\n            endCoord: 100\r\n        };\r\n        this._rangeContainer.vertical = vertical;\r\n        this._translator.setInverted(this._getInvertedState());\r\n        this._translator.setCodomain(-100, 100)\r\n    },\r\n    _getScaleLayoutValue: function() {\r\n        return this._area[this._area.vertical ? \"x\" : \"y\"]\r\n    },\r\n    _getTicksCoefficients: function(options) {\r\n        var coefs = {\r\n            inner: 0,\r\n            outer: 1\r\n        };\r\n        if (this._area.vertical) {\r\n            if (\"left\" === options.horizontalOrientation) {\r\n                coefs.inner = 1;\r\n                coefs.outer = 0\r\n            } else if (\"center\" === options.horizontalOrientation) {\r\n                coefs.inner = coefs.outer = .5\r\n            }\r\n        } else if (\"top\" === options.verticalOrientation) {\r\n            coefs.inner = 1;\r\n            coefs.outer = 0\r\n        } else if (\"center\" === options.verticalOrientation) {\r\n            coefs.inner = coefs.outer = .5\r\n        }\r\n        return coefs\r\n    },\r\n    _correctScaleIndents: function(result, indentFromTick, textParams) {\r\n        var vertical = this._area.vertical;\r\n        if (indentFromTick >= 0) {\r\n            result.max += indentFromTick + textParams[vertical ? \"width\" : \"height\"]\r\n        } else {\r\n            result.min -= -indentFromTick + textParams[vertical ? \"width\" : \"height\"]\r\n        }\r\n        result.indent = textParams[vertical ? \"height\" : \"width\"] / 2\r\n    },\r\n    _measureMainElements: function(elements, scaleMeasurement) {\r\n        var x = this._area.x;\r\n        var y = this._area.y;\r\n        var minBound = 1e3;\r\n        var maxBound = 0;\r\n        var indent = 0;\r\n        var scale = this._scale;\r\n        _each(elements.concat(scale), (function(_, element) {\r\n            var bounds = element.measure ? element.measure({\r\n                x: x + element.getOffset(),\r\n                y: y + element.getOffset()\r\n            }) : scaleMeasurement;\r\n            void 0 !== bounds.max && (maxBound = _max(maxBound, bounds.max));\r\n            void 0 !== bounds.min && (minBound = _min(minBound, bounds.min));\r\n            bounds.indent > 0 && (indent = _max(indent, bounds.indent))\r\n        }));\r\n        return {\r\n            minBound: minBound,\r\n            maxBound: maxBound,\r\n            indent: indent\r\n        }\r\n    },\r\n    _applyMainLayout: function(elements, scaleMeasurement) {\r\n        var measurements = this._measureMainElements(elements, scaleMeasurement);\r\n        var area = this._area;\r\n        var rect;\r\n        var offset;\r\n        if (area.vertical) {\r\n            rect = selectRectBySizes(this._innerRect, {\r\n                width: measurements.maxBound - measurements.minBound\r\n            });\r\n            offset = (rect.left + rect.right) / 2 - (measurements.minBound + measurements.maxBound) / 2;\r\n            area.startCoord = rect.bottom - measurements.indent;\r\n            area.endCoord = rect.top + measurements.indent;\r\n            area.x = _round(area.x + offset)\r\n        } else {\r\n            rect = selectRectBySizes(this._innerRect, {\r\n                height: measurements.maxBound - measurements.minBound\r\n            });\r\n            offset = (rect.top + rect.bottom) / 2 - (measurements.minBound + measurements.maxBound) / 2;\r\n            area.startCoord = rect.left + measurements.indent;\r\n            area.endCoord = rect.right - measurements.indent;\r\n            area.y = _round(area.y + offset)\r\n        }\r\n        this._translator.setCodomain(area.startCoord, area.endCoord);\r\n        this._innerRect = rect\r\n    },\r\n    _getElementLayout: function(offset) {\r\n        return {\r\n            x: _round(this._area.x + offset),\r\n            y: _round(this._area.y + offset)\r\n        }\r\n    },\r\n    _getApproximateScreenRange: function() {\r\n        var area = this._area;\r\n        var s = area.vertical ? this._canvas.height : this._canvas.width;\r\n        s > area.totalSize && (s = area.totalSize);\r\n        s *= .8;\r\n        return s\r\n    },\r\n    _getDefaultSize: function() {\r\n        var geometry = this.option(\"geometry\") || {};\r\n        if (\"vertical\" === geometry.orientation) {\r\n            return {\r\n                width: 100,\r\n                height: 300\r\n            }\r\n        } else {\r\n            return {\r\n                width: 300,\r\n                height: 100\r\n            }\r\n        }\r\n    },\r\n    _factory: clone(BaseGauge.prototype._factory)\r\n});\r\n\r\nfunction selectRectBySizes(srcRect, sizes, margins) {\r\n    var rect = extend({}, srcRect);\r\n    var step;\r\n    margins = margins || {};\r\n    if (sizes) {\r\n        rect.left += margins.left || 0;\r\n        rect.right -= margins.right || 0;\r\n        rect.top += margins.top || 0;\r\n        rect.bottom -= margins.bottom || 0;\r\n        if (sizes.width > 0) {\r\n            step = (rect.right - rect.left - sizes.width) / 2;\r\n            if (step > 0) {\r\n                rect.left += step;\r\n                rect.right -= step\r\n            }\r\n        }\r\n        if (sizes.height > 0) {\r\n            step = (rect.bottom - rect.top - sizes.height) / 2;\r\n            if (step > 0) {\r\n                rect.top += step;\r\n                rect.bottom -= step\r\n            }\r\n        }\r\n    }\r\n    return rect\r\n}\r\nvar indicators = dxLinearGauge.prototype._factory.indicators = {};\r\ndxLinearGauge.prototype._factory.createIndicator = createIndicatorCreator(indicators);\r\nindicators._default = linearIndicators._default;\r\nindicators.rectangle = linearIndicators.rectangle;\r\nindicators.rhombus = linearIndicators.rhombus;\r\nindicators.circle = linearIndicators.circle;\r\nindicators.trianglemarker = linearIndicators.trianglemarker;\r\nindicators.textcloud = linearIndicators.textcloud;\r\nindicators.rangebar = linearIndicators.rangebar;\r\ndxLinearGauge.prototype._factory.RangeContainer = LinearRangeContainer;\r\nregisterComponent(\"dxLinearGauge\", dxLinearGauge);\r\nexport default dxLinearGauge;\r\n"]},"metadata":{},"sourceType":"module"}