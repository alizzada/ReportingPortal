{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/file_management/file_system_item.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isString } from \"../core/utils/type\";\nimport { pathCombine, getFileExtension as _getFileExtension, getPathParts, getName, getEscapedFileName, PATH_SEPARATOR } from \"./utils\";\n\nvar FileSystemItem = /*#__PURE__*/function () {\n  function FileSystemItem() {\n    _classCallCheck(this, FileSystemItem);\n\n    var ctor = isString(arguments[0]) ? this._publicCtor : this._internalCtor;\n    ctor.apply(this, arguments);\n  }\n\n  _createClass(FileSystemItem, [{\n    key: \"_internalCtor\",\n    value: function _internalCtor(pathInfo, name, isDirectory, key) {\n      this.name = name || \"\";\n      this.pathInfo = pathInfo && _toConsumableArray(pathInfo) || [];\n      this.parentPath = this._getPathByPathInfo(this.pathInfo);\n      this.relativeName = pathCombine(this.parentPath, name);\n      this.key = key || this._getPathByPathInfo(this.getFullPathInfo(), true);\n      this.path = pathCombine(this.parentPath, name);\n      this.pathKeys = this.pathInfo.map(function (_ref) {\n        var key = _ref.key;\n        return key;\n      });\n\n      if (!this.isRoot()) {\n        this.pathKeys.push(this.key);\n      }\n\n      this._initialize(isDirectory);\n    }\n  }, {\n    key: \"_publicCtor\",\n    value: function _publicCtor(path, isDirectory, pathKeys) {\n      this.path = path || \"\";\n      this.pathKeys = pathKeys || [];\n      var pathInfo = [];\n      var parts = getPathParts(path, true);\n\n      for (var i = 0; i < parts.length - 1; i++) {\n        var part = parts[i];\n        var pathInfoPart = {\n          key: this.pathKeys[i] || part,\n          name: getName(part)\n        };\n        pathInfo.push(pathInfoPart);\n      }\n\n      this.pathInfo = pathInfo;\n      this.relativeName = path;\n      this.name = getName(path);\n      this.key = this.pathKeys.length ? this.pathKeys[this.pathKeys.length - 1] : path;\n      this.parentPath = parts.length > 1 ? parts[parts.length - 2] : \"\";\n\n      this._initialize(isDirectory);\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize(isDirectory) {\n      this.isDirectory = !!isDirectory;\n      this.size = 0;\n      this.dateModified = new Date();\n      this.thumbnail = \"\";\n      this.tooltipText = \"\";\n    }\n  }, {\n    key: \"getFullPathInfo\",\n    value: function getFullPathInfo() {\n      var pathInfo = _toConsumableArray(this.pathInfo);\n\n      if (!this.isRoot()) {\n        pathInfo.push({\n          key: this.key,\n          name: this.name\n        });\n      }\n\n      return pathInfo;\n    }\n  }, {\n    key: \"isRoot\",\n    value: function isRoot() {\n      return \"\" === this.path;\n    }\n  }, {\n    key: \"getFileExtension\",\n    value: function getFileExtension() {\n      return this.isDirectory ? \"\" : _getFileExtension(this.name);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(item) {\n      return item && this.key === item.key;\n    }\n  }, {\n    key: \"createClone\",\n    value: function createClone() {\n      var result = new FileSystemItem(this.pathInfo, this.name, this.isDirectory, this.key);\n      result.key = this.key;\n      result.size = this.size;\n      result.dateModified = this.dateModified;\n      result.thumbnail = this.thumbnail;\n      result.tooltipText = this.tooltipText;\n      result.hasSubDirectories = this.hasSubDirectories;\n      result.dataItem = this.dataItem;\n      return result;\n    }\n  }, {\n    key: \"_getPathByPathInfo\",\n    value: function _getPathByPathInfo(pathInfo, escape) {\n      return pathInfo.map(function (info) {\n        return escape ? getEscapedFileName(info.name) : info.name;\n      }).join(PATH_SEPARATOR);\n    }\n  }]);\n\n  return FileSystemItem;\n}();\n\nexport default FileSystemItem;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/file_management/file_system_item.js"],"names":["isString","pathCombine","getFileExtension","getPathParts","getName","getEscapedFileName","PATH_SEPARATOR","FileSystemItem","ctor","arguments","_publicCtor","_internalCtor","apply","pathInfo","name","isDirectory","key","parentPath","_getPathByPathInfo","relativeName","getFullPathInfo","path","pathKeys","map","_ref","isRoot","push","_initialize","parts","i","length","part","pathInfoPart","size","dateModified","Date","thumbnail","tooltipText","item","result","hasSubDirectories","dataItem","escape","info","join"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/file_management/file_system_item.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isString\r\n} from \"../core/utils/type\";\r\nimport {\r\n    pathCombine,\r\n    getFileExtension,\r\n    getPathParts,\r\n    getName,\r\n    getEscapedFileName,\r\n    PATH_SEPARATOR\r\n} from \"./utils\";\r\nclass FileSystemItem {\r\n    constructor() {\r\n        var ctor = isString(arguments[0]) ? this._publicCtor : this._internalCtor;\r\n        ctor.apply(this, arguments)\r\n    }\r\n    _internalCtor(pathInfo, name, isDirectory, key) {\r\n        this.name = name || \"\";\r\n        this.pathInfo = pathInfo && [...pathInfo] || [];\r\n        this.parentPath = this._getPathByPathInfo(this.pathInfo);\r\n        this.relativeName = pathCombine(this.parentPath, name);\r\n        this.key = key || this._getPathByPathInfo(this.getFullPathInfo(), true);\r\n        this.path = pathCombine(this.parentPath, name);\r\n        this.pathKeys = this.pathInfo.map(_ref => {\r\n            var {\r\n                key: key\r\n            } = _ref;\r\n            return key\r\n        });\r\n        if (!this.isRoot()) {\r\n            this.pathKeys.push(this.key)\r\n        }\r\n        this._initialize(isDirectory)\r\n    }\r\n    _publicCtor(path, isDirectory, pathKeys) {\r\n        this.path = path || \"\";\r\n        this.pathKeys = pathKeys || [];\r\n        var pathInfo = [];\r\n        var parts = getPathParts(path, true);\r\n        for (var i = 0; i < parts.length - 1; i++) {\r\n            var part = parts[i];\r\n            var pathInfoPart = {\r\n                key: this.pathKeys[i] || part,\r\n                name: getName(part)\r\n            };\r\n            pathInfo.push(pathInfoPart)\r\n        }\r\n        this.pathInfo = pathInfo;\r\n        this.relativeName = path;\r\n        this.name = getName(path);\r\n        this.key = this.pathKeys.length ? this.pathKeys[this.pathKeys.length - 1] : path;\r\n        this.parentPath = parts.length > 1 ? parts[parts.length - 2] : \"\";\r\n        this._initialize(isDirectory)\r\n    }\r\n    _initialize(isDirectory) {\r\n        this.isDirectory = !!isDirectory;\r\n        this.size = 0;\r\n        this.dateModified = new Date;\r\n        this.thumbnail = \"\";\r\n        this.tooltipText = \"\"\r\n    }\r\n    getFullPathInfo() {\r\n        var pathInfo = [...this.pathInfo];\r\n        if (!this.isRoot()) {\r\n            pathInfo.push({\r\n                key: this.key,\r\n                name: this.name\r\n            })\r\n        }\r\n        return pathInfo\r\n    }\r\n    isRoot() {\r\n        return \"\" === this.path\r\n    }\r\n    getFileExtension() {\r\n        return this.isDirectory ? \"\" : getFileExtension(this.name)\r\n    }\r\n    equals(item) {\r\n        return item && this.key === item.key\r\n    }\r\n    createClone() {\r\n        var result = new FileSystemItem(this.pathInfo, this.name, this.isDirectory, this.key);\r\n        result.key = this.key;\r\n        result.size = this.size;\r\n        result.dateModified = this.dateModified;\r\n        result.thumbnail = this.thumbnail;\r\n        result.tooltipText = this.tooltipText;\r\n        result.hasSubDirectories = this.hasSubDirectories;\r\n        result.dataItem = this.dataItem;\r\n        return result\r\n    }\r\n    _getPathByPathInfo(pathInfo, escape) {\r\n        return pathInfo.map(info => escape ? getEscapedFileName(info.name) : info.name).join(PATH_SEPARATOR)\r\n    }\r\n}\r\nexport default FileSystemItem;\r\n"]},"metadata":{},"sourceType":"module"}