{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, HostListener, Component, NgModule } from '@angular/core';\nimport DxProgressBar from 'devextreme/ui/progress_bar';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DxProgressBarComponent;\n  }),\n  multi: true\n};\n/**\r\n * The ProgressBar is a UI component that shows current progress.\r\n\r\n */\n\nvar DxProgressBarComponent = /*#__PURE__*/function (_DxComponent) {\n  _inherits(DxProgressBarComponent, _DxComponent);\n\n  var _super = _createSuper(DxProgressBarComponent);\n\n  function DxProgressBarComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    var _this;\n\n    _classCallCheck(this, DxProgressBarComponent);\n\n    _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    _this._watcherHelper = _watcherHelper;\n    _this._idh = _idh;\n\n    _this.touched = function (_) {};\n\n    _this._createEventEmitters([{\n      subscribe: 'complete',\n      emit: 'onComplete'\n    }, {\n      subscribe: 'contentReady',\n      emit: 'onContentReady'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'valueChanged',\n      emit: 'onValueChanged'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'hoverStateEnabledChange'\n    }, {\n      emit: 'isValidChange'\n    }, {\n      emit: 'maxChange'\n    }, {\n      emit: 'minChange'\n    }, {\n      emit: 'readOnlyChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'showStatusChange'\n    }, {\n      emit: 'statusFormatChange'\n    }, {\n      emit: 'validationErrorChange'\n    }, {\n      emit: 'validationErrorsChange'\n    }, {\n      emit: 'validationMessageModeChange'\n    }, {\n      emit: 'validationStatusChange'\n    }, {\n      emit: 'valueChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }, {\n      emit: 'onBlur'\n    }]);\n\n    _this._idh.setHost(_assertThisInitialized(_this));\n\n    optionHost.setHost(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\r\n   * \r\n  \r\n   */\n\n\n  _createClass(DxProgressBarComponent, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._getOption('disabled');\n    },\n    set: function set(value) {\n      this._setOption('disabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"elementAttr\",\n    get: function get() {\n      return this._getOption('elementAttr');\n    },\n    set: function set(value) {\n      this._setOption('elementAttr', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._getOption('height');\n    },\n    set: function set(value) {\n      this._setOption('height', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return this._getOption('hint');\n    },\n    set: function set(value) {\n      this._setOption('hint', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"hoverStateEnabled\",\n    get: function get() {\n      return this._getOption('hoverStateEnabled');\n    },\n    set: function set(value) {\n      this._setOption('hoverStateEnabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"isValid\",\n    get: function get() {\n      return this._getOption('isValid');\n    },\n    set: function set(value) {\n      this._setOption('isValid', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._getOption('max');\n    },\n    set: function set(value) {\n      this._setOption('max', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._getOption('min');\n    },\n    set: function set(value) {\n      this._setOption('min', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"readOnly\",\n    get: function get() {\n      return this._getOption('readOnly');\n    },\n    set: function set(value) {\n      this._setOption('readOnly', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"rtlEnabled\",\n    get: function get() {\n      return this._getOption('rtlEnabled');\n    },\n    set: function set(value) {\n      this._setOption('rtlEnabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showStatus\",\n    get: function get() {\n      return this._getOption('showStatus');\n    },\n    set: function set(value) {\n      this._setOption('showStatus', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"statusFormat\",\n    get: function get() {\n      return this._getOption('statusFormat');\n    },\n    set: function set(value) {\n      this._setOption('statusFormat', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"validationError\",\n    get: function get() {\n      return this._getOption('validationError');\n    },\n    set: function set(value) {\n      this._setOption('validationError', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"validationErrors\",\n    get: function get() {\n      return this._getOption('validationErrors');\n    },\n    set: function set(value) {\n      this._setOption('validationErrors', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"validationMessageMode\",\n    get: function get() {\n      return this._getOption('validationMessageMode');\n    },\n    set: function set(value) {\n      this._setOption('validationMessageMode', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"validationStatus\",\n    get: function get() {\n      return this._getOption('validationStatus');\n    },\n    set: function set(value) {\n      this._setOption('validationStatus', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._getOption('value');\n    },\n    set: function set(value) {\n      this._setOption('value', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this._getOption('visible');\n    },\n    set: function set(value) {\n      this._setOption('visible', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._getOption('width');\n    },\n    set: function set(value) {\n      this._setOption('width', value);\n    }\n  }, {\n    key: \"change\",\n    value: function change(_) {}\n  }, {\n    key: \"_createInstance\",\n    value: function _createInstance(element, options) {\n      return new DxProgressBar(element, options);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.eventHelper.lockedValueChangeEvent = true;\n      this.value = value;\n      this.eventHelper.lockedValueChangeEvent = false;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.change = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.touched = fn;\n    }\n  }, {\n    key: \"_createWidget\",\n    value: function _createWidget(element) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(DxProgressBarComponent.prototype), \"_createWidget\", this).call(this, element);\n\n      this.instance.on('focusOut', function (e) {\n        _this2.eventHelper.fireNgEvent('onBlur', [e]);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyWidget();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(DxProgressBarComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n      this.setupChanges('validationErrors', changes);\n    }\n  }, {\n    key: \"setupChanges\",\n    value: function setupChanges(prop, changes) {\n      if (!(prop in this._optionsToUpdate)) {\n        this._idh.setup(prop, changes);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this._idh.doCheck('validationErrors');\n\n      this._watcherHelper.checkWatchers();\n\n      _get(_getPrototypeOf(DxProgressBarComponent.prototype), \"ngDoCheck\", this).call(this);\n\n      _get(_getPrototypeOf(DxProgressBarComponent.prototype), \"clearChangedOptions\", this).call(this);\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      var isSetup = this._idh.setupSingle(name, value);\n\n      var isChanged = this._idh.getChanges(name, value) !== null;\n\n      if (isSetup || isChanged) {\n        _get(_getPrototypeOf(DxProgressBarComponent.prototype), \"_setOption\", this).call(this, name, value);\n      }\n    }\n  }]);\n\n  return DxProgressBarComponent;\n}(DxComponent);\n\nDxProgressBarComponent.ɵfac = function DxProgressBarComponent_Factory(t) {\n  return new (t || DxProgressBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nDxProgressBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DxProgressBarComponent,\n  selectors: [[\"dx-progress-bar\"]],\n  hostBindings: function DxProgressBarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"onBlur\", function DxProgressBarComponent_onBlur_HostBindingHandler($event) {\n        return ctx.touched($event);\n      })(\"valueChange\", function DxProgressBarComponent_valueChange_HostBindingHandler($event) {\n        return ctx.change($event);\n      });\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    height: \"height\",\n    hint: \"hint\",\n    hoverStateEnabled: \"hoverStateEnabled\",\n    isValid: \"isValid\",\n    max: \"max\",\n    min: \"min\",\n    readOnly: \"readOnly\",\n    rtlEnabled: \"rtlEnabled\",\n    showStatus: \"showStatus\",\n    statusFormat: \"statusFormat\",\n    validationError: \"validationError\",\n    validationErrors: \"validationErrors\",\n    validationMessageMode: \"validationMessageMode\",\n    validationStatus: \"validationStatus\",\n    value: \"value\",\n    visible: \"visible\",\n    width: \"width\"\n  },\n  outputs: {\n    onComplete: \"onComplete\",\n    onContentReady: \"onContentReady\",\n    onDisposing: \"onDisposing\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    onValueChanged: \"onValueChanged\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    heightChange: \"heightChange\",\n    hintChange: \"hintChange\",\n    hoverStateEnabledChange: \"hoverStateEnabledChange\",\n    isValidChange: \"isValidChange\",\n    maxChange: \"maxChange\",\n    minChange: \"minChange\",\n    readOnlyChange: \"readOnlyChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    showStatusChange: \"showStatusChange\",\n    statusFormatChange: \"statusFormatChange\",\n    validationErrorChange: \"validationErrorChange\",\n    validationErrorsChange: \"validationErrorsChange\",\n    validationMessageModeChange: \"validationMessageModeChange\",\n    validationStatusChange: \"validationStatusChange\",\n    valueChange: \"valueChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\",\n    onBlur: \"onBlur\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxProgressBarComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\nDxProgressBarComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: DxTemplateHost\n  }, {\n    type: WatcherHelper\n  }, {\n    type: IterableDifferHelper\n  }, {\n    type: NestedOptionHost\n  }, {\n    type: TransferState\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"disabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxProgressBarComponent.prototype, \"elementAttr\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxProgressBarComponent.prototype, \"height\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxProgressBarComponent.prototype, \"hint\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"hoverStateEnabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"isValid\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxProgressBarComponent.prototype, \"max\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxProgressBarComponent.prototype, \"min\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"readOnly\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"rtlEnabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"showStatus\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxProgressBarComponent.prototype, \"statusFormat\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxProgressBarComponent.prototype, \"validationError\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DxProgressBarComponent.prototype, \"validationErrors\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxProgressBarComponent.prototype, \"validationMessageMode\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxProgressBarComponent.prototype, \"validationStatus\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxProgressBarComponent.prototype, \"value\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxProgressBarComponent.prototype, \"visible\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxProgressBarComponent.prototype, \"width\", null);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onComplete\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onContentReady\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onDisposing\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onInitialized\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onOptionChanged\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onValueChanged\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"disabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"elementAttrChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"heightChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"hintChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"hoverStateEnabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"isValidChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"maxChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"minChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"readOnlyChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"rtlEnabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"showStatusChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"statusFormatChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"validationErrorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"validationErrorsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"validationMessageModeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"validationStatusChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"valueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"visibleChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"widthChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxProgressBarComponent.prototype, \"onBlur\", void 0);\n\n__decorate([HostListener('valueChange', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DxProgressBarComponent.prototype, \"change\", null);\n\n__decorate([HostListener('onBlur', ['$event']), __metadata(\"design:type\", Object)], DxProgressBarComponent.prototype, \"touched\", void 0);\n\nDxProgressBarComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxProgressBarComponent);\n\nvar DxProgressBarModule = function DxProgressBarModule() {\n  _classCallCheck(this, DxProgressBarModule);\n};\n\nDxProgressBarModule.ɵfac = function DxProgressBarModule_Factory(t) {\n  return new (t || DxProgressBarModule)();\n};\n\nDxProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DxProgressBarModule\n});\nDxProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxProgressBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-progress-bar',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.DxTemplateHost\n    }, {\n      type: ɵngcc1.WatcherHelper\n    }, {\n      type: ɵngcc1.IterableDifferHelper\n    }, {\n      type: ɵngcc1.NestedOptionHost\n    }, {\n      type: ɵngcc2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    touched: [{\n      type: HostListener,\n      args: ['onBlur', ['$event']]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    hoverStateEnabled: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    showStatus: [{\n      type: Input\n    }],\n    statusFormat: [{\n      type: Input\n    }],\n    validationError: [{\n      type: Input\n    }],\n    validationErrors: [{\n      type: Input\n    }],\n    validationMessageMode: [{\n      type: Input\n    }],\n    validationStatus: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    change: [{\n      type: HostListener,\n      args: ['valueChange', ['$event']]\n    }],\n    onComplete: [{\n      type: Output\n    }],\n    onContentReady: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onValueChanged: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    hoverStateEnabledChange: [{\n      type: Output\n    }],\n    isValidChange: [{\n      type: Output\n    }],\n    maxChange: [{\n      type: Output\n    }],\n    minChange: [{\n      type: Output\n    }],\n    readOnlyChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    showStatusChange: [{\n      type: Output\n    }],\n    statusFormatChange: [{\n      type: Output\n    }],\n    validationErrorChange: [{\n      type: Output\n    }],\n    validationErrorsChange: [{\n      type: Output\n    }],\n    validationMessageModeChange: [{\n      type: Output\n    }],\n    validationStatusChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxProgressBarModule, {\n    declarations: function declarations() {\n      return [DxProgressBarComponent];\n    },\n    imports: function imports() {\n      return [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxProgressBarComponent, DxTemplateModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxProgressBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxProgressBarComponent],\n      exports: [DxProgressBarComponent, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxProgressBarComponent, DxProgressBarModule };","map":{"version":3,"sources":["devextreme-angular/ui/progress-bar/index.ts","devextreme-angular/ui/progress-bar/devextreme-angular-ui-progress-bar.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    forwardRef,\r\n    HostListener,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport DxProgressBar from 'devextreme/ui/progress_bar';\r\n\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxProgressBarComponent),\r\n    multi: true\r\n};\r\n/**\r\n * The ProgressBar is a UI component that shows current progress.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-progress-bar',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxProgressBarComponent extends DxComponent implements OnDestroy, ControlValueAccessor, OnChanges, DoCheck {\r\n    instance: DxProgressBar;\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get isValid(): boolean {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value: boolean) {\r\n        this._setOption('isValid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get max(): number {\r\n        return this._getOption('max');\r\n    }\r\n    set max(value: number) {\r\n        this._setOption('max', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get min(): number {\r\n        return this._getOption('min');\r\n    }\r\n    set min(value: number) {\r\n        this._setOption('min', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showStatus(): boolean {\r\n        return this._getOption('showStatus');\r\n    }\r\n    set showStatus(value: boolean) {\r\n        this._setOption('showStatus', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get statusFormat(): Function | string {\r\n        return this._getOption('statusFormat');\r\n    }\r\n    set statusFormat(value: Function | string) {\r\n        this._setOption('statusFormat', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get validationError(): any {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value: any) {\r\n        this._setOption('validationError', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get validationErrors(): Array<any> {\r\n        return this._getOption('validationErrors');\r\n    }\r\n    set validationErrors(value: Array<any>) {\r\n        this._setOption('validationErrors', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get validationMessageMode(): string {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value: string) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get validationStatus(): string {\r\n        return this._getOption('validationStatus');\r\n    }\r\n    set validationStatus(value: string) {\r\n        this._setOption('validationStatus', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get value(): number {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: number) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onComplete: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() isValidChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showStatusChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() statusFormatChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() validationErrorChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() validationErrorsChange: EventEmitter<Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() validationMessageModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() validationStatusChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() valueChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onBlur: EventEmitter<any>;\r\n\r\n\r\n    @HostListener('valueChange', ['$event']) change(_) { }\r\n    @HostListener('onBlur', ['$event']) touched = (_) => {};\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'complete', emit: 'onComplete' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maxChange' },\r\n            { emit: 'minChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showStatusChange' },\r\n            { emit: 'statusFormatChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxProgressBar(element, options);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void { this.change = fn; }\r\n    registerOnTouched(fn: () => void): void { this.touched = fn; }\r\n\r\n    _createWidget(element: any) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxProgressBarComponent\r\n  ],\r\n  exports: [\r\n    DxProgressBarComponent,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxProgressBarModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}