{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification.progress_panel.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { ensureDefined } from \"../../core/utils/common\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport ProgressBar from \"../progress_bar\";\nimport Button from \"../button\";\nimport ScrollView from \"../scroll_view\";\nvar FILE_MANAGER_PROGRESS_PANEL_CLASS = \"dx-filemanager-progress-panel\";\nvar FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-container\");\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title\");\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title-text\");\nvar FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-close-button\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-infos-container\");\nvar FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-separator\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info\");\nvar FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-common\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info-with-details\");\nvar FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-details\");\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\nvar FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-without-close-button\");\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\nvar FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-progress-bar\");\nvar FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-close-button\");\nvar DX_CARD_CLASS = \"dx-card\";\n\nvar FileManagerProgressPanel = /*#__PURE__*/function (_Widget) {\n  _inherits(FileManagerProgressPanel, _Widget);\n\n  var _super = _createSuper(FileManagerProgressPanel);\n\n  function FileManagerProgressPanel() {\n    _classCallCheck(this, FileManagerProgressPanel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerProgressPanel, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var _this = this;\n\n      _get(_getPrototypeOf(FileManagerProgressPanel.prototype), \"_initMarkup\", this).call(this);\n\n      this._initActions();\n\n      this._operationCount = 0;\n      this.$element().addClass(FILE_MANAGER_PROGRESS_PANEL_CLASS);\n      var $scrollView = $(\"<div>\").appendTo(this.$element());\n      var $container = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS).appendTo($scrollView);\n      this._scrollView = this._createComponent($scrollView, ScrollView, {\n        scrollByContent: true,\n        scrollByThumb: true,\n        showScrollbar: \"onScroll\"\n      });\n      var $title = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS).appendTo($container);\n      $(\"<div>\").text(messageLocalization.format(\"dxFileManager-notificationProgressPanelTitle\")).addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS).appendTo($title);\n      var $closeButton = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS).appendTo($title);\n\n      this._createComponent($closeButton, Button, {\n        icon: \"close\",\n        stylingMode: \"text\",\n        onClick: function onClick() {\n          return _this._raisePanelClosed();\n        }\n      });\n\n      this._$infosContainer = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS).appendTo($container);\n\n      this._renderEmptyListText();\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerProgressPanel.prototype), \"_getDefaultOptions\", this).call(this), {\n        onOperationClosed: null,\n        onOperationCanceled: null,\n        onOperationItemCanceled: null,\n        onPanelClosed: null\n      });\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onOperationClosed: this._createActionByOption(\"onOperationClosed\"),\n        onOperationCanceled: this._createActionByOption(\"onOperationCanceled\"),\n        onOperationItemCanceled: this._createActionByOption(\"onOperationItemCanceled\"),\n        onPanelClosed: this._createActionByOption(\"onPanelClosed\")\n      };\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"test\":\n          break;\n\n        case \"onOperationClosed\":\n        case \"onOperationCanceled\":\n        case \"onOperationItemCanceled\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerProgressPanel.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"addOperation\",\n    value: function addOperation(commonText, showCloseButtonAlways, allowProgressAutoUpdate) {\n      var _this2 = this;\n\n      if (this._operationCount) {\n        $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS).prependTo(this._$infosContainer);\n      } else {\n        this._$infosContainer.empty();\n      }\n\n      this._operationCount++;\n      var info = {\n        customCloseHandling: showCloseButtonAlways,\n        allowProgressAutoUpdate: ensureDefined(allowProgressAutoUpdate, true)\n      };\n      var $info = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS).prependTo(this._$infosContainer);\n      info.$info = $info;\n      var $common = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS).appendTo($info);\n      info.common = this._createProgressBox($common, {\n        commonText: commonText,\n        showCloseButton: true,\n        showCloseButtonAlways: showCloseButtonAlways,\n        onCloseButtonClick: function onCloseButtonClick() {\n          return _this2._closeOperation(info);\n        }\n      });\n      return info;\n    }\n  }, {\n    key: \"addOperationDetails\",\n    value: function addOperationDetails(info, details, showCloseButton) {\n      var _this3 = this;\n\n      info.$info.addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS);\n      var $details = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS).appendTo(info.$info);\n      info.details = details.map(function (itemInfo, index) {\n        itemInfo.info = info;\n        return _this3._createDetailsItem($details, itemInfo, index, false, showCloseButton);\n      });\n    }\n  }, {\n    key: \"_createDetailsItem\",\n    value: function _createDetailsItem($container, item, itemIndex, skipProgressBox, showCloseButton) {\n      var _this4 = this;\n\n      var $detailsItem = $(\"<div>\").appendTo($container);\n\n      if (-1 !== itemIndex) {\n        $detailsItem.addClass(DX_CARD_CLASS);\n      }\n\n      return this._createProgressBox($detailsItem, {\n        commonText: item.commonText,\n        imageUrl: item.imageUrl,\n        skipProgressBox: skipProgressBox,\n        showCloseButton: showCloseButton,\n        showCloseButtonAlways: showCloseButton,\n        onCloseButtonClick: function onCloseButtonClick() {\n          return _this4._cancelOperationItem(item, itemIndex);\n        }\n      });\n    }\n  }, {\n    key: \"completeOperationItem\",\n    value: function completeOperationItem(operationInfo, itemIndex, commonProgress) {\n      if (operationInfo.allowProgressAutoUpdate) {\n        this.updateOperationItemProgress(operationInfo, itemIndex, 100, commonProgress);\n      }\n\n      this._setCloseButtonVisible(operationInfo.details[itemIndex], false);\n    }\n  }, {\n    key: \"updateOperationItemProgress\",\n    value: function updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\n      operationInfo.common.progressBar.option(\"value\", commonProgress);\n\n      if (operationInfo.details) {\n        var detailsItem = operationInfo.details[itemIndex];\n        detailsItem.progressBar.option(\"value\", itemProgress);\n      }\n    }\n  }, {\n    key: \"completeOperation\",\n    value: function completeOperation(info, commonText, isError, statusText) {\n      info.completed = true;\n      info.common.$commonText.text(commonText);\n\n      if (isError) {\n        this._removeProgressBar(info.common);\n      } else if (info.allowProgressAutoUpdate) {\n        info.common.progressBar.option(\"value\", 100);\n      }\n\n      if (statusText) {\n        this._setProgressBarText(info.common, statusText);\n      }\n\n      this._setCloseButtonVisible(info.common, true);\n    }\n  }, {\n    key: \"completeSingleOperationWithError\",\n    value: function completeSingleOperationWithError(info, errorText) {\n      var _info$details;\n\n      var detailsItem = null === (_info$details = info.details) || void 0 === _info$details ? void 0 : _info$details[0];\n      info.completed = true;\n\n      this._renderOperationError(detailsItem || info.common, errorText);\n\n      this._setCloseButtonVisible(info.common, true);\n\n      if (detailsItem) {\n        this._setCloseButtonVisible(detailsItem, false);\n      }\n    }\n  }, {\n    key: \"addOperationDetailsError\",\n    value: function addOperationDetailsError(info, index, errorText) {\n      var detailsItem = info.details[index];\n\n      this._renderOperationError(detailsItem, errorText);\n\n      this._setCloseButtonVisible(detailsItem, false);\n    }\n  }, {\n    key: \"_renderError\",\n    value: function _renderError($container, $target, errorText) {\n      $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container);\n    }\n  }, {\n    key: \"_renderEmptyListText\",\n    value: function _renderEmptyListText() {\n      this._$infosContainer.text(messageLocalization.format(\"dxFileManager-notificationProgressPanelEmptyListText\"));\n    }\n  }, {\n    key: \"_renderOperationError\",\n    value: function _renderOperationError(info, errorText) {\n      this._removeProgressBar(info);\n\n      this._renderError(info.$wrapper, info.$commonText, errorText);\n    }\n  }, {\n    key: \"_removeProgressBar\",\n    value: function _removeProgressBar(progressBox) {\n      if (progressBox.progressBar) {\n        progressBox.progressBar.dispose();\n        progressBox.progressBar.$element().remove();\n        progressBox.progressBar = null;\n      }\n    }\n  }, {\n    key: \"_createProgressBox\",\n    value: function _createProgressBox($container, options) {\n      var _this5 = this;\n\n      $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\n\n      if (!options.showCloseButtonAlways) {\n        $container.addClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS);\n      }\n\n      if (options.imageUrl) {\n        getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container);\n      }\n\n      var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\n      var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\n      var progressBar = null;\n\n      if (!options.skipProgressBox) {\n        var $progressBar = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS).appendTo($wrapper);\n        progressBar = this._createComponent($progressBar, ProgressBar, {\n          min: 0,\n          max: 100,\n          width: \"100%\",\n          validationMessageMode: \"always\",\n          statusFormat: function statusFormat(ratio, value) {\n            return _this5._getStatusString(ratio, value);\n          }\n        });\n      }\n\n      var closeButton = null;\n\n      if (options.showCloseButton) {\n        var $button = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS).appendTo($container);\n        closeButton = this._createComponent($button, Button, {\n          icon: \"dx-filemanager-i dx-filemanager-i-cancel\",\n          stylingMode: \"text\",\n          visible: options.showCloseButtonAlways,\n          onClick: options.onCloseButtonClick\n        });\n      }\n\n      return {\n        $commonText: $commonText,\n        progressBar: progressBar,\n        $element: $container,\n        $wrapper: $wrapper,\n        closeButton: closeButton\n      };\n    }\n  }, {\n    key: \"_setCloseButtonVisible\",\n    value: function _setCloseButtonVisible(progressBox, visible) {\n      if (progressBox.closeButton) {\n        progressBox.$element.toggleClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS, !visible);\n        progressBox.closeButton.option(\"visible\", visible);\n      }\n    }\n  }, {\n    key: \"_setProgressBarText\",\n    value: function _setProgressBarText(progressBox, text) {\n      progressBox.progressBar.option(\"statusFormat\", function () {\n        return text;\n      });\n    }\n  }, {\n    key: \"_closeOperation\",\n    value: function _closeOperation(info) {\n      var _this6 = this;\n\n      if (info.customCloseHandling && !info.completed) {\n        this._raiseOperationCanceled(info);\n\n        this._setCloseButtonVisible(info.common, false);\n\n        info.details.forEach(function (item) {\n          return _this6._displayClosedOperationItem(item);\n        });\n      } else {\n        this._raiseOperationClosed(info);\n\n        info.$info.next(\".\".concat(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS)).remove();\n        info.$info.remove();\n        this._operationCount--;\n\n        if (!this._operationCount) {\n          this._renderEmptyListText();\n        }\n      }\n    }\n  }, {\n    key: \"_cancelOperationItem\",\n    value: function _cancelOperationItem(item, itemIndex) {\n      this._raiseOperationItemCanceled(item, itemIndex);\n\n      var itemInfo = item.info.details[itemIndex];\n\n      this._displayClosedOperationItem(itemInfo);\n    }\n  }, {\n    key: \"_displayClosedOperationItem\",\n    value: function _displayClosedOperationItem(itemInfo) {\n      this._setProgressBarText(itemInfo, messageLocalization.format(\"dxFileManager-notificationProgressPanelOperationCanceled\"));\n\n      this._setCloseButtonVisible(itemInfo, false);\n    }\n  }, {\n    key: \"_getStatusString\",\n    value: function _getStatusString(ratio, value) {\n      return 1 === ratio ? messageLocalization.format(\"Done\") : Math.round(100 * ratio) + \"%\";\n    }\n  }, {\n    key: \"_raiseOperationClosed\",\n    value: function _raiseOperationClosed(info) {\n      this._actions.onOperationClosed({\n        info: info\n      });\n    }\n  }, {\n    key: \"_raiseOperationCanceled\",\n    value: function _raiseOperationCanceled(info) {\n      this._actions.onOperationCanceled({\n        info: info\n      });\n    }\n  }, {\n    key: \"_raiseOperationItemCanceled\",\n    value: function _raiseOperationItemCanceled(item, itemIndex) {\n      this._actions.onOperationItemCanceled({\n        item: item,\n        itemIndex: itemIndex\n      });\n    }\n  }, {\n    key: \"_raisePanelClosed\",\n    value: function _raisePanelClosed() {\n      this._actions.onPanelClosed();\n    }\n  }]);\n\n  return FileManagerProgressPanel;\n}(Widget);\n\nexport default FileManagerProgressPanel;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.notification.progress_panel.js"],"names":["$","extend","ensureDefined","getImageContainer","messageLocalization","Widget","ProgressBar","Button","ScrollView","FILE_MANAGER_PROGRESS_PANEL_CLASS","FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS","concat","FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS","FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS","FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS","FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS","FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS","FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS","FILE_MANAGER_PROGRESS_BOX_CLASS","FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS","FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS","FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS","FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS","FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS","FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS","FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS","DX_CARD_CLASS","FileManagerProgressPanel","_initActions","_operationCount","$element","addClass","$scrollView","appendTo","$container","_scrollView","_createComponent","scrollByContent","scrollByThumb","showScrollbar","$title","text","format","$closeButton","icon","stylingMode","onClick","_raisePanelClosed","_$infosContainer","_renderEmptyListText","onOperationClosed","onOperationCanceled","onOperationItemCanceled","onPanelClosed","_actions","_createActionByOption","args","name","commonText","showCloseButtonAlways","allowProgressAutoUpdate","prependTo","empty","info","customCloseHandling","$info","$common","common","_createProgressBox","showCloseButton","onCloseButtonClick","_closeOperation","details","$details","map","itemInfo","index","_createDetailsItem","item","itemIndex","skipProgressBox","$detailsItem","imageUrl","_cancelOperationItem","operationInfo","commonProgress","updateOperationItemProgress","_setCloseButtonVisible","itemProgress","progressBar","option","detailsItem","isError","statusText","completed","$commonText","_removeProgressBar","_setProgressBarText","errorText","_info$details","_renderOperationError","$target","_renderError","$wrapper","progressBox","dispose","remove","options","$progressBar","min","max","width","validationMessageMode","statusFormat","ratio","value","_getStatusString","closeButton","$button","visible","toggleClass","_raiseOperationCanceled","forEach","_displayClosedOperationItem","_raiseOperationClosed","next","_raiseOperationItemCanceled","Math","round"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,aADJ,QAEO,yBAFP;AAGA,SACIC,iBADJ,QAEO,uBAFP;AAGA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,IAAIC,iCAAiC,GAAG,+BAAxC;AACA,IAAIC,2CAA2C,GAAG,GAAGC,MAAH,CAAUF,iCAAV,EAA6C,YAA7C,CAAlD;AACA,IAAIG,uCAAuC,GAAG,GAAGD,MAAH,CAAUF,iCAAV,EAA6C,QAA7C,CAA9C;AACA,IAAII,4CAA4C,GAAG,GAAGF,MAAH,CAAUF,iCAAV,EAA6C,aAA7C,CAAnD;AACA,IAAIK,8CAA8C,GAAG,GAAGH,MAAH,CAAUF,iCAAV,EAA6C,eAA7C,CAArD;AACA,IAAIM,iDAAiD,GAAG,GAAGJ,MAAH,CAAUF,iCAAV,EAA6C,kBAA7C,CAAxD;AACA,IAAIO,2CAA2C,GAAG,GAAGL,MAAH,CAAUF,iCAAV,EAA6C,YAA7C,CAAlD;AACA,IAAIQ,sCAAsC,GAAG,GAAGN,MAAH,CAAUF,iCAAV,EAA6C,OAA7C,CAA7C;AACA,IAAIS,wCAAwC,GAAG,GAAGP,MAAH,CAAUF,iCAAV,EAA6C,SAA7C,CAA/C;AACA,IAAIU,mDAAmD,GAAG,GAAGR,MAAH,CAAUF,iCAAV,EAA6C,oBAA7C,CAA1D;AACA,IAAIW,yCAAyC,GAAG,GAAGT,MAAH,CAAUF,iCAAV,EAA6C,UAA7C,CAAhD;AACA,IAAIY,+BAA+B,GAAG,6BAAtC;AACA,IAAIC,qCAAqC,GAAG,GAAGX,MAAH,CAAUU,+BAAV,EAA2C,QAA3C,CAA5C;AACA,IAAIE,oDAAoD,GAAG,GAAGZ,MAAH,CAAUU,+BAAV,EAA2C,uBAA3C,CAA3D;AACA,IAAIG,qCAAqC,GAAG,GAAGb,MAAH,CAAUU,+BAAV,EAA2C,QAA3C,CAA5C;AACA,IAAII,uCAAuC,GAAG,GAAGd,MAAH,CAAUU,+BAAV,EAA2C,UAA3C,CAA9C;AACA,IAAIK,sCAAsC,GAAG,GAAGf,MAAH,CAAUU,+BAAV,EAA2C,SAA3C,CAA7C;AACA,IAAIM,4CAA4C,GAAG,GAAGhB,MAAH,CAAUU,+BAAV,EAA2C,eAA3C,CAAnD;AACA,IAAIO,4CAA4C,GAAG,GAAGjB,MAAH,CAAUU,+BAAV,EAA2C,eAA3C,CAAnD;AACA,IAAIQ,aAAa,GAAG,SAApB;;IACMC,wB;;;;;;;;;;;;;WACF,uBAAc;AAAA;;AACV;;AACA,WAAKC,YAAL;;AACA,WAAKC,eAAL,GAAuB,CAAvB;AACA,WAAKC,QAAL,GAAgBC,QAAhB,CAAyBzB,iCAAzB;AACA,UAAI0B,WAAW,GAAGnC,CAAC,CAAC,OAAD,CAAD,CAAWoC,QAAX,CAAoB,KAAKH,QAAL,EAApB,CAAlB;AACA,UAAII,UAAU,GAAGrC,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBxB,2CAApB,EAAiE0B,QAAjE,CAA0ED,WAA1E,CAAjB;AACA,WAAKG,WAAL,GAAmB,KAAKC,gBAAL,CAAsBJ,WAAtB,EAAmC3B,UAAnC,EAA+C;AAC9DgC,QAAAA,eAAe,EAAE,IAD6C;AAE9DC,QAAAA,aAAa,EAAE,IAF+C;AAG9DC,QAAAA,aAAa,EAAE;AAH+C,OAA/C,CAAnB;AAKA,UAAIC,MAAM,GAAG3C,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBtB,uCAApB,EAA6DwB,QAA7D,CAAsEC,UAAtE,CAAb;AACArC,MAAAA,CAAC,CAAC,OAAD,CAAD,CAAW4C,IAAX,CAAgBxC,mBAAmB,CAACyC,MAApB,CAA2B,8CAA3B,CAAhB,EAA4FX,QAA5F,CAAqGrB,4CAArG,EAAmJuB,QAAnJ,CAA4JO,MAA5J;AACA,UAAIG,YAAY,GAAG9C,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBpB,8CAApB,EAAoEsB,QAApE,CAA6EO,MAA7E,CAAnB;;AACA,WAAKJ,gBAAL,CAAsBO,YAAtB,EAAoCvC,MAApC,EAA4C;AACxCwC,QAAAA,IAAI,EAAE,OADkC;AAExCC,QAAAA,WAAW,EAAE,MAF2B;AAGxCC,QAAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,iBAAL,EAAN;AAAA;AAH+B,OAA5C;;AAKA,WAAKC,gBAAL,GAAwBnD,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBnB,iDAApB,EAAuEqB,QAAvE,CAAgFC,UAAhF,CAAxB;;AACA,WAAKe,oBAAL;AACH;;;WACD,8BAAqB;AACjB,aAAOnD,MAAM,mGAA6B;AACtCoD,QAAAA,iBAAiB,EAAE,IADmB;AAEtCC,QAAAA,mBAAmB,EAAE,IAFiB;AAGtCC,QAAAA,uBAAuB,EAAE,IAHa;AAItCC,QAAAA,aAAa,EAAE;AAJuB,OAA7B,CAAb;AAMH;;;WACD,wBAAe;AACX,WAAKC,QAAL,GAAgB;AACZJ,QAAAA,iBAAiB,EAAE,KAAKK,qBAAL,CAA2B,mBAA3B,CADP;AAEZJ,QAAAA,mBAAmB,EAAE,KAAKI,qBAAL,CAA2B,qBAA3B,CAFT;AAGZH,QAAAA,uBAAuB,EAAE,KAAKG,qBAAL,CAA2B,yBAA3B,CAHb;AAIZF,QAAAA,aAAa,EAAE,KAAKE,qBAAL,CAA2B,eAA3B;AAJH,OAAhB;AAMH;;;WACD,wBAAeC,IAAf,EAAqB;AACjB,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;;AACA,cAAQA,IAAR;AACI,aAAK,MAAL;AACI;;AACJ,aAAK,mBAAL;AACA,aAAK,qBAAL;AACA,aAAK,yBAAL;AACI,eAAKH,QAAL,CAAcG,IAAd,IAAsB,KAAKF,qBAAL,CAA2BE,IAA3B,CAAtB;AACA;;AACJ;AACI,uGAAqBD,IAArB;;AATR;AAWH;;;WACD,sBAAaE,UAAb,EAAyBC,qBAAzB,EAAgDC,uBAAhD,EAAyE;AAAA;;AACrE,UAAI,KAAK/B,eAAT,EAA0B;AACtBhC,QAAAA,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBlB,2CAApB,EAAiEgD,SAAjE,CAA2E,KAAKb,gBAAhF;AACH,OAFD,MAEO;AACH,aAAKA,gBAAL,CAAsBc,KAAtB;AACH;;AACD,WAAKjC,eAAL;AACA,UAAIkC,IAAI,GAAG;AACPC,QAAAA,mBAAmB,EAAEL,qBADd;AAEPC,QAAAA,uBAAuB,EAAE7D,aAAa,CAAC6D,uBAAD,EAA0B,IAA1B;AAF/B,OAAX;AAIA,UAAIK,KAAK,GAAGpE,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBjB,sCAApB,EAA4D+C,SAA5D,CAAsE,KAAKb,gBAA3E,CAAZ;AACAe,MAAAA,IAAI,CAACE,KAAL,GAAaA,KAAb;AACA,UAAIC,OAAO,GAAGrE,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBhB,wCAApB,EAA8DkB,QAA9D,CAAuEgC,KAAvE,CAAd;AACAF,MAAAA,IAAI,CAACI,MAAL,GAAc,KAAKC,kBAAL,CAAwBF,OAAxB,EAAiC;AAC3CR,QAAAA,UAAU,EAAEA,UAD+B;AAE3CW,QAAAA,eAAe,EAAE,IAF0B;AAG3CV,QAAAA,qBAAqB,EAAEA,qBAHoB;AAI3CW,QAAAA,kBAAkB,EAAE;AAAA,iBAAM,MAAI,CAACC,eAAL,CAAqBR,IAArB,CAAN;AAAA;AAJuB,OAAjC,CAAd;AAMA,aAAOA,IAAP;AACH;;;WACD,6BAAoBA,IAApB,EAA0BS,OAA1B,EAAmCH,eAAnC,EAAoD;AAAA;;AAChDN,MAAAA,IAAI,CAACE,KAAL,CAAWlC,QAAX,CAAoBf,mDAApB;AACA,UAAIyD,QAAQ,GAAG5E,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBd,yCAApB,EAA+DgB,QAA/D,CAAwE8B,IAAI,CAACE,KAA7E,CAAf;AACAF,MAAAA,IAAI,CAACS,OAAL,GAAeA,OAAO,CAACE,GAAR,CAAY,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC5CD,QAAAA,QAAQ,CAACZ,IAAT,GAAgBA,IAAhB;AACA,eAAO,MAAI,CAACc,kBAAL,CAAwBJ,QAAxB,EAAkCE,QAAlC,EAA4CC,KAA5C,EAAmD,KAAnD,EAA0DP,eAA1D,CAAP;AACH,OAHc,CAAf;AAIH;;;WACD,4BAAmBnC,UAAnB,EAA+B4C,IAA/B,EAAqCC,SAArC,EAAgDC,eAAhD,EAAiEX,eAAjE,EAAkF;AAAA;;AAC9E,UAAIY,YAAY,GAAGpF,CAAC,CAAC,OAAD,CAAD,CAAWoC,QAAX,CAAoBC,UAApB,CAAnB;;AACA,UAAI,CAAC,CAAD,KAAO6C,SAAX,EAAsB;AAClBE,QAAAA,YAAY,CAAClD,QAAb,CAAsBL,aAAtB;AACH;;AACD,aAAO,KAAK0C,kBAAL,CAAwBa,YAAxB,EAAsC;AACzCvB,QAAAA,UAAU,EAAEoB,IAAI,CAACpB,UADwB;AAEzCwB,QAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAF0B;AAGzCF,QAAAA,eAAe,EAAEA,eAHwB;AAIzCX,QAAAA,eAAe,EAAEA,eAJwB;AAKzCV,QAAAA,qBAAqB,EAAEU,eALkB;AAMzCC,QAAAA,kBAAkB,EAAE;AAAA,iBAAM,MAAI,CAACa,oBAAL,CAA0BL,IAA1B,EAAgCC,SAAhC,CAAN;AAAA;AANqB,OAAtC,CAAP;AAQH;;;WACD,+BAAsBK,aAAtB,EAAqCL,SAArC,EAAgDM,cAAhD,EAAgE;AAC5D,UAAID,aAAa,CAACxB,uBAAlB,EAA2C;AACvC,aAAK0B,2BAAL,CAAiCF,aAAjC,EAAgDL,SAAhD,EAA2D,GAA3D,EAAgEM,cAAhE;AACH;;AACD,WAAKE,sBAAL,CAA4BH,aAAa,CAACZ,OAAd,CAAsBO,SAAtB,CAA5B,EAA8D,KAA9D;AACH;;;WACD,qCAA4BK,aAA5B,EAA2CL,SAA3C,EAAsDS,YAAtD,EAAoEH,cAApE,EAAoF;AAChFD,MAAAA,aAAa,CAACjB,MAAd,CAAqBsB,WAArB,CAAiCC,MAAjC,CAAwC,OAAxC,EAAiDL,cAAjD;;AACA,UAAID,aAAa,CAACZ,OAAlB,EAA2B;AACvB,YAAImB,WAAW,GAAGP,aAAa,CAACZ,OAAd,CAAsBO,SAAtB,CAAlB;AACAY,QAAAA,WAAW,CAACF,WAAZ,CAAwBC,MAAxB,CAA+B,OAA/B,EAAwCF,YAAxC;AACH;AACJ;;;WACD,2BAAkBzB,IAAlB,EAAwBL,UAAxB,EAAoCkC,OAApC,EAA6CC,UAA7C,EAAyD;AACrD9B,MAAAA,IAAI,CAAC+B,SAAL,GAAiB,IAAjB;AACA/B,MAAAA,IAAI,CAACI,MAAL,CAAY4B,WAAZ,CAAwBtD,IAAxB,CAA6BiB,UAA7B;;AACA,UAAIkC,OAAJ,EAAa;AACT,aAAKI,kBAAL,CAAwBjC,IAAI,CAACI,MAA7B;AACH,OAFD,MAEO,IAAIJ,IAAI,CAACH,uBAAT,EAAkC;AACrCG,QAAAA,IAAI,CAACI,MAAL,CAAYsB,WAAZ,CAAwBC,MAAxB,CAA+B,OAA/B,EAAwC,GAAxC;AACH;;AACD,UAAIG,UAAJ,EAAgB;AACZ,aAAKI,mBAAL,CAAyBlC,IAAI,CAACI,MAA9B,EAAsC0B,UAAtC;AACH;;AACD,WAAKN,sBAAL,CAA4BxB,IAAI,CAACI,MAAjC,EAAyC,IAAzC;AACH;;;WACD,0CAAiCJ,IAAjC,EAAuCmC,SAAvC,EAAkD;AAC9C,UAAIC,aAAJ;;AACA,UAAIR,WAAW,GAAG,UAAUQ,aAAa,GAAGpC,IAAI,CAACS,OAA/B,KAA2C,KAAK,CAAL,KAAW2B,aAAtD,GAAsE,KAAK,CAA3E,GAA+EA,aAAa,CAAC,CAAD,CAA9G;AACApC,MAAAA,IAAI,CAAC+B,SAAL,GAAiB,IAAjB;;AACA,WAAKM,qBAAL,CAA2BT,WAAW,IAAI5B,IAAI,CAACI,MAA/C,EAAuD+B,SAAvD;;AACA,WAAKX,sBAAL,CAA4BxB,IAAI,CAACI,MAAjC,EAAyC,IAAzC;;AACA,UAAIwB,WAAJ,EAAiB;AACb,aAAKJ,sBAAL,CAA4BI,WAA5B,EAAyC,KAAzC;AACH;AACJ;;;WACD,kCAAyB5B,IAAzB,EAA+Ba,KAA/B,EAAsCsB,SAAtC,EAAiD;AAC7C,UAAIP,WAAW,GAAG5B,IAAI,CAACS,OAAL,CAAaI,KAAb,CAAlB;;AACA,WAAKwB,qBAAL,CAA2BT,WAA3B,EAAwCO,SAAxC;;AACA,WAAKX,sBAAL,CAA4BI,WAA5B,EAAyC,KAAzC;AACH;;;WACD,sBAAazD,UAAb,EAAyBmE,OAAzB,EAAkCH,SAAlC,EAA6C;AACzCrG,MAAAA,CAAC,CAAC,OAAD,CAAD,CAAW4C,IAAX,CAAgByD,SAAhB,EAA2BnE,QAA3B,CAAoCZ,qCAApC,EAA2Ec,QAA3E,CAAoFC,UAApF;AACH;;;WACD,gCAAuB;AACnB,WAAKc,gBAAL,CAAsBP,IAAtB,CAA2BxC,mBAAmB,CAACyC,MAApB,CAA2B,sDAA3B,CAA3B;AACH;;;WACD,+BAAsBqB,IAAtB,EAA4BmC,SAA5B,EAAuC;AACnC,WAAKF,kBAAL,CAAwBjC,IAAxB;;AACA,WAAKuC,YAAL,CAAkBvC,IAAI,CAACwC,QAAvB,EAAiCxC,IAAI,CAACgC,WAAtC,EAAmDG,SAAnD;AACH;;;WACD,4BAAmBM,WAAnB,EAAgC;AAC5B,UAAIA,WAAW,CAACf,WAAhB,EAA6B;AACzBe,QAAAA,WAAW,CAACf,WAAZ,CAAwBgB,OAAxB;AACAD,QAAAA,WAAW,CAACf,WAAZ,CAAwB3D,QAAxB,GAAmC4E,MAAnC;AACAF,QAAAA,WAAW,CAACf,WAAZ,GAA0B,IAA1B;AACH;AACJ;;;WACD,4BAAmBvD,UAAnB,EAA+ByE,OAA/B,EAAwC;AAAA;;AACpCzE,MAAAA,UAAU,CAACH,QAAX,CAAoBb,+BAApB;;AACA,UAAI,CAACyF,OAAO,CAAChD,qBAAb,EAAoC;AAChCzB,QAAAA,UAAU,CAACH,QAAX,CAAoBX,oDAApB;AACH;;AACD,UAAIuF,OAAO,CAACzB,QAAZ,EAAsB;AAClBlF,QAAAA,iBAAiB,CAAC2G,OAAO,CAACzB,QAAT,CAAjB,CAAoCnD,QAApC,CAA6CV,qCAA7C,EAAoFY,QAApF,CAA6FC,UAA7F;AACH;;AACD,UAAIqE,QAAQ,GAAG1G,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBT,uCAApB,EAA6DW,QAA7D,CAAsEC,UAAtE,CAAf;AACA,UAAI6D,WAAW,GAAGlG,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBR,sCAApB,EAA4DkB,IAA5D,CAAiEkE,OAAO,CAACjD,UAAzE,EAAqFzB,QAArF,CAA8FsE,QAA9F,CAAlB;AACA,UAAId,WAAW,GAAG,IAAlB;;AACA,UAAI,CAACkB,OAAO,CAAC3B,eAAb,EAA8B;AAC1B,YAAI4B,YAAY,GAAG/G,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBP,4CAApB,EAAkES,QAAlE,CAA2EsE,QAA3E,CAAnB;AACAd,QAAAA,WAAW,GAAG,KAAKrD,gBAAL,CAAsBwE,YAAtB,EAAoCzG,WAApC,EAAiD;AAC3D0G,UAAAA,GAAG,EAAE,CADsD;AAE3DC,UAAAA,GAAG,EAAE,GAFsD;AAG3DC,UAAAA,KAAK,EAAE,MAHoD;AAI3DC,UAAAA,qBAAqB,EAAE,QAJoC;AAK3DC,UAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,KAAR;AAAA,mBAAkB,MAAI,CAACC,gBAAL,CAAsBF,KAAtB,EAA6BC,KAA7B,CAAlB;AAAA;AAL6C,SAAjD,CAAd;AAOH;;AACD,UAAIE,WAAW,GAAG,IAAlB;;AACA,UAAIV,OAAO,CAACtC,eAAZ,EAA6B;AACzB,YAAIiD,OAAO,GAAGzH,CAAC,CAAC,OAAD,CAAD,CAAWkC,QAAX,CAAoBN,4CAApB,EAAkEQ,QAAlE,CAA2EC,UAA3E,CAAd;AACAmF,QAAAA,WAAW,GAAG,KAAKjF,gBAAL,CAAsBkF,OAAtB,EAA+BlH,MAA/B,EAAuC;AACjDwC,UAAAA,IAAI,EAAE,0CAD2C;AAEjDC,UAAAA,WAAW,EAAE,MAFoC;AAGjD0E,UAAAA,OAAO,EAAEZ,OAAO,CAAChD,qBAHgC;AAIjDb,UAAAA,OAAO,EAAE6D,OAAO,CAACrC;AAJgC,SAAvC,CAAd;AAMH;;AACD,aAAO;AACHyB,QAAAA,WAAW,EAAEA,WADV;AAEHN,QAAAA,WAAW,EAAEA,WAFV;AAGH3D,QAAAA,QAAQ,EAAEI,UAHP;AAIHqE,QAAAA,QAAQ,EAAEA,QAJP;AAKHc,QAAAA,WAAW,EAAEA;AALV,OAAP;AAOH;;;WACD,gCAAuBb,WAAvB,EAAoCe,OAApC,EAA6C;AACzC,UAAIf,WAAW,CAACa,WAAhB,EAA6B;AACzBb,QAAAA,WAAW,CAAC1E,QAAZ,CAAqB0F,WAArB,CAAiCpG,oDAAjC,EAAuF,CAACmG,OAAxF;AACAf,QAAAA,WAAW,CAACa,WAAZ,CAAwB3B,MAAxB,CAA+B,SAA/B,EAA0C6B,OAA1C;AACH;AACJ;;;WACD,6BAAoBf,WAApB,EAAiC/D,IAAjC,EAAuC;AACnC+D,MAAAA,WAAW,CAACf,WAAZ,CAAwBC,MAAxB,CAA+B,cAA/B,EAA+C;AAAA,eAAMjD,IAAN;AAAA,OAA/C;AACH;;;WACD,yBAAgBsB,IAAhB,EAAsB;AAAA;;AAClB,UAAIA,IAAI,CAACC,mBAAL,IAA4B,CAACD,IAAI,CAAC+B,SAAtC,EAAiD;AAC7C,aAAK2B,uBAAL,CAA6B1D,IAA7B;;AACA,aAAKwB,sBAAL,CAA4BxB,IAAI,CAACI,MAAjC,EAAyC,KAAzC;;AACAJ,QAAAA,IAAI,CAACS,OAAL,CAAakD,OAAb,CAAqB,UAAA5C,IAAI;AAAA,iBAAI,MAAI,CAAC6C,2BAAL,CAAiC7C,IAAjC,CAAJ;AAAA,SAAzB;AACH,OAJD,MAIO;AACH,aAAK8C,qBAAL,CAA2B7D,IAA3B;;AACAA,QAAAA,IAAI,CAACE,KAAL,CAAW4D,IAAX,CAAgB,IAAIrH,MAAJ,CAAWK,2CAAX,CAAhB,EAAyE6F,MAAzE;AACA3C,QAAAA,IAAI,CAACE,KAAL,CAAWyC,MAAX;AACA,aAAK7E,eAAL;;AACA,YAAI,CAAC,KAAKA,eAAV,EAA2B;AACvB,eAAKoB,oBAAL;AACH;AACJ;AACJ;;;WACD,8BAAqB6B,IAArB,EAA2BC,SAA3B,EAAsC;AAClC,WAAK+C,2BAAL,CAAiChD,IAAjC,EAAuCC,SAAvC;;AACA,UAAIJ,QAAQ,GAAGG,IAAI,CAACf,IAAL,CAAUS,OAAV,CAAkBO,SAAlB,CAAf;;AACA,WAAK4C,2BAAL,CAAiChD,QAAjC;AACH;;;WACD,qCAA4BA,QAA5B,EAAsC;AAClC,WAAKsB,mBAAL,CAAyBtB,QAAzB,EAAmC1E,mBAAmB,CAACyC,MAApB,CAA2B,0DAA3B,CAAnC;;AACA,WAAK6C,sBAAL,CAA4BZ,QAA5B,EAAsC,KAAtC;AACH;;;WACD,0BAAiBuC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC3B,aAAO,MAAMD,KAAN,GAAcjH,mBAAmB,CAACyC,MAApB,CAA2B,MAA3B,CAAd,GAAmDqF,IAAI,CAACC,KAAL,CAAW,MAAMd,KAAjB,IAA0B,GAApF;AACH;;;WACD,+BAAsBnD,IAAtB,EAA4B;AACxB,WAAKT,QAAL,CAAcJ,iBAAd,CAAgC;AAC5Ba,QAAAA,IAAI,EAAEA;AADsB,OAAhC;AAGH;;;WACD,iCAAwBA,IAAxB,EAA8B;AAC1B,WAAKT,QAAL,CAAcH,mBAAd,CAAkC;AAC9BY,QAAAA,IAAI,EAAEA;AADwB,OAAlC;AAGH;;;WACD,qCAA4Be,IAA5B,EAAkCC,SAAlC,EAA6C;AACzC,WAAKzB,QAAL,CAAcF,uBAAd,CAAsC;AAClC0B,QAAAA,IAAI,EAAEA,IAD4B;AAElCC,QAAAA,SAAS,EAAEA;AAFuB,OAAtC;AAIH;;;WACD,6BAAoB;AAChB,WAAKzB,QAAL,CAAcD,aAAd;AACH;;;;EAzPkCnD,M;;AA2PvC,eAAeyB,wBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification.progress_panel.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ProgressBar from \"../progress_bar\";\r\nimport Button from \"../button\";\r\nimport ScrollView from \"../scroll_view\";\r\nvar FILE_MANAGER_PROGRESS_PANEL_CLASS = \"dx-filemanager-progress-panel\";\r\nvar FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-container\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title-text\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-close-button\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-infos-container\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-separator\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-common\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info-with-details\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-details\");\r\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\r\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\r\nvar FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-without-close-button\");\r\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\r\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\r\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\r\nvar FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-progress-bar\");\r\nvar FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-close-button\");\r\nvar DX_CARD_CLASS = \"dx-card\";\r\nclass FileManagerProgressPanel extends Widget {\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._initActions();\r\n        this._operationCount = 0;\r\n        this.$element().addClass(FILE_MANAGER_PROGRESS_PANEL_CLASS);\r\n        var $scrollView = $(\"<div>\").appendTo(this.$element());\r\n        var $container = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS).appendTo($scrollView);\r\n        this._scrollView = this._createComponent($scrollView, ScrollView, {\r\n            scrollByContent: true,\r\n            scrollByThumb: true,\r\n            showScrollbar: \"onScroll\"\r\n        });\r\n        var $title = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS).appendTo($container);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxFileManager-notificationProgressPanelTitle\")).addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS).appendTo($title);\r\n        var $closeButton = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS).appendTo($title);\r\n        this._createComponent($closeButton, Button, {\r\n            icon: \"close\",\r\n            stylingMode: \"text\",\r\n            onClick: () => this._raisePanelClosed()\r\n        });\r\n        this._$infosContainer = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS).appendTo($container);\r\n        this._renderEmptyListText()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            onOperationClosed: null,\r\n            onOperationCanceled: null,\r\n            onOperationItemCanceled: null,\r\n            onPanelClosed: null\r\n        })\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onOperationClosed: this._createActionByOption(\"onOperationClosed\"),\r\n            onOperationCanceled: this._createActionByOption(\"onOperationCanceled\"),\r\n            onOperationItemCanceled: this._createActionByOption(\"onOperationItemCanceled\"),\r\n            onPanelClosed: this._createActionByOption(\"onPanelClosed\")\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"test\":\r\n                break;\r\n            case \"onOperationClosed\":\r\n            case \"onOperationCanceled\":\r\n            case \"onOperationItemCanceled\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    addOperation(commonText, showCloseButtonAlways, allowProgressAutoUpdate) {\r\n        if (this._operationCount) {\r\n            $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS).prependTo(this._$infosContainer)\r\n        } else {\r\n            this._$infosContainer.empty()\r\n        }\r\n        this._operationCount++;\r\n        var info = {\r\n            customCloseHandling: showCloseButtonAlways,\r\n            allowProgressAutoUpdate: ensureDefined(allowProgressAutoUpdate, true)\r\n        };\r\n        var $info = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS).prependTo(this._$infosContainer);\r\n        info.$info = $info;\r\n        var $common = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS).appendTo($info);\r\n        info.common = this._createProgressBox($common, {\r\n            commonText: commonText,\r\n            showCloseButton: true,\r\n            showCloseButtonAlways: showCloseButtonAlways,\r\n            onCloseButtonClick: () => this._closeOperation(info)\r\n        });\r\n        return info\r\n    }\r\n    addOperationDetails(info, details, showCloseButton) {\r\n        info.$info.addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS);\r\n        var $details = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS).appendTo(info.$info);\r\n        info.details = details.map((itemInfo, index) => {\r\n            itemInfo.info = info;\r\n            return this._createDetailsItem($details, itemInfo, index, false, showCloseButton)\r\n        })\r\n    }\r\n    _createDetailsItem($container, item, itemIndex, skipProgressBox, showCloseButton) {\r\n        var $detailsItem = $(\"<div>\").appendTo($container);\r\n        if (-1 !== itemIndex) {\r\n            $detailsItem.addClass(DX_CARD_CLASS)\r\n        }\r\n        return this._createProgressBox($detailsItem, {\r\n            commonText: item.commonText,\r\n            imageUrl: item.imageUrl,\r\n            skipProgressBox: skipProgressBox,\r\n            showCloseButton: showCloseButton,\r\n            showCloseButtonAlways: showCloseButton,\r\n            onCloseButtonClick: () => this._cancelOperationItem(item, itemIndex)\r\n        })\r\n    }\r\n    completeOperationItem(operationInfo, itemIndex, commonProgress) {\r\n        if (operationInfo.allowProgressAutoUpdate) {\r\n            this.updateOperationItemProgress(operationInfo, itemIndex, 100, commonProgress)\r\n        }\r\n        this._setCloseButtonVisible(operationInfo.details[itemIndex], false)\r\n    }\r\n    updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\r\n        operationInfo.common.progressBar.option(\"value\", commonProgress);\r\n        if (operationInfo.details) {\r\n            var detailsItem = operationInfo.details[itemIndex];\r\n            detailsItem.progressBar.option(\"value\", itemProgress)\r\n        }\r\n    }\r\n    completeOperation(info, commonText, isError, statusText) {\r\n        info.completed = true;\r\n        info.common.$commonText.text(commonText);\r\n        if (isError) {\r\n            this._removeProgressBar(info.common)\r\n        } else if (info.allowProgressAutoUpdate) {\r\n            info.common.progressBar.option(\"value\", 100)\r\n        }\r\n        if (statusText) {\r\n            this._setProgressBarText(info.common, statusText)\r\n        }\r\n        this._setCloseButtonVisible(info.common, true)\r\n    }\r\n    completeSingleOperationWithError(info, errorText) {\r\n        var _info$details;\r\n        var detailsItem = null === (_info$details = info.details) || void 0 === _info$details ? void 0 : _info$details[0];\r\n        info.completed = true;\r\n        this._renderOperationError(detailsItem || info.common, errorText);\r\n        this._setCloseButtonVisible(info.common, true);\r\n        if (detailsItem) {\r\n            this._setCloseButtonVisible(detailsItem, false)\r\n        }\r\n    }\r\n    addOperationDetailsError(info, index, errorText) {\r\n        var detailsItem = info.details[index];\r\n        this._renderOperationError(detailsItem, errorText);\r\n        this._setCloseButtonVisible(detailsItem, false)\r\n    }\r\n    _renderError($container, $target, errorText) {\r\n        $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container)\r\n    }\r\n    _renderEmptyListText() {\r\n        this._$infosContainer.text(messageLocalization.format(\"dxFileManager-notificationProgressPanelEmptyListText\"))\r\n    }\r\n    _renderOperationError(info, errorText) {\r\n        this._removeProgressBar(info);\r\n        this._renderError(info.$wrapper, info.$commonText, errorText)\r\n    }\r\n    _removeProgressBar(progressBox) {\r\n        if (progressBox.progressBar) {\r\n            progressBox.progressBar.dispose();\r\n            progressBox.progressBar.$element().remove();\r\n            progressBox.progressBar = null\r\n        }\r\n    }\r\n    _createProgressBox($container, options) {\r\n        $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\r\n        if (!options.showCloseButtonAlways) {\r\n            $container.addClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS)\r\n        }\r\n        if (options.imageUrl) {\r\n            getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container)\r\n        }\r\n        var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\r\n        var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\r\n        var progressBar = null;\r\n        if (!options.skipProgressBox) {\r\n            var $progressBar = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS).appendTo($wrapper);\r\n            progressBar = this._createComponent($progressBar, ProgressBar, {\r\n                min: 0,\r\n                max: 100,\r\n                width: \"100%\",\r\n                validationMessageMode: \"always\",\r\n                statusFormat: (ratio, value) => this._getStatusString(ratio, value)\r\n            })\r\n        }\r\n        var closeButton = null;\r\n        if (options.showCloseButton) {\r\n            var $button = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS).appendTo($container);\r\n            closeButton = this._createComponent($button, Button, {\r\n                icon: \"dx-filemanager-i dx-filemanager-i-cancel\",\r\n                stylingMode: \"text\",\r\n                visible: options.showCloseButtonAlways,\r\n                onClick: options.onCloseButtonClick\r\n            })\r\n        }\r\n        return {\r\n            $commonText: $commonText,\r\n            progressBar: progressBar,\r\n            $element: $container,\r\n            $wrapper: $wrapper,\r\n            closeButton: closeButton\r\n        }\r\n    }\r\n    _setCloseButtonVisible(progressBox, visible) {\r\n        if (progressBox.closeButton) {\r\n            progressBox.$element.toggleClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS, !visible);\r\n            progressBox.closeButton.option(\"visible\", visible)\r\n        }\r\n    }\r\n    _setProgressBarText(progressBox, text) {\r\n        progressBox.progressBar.option(\"statusFormat\", () => text)\r\n    }\r\n    _closeOperation(info) {\r\n        if (info.customCloseHandling && !info.completed) {\r\n            this._raiseOperationCanceled(info);\r\n            this._setCloseButtonVisible(info.common, false);\r\n            info.details.forEach(item => this._displayClosedOperationItem(item))\r\n        } else {\r\n            this._raiseOperationClosed(info);\r\n            info.$info.next(\".\".concat(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS)).remove();\r\n            info.$info.remove();\r\n            this._operationCount--;\r\n            if (!this._operationCount) {\r\n                this._renderEmptyListText()\r\n            }\r\n        }\r\n    }\r\n    _cancelOperationItem(item, itemIndex) {\r\n        this._raiseOperationItemCanceled(item, itemIndex);\r\n        var itemInfo = item.info.details[itemIndex];\r\n        this._displayClosedOperationItem(itemInfo)\r\n    }\r\n    _displayClosedOperationItem(itemInfo) {\r\n        this._setProgressBarText(itemInfo, messageLocalization.format(\"dxFileManager-notificationProgressPanelOperationCanceled\"));\r\n        this._setCloseButtonVisible(itemInfo, false)\r\n    }\r\n    _getStatusString(ratio, value) {\r\n        return 1 === ratio ? messageLocalization.format(\"Done\") : Math.round(100 * ratio) + \"%\"\r\n    }\r\n    _raiseOperationClosed(info) {\r\n        this._actions.onOperationClosed({\r\n            info: info\r\n        })\r\n    }\r\n    _raiseOperationCanceled(info) {\r\n        this._actions.onOperationCanceled({\r\n            info: info\r\n        })\r\n    }\r\n    _raiseOperationItemCanceled(item, itemIndex) {\r\n        this._actions.onOperationItemCanceled({\r\n            item: item,\r\n            itemIndex: itemIndex\r\n        })\r\n    }\r\n    _raisePanelClosed() {\r\n        this._actions.onPanelClosed()\r\n    }\r\n}\r\nexport default FileManagerProgressPanel;\r\n"]},"metadata":{},"sourceType":"module"}