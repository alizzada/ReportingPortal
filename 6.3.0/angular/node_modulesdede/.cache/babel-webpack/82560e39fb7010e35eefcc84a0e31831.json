{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport TextEditorButton from \"./button\";\nimport Button from \"../../button\";\nimport { extend } from \"../../../core/utils/extend\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { start, end } from \"../../../events/hover\";\nimport { name as clickEventName } from \"../../../events/click\";\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\n\nvar CustomButton = /*#__PURE__*/function (_TextEditorButton) {\n  _inherits(CustomButton, _TextEditorButton);\n\n  var _super = _createSuper(CustomButton);\n\n  function CustomButton() {\n    _classCallCheck(this, CustomButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomButton, [{\n    key: \"_attachEvents\",\n    value: function _attachEvents(instance, $element) {\n      var editor = this.editor;\n      eventsEngine.on($element, start, function () {\n        editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS);\n      });\n      eventsEngine.on($element, end, function () {\n        editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS);\n      });\n      eventsEngine.on($element, clickEventName, function (e) {\n        e.stopPropagation();\n      });\n    }\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var editor = this.editor;\n      var $element = $(\"<div>\");\n\n      this._addToContainer($element);\n\n      var instance = editor._createComponent($element, Button, extend({}, this.options, {\n        ignoreParentReadOnly: true,\n        disabled: this._isDisabled(),\n        integrationOptions: this._prepareIntegrationOptions(editor)\n      }));\n\n      return {\n        $element: $element,\n        instance: instance\n      };\n    }\n  }, {\n    key: \"_prepareIntegrationOptions\",\n    value: function _prepareIntegrationOptions(editor) {\n      return extend({}, editor.option(\"integrationOptions\"), {\n        skipTemplates: [\"content\"]\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var isUpdated = _get(_getPrototypeOf(CustomButton.prototype), \"update\", this).call(this);\n\n      if (this.instance) {\n        this.instance.option(\"disabled\", this._isDisabled());\n      }\n\n      return isUpdated;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var editor = this.editor;\n      return editor.option(\"visible\");\n    }\n  }, {\n    key: \"_isDisabled\",\n    value: function _isDisabled() {\n      var isDefinedByUser = void 0 !== this.options.disabled;\n\n      if (isDefinedByUser) {\n        return this.instance ? this.instance.option(\"disabled\") : this.options.disabled;\n      } else {\n        return this.editor.option(\"readOnly\");\n      }\n    }\n  }]);\n\n  return CustomButton;\n}(TextEditorButton);\n\nexport { CustomButton as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/text_box/texteditor_button_collection/custom.js"],"names":["$","TextEditorButton","Button","extend","eventsEngine","start","end","name","clickEventName","CUSTOM_BUTTON_HOVERED_CLASS","CustomButton","instance","$element","editor","on","addClass","removeClass","e","stopPropagation","_addToContainer","_createComponent","options","ignoreParentReadOnly","disabled","_isDisabled","integrationOptions","_prepareIntegrationOptions","option","skipTemplates","isUpdated","isDefinedByUser"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,wBAAd;AACA,OAAOC,gBAAP,MAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACIC,MADJ,QAEO,4BAFP;AAGA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SACIC,KADJ,EAEIC,GAFJ,QAGO,uBAHP;AAIA,SACIC,IAAI,IAAIC,cADZ,QAEO,uBAFP;AAGA,IAAIC,2BAA2B,GAAG,0BAAlC;;IACqBC,Y;;;;;;;;;;;;;WACjB,uBAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AAC9B,UACYC,MADZ,GAEI,IAFJ,CACIA,MADJ;AAGAT,MAAAA,YAAY,CAACU,EAAb,CAAgBF,QAAhB,EAA0BP,KAA1B,EAAiC,YAAM;AACnCQ,QAAAA,MAAM,CAACD,QAAP,GAAkBG,QAAlB,CAA2BN,2BAA3B;AACH,OAFD;AAGAL,MAAAA,YAAY,CAACU,EAAb,CAAgBF,QAAhB,EAA0BN,GAA1B,EAA+B,YAAM;AACjCO,QAAAA,MAAM,CAACD,QAAP,GAAkBI,WAAlB,CAA8BP,2BAA9B;AACH,OAFD;AAGAL,MAAAA,YAAY,CAACU,EAAb,CAAgBF,QAAhB,EAA0BJ,cAA1B,EAA0C,UAAAS,CAAC,EAAI;AAC3CA,QAAAA,CAAC,CAACC,eAAF;AACH,OAFD;AAGH;;;WACD,mBAAU;AACN,UACYL,MADZ,GAEI,IAFJ,CACIA,MADJ;AAGA,UAAID,QAAQ,GAAGZ,CAAC,CAAC,OAAD,CAAhB;;AACA,WAAKmB,eAAL,CAAqBP,QAArB;;AACA,UAAID,QAAQ,GAAGE,MAAM,CAACO,gBAAP,CAAwBR,QAAxB,EAAkCV,MAAlC,EAA0CC,MAAM,CAAC,EAAD,EAAK,KAAKkB,OAAV,EAAmB;AAC9EC,QAAAA,oBAAoB,EAAE,IADwD;AAE9EC,QAAAA,QAAQ,EAAE,KAAKC,WAAL,EAFoE;AAG9EC,QAAAA,kBAAkB,EAAE,KAAKC,0BAAL,CAAgCb,MAAhC;AAH0D,OAAnB,CAAhD,CAAf;;AAKA,aAAO;AACHD,QAAAA,QAAQ,EAAEA,QADP;AAEHD,QAAAA,QAAQ,EAAEA;AAFP,OAAP;AAIH;;;WACD,oCAA2BE,MAA3B,EAAmC;AAC/B,aAAOV,MAAM,CAAC,EAAD,EAAKU,MAAM,CAACc,MAAP,CAAc,oBAAd,CAAL,EAA0C;AACnDC,QAAAA,aAAa,EAAE,CAAC,SAAD;AADoC,OAA1C,CAAb;AAGH;;;WACD,kBAAS;AACL,UAAIC,SAAS,2EAAb;;AACA,UAAI,KAAKlB,QAAT,EAAmB;AACf,aAAKA,QAAL,CAAcgB,MAAd,CAAqB,UAArB,EAAiC,KAAKH,WAAL,EAAjC;AACH;;AACD,aAAOK,SAAP;AACH;;;WACD,sBAAa;AACT,UACYhB,MADZ,GAEI,IAFJ,CACIA,MADJ;AAGA,aAAOA,MAAM,CAACc,MAAP,CAAc,SAAd,CAAP;AACH;;;WACD,uBAAc;AACV,UAAIG,eAAe,GAAG,KAAK,CAAL,KAAW,KAAKT,OAAL,CAAaE,QAA9C;;AACA,UAAIO,eAAJ,EAAqB;AACjB,eAAO,KAAKnB,QAAL,GAAgB,KAAKA,QAAL,CAAcgB,MAAd,CAAqB,UAArB,CAAhB,GAAmD,KAAKN,OAAL,CAAaE,QAAvE;AACH,OAFD,MAEO;AACH,eAAO,KAAKV,MAAL,CAAYc,MAAZ,CAAmB,UAAnB,CAAP;AACH;AACJ;;;;EAxDqC1B,gB;;SAArBS,Y","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport TextEditorButton from \"./button\";\r\nimport Button from \"../../button\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    start,\r\n    end\r\n} from \"../../../events/hover\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../events/click\";\r\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\r\nexport default class CustomButton extends TextEditorButton {\r\n    _attachEvents(instance, $element) {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        eventsEngine.on($element, start, () => {\r\n            editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        eventsEngine.on($element, end, () => {\r\n            editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        eventsEngine.on($element, clickEventName, e => {\r\n            e.stopPropagation()\r\n        })\r\n    }\r\n    _create() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var $element = $(\"<div>\");\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, Button, extend({}, this.options, {\r\n            ignoreParentReadOnly: true,\r\n            disabled: this._isDisabled(),\r\n            integrationOptions: this._prepareIntegrationOptions(editor)\r\n        }));\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    }\r\n    _prepareIntegrationOptions(editor) {\r\n        return extend({}, editor.option(\"integrationOptions\"), {\r\n            skipTemplates: [\"content\"]\r\n        })\r\n    }\r\n    update() {\r\n        var isUpdated = super.update();\r\n        if (this.instance) {\r\n            this.instance.option(\"disabled\", this._isDisabled())\r\n        }\r\n        return isUpdated\r\n    }\r\n    _isVisible() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return editor.option(\"visible\")\r\n    }\r\n    _isDisabled() {\r\n        var isDefinedByUser = void 0 !== this.options.disabled;\r\n        if (isDefinedByUser) {\r\n            return this.instance ? this.instance.option(\"disabled\") : this.options.disabled\r\n        } else {\r\n            return this.editor.option(\"readOnly\")\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}