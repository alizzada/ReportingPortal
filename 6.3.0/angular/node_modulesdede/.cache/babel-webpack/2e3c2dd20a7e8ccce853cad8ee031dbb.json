{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/dropImage.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { addNamespace } from \"../../../events/utils/index\";\nimport { each } from \"../../../core/utils/iterator\";\nimport browser from \"../../../core/utils/browser\";\nimport { getWindow } from \"../../../core/utils/window\";\nimport BaseModule from \"./base\";\nvar DropImageModule = BaseModule;\n\nif (Quill) {\n  DropImageModule = /*#__PURE__*/function (_BaseModule) {\n    _inherits(DropImageModule, _BaseModule);\n\n    var _super = _createSuper(DropImageModule);\n\n    function DropImageModule(quill, options) {\n      var _this;\n\n      _classCallCheck(this, DropImageModule);\n\n      _this = _super.call(this, quill, options);\n      var widgetName = _this.editorInstance.NAME;\n      eventsEngine.on(_this.quill.root, addNamespace(\"dragover\", widgetName), _this._dragOverHandler.bind(_assertThisInitialized(_this)));\n      eventsEngine.on(_this.quill.root, addNamespace(\"drop\", widgetName), _this._dropHandler.bind(_assertThisInitialized(_this)));\n      eventsEngine.on(_this.quill.root, addNamespace(\"paste\", widgetName), _this._pasteHandler.bind(_assertThisInitialized(_this)));\n      return _this;\n    }\n\n    _createClass(DropImageModule, [{\n      key: \"_dragOverHandler\",\n      value: function _dragOverHandler(e) {\n        if (browser.msie) {\n          e.preventDefault();\n        }\n      }\n    }, {\n      key: \"_dropHandler\",\n      value: function _dropHandler(e) {\n        var _dataTransfer$files;\n\n        var dataTransfer = e.originalEvent.dataTransfer;\n        var hasFiles = null === dataTransfer || void 0 === dataTransfer ? void 0 : null === (_dataTransfer$files = dataTransfer.files) || void 0 === _dataTransfer$files ? void 0 : _dataTransfer$files.length;\n        this.saveValueChangeEvent(e);\n        e.preventDefault();\n\n        if (hasFiles) {\n          this._getImage(dataTransfer.files, this._addImage.bind(this));\n        }\n      }\n    }, {\n      key: \"_pasteHandler\",\n      value: function _pasteHandler(e) {\n        var _this2 = this;\n\n        var _clipboardData$items;\n\n        var clipboardData = e.originalEvent.clipboardData;\n        this.saveValueChangeEvent(e);\n\n        if (!clipboardData) {\n          return;\n        }\n\n        var hasDataItems = null === (_clipboardData$items = clipboardData.items) || void 0 === _clipboardData$items ? void 0 : _clipboardData$items.length;\n        var isHtmlData = clipboardData.getData(\"text/html\");\n\n        if (!isHtmlData && hasDataItems) {\n          this._getImage(clipboardData.items, function (imageData) {\n            if (_this2._isBrowserSupportImagePaste(browser)) {\n              return;\n            }\n\n            if (browser.msie) {\n              setTimeout(function () {\n                _this2._addImage(imageData);\n              });\n            } else {\n              _this2._addImage(imageData);\n            }\n          });\n        }\n      }\n    }, {\n      key: \"_isBrowserSupportImagePaste\",\n      value: function _isBrowserSupportImagePaste(_ref) {\n        var mozilla = _ref.mozilla,\n            chrome = _ref.chrome,\n            version = _ref.version;\n        return mozilla || chrome && version > 82;\n      }\n    }, {\n      key: \"_isImage\",\n      value: function _isImage(file) {\n        return !!file.type.match(/^image\\/(a?png|bmp|gif|p?jpe?g|svg|vnd\\.microsoft\\.icon|webp)/i);\n      }\n    }, {\n      key: \"_getImage\",\n      value: function _getImage(files, callback) {\n        var _this3 = this;\n\n        var window = getWindow();\n        each(files, function (index, file) {\n          if (!_this3._isImage(file)) {\n            return;\n          }\n\n          var reader = new window.FileReader();\n\n          reader.onload = function (_ref2) {\n            var target = _ref2.target;\n            callback(target.result);\n          };\n\n          var readableFile = file.getAsFile ? file.getAsFile() : file;\n\n          if (readableFile instanceof window.Blob) {\n            reader.readAsDataURL(readableFile);\n          }\n        });\n      }\n    }, {\n      key: \"_addImage\",\n      value: function _addImage(data) {\n        var selection = this.quill.getSelection();\n        var pasteIndex = selection ? selection.index : this.quill.getLength();\n        this.quill.insertEmbed(pasteIndex, \"extendedImage\", data, \"user\");\n      }\n    }]);\n\n    return DropImageModule;\n  }(BaseModule);\n}\n\nexport default DropImageModule;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/html_editor/modules/dropImage.js"],"names":["Quill","eventsEngine","addNamespace","each","browser","getWindow","BaseModule","DropImageModule","quill","options","widgetName","editorInstance","NAME","on","root","_dragOverHandler","bind","_dropHandler","_pasteHandler","e","msie","preventDefault","_dataTransfer$files","dataTransfer","originalEvent","hasFiles","files","length","saveValueChangeEvent","_getImage","_addImage","_clipboardData$items","clipboardData","hasDataItems","items","isHtmlData","getData","imageData","_isBrowserSupportImagePaste","setTimeout","_ref","mozilla","chrome","version","file","type","match","callback","window","index","_isImage","reader","FileReader","onload","_ref2","target","result","readableFile","getAsFile","Blob","readAsDataURL","data","selection","getSelection","pasteIndex","getLength","insertEmbed"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/html_editor/modules/dropImage.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Quill from \"devextreme-quill\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../events/utils/index\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport browser from \"../../../core/utils/browser\";\r\nimport {\r\n    getWindow\r\n} from \"../../../core/utils/window\";\r\nimport BaseModule from \"./base\";\r\nvar DropImageModule = BaseModule;\r\nif (Quill) {\r\n    DropImageModule = class extends BaseModule {\r\n        constructor(quill, options) {\r\n            super(quill, options);\r\n            var widgetName = this.editorInstance.NAME;\r\n            eventsEngine.on(this.quill.root, addNamespace(\"dragover\", widgetName), this._dragOverHandler.bind(this));\r\n            eventsEngine.on(this.quill.root, addNamespace(\"drop\", widgetName), this._dropHandler.bind(this));\r\n            eventsEngine.on(this.quill.root, addNamespace(\"paste\", widgetName), this._pasteHandler.bind(this))\r\n        }\r\n        _dragOverHandler(e) {\r\n            if (browser.msie) {\r\n                e.preventDefault()\r\n            }\r\n        }\r\n        _dropHandler(e) {\r\n            var _dataTransfer$files;\r\n            var dataTransfer = e.originalEvent.dataTransfer;\r\n            var hasFiles = null === dataTransfer || void 0 === dataTransfer ? void 0 : null === (_dataTransfer$files = dataTransfer.files) || void 0 === _dataTransfer$files ? void 0 : _dataTransfer$files.length;\r\n            this.saveValueChangeEvent(e);\r\n            e.preventDefault();\r\n            if (hasFiles) {\r\n                this._getImage(dataTransfer.files, this._addImage.bind(this))\r\n            }\r\n        }\r\n        _pasteHandler(e) {\r\n            var _clipboardData$items;\r\n            var {\r\n                clipboardData: clipboardData\r\n            } = e.originalEvent;\r\n            this.saveValueChangeEvent(e);\r\n            if (!clipboardData) {\r\n                return\r\n            }\r\n            var hasDataItems = null === (_clipboardData$items = clipboardData.items) || void 0 === _clipboardData$items ? void 0 : _clipboardData$items.length;\r\n            var isHtmlData = clipboardData.getData(\"text/html\");\r\n            if (!isHtmlData && hasDataItems) {\r\n                this._getImage(clipboardData.items, imageData => {\r\n                    if (this._isBrowserSupportImagePaste(browser)) {\r\n                        return\r\n                    }\r\n                    if (browser.msie) {\r\n                        setTimeout(() => {\r\n                            this._addImage(imageData)\r\n                        })\r\n                    } else {\r\n                        this._addImage(imageData)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        _isBrowserSupportImagePaste(_ref) {\r\n            var {\r\n                mozilla: mozilla,\r\n                chrome: chrome,\r\n                version: version\r\n            } = _ref;\r\n            return mozilla || chrome && version > 82\r\n        }\r\n        _isImage(file) {\r\n            return !!file.type.match(/^image\\/(a?png|bmp|gif|p?jpe?g|svg|vnd\\.microsoft\\.icon|webp)/i)\r\n        }\r\n        _getImage(files, callback) {\r\n            var window = getWindow();\r\n            each(files, (index, file) => {\r\n                if (!this._isImage(file)) {\r\n                    return\r\n                }\r\n                var reader = new window.FileReader;\r\n                reader.onload = _ref2 => {\r\n                    var {\r\n                        target: target\r\n                    } = _ref2;\r\n                    callback(target.result)\r\n                };\r\n                var readableFile = file.getAsFile ? file.getAsFile() : file;\r\n                if (readableFile instanceof window.Blob) {\r\n                    reader.readAsDataURL(readableFile)\r\n                }\r\n            })\r\n        }\r\n        _addImage(data) {\r\n            var selection = this.quill.getSelection();\r\n            var pasteIndex = selection ? selection.index : this.quill.getLength();\r\n            this.quill.insertEmbed(pasteIndex, \"extendedImage\", data, \"user\")\r\n        }\r\n    }\r\n}\r\nexport default DropImageModule;\r\n"]},"metadata":{},"sourceType":"module"}