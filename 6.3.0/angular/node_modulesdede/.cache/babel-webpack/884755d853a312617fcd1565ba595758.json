{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport $ from \"../../../core/renderer\";\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\n\nvar CurrentTimeShader = /*#__PURE__*/function () {\n  function CurrentTimeShader(workSpace) {\n    _classCallCheck(this, CurrentTimeShader);\n\n    this._workSpace = workSpace;\n    this._$container = this._workSpace._dateTableScrollable.$content();\n  }\n\n  _createClass(CurrentTimeShader, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.initShaderElements();\n      this.renderShader();\n      this.applyShaderMargin(this._$shader);\n\n      this._shader.forEach(function (shader, index) {\n        _this._$container.append(shader);\n      });\n    }\n  }, {\n    key: \"initShaderElements\",\n    value: function initShaderElements() {\n      this._$shader = this.createShader();\n      this._shader = [];\n\n      this._shader.push(this._$shader);\n    }\n  }, {\n    key: \"renderShader\",\n    value: function renderShader() {}\n  }, {\n    key: \"applyShaderMargin\",\n    value: function applyShaderMargin($shader) {\n      if ($shader && this._workSpace.option(\"crossScrollingEnabled\")) {\n        $shader.css(\"marginTop\", -getBoundingRect(this._$container.get(0)).height);\n        $shader.css(\"height\", getBoundingRect(this._$container.get(0)).height);\n      }\n    }\n  }, {\n    key: \"createShader\",\n    value: function createShader() {\n      return $(\"<div>\").addClass(DATE_TIME_SHADER_CLASS);\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove();\n    }\n  }]);\n\n  return CurrentTimeShader;\n}();\n\nexport default CurrentTimeShader;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js"],"names":["getBoundingRect","$","DATE_TIME_SHADER_CLASS","CurrentTimeShader","workSpace","_workSpace","_$container","_dateTableScrollable","$content","initShaderElements","renderShader","applyShaderMargin","_$shader","_shader","forEach","shader","index","append","createShader","push","$shader","option","css","get","height","addClass","find","remove"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,eADJ,QAEO,8BAFP;AAGA,OAAOC,CAAP,MAAc,wBAAd;AACA,IAAIC,sBAAsB,GAAG,+BAA7B;;IACMC,iB;AACF,6BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKC,UAAL,GAAkBD,SAAlB;AACA,SAAKE,WAAL,GAAmB,KAAKD,UAAL,CAAgBE,oBAAhB,CAAqCC,QAArC,EAAnB;AACH;;;;WACD,kBAAS;AAAA;;AACL,WAAKC,kBAAL;AACA,WAAKC,YAAL;AACA,WAAKC,iBAAL,CAAuB,KAAKC,QAA5B;;AACA,WAAKC,OAAL,CAAaC,OAAb,CAAqB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACpC,QAAA,KAAI,CAACV,WAAL,CAAiBW,MAAjB,CAAwBF,MAAxB;AACH,OAFD;AAGH;;;WACD,8BAAqB;AACjB,WAAKH,QAAL,GAAgB,KAAKM,YAAL,EAAhB;AACA,WAAKL,OAAL,GAAe,EAAf;;AACA,WAAKA,OAAL,CAAaM,IAAb,CAAkB,KAAKP,QAAvB;AACH;;;WACD,wBAAe,CAAE;;;WACjB,2BAAkBQ,OAAlB,EAA2B;AACvB,UAAIA,OAAO,IAAI,KAAKf,UAAL,CAAgBgB,MAAhB,CAAuB,uBAAvB,CAAf,EAAgE;AAC5DD,QAAAA,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyB,CAACtB,eAAe,CAAC,KAAKM,WAAL,CAAiBiB,GAAjB,CAAqB,CAArB,CAAD,CAAf,CAAyCC,MAAnE;AACAJ,QAAAA,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBtB,eAAe,CAAC,KAAKM,WAAL,CAAiBiB,GAAjB,CAAqB,CAArB,CAAD,CAAf,CAAyCC,MAA/D;AACH;AACJ;;;WACD,wBAAe;AACX,aAAOvB,CAAC,CAAC,OAAD,CAAD,CAAWwB,QAAX,CAAoBvB,sBAApB,CAAP;AACH;;;WACD,iBAAQ;AACJ,WAAKI,WAAL,IAAoB,KAAKA,WAAL,CAAiBoB,IAAjB,CAAsB,MAAMxB,sBAA5B,EAAoDyB,MAApD,EAApB;AACH;;;;;;AAEL,eAAexB,iBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport $ from \"../../../core/renderer\";\r\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\r\nclass CurrentTimeShader {\r\n    constructor(workSpace) {\r\n        this._workSpace = workSpace;\r\n        this._$container = this._workSpace._dateTableScrollable.$content()\r\n    }\r\n    render() {\r\n        this.initShaderElements();\r\n        this.renderShader();\r\n        this.applyShaderMargin(this._$shader);\r\n        this._shader.forEach((shader, index) => {\r\n            this._$container.append(shader)\r\n        })\r\n    }\r\n    initShaderElements() {\r\n        this._$shader = this.createShader();\r\n        this._shader = [];\r\n        this._shader.push(this._$shader)\r\n    }\r\n    renderShader() {}\r\n    applyShaderMargin($shader) {\r\n        if ($shader && this._workSpace.option(\"crossScrollingEnabled\")) {\r\n            $shader.css(\"marginTop\", -getBoundingRect(this._$container.get(0)).height);\r\n            $shader.css(\"height\", getBoundingRect(this._$container.get(0)).height)\r\n        }\r\n    }\r\n    createShader() {\r\n        return $(\"<div>\").addClass(DATE_TIME_SHADER_CLASS)\r\n    }\r\n    clean() {\r\n        this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove()\r\n    }\r\n}\r\nexport default CurrentTimeShader;\r\n"]},"metadata":{},"sourceType":"module"}