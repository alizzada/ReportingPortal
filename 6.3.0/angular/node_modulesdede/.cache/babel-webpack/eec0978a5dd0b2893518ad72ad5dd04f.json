{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/speed_dial_action/speed_dial_item.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport Overlay from \"../overlay\";\nimport { render } from \"../widget/utils.ink_ripple\";\nimport { isMaterial } from \"../themes\";\nvar FAB_CLASS = \"dx-fa-button\";\nvar FAB_ICON_CLASS = \"dx-fa-button-icon\";\nvar FAB_LABEL_CLASS = \"dx-fa-button-label\";\nvar FAB_LABEL_WRAPPER_CLASS = \"dx-fa-button-label-wrapper\";\nvar FAB_CONTENT_REVERSE_CLASS = \"dx-fa-button-content-reverse\";\nvar OVERLAY_CONTENT_SELECTOR = \".dx-overlay-content\";\n\nvar SpeedDialItem = /*#__PURE__*/function (_Overlay) {\n  _inherits(SpeedDialItem, _Overlay);\n\n  var _super = _createSuper(SpeedDialItem);\n\n  function SpeedDialItem() {\n    _classCallCheck(this, SpeedDialItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SpeedDialItem, [{\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(SpeedDialItem.prototype), \"_getDefaultOptions\", this).call(this), {\n        shading: false,\n        useInkRipple: false,\n        callOverlayRenderShading: false,\n        width: \"auto\",\n        zIndex: 1500\n      });\n    }\n  }, {\n    key: \"_defaultOptionsRules\",\n    value: function _defaultOptionsRules() {\n      return _get(_getPrototypeOf(SpeedDialItem.prototype), \"_defaultOptionsRules\", this).call(this).concat([{\n        device: function device() {\n          return isMaterial();\n        },\n        options: {\n          useInkRipple: true\n        }\n      }]);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$element().addClass(FAB_CLASS);\n\n      this._renderIcon();\n\n      this._renderLabel();\n\n      _get(_getPrototypeOf(SpeedDialItem.prototype), \"_render\", this).call(this);\n\n      this.option(\"useInkRipple\") && this._renderInkRipple();\n\n      this._renderClick();\n    }\n  }, {\n    key: \"_renderLabel\",\n    value: function _renderLabel() {\n      !!this._$label && this._$label.remove();\n      var labelText = this.option(\"label\");\n\n      if (!labelText) {\n        this._$label = null;\n        return;\n      }\n\n      var $element = $(\"<div>\").addClass(FAB_LABEL_CLASS);\n      var $wrapper = $(\"<div>\").addClass(FAB_LABEL_WRAPPER_CLASS);\n      this._$label = $wrapper.prependTo(this.$content()).append($element.text(labelText));\n      this.$content().toggleClass(FAB_CONTENT_REVERSE_CLASS, this._isPositionLeft(this.option(\"parentPosition\")));\n    }\n  }, {\n    key: \"_isPositionLeft\",\n    value: function _isPositionLeft(position) {\n      var currentLocation = position ? position.at ? position.at.x ? position.at.x : position.at : \"string\" === typeof position ? position : \"\" : \"\";\n      return \"left\" === currentLocation.split(\" \")[0];\n    }\n  }, {\n    key: \"_renderButtonIcon\",\n    value: function _renderButtonIcon($element, icon, iconClass) {\n      !!$element && $element.remove();\n      $element = $(\"<div>\").addClass(iconClass);\n      var $iconElement = getImageContainer(icon);\n      $element.append($iconElement).appendTo(this.$content());\n      return $element;\n    }\n  }, {\n    key: \"_renderIcon\",\n    value: function _renderIcon() {\n      this._$icon = this._renderButtonIcon(this._$icon, this._options.silent(\"icon\"), FAB_ICON_CLASS);\n    }\n  }, {\n    key: \"_renderWrapper\",\n    value: function _renderWrapper() {\n      if (this._options.silent(\"callOverlayRenderShading\")) {\n        _get(_getPrototypeOf(SpeedDialItem.prototype), \"_renderWrapper\", this).call(this);\n      }\n    }\n  }, {\n    key: \"_getVisibleActions\",\n    value: function _getVisibleActions(actions) {\n      var currentActions = actions || this.option(\"actions\") || [];\n      return currentActions.filter(function (action) {\n        return action.option(\"visible\");\n      });\n    }\n  }, {\n    key: \"_getActionComponent\",\n    value: function _getActionComponent() {\n      if (1 === this._getVisibleActions().length) {\n        return this._getVisibleActions()[0];\n      } else {\n        return this.option(\"actionComponent\") || this.option(\"actions\")[0];\n      }\n    }\n  }, {\n    key: \"_initContentReadyAction\",\n    value: function _initContentReadyAction() {\n      this._contentReadyAction = this._getActionComponent()._createActionByOption(\"onContentReady\", {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      }, true);\n    }\n  }, {\n    key: \"_fireContentReadyAction\",\n    value: function _fireContentReadyAction() {\n      this._contentReadyAction({\n        actionElement: this.$element()\n      });\n    }\n  }, {\n    key: \"_updateZIndexStackPosition\",\n    value: function _updateZIndexStackPosition() {\n      var zIndex = this.option(\"zIndex\");\n\n      this._$wrapper.css(\"zIndex\", zIndex);\n\n      this._$content.css(\"zIndex\", zIndex);\n    }\n  }, {\n    key: \"_fixWrapperPosition\",\n    value: function _fixWrapperPosition() {\n      var $wrapper = this._$wrapper;\n\n      var $container = this._getContainer();\n\n      $wrapper.css(\"position\", this._isWindow($container) ? \"fixed\" : \"absolute\");\n    }\n  }, {\n    key: \"_setClickAction\",\n    value: function _setClickAction() {\n      var _this = this;\n\n      var eventName = addNamespace(clickEventName, this.NAME);\n      var overlayContent = this.$element().find(OVERLAY_CONTENT_SELECTOR);\n      eventsEngine.off(overlayContent, eventName);\n      eventsEngine.on(overlayContent, eventName, function (e) {\n        var clickActionArgs = {\n          event: e,\n          actionElement: _this.element(),\n          element: _this._getActionComponent().$element()\n        };\n\n        _this._clickAction(clickActionArgs);\n      });\n    }\n  }, {\n    key: \"_defaultActionArgs\",\n    value: function _defaultActionArgs() {\n      return {\n        component: this._getActionComponent()\n      };\n    }\n  }, {\n    key: \"_renderClick\",\n    value: function _renderClick() {\n      this._clickAction = this._getActionComponent()._createActionByOption(\"onClick\");\n\n      this._setClickAction();\n    }\n  }, {\n    key: \"_renderInkRipple\",\n    value: function _renderInkRipple() {\n      this._inkRipple = render();\n    }\n  }, {\n    key: \"_getInkRippleContainer\",\n    value: function _getInkRippleContainer() {\n      return this._$icon;\n    }\n  }, {\n    key: \"_toggleActiveState\",\n    value: function _toggleActiveState($element, value, e) {\n      _get(_getPrototypeOf(SpeedDialItem.prototype), \"_toggleActiveState\", this).apply(this, arguments);\n\n      if (!this._inkRipple) {\n        return;\n      }\n\n      var config = {\n        element: this._getInkRippleContainer(),\n        event: e\n      };\n\n      if (value) {\n        this._inkRipple.showWave(config);\n      } else {\n        this._inkRipple.hideWave(config);\n      }\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"icon\":\n          this._renderIcon();\n\n          break;\n\n        case \"onClick\":\n          this._renderClick();\n\n          break;\n\n        case \"label\":\n          this._renderLabel();\n\n          break;\n\n        case \"visible\":\n          this._currentVisible = args.previousValue;\n          args.value ? this._show() : this._hide();\n          break;\n\n        case \"useInkRipple\":\n          this._render();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(SpeedDialItem.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return SpeedDialItem;\n}(Overlay);\n\nexport default SpeedDialItem;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/speed_dial_action/speed_dial_item.js"],"names":["$","extend","eventsEngine","addNamespace","name","clickEventName","getImageContainer","Overlay","render","isMaterial","FAB_CLASS","FAB_ICON_CLASS","FAB_LABEL_CLASS","FAB_LABEL_WRAPPER_CLASS","FAB_CONTENT_REVERSE_CLASS","OVERLAY_CONTENT_SELECTOR","SpeedDialItem","shading","useInkRipple","callOverlayRenderShading","width","zIndex","concat","device","options","$element","addClass","_renderIcon","_renderLabel","option","_renderInkRipple","_renderClick","_$label","remove","labelText","$wrapper","prependTo","$content","append","text","toggleClass","_isPositionLeft","position","currentLocation","at","x","split","icon","iconClass","$iconElement","appendTo","_$icon","_renderButtonIcon","_options","silent","actions","currentActions","filter","action","_getVisibleActions","length","_contentReadyAction","_getActionComponent","_createActionByOption","excludeValidators","actionElement","_$wrapper","css","_$content","$container","_getContainer","_isWindow","eventName","NAME","overlayContent","find","off","on","e","clickActionArgs","event","element","_clickAction","component","_setClickAction","_inkRipple","value","apply","arguments","config","_getInkRippleContainer","showWave","hideWave","args","_currentVisible","previousValue","_show","_hide","_render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/speed_dial_action/speed_dial_item.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport Overlay from \"../overlay\";\r\nimport {\r\n    render\r\n} from \"../widget/utils.ink_ripple\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar FAB_CLASS = \"dx-fa-button\";\r\nvar FAB_ICON_CLASS = \"dx-fa-button-icon\";\r\nvar FAB_LABEL_CLASS = \"dx-fa-button-label\";\r\nvar FAB_LABEL_WRAPPER_CLASS = \"dx-fa-button-label-wrapper\";\r\nvar FAB_CONTENT_REVERSE_CLASS = \"dx-fa-button-content-reverse\";\r\nvar OVERLAY_CONTENT_SELECTOR = \".dx-overlay-content\";\r\nclass SpeedDialItem extends Overlay {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            shading: false,\r\n            useInkRipple: false,\r\n            callOverlayRenderShading: false,\r\n            width: \"auto\",\r\n            zIndex: 1500\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => isMaterial(),\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    }\r\n    _render() {\r\n        this.$element().addClass(FAB_CLASS);\r\n        this._renderIcon();\r\n        this._renderLabel();\r\n        super._render();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this._renderClick()\r\n    }\r\n    _renderLabel() {\r\n        !!this._$label && this._$label.remove();\r\n        var labelText = this.option(\"label\");\r\n        if (!labelText) {\r\n            this._$label = null;\r\n            return\r\n        }\r\n        var $element = $(\"<div>\").addClass(FAB_LABEL_CLASS);\r\n        var $wrapper = $(\"<div>\").addClass(FAB_LABEL_WRAPPER_CLASS);\r\n        this._$label = $wrapper.prependTo(this.$content()).append($element.text(labelText));\r\n        this.$content().toggleClass(FAB_CONTENT_REVERSE_CLASS, this._isPositionLeft(this.option(\"parentPosition\")))\r\n    }\r\n    _isPositionLeft(position) {\r\n        var currentLocation = position ? position.at ? position.at.x ? position.at.x : position.at : \"string\" === typeof position ? position : \"\" : \"\";\r\n        return \"left\" === currentLocation.split(\" \")[0]\r\n    }\r\n    _renderButtonIcon($element, icon, iconClass) {\r\n        !!$element && $element.remove();\r\n        $element = $(\"<div>\").addClass(iconClass);\r\n        var $iconElement = getImageContainer(icon);\r\n        $element.append($iconElement).appendTo(this.$content());\r\n        return $element\r\n    }\r\n    _renderIcon() {\r\n        this._$icon = this._renderButtonIcon(this._$icon, this._options.silent(\"icon\"), FAB_ICON_CLASS)\r\n    }\r\n    _renderWrapper() {\r\n        if (this._options.silent(\"callOverlayRenderShading\")) {\r\n            super._renderWrapper()\r\n        }\r\n    }\r\n    _getVisibleActions(actions) {\r\n        var currentActions = actions || this.option(\"actions\") || [];\r\n        return currentActions.filter(action => action.option(\"visible\"))\r\n    }\r\n    _getActionComponent() {\r\n        if (1 === this._getVisibleActions().length) {\r\n            return this._getVisibleActions()[0]\r\n        } else {\r\n            return this.option(\"actionComponent\") || this.option(\"actions\")[0]\r\n        }\r\n    }\r\n    _initContentReadyAction() {\r\n        this._contentReadyAction = this._getActionComponent()._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        }, true)\r\n    }\r\n    _fireContentReadyAction() {\r\n        this._contentReadyAction({\r\n            actionElement: this.$element()\r\n        })\r\n    }\r\n    _updateZIndexStackPosition() {\r\n        var zIndex = this.option(\"zIndex\");\r\n        this._$wrapper.css(\"zIndex\", zIndex);\r\n        this._$content.css(\"zIndex\", zIndex)\r\n    }\r\n    _fixWrapperPosition() {\r\n        var $wrapper = this._$wrapper;\r\n        var $container = this._getContainer();\r\n        $wrapper.css(\"position\", this._isWindow($container) ? \"fixed\" : \"absolute\")\r\n    }\r\n    _setClickAction() {\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        var overlayContent = this.$element().find(OVERLAY_CONTENT_SELECTOR);\r\n        eventsEngine.off(overlayContent, eventName);\r\n        eventsEngine.on(overlayContent, eventName, e => {\r\n            var clickActionArgs = {\r\n                event: e,\r\n                actionElement: this.element(),\r\n                element: this._getActionComponent().$element()\r\n            };\r\n            this._clickAction(clickActionArgs)\r\n        })\r\n    }\r\n    _defaultActionArgs() {\r\n        return {\r\n            component: this._getActionComponent()\r\n        }\r\n    }\r\n    _renderClick() {\r\n        this._clickAction = this._getActionComponent()._createActionByOption(\"onClick\");\r\n        this._setClickAction()\r\n    }\r\n    _renderInkRipple() {\r\n        this._inkRipple = render()\r\n    }\r\n    _getInkRippleContainer() {\r\n        return this._$icon\r\n    }\r\n    _toggleActiveState($element, value, e) {\r\n        super._toggleActiveState.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: this._getInkRippleContainer(),\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"icon\":\r\n                this._renderIcon();\r\n                break;\r\n            case \"onClick\":\r\n                this._renderClick();\r\n                break;\r\n            case \"label\":\r\n                this._renderLabel();\r\n                break;\r\n            case \"visible\":\r\n                this._currentVisible = args.previousValue;\r\n                args.value ? this._show() : this._hide();\r\n                break;\r\n            case \"useInkRipple\":\r\n                this._render();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default SpeedDialItem;\r\n"]},"metadata":{},"sourceType":"module"}