{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.menu_helper.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nvar DIAGRAM_CONTEXT_MENU_CLASS = \"dx-diagram-contextmenu\";\nvar DiagramMenuHelper = {\n  getContextMenuItemTemplate: function getContextMenuItemTemplate(contextMenu, itemData, itemIndex, itemElement) {\n    var $itemElement = $(itemElement);\n    $itemElement.empty();\n    var itemKey = void 0 !== itemData.rootCommand ? itemData.rootCommand : -1;\n\n    if (itemData.icon && !itemData.checked) {\n      var $iconElement = getImageContainer(itemData.icon);\n      $itemElement.append($iconElement);\n    } else if (contextMenu._menuHasCheckedItems && true === contextMenu._menuHasCheckedItems[itemKey]) {\n      var $checkElement = getImageContainer(\"check\");\n      $checkElement.css(\"visibility\", !itemData.checked ? \"hidden\" : \"visible\");\n      $itemElement.append($checkElement);\n    }\n\n    $itemElement.append('<span class=\"dx-menu-item-text\">' + itemData.text + \"</span>\");\n\n    if (Array.isArray(itemData.items) && itemData.items.length > 0) {\n      $itemElement.append('<span class=\"dx-menu-item-popout-container\"><div class=\"dx-menu-item-popout\"></div></span>');\n    }\n  },\n  getContextMenuCssClass: function getContextMenuCssClass() {\n    return DIAGRAM_CONTEXT_MENU_CLASS;\n  },\n  onContextMenuItemClick: function onContextMenuItemClick(widget, itemData, actionHandler) {\n    if ((void 0 !== itemData.command || void 0 !== itemData.name) && (!Array.isArray(itemData.items) || !itemData.items.length)) {\n      var parameter = DiagramMenuHelper.getItemCommandParameter(widget, itemData);\n      actionHandler.call(this, itemData.command, itemData.name, parameter);\n    } else if (void 0 !== itemData.rootCommand && void 0 !== itemData.value) {\n      var _parameter = DiagramMenuHelper.getItemCommandParameter(widget, itemData, itemData.value);\n\n      actionHandler.call(this, itemData.rootCommand, void 0, _parameter);\n    }\n  },\n  getItemValue: function getItemValue(item) {\n    return \"object\" === typeof item.value ? JSON.stringify(item.value) : item.value;\n  },\n  getItemOptionText: function getItemOptionText(contextMenu, indexPath) {\n    if (contextMenu) {\n      indexPath = indexPath.slice();\n\n      var parentItemOptionText = this._getParentItemOptionText(indexPath);\n\n      if (contextMenu._originalItemsInfo && contextMenu._originalItemsInfo[parentItemOptionText]) {\n        indexPath[indexPath.length - 1] += contextMenu._originalItemsInfo[parentItemOptionText].indexPathCorrection;\n      }\n    }\n\n    return this._getItemOptionTextCore(indexPath);\n  },\n  _getParentItemOptionText: function _getParentItemOptionText(indexPath) {\n    var parentIndexPath = indexPath.slice(0, indexPath.length - 1);\n    return this._getItemOptionTextCore(parentIndexPath);\n  },\n  _getItemOptionTextCore: function _getItemOptionTextCore(indexPath) {\n    return indexPath.reduce(function (r, i) {\n      return r + \"items[\".concat(i, \"].\");\n    }, \"\");\n  },\n  getItemCommandParameter: function getItemCommandParameter(widget, item, value) {\n    if (item.getParameter) {\n      return item.getParameter(widget);\n    }\n\n    return value;\n  },\n  updateContextMenuItems: function updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items) {\n    var _this = this;\n\n    if (!contextMenu._originalItemsInfo) {\n      contextMenu._originalItemsInfo = {};\n    }\n\n    if (!contextMenu._originalItemsInfo[itemOptionText]) {\n      contextMenu._originalItemsInfo[itemOptionText] = {\n        items: contextMenu.option(itemOptionText + \"items\") || []\n      };\n    }\n\n    items = items.map(function (item) {\n      return {\n        value: _this.getItemValue(item),\n        text: item.text,\n        checked: item.checked,\n        widget: contextMenu,\n        rootCommand: rootCommandKey\n      };\n    });\n    var originalItems = contextMenu._originalItemsInfo[itemOptionText].items;\n    contextMenu.option(itemOptionText + \"items\", items.concat(originalItems));\n\n    if (contextMenu._originalItemsInfo[itemOptionText] && originalItems.length) {\n      contextMenu._originalItemsInfo[itemOptionText].indexPathCorrection = items.length;\n    }\n  },\n  updateContextMenuItemVisible: function updateContextMenuItemVisible(contextMenu, itemOptionText, visible) {\n    contextMenu.option(itemOptionText + \"visible\", visible);\n  },\n  updateContextMenuItemValue: function updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value) {\n    var items = contextMenu.option(itemOptionText + \"items\");\n\n    if (\"boolean\" === typeof value && (!items || !items.length)) {\n      this._setContextMenuHasCheckedItems(contextMenu, -1);\n\n      contextMenu.option(itemOptionText + \"checked\", value);\n    } else if (void 0 !== value) {\n      this._setContextMenuHasCheckedItems(contextMenu, rootCommandKey);\n\n      if (Array.isArray(items)) {\n        items.forEach(function (item, index) {\n          item.checked = item.value === value;\n        });\n      }\n    }\n  },\n  _setContextMenuHasCheckedItems: function _setContextMenuHasCheckedItems(contextMenu, key) {\n    if (!contextMenu._menuHasCheckedItems) {\n      contextMenu._menuHasCheckedItems = {};\n    }\n\n    contextMenu._menuHasCheckedItems[key] = true;\n  }\n};\nexport default DiagramMenuHelper;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/diagram/ui.diagram.menu_helper.js"],"names":["$","getImageContainer","DIAGRAM_CONTEXT_MENU_CLASS","DiagramMenuHelper","getContextMenuItemTemplate","contextMenu","itemData","itemIndex","itemElement","$itemElement","empty","itemKey","rootCommand","icon","checked","$iconElement","append","_menuHasCheckedItems","$checkElement","css","text","Array","isArray","items","length","getContextMenuCssClass","onContextMenuItemClick","widget","actionHandler","command","name","parameter","getItemCommandParameter","call","value","_parameter","getItemValue","item","JSON","stringify","getItemOptionText","indexPath","slice","parentItemOptionText","_getParentItemOptionText","_originalItemsInfo","indexPathCorrection","_getItemOptionTextCore","parentIndexPath","reduce","r","i","concat","getParameter","updateContextMenuItems","itemOptionText","rootCommandKey","option","map","originalItems","updateContextMenuItemVisible","visible","updateContextMenuItemValue","_setContextMenuHasCheckedItems","forEach","index","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,iBADJ,QAEO,uBAFP;AAGA,IAAIC,0BAA0B,GAAG,wBAAjC;AACA,IAAIC,iBAAiB,GAAG;AACpBC,EAAAA,0BADoB,sCACOC,WADP,EACoBC,QADpB,EAC8BC,SAD9B,EACyCC,WADzC,EACsD;AACtE,QAAIC,YAAY,GAAGT,CAAC,CAACQ,WAAD,CAApB;AACAC,IAAAA,YAAY,CAACC,KAAb;AACA,QAAIC,OAAO,GAAG,KAAK,CAAL,KAAWL,QAAQ,CAACM,WAApB,GAAkCN,QAAQ,CAACM,WAA3C,GAAyD,CAAC,CAAxE;;AACA,QAAIN,QAAQ,CAACO,IAAT,IAAiB,CAACP,QAAQ,CAACQ,OAA/B,EAAwC;AACpC,UAAIC,YAAY,GAAGd,iBAAiB,CAACK,QAAQ,CAACO,IAAV,CAApC;AACAJ,MAAAA,YAAY,CAACO,MAAb,CAAoBD,YAApB;AACH,KAHD,MAGO,IAAIV,WAAW,CAACY,oBAAZ,IAAoC,SAASZ,WAAW,CAACY,oBAAZ,CAAiCN,OAAjC,CAAjD,EAA4F;AAC/F,UAAIO,aAAa,GAAGjB,iBAAiB,CAAC,OAAD,CAArC;AACAiB,MAAAA,aAAa,CAACC,GAAd,CAAkB,YAAlB,EAAgC,CAACb,QAAQ,CAACQ,OAAV,GAAoB,QAApB,GAA+B,SAA/D;AACAL,MAAAA,YAAY,CAACO,MAAb,CAAoBE,aAApB;AACH;;AACDT,IAAAA,YAAY,CAACO,MAAb,CAAoB,qCAAqCV,QAAQ,CAACc,IAA9C,GAAqD,SAAzE;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAchB,QAAQ,CAACiB,KAAvB,KAAiCjB,QAAQ,CAACiB,KAAT,CAAeC,MAAf,GAAwB,CAA7D,EAAgE;AAC5Df,MAAAA,YAAY,CAACO,MAAb,CAAoB,4FAApB;AACH;AACJ,GAjBmB;AAkBpBS,EAAAA,sBAAsB,EAAE;AAAA,WAAMvB,0BAAN;AAAA,GAlBJ;AAmBpBwB,EAAAA,sBAnBoB,kCAmBGC,MAnBH,EAmBWrB,QAnBX,EAmBqBsB,aAnBrB,EAmBoC;AACpD,QAAI,CAAC,KAAK,CAAL,KAAWtB,QAAQ,CAACuB,OAApB,IAA+B,KAAK,CAAL,KAAWvB,QAAQ,CAACwB,IAApD,MAA8D,CAACT,KAAK,CAACC,OAAN,CAAchB,QAAQ,CAACiB,KAAvB,CAAD,IAAkC,CAACjB,QAAQ,CAACiB,KAAT,CAAeC,MAAhH,CAAJ,EAA6H;AACzH,UAAIO,SAAS,GAAG5B,iBAAiB,CAAC6B,uBAAlB,CAA0CL,MAA1C,EAAkDrB,QAAlD,CAAhB;AACAsB,MAAAA,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAyB3B,QAAQ,CAACuB,OAAlC,EAA2CvB,QAAQ,CAACwB,IAApD,EAA0DC,SAA1D;AACH,KAHD,MAGO,IAAI,KAAK,CAAL,KAAWzB,QAAQ,CAACM,WAApB,IAAmC,KAAK,CAAL,KAAWN,QAAQ,CAAC4B,KAA3D,EAAkE;AACrE,UAAIC,UAAU,GAAGhC,iBAAiB,CAAC6B,uBAAlB,CAA0CL,MAA1C,EAAkDrB,QAAlD,EAA4DA,QAAQ,CAAC4B,KAArE,CAAjB;;AACAN,MAAAA,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAyB3B,QAAQ,CAACM,WAAlC,EAA+C,KAAK,CAApD,EAAuDuB,UAAvD;AACH;AACJ,GA3BmB;AA4BpBC,EAAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,WAAI,aAAa,OAAOA,IAAI,CAACH,KAAzB,GAAiCI,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACH,KAApB,CAAjC,GAA8DG,IAAI,CAACH,KAAvE;AAAA,GA5BE;AA6BpBM,EAAAA,iBA7BoB,6BA6BFnC,WA7BE,EA6BWoC,SA7BX,EA6BsB;AACtC,QAAIpC,WAAJ,EAAiB;AACboC,MAAAA,SAAS,GAAGA,SAAS,CAACC,KAAV,EAAZ;;AACA,UAAIC,oBAAoB,GAAG,KAAKC,wBAAL,CAA8BH,SAA9B,CAA3B;;AACA,UAAIpC,WAAW,CAACwC,kBAAZ,IAAkCxC,WAAW,CAACwC,kBAAZ,CAA+BF,oBAA/B,CAAtC,EAA4F;AACxFF,QAAAA,SAAS,CAACA,SAAS,CAACjB,MAAV,GAAmB,CAApB,CAAT,IAAmCnB,WAAW,CAACwC,kBAAZ,CAA+BF,oBAA/B,EAAqDG,mBAAxF;AACH;AACJ;;AACD,WAAO,KAAKC,sBAAL,CAA4BN,SAA5B,CAAP;AACH,GAtCmB;AAuCpBG,EAAAA,wBAvCoB,oCAuCKH,SAvCL,EAuCgB;AAChC,QAAIO,eAAe,GAAGP,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBD,SAAS,CAACjB,MAAV,GAAmB,CAAtC,CAAtB;AACA,WAAO,KAAKuB,sBAAL,CAA4BC,eAA5B,CAAP;AACH,GA1CmB;AA2CpBD,EAAAA,sBAAsB,EAAE,gCAAAN,SAAS;AAAA,WAAIA,SAAS,CAACQ,MAAV,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,GAAG,SAASE,MAAT,CAAgBD,CAAhB,EAAmB,IAAnB,CAAd;AAAA,KAAjB,EAAyD,EAAzD,CAAJ;AAAA,GA3Cb;AA4CpBnB,EAAAA,uBA5CoB,mCA4CIL,MA5CJ,EA4CYU,IA5CZ,EA4CkBH,KA5ClB,EA4CyB;AACzC,QAAIG,IAAI,CAACgB,YAAT,EAAuB;AACnB,aAAOhB,IAAI,CAACgB,YAAL,CAAkB1B,MAAlB,CAAP;AACH;;AACD,WAAOO,KAAP;AACH,GAjDmB;AAkDpBoB,EAAAA,sBAlDoB,kCAkDGjD,WAlDH,EAkDgBkD,cAlDhB,EAkDgCC,cAlDhC,EAkDgDjC,KAlDhD,EAkDuD;AAAA;;AACvE,QAAI,CAAClB,WAAW,CAACwC,kBAAjB,EAAqC;AACjCxC,MAAAA,WAAW,CAACwC,kBAAZ,GAAiC,EAAjC;AACH;;AACD,QAAI,CAACxC,WAAW,CAACwC,kBAAZ,CAA+BU,cAA/B,CAAL,EAAqD;AACjDlD,MAAAA,WAAW,CAACwC,kBAAZ,CAA+BU,cAA/B,IAAiD;AAC7ChC,QAAAA,KAAK,EAAElB,WAAW,CAACoD,MAAZ,CAAmBF,cAAc,GAAG,OAApC,KAAgD;AADV,OAAjD;AAGH;;AACDhC,IAAAA,KAAK,GAAGA,KAAK,CAACmC,GAAN,CAAU,UAAArB,IAAI;AAAA,aAAK;AACvBH,QAAAA,KAAK,EAAE,KAAI,CAACE,YAAL,CAAkBC,IAAlB,CADgB;AAEvBjB,QAAAA,IAAI,EAAEiB,IAAI,CAACjB,IAFY;AAGvBN,QAAAA,OAAO,EAAEuB,IAAI,CAACvB,OAHS;AAIvBa,QAAAA,MAAM,EAAEtB,WAJe;AAKvBO,QAAAA,WAAW,EAAE4C;AALU,OAAL;AAAA,KAAd,CAAR;AAOA,QAAIG,aAAa,GAAGtD,WAAW,CAACwC,kBAAZ,CAA+BU,cAA/B,EAA+ChC,KAAnE;AACAlB,IAAAA,WAAW,CAACoD,MAAZ,CAAmBF,cAAc,GAAG,OAApC,EAA6ChC,KAAK,CAAC6B,MAAN,CAAaO,aAAb,CAA7C;;AACA,QAAItD,WAAW,CAACwC,kBAAZ,CAA+BU,cAA/B,KAAkDI,aAAa,CAACnC,MAApE,EAA4E;AACxEnB,MAAAA,WAAW,CAACwC,kBAAZ,CAA+BU,cAA/B,EAA+CT,mBAA/C,GAAqEvB,KAAK,CAACC,MAA3E;AACH;AACJ,GAvEmB;AAwEpBoC,EAAAA,4BAxEoB,wCAwESvD,WAxET,EAwEsBkD,cAxEtB,EAwEsCM,OAxEtC,EAwE+C;AAC/DxD,IAAAA,WAAW,CAACoD,MAAZ,CAAmBF,cAAc,GAAG,SAApC,EAA+CM,OAA/C;AACH,GA1EmB;AA2EpBC,EAAAA,0BA3EoB,sCA2EOzD,WA3EP,EA2EoBkD,cA3EpB,EA2EoCC,cA3EpC,EA2EoDtB,KA3EpD,EA2E2D;AAC3E,QAAIX,KAAK,GAAGlB,WAAW,CAACoD,MAAZ,CAAmBF,cAAc,GAAG,OAApC,CAAZ;;AACA,QAAI,cAAc,OAAOrB,KAArB,KAA+B,CAACX,KAAD,IAAU,CAACA,KAAK,CAACC,MAAhD,CAAJ,EAA6D;AACzD,WAAKuC,8BAAL,CAAoC1D,WAApC,EAAiD,CAAC,CAAlD;;AACAA,MAAAA,WAAW,CAACoD,MAAZ,CAAmBF,cAAc,GAAG,SAApC,EAA+CrB,KAA/C;AACH,KAHD,MAGO,IAAI,KAAK,CAAL,KAAWA,KAAf,EAAsB;AACzB,WAAK6B,8BAAL,CAAoC1D,WAApC,EAAiDmD,cAAjD;;AACA,UAAInC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAJ,EAA0B;AACtBA,QAAAA,KAAK,CAACyC,OAAN,CAAc,UAAC3B,IAAD,EAAO4B,KAAP,EAAiB;AAC3B5B,UAAAA,IAAI,CAACvB,OAAL,GAAeuB,IAAI,CAACH,KAAL,KAAeA,KAA9B;AACH,SAFD;AAGH;AACJ;AACJ,GAxFmB;AAyFpB6B,EAAAA,8BAzFoB,0CAyFW1D,WAzFX,EAyFwB6D,GAzFxB,EAyF6B;AAC7C,QAAI,CAAC7D,WAAW,CAACY,oBAAjB,EAAuC;AACnCZ,MAAAA,WAAW,CAACY,oBAAZ,GAAmC,EAAnC;AACH;;AACDZ,IAAAA,WAAW,CAACY,oBAAZ,CAAiCiD,GAAjC,IAAwC,IAAxC;AACH;AA9FmB,CAAxB;AAgGA,eAAe/D,iBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.menu_helper.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nvar DIAGRAM_CONTEXT_MENU_CLASS = \"dx-diagram-contextmenu\";\r\nvar DiagramMenuHelper = {\r\n    getContextMenuItemTemplate(contextMenu, itemData, itemIndex, itemElement) {\r\n        var $itemElement = $(itemElement);\r\n        $itemElement.empty();\r\n        var itemKey = void 0 !== itemData.rootCommand ? itemData.rootCommand : -1;\r\n        if (itemData.icon && !itemData.checked) {\r\n            var $iconElement = getImageContainer(itemData.icon);\r\n            $itemElement.append($iconElement)\r\n        } else if (contextMenu._menuHasCheckedItems && true === contextMenu._menuHasCheckedItems[itemKey]) {\r\n            var $checkElement = getImageContainer(\"check\");\r\n            $checkElement.css(\"visibility\", !itemData.checked ? \"hidden\" : \"visible\");\r\n            $itemElement.append($checkElement)\r\n        }\r\n        $itemElement.append('<span class=\"dx-menu-item-text\">' + itemData.text + \"</span>\");\r\n        if (Array.isArray(itemData.items) && itemData.items.length > 0) {\r\n            $itemElement.append('<span class=\"dx-menu-item-popout-container\"><div class=\"dx-menu-item-popout\"></div></span>')\r\n        }\r\n    },\r\n    getContextMenuCssClass: () => DIAGRAM_CONTEXT_MENU_CLASS,\r\n    onContextMenuItemClick(widget, itemData, actionHandler) {\r\n        if ((void 0 !== itemData.command || void 0 !== itemData.name) && (!Array.isArray(itemData.items) || !itemData.items.length)) {\r\n            var parameter = DiagramMenuHelper.getItemCommandParameter(widget, itemData);\r\n            actionHandler.call(this, itemData.command, itemData.name, parameter)\r\n        } else if (void 0 !== itemData.rootCommand && void 0 !== itemData.value) {\r\n            var _parameter = DiagramMenuHelper.getItemCommandParameter(widget, itemData, itemData.value);\r\n            actionHandler.call(this, itemData.rootCommand, void 0, _parameter)\r\n        }\r\n    },\r\n    getItemValue: item => \"object\" === typeof item.value ? JSON.stringify(item.value) : item.value,\r\n    getItemOptionText(contextMenu, indexPath) {\r\n        if (contextMenu) {\r\n            indexPath = indexPath.slice();\r\n            var parentItemOptionText = this._getParentItemOptionText(indexPath);\r\n            if (contextMenu._originalItemsInfo && contextMenu._originalItemsInfo[parentItemOptionText]) {\r\n                indexPath[indexPath.length - 1] += contextMenu._originalItemsInfo[parentItemOptionText].indexPathCorrection\r\n            }\r\n        }\r\n        return this._getItemOptionTextCore(indexPath)\r\n    },\r\n    _getParentItemOptionText(indexPath) {\r\n        var parentIndexPath = indexPath.slice(0, indexPath.length - 1);\r\n        return this._getItemOptionTextCore(parentIndexPath)\r\n    },\r\n    _getItemOptionTextCore: indexPath => indexPath.reduce((r, i) => r + \"items[\".concat(i, \"].\"), \"\"),\r\n    getItemCommandParameter(widget, item, value) {\r\n        if (item.getParameter) {\r\n            return item.getParameter(widget)\r\n        }\r\n        return value\r\n    },\r\n    updateContextMenuItems(contextMenu, itemOptionText, rootCommandKey, items) {\r\n        if (!contextMenu._originalItemsInfo) {\r\n            contextMenu._originalItemsInfo = {}\r\n        }\r\n        if (!contextMenu._originalItemsInfo[itemOptionText]) {\r\n            contextMenu._originalItemsInfo[itemOptionText] = {\r\n                items: contextMenu.option(itemOptionText + \"items\") || []\r\n            }\r\n        }\r\n        items = items.map(item => ({\r\n            value: this.getItemValue(item),\r\n            text: item.text,\r\n            checked: item.checked,\r\n            widget: contextMenu,\r\n            rootCommand: rootCommandKey\r\n        }));\r\n        var originalItems = contextMenu._originalItemsInfo[itemOptionText].items;\r\n        contextMenu.option(itemOptionText + \"items\", items.concat(originalItems));\r\n        if (contextMenu._originalItemsInfo[itemOptionText] && originalItems.length) {\r\n            contextMenu._originalItemsInfo[itemOptionText].indexPathCorrection = items.length\r\n        }\r\n    },\r\n    updateContextMenuItemVisible(contextMenu, itemOptionText, visible) {\r\n        contextMenu.option(itemOptionText + \"visible\", visible)\r\n    },\r\n    updateContextMenuItemValue(contextMenu, itemOptionText, rootCommandKey, value) {\r\n        var items = contextMenu.option(itemOptionText + \"items\");\r\n        if (\"boolean\" === typeof value && (!items || !items.length)) {\r\n            this._setContextMenuHasCheckedItems(contextMenu, -1);\r\n            contextMenu.option(itemOptionText + \"checked\", value)\r\n        } else if (void 0 !== value) {\r\n            this._setContextMenuHasCheckedItems(contextMenu, rootCommandKey);\r\n            if (Array.isArray(items)) {\r\n                items.forEach((item, index) => {\r\n                    item.checked = item.value === value\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _setContextMenuHasCheckedItems(contextMenu, key) {\r\n        if (!contextMenu._menuHasCheckedItems) {\r\n            contextMenu._menuHasCheckedItems = {}\r\n        }\r\n        contextMenu._menuHasCheckedItems[key] = true\r\n    }\r\n};\r\nexport default DiagramMenuHelper;\r\n"]},"metadata":{},"sourceType":"module"}