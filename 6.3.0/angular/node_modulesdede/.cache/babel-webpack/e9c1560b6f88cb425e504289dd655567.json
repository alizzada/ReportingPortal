{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.sortable.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport registerComponent from \"../../core/component_registrator\";\nimport DOMComponent from \"../../core/dom_component\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd, enter as dragEventEnter, leave as dragEventLeave, drop as dragEventDrop } from \"../../events/drag\";\nimport swatchContainer from \"../widget/swatch_container\";\nvar getSwatchContainer = swatchContainer.getSwatchContainer;\nvar SORTABLE_NAMESPACE = \"dxSortable\";\nvar SORTABLE_CLASS = \"dx-sortable-old\";\nvar SCROLL_STEP = 2;\nvar START_SCROLL_OFFSET = 20;\nvar SCROLL_TIMEOUT = 10;\n\nfunction elementHasPoint(element, x, y) {\n  var $item = $(element);\n  var offset = $item.offset();\n\n  if (x >= offset.left && x <= offset.left + $item.outerWidth(true)) {\n    if (y >= offset.top && y <= offset.top + $item.outerHeight(true)) {\n      return true;\n    }\n  }\n}\n\nfunction checkHorizontalPosition(position, itemOffset, rtl) {\n  if (isDefined(itemOffset.posHorizontal)) {\n    return rtl ? position > itemOffset.posHorizontal : position < itemOffset.posHorizontal;\n  } else {\n    return true;\n  }\n}\n\nfunction getIndex($items, $item) {\n  var index = -1;\n  var itemElement = $item.get(0);\n  each($items, function (elementIndex, element) {\n    var $element = $(element);\n\n    if (!($element.attr(\"item-group\") && $element.attr(\"item-group\") === $items.eq(elementIndex - 1).attr(\"item-group\"))) {\n      index++;\n    }\n\n    if (element === itemElement) {\n      return false;\n    }\n  });\n  return index === $items.length ? -1 : index;\n}\n\nfunction getTargetGroup(e, $groups) {\n  var result;\n  each($groups, function () {\n    if (elementHasPoint(this, e.pageX, e.pageY)) {\n      result = $(this);\n    }\n  });\n  return result;\n}\n\nfunction getItemsOffset($elements, isVertical, $itemsContainer) {\n  var result = [];\n  var $item = [];\n\n  for (var i = 0; i < $elements.length; i += $item.length) {\n    $item = $elements.eq(i);\n\n    if ($item.attr(\"item-group\")) {\n      $item = $itemsContainer.find(\"[item-group='\" + $item.attr(\"item-group\") + \"']\");\n    }\n\n    if ($item.is(\":visible\")) {\n      var offset = {\n        item: $item,\n        index: result.length,\n        posHorizontal: isVertical ? void 0 : ($item.last().outerWidth(true) + $item.last().offset().left + $item.offset().left) / 2\n      };\n\n      if (isVertical) {\n        offset.posVertical = ($item.last().offset().top + $item.offset().top + $item.last().outerHeight(true)) / 2;\n      } else {\n        offset.posVertical = $item.last().outerHeight(true) + $item.last().offset().top;\n      }\n\n      result.push(offset);\n    }\n  }\n\n  return result;\n}\n\nfunction getScrollWrapper(scrollable) {\n  var timeout = null;\n  var scrollTop = scrollable.scrollTop();\n  var $element = scrollable.$element();\n  var top = $element.offset().top;\n  var height = $element.height();\n  var delta = 0;\n\n  function onScroll(e) {\n    scrollTop = e.scrollOffset.top;\n  }\n\n  scrollable.on(\"scroll\", onScroll);\n\n  function move() {\n    stop();\n    scrollable.scrollTo(scrollTop += delta);\n    timeout = setTimeout(move, SCROLL_TIMEOUT);\n  }\n\n  function stop() {\n    clearTimeout(timeout);\n  }\n\n  return {\n    moveIfNeed: function moveIfNeed(event) {\n      if (event.pageY <= top + START_SCROLL_OFFSET) {\n        delta = -SCROLL_STEP;\n      } else if (event.pageY >= top + height - START_SCROLL_OFFSET) {\n        delta = SCROLL_STEP;\n      } else {\n        delta = 0;\n        stop();\n        return;\n      }\n\n      move();\n    },\n    element: function element() {\n      return $element;\n    },\n    dispose: function dispose() {\n      stop();\n      scrollable.off(\"scroll\", onScroll);\n    }\n  };\n}\n\nvar Sortable = DOMComponent.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      onChanged: null,\n      onDragging: null,\n      itemRender: null,\n      groupSelector: null,\n      itemSelector: \".dx-sort-item\",\n      itemContainerSelector: \".dx-sortable-old\",\n      sourceClass: \"dx-drag-source\",\n      dragClass: \"dx-drag\",\n      targetClass: \"dx-drag-target\",\n      direction: \"vertical\",\n      allowDragging: true,\n      groupFilter: null,\n      useIndicator: false\n    });\n  },\n  _renderItem: function _renderItem($sourceItem, target) {\n    var itemRender = this.option(\"itemRender\");\n    var $item;\n\n    if (itemRender) {\n      $item = itemRender($sourceItem, target);\n    } else {\n      $item = $sourceItem.clone();\n      $item.css({\n        width: $sourceItem.width(),\n        height: $sourceItem.height()\n      });\n    }\n\n    return $item;\n  },\n  _renderIndicator: function _renderIndicator($item, isVertical, $targetGroup, isLast) {\n    var height = $item.outerHeight(true);\n    var width = $item.outerWidth(true);\n    var top = $item.offset().top - $targetGroup.offset().top;\n    var left = $item.offset().left - $targetGroup.offset().left;\n\n    this._indicator.css({\n      position: \"absolute\",\n      top: isLast && isVertical ? top + height : top,\n      left: isLast && !isVertical ? left + width : left\n    }).toggleClass(\"dx-position-indicator-horizontal\", !isVertical).toggleClass(\"dx-position-indicator-vertical\", !!isVertical).toggleClass(\"dx-position-indicator-last\", !!isLast).height(\"\").width(\"\").appendTo($targetGroup);\n\n    isVertical ? this._indicator.width(width) : this._indicator.height(height);\n  },\n  _renderDraggable: function _renderDraggable($sourceItem) {\n    this._$draggable && this._$draggable.remove();\n    this._$draggable = this._renderItem($sourceItem, \"drag\").addClass(this.option(\"dragClass\")).appendTo(getSwatchContainer($sourceItem)).css({\n      zIndex: 1e6,\n      position: \"absolute\"\n    });\n  },\n  _detachEventHandlers: function _detachEventHandlers() {\n    var dragEventsString = [dragEventMove, dragEventStart, dragEventEnd, dragEventEnter, dragEventLeave, dragEventDrop].join(\" \");\n    eventsEngine.off(this._getEventListener(), addNamespace(dragEventsString, SORTABLE_NAMESPACE));\n  },\n  _getItemOffset: function _getItemOffset(isVertical, itemsOffset, e) {\n    for (var i = 0; i < itemsOffset.length; i++) {\n      var shouldInsert = void 0;\n      var sameLine = e.pageY < itemsOffset[i].posVertical;\n\n      if (isVertical) {\n        shouldInsert = sameLine;\n      } else if (sameLine) {\n        shouldInsert = checkHorizontalPosition(e.pageX, itemsOffset[i], this.option(\"rtlEnabled\"));\n\n        if (!shouldInsert && itemsOffset[i + 1] && itemsOffset[i + 1].posVertical > itemsOffset[i].posVertical) {\n          shouldInsert = true;\n        }\n      }\n\n      if (shouldInsert) {\n        return itemsOffset[i];\n      }\n    }\n  },\n  _getEventListener: function _getEventListener() {\n    var groupSelector = this.option(\"groupSelector\");\n    var element = this.$element();\n    return groupSelector ? element.find(groupSelector) : element;\n  },\n  _attachEventHandlers: function _attachEventHandlers() {\n    var that = this;\n    var itemSelector = that.option(\"itemSelector\");\n    var itemContainerSelector = that.option(\"itemContainerSelector\");\n    var groupSelector = that.option(\"groupSelector\");\n    var sourceClass = that.option(\"sourceClass\");\n    var targetClass = that.option(\"targetClass\");\n    var onDragging = that.option(\"onDragging\");\n    var groupFilter = that.option(\"groupFilter\");\n    var $sourceItem;\n    var sourceIndex;\n    var $targetItem;\n    var $targetGroup;\n    var startPositions;\n    var sourceGroup;\n    var element = that.$element();\n    var $groups;\n    var scrollWrapper = null;\n    var targetIndex = -1;\n\n    var disposeScrollWrapper = function disposeScrollWrapper() {\n      scrollWrapper && scrollWrapper.dispose();\n      scrollWrapper = null;\n    };\n\n    that._detachEventHandlers();\n\n    if (that.option(\"allowDragging\")) {\n      var $eventListener = that._getEventListener();\n\n      eventsEngine.on($eventListener, addNamespace(dragEventStart, SORTABLE_NAMESPACE), itemSelector, function (e) {\n        $sourceItem = $(e.currentTarget);\n        var $sourceGroup = $sourceItem.closest(groupSelector);\n        sourceGroup = $sourceGroup.attr(\"group\");\n        sourceIndex = getIndex((groupSelector ? $sourceGroup : element).find(itemSelector), $sourceItem);\n\n        if ($sourceItem.attr(\"item-group\")) {\n          $sourceItem = $sourceGroup.find(\"[item-group='\" + $sourceItem.attr(\"item-group\") + \"']\");\n        }\n\n        that._renderDraggable($sourceItem);\n\n        $targetItem = that._renderItem($sourceItem, \"target\").addClass(targetClass);\n        $sourceItem.addClass(sourceClass);\n        !function () {\n          startPositions = [];\n          each($sourceItem, function (_, item) {\n            startPositions.push($(item).offset());\n          });\n        }();\n\n        $groups = function () {\n          if (!groupSelector) {\n            return element;\n          } else {\n            return groupFilter ? $(groupSelector).filter(groupFilter) : element.find(groupSelector);\n          }\n        }();\n\n        that._indicator = $(\"<div>\").addClass(\"dx-position-indicator\");\n      });\n      eventsEngine.on($eventListener, addNamespace(dragEventMove, SORTABLE_NAMESPACE), function (e) {\n        var $item;\n        var $lastItem;\n        var $prevItem;\n\n        if (!$sourceItem) {\n          return;\n        }\n\n        targetIndex = -1;\n\n        that._indicator.detach();\n\n        each(that._$draggable, function (index, draggableElement) {\n          $(draggableElement).css({\n            top: startPositions[index].top + e.offset.y,\n            left: startPositions[index].left + e.offset.x\n          });\n        });\n        $targetGroup && $targetGroup.removeClass(targetClass);\n        $targetGroup = getTargetGroup(e, $groups);\n        $targetGroup && function () {\n          var draggingArgs = {\n            sourceGroup: sourceGroup,\n            sourceIndex: sourceIndex,\n            sourceElement: $sourceItem,\n            targetGroup: $targetGroup.attr(\"group\"),\n            targetIndex: $targetGroup.find(itemSelector).index($targetItem)\n          };\n          onDragging && onDragging(draggingArgs);\n\n          if (draggingArgs.cancel) {\n            $targetGroup = void 0;\n          }\n        }();\n\n        if ($targetGroup && scrollWrapper && $targetGroup.get(0) !== scrollWrapper.element().get(0)) {\n          disposeScrollWrapper();\n        }\n\n        scrollWrapper && scrollWrapper.moveIfNeed(e);\n\n        if (!$targetGroup) {\n          $targetItem.detach();\n          return;\n        }\n\n        if (!scrollWrapper && $targetGroup.attr(\"allow-scrolling\")) {\n          scrollWrapper = getScrollWrapper($targetGroup.dxScrollable(\"instance\"));\n        }\n\n        $targetGroup.addClass(targetClass);\n        var $itemContainer = $targetGroup.find(itemContainerSelector);\n        var $items = $itemContainer.find(itemSelector);\n        var targetSortable = $targetGroup.closest(\".\" + SORTABLE_CLASS).data(\"dxSortableOld\");\n        var useIndicator = targetSortable.option(\"useIndicator\");\n        var isVertical = \"vertical\" === (targetSortable || that).option(\"direction\");\n        var itemsOffset = getItemsOffset($items, isVertical, $itemContainer);\n\n        var itemOffset = that._getItemOffset(isVertical, itemsOffset, e);\n\n        if (itemOffset) {\n          $item = itemOffset.item;\n          $prevItem = itemsOffset[itemOffset.index - 1] && itemsOffset[itemOffset.index - 1].item;\n\n          if ($item.hasClass(sourceClass) || $prevItem && $prevItem.hasClass(sourceClass) && $prevItem.is(\":visible\")) {\n            $targetItem.detach();\n            return;\n          }\n\n          targetIndex = itemOffset.index;\n\n          if (!useIndicator) {\n            $targetItem.insertBefore($item);\n            return;\n          }\n\n          var isAnotherGroup = $targetGroup.attr(\"group\") !== sourceGroup;\n          var isSameIndex = targetIndex === sourceIndex;\n          var isNextIndex = targetIndex === sourceIndex + 1;\n\n          if (isAnotherGroup) {\n            that._renderIndicator($item, isVertical, $targetGroup, that.option(\"rtlEnabled\") && !isVertical);\n\n            return;\n          }\n\n          if (!isSameIndex && !isNextIndex) {\n            that._renderIndicator($item, isVertical, $targetGroup, that.option(\"rtlEnabled\") && !isVertical);\n          }\n        } else {\n          $lastItem = $items.last();\n\n          if ($lastItem.is(\":visible\") && $lastItem.hasClass(sourceClass)) {\n            return;\n          }\n\n          if ($itemContainer.length) {\n            targetIndex = itemsOffset.length ? itemsOffset[itemsOffset.length - 1].index + 1 : 0;\n          }\n\n          if (useIndicator) {\n            $items.length && that._renderIndicator($lastItem, isVertical, $targetGroup, !that.option(\"rtlEnabled\") || isVertical);\n          } else {\n            $targetItem.appendTo($itemContainer);\n          }\n        }\n      });\n      eventsEngine.on($eventListener, addNamespace(dragEventEnd, SORTABLE_NAMESPACE), function () {\n        disposeScrollWrapper();\n\n        if (!$sourceItem) {\n          return;\n        }\n\n        var onChanged = that.option(\"onChanged\");\n        var changedArgs = {\n          sourceIndex: sourceIndex,\n          sourceElement: $sourceItem,\n          sourceGroup: sourceGroup,\n          targetIndex: targetIndex,\n          removeSourceElement: true,\n          removeTargetElement: false,\n          removeSourceClass: true\n        };\n\n        if ($targetGroup) {\n          $targetGroup.removeClass(targetClass);\n          changedArgs.targetGroup = $targetGroup.attr(\"group\");\n\n          if (sourceGroup !== changedArgs.targetGroup || targetIndex > -1) {\n            onChanged && onChanged(changedArgs);\n            changedArgs.removeSourceElement && $sourceItem.remove();\n          }\n        }\n\n        that._indicator.detach();\n\n        changedArgs.removeSourceClass && $sourceItem.removeClass(sourceClass);\n        $sourceItem = null;\n\n        that._$draggable.remove();\n\n        that._$draggable = null;\n        changedArgs.removeTargetElement && $targetItem.remove();\n        $targetItem.removeClass(targetClass);\n        $targetItem = null;\n      });\n    }\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._attachEventHandlers();\n  },\n  _render: function _render() {\n    this.callBase();\n    this.$element().addClass(SORTABLE_CLASS);\n  },\n  _dispose: function _dispose() {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    that._$draggable && that._$draggable.detach();\n    that._indicator && that._indicator.detach();\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"onDragging\":\n      case \"onChanged\":\n      case \"itemRender\":\n      case \"groupSelector\":\n      case \"itemSelector\":\n      case \"itemContainerSelector\":\n      case \"sourceClass\":\n      case \"targetClass\":\n      case \"dragClass\":\n      case \"allowDragging\":\n      case \"groupFilter\":\n      case \"useIndicator\":\n        this._attachEventHandlers();\n\n        break;\n\n      case \"direction\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _useTemplates: function _useTemplates() {\n    return false;\n  }\n});\nregisterComponent(\"dxSortableOld\", Sortable);\nexport default Sortable;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.sortable.js"],"names":["$","eventsEngine","isDefined","extend","each","addNamespace","registerComponent","DOMComponent","start","dragEventStart","move","dragEventMove","end","dragEventEnd","enter","dragEventEnter","leave","dragEventLeave","drop","dragEventDrop","swatchContainer","getSwatchContainer","SORTABLE_NAMESPACE","SORTABLE_CLASS","SCROLL_STEP","START_SCROLL_OFFSET","SCROLL_TIMEOUT","elementHasPoint","element","x","y","$item","offset","left","outerWidth","top","outerHeight","checkHorizontalPosition","position","itemOffset","rtl","posHorizontal","getIndex","$items","index","itemElement","get","elementIndex","$element","attr","eq","length","getTargetGroup","e","$groups","result","pageX","pageY","getItemsOffset","$elements","isVertical","$itemsContainer","i","find","is","item","last","posVertical","push","getScrollWrapper","scrollable","timeout","scrollTop","height","delta","onScroll","scrollOffset","on","stop","scrollTo","setTimeout","clearTimeout","moveIfNeed","event","dispose","off","Sortable","inherit","_getDefaultOptions","callBase","onChanged","onDragging","itemRender","groupSelector","itemSelector","itemContainerSelector","sourceClass","dragClass","targetClass","direction","allowDragging","groupFilter","useIndicator","_renderItem","$sourceItem","target","option","clone","css","width","_renderIndicator","$targetGroup","isLast","_indicator","toggleClass","appendTo","_renderDraggable","_$draggable","remove","addClass","zIndex","_detachEventHandlers","dragEventsString","join","_getEventListener","_getItemOffset","itemsOffset","shouldInsert","sameLine","_attachEventHandlers","that","sourceIndex","$targetItem","startPositions","sourceGroup","scrollWrapper","targetIndex","disposeScrollWrapper","$eventListener","currentTarget","$sourceGroup","closest","_","filter","$lastItem","$prevItem","detach","draggableElement","removeClass","draggingArgs","sourceElement","targetGroup","cancel","dxScrollable","$itemContainer","targetSortable","data","hasClass","insertBefore","isAnotherGroup","isSameIndex","isNextIndex","changedArgs","removeSourceElement","removeTargetElement","removeSourceClass","_init","_render","_dispose","apply","arguments","_optionChanged","args","name","_useTemplates"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.sortable.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport DOMComponent from \"../../core/dom_component\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd,\r\n    enter as dragEventEnter,\r\n    leave as dragEventLeave,\r\n    drop as dragEventDrop\r\n} from \"../../events/drag\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar {\r\n    getSwatchContainer: getSwatchContainer\r\n} = swatchContainer;\r\nvar SORTABLE_NAMESPACE = \"dxSortable\";\r\nvar SORTABLE_CLASS = \"dx-sortable-old\";\r\nvar SCROLL_STEP = 2;\r\nvar START_SCROLL_OFFSET = 20;\r\nvar SCROLL_TIMEOUT = 10;\r\n\r\nfunction elementHasPoint(element, x, y) {\r\n    var $item = $(element);\r\n    var offset = $item.offset();\r\n    if (x >= offset.left && x <= offset.left + $item.outerWidth(true)) {\r\n        if (y >= offset.top && y <= offset.top + $item.outerHeight(true)) {\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkHorizontalPosition(position, itemOffset, rtl) {\r\n    if (isDefined(itemOffset.posHorizontal)) {\r\n        return rtl ? position > itemOffset.posHorizontal : position < itemOffset.posHorizontal\r\n    } else {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction getIndex($items, $item) {\r\n    var index = -1;\r\n    var itemElement = $item.get(0);\r\n    each($items, (function(elementIndex, element) {\r\n        var $element = $(element);\r\n        if (!($element.attr(\"item-group\") && $element.attr(\"item-group\") === $items.eq(elementIndex - 1).attr(\"item-group\"))) {\r\n            index++\r\n        }\r\n        if (element === itemElement) {\r\n            return false\r\n        }\r\n    }));\r\n    return index === $items.length ? -1 : index\r\n}\r\n\r\nfunction getTargetGroup(e, $groups) {\r\n    var result;\r\n    each($groups, (function() {\r\n        if (elementHasPoint(this, e.pageX, e.pageY)) {\r\n            result = $(this)\r\n        }\r\n    }));\r\n    return result\r\n}\r\n\r\nfunction getItemsOffset($elements, isVertical, $itemsContainer) {\r\n    var result = [];\r\n    var $item = [];\r\n    for (var i = 0; i < $elements.length; i += $item.length) {\r\n        $item = $elements.eq(i);\r\n        if ($item.attr(\"item-group\")) {\r\n            $item = $itemsContainer.find(\"[item-group='\" + $item.attr(\"item-group\") + \"']\")\r\n        }\r\n        if ($item.is(\":visible\")) {\r\n            var offset = {\r\n                item: $item,\r\n                index: result.length,\r\n                posHorizontal: isVertical ? void 0 : ($item.last().outerWidth(true) + $item.last().offset().left + $item.offset().left) / 2\r\n            };\r\n            if (isVertical) {\r\n                offset.posVertical = ($item.last().offset().top + $item.offset().top + $item.last().outerHeight(true)) / 2\r\n            } else {\r\n                offset.posVertical = $item.last().outerHeight(true) + $item.last().offset().top\r\n            }\r\n            result.push(offset)\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getScrollWrapper(scrollable) {\r\n    var timeout = null;\r\n    var scrollTop = scrollable.scrollTop();\r\n    var $element = scrollable.$element();\r\n    var top = $element.offset().top;\r\n    var height = $element.height();\r\n    var delta = 0;\r\n\r\n    function onScroll(e) {\r\n        scrollTop = e.scrollOffset.top\r\n    }\r\n    scrollable.on(\"scroll\", onScroll);\r\n\r\n    function move() {\r\n        stop();\r\n        scrollable.scrollTo(scrollTop += delta);\r\n        timeout = setTimeout(move, SCROLL_TIMEOUT)\r\n    }\r\n\r\n    function stop() {\r\n        clearTimeout(timeout)\r\n    }\r\n    return {\r\n        moveIfNeed: function(event) {\r\n            if (event.pageY <= top + START_SCROLL_OFFSET) {\r\n                delta = -SCROLL_STEP\r\n            } else if (event.pageY >= top + height - START_SCROLL_OFFSET) {\r\n                delta = SCROLL_STEP\r\n            } else {\r\n                delta = 0;\r\n                stop();\r\n                return\r\n            }\r\n            move()\r\n        },\r\n        element: function() {\r\n            return $element\r\n        },\r\n        dispose: function() {\r\n            stop();\r\n            scrollable.off(\"scroll\", onScroll)\r\n        }\r\n    }\r\n}\r\nvar Sortable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onChanged: null,\r\n            onDragging: null,\r\n            itemRender: null,\r\n            groupSelector: null,\r\n            itemSelector: \".dx-sort-item\",\r\n            itemContainerSelector: \".dx-sortable-old\",\r\n            sourceClass: \"dx-drag-source\",\r\n            dragClass: \"dx-drag\",\r\n            targetClass: \"dx-drag-target\",\r\n            direction: \"vertical\",\r\n            allowDragging: true,\r\n            groupFilter: null,\r\n            useIndicator: false\r\n        })\r\n    },\r\n    _renderItem: function($sourceItem, target) {\r\n        var itemRender = this.option(\"itemRender\");\r\n        var $item;\r\n        if (itemRender) {\r\n            $item = itemRender($sourceItem, target)\r\n        } else {\r\n            $item = $sourceItem.clone();\r\n            $item.css({\r\n                width: $sourceItem.width(),\r\n                height: $sourceItem.height()\r\n            })\r\n        }\r\n        return $item\r\n    },\r\n    _renderIndicator: function($item, isVertical, $targetGroup, isLast) {\r\n        var height = $item.outerHeight(true);\r\n        var width = $item.outerWidth(true);\r\n        var top = $item.offset().top - $targetGroup.offset().top;\r\n        var left = $item.offset().left - $targetGroup.offset().left;\r\n        this._indicator.css({\r\n            position: \"absolute\",\r\n            top: isLast && isVertical ? top + height : top,\r\n            left: isLast && !isVertical ? left + width : left\r\n        }).toggleClass(\"dx-position-indicator-horizontal\", !isVertical).toggleClass(\"dx-position-indicator-vertical\", !!isVertical).toggleClass(\"dx-position-indicator-last\", !!isLast).height(\"\").width(\"\").appendTo($targetGroup);\r\n        isVertical ? this._indicator.width(width) : this._indicator.height(height)\r\n    },\r\n    _renderDraggable: function($sourceItem) {\r\n        this._$draggable && this._$draggable.remove();\r\n        this._$draggable = this._renderItem($sourceItem, \"drag\").addClass(this.option(\"dragClass\")).appendTo(getSwatchContainer($sourceItem)).css({\r\n            zIndex: 1e6,\r\n            position: \"absolute\"\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        var dragEventsString = [dragEventMove, dragEventStart, dragEventEnd, dragEventEnter, dragEventLeave, dragEventDrop].join(\" \");\r\n        eventsEngine.off(this._getEventListener(), addNamespace(dragEventsString, SORTABLE_NAMESPACE))\r\n    },\r\n    _getItemOffset: function(isVertical, itemsOffset, e) {\r\n        for (var i = 0; i < itemsOffset.length; i++) {\r\n            var shouldInsert = void 0;\r\n            var sameLine = e.pageY < itemsOffset[i].posVertical;\r\n            if (isVertical) {\r\n                shouldInsert = sameLine\r\n            } else if (sameLine) {\r\n                shouldInsert = checkHorizontalPosition(e.pageX, itemsOffset[i], this.option(\"rtlEnabled\"));\r\n                if (!shouldInsert && itemsOffset[i + 1] && itemsOffset[i + 1].posVertical > itemsOffset[i].posVertical) {\r\n                    shouldInsert = true\r\n                }\r\n            }\r\n            if (shouldInsert) {\r\n                return itemsOffset[i]\r\n            }\r\n        }\r\n    },\r\n    _getEventListener: function() {\r\n        var groupSelector = this.option(\"groupSelector\");\r\n        var element = this.$element();\r\n        return groupSelector ? element.find(groupSelector) : element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        var that = this;\r\n        var itemSelector = that.option(\"itemSelector\");\r\n        var itemContainerSelector = that.option(\"itemContainerSelector\");\r\n        var groupSelector = that.option(\"groupSelector\");\r\n        var sourceClass = that.option(\"sourceClass\");\r\n        var targetClass = that.option(\"targetClass\");\r\n        var onDragging = that.option(\"onDragging\");\r\n        var groupFilter = that.option(\"groupFilter\");\r\n        var $sourceItem;\r\n        var sourceIndex;\r\n        var $targetItem;\r\n        var $targetGroup;\r\n        var startPositions;\r\n        var sourceGroup;\r\n        var element = that.$element();\r\n        var $groups;\r\n        var scrollWrapper = null;\r\n        var targetIndex = -1;\r\n        var disposeScrollWrapper = function() {\r\n            scrollWrapper && scrollWrapper.dispose();\r\n            scrollWrapper = null\r\n        };\r\n        that._detachEventHandlers();\r\n        if (that.option(\"allowDragging\")) {\r\n            var $eventListener = that._getEventListener();\r\n            eventsEngine.on($eventListener, addNamespace(dragEventStart, SORTABLE_NAMESPACE), itemSelector, (function(e) {\r\n                $sourceItem = $(e.currentTarget);\r\n                var $sourceGroup = $sourceItem.closest(groupSelector);\r\n                sourceGroup = $sourceGroup.attr(\"group\");\r\n                sourceIndex = getIndex((groupSelector ? $sourceGroup : element).find(itemSelector), $sourceItem);\r\n                if ($sourceItem.attr(\"item-group\")) {\r\n                    $sourceItem = $sourceGroup.find(\"[item-group='\" + $sourceItem.attr(\"item-group\") + \"']\")\r\n                }\r\n                that._renderDraggable($sourceItem);\r\n                $targetItem = that._renderItem($sourceItem, \"target\").addClass(targetClass);\r\n                $sourceItem.addClass(sourceClass);\r\n                ! function() {\r\n                    startPositions = [];\r\n                    each($sourceItem, (function(_, item) {\r\n                        startPositions.push($(item).offset())\r\n                    }))\r\n                }();\r\n                $groups = function() {\r\n                    if (!groupSelector) {\r\n                        return element\r\n                    } else {\r\n                        return groupFilter ? $(groupSelector).filter(groupFilter) : element.find(groupSelector)\r\n                    }\r\n                }();\r\n                that._indicator = $(\"<div>\").addClass(\"dx-position-indicator\")\r\n            }));\r\n            eventsEngine.on($eventListener, addNamespace(dragEventMove, SORTABLE_NAMESPACE), (function(e) {\r\n                var $item;\r\n                var $lastItem;\r\n                var $prevItem;\r\n                if (!$sourceItem) {\r\n                    return\r\n                }\r\n                targetIndex = -1;\r\n                that._indicator.detach();\r\n                each(that._$draggable, (function(index, draggableElement) {\r\n                    $(draggableElement).css({\r\n                        top: startPositions[index].top + e.offset.y,\r\n                        left: startPositions[index].left + e.offset.x\r\n                    })\r\n                }));\r\n                $targetGroup && $targetGroup.removeClass(targetClass);\r\n                $targetGroup = getTargetGroup(e, $groups);\r\n                $targetGroup && function() {\r\n                    var draggingArgs = {\r\n                        sourceGroup: sourceGroup,\r\n                        sourceIndex: sourceIndex,\r\n                        sourceElement: $sourceItem,\r\n                        targetGroup: $targetGroup.attr(\"group\"),\r\n                        targetIndex: $targetGroup.find(itemSelector).index($targetItem)\r\n                    };\r\n                    onDragging && onDragging(draggingArgs);\r\n                    if (draggingArgs.cancel) {\r\n                        $targetGroup = void 0\r\n                    }\r\n                }();\r\n                if ($targetGroup && scrollWrapper && $targetGroup.get(0) !== scrollWrapper.element().get(0)) {\r\n                    disposeScrollWrapper()\r\n                }\r\n                scrollWrapper && scrollWrapper.moveIfNeed(e);\r\n                if (!$targetGroup) {\r\n                    $targetItem.detach();\r\n                    return\r\n                }\r\n                if (!scrollWrapper && $targetGroup.attr(\"allow-scrolling\")) {\r\n                    scrollWrapper = getScrollWrapper($targetGroup.dxScrollable(\"instance\"))\r\n                }\r\n                $targetGroup.addClass(targetClass);\r\n                var $itemContainer = $targetGroup.find(itemContainerSelector);\r\n                var $items = $itemContainer.find(itemSelector);\r\n                var targetSortable = $targetGroup.closest(\".\" + SORTABLE_CLASS).data(\"dxSortableOld\");\r\n                var useIndicator = targetSortable.option(\"useIndicator\");\r\n                var isVertical = \"vertical\" === (targetSortable || that).option(\"direction\");\r\n                var itemsOffset = getItemsOffset($items, isVertical, $itemContainer);\r\n                var itemOffset = that._getItemOffset(isVertical, itemsOffset, e);\r\n                if (itemOffset) {\r\n                    $item = itemOffset.item;\r\n                    $prevItem = itemsOffset[itemOffset.index - 1] && itemsOffset[itemOffset.index - 1].item;\r\n                    if ($item.hasClass(sourceClass) || $prevItem && $prevItem.hasClass(sourceClass) && $prevItem.is(\":visible\")) {\r\n                        $targetItem.detach();\r\n                        return\r\n                    }\r\n                    targetIndex = itemOffset.index;\r\n                    if (!useIndicator) {\r\n                        $targetItem.insertBefore($item);\r\n                        return\r\n                    }\r\n                    var isAnotherGroup = $targetGroup.attr(\"group\") !== sourceGroup;\r\n                    var isSameIndex = targetIndex === sourceIndex;\r\n                    var isNextIndex = targetIndex === sourceIndex + 1;\r\n                    if (isAnotherGroup) {\r\n                        that._renderIndicator($item, isVertical, $targetGroup, that.option(\"rtlEnabled\") && !isVertical);\r\n                        return\r\n                    }\r\n                    if (!isSameIndex && !isNextIndex) {\r\n                        that._renderIndicator($item, isVertical, $targetGroup, that.option(\"rtlEnabled\") && !isVertical)\r\n                    }\r\n                } else {\r\n                    $lastItem = $items.last();\r\n                    if ($lastItem.is(\":visible\") && $lastItem.hasClass(sourceClass)) {\r\n                        return\r\n                    }\r\n                    if ($itemContainer.length) {\r\n                        targetIndex = itemsOffset.length ? itemsOffset[itemsOffset.length - 1].index + 1 : 0\r\n                    }\r\n                    if (useIndicator) {\r\n                        $items.length && that._renderIndicator($lastItem, isVertical, $targetGroup, !that.option(\"rtlEnabled\") || isVertical)\r\n                    } else {\r\n                        $targetItem.appendTo($itemContainer)\r\n                    }\r\n                }\r\n            }));\r\n            eventsEngine.on($eventListener, addNamespace(dragEventEnd, SORTABLE_NAMESPACE), (function() {\r\n                disposeScrollWrapper();\r\n                if (!$sourceItem) {\r\n                    return\r\n                }\r\n                var onChanged = that.option(\"onChanged\");\r\n                var changedArgs = {\r\n                    sourceIndex: sourceIndex,\r\n                    sourceElement: $sourceItem,\r\n                    sourceGroup: sourceGroup,\r\n                    targetIndex: targetIndex,\r\n                    removeSourceElement: true,\r\n                    removeTargetElement: false,\r\n                    removeSourceClass: true\r\n                };\r\n                if ($targetGroup) {\r\n                    $targetGroup.removeClass(targetClass);\r\n                    changedArgs.targetGroup = $targetGroup.attr(\"group\");\r\n                    if (sourceGroup !== changedArgs.targetGroup || targetIndex > -1) {\r\n                        onChanged && onChanged(changedArgs);\r\n                        changedArgs.removeSourceElement && $sourceItem.remove()\r\n                    }\r\n                }\r\n                that._indicator.detach();\r\n                changedArgs.removeSourceClass && $sourceItem.removeClass(sourceClass);\r\n                $sourceItem = null;\r\n                that._$draggable.remove();\r\n                that._$draggable = null;\r\n                changedArgs.removeTargetElement && $targetItem.remove();\r\n                $targetItem.removeClass(targetClass);\r\n                $targetItem = null\r\n            }))\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(SORTABLE_CLASS)\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._$draggable && that._$draggable.detach();\r\n        that._indicator && that._indicator.detach()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onDragging\":\r\n            case \"onChanged\":\r\n            case \"itemRender\":\r\n            case \"groupSelector\":\r\n            case \"itemSelector\":\r\n            case \"itemContainerSelector\":\r\n            case \"sourceClass\":\r\n            case \"targetClass\":\r\n            case \"dragClass\":\r\n            case \"allowDragging\":\r\n            case \"groupFilter\":\r\n            case \"useIndicator\":\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"direction\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\nregisterComponent(\"dxSortableOld\", Sortable);\r\nexport default Sortable;\r\n"]},"metadata":{},"sourceType":"module"}