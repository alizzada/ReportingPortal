{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.field_chooser.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport { hasWindow as hasWindowFn } from \"../../core/utils/window\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inArray } from \"../../core/utils/array\";\nimport { each } from \"../../core/utils/iterator\";\nimport localizationMessage from \"../../localization/message\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { getCompareFunction, foreachDataLevel } from \"./ui.pivot_grid.utils\";\nimport TreeView from \"../tree_view\";\nimport ContextMenu from \"../context_menu\";\nimport BaseFieldChooser from \"./ui.pivot_grid.field_chooser_base\";\nvar DIV = \"<div>\";\nvar hasWindow = hasWindowFn();\nimport \"./data_source\";\nvar FIELDCHOOSER_CLASS = \"dx-pivotgridfieldchooser\";\nvar FIELDCHOOSER_CONTAINER_CLASS = \"dx-pivotgridfieldchooser-container\";\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\n\nfunction getDimensionFields(item, fields) {\n  var result = [];\n\n  if (item.items) {\n    for (var i = 0; i < item.items.length; i++) {\n      result.push.apply(result, getDimensionFields(item.items[i], fields));\n    }\n  } else if (isDefined(item.index)) {\n    result.push(fields[item.index]);\n  }\n\n  return result;\n}\n\nfunction getFirstItem(item, condition) {\n  if (item.items) {\n    for (var i = 0; i < item.items.length; i++) {\n      var childrenItem = getFirstItem(item.items[i], condition);\n\n      if (childrenItem) {\n        return childrenItem;\n      }\n    }\n  }\n\n  if (condition(item)) {\n    return item;\n  }\n}\n\nvar compareOrder = [function (a, b) {\n  var aValue = -!!a.isMeasure;\n  var bValue = +!!b.isMeasure;\n  return aValue + bValue;\n}, function (a, b) {\n  var aValue = -!!(a.items && a.items.length);\n  var bValue = +!!(b.items && b.items.length);\n  return aValue + bValue;\n}, function (a, b) {\n  var aValue = +!!(false === a.isMeasure && a.field && a.field.levels && a.field.levels.length);\n  var bValue = -!!(false === b.isMeasure && b.field && b.field.levels && b.field.levels.length);\n  return aValue + bValue;\n}, getCompareFunction(function (item) {\n  return item.text;\n})];\n\nfunction compareItems(a, b) {\n  var result = 0;\n  var i = 0;\n\n  while (!result && compareOrder[i]) {\n    result = compareOrder[i++](a, b);\n  }\n\n  return result;\n}\n\nfunction getScrollable(container) {\n  return container.find(\".dx-scrollable\").dxScrollable(\"instance\");\n}\n\nvar FieldChooser = BaseFieldChooser.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      height: 400,\n      layout: 0,\n      dataSource: null,\n      onContextMenuPreparing: null,\n      allowSearch: false,\n      searchTimeout: 500,\n      texts: {\n        columnFields: localizationMessage.format(\"dxPivotGrid-columnFields\"),\n        rowFields: localizationMessage.format(\"dxPivotGrid-rowFields\"),\n        dataFields: localizationMessage.format(\"dxPivotGrid-dataFields\"),\n        filterFields: localizationMessage.format(\"dxPivotGrid-filterFields\"),\n        allFields: localizationMessage.format(\"dxPivotGrid-allFields\")\n      }\n    });\n  },\n  _refreshDataSource: function _refreshDataSource() {\n    var that = this;\n    that._expandedPaths = [];\n\n    that._changedHandler = that._changedHandler || function () {\n      each(that._dataChangedHandlers, function (_, func) {\n        func();\n      });\n\n      that._fireContentReadyAction();\n\n      that._skipStateChange = true;\n      that.option(\"state\", that._dataSource.state());\n      that._skipStateChange = false;\n    };\n\n    that._disposeDataSource();\n\n    that.callBase();\n    that._dataSource && that._dataSource.on(\"changed\", that._changedHandler);\n  },\n  _disposeDataSource: function _disposeDataSource() {\n    var dataSource = this._dataSource;\n\n    if (dataSource) {\n      dataSource.off(\"changed\", this._changedHandler);\n      this._dataSource = void 0;\n    }\n  },\n  _dispose: function _dispose() {\n    this._disposeDataSource();\n\n    this.callBase.apply(this, arguments);\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._refreshDataSource();\n\n    this._dataChangedHandlers = [];\n\n    this._initActions();\n  },\n  _initActions: function _initActions() {\n    this._actions = {\n      onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\")\n    };\n  },\n  _trigger: function _trigger(eventName, eventArg) {\n    this._actions[eventName](eventArg);\n  },\n  _setOptionsByReference: function _setOptionsByReference() {\n    this.callBase();\n    extend(this._optionsByReference, {\n      dataSource: true\n    });\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"dataSource\":\n        this._refreshDataSource();\n\n        this._invalidate();\n\n        break;\n\n      case \"layout\":\n      case \"texts\":\n      case \"allowSearch\":\n      case \"searchTimeout\":\n        this._invalidate();\n\n        break;\n\n      case \"onContextMenuPreparing\":\n        this._actions[args.name] = this._createActionByOption(args.name);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function _clean(skipStateSetting) {\n    !skipStateSetting && this._dataSource && this.option(\"state\", this._dataSource.state());\n    this.$element().children(\".\" + FIELDCHOOSER_CONTAINER_CLASS).remove();\n  },\n  _renderLayout0: function _renderLayout0($container) {\n    $container.addClass(\"dx-layout-0\");\n    var $row1 = $(DIV).addClass(\"dx-row\").appendTo($container);\n    var $row2 = $(DIV).addClass(\"dx-row\").appendTo($container);\n    var $col1 = $(DIV).addClass(\"dx-col\").appendTo($row1);\n    var $col2 = $(DIV).addClass(\"dx-col\").appendTo($row1);\n    var $col3 = $(DIV).addClass(\"dx-col\").appendTo($row2);\n    var $col4 = $(DIV).addClass(\"dx-col\").appendTo($row2);\n\n    this._renderArea($col1, \"all\");\n\n    this._renderArea($col2, \"row\");\n\n    this._renderArea($col2, \"column\");\n\n    this._renderArea($col3, \"filter\");\n\n    this._renderArea($col4, \"data\");\n  },\n  _renderLayout1: function _renderLayout1($container) {\n    var $col1 = $(DIV).addClass(\"dx-col\").appendTo($container);\n    var $col2 = $(DIV).addClass(\"dx-col\").appendTo($container);\n\n    this._renderArea($col1, \"all\");\n\n    this._renderArea($col2, \"filter\");\n\n    this._renderArea($col2, \"row\");\n\n    this._renderArea($col2, \"column\");\n\n    this._renderArea($col2, \"data\");\n  },\n  _renderLayout2: function _renderLayout2($container) {\n    $container.addClass(\"dx-layout-2\");\n    var $row1 = $(DIV).addClass(\"dx-row\").appendTo($container);\n\n    this._renderArea($row1, \"all\");\n\n    var $row2 = $(DIV).addClass(\"dx-row\").appendTo($container);\n    var $col1 = $(DIV).addClass(\"dx-col\").appendTo($row2);\n    var $col2 = $(DIV).addClass(\"dx-col\").appendTo($row2);\n\n    this._renderArea($col1, \"filter\");\n\n    this._renderArea($col1, \"row\");\n\n    this._renderArea($col2, \"column\");\n\n    this._renderArea($col2, \"data\");\n  },\n  _initMarkup: function _initMarkup() {\n    var $element = this.$element();\n    var $container = $(DIV).addClass(FIELDCHOOSER_CONTAINER_CLASS).appendTo($element);\n    var layout = this.option(\"layout\");\n    this.callBase();\n    $element.addClass(FIELDCHOOSER_CLASS).addClass(FIELDS_CONTAINER_CLASS);\n    this._dataChangedHandlers = [];\n    var dataSource = this._dataSource;\n    var currentState = \"instantly\" !== this.option(\"applyChangesMode\") && dataSource && dataSource.state();\n    currentState && this.option(\"state\") && dataSource.state(this.option(\"state\"), true);\n\n    if (0 === layout) {\n      this._renderLayout0($container);\n    } else if (1 === layout) {\n      this._renderLayout1($container);\n    } else {\n      this._renderLayout2($container);\n    }\n\n    currentState && dataSource.state(currentState, true);\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    this.callBase();\n    this.renderSortable();\n\n    this._renderContextMenu();\n\n    this.updateDimensions();\n  },\n  _fireContentReadyAction: function _fireContentReadyAction() {\n    if (!this._dataSource || !this._dataSource.isLoading()) {\n      this.callBase();\n    }\n  },\n  _getContextMenuArgs: function _getContextMenuArgs(dxEvent) {\n    var targetFieldElement = $(dxEvent.target).closest(\".dx-area-field\");\n    var targetGroupElement = $(dxEvent.target).closest(\".dx-area-fields\");\n    var field;\n    var area;\n\n    if (targetFieldElement.length) {\n      var fieldCopy = targetFieldElement.data(\"field\");\n\n      if (fieldCopy) {\n        field = this.getDataSource().field(fieldCopy.index) || fieldCopy;\n      }\n    }\n\n    if (targetGroupElement.length) {\n      area = targetGroupElement.attr(\"group\");\n    }\n\n    return {\n      event: dxEvent,\n      field: field,\n      area: area,\n      items: []\n    };\n  },\n  _renderContextMenu: function _renderContextMenu() {\n    var that = this;\n    var $container = that.$element();\n\n    if (that._contextMenu) {\n      that._contextMenu.$element().remove();\n    }\n\n    that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\n      onPositioning: function onPositioning(actionArgs) {\n        var event = actionArgs.event;\n\n        if (!event) {\n          return;\n        }\n\n        var args = that._getContextMenuArgs(event);\n\n        that._trigger(\"onContextMenuPreparing\", args);\n\n        if (args.items && args.items.length) {\n          actionArgs.component.option(\"items\", args.items);\n        } else {\n          actionArgs.cancel = true;\n        }\n      },\n      target: $container,\n      onItemClick: function onItemClick(params) {\n        params.itemData.onItemClick && params.itemData.onItemClick(params);\n      },\n      cssClass: \"dx-pivotgridfieldchooser-context-menu\"\n    });\n  },\n  _createTreeItems: function _createTreeItems(fields, groupFieldNames, path) {\n    var that = this;\n    var isMeasure;\n    var resultItems = [];\n    var groupedItems = [];\n    var groupFieldName = groupFieldNames[0];\n    var fieldsByGroup = {};\n\n    if (!groupFieldName) {\n      each(fields, function (index, field) {\n        var icon;\n\n        if (true === field.isMeasure) {\n          icon = \"measure\";\n        }\n\n        if (false === field.isMeasure) {\n          icon = field.groupName ? \"hierarchy\" : \"dimension\";\n        }\n\n        resultItems.push({\n          index: field.index,\n          field: field,\n          key: field.dataField,\n          selected: isDefined(field.area),\n          text: field.caption || field.dataField,\n          icon: icon,\n          isMeasure: field.isMeasure,\n          isDefault: field.isDefault\n        });\n      });\n    } else {\n      each(fields, function (index, field) {\n        var groupName = field[groupFieldName] || \"\";\n        fieldsByGroup[groupName] = fieldsByGroup[groupName] || [];\n        fieldsByGroup[groupName].push(field);\n\n        if (void 0 === isMeasure) {\n          isMeasure = true;\n        }\n\n        isMeasure = isMeasure && true === field.isMeasure;\n      });\n      each(fieldsByGroup, function (groupName, fields) {\n        var currentPath = path ? path + \".\" + groupName : groupName;\n\n        var items = that._createTreeItems(fields, groupFieldNames.slice(1), currentPath);\n\n        if (groupName) {\n          groupedItems.push({\n            key: groupName,\n            text: groupName,\n            path: currentPath,\n            isMeasure: items.isMeasure,\n            expanded: inArray(currentPath, that._expandedPaths) >= 0,\n            items: items\n          });\n        } else {\n          resultItems = items;\n        }\n      });\n      resultItems = groupedItems.concat(resultItems);\n      resultItems.isMeasure = isMeasure;\n    }\n\n    return resultItems;\n  },\n  _createFieldsDataSource: function _createFieldsDataSource(dataSource) {\n    var fields = dataSource && dataSource.fields() || [];\n    fields = fields.filter(function (field) {\n      return false !== field.visible && !isDefined(field.groupIndex);\n    });\n\n    var treeItems = this._createTreeItems(fields, [\"dimension\", \"displayFolder\"]);\n\n    foreachDataLevel(treeItems, function (items) {\n      items.sort(compareItems);\n    }, 0, \"items\");\n    return treeItems;\n  },\n  _renderFieldsTreeView: function _renderFieldsTreeView(container) {\n    var that = this;\n    var dataSource = that._dataSource;\n\n    var treeView = that._createComponent(container, TreeView, {\n      dataSource: that._createFieldsDataSource(dataSource),\n      showCheckBoxesMode: \"normal\",\n      expandNodesRecursive: false,\n      searchEnabled: that.option(\"allowSearch\"),\n      searchTimeout: that.option(\"searchTimeout\"),\n      itemTemplate: function itemTemplate(itemData, itemIndex, itemElement) {\n        if (itemData.icon) {\n          getImageContainer(itemData.icon).appendTo(itemElement);\n        }\n\n        $(\"<span>\").toggleClass(\"dx-area-field\", !itemData.items).data(\"field\", itemData.field).text(itemData.text).appendTo(itemElement);\n      },\n      onItemCollapsed: function onItemCollapsed(e) {\n        var index = inArray(e.itemData.path, that._expandedPaths);\n\n        if (index >= 0) {\n          that._expandedPaths.splice(index, 1);\n        }\n      },\n      onItemExpanded: function onItemExpanded(e) {\n        var index = inArray(e.itemData.path, that._expandedPaths);\n\n        if (index < 0) {\n          that._expandedPaths.push(e.itemData.path);\n        }\n      },\n      onItemSelectionChanged: function onItemSelectionChanged(e) {\n        var data = e.itemData;\n        var field;\n        var fields;\n        var needSelectDefaultItem = true;\n        var area;\n\n        if (data.items) {\n          if (data.selected) {\n            treeView.unselectItem(data);\n            return;\n          }\n\n          that._processDemandState(function () {\n            fields = getDimensionFields(data, dataSource.fields());\n\n            for (var i = 0; i < fields.length; i++) {\n              if (fields[i].area) {\n                needSelectDefaultItem = false;\n                break;\n              }\n            }\n          });\n\n          if (needSelectDefaultItem) {\n            var item = getFirstItem(data, function (item) {\n              return item.isDefault;\n            }) || getFirstItem(data, function (item) {\n              return isDefined(item.index);\n            });\n            item && treeView.selectItem(item);\n            return;\n          }\n        } else {\n          field = dataSource.fields()[data.index];\n\n          if (data.selected) {\n            area = field.isMeasure ? \"data\" : \"column\";\n          }\n\n          if (field) {\n            fields = [field];\n          }\n        }\n\n        that._applyChanges(fields, {\n          area: area,\n          areaIndex: void 0\n        });\n      }\n    });\n\n    that._dataChangedHandlers.push(function () {\n      var scrollable = getScrollable(container);\n      var scrollTop = scrollable ? scrollable.scrollTop() : 0;\n      treeView.option({\n        dataSource: that._createFieldsDataSource(dataSource)\n      });\n      scrollable = getScrollable(container);\n\n      if (scrollable) {\n        scrollable.scrollTo({\n          y: scrollTop\n        });\n        scrollable.update();\n      }\n    });\n  },\n  _renderAreaFields: function _renderAreaFields($container, area) {\n    var that = this;\n    var dataSource = that._dataSource;\n    var fields = dataSource ? extend(true, [], dataSource.getAreaFields(area, true)) : [];\n    $container.empty();\n    each(fields, function (_, field) {\n      if (false !== field.visible) {\n        that.renderField(field, true).appendTo($container);\n      }\n    });\n  },\n  _renderArea: function _renderArea(container, area) {\n    var that = this;\n    var $areaContainer = $(DIV).addClass(\"dx-area\").appendTo(container);\n    var $fieldsHeaderContainer = $(DIV).addClass(\"dx-area-fields-header\").appendTo($areaContainer);\n    var caption = that.option(\"texts.\" + area + \"Fields\");\n    var $fieldsContent;\n    var render;\n    $(\"<span>\").addClass(\"dx-area-icon\").addClass(\"dx-area-icon-\" + area).appendTo($fieldsHeaderContainer);\n    $(\"<span>\").html(\"&nbsp;\").appendTo($fieldsHeaderContainer);\n    $(\"<span>\").addClass(\"dx-area-caption\").text(caption).appendTo($fieldsHeaderContainer);\n    var $fieldsContainer = $(DIV).addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).appendTo($areaContainer);\n\n    if (\"all\" !== area) {\n      $fieldsContainer.attr(\"group\", area).attr(\"allow-scrolling\", true);\n      $fieldsContent = $(DIV).addClass(\"dx-area-field-container\").appendTo($fieldsContainer);\n\n      render = function render() {\n        that._renderAreaFields($fieldsContent, area);\n      };\n\n      that._dataChangedHandlers.push(render);\n\n      render();\n      $fieldsContainer.dxScrollable();\n    } else {\n      $areaContainer.addClass(\"dx-all-fields\");\n      $fieldsContainer.addClass(\"dx-treeview-border-visible\");\n\n      that._renderFieldsTreeView($fieldsContainer);\n    }\n  },\n  _getSortableOptions: function _getSortableOptions() {\n    return {};\n  },\n  _adjustSortableOnChangedArgs: function _adjustSortableOnChangedArgs() {},\n  resetTreeView: function resetTreeView() {\n    var treeView = this.$element().find(\".dx-treeview\").dxTreeView(\"instance\");\n\n    if (treeView) {\n      treeView.option(\"searchValue\", \"\");\n      treeView.collapseAll();\n    }\n  },\n  applyChanges: function applyChanges() {\n    var state = this.option(\"state\");\n\n    if (isDefined(state)) {\n      this._dataSource.state(state);\n    }\n  },\n  cancelChanges: function cancelChanges() {\n    var dataSource = this._dataSource;\n\n    if (!dataSource.isLoading()) {\n      this.option(\"state\", dataSource.state());\n      return true;\n    }\n\n    return false;\n  },\n  getDataSource: function getDataSource() {\n    return this._dataSource;\n  },\n  updateDimensions: function updateDimensions() {\n    var $scrollableElements = this.$element().find(\".dx-area .dx-scrollable\");\n    $scrollableElements.dxScrollable(\"update\");\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible && hasWindow) {\n      this.updateDimensions();\n    }\n  }\n});\nregisterComponent(\"dxPivotGridFieldChooser\", FieldChooser);\nexport default FieldChooser;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.field_chooser.js"],"names":["$","getImageContainer","hasWindow","hasWindowFn","isDefined","extend","inArray","each","localizationMessage","registerComponent","getCompareFunction","foreachDataLevel","TreeView","ContextMenu","BaseFieldChooser","DIV","FIELDCHOOSER_CLASS","FIELDCHOOSER_CONTAINER_CLASS","FIELDS_CONTAINER_CLASS","AREA_DRAG_CLASS","getDimensionFields","item","fields","result","items","i","length","push","apply","index","getFirstItem","condition","childrenItem","compareOrder","a","b","aValue","isMeasure","bValue","field","levels","text","compareItems","getScrollable","container","find","dxScrollable","FieldChooser","inherit","_getDefaultOptions","callBase","height","layout","dataSource","onContextMenuPreparing","allowSearch","searchTimeout","texts","columnFields","format","rowFields","dataFields","filterFields","allFields","_refreshDataSource","that","_expandedPaths","_changedHandler","_dataChangedHandlers","_","func","_fireContentReadyAction","_skipStateChange","option","_dataSource","state","_disposeDataSource","on","off","_dispose","arguments","_init","_initActions","_actions","_createActionByOption","_trigger","eventName","eventArg","_setOptionsByReference","_optionsByReference","_optionChanged","args","name","_invalidate","_clean","skipStateSetting","$element","children","remove","_renderLayout0","$container","addClass","$row1","appendTo","$row2","$col1","$col2","$col3","$col4","_renderArea","_renderLayout1","_renderLayout2","_initMarkup","currentState","_renderContentImpl","renderSortable","_renderContextMenu","updateDimensions","isLoading","_getContextMenuArgs","dxEvent","targetFieldElement","target","closest","targetGroupElement","area","fieldCopy","data","getDataSource","attr","event","_contextMenu","_createComponent","onPositioning","actionArgs","component","cancel","onItemClick","params","itemData","cssClass","_createTreeItems","groupFieldNames","path","resultItems","groupedItems","groupFieldName","fieldsByGroup","icon","groupName","key","dataField","selected","caption","isDefault","currentPath","slice","expanded","concat","_createFieldsDataSource","filter","visible","groupIndex","treeItems","sort","_renderFieldsTreeView","treeView","showCheckBoxesMode","expandNodesRecursive","searchEnabled","itemTemplate","itemIndex","itemElement","toggleClass","onItemCollapsed","e","splice","onItemExpanded","onItemSelectionChanged","needSelectDefaultItem","unselectItem","_processDemandState","selectItem","_applyChanges","areaIndex","scrollable","scrollTop","scrollTo","y","update","_renderAreaFields","getAreaFields","empty","renderField","$areaContainer","$fieldsHeaderContainer","$fieldsContent","render","html","$fieldsContainer","_getSortableOptions","_adjustSortableOnChangedArgs","resetTreeView","dxTreeView","collapseAll","applyChanges","cancelChanges","$scrollableElements","_visibilityChanged"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.field_chooser.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport {\r\n    hasWindow as hasWindowFn\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport localizationMessage from \"../../localization/message\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    getCompareFunction,\r\n    foreachDataLevel\r\n} from \"./ui.pivot_grid.utils\";\r\nimport TreeView from \"../tree_view\";\r\nimport ContextMenu from \"../context_menu\";\r\nimport BaseFieldChooser from \"./ui.pivot_grid.field_chooser_base\";\r\nvar DIV = \"<div>\";\r\nvar hasWindow = hasWindowFn();\r\nimport \"./data_source\";\r\nvar FIELDCHOOSER_CLASS = \"dx-pivotgridfieldchooser\";\r\nvar FIELDCHOOSER_CONTAINER_CLASS = \"dx-pivotgridfieldchooser-container\";\r\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\r\nvar AREA_DRAG_CLASS = \"dx-pivotgrid-drag-action\";\r\n\r\nfunction getDimensionFields(item, fields) {\r\n    var result = [];\r\n    if (item.items) {\r\n        for (var i = 0; i < item.items.length; i++) {\r\n            result.push.apply(result, getDimensionFields(item.items[i], fields))\r\n        }\r\n    } else if (isDefined(item.index)) {\r\n        result.push(fields[item.index])\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getFirstItem(item, condition) {\r\n    if (item.items) {\r\n        for (var i = 0; i < item.items.length; i++) {\r\n            var childrenItem = getFirstItem(item.items[i], condition);\r\n            if (childrenItem) {\r\n                return childrenItem\r\n            }\r\n        }\r\n    }\r\n    if (condition(item)) {\r\n        return item\r\n    }\r\n}\r\nvar compareOrder = [function(a, b) {\r\n    var aValue = -!!a.isMeasure;\r\n    var bValue = +!!b.isMeasure;\r\n    return aValue + bValue\r\n}, function(a, b) {\r\n    var aValue = -!!(a.items && a.items.length);\r\n    var bValue = +!!(b.items && b.items.length);\r\n    return aValue + bValue\r\n}, function(a, b) {\r\n    var aValue = +!!(false === a.isMeasure && a.field && a.field.levels && a.field.levels.length);\r\n    var bValue = -!!(false === b.isMeasure && b.field && b.field.levels && b.field.levels.length);\r\n    return aValue + bValue\r\n}, getCompareFunction((function(item) {\r\n    return item.text\r\n}))];\r\n\r\nfunction compareItems(a, b) {\r\n    var result = 0;\r\n    var i = 0;\r\n    while (!result && compareOrder[i]) {\r\n        result = compareOrder[i++](a, b)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getScrollable(container) {\r\n    return container.find(\".dx-scrollable\").dxScrollable(\"instance\")\r\n}\r\nvar FieldChooser = BaseFieldChooser.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            height: 400,\r\n            layout: 0,\r\n            dataSource: null,\r\n            onContextMenuPreparing: null,\r\n            allowSearch: false,\r\n            searchTimeout: 500,\r\n            texts: {\r\n                columnFields: localizationMessage.format(\"dxPivotGrid-columnFields\"),\r\n                rowFields: localizationMessage.format(\"dxPivotGrid-rowFields\"),\r\n                dataFields: localizationMessage.format(\"dxPivotGrid-dataFields\"),\r\n                filterFields: localizationMessage.format(\"dxPivotGrid-filterFields\"),\r\n                allFields: localizationMessage.format(\"dxPivotGrid-allFields\")\r\n            }\r\n        })\r\n    },\r\n    _refreshDataSource: function() {\r\n        var that = this;\r\n        that._expandedPaths = [];\r\n        that._changedHandler = that._changedHandler || function() {\r\n            each(that._dataChangedHandlers, (function(_, func) {\r\n                func()\r\n            }));\r\n            that._fireContentReadyAction();\r\n            that._skipStateChange = true;\r\n            that.option(\"state\", that._dataSource.state());\r\n            that._skipStateChange = false\r\n        };\r\n        that._disposeDataSource();\r\n        that.callBase();\r\n        that._dataSource && that._dataSource.on(\"changed\", that._changedHandler)\r\n    },\r\n    _disposeDataSource: function() {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource) {\r\n            dataSource.off(\"changed\", this._changedHandler);\r\n            this._dataSource = void 0\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._disposeDataSource();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._refreshDataSource();\r\n        this._dataChangedHandlers = [];\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {\r\n            onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\")\r\n        }\r\n    },\r\n    _trigger: function(eventName, eventArg) {\r\n        this._actions[eventName](eventArg)\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            dataSource: true\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n                this._refreshDataSource();\r\n                this._invalidate();\r\n                break;\r\n            case \"layout\":\r\n            case \"texts\":\r\n            case \"allowSearch\":\r\n            case \"searchTimeout\":\r\n                this._invalidate();\r\n                break;\r\n            case \"onContextMenuPreparing\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function(skipStateSetting) {\r\n        !skipStateSetting && this._dataSource && this.option(\"state\", this._dataSource.state());\r\n        this.$element().children(\".\" + FIELDCHOOSER_CONTAINER_CLASS).remove()\r\n    },\r\n    _renderLayout0: function($container) {\r\n        $container.addClass(\"dx-layout-0\");\r\n        var $row1 = $(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $row2 = $(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $col1 = $(DIV).addClass(\"dx-col\").appendTo($row1);\r\n        var $col2 = $(DIV).addClass(\"dx-col\").appendTo($row1);\r\n        var $col3 = $(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        var $col4 = $(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        this._renderArea($col1, \"all\");\r\n        this._renderArea($col2, \"row\");\r\n        this._renderArea($col2, \"column\");\r\n        this._renderArea($col3, \"filter\");\r\n        this._renderArea($col4, \"data\")\r\n    },\r\n    _renderLayout1: function($container) {\r\n        var $col1 = $(DIV).addClass(\"dx-col\").appendTo($container);\r\n        var $col2 = $(DIV).addClass(\"dx-col\").appendTo($container);\r\n        this._renderArea($col1, \"all\");\r\n        this._renderArea($col2, \"filter\");\r\n        this._renderArea($col2, \"row\");\r\n        this._renderArea($col2, \"column\");\r\n        this._renderArea($col2, \"data\")\r\n    },\r\n    _renderLayout2: function($container) {\r\n        $container.addClass(\"dx-layout-2\");\r\n        var $row1 = $(DIV).addClass(\"dx-row\").appendTo($container);\r\n        this._renderArea($row1, \"all\");\r\n        var $row2 = $(DIV).addClass(\"dx-row\").appendTo($container);\r\n        var $col1 = $(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        var $col2 = $(DIV).addClass(\"dx-col\").appendTo($row2);\r\n        this._renderArea($col1, \"filter\");\r\n        this._renderArea($col1, \"row\");\r\n        this._renderArea($col2, \"column\");\r\n        this._renderArea($col2, \"data\")\r\n    },\r\n    _initMarkup: function() {\r\n        var $element = this.$element();\r\n        var $container = $(DIV).addClass(FIELDCHOOSER_CONTAINER_CLASS).appendTo($element);\r\n        var layout = this.option(\"layout\");\r\n        this.callBase();\r\n        $element.addClass(FIELDCHOOSER_CLASS).addClass(FIELDS_CONTAINER_CLASS);\r\n        this._dataChangedHandlers = [];\r\n        var dataSource = this._dataSource;\r\n        var currentState = \"instantly\" !== this.option(\"applyChangesMode\") && dataSource && dataSource.state();\r\n        currentState && this.option(\"state\") && dataSource.state(this.option(\"state\"), true);\r\n        if (0 === layout) {\r\n            this._renderLayout0($container)\r\n        } else if (1 === layout) {\r\n            this._renderLayout1($container)\r\n        } else {\r\n            this._renderLayout2($container)\r\n        }\r\n        currentState && dataSource.state(currentState, true)\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.callBase();\r\n        this.renderSortable();\r\n        this._renderContextMenu();\r\n        this.updateDimensions()\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        if (!this._dataSource || !this._dataSource.isLoading()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _getContextMenuArgs: function(dxEvent) {\r\n        var targetFieldElement = $(dxEvent.target).closest(\".dx-area-field\");\r\n        var targetGroupElement = $(dxEvent.target).closest(\".dx-area-fields\");\r\n        var field;\r\n        var area;\r\n        if (targetFieldElement.length) {\r\n            var fieldCopy = targetFieldElement.data(\"field\");\r\n            if (fieldCopy) {\r\n                field = this.getDataSource().field(fieldCopy.index) || fieldCopy\r\n            }\r\n        }\r\n        if (targetGroupElement.length) {\r\n            area = targetGroupElement.attr(\"group\")\r\n        }\r\n        return {\r\n            event: dxEvent,\r\n            field: field,\r\n            area: area,\r\n            items: []\r\n        }\r\n    },\r\n    _renderContextMenu: function() {\r\n        var that = this;\r\n        var $container = that.$element();\r\n        if (that._contextMenu) {\r\n            that._contextMenu.$element().remove()\r\n        }\r\n        that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                if (!event) {\r\n                    return\r\n                }\r\n                var args = that._getContextMenuArgs(event);\r\n                that._trigger(\"onContextMenuPreparing\", args);\r\n                if (args.items && args.items.length) {\r\n                    actionArgs.component.option(\"items\", args.items)\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            target: $container,\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: \"dx-pivotgridfieldchooser-context-menu\"\r\n        })\r\n    },\r\n    _createTreeItems: function(fields, groupFieldNames, path) {\r\n        var that = this;\r\n        var isMeasure;\r\n        var resultItems = [];\r\n        var groupedItems = [];\r\n        var groupFieldName = groupFieldNames[0];\r\n        var fieldsByGroup = {};\r\n        if (!groupFieldName) {\r\n            each(fields, (function(index, field) {\r\n                var icon;\r\n                if (true === field.isMeasure) {\r\n                    icon = \"measure\"\r\n                }\r\n                if (false === field.isMeasure) {\r\n                    icon = field.groupName ? \"hierarchy\" : \"dimension\"\r\n                }\r\n                resultItems.push({\r\n                    index: field.index,\r\n                    field: field,\r\n                    key: field.dataField,\r\n                    selected: isDefined(field.area),\r\n                    text: field.caption || field.dataField,\r\n                    icon: icon,\r\n                    isMeasure: field.isMeasure,\r\n                    isDefault: field.isDefault\r\n                })\r\n            }))\r\n        } else {\r\n            each(fields, (function(index, field) {\r\n                var groupName = field[groupFieldName] || \"\";\r\n                fieldsByGroup[groupName] = fieldsByGroup[groupName] || [];\r\n                fieldsByGroup[groupName].push(field);\r\n                if (void 0 === isMeasure) {\r\n                    isMeasure = true\r\n                }\r\n                isMeasure = isMeasure && true === field.isMeasure\r\n            }));\r\n            each(fieldsByGroup, (function(groupName, fields) {\r\n                var currentPath = path ? path + \".\" + groupName : groupName;\r\n                var items = that._createTreeItems(fields, groupFieldNames.slice(1), currentPath);\r\n                if (groupName) {\r\n                    groupedItems.push({\r\n                        key: groupName,\r\n                        text: groupName,\r\n                        path: currentPath,\r\n                        isMeasure: items.isMeasure,\r\n                        expanded: inArray(currentPath, that._expandedPaths) >= 0,\r\n                        items: items\r\n                    })\r\n                } else {\r\n                    resultItems = items\r\n                }\r\n            }));\r\n            resultItems = groupedItems.concat(resultItems);\r\n            resultItems.isMeasure = isMeasure\r\n        }\r\n        return resultItems\r\n    },\r\n    _createFieldsDataSource: function(dataSource) {\r\n        var fields = dataSource && dataSource.fields() || [];\r\n        fields = fields.filter(field => false !== field.visible && !isDefined(field.groupIndex));\r\n        var treeItems = this._createTreeItems(fields, [\"dimension\", \"displayFolder\"]);\r\n        foreachDataLevel(treeItems, (function(items) {\r\n            items.sort(compareItems)\r\n        }), 0, \"items\");\r\n        return treeItems\r\n    },\r\n    _renderFieldsTreeView: function(container) {\r\n        var that = this;\r\n        var dataSource = that._dataSource;\r\n        var treeView = that._createComponent(container, TreeView, {\r\n            dataSource: that._createFieldsDataSource(dataSource),\r\n            showCheckBoxesMode: \"normal\",\r\n            expandNodesRecursive: false,\r\n            searchEnabled: that.option(\"allowSearch\"),\r\n            searchTimeout: that.option(\"searchTimeout\"),\r\n            itemTemplate: function(itemData, itemIndex, itemElement) {\r\n                if (itemData.icon) {\r\n                    getImageContainer(itemData.icon).appendTo(itemElement)\r\n                }\r\n                $(\"<span>\").toggleClass(\"dx-area-field\", !itemData.items).data(\"field\", itemData.field).text(itemData.text).appendTo(itemElement)\r\n            },\r\n            onItemCollapsed: function(e) {\r\n                var index = inArray(e.itemData.path, that._expandedPaths);\r\n                if (index >= 0) {\r\n                    that._expandedPaths.splice(index, 1)\r\n                }\r\n            },\r\n            onItemExpanded: function(e) {\r\n                var index = inArray(e.itemData.path, that._expandedPaths);\r\n                if (index < 0) {\r\n                    that._expandedPaths.push(e.itemData.path)\r\n                }\r\n            },\r\n            onItemSelectionChanged: function(e) {\r\n                var data = e.itemData;\r\n                var field;\r\n                var fields;\r\n                var needSelectDefaultItem = true;\r\n                var area;\r\n                if (data.items) {\r\n                    if (data.selected) {\r\n                        treeView.unselectItem(data);\r\n                        return\r\n                    }\r\n                    that._processDemandState(() => {\r\n                        fields = getDimensionFields(data, dataSource.fields());\r\n                        for (var i = 0; i < fields.length; i++) {\r\n                            if (fields[i].area) {\r\n                                needSelectDefaultItem = false;\r\n                                break\r\n                            }\r\n                        }\r\n                    });\r\n                    if (needSelectDefaultItem) {\r\n                        var item = getFirstItem(data, (function(item) {\r\n                            return item.isDefault\r\n                        })) || getFirstItem(data, (function(item) {\r\n                            return isDefined(item.index)\r\n                        }));\r\n                        item && treeView.selectItem(item);\r\n                        return\r\n                    }\r\n                } else {\r\n                    field = dataSource.fields()[data.index];\r\n                    if (data.selected) {\r\n                        area = field.isMeasure ? \"data\" : \"column\"\r\n                    }\r\n                    if (field) {\r\n                        fields = [field]\r\n                    }\r\n                }\r\n                that._applyChanges(fields, {\r\n                    area: area,\r\n                    areaIndex: void 0\r\n                })\r\n            }\r\n        });\r\n        that._dataChangedHandlers.push((function() {\r\n            var scrollable = getScrollable(container);\r\n            var scrollTop = scrollable ? scrollable.scrollTop() : 0;\r\n            treeView.option({\r\n                dataSource: that._createFieldsDataSource(dataSource)\r\n            });\r\n            scrollable = getScrollable(container);\r\n            if (scrollable) {\r\n                scrollable.scrollTo({\r\n                    y: scrollTop\r\n                });\r\n                scrollable.update()\r\n            }\r\n        }))\r\n    },\r\n    _renderAreaFields: function($container, area) {\r\n        var that = this;\r\n        var dataSource = that._dataSource;\r\n        var fields = dataSource ? extend(true, [], dataSource.getAreaFields(area, true)) : [];\r\n        $container.empty();\r\n        each(fields, (function(_, field) {\r\n            if (false !== field.visible) {\r\n                that.renderField(field, true).appendTo($container)\r\n            }\r\n        }))\r\n    },\r\n    _renderArea: function(container, area) {\r\n        var that = this;\r\n        var $areaContainer = $(DIV).addClass(\"dx-area\").appendTo(container);\r\n        var $fieldsHeaderContainer = $(DIV).addClass(\"dx-area-fields-header\").appendTo($areaContainer);\r\n        var caption = that.option(\"texts.\" + area + \"Fields\");\r\n        var $fieldsContent;\r\n        var render;\r\n        $(\"<span>\").addClass(\"dx-area-icon\").addClass(\"dx-area-icon-\" + area).appendTo($fieldsHeaderContainer);\r\n        $(\"<span>\").html(\"&nbsp;\").appendTo($fieldsHeaderContainer);\r\n        $(\"<span>\").addClass(\"dx-area-caption\").text(caption).appendTo($fieldsHeaderContainer);\r\n        var $fieldsContainer = $(DIV).addClass(\"dx-area-fields\").addClass(AREA_DRAG_CLASS).appendTo($areaContainer);\r\n        if (\"all\" !== area) {\r\n            $fieldsContainer.attr(\"group\", area).attr(\"allow-scrolling\", true);\r\n            $fieldsContent = $(DIV).addClass(\"dx-area-field-container\").appendTo($fieldsContainer);\r\n            render = function() {\r\n                that._renderAreaFields($fieldsContent, area)\r\n            };\r\n            that._dataChangedHandlers.push(render);\r\n            render();\r\n            $fieldsContainer.dxScrollable()\r\n        } else {\r\n            $areaContainer.addClass(\"dx-all-fields\");\r\n            $fieldsContainer.addClass(\"dx-treeview-border-visible\");\r\n            that._renderFieldsTreeView($fieldsContainer)\r\n        }\r\n    },\r\n    _getSortableOptions: function() {\r\n        return {}\r\n    },\r\n    _adjustSortableOnChangedArgs: function() {},\r\n    resetTreeView: function() {\r\n        var treeView = this.$element().find(\".dx-treeview\").dxTreeView(\"instance\");\r\n        if (treeView) {\r\n            treeView.option(\"searchValue\", \"\");\r\n            treeView.collapseAll()\r\n        }\r\n    },\r\n    applyChanges: function() {\r\n        var state = this.option(\"state\");\r\n        if (isDefined(state)) {\r\n            this._dataSource.state(state)\r\n        }\r\n    },\r\n    cancelChanges: function() {\r\n        var dataSource = this._dataSource;\r\n        if (!dataSource.isLoading()) {\r\n            this.option(\"state\", dataSource.state());\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataSource\r\n    },\r\n    updateDimensions: function() {\r\n        var $scrollableElements = this.$element().find(\".dx-area .dx-scrollable\");\r\n        $scrollableElements.dxScrollable(\"update\")\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && hasWindow) {\r\n            this.updateDimensions()\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxPivotGridFieldChooser\", FieldChooser);\r\nexport default FieldChooser;\r\n"]},"metadata":{},"sourceType":"module"}