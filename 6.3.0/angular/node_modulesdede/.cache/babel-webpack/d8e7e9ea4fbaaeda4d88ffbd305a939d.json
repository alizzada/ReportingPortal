{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/table_creator.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { data as elementData } from \"../../core/element_data\";\nimport { isFunction } from \"../../core/utils/type\";\nimport { getPublicElement } from \"../../core/element\";\nvar ROW_SELECTOR = \"tr\";\n\nvar SchedulerTableCreator = /*#__PURE__*/function () {\n  function SchedulerTableCreator() {\n    _classCallCheck(this, SchedulerTableCreator);\n\n    this.VERTICAL = \"vertical\";\n    this.HORIZONTAL = \"horizontal\";\n  }\n\n  _createClass(SchedulerTableCreator, [{\n    key: \"insertAllDayRow\",\n    value: function insertAllDayRow(allDayElements, tableBody, index) {\n      if (allDayElements[index]) {\n        var row = allDayElements[index].find(ROW_SELECTOR);\n\n        if (!row.length) {\n          row = $(domAdapter.createElement(ROW_SELECTOR));\n          row.append(allDayElements[index].get(0));\n        }\n\n        tableBody.appendChild(row.get ? row.get(0) : row);\n      }\n    }\n  }, {\n    key: \"makeTable\",\n    value: function makeTable(options) {\n      var tableBody = domAdapter.createElement(\"tbody\");\n      var templateCallbacks = [];\n      var row;\n      var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\n      var allDayElementIndex = 0;\n      var allDayElements = options.allDayElements;\n      var groupIndex = options.groupIndex;\n      var rowCount = options.rowCount;\n      $(options.container).append(tableBody);\n\n      if (allDayElements) {\n        this.insertAllDayRow(allDayElements, tableBody, 0);\n        allDayElementIndex++;\n      }\n\n      for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n        row = domAdapter.createElement(ROW_SELECTOR);\n        tableBody.appendChild(row);\n        var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;\n\n        if (options.rowClass) {\n          row.className = options.rowClass;\n        }\n\n        for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {\n          var td = domAdapter.createElement(\"td\");\n          row.appendChild(td);\n\n          if (options.cellClass) {\n            if (isFunction(options.cellClass)) {\n              td.className = options.cellClass(rowIndex, columnIndex);\n            } else {\n              td.className = options.cellClass;\n            }\n          }\n\n          var cellDataObject = void 0;\n          var dataKey = void 0;\n          var dataValue = void 0;\n\n          if (options.getCellData) {\n            cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);\n            dataKey = cellDataObject.key;\n            dataValue = cellDataObject.value;\n            dataKey && elementData(td, dataKey, dataValue);\n          }\n\n          if (options.cellTemplate && options.cellTemplate.render) {\n            var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};\n            var templateOptions = {\n              model: _extends({\n                text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : \"\",\n                date: options.getCellDate ? options.getCellDate(rowIndex) : void 0\n              }, additionalTemplateData),\n              container: getPublicElement($(td)),\n              index: rowIndex * options.cellCount + columnIndex\n            };\n\n            if (dataValue) {\n              if (dataValue.startDate) {\n                templateOptions.model.startDate = dataValue.startDate;\n              }\n\n              if (dataValue.endDate) {\n                templateOptions.model.endDate = dataValue.endDate;\n              }\n\n              if (dataValue.groups) {\n                templateOptions.model.groups = dataValue.groups;\n              }\n\n              if (dataValue.allDay) {\n                templateOptions.model.allDay = dataValue.allDay;\n              }\n            }\n\n            templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions));\n          } else if (options.getCellText) {\n            $(\"<div>\").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo($(td));\n          }\n        }\n\n        if (allDayElements && isLastRowInGroup) {\n          this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\n          allDayElementIndex++;\n        }\n      }\n\n      return templateCallbacks;\n    }\n  }, {\n    key: \"makeGroupedTable\",\n    value: function makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\n      var rows = [];\n\n      if (type === this.VERTICAL) {\n        rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount);\n      } else {\n        rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate);\n      }\n\n      return rows;\n    }\n  }, {\n    key: \"makeGroupedTableFromJSON\",\n    value: function makeGroupedTableFromJSON(type, data, config) {\n      var table;\n      var cellStorage = [];\n      var rowIndex = 0;\n      config = config || {};\n      var cellTag = config.cellTag || \"td\";\n      var childrenField = config.childrenField || \"children\";\n      var titleField = config.titleField || \"title\";\n      var groupTableClass = config.groupTableClass;\n      var groupRowClass = config.groupRowClass;\n      var groupCellClass = config.groupCellClass;\n      var groupCellCustomContent = config.groupCellCustomContent;\n\n      function getChildCount(item) {\n        if (item[childrenField]) {\n          return item[childrenField].length;\n        }\n\n        return 0;\n      }\n\n      function createCell(text, childCount, index, data) {\n        var cell = {\n          element: domAdapter.createElement(cellTag),\n          childCount: childCount\n        };\n\n        if (groupCellClass) {\n          cell.element.className = groupCellClass;\n        }\n\n        var cellText = domAdapter.createTextNode(text);\n\n        if (\"function\" === typeof groupCellCustomContent) {\n          groupCellCustomContent(cell.element, cellText, index, data);\n        } else {\n          cell.element.appendChild(cellText);\n        }\n\n        return cell;\n      }\n\n      !function () {\n        table = domAdapter.createElement(\"table\");\n\n        if (groupTableClass) {\n          table.className = groupTableClass;\n        }\n      }();\n      !function generateCells(data) {\n        for (var i = 0; i < data.length; i++) {\n          var childCount = getChildCount(data[i]);\n          var cell = createCell(data[i][titleField], childCount, i, data[i]);\n\n          if (!cellStorage[rowIndex]) {\n            cellStorage[rowIndex] = [];\n          }\n\n          cellStorage[rowIndex].push(cell);\n\n          if (childCount) {\n            generateCells(data[i][childrenField]);\n          } else {\n            rowIndex++;\n          }\n        }\n      }(data);\n      void cellStorage.forEach(function (cells) {\n        var row = domAdapter.createElement(ROW_SELECTOR);\n\n        if (groupRowClass) {\n          row.className = groupRowClass;\n        }\n\n        var rowspans = [];\n\n        for (var i = cells.length - 1; i >= 0; i--) {\n          var prev = cells[i + 1];\n          var rowspan = cells[i].childCount;\n\n          if (prev && prev.childCount) {\n            rowspan *= prev.childCount;\n          }\n\n          rowspans.push(rowspan);\n        }\n\n        rowspans.reverse();\n        cells.forEach(function (cell, index) {\n          if (rowspans[index]) {\n            cell.element.setAttribute(\"rowSpan\", rowspans[index]);\n          }\n\n          row.appendChild(cell.element);\n        });\n        table.appendChild(row);\n      });\n      return table;\n    }\n  }, {\n    key: \"_makeFlexGroupedRowCells\",\n    value: function _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {\n      var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\n      var cells = [];\n      var items = group.items;\n      var itemCount = items.length;\n\n      for (var i = 0; i < repeatCount * repeatByDate; i++) {\n        for (var j = 0; j < itemCount; j++) {\n          var $container = $(\"<div>\");\n          var cell = {};\n\n          if (cellTemplate && cellTemplate.render) {\n            var templateOptions = {\n              model: items[j],\n              container: getPublicElement($container),\n              index: i * itemCount + j\n            };\n\n            if (group.data) {\n              templateOptions.model.data = group.data[j];\n            }\n\n            cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n          } else {\n            $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\n            $container = $(\"<div>\").append($container);\n          }\n\n          var cssClass = isFunction(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\n          cell.element = $container.addClass(cssClass);\n          cells.push(cell);\n        }\n      }\n\n      return cells;\n    }\n  }, {\n    key: \"_makeVerticalGroupedRows\",\n    value: function _makeVerticalGroupedRows(groups, cssClasses, cellTemplate) {\n      var cellTemplates = [];\n      var repeatCount = 1;\n      var cellsArray = [];\n\n      var cellIterator = function cellIterator(cell) {\n        if (cell.template) {\n          cellTemplates.push(cell.template);\n        }\n      };\n\n      for (var i = 0; i < groups.length; i++) {\n        if (i > 0) {\n          repeatCount = groups[i - 1].items.length * repeatCount;\n        }\n\n        var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\n\n        cells.forEach(cellIterator);\n        cellsArray.push(cells);\n      }\n\n      var rows = [];\n      var groupCount = cellsArray.length;\n\n      for (var _i = 0; _i < groupCount; _i++) {\n        rows.push($(\"<div>\").addClass(cssClasses.groupHeaderRowClass));\n      }\n\n      for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\n        var currentColumnLength = cellsArray[_i2].length;\n\n        for (var j = 0; j < currentColumnLength; j++) {\n          rows[_i2].append(cellsArray[_i2][j].element);\n        }\n      }\n\n      return {\n        elements: $(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\n        cellTemplates: cellTemplates\n      };\n    }\n  }, {\n    key: \"_makeHorizontalGroupedRows\",\n    value: function _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\n      var repeatCount = 1;\n      var groupCount = groups.length;\n      var rows = [];\n      var cellTemplates = [];\n      var repeatByDate = groupByDate ? cellCount : 1;\n\n      var cellIterator = function cellIterator(cell) {\n        if (cell.template) {\n          cellTemplates.push(cell.template);\n        }\n\n        return cell.element;\n      };\n\n      for (var i = 0; i < groupCount; i++) {\n        if (i > 0) {\n          repeatCount = groups[i - 1].items.length * repeatCount;\n        }\n\n        var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\n\n        rows.push($(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)));\n      }\n\n      var maxCellCount = rows[groupCount - 1].find(\"th\").length;\n\n      for (var j = 0; j < groupCount; j++) {\n        var $cell = rows[j].find(\"th\");\n        var colspan = maxCellCount / $cell.length;\n\n        if (!groupByDate) {\n          colspan *= cellCount;\n        }\n\n        if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\n          $cell.attr(\"colSpan\", colspan);\n        }\n      }\n\n      return {\n        elements: rows,\n        cellTemplates: cellTemplates\n      };\n    }\n  }, {\n    key: \"_makeGroupedRowCells\",\n    value: function _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\n      repeatByDate = repeatByDate || 1;\n      repeatCount *= repeatByDate;\n      var cells = [];\n      var items = group.items;\n      var itemCount = items.length;\n\n      for (var i = 0; i < repeatCount; i++) {\n        for (var j = 0; j < itemCount; j++) {\n          var $container = $(\"<div>\");\n          var cell = {};\n\n          if (cellTemplate && cellTemplate.render) {\n            var templateOptions = {\n              model: items[j],\n              container: getPublicElement($container),\n              index: i * itemCount + j\n            };\n\n            if (group.data) {\n              templateOptions.model.data = group.data[j];\n            }\n\n            cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n          } else {\n            $container.text(items[j].text);\n            $container = $(\"<div>\").append($container);\n          }\n\n          $container.addClass(cssClasses.groupHeaderContentClass);\n          var cssClass = void 0;\n\n          if (isFunction(cssClasses.groupHeaderClass)) {\n            cssClass = cssClasses.groupHeaderClass(j);\n          } else {\n            cssClass = cssClasses.groupHeaderClass;\n          }\n\n          cell.element = $(\"<th>\").addClass(cssClass).append($container);\n          cells.push(cell);\n        }\n      }\n\n      return cells;\n    }\n  }]);\n\n  return SchedulerTableCreator;\n}();\n\nexport default {\n  tableCreator: new SchedulerTableCreator()\n};","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/table_creator.js"],"names":["_extends","$","domAdapter","data","elementData","isFunction","getPublicElement","ROW_SELECTOR","SchedulerTableCreator","VERTICAL","HORIZONTAL","allDayElements","tableBody","index","row","find","length","createElement","append","get","appendChild","options","templateCallbacks","rowCountInGroup","groupCount","rowCount","allDayElementIndex","groupIndex","container","insertAllDayRow","rowIndex","isLastRowInGroup","rowClass","className","columnIndex","cellCount","td","cellClass","cellDataObject","dataKey","dataValue","getCellData","key","value","cellTemplate","render","additionalTemplateData","getTemplateData","templateOptions","model","text","getCellText","date","getCellDate","startDate","endDate","groups","allDay","push","bind","addClass","getCellTextClass","appendTo","type","cssClasses","groupByDate","rows","_makeVerticalGroupedRows","_makeHorizontalGroupedRows","config","table","cellStorage","cellTag","childrenField","titleField","groupTableClass","groupRowClass","groupCellClass","groupCellCustomContent","getChildCount","item","createCell","childCount","cell","element","cellText","createTextNode","generateCells","i","forEach","cells","rowspans","prev","rowspan","reverse","setAttribute","group","repeatCount","repeatByDate","arguments","items","itemCount","j","$container","template","attr","cssClass","groupHeaderClass","cellTemplates","cellsArray","cellIterator","_makeFlexGroupedRowCells","_i","groupHeaderRowClass","_i2","currentColumnLength","elements","_makeGroupedRowCells","map","maxCellCount","$cell","colspan","groupHeaderContentClass","tableCreator"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SACIC,IAAI,IAAIC,WADZ,QAEO,yBAFP;AAGA,SACIC,UADJ,QAEO,uBAFP;AAGA,SACIC,gBADJ,QAEO,oBAFP;AAGA,IAAIC,YAAY,GAAG,IAAnB;;IACMC,qB;AACF,mCAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,UAAhB;AACA,SAAKC,UAAL,GAAkB,YAAlB;AACH;;;;WACD,yBAAgBC,cAAhB,EAAgCC,SAAhC,EAA2CC,KAA3C,EAAkD;AAC9C,UAAIF,cAAc,CAACE,KAAD,CAAlB,EAA2B;AACvB,YAAIC,GAAG,GAAGH,cAAc,CAACE,KAAD,CAAd,CAAsBE,IAAtB,CAA2BR,YAA3B,CAAV;;AACA,YAAI,CAACO,GAAG,CAACE,MAAT,EAAiB;AACbF,UAAAA,GAAG,GAAGb,CAAC,CAACC,UAAU,CAACe,aAAX,CAAyBV,YAAzB,CAAD,CAAP;AACAO,UAAAA,GAAG,CAACI,MAAJ,CAAWP,cAAc,CAACE,KAAD,CAAd,CAAsBM,GAAtB,CAA0B,CAA1B,CAAX;AACH;;AACDP,QAAAA,SAAS,CAACQ,WAAV,CAAsBN,GAAG,CAACK,GAAJ,GAAUL,GAAG,CAACK,GAAJ,CAAQ,CAAR,CAAV,GAAuBL,GAA7C;AACH;AACJ;;;WACD,mBAAUO,OAAV,EAAmB;AACf,UAAIT,SAAS,GAAGV,UAAU,CAACe,aAAX,CAAyB,OAAzB,CAAhB;AACA,UAAIK,iBAAiB,GAAG,EAAxB;AACA,UAAIR,GAAJ;AACA,UAAIS,eAAe,GAAGF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,QAAR,GAAmBJ,OAAO,CAACG,UAAhD,GAA6DH,OAAO,CAACI,QAA3F;AACA,UAAIC,kBAAkB,GAAG,CAAzB;AACA,UAAIf,cAAc,GAAGU,OAAO,CAACV,cAA7B;AACA,UAAIgB,UAAU,GAAGN,OAAO,CAACM,UAAzB;AACA,UAAIF,QAAQ,GAAGJ,OAAO,CAACI,QAAvB;AACAxB,MAAAA,CAAC,CAACoB,OAAO,CAACO,SAAT,CAAD,CAAqBV,MAArB,CAA4BN,SAA5B;;AACA,UAAID,cAAJ,EAAoB;AAChB,aAAKkB,eAAL,CAAqBlB,cAArB,EAAqCC,SAArC,EAAgD,CAAhD;AACAc,QAAAA,kBAAkB;AACrB;;AACD,WAAK,IAAII,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGL,QAAlC,EAA4CK,QAAQ,EAApD,EAAwD;AACpDhB,QAAAA,GAAG,GAAGZ,UAAU,CAACe,aAAX,CAAyBV,YAAzB,CAAN;AACAK,QAAAA,SAAS,CAACQ,WAAV,CAAsBN,GAAtB;AACA,YAAIiB,gBAAgB,GAAG,CAACD,QAAQ,GAAG,CAAZ,IAAiBP,eAAjB,KAAqC,CAA5D;;AACA,YAAIF,OAAO,CAACW,QAAZ,EAAsB;AAClBlB,UAAAA,GAAG,CAACmB,SAAJ,GAAgBZ,OAAO,CAACW,QAAxB;AACH;;AACD,aAAK,IAAIE,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGb,OAAO,CAACc,SAAhD,EAA2DD,WAAW,EAAtE,EAA0E;AACtE,cAAIE,EAAE,GAAGlC,UAAU,CAACe,aAAX,CAAyB,IAAzB,CAAT;AACAH,UAAAA,GAAG,CAACM,WAAJ,CAAgBgB,EAAhB;;AACA,cAAIf,OAAO,CAACgB,SAAZ,EAAuB;AACnB,gBAAIhC,UAAU,CAACgB,OAAO,CAACgB,SAAT,CAAd,EAAmC;AAC/BD,cAAAA,EAAE,CAACH,SAAH,GAAeZ,OAAO,CAACgB,SAAR,CAAkBP,QAAlB,EAA4BI,WAA5B,CAAf;AACH,aAFD,MAEO;AACHE,cAAAA,EAAE,CAACH,SAAH,GAAeZ,OAAO,CAACgB,SAAvB;AACH;AACJ;;AACD,cAAIC,cAAc,GAAG,KAAK,CAA1B;AACA,cAAIC,OAAO,GAAG,KAAK,CAAnB;AACA,cAAIC,SAAS,GAAG,KAAK,CAArB;;AACA,cAAInB,OAAO,CAACoB,WAAZ,EAAyB;AACrBH,YAAAA,cAAc,GAAGjB,OAAO,CAACoB,WAAR,CAAoBL,EAApB,EAAwBN,QAAxB,EAAkCI,WAAlC,EAA+CP,UAA/C,CAAjB;AACAY,YAAAA,OAAO,GAAGD,cAAc,CAACI,GAAzB;AACAF,YAAAA,SAAS,GAAGF,cAAc,CAACK,KAA3B;AACAJ,YAAAA,OAAO,IAAInC,WAAW,CAACgC,EAAD,EAAKG,OAAL,EAAcC,SAAd,CAAtB;AACH;;AACD,cAAInB,OAAO,CAACuB,YAAR,IAAwBvB,OAAO,CAACuB,YAAR,CAAqBC,MAAjD,EAAyD;AACrD,gBAAIC,sBAAsB,GAAGzB,OAAO,CAAC0B,eAAR,GAA0B1B,OAAO,CAAC0B,eAAR,CAAwBjB,QAAxB,CAA1B,GAA8D,EAA3F;AACA,gBAAIkB,eAAe,GAAG;AAClBC,cAAAA,KAAK,EAAEjD,QAAQ,CAAC;AACZkD,gBAAAA,IAAI,EAAE7B,OAAO,CAAC8B,WAAR,GAAsB9B,OAAO,CAAC8B,WAAR,CAAoBrB,QAApB,EAA8BI,WAA9B,CAAtB,GAAmE,EAD7D;AAEZkB,gBAAAA,IAAI,EAAE/B,OAAO,CAACgC,WAAR,GAAsBhC,OAAO,CAACgC,WAAR,CAAoBvB,QAApB,CAAtB,GAAsD,KAAK;AAFrD,eAAD,EAGZgB,sBAHY,CADG;AAKlBlB,cAAAA,SAAS,EAAEtB,gBAAgB,CAACL,CAAC,CAACmC,EAAD,CAAF,CALT;AAMlBvB,cAAAA,KAAK,EAAEiB,QAAQ,GAAGT,OAAO,CAACc,SAAnB,GAA+BD;AANpB,aAAtB;;AAQA,gBAAIM,SAAJ,EAAe;AACX,kBAAIA,SAAS,CAACc,SAAd,EAAyB;AACrBN,gBAAAA,eAAe,CAACC,KAAhB,CAAsBK,SAAtB,GAAkCd,SAAS,CAACc,SAA5C;AACH;;AACD,kBAAId,SAAS,CAACe,OAAd,EAAuB;AACnBP,gBAAAA,eAAe,CAACC,KAAhB,CAAsBM,OAAtB,GAAgCf,SAAS,CAACe,OAA1C;AACH;;AACD,kBAAIf,SAAS,CAACgB,MAAd,EAAsB;AAClBR,gBAAAA,eAAe,CAACC,KAAhB,CAAsBO,MAAtB,GAA+BhB,SAAS,CAACgB,MAAzC;AACH;;AACD,kBAAIhB,SAAS,CAACiB,MAAd,EAAsB;AAClBT,gBAAAA,eAAe,CAACC,KAAhB,CAAsBQ,MAAtB,GAA+BjB,SAAS,CAACiB,MAAzC;AACH;AACJ;;AACDnC,YAAAA,iBAAiB,CAACoC,IAAlB,CAAuBrC,OAAO,CAACuB,YAAR,CAAqBC,MAArB,CAA4Bc,IAA5B,CAAiCtC,OAAO,CAACuB,YAAzC,EAAuDI,eAAvD,CAAvB;AACH,WAzBD,MAyBO,IAAI3B,OAAO,CAAC8B,WAAZ,EAAyB;AAC5BlD,YAAAA,CAAC,CAAC,OAAD,CAAD,CAAWiD,IAAX,CAAgB7B,OAAO,CAAC8B,WAAR,CAAoBrB,QAApB,EAA8BI,WAA9B,CAAhB,EAA4D0B,QAA5D,CAAqEvC,OAAO,CAACwC,gBAA7E,EAA+FC,QAA/F,CAAwG7D,CAAC,CAACmC,EAAD,CAAzG;AACH;AACJ;;AACD,YAAIzB,cAAc,IAAIoB,gBAAtB,EAAwC;AACpC,eAAKF,eAAL,CAAqBlB,cAArB,EAAqCC,SAArC,EAAgDc,kBAAhD;AACAA,UAAAA,kBAAkB;AACrB;AACJ;;AACD,aAAOJ,iBAAP;AACH;;;WACD,0BAAiByC,IAAjB,EAAuBP,MAAvB,EAA+BQ,UAA/B,EAA2C7B,SAA3C,EAAsDS,YAAtD,EAAoEnB,QAApE,EAA8EwC,WAA9E,EAA2F;AACvF,UAAIC,IAAI,GAAG,EAAX;;AACA,UAAIH,IAAI,KAAK,KAAKtD,QAAlB,EAA4B;AACxByD,QAAAA,IAAI,GAAG,KAAKC,wBAAL,CAA8BX,MAA9B,EAAsCQ,UAAtC,EAAkDpB,YAAlD,EAAgEnB,QAAhE,CAAP;AACH,OAFD,MAEO;AACHyC,QAAAA,IAAI,GAAG,KAAKE,0BAAL,CAAgCZ,MAAhC,EAAwCQ,UAAxC,EAAoD7B,SAApD,EAA+DS,YAA/D,EAA6EqB,WAA7E,CAAP;AACH;;AACD,aAAOC,IAAP;AACH;;;WACD,kCAAyBH,IAAzB,EAA+B5D,IAA/B,EAAqCkE,MAArC,EAA6C;AACzC,UAAIC,KAAJ;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIzC,QAAQ,GAAG,CAAf;AACAuC,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,UAAIG,OAAO,GAAGH,MAAM,CAACG,OAAP,IAAkB,IAAhC;AACA,UAAIC,aAAa,GAAGJ,MAAM,CAACI,aAAP,IAAwB,UAA5C;AACA,UAAIC,UAAU,GAAGL,MAAM,CAACK,UAAP,IAAqB,OAAtC;AACA,UAAIC,eAAe,GAAGN,MAAM,CAACM,eAA7B;AACA,UAAIC,aAAa,GAAGP,MAAM,CAACO,aAA3B;AACA,UAAIC,cAAc,GAAGR,MAAM,CAACQ,cAA5B;AACA,UAAIC,sBAAsB,GAAGT,MAAM,CAACS,sBAApC;;AAEA,eAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,YAAIA,IAAI,CAACP,aAAD,CAAR,EAAyB;AACrB,iBAAOO,IAAI,CAACP,aAAD,CAAJ,CAAoBzD,MAA3B;AACH;;AACD,eAAO,CAAP;AACH;;AAED,eAASiE,UAAT,CAAoB/B,IAApB,EAA0BgC,UAA1B,EAAsCrE,KAAtC,EAA6CV,IAA7C,EAAmD;AAC/C,YAAIgF,IAAI,GAAG;AACPC,UAAAA,OAAO,EAAElF,UAAU,CAACe,aAAX,CAAyBuD,OAAzB,CADF;AAEPU,UAAAA,UAAU,EAAEA;AAFL,SAAX;;AAIA,YAAIL,cAAJ,EAAoB;AAChBM,UAAAA,IAAI,CAACC,OAAL,CAAanD,SAAb,GAAyB4C,cAAzB;AACH;;AACD,YAAIQ,QAAQ,GAAGnF,UAAU,CAACoF,cAAX,CAA0BpC,IAA1B,CAAf;;AACA,YAAI,eAAe,OAAO4B,sBAA1B,EAAkD;AAC9CA,UAAAA,sBAAsB,CAACK,IAAI,CAACC,OAAN,EAAeC,QAAf,EAAyBxE,KAAzB,EAAgCV,IAAhC,CAAtB;AACH,SAFD,MAEO;AACHgF,UAAAA,IAAI,CAACC,OAAL,CAAahE,WAAb,CAAyBiE,QAAzB;AACH;;AACD,eAAOF,IAAP;AACH;;AAAA,OAAE,YAAW;AACVb,QAAAA,KAAK,GAAGpE,UAAU,CAACe,aAAX,CAAyB,OAAzB,CAAR;;AACA,YAAI0D,eAAJ,EAAqB;AACjBL,UAAAA,KAAK,CAACrC,SAAN,GAAkB0C,eAAlB;AACH;AACJ,OALE,EAAF;AAMD,OAAE,SAASY,aAAT,CAAuBpF,IAAvB,EAA6B;AAC3B,aAAK,IAAIqF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrF,IAAI,CAACa,MAAzB,EAAiCwE,CAAC,EAAlC,EAAsC;AAClC,cAAIN,UAAU,GAAGH,aAAa,CAAC5E,IAAI,CAACqF,CAAD,CAAL,CAA9B;AACA,cAAIL,IAAI,GAAGF,UAAU,CAAC9E,IAAI,CAACqF,CAAD,CAAJ,CAAQd,UAAR,CAAD,EAAsBQ,UAAtB,EAAkCM,CAAlC,EAAqCrF,IAAI,CAACqF,CAAD,CAAzC,CAArB;;AACA,cAAI,CAACjB,WAAW,CAACzC,QAAD,CAAhB,EAA4B;AACxByC,YAAAA,WAAW,CAACzC,QAAD,CAAX,GAAwB,EAAxB;AACH;;AACDyC,UAAAA,WAAW,CAACzC,QAAD,CAAX,CAAsB4B,IAAtB,CAA2ByB,IAA3B;;AACA,cAAID,UAAJ,EAAgB;AACZK,YAAAA,aAAa,CAACpF,IAAI,CAACqF,CAAD,CAAJ,CAAQf,aAAR,CAAD,CAAb;AACH,WAFD,MAEO;AACH3C,YAAAA,QAAQ;AACX;AACJ;AACJ,OAdC,CAcA3B,IAdA,CAAF;AAeA,WAAKoE,WAAW,CAACkB,OAAZ,CAAqB,UAASC,KAAT,EAAgB;AACtC,YAAI5E,GAAG,GAAGZ,UAAU,CAACe,aAAX,CAAyBV,YAAzB,CAAV;;AACA,YAAIqE,aAAJ,EAAmB;AACf9D,UAAAA,GAAG,CAACmB,SAAJ,GAAgB2C,aAAhB;AACH;;AACD,YAAIe,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIH,CAAC,GAAGE,KAAK,CAAC1E,MAAN,GAAe,CAA5B,EAA+BwE,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AACxC,cAAII,IAAI,GAAGF,KAAK,CAACF,CAAC,GAAG,CAAL,CAAhB;AACA,cAAIK,OAAO,GAAGH,KAAK,CAACF,CAAD,CAAL,CAASN,UAAvB;;AACA,cAAIU,IAAI,IAAIA,IAAI,CAACV,UAAjB,EAA6B;AACzBW,YAAAA,OAAO,IAAID,IAAI,CAACV,UAAhB;AACH;;AACDS,UAAAA,QAAQ,CAACjC,IAAT,CAAcmC,OAAd;AACH;;AACDF,QAAAA,QAAQ,CAACG,OAAT;AACAJ,QAAAA,KAAK,CAACD,OAAN,CAAe,UAASN,IAAT,EAAetE,KAAf,EAAsB;AACjC,cAAI8E,QAAQ,CAAC9E,KAAD,CAAZ,EAAqB;AACjBsE,YAAAA,IAAI,CAACC,OAAL,CAAaW,YAAb,CAA0B,SAA1B,EAAqCJ,QAAQ,CAAC9E,KAAD,CAA7C;AACH;;AACDC,UAAAA,GAAG,CAACM,WAAJ,CAAgB+D,IAAI,CAACC,OAArB;AACH,SALD;AAMAd,QAAAA,KAAK,CAAClD,WAAN,CAAkBN,GAAlB;AACH,OAtBI,CAAL;AAuBA,aAAOwD,KAAP;AACH;;;WACD,kCAAyB0B,KAAzB,EAAgCC,WAAhC,EAA6CjC,UAA7C,EAAyDpB,YAAzD,EAAuE;AACnE,UAAIsD,YAAY,GAAGC,SAAS,CAACnF,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWmF,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,CAApF;AACA,UAAIT,KAAK,GAAG,EAAZ;AACA,UAAIU,KAAK,GAAGJ,KAAK,CAACI,KAAlB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACpF,MAAtB;;AACA,WAAK,IAAIwE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,WAAW,GAAGC,YAAlC,EAAgDV,CAAC,EAAjD,EAAqD;AACjD,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAChC,cAAIC,UAAU,GAAGtG,CAAC,CAAC,OAAD,CAAlB;AACA,cAAIkF,IAAI,GAAG,EAAX;;AACA,cAAIvC,YAAY,IAAIA,YAAY,CAACC,MAAjC,EAAyC;AACrC,gBAAIG,eAAe,GAAG;AAClBC,cAAAA,KAAK,EAAEmD,KAAK,CAACE,CAAD,CADM;AAElB1E,cAAAA,SAAS,EAAEtB,gBAAgB,CAACiG,UAAD,CAFT;AAGlB1F,cAAAA,KAAK,EAAE2E,CAAC,GAAGa,SAAJ,GAAgBC;AAHL,aAAtB;;AAKA,gBAAIN,KAAK,CAAC7F,IAAV,EAAgB;AACZ6C,cAAAA,eAAe,CAACC,KAAhB,CAAsB9C,IAAtB,GAA6B6F,KAAK,CAAC7F,IAAN,CAAWmG,CAAX,CAA7B;AACH;;AACDnB,YAAAA,IAAI,CAACqB,QAAL,GAAgB5D,YAAY,CAACC,MAAb,CAAoBc,IAApB,CAAyBf,YAAzB,EAAuCI,eAAvC,CAAhB;AACH,WAVD,MAUO;AACHuD,YAAAA,UAAU,CAACrD,IAAX,CAAgBkD,KAAK,CAACE,CAAD,CAAL,CAASpD,IAAzB,EAA+BuD,IAA/B,CAAoC,OAApC,EAA6CL,KAAK,CAACE,CAAD,CAAL,CAASpD,IAAtD,EAA4DU,QAA5D,CAAqE,mCAArE;AACA2C,YAAAA,UAAU,GAAGtG,CAAC,CAAC,OAAD,CAAD,CAAWiB,MAAX,CAAkBqF,UAAlB,CAAb;AACH;;AACD,cAAIG,QAAQ,GAAGrG,UAAU,CAAC2D,UAAU,CAAC2C,gBAAZ,CAAV,GAA0C3C,UAAU,CAAC2C,gBAAX,CAA4BL,CAA5B,CAA1C,GAA2EtC,UAAU,CAAC2C,gBAArG;AACAxB,UAAAA,IAAI,CAACC,OAAL,GAAemB,UAAU,CAAC3C,QAAX,CAAoB8C,QAApB,CAAf;AACAhB,UAAAA,KAAK,CAAChC,IAAN,CAAWyB,IAAX;AACH;AACJ;;AACD,aAAOO,KAAP;AACH;;;WACD,kCAAyBlC,MAAzB,EAAiCQ,UAAjC,EAA6CpB,YAA7C,EAA2D;AACvD,UAAIgE,aAAa,GAAG,EAApB;AACA,UAAIX,WAAW,GAAG,CAAlB;AACA,UAAIY,UAAU,GAAG,EAAjB;;AACA,UAAIC,YAAY,GAAG,SAAfA,YAAe,CAAS3B,IAAT,EAAe;AAC9B,YAAIA,IAAI,CAACqB,QAAT,EAAmB;AACfI,UAAAA,aAAa,CAAClD,IAAd,CAAmByB,IAAI,CAACqB,QAAxB;AACH;AACJ,OAJD;;AAKA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,MAAM,CAACxC,MAA3B,EAAmCwE,CAAC,EAApC,EAAwC;AACpC,YAAIA,CAAC,GAAG,CAAR,EAAW;AACPS,UAAAA,WAAW,GAAGzC,MAAM,CAACgC,CAAC,GAAG,CAAL,CAAN,CAAcY,KAAd,CAAoBpF,MAApB,GAA6BiF,WAA3C;AACH;;AACD,YAAIP,KAAK,GAAG,KAAKqB,wBAAL,CAA8BvD,MAAM,CAACgC,CAAD,CAApC,EAAyCS,WAAzC,EAAsDjC,UAAtD,EAAkEpB,YAAlE,CAAZ;;AACA8C,QAAAA,KAAK,CAACD,OAAN,CAAcqB,YAAd;AACAD,QAAAA,UAAU,CAACnD,IAAX,CAAgBgC,KAAhB;AACH;;AACD,UAAIxB,IAAI,GAAG,EAAX;AACA,UAAI1C,UAAU,GAAGqF,UAAU,CAAC7F,MAA5B;;AACA,WAAK,IAAIgG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGxF,UAAtB,EAAkCwF,EAAE,EAApC,EAAwC;AACpC9C,QAAAA,IAAI,CAACR,IAAL,CAAUzD,CAAC,CAAC,OAAD,CAAD,CAAW2D,QAAX,CAAoBI,UAAU,CAACiD,mBAA/B,CAAV;AACH;;AACD,WAAK,IAAIC,GAAG,GAAG1F,UAAU,GAAG,CAA5B,EAA+B0F,GAAG,IAAI,CAAtC,EAAyCA,GAAG,EAA5C,EAAgD;AAC5C,YAAIC,mBAAmB,GAAGN,UAAU,CAACK,GAAD,CAAV,CAAgBlG,MAA1C;;AACA,aAAK,IAAIsF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,mBAApB,EAAyCb,CAAC,EAA1C,EAA8C;AAC1CpC,UAAAA,IAAI,CAACgD,GAAD,CAAJ,CAAUhG,MAAV,CAAiB2F,UAAU,CAACK,GAAD,CAAV,CAAgBZ,CAAhB,EAAmBlB,OAApC;AACH;AACJ;;AACD,aAAO;AACHgC,QAAAA,QAAQ,EAAEnH,CAAC,CAAC,OAAD,CAAD,CAAW2D,QAAX,CAAoB,mCAApB,EAAyD1C,MAAzD,CAAgEgD,IAAhE,CADP;AAEH0C,QAAAA,aAAa,EAAEA;AAFZ,OAAP;AAIH;;;WACD,oCAA2BpD,MAA3B,EAAmCQ,UAAnC,EAA+C7B,SAA/C,EAA0DS,YAA1D,EAAwEqB,WAAxE,EAAqF;AACjF,UAAIgC,WAAW,GAAG,CAAlB;AACA,UAAIzE,UAAU,GAAGgC,MAAM,CAACxC,MAAxB;AACA,UAAIkD,IAAI,GAAG,EAAX;AACA,UAAI0C,aAAa,GAAG,EAApB;AACA,UAAIV,YAAY,GAAGjC,WAAW,GAAG9B,SAAH,GAAe,CAA7C;;AACA,UAAI2E,YAAY,GAAG,SAAfA,YAAe,CAAS3B,IAAT,EAAe;AAC9B,YAAIA,IAAI,CAACqB,QAAT,EAAmB;AACfI,UAAAA,aAAa,CAAClD,IAAd,CAAmByB,IAAI,CAACqB,QAAxB;AACH;;AACD,eAAOrB,IAAI,CAACC,OAAZ;AACH,OALD;;AAMA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhE,UAApB,EAAgCgE,CAAC,EAAjC,EAAqC;AACjC,YAAIA,CAAC,GAAG,CAAR,EAAW;AACPS,UAAAA,WAAW,GAAGzC,MAAM,CAACgC,CAAC,GAAG,CAAL,CAAN,CAAcY,KAAd,CAAoBpF,MAApB,GAA6BiF,WAA3C;AACH;;AACD,YAAIP,KAAK,GAAG,KAAK2B,oBAAL,CAA0B7D,MAAM,CAACgC,CAAD,CAAhC,EAAqCS,WAArC,EAAkDjC,UAAlD,EAA8DpB,YAA9D,EAA4EsD,YAA5E,CAAZ;;AACAhC,QAAAA,IAAI,CAACR,IAAL,CAAUzD,CAAC,CAAC,MAAD,CAAD,CAAU2D,QAAV,CAAmBI,UAAU,CAACY,aAA9B,EAA6C1D,MAA7C,CAAoDwE,KAAK,CAAC4B,GAAN,CAAUR,YAAV,CAApD,CAAV;AACH;;AACD,UAAIS,YAAY,GAAGrD,IAAI,CAAC1C,UAAU,GAAG,CAAd,CAAJ,CAAqBT,IAArB,CAA0B,IAA1B,EAAgCC,MAAnD;;AACA,WAAK,IAAIsF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9E,UAApB,EAAgC8E,CAAC,EAAjC,EAAqC;AACjC,YAAIkB,KAAK,GAAGtD,IAAI,CAACoC,CAAD,CAAJ,CAAQvF,IAAR,CAAa,IAAb,CAAZ;AACA,YAAI0G,OAAO,GAAGF,YAAY,GAAGC,KAAK,CAACxG,MAAnC;;AACA,YAAI,CAACiD,WAAL,EAAkB;AACdwD,UAAAA,OAAO,IAAItF,SAAX;AACH;;AACD,YAAIsF,OAAO,GAAG,CAAV,IAAe,MAAMvB,YAArB,IAAqCjC,WAAW,IAAIzC,UAAU,GAAG,CAArE,EAAwE;AACpEgG,UAAAA,KAAK,CAACf,IAAN,CAAW,SAAX,EAAsBgB,OAAtB;AACH;AACJ;;AACD,aAAO;AACHL,QAAAA,QAAQ,EAAElD,IADP;AAEH0C,QAAAA,aAAa,EAAEA;AAFZ,OAAP;AAIH;;;WACD,8BAAqBZ,KAArB,EAA4BC,WAA5B,EAAyCjC,UAAzC,EAAqDpB,YAArD,EAAmEsD,YAAnE,EAAiF;AAC7EA,MAAAA,YAAY,GAAGA,YAAY,IAAI,CAA/B;AACAD,MAAAA,WAAW,IAAIC,YAAf;AACA,UAAIR,KAAK,GAAG,EAAZ;AACA,UAAIU,KAAK,GAAGJ,KAAK,CAACI,KAAlB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACpF,MAAtB;;AACA,WAAK,IAAIwE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,WAApB,EAAiCT,CAAC,EAAlC,EAAsC;AAClC,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAChC,cAAIC,UAAU,GAAGtG,CAAC,CAAC,OAAD,CAAlB;AACA,cAAIkF,IAAI,GAAG,EAAX;;AACA,cAAIvC,YAAY,IAAIA,YAAY,CAACC,MAAjC,EAAyC;AACrC,gBAAIG,eAAe,GAAG;AAClBC,cAAAA,KAAK,EAAEmD,KAAK,CAACE,CAAD,CADM;AAElB1E,cAAAA,SAAS,EAAEtB,gBAAgB,CAACiG,UAAD,CAFT;AAGlB1F,cAAAA,KAAK,EAAE2E,CAAC,GAAGa,SAAJ,GAAgBC;AAHL,aAAtB;;AAKA,gBAAIN,KAAK,CAAC7F,IAAV,EAAgB;AACZ6C,cAAAA,eAAe,CAACC,KAAhB,CAAsB9C,IAAtB,GAA6B6F,KAAK,CAAC7F,IAAN,CAAWmG,CAAX,CAA7B;AACH;;AACDnB,YAAAA,IAAI,CAACqB,QAAL,GAAgB5D,YAAY,CAACC,MAAb,CAAoBc,IAApB,CAAyBf,YAAzB,EAAuCI,eAAvC,CAAhB;AACH,WAVD,MAUO;AACHuD,YAAAA,UAAU,CAACrD,IAAX,CAAgBkD,KAAK,CAACE,CAAD,CAAL,CAASpD,IAAzB;AACAqD,YAAAA,UAAU,GAAGtG,CAAC,CAAC,OAAD,CAAD,CAAWiB,MAAX,CAAkBqF,UAAlB,CAAb;AACH;;AACDA,UAAAA,UAAU,CAAC3C,QAAX,CAAoBI,UAAU,CAAC0D,uBAA/B;AACA,cAAIhB,QAAQ,GAAG,KAAK,CAApB;;AACA,cAAIrG,UAAU,CAAC2D,UAAU,CAAC2C,gBAAZ,CAAd,EAA6C;AACzCD,YAAAA,QAAQ,GAAG1C,UAAU,CAAC2C,gBAAX,CAA4BL,CAA5B,CAAX;AACH,WAFD,MAEO;AACHI,YAAAA,QAAQ,GAAG1C,UAAU,CAAC2C,gBAAtB;AACH;;AACDxB,UAAAA,IAAI,CAACC,OAAL,GAAenF,CAAC,CAAC,MAAD,CAAD,CAAU2D,QAAV,CAAmB8C,QAAnB,EAA6BxF,MAA7B,CAAoCqF,UAApC,CAAf;AACAb,UAAAA,KAAK,CAAChC,IAAN,CAAWyB,IAAX;AACH;AACJ;;AACD,aAAOO,KAAP;AACH;;;;;;AAEL,eAAe;AACXiC,EAAAA,YAAY,EAAE,IAAInH,qBAAJ;AADH,CAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/table_creator.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nvar ROW_SELECTOR = \"tr\";\r\nclass SchedulerTableCreator {\r\n    constructor() {\r\n        this.VERTICAL = \"vertical\";\r\n        this.HORIZONTAL = \"horizontal\"\r\n    }\r\n    insertAllDayRow(allDayElements, tableBody, index) {\r\n        if (allDayElements[index]) {\r\n            var row = allDayElements[index].find(ROW_SELECTOR);\r\n            if (!row.length) {\r\n                row = $(domAdapter.createElement(ROW_SELECTOR));\r\n                row.append(allDayElements[index].get(0))\r\n            }\r\n            tableBody.appendChild(row.get ? row.get(0) : row)\r\n        }\r\n    }\r\n    makeTable(options) {\r\n        var tableBody = domAdapter.createElement(\"tbody\");\r\n        var templateCallbacks = [];\r\n        var row;\r\n        var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\r\n        var allDayElementIndex = 0;\r\n        var allDayElements = options.allDayElements;\r\n        var groupIndex = options.groupIndex;\r\n        var rowCount = options.rowCount;\r\n        $(options.container).append(tableBody);\r\n        if (allDayElements) {\r\n            this.insertAllDayRow(allDayElements, tableBody, 0);\r\n            allDayElementIndex++\r\n        }\r\n        for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\r\n            row = domAdapter.createElement(ROW_SELECTOR);\r\n            tableBody.appendChild(row);\r\n            var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;\r\n            if (options.rowClass) {\r\n                row.className = options.rowClass\r\n            }\r\n            for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {\r\n                var td = domAdapter.createElement(\"td\");\r\n                row.appendChild(td);\r\n                if (options.cellClass) {\r\n                    if (isFunction(options.cellClass)) {\r\n                        td.className = options.cellClass(rowIndex, columnIndex)\r\n                    } else {\r\n                        td.className = options.cellClass\r\n                    }\r\n                }\r\n                var cellDataObject = void 0;\r\n                var dataKey = void 0;\r\n                var dataValue = void 0;\r\n                if (options.getCellData) {\r\n                    cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);\r\n                    dataKey = cellDataObject.key;\r\n                    dataValue = cellDataObject.value;\r\n                    dataKey && elementData(td, dataKey, dataValue)\r\n                }\r\n                if (options.cellTemplate && options.cellTemplate.render) {\r\n                    var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};\r\n                    var templateOptions = {\r\n                        model: _extends({\r\n                            text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : \"\",\r\n                            date: options.getCellDate ? options.getCellDate(rowIndex) : void 0\r\n                        }, additionalTemplateData),\r\n                        container: getPublicElement($(td)),\r\n                        index: rowIndex * options.cellCount + columnIndex\r\n                    };\r\n                    if (dataValue) {\r\n                        if (dataValue.startDate) {\r\n                            templateOptions.model.startDate = dataValue.startDate\r\n                        }\r\n                        if (dataValue.endDate) {\r\n                            templateOptions.model.endDate = dataValue.endDate\r\n                        }\r\n                        if (dataValue.groups) {\r\n                            templateOptions.model.groups = dataValue.groups\r\n                        }\r\n                        if (dataValue.allDay) {\r\n                            templateOptions.model.allDay = dataValue.allDay\r\n                        }\r\n                    }\r\n                    templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions))\r\n                } else if (options.getCellText) {\r\n                    $(\"<div>\").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo($(td))\r\n                }\r\n            }\r\n            if (allDayElements && isLastRowInGroup) {\r\n                this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\r\n                allDayElementIndex++\r\n            }\r\n        }\r\n        return templateCallbacks\r\n    }\r\n    makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\r\n        var rows = [];\r\n        if (type === this.VERTICAL) {\r\n            rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount)\r\n        } else {\r\n            rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate)\r\n        }\r\n        return rows\r\n    }\r\n    makeGroupedTableFromJSON(type, data, config) {\r\n        var table;\r\n        var cellStorage = [];\r\n        var rowIndex = 0;\r\n        config = config || {};\r\n        var cellTag = config.cellTag || \"td\";\r\n        var childrenField = config.childrenField || \"children\";\r\n        var titleField = config.titleField || \"title\";\r\n        var groupTableClass = config.groupTableClass;\r\n        var groupRowClass = config.groupRowClass;\r\n        var groupCellClass = config.groupCellClass;\r\n        var groupCellCustomContent = config.groupCellCustomContent;\r\n\r\n        function getChildCount(item) {\r\n            if (item[childrenField]) {\r\n                return item[childrenField].length\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function createCell(text, childCount, index, data) {\r\n            var cell = {\r\n                element: domAdapter.createElement(cellTag),\r\n                childCount: childCount\r\n            };\r\n            if (groupCellClass) {\r\n                cell.element.className = groupCellClass\r\n            }\r\n            var cellText = domAdapter.createTextNode(text);\r\n            if (\"function\" === typeof groupCellCustomContent) {\r\n                groupCellCustomContent(cell.element, cellText, index, data)\r\n            } else {\r\n                cell.element.appendChild(cellText)\r\n            }\r\n            return cell\r\n        }! function() {\r\n            table = domAdapter.createElement(\"table\");\r\n            if (groupTableClass) {\r\n                table.className = groupTableClass\r\n            }\r\n        }();\r\n        ! function generateCells(data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var childCount = getChildCount(data[i]);\r\n                var cell = createCell(data[i][titleField], childCount, i, data[i]);\r\n                if (!cellStorage[rowIndex]) {\r\n                    cellStorage[rowIndex] = []\r\n                }\r\n                cellStorage[rowIndex].push(cell);\r\n                if (childCount) {\r\n                    generateCells(data[i][childrenField])\r\n                } else {\r\n                    rowIndex++\r\n                }\r\n            }\r\n        }(data);\r\n        void cellStorage.forEach((function(cells) {\r\n            var row = domAdapter.createElement(ROW_SELECTOR);\r\n            if (groupRowClass) {\r\n                row.className = groupRowClass\r\n            }\r\n            var rowspans = [];\r\n            for (var i = cells.length - 1; i >= 0; i--) {\r\n                var prev = cells[i + 1];\r\n                var rowspan = cells[i].childCount;\r\n                if (prev && prev.childCount) {\r\n                    rowspan *= prev.childCount\r\n                }\r\n                rowspans.push(rowspan)\r\n            }\r\n            rowspans.reverse();\r\n            cells.forEach((function(cell, index) {\r\n                if (rowspans[index]) {\r\n                    cell.element.setAttribute(\"rowSpan\", rowspans[index])\r\n                }\r\n                row.appendChild(cell.element)\r\n            }));\r\n            table.appendChild(row)\r\n        }));\r\n        return table\r\n    }\r\n    _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {\r\n        var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount * repeatByDate; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = $(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: getPublicElement($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\r\n                    $container = $(\"<div>\").append($container)\r\n                }\r\n                var cssClass = isFunction(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\r\n                cell.element = $container.addClass(cssClass);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    }\r\n    _makeVerticalGroupedRows(groups, cssClasses, cellTemplate) {\r\n        var cellTemplates = [];\r\n        var repeatCount = 1;\r\n        var cellsArray = [];\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n        };\r\n        for (var i = 0; i < groups.length; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\r\n            cells.forEach(cellIterator);\r\n            cellsArray.push(cells)\r\n        }\r\n        var rows = [];\r\n        var groupCount = cellsArray.length;\r\n        for (var _i = 0; _i < groupCount; _i++) {\r\n            rows.push($(\"<div>\").addClass(cssClasses.groupHeaderRowClass))\r\n        }\r\n        for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\r\n            var currentColumnLength = cellsArray[_i2].length;\r\n            for (var j = 0; j < currentColumnLength; j++) {\r\n                rows[_i2].append(cellsArray[_i2][j].element)\r\n            }\r\n        }\r\n        return {\r\n            elements: $(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\r\n            cellTemplates: cellTemplates\r\n        }\r\n    }\r\n    _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\r\n        var repeatCount = 1;\r\n        var groupCount = groups.length;\r\n        var rows = [];\r\n        var cellTemplates = [];\r\n        var repeatByDate = groupByDate ? cellCount : 1;\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n            return cell.element\r\n        };\r\n        for (var i = 0; i < groupCount; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\r\n            rows.push($(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)))\r\n        }\r\n        var maxCellCount = rows[groupCount - 1].find(\"th\").length;\r\n        for (var j = 0; j < groupCount; j++) {\r\n            var $cell = rows[j].find(\"th\");\r\n            var colspan = maxCellCount / $cell.length;\r\n            if (!groupByDate) {\r\n                colspan *= cellCount\r\n            }\r\n            if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\r\n                $cell.attr(\"colSpan\", colspan)\r\n            }\r\n        }\r\n        return {\r\n            elements: rows,\r\n            cellTemplates: cellTemplates\r\n        }\r\n    }\r\n    _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\r\n        repeatByDate = repeatByDate || 1;\r\n        repeatCount *= repeatByDate;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = $(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: getPublicElement($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text);\r\n                    $container = $(\"<div>\").append($container)\r\n                }\r\n                $container.addClass(cssClasses.groupHeaderContentClass);\r\n                var cssClass = void 0;\r\n                if (isFunction(cssClasses.groupHeaderClass)) {\r\n                    cssClass = cssClasses.groupHeaderClass(j)\r\n                } else {\r\n                    cssClass = cssClasses.groupHeaderClass\r\n                }\r\n                cell.element = $(\"<th>\").addClass(cssClass).append($container);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    }\r\n}\r\nexport default {\r\n    tableCreator: new SchedulerTableCreator\r\n};\r\n"]},"metadata":{},"sourceType":"module"}