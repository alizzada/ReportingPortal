{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../core/component_registrator\";\nimport config from \"../../core/config\";\nimport devices from \"../../core/devices\";\nimport $ from \"../../core/renderer\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport { EmptyTemplate } from \"../../core/templates/empty_template\";\nimport { inArray } from \"../../core/utils/array\";\nimport browser from \"../../core/utils/browser\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { noop } from \"../../core/utils/common\";\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport dateUtils from \"../../core/utils/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { Deferred, when, fromPromise } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { touch } from \"../../core/utils/support\";\nimport { isDefined, isString, isObject, isFunction, isEmptyObject, isDeferred, isPromise } from \"../../core/utils/type\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport DataHelperMixin from \"../../data_helper\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport { custom as customDialog } from \"../dialog\";\nimport { isMaterial } from \"../themes\";\nimport errors from \"../widget/ui.errors\";\nimport Widget from \"../widget/ui.widget\";\nimport AppointmentPopup from \"./appointmentPopup\";\nimport { CompactAppointmentsHelper } from \"./compactAppointmentsHelper\";\nimport { DesktopTooltipStrategy } from \"./tooltip_strategies/desktopTooltipStrategy\";\nimport { MobileTooltipStrategy } from \"./tooltip_strategies/mobileTooltipStrategy\";\nimport { hide as hideLoading, show as showLoading } from \"./loading\";\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\nimport SchedulerAppointmentModel from \"./appointment_model\";\nimport { Header } from \"./header/header\";\nimport { ResourceManager } from \"./resources/resourceManager\";\nimport subscribes from \"./subscribes\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport timeZoneUtils from \"./utils.timeZone\";\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\nimport AppointmentAdapter from \"./appointmentAdapter\";\nimport { TimeZoneCalculator } from \"./timeZoneCalculator\";\nimport { AppointmentTooltipInfo } from \"./dataStructures\";\nimport { AppointmentSettingsGenerator } from \"./appointmentSettingsGenerator\";\nimport AppointmentFilter from \"./appointments/appointmentFilter\";\nimport utils from \"./utils\";\nvar MINUTES_IN_HOUR = 60;\nvar WIDGET_CLASS = \"dx-scheduler\";\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\nvar WIDGET_WIN_NO_TOUCH_CLASS = \"\".concat(WIDGET_CLASS, \"-win-no-touch\");\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\nvar WIDGET_SMALL_WIDTH = 400;\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\nvar VIEWS_CONFIG = {\n  day: {\n    workSpace: SchedulerWorkSpaceDay,\n    renderingStrategy: \"vertical\"\n  },\n  week: {\n    workSpace: SchedulerWorkSpaceWeek,\n    renderingStrategy: \"vertical\"\n  },\n  workWeek: {\n    workSpace: SchedulerWorkSpaceWorkWeek,\n    renderingStrategy: \"vertical\"\n  },\n  month: {\n    workSpace: SchedulerWorkSpaceMonth,\n    renderingStrategy: \"horizontalMonth\"\n  },\n  timelineDay: {\n    workSpace: SchedulerTimelineDay,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWeek: {\n    workSpace: SchedulerTimelineWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWorkWeek: {\n    workSpace: SchedulerTimelineWorkWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineMonth: {\n    workSpace: SchedulerTimelineMonth,\n    renderingStrategy: \"horizontalMonthLine\"\n  },\n  agenda: {\n    workSpace: SchedulerAgenda,\n    renderingStrategy: \"agenda\"\n  }\n};\nvar StoreEventNames = {\n  ADDING: \"onAppointmentAdding\",\n  ADDED: \"onAppointmentAdded\",\n  DELETING: \"onAppointmentDeleting\",\n  DELETED: \"onAppointmentDeleted\",\n  UPDATING: \"onAppointmentUpdating\",\n  UPDATED: \"onAppointmentUpdated\"\n};\nvar RECURRENCE_EDITING_MODE = {\n  SERIES: \"editSeries\",\n  OCCURENCE: \"editOccurence\",\n  CANCEL: \"cancel\"\n};\n\nvar Scheduler = /*#__PURE__*/function (_Widget) {\n  _inherits(Scheduler, _Widget);\n\n  var _super = _createSuper(Scheduler);\n\n  function Scheduler() {\n    _classCallCheck(this, Scheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Scheduler, [{\n    key: \"appointmentFilter\",\n    get: function get() {\n      return new AppointmentFilter(this);\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      var defaultOptions = extend(_get(_getPrototypeOf(Scheduler.prototype), \"_getDefaultOptions\", this).call(this), {\n        views: [\"day\", \"week\"],\n        currentView: \"day\",\n        currentDate: dateUtils.trimTime(new Date()),\n        min: void 0,\n        max: void 0,\n        dateSerializationFormat: void 0,\n        firstDayOfWeek: void 0,\n        groups: [],\n        resources: [],\n        dataSource: null,\n        customizeDateNavigatorText: void 0,\n        appointmentTemplate: \"item\",\n        dropDownAppointmentTemplate: \"dropDownAppointment\",\n        appointmentCollectorTemplate: \"appointmentCollector\",\n        dataCellTemplate: null,\n        timeCellTemplate: null,\n        resourceCellTemplate: null,\n        dateCellTemplate: null,\n        startDayHour: 0,\n        endDayHour: 24,\n        editing: {\n          allowAdding: true,\n          allowDeleting: true,\n          allowDragging: true,\n          allowResizing: true,\n          allowUpdating: true,\n          allowTimeZoneEditing: false,\n          allowEditingTimeZones: false\n        },\n        showAllDayPanel: true,\n        showCurrentTimeIndicator: true,\n        shadeUntilCurrentTime: false,\n        indicatorUpdateInterval: 3e5,\n        indicatorTime: void 0,\n        recurrenceEditMode: \"dialog\",\n        cellDuration: 30,\n        maxAppointmentsPerCell: \"auto\",\n        selectedCellData: [],\n        groupByDate: false,\n        onAppointmentRendered: null,\n        onAppointmentClick: null,\n        onAppointmentDblClick: null,\n        onAppointmentContextMenu: null,\n        onCellClick: null,\n        onCellContextMenu: null,\n        onAppointmentAdding: null,\n        onAppointmentAdded: null,\n        onAppointmentUpdating: null,\n        onAppointmentUpdated: null,\n        onAppointmentDeleting: null,\n        onAppointmentDeleted: null,\n        onAppointmentFormOpening: null,\n        appointmentTooltipTemplate: \"appointmentTooltip\",\n        appointmentPopupTemplate: \"appointmentPopup\",\n        crossScrollingEnabled: false,\n        useDropDownViewSwitcher: false,\n        startDateExpr: \"startDate\",\n        endDateExpr: \"endDate\",\n        textExpr: \"text\",\n        descriptionExpr: \"description\",\n        allDayExpr: \"allDay\",\n        recurrenceRuleExpr: \"recurrenceRule\",\n        recurrenceExceptionExpr: \"recurrenceException\",\n        disabledExpr: \"disabled\",\n        remoteFiltering: false,\n        timeZone: \"\",\n        startDateTimeZoneExpr: \"startDateTimeZone\",\n        endDateTimeZoneExpr: \"endDateTimeZone\",\n        noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\n        adaptivityEnabled: false,\n        allowMultipleCellSelection: true,\n        scrolling: {\n          mode: \"standard\"\n        },\n        renovateRender: true,\n        _draggingMode: \"outlook\",\n        _appointmentTooltipOffset: {\n          x: 0,\n          y: 0\n        },\n        _appointmentTooltipButtonsPosition: \"bottom\",\n        _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\n        _dropDownButtonIcon: \"overflow\",\n        _appointmentCountPerCell: 2,\n        _collectorOffset: 0,\n        _appointmentOffset: 26\n      });\n      return extend(true, defaultOptions, {\n        integrationOptions: {\n          useDeferUpdateForTemplates: false\n        }\n      });\n    }\n  }, {\n    key: \"_defaultOptionsRules\",\n    value: function _defaultOptionsRules() {\n      return _get(_getPrototypeOf(Scheduler.prototype), \"_defaultOptionsRules\", this).call(this).concat([{\n        device: function device() {\n          return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n        },\n        options: {\n          focusStateEnabled: true\n        }\n      }, {\n        device: function device() {\n          return !devices.current().generic;\n        },\n        options: {\n          useDropDownViewSwitcher: true,\n          editing: {\n            allowDragging: false,\n            allowResizing: false\n          }\n        }\n      }, {\n        device: function device() {\n          return isMaterial();\n        },\n        options: {\n          useDropDownViewSwitcher: true,\n          dateCellTemplate: function dateCellTemplate(data, index, element) {\n            var text = data.text;\n            text.split(\" \").forEach(function (text, index) {\n              var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\n              $(element).append(span);\n\n              if (!index) {\n                $(element).append(\" \");\n              }\n            });\n          },\n          _appointmentTooltipOffset: {\n            x: 0,\n            y: 11\n          },\n          _appointmentTooltipButtonsPosition: \"top\",\n          _appointmentTooltipOpenButtonText: null,\n          _dropDownButtonIcon: \"chevrondown\",\n          _appointmentCountPerCell: 1,\n          _collectorOffset: 20,\n          _appointmentOffset: 30\n        }\n      }]);\n    }\n  }, {\n    key: \"_setDeprecatedOptions\",\n    value: function _setDeprecatedOptions() {\n      _get(_getPrototypeOf(Scheduler.prototype), \"_setDeprecatedOptions\", this).call(this);\n\n      extend(this._deprecatedOptions, {\n        dropDownAppointmentTemplate: {\n          since: \"19.2\",\n          message: \"appointmentTooltipTemplate\"\n        },\n        allowEditingTimeZones: {\n          since: \"20.1\",\n          alias: \"allowTimeZoneEditing\"\n        }\n      });\n    }\n  }, {\n    key: \"_getAppointmentSettingsGenerator\",\n    value: function _getAppointmentSettingsGenerator() {\n      return new AppointmentSettingsGenerator(this);\n    }\n  }, {\n    key: \"_postponeDataSourceLoading\",\n    value: function _postponeDataSourceLoading(promise) {\n      this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise);\n    }\n  }, {\n    key: \"_postponeResourceLoading\",\n    value: function _postponeResourceLoading() {\n      var _this = this;\n\n      var whenLoaded = this.postponedOperations.add(\"_loadResources\", function () {\n        return _this._loadResources();\n      });\n      var resolveCallbacks = new Deferred();\n      whenLoaded.done(function (resources) {\n        resolveCallbacks.resolve(resources);\n      });\n\n      this._postponeDataSourceLoading(whenLoaded);\n\n      return resolveCallbacks.promise();\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var _this2 = this;\n\n      var value = args.value;\n      var name = args.name;\n\n      switch (args.name) {\n        case \"customizeDateNavigatorText\":\n          this._updateOption(\"header\", name, value);\n\n          break;\n\n        case \"firstDayOfWeek\":\n          this._updateOption(\"workSpace\", name, value);\n\n          this._updateOption(\"header\", name, value);\n\n          break;\n\n        case \"currentDate\":\n          value = this._dateOption(name);\n          value = dateUtils.trimTime(new Date(value));\n          this.option(\"selectedCellData\", []);\n\n          this._workSpace.option(name, new Date(value));\n\n          this._header.option(name, new Date(value));\n\n          this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\n\n          this._appointments.option(\"items\", []);\n\n          this._filterAppointmentsByDate();\n\n          this._postponeDataSourceLoading();\n\n          break;\n\n        case \"dataSource\":\n          this._initDataSource();\n\n          this._appointmentModel.setDataSource(this._dataSource);\n\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._filterAppointmentsByDate();\n\n            _this2._updateOption(\"workSpace\", \"showAllDayPanel\", _this2.option(\"showAllDayPanel\"));\n          });\n\n          break;\n\n        case \"min\":\n        case \"max\":\n          value = this._dateOption(name);\n\n          this._updateOption(\"header\", name, new Date(value));\n\n          this._updateOption(\"workSpace\", name, new Date(value));\n\n          break;\n\n        case \"views\":\n          this._processCurrentView();\n\n          if (this._getCurrentViewOptions()) {\n            this.repaint();\n          } else {\n            this._header.option(name, value);\n          }\n\n          break;\n\n        case \"useDropDownViewSwitcher\":\n          this._header.option(name, value);\n\n          break;\n\n        case \"currentView\":\n          this._processCurrentView();\n\n          this.fire(\"validateDayHours\");\n          this.getLayoutManager().initRenderingStrategy(this._getAppointmentsRenderingStrategy());\n\n          this._validateCellDuration();\n\n          this._appointments.option({\n            items: [],\n            allowDrag: this._allowDragging(),\n            allowResize: this._allowResizing(),\n            itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\n          });\n\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._refreshWorkSpace(resources);\n\n            _this2._updateHeader();\n\n            _this2._filterAppointmentsByDate();\n\n            _this2._appointments.option(\"allowAllDayResize\", \"day\" !== value);\n          });\n\n          break;\n\n        case \"appointmentTemplate\":\n          this._appointments.option(\"itemTemplate\", value);\n\n          break;\n\n        case \"dateCellTemplate\":\n        case \"resourceCellTemplate\":\n        case \"dataCellTemplate\":\n        case \"timeCellTemplate\":\n          this._updateOption(\"workSpace\", name, value);\n\n          this.repaint();\n          break;\n\n        case \"groups\":\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._refreshWorkSpace(resources);\n\n            _this2._filterAppointmentsByDate();\n          });\n\n          break;\n\n        case \"resources\":\n          this._resourcesManager.setResources(this.option(\"resources\"));\n\n          this._appointmentModel.setDataAccessors(this._combineDataAccessors());\n\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._appointments.option(\"items\", []);\n\n            _this2._refreshWorkSpace(resources);\n\n            _this2._filterAppointmentsByDate();\n          });\n\n          break;\n\n        case \"startDayHour\":\n        case \"endDayHour\":\n          this.fire(\"validateDayHours\");\n\n          this._appointments.option(\"items\", []);\n\n          this._updateOption(\"workSpace\", name, value);\n\n          this._appointments.repaint();\n\n          this._filterAppointmentsByDate();\n\n          this._postponeDataSourceLoading();\n\n          break;\n\n        case StoreEventNames.ADDING:\n        case StoreEventNames.ADDED:\n        case StoreEventNames.UPDATING:\n        case StoreEventNames.UPDATED:\n        case StoreEventNames.DELETING:\n        case StoreEventNames.DELETED:\n        case \"onAppointmentFormOpening\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        case \"onAppointmentRendered\":\n          this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\n\n          break;\n\n        case \"onAppointmentClick\":\n          this._appointments.option(\"onItemClick\", this._createActionByOption(name));\n\n          break;\n\n        case \"onAppointmentDblClick\":\n          this._appointments.option(name, this._createActionByOption(name));\n\n          break;\n\n        case \"onAppointmentContextMenu\":\n          this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\n\n          break;\n\n        case \"noDataText\":\n        case \"allowMultipleCellSelection\":\n        case \"selectedCellData\":\n        case \"accessKey\":\n        case \"onCellClick\":\n        case \"onCellContextMenu\":\n          this._workSpace.option(name, value);\n\n          break;\n\n        case \"crossScrollingEnabled\":\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._appointments.option(\"items\", []);\n\n            _this2._refreshWorkSpace(resources);\n\n            if (_this2._readyToRenderAppointments) {\n              _this2._appointments.option(\"items\", _this2._getAppointmentsToRepaint());\n            }\n          });\n\n          break;\n\n        case \"cellDuration\":\n          this._validateCellDuration();\n\n          this._appointments.option(\"items\", []);\n\n          if (this._readyToRenderAppointments) {\n            this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\n\n            this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n          }\n\n          break;\n\n        case \"tabIndex\":\n        case \"focusStateEnabled\":\n          this._updateOption(\"header\", name, value);\n\n          this._updateOption(\"workSpace\", name, value);\n\n          this._appointments.option(name, value);\n\n          _get(_getPrototypeOf(Scheduler.prototype), \"_optionChanged\", this).call(this, args);\n\n          break;\n\n        case \"width\":\n          this._updateOption(\"header\", name, value);\n\n          if (this.option(\"crossScrollingEnabled\")) {\n            this._updateOption(\"workSpace\", \"width\", value);\n          }\n\n          _get(_getPrototypeOf(Scheduler.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._dimensionChanged();\n\n          break;\n\n        case \"height\":\n          _get(_getPrototypeOf(Scheduler.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._dimensionChanged();\n\n          break;\n\n        case \"editing\":\n          this._initEditing();\n\n          var editing = this._editing;\n\n          this._bringEditingModeToAppointments(editing);\n\n          this.hideAppointmentTooltip();\n\n          this._cleanPopup();\n\n          break;\n\n        case \"showAllDayPanel\":\n          this._postponeResourceLoading().done(function (resources) {\n            _this2._filterAppointmentsByDate();\n\n            _this2._updateOption(\"workSpace\", \"allDayExpanded\", value);\n\n            _this2._updateOption(\"workSpace\", name, value);\n          });\n\n          break;\n\n        case \"showCurrentTimeIndicator\":\n        case \"indicatorTime\":\n        case \"indicatorUpdateInterval\":\n        case \"shadeUntilCurrentTime\":\n        case \"groupByDate\":\n          this._updateOption(\"workSpace\", name, value);\n\n          this.repaint();\n          break;\n\n        case \"appointmentDragging\":\n        case \"appointmentTooltipTemplate\":\n        case \"appointmentPopupTemplate\":\n        case \"recurrenceEditMode\":\n        case \"remoteFiltering\":\n        case \"timeZone\":\n        case \"dropDownAppointmentTemplate\":\n        case \"appointmentCollectorTemplate\":\n        case \"_appointmentTooltipOffset\":\n        case \"_appointmentTooltipButtonsPosition\":\n        case \"_appointmentTooltipOpenButtonText\":\n        case \"_dropDownButtonIcon\":\n        case \"_appointmentCountPerCell\":\n        case \"_collectorOffset\":\n        case \"_appointmentOffset\":\n          this.repaint();\n          break;\n\n        case \"dateSerializationFormat\":\n        case \"maxAppointmentsPerCell\":\n          break;\n\n        case \"startDateExpr\":\n        case \"endDateExpr\":\n        case \"startDateTimeZoneExpr\":\n        case \"endDateTimeZoneExpr\":\n        case \"textExpr\":\n        case \"descriptionExpr\":\n        case \"allDayExpr\":\n        case \"recurrenceRuleExpr\":\n        case \"recurrenceExceptionExpr\":\n        case \"disabledExpr\":\n          this._updateExpression(name, value);\n\n          this._appointmentModel.setDataAccessors(this._combineDataAccessors());\n\n          this._initAppointmentTemplate();\n\n          this.repaint();\n          break;\n\n        case \"adaptivityEnabled\":\n          this._toggleAdaptiveClass();\n\n          this.repaint();\n          break;\n\n        case \"scrolling\":\n          this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\n\n          this._updateOption(\"workSpace\", args.fullName, value);\n\n          break;\n\n        case \"renovateRender\":\n          this._updateOption(\"workSpace\", name, value);\n\n          break;\n\n        case \"_draggingMode\":\n          this._workSpace.option(\"draggingMode\", value);\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(Scheduler.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_updateHeader\",\n    value: function _updateHeader() {\n      var viewCountConfig = this._getViewCountConfig();\n\n      this._header.option(\"intervalCount\", viewCountConfig.intervalCount);\n\n      this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\n\n      this._header.option(\"min\", this._dateOption(\"min\"));\n\n      this._header.option(\"max\", this._dateOption(\"max\"));\n\n      this._header.option(\"currentDate\", this._dateOption(\"currentDate\"));\n\n      this._header.option(\"firstDayOfWeek\", this._getCurrentViewOption(\"firstDayOfWeek\"));\n\n      this._header.option(\"currentView\", this._currentView);\n    }\n  }, {\n    key: \"_dateOption\",\n    value: function _dateOption(optionName) {\n      var optionValue = this._getCurrentViewOption(optionName);\n\n      return dateSerialization.deserializeDate(optionValue);\n    }\n  }, {\n    key: \"_getSerializationFormat\",\n    value: function _getSerializationFormat(optionName) {\n      var value = this._getCurrentViewOption(optionName);\n\n      if (\"number\" === typeof value) {\n        return \"number\";\n      }\n\n      if (!isString(value)) {\n        return;\n      }\n\n      return dateSerialization.getDateSerializationFormat(value);\n    }\n  }, {\n    key: \"_bringEditingModeToAppointments\",\n    value: function _bringEditingModeToAppointments(editing) {\n      var editingConfig = {\n        allowDelete: editing.allowUpdating && editing.allowDeleting\n      };\n\n      if (!this._isAgenda()) {\n        editingConfig.allowDrag = editing.allowDragging;\n        editingConfig.allowResize = editing.allowResizing;\n        editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing();\n      }\n\n      this._appointments.option(editingConfig);\n\n      this.repaint();\n    }\n  }, {\n    key: \"_isAgenda\",\n    value: function _isAgenda() {\n      return \"agenda\" === this._getAppointmentsRenderingStrategy();\n    }\n  }, {\n    key: \"_allowDragging\",\n    value: function _allowDragging() {\n      return this._editing.allowDragging && !this._isAgenda();\n    }\n  }, {\n    key: \"_allowResizing\",\n    value: function _allowResizing() {\n      return this._editing.allowResizing && !this._isAgenda();\n    }\n  }, {\n    key: \"_allowAllDayResizing\",\n    value: function _allowAllDayResizing() {\n      return this._editing.allowResizing && this._supportAllDayResizing();\n    }\n  }, {\n    key: \"_supportAllDayResizing\",\n    value: function _supportAllDayResizing() {\n      return \"day\" !== this._getCurrentViewType() || this._currentView.intervalCount > 1;\n    }\n  }, {\n    key: \"_isAllDayExpanded\",\n    value: function _isAllDayExpanded(items) {\n      return this.option(\"showAllDayPanel\") && this.appointmentFilter.hasAllDayAppointments(items);\n    }\n  }, {\n    key: \"_getTimezoneOffsetByOption\",\n    value: function _getTimezoneOffsetByOption(date) {\n      return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date);\n    }\n  }, {\n    key: \"_filterAppointmentsByDate\",\n    value: function _filterAppointmentsByDate() {\n      var dateRange = this._workSpace.getDateRange();\n\n      var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\n        path: \"fromGrid\"\n      });\n      var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\n        path: \"fromGrid\"\n      });\n\n      this._appointmentModel.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"));\n    }\n  }, {\n    key: \"_loadResources\",\n    value: function _loadResources() {\n      var groups = this._getCurrentViewOption(\"groups\");\n\n      var result = new Deferred();\n\n      this._resourcesManager.loadResources(groups).done(function (resources) {\n        this._loadedResources = resources;\n        result.resolve(resources);\n      }.bind(this));\n\n      return result.promise();\n    }\n  }, {\n    key: \"_reloadDataSource\",\n    value: function _reloadDataSource() {\n      var result = new Deferred();\n\n      if (this._dataSource) {\n        this._dataSource.load().done(function () {\n          hideLoading();\n\n          this._fireContentReadyAction(result);\n        }.bind(this)).fail(function () {\n          hideLoading();\n          result.reject();\n        });\n\n        this._dataSource.isLoading() && showLoading({\n          container: this.$element(),\n          position: {\n            of: this.$element()\n          }\n        });\n      } else {\n        this._fireContentReadyAction(result);\n      }\n\n      return result.promise();\n    }\n  }, {\n    key: \"_fireContentReadyAction\",\n    value: function _fireContentReadyAction(result) {\n      var contentReadyBase = _get(_getPrototypeOf(Scheduler.prototype), \"_fireContentReadyAction\", this).bind(this);\n\n      var fireContentReady = function fireContentReady() {\n        contentReadyBase();\n        null === result || void 0 === result ? void 0 : result.resolve();\n      };\n\n      if (this._workSpaceRecalculation) {\n        var _this$_workSpaceRecal;\n\n        null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(function () {\n          fireContentReady();\n        });\n      } else {\n        fireContentReady();\n      }\n    }\n  }, {\n    key: \"_dimensionChanged\",\n    value: function _dimensionChanged() {\n      var filteredItems = this.getFilteredItems();\n\n      this._toggleSmallClass();\n\n      if (!this._isAgenda() && filteredItems && this._isVisible()) {\n        this._workSpace._cleanAllowedPositions();\n\n        this._workSpace.option(\"allDayExpanded\", this._isAllDayExpanded(filteredItems));\n\n        this._workSpace._dimensionChanged();\n\n        var appointments = this._layoutManager.createAppointmentsMap(filteredItems);\n\n        this._appointments.option(\"items\", appointments);\n      }\n\n      this.hideAppointmentTooltip();\n\n      this._appointmentPopup.triggerResize();\n\n      this._appointmentPopup.updatePopupFullScreenMode();\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      this._cleanPopup();\n\n      _get(_getPrototypeOf(Scheduler.prototype), \"_clean\", this).call(this);\n    }\n  }, {\n    key: \"_toggleSmallClass\",\n    value: function _toggleSmallClass() {\n      var width = getBoundingRect(this.$element().get(0)).width;\n      this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH);\n    }\n  }, {\n    key: \"_toggleAdaptiveClass\",\n    value: function _toggleAdaptiveClass() {\n      this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"));\n    }\n  }, {\n    key: \"_visibilityChanged\",\n    value: function _visibilityChanged(visible) {\n      visible && this._dimensionChanged();\n    }\n  }, {\n    key: \"_dataSourceOptions\",\n    value: function _dataSourceOptions() {\n      return {\n        paginate: false\n      };\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this3 = this;\n\n      this._initExpressions({\n        startDate: this.option(\"startDateExpr\"),\n        endDate: this.option(\"endDateExpr\"),\n        startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\n        endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\n        allDay: this.option(\"allDayExpr\"),\n        text: this.option(\"textExpr\"),\n        description: this.option(\"descriptionExpr\"),\n        recurrenceRule: this.option(\"recurrenceRuleExpr\"),\n        recurrenceException: this.option(\"recurrenceExceptionExpr\"),\n        disabled: this.option(\"disabledExpr\")\n      });\n\n      _get(_getPrototypeOf(Scheduler.prototype), \"_init\", this).call(this);\n\n      this._initDataSource();\n\n      this._loadedResources = [];\n      this.$element().addClass(WIDGET_CLASS).toggleClass(WIDGET_WIN_NO_TOUCH_CLASS, !!(browser.msie && touch));\n\n      this._initEditing();\n\n      this._resourcesManager = new ResourceManager(this.option(\"resources\"));\n\n      var combinedDataAccessors = this._combineDataAccessors();\n\n      this._appointmentModel = new SchedulerAppointmentModel(this._dataSource, combinedDataAccessors, this.getAppointmentDurationInMinutes());\n\n      this._initActions();\n\n      this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\n      this._asyncTemplatesTimers = [];\n      this._dataSourceLoadedCallback = Callbacks();\n      this._subscribes = subscribes;\n      this.timeZoneCalculator = new TimeZoneCalculator({\n        getClientOffset: function getClientOffset(date) {\n          return timeZoneUtils.getClientTimezoneOffset(date);\n        },\n        getCommonOffset: function getCommonOffset(date, timeZone) {\n          return timeZoneUtils.calculateTimezoneByValue(timeZone || _this3.option(\"timeZone\"), date);\n        },\n        getAppointmentOffset: function getAppointmentOffset(date, appointmentTimezone) {\n          return timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date);\n        }\n      });\n    }\n  }, {\n    key: \"_initTemplates\",\n    value: function _initTemplates() {\n      this._initAppointmentTemplate();\n\n      this._templateManager.addDefaultTemplates({\n        appointmentTooltip: new EmptyTemplate(),\n        dropDownAppointment: new EmptyTemplate()\n      });\n\n      _get(_getPrototypeOf(Scheduler.prototype), \"_initTemplates\", this).call(this);\n    }\n  }, {\n    key: \"_initAppointmentTemplate\",\n    value: function _initAppointmentTemplate() {\n      var _this4 = this;\n\n      var expr = this._dataAccessors.expr;\n\n      var createGetter = function createGetter(property) {\n        return compileGetter(\"appointmentData.\".concat(property));\n      };\n\n      var getDate = function getDate(getter) {\n        return function (data) {\n          var value = getter(data);\n\n          if (value instanceof Date) {\n            return value.valueOf();\n          }\n\n          return value;\n        };\n      };\n\n      this._templateManager.addDefaultTemplates({\n        item: new BindableTemplate(function ($container, data, model) {\n          return _this4.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model);\n        }, [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\n          text: createGetter(expr.textExpr),\n          startDate: getDate(createGetter(expr.startDateExpr)),\n          endDate: getDate(createGetter(expr.endDateExpr)),\n          startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\n          endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\n          allDay: createGetter(expr.allDayExpr),\n          recurrenceRule: createGetter(expr.recurrenceRuleExpr)\n        })\n      });\n    }\n  }, {\n    key: \"_combineDataAccessors\",\n    value: function _combineDataAccessors() {\n      var resourcesDataAccessors = this._resourcesManager._dataAccessors;\n      var result = extend(true, {}, this._dataAccessors);\n      each(resourcesDataAccessors, function (type, accessor) {\n        result[type].resources = accessor;\n      }.bind(this));\n      return result;\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      this._renderContentImpl();\n    }\n  }, {\n    key: \"_dataSourceChangedHandler\",\n    value: function _dataSourceChangedHandler(result) {\n      if (this._readyToRenderAppointments) {\n        this._workSpaceRecalculation.done(function () {\n          this._renderAppointments();\n\n          var filteredItems = this.getFilteredItems();\n          this.getWorkSpace().onDataSourceChanged(filteredItems);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"isVirtualScrolling\",\n    value: function isVirtualScrolling() {\n      var _this$getWorkSpace;\n\n      return null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.isVirtualScrolling();\n    }\n  }, {\n    key: \"_filterAppointments\",\n    value: function _filterAppointments() {\n      return this.appointmentFilter.filter();\n    }\n  }, {\n    key: \"_renderAppointments\",\n    value: function _renderAppointments() {\n      var workspace = this.getWorkSpace();\n      this._filteredItems = this._filterAppointments();\n      workspace.preRenderAppointments({\n        allDayExpanded: this._isAllDayExpanded(this._filteredItems),\n        appointments: this._filteredItems\n      });\n\n      if (this._filteredItems.length && this._isVisible()) {\n        this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n\n        this._appointmentModel.cleanModelState();\n      } else {\n        this._appointments.option(\"items\", []);\n      }\n    }\n  }, {\n    key: \"_getAppointmentsToRepaint\",\n    value: function _getAppointmentsToRepaint() {\n      var appointments = this._layoutManager.createAppointmentsMap(this._filteredItems);\n\n      return this._layoutManager.getRepaintedAppointments(appointments, this.getAppointmentsInstance().option(\"items\"));\n    }\n  }, {\n    key: \"_initExpressions\",\n    value: function _initExpressions(fields) {\n      if (!this._dataAccessors) {\n        this._dataAccessors = {\n          getter: {},\n          setter: {},\n          expr: {}\n        };\n      }\n\n      each(fields, function (name, expr) {\n        if (expr) {\n          var getter = compileGetter(expr);\n          var setter = compileSetter(expr);\n          var dateGetter;\n          var dateSetter;\n\n          if (field = name, \"startDate\" === field || \"endDate\" === field) {\n            var that = this;\n\n            dateGetter = function dateGetter() {\n              var value = getter.apply(this, arguments);\n\n              if (config().forceIsoDateParsing) {\n                if (!that.option(\"dateSerializationFormat\")) {\n                  var format = dateSerialization.getDateSerializationFormat(value);\n\n                  if (format) {\n                    that.option(\"dateSerializationFormat\", format);\n                  }\n                }\n\n                value = dateSerialization.deserializeDate(value);\n              }\n\n              return value;\n            };\n\n            dateSetter = function dateSetter(object, value) {\n              if (config().forceIsoDateParsing || that.option(\"dateSerializationFormat\")) {\n                value = dateSerialization.serializeDate(value, that.option(\"dateSerializationFormat\"));\n              }\n\n              setter.call(this, object, value);\n            };\n          }\n\n          this._dataAccessors.getter[name] = dateGetter || getter;\n          this._dataAccessors.setter[name] = dateSetter || setter;\n          this._dataAccessors.expr[name + \"Expr\"] = expr;\n        } else {\n          delete this._dataAccessors.getter[name];\n          delete this._dataAccessors.setter[name];\n          delete this._dataAccessors.expr[name + \"Expr\"];\n        }\n\n        var field;\n      }.bind(this));\n    }\n  }, {\n    key: \"_updateExpression\",\n    value: function _updateExpression(name, value) {\n      var exprObj = {};\n      exprObj[name.replace(\"Expr\", \"\")] = value;\n\n      this._initExpressions(exprObj);\n    }\n  }, {\n    key: \"_initEditing\",\n    value: function _initEditing() {\n      var editing = this.option(\"editing\");\n      this._editing = {\n        allowAdding: !!editing,\n        allowUpdating: !!editing,\n        allowDeleting: !!editing,\n        allowResizing: !!editing,\n        allowDragging: !!editing\n      };\n\n      if (isObject(editing)) {\n        this._editing = extend(this._editing, editing);\n      }\n\n      this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\n      this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\n      this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly());\n    }\n  }, {\n    key: \"_isReadOnly\",\n    value: function _isReadOnly() {\n      var result = true;\n      var editing = this._editing;\n\n      for (var prop in editing) {\n        if (Object.prototype.hasOwnProperty.call(editing, prop)) {\n          result = result && !editing[prop];\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      var _this$_recurrenceDial;\n\n      this._appointmentTooltip && this._appointmentTooltip.dispose();\n      null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\n      this.hideAppointmentPopup();\n      this.hideAppointmentTooltip();\n\n      this._asyncTemplatesTimers.forEach(clearTimeout);\n\n      this._asyncTemplatesTimers = [];\n\n      _get(_getPrototypeOf(Scheduler.prototype), \"_dispose\", this).call(this);\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\n        onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\n        onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\n        onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\n        onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\n        onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\n        onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\")\n      };\n    }\n  }, {\n    key: \"_getAppointmentRenderedAction\",\n    value: function _getAppointmentRenderedAction() {\n      return this._createActionByOption(\"onAppointmentRendered\", {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      });\n    }\n  }, {\n    key: \"_renderFocusTarget\",\n    value: function _renderFocusTarget() {\n      return noop();\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(Scheduler.prototype), \"_initMarkup\", this).call(this);\n\n      this.fire(\"validateDayHours\");\n\n      this._validateCellDuration();\n\n      this._processCurrentView();\n\n      this._renderHeader();\n\n      this._layoutManager = new AppointmentLayoutManager(this, this._getAppointmentsRenderingStrategy());\n      this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\n\n      this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\n\n      this._appointmentTooltip = new (this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\n      this._appointmentPopup = new AppointmentPopup(this);\n\n      if (this._isLoaded() || this._isDataSourceLoading()) {\n        this._initMarkupCore(this._loadedResources);\n\n        this._dataSourceChangedHandler(this._dataSource.items());\n\n        this._fireContentReadyAction();\n      } else {\n        this._loadResources().done(function (resources) {\n          this._initMarkupCore(resources);\n\n          this._reloadDataSource();\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"_getAppointmentTooltipOptions\",\n    value: function _getAppointmentTooltipOptions() {\n      var _this5 = this;\n\n      return {\n        createComponent: this._createComponent.bind(this),\n        container: this.$element(),\n        getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\n        addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\n        getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\n        showAppointmentPopup: this.showAppointmentPopup.bind(this),\n        checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\n        isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\n        createFormattedDateText: function createFormattedDateText(appointment, targetedAppointment, format) {\n          return _this5.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format);\n        },\n        getAppointmentDisabled: function getAppointmentDisabled(appointment) {\n          return _this5.createAppointmentAdapter(appointment).disabled;\n        }\n      };\n    }\n  }, {\n    key: \"checkAndDeleteAppointment\",\n    value: function checkAndDeleteAppointment(appointment, targetedAppointment) {\n      var _this6 = this;\n\n      var targetedAdapter = this.createAppointmentAdapter(targetedAppointment);\n\n      this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, function () {\n        _this6.deleteAppointment(appointment);\n      }, true);\n    }\n  }, {\n    key: \"_getExtraAppointmentTooltipOptions\",\n    value: function _getExtraAppointmentTooltipOptions() {\n      return {\n        rtlEnabled: this.option(\"rtlEnabled\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        editing: this.option(\"editing\"),\n        offset: this.option(\"_appointmentTooltipOffset\")\n      };\n    }\n  }, {\n    key: \"isAppointmentInAllDayPanel\",\n    value: function isAppointmentInAllDayPanel(appointmentData) {\n      var workSpace = this._workSpace;\n      var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\n      return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\");\n    }\n  }, {\n    key: \"_initMarkupCore\",\n    value: function _initMarkupCore(resources) {\n      var _this7 = this;\n\n      this._readyToRenderAppointments = hasWindow();\n      this._workSpace && this._cleanWorkspace();\n\n      this._renderWorkSpace(resources);\n\n      this._appointments.option({\n        fixedContainer: this._workSpace.getFixedContainer(),\n        allDayContainer: this._workSpace.getAllDayContainer()\n      });\n\n      this._waitAsyncTemplate(function () {\n        var _this$_workSpaceRecal2;\n\n        return null === (_this$_workSpaceRecal2 = _this7._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve();\n      });\n\n      this._filterAppointmentsByDate();\n    }\n  }, {\n    key: \"_isLoaded\",\n    value: function _isLoaded() {\n      return this._isResourcesLoaded() && this._isDataSourceLoaded();\n    }\n  }, {\n    key: \"_isResourcesLoaded\",\n    value: function _isResourcesLoaded() {\n      return isDefined(this._loadedResources);\n    }\n  }, {\n    key: \"_isDataSourceLoaded\",\n    value: function _isDataSourceLoaded() {\n      return this._dataSource && this._dataSource.isLoaded();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this._toggleSmallClass();\n\n      this._toggleAdaptiveClass();\n\n      _get(_getPrototypeOf(Scheduler.prototype), \"_render\", this).call(this);\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      var $header = $(\"<div>\").appendTo(this.$element());\n      this._header = this._createComponent($header, Header, this._headerConfig());\n    }\n  }, {\n    key: \"_headerConfig\",\n    value: function _headerConfig() {\n      var _this8 = this;\n\n      var currentViewOptions = this._getCurrentViewOptions();\n\n      var countConfig = this._getViewCountConfig();\n\n      var result = extend({\n        isAdaptive: this.option(\"adaptivityEnabled\"),\n        firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n        currentView: this._currentView,\n        tabIndex: this.option(\"tabIndex\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        width: this.option(\"width\"),\n        rtlEnabled: this.option(\"rtlEnabled\"),\n        useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\n        _dropDownButtonIcon: this.option(\"_dropDownButtonIcon\"),\n        customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\")\n      }, currentViewOptions);\n      result.observer = this;\n      result.intervalCount = countConfig.intervalCount;\n      result.views = this.option(\"views\");\n      result.min = new Date(this._dateOption(\"min\"));\n      result.max = new Date(this._dateOption(\"max\"));\n      result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n\n      result.todayDate = function () {\n        var result = _this8.timeZoneCalculator.createDate(new Date(), {\n          path: \"toGrid\"\n        });\n\n        return result;\n      };\n\n      return result;\n    }\n  }, {\n    key: \"_appointmentsConfig\",\n    value: function _appointmentsConfig() {\n      var that = this;\n      var config = {\n        observer: this,\n        onItemRendered: this._getAppointmentRenderedAction(),\n        onItemClick: this._createActionByOption(\"onAppointmentClick\"),\n        onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\n        onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\n        tabIndex: this.option(\"tabIndex\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        allowDrag: this._allowDragging(),\n        allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\n        allowResize: this._allowResizing(),\n        allowAllDayResize: this._allowAllDayResizing(),\n        rtlEnabled: this.option(\"rtlEnabled\"),\n        currentView: this.option(\"currentView\"),\n        onContentReady: function onContentReady() {\n          that._workSpace && that._workSpace.option(\"allDayExpanded\", that._isAllDayExpanded(that.getFilteredItems()));\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"getCollectorOffset\",\n    value: function getCollectorOffset() {\n      if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\n        return this.option(\"_collectorOffset\");\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"getAppointmentDurationInMinutes\",\n    value: function getAppointmentDurationInMinutes() {\n      return this._getCurrentViewOption(\"cellDuration\");\n    }\n  }, {\n    key: \"_processCurrentView\",\n    value: function _processCurrentView() {\n      var views = this.option(\"views\");\n      var currentView = this.option(\"currentView\");\n      var that = this;\n      this._currentView = null;\n      each(views, function (_, view) {\n        var isViewIsObject = isObject(view);\n        var viewName = isViewIsObject ? view.name : view;\n        var viewType = view.type;\n\n        if (currentView === viewName || currentView === viewType) {\n          that._currentView = view;\n          return false;\n        }\n      });\n\n      if (!this._currentView) {\n        var isCurrentViewValid = !!VIEWS_CONFIG[currentView];\n\n        if (isCurrentViewValid) {\n          this._currentView = currentView;\n        } else {\n          this._currentView = views[0];\n        }\n      }\n    }\n  }, {\n    key: \"_validateCellDuration\",\n    value: function _validateCellDuration() {\n      var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n      var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n      var cellDuration = this._getCurrentViewOption(\"cellDuration\");\n\n      if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\n        errors.log(\"W1015\");\n      }\n    }\n  }, {\n    key: \"_getCurrentViewType\",\n    value: function _getCurrentViewType() {\n      return this._currentView.type || this._currentView;\n    }\n  }, {\n    key: \"_getAppointmentsRenderingStrategy\",\n    value: function _getAppointmentsRenderingStrategy() {\n      return VIEWS_CONFIG[this._getCurrentViewType()].renderingStrategy;\n    }\n  }, {\n    key: \"_renderWorkSpace\",\n    value: function _renderWorkSpace(groups) {\n      this._readyToRenderAppointments && this._toggleSmallClass();\n      var $workSpace = $(\"<div>\").appendTo(this.$element());\n\n      var countConfig = this._getViewCountConfig();\n\n      var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\n\n      var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\n\n      this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\n      this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\n\n      this._workSpace._attachTablesEvents();\n\n      this._workSpace.getWorkArea().append(this._appointments.$element());\n\n      this._recalculateWorkspace();\n\n      countConfig.startDate && this._header && this._header.option(\"currentDate\", this._workSpace._getHeaderDate());\n\n      this._appointments.option(\"_collectorOffset\", this.getCollectorOffset());\n    }\n  }, {\n    key: \"_getViewCountConfig\",\n    value: function _getViewCountConfig() {\n      var currentView = this.option(\"currentView\");\n\n      var view = this._getViewByName(currentView);\n\n      var viewCount = view && view.intervalCount || 1;\n      var startDate = view && view.startDate || null;\n      return {\n        intervalCount: viewCount,\n        startDate: startDate\n      };\n    }\n  }, {\n    key: \"_getViewByName\",\n    value: function _getViewByName(name) {\n      var views = this.option(\"views\");\n\n      for (var i = 0; i < views.length; i++) {\n        if (views[i].name === name || views[i].type === name || views[i] === name) {\n          return views[i];\n        }\n      }\n    }\n  }, {\n    key: \"_recalculateWorkspace\",\n    value: function _recalculateWorkspace() {\n      var _this9 = this;\n\n      this._workSpaceRecalculation = new Deferred();\n\n      this._waitAsyncTemplate(function () {\n        triggerResizeEvent(_this9._workSpace.$element());\n\n        _this9._workSpace._refreshDateTimeIndication();\n      });\n    }\n  }, {\n    key: \"_workSpaceConfig\",\n    value: function _workSpaceConfig(groups, countConfig) {\n      var _this10 = this;\n\n      var _currentViewOptions$s;\n\n      var currentViewOptions = this._getCurrentViewOptions();\n\n      var scrolling = this.option(\"scrolling\");\n      var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);\n      var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(function (item) {\n        var _currentViewOptions$s2;\n\n        return scrolling.orientation === item || (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.orientation) === item;\n      }).length > 0);\n      var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed;\n      var result = extend({\n        noDataText: this.option(\"noDataText\"),\n        firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n        startDayHour: this.option(\"startDayHour\"),\n        endDayHour: this.option(\"endDayHour\"),\n        tabIndex: this.option(\"tabIndex\"),\n        accessKey: this.option(\"accessKey\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        cellDuration: this.option(\"cellDuration\"),\n        showAllDayPanel: this.option(\"showAllDayPanel\"),\n        showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\n        indicatorTime: this.option(\"indicatorTime\"),\n        indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\n        shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\n        allDayExpanded: this._appointments.option(\"items\"),\n        crossScrollingEnabled: crossScrollingEnabled,\n        dataCellTemplate: this.option(\"dataCellTemplate\"),\n        timeCellTemplate: this.option(\"timeCellTemplate\"),\n        resourceCellTemplate: this.option(\"resourceCellTemplate\"),\n        dateCellTemplate: this.option(\"dateCellTemplate\"),\n        allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\n        selectedCellData: this.option(\"selectedCellData\"),\n        onSelectionChanged: function onSelectionChanged(args) {\n          _this10.option(\"selectedCellData\", args.selectedCellData);\n        },\n        groupByDate: this._getCurrentViewOption(\"groupByDate\"),\n        scrolling: scrolling,\n        draggingMode: this.option(\"_draggingMode\"),\n        renovateRender: this._isRenovatedRender(isVirtualScrolling)\n      }, currentViewOptions);\n      result.observer = this;\n      result.intervalCount = countConfig.intervalCount;\n      result.startDate = countConfig.startDate;\n      result.groups = groups;\n      result.onCellClick = this._createActionByOption(\"onCellClick\");\n      result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\n      result.min = new Date(this._dateOption(\"min\"));\n      result.max = new Date(this._dateOption(\"max\"));\n      result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n      result.hoursInterval = result.cellDuration / 60;\n      result.allDayExpanded = this._isAllDayExpanded(this.getFilteredItems());\n      result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\n      result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\n      result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\n      result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\n      return result;\n    }\n  }, {\n    key: \"_isRenovatedRender\",\n    value: function _isRenovatedRender(isVirtualScrolling) {\n      return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling;\n    }\n  }, {\n    key: \"_waitAsyncTemplate\",\n    value: function _waitAsyncTemplate(callback) {\n      if (this._options.silent(\"templatesRenderAsynchronously\")) {\n        var timer = setTimeout(function () {\n          callback();\n          clearTimeout(timer);\n        });\n\n        this._asyncTemplatesTimers.push(timer);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"_getCurrentViewOptions\",\n    value: function _getCurrentViewOptions() {\n      return this._currentView;\n    }\n  }, {\n    key: \"_getCurrentViewOption\",\n    value: function _getCurrentViewOption(optionName) {\n      var currentViewOptions = this._getCurrentViewOptions();\n\n      if (currentViewOptions && void 0 !== currentViewOptions[optionName]) {\n        return currentViewOptions[optionName];\n      }\n\n      return this.option(optionName);\n    }\n  }, {\n    key: \"_getAppointmentTemplate\",\n    value: function _getAppointmentTemplate(optionName) {\n      var currentViewOptions = this._getCurrentViewOptions();\n\n      if (currentViewOptions && currentViewOptions[optionName]) {\n        return this._getTemplate(currentViewOptions[optionName]);\n      }\n\n      return this._getTemplateByOption(optionName);\n    }\n  }, {\n    key: \"_updateOption\",\n    value: function _updateOption(viewName, optionName, value) {\n      var currentViewOptions = this._getCurrentViewOptions();\n\n      if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\n        this[\"_\" + viewName].option(optionName, value);\n      }\n    }\n  }, {\n    key: \"_refreshWorkSpace\",\n    value: function _refreshWorkSpace(groups) {\n      var _this11 = this;\n\n      this._cleanWorkspace();\n\n      delete this._workSpace;\n\n      this._renderWorkSpace(groups);\n\n      if (this._readyToRenderAppointments) {\n        this._appointments.option({\n          fixedContainer: this._workSpace.getFixedContainer(),\n          allDayContainer: this._workSpace.getAllDayContainer()\n        });\n\n        this._waitAsyncTemplate(function () {\n          return _this11._workSpaceRecalculation.resolve();\n        });\n      }\n    }\n  }, {\n    key: \"_cleanWorkspace\",\n    value: function _cleanWorkspace() {\n      this._appointments.$element().detach();\n\n      this._workSpace._dispose();\n\n      this._workSpace.$element().remove();\n\n      this.option(\"selectedCellData\", []);\n    }\n  }, {\n    key: \"getWorkSpaceScrollable\",\n    value: function getWorkSpaceScrollable() {\n      return this._workSpace.getScrollable();\n    }\n  }, {\n    key: \"getWorkSpaceScrollableScrollTop\",\n    value: function getWorkSpaceScrollableScrollTop(allDay) {\n      return this._workSpace.getGroupedScrollableScrollTop(allDay);\n    }\n  }, {\n    key: \"getWorkSpaceScrollableScrollLeft\",\n    value: function getWorkSpaceScrollableScrollLeft() {\n      return this._workSpace.getScrollableScrollLeft();\n    }\n  }, {\n    key: \"getWorkSpaceScrollableContainer\",\n    value: function getWorkSpaceScrollableContainer() {\n      return this._workSpace.getScrollableContainer();\n    }\n  }, {\n    key: \"getWorkSpaceAllDayHeight\",\n    value: function getWorkSpaceAllDayHeight() {\n      return this._workSpace.getAllDayHeight();\n    }\n  }, {\n    key: \"getWorkSpaceAllDayOffset\",\n    value: function getWorkSpaceAllDayOffset() {\n      return this._workSpace.getAllDayOffset();\n    }\n  }, {\n    key: \"getWorkSpaceHeaderPanelHeight\",\n    value: function getWorkSpaceHeaderPanelHeight() {\n      return this._workSpace.getHeaderPanelHeight();\n    }\n  }, {\n    key: \"getWorkSpaceDateTableOffset\",\n    value: function getWorkSpaceDateTableOffset() {\n      return !this.option(\"crossScrollingEnabled\") || this.option(\"rtlEnabled\") ? this._workSpace.getWorkSpaceLeftOffset() : 0;\n    }\n  }, {\n    key: \"getWorkSpace\",\n    value: function getWorkSpace() {\n      return this._workSpace;\n    }\n  }, {\n    key: \"getAppointmentModel\",\n    value: function getAppointmentModel() {\n      return this._appointmentModel;\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return this._header;\n    }\n  }, {\n    key: \"getMaxAppointmentsPerCell\",\n    value: function getMaxAppointmentsPerCell() {\n      return this._getCurrentViewOption(\"maxAppointmentsPerCell\");\n    }\n  }, {\n    key: \"_cleanPopup\",\n    value: function _cleanPopup() {\n      this._appointmentPopup && this._appointmentPopup.dispose();\n    }\n  }, {\n    key: \"_checkRecurringAppointment\",\n    value: function _checkRecurringAppointment(targetAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent) {\n      var _this12 = this;\n\n      delete this._updatedRecAppointment;\n      var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", targetAppointment);\n\n      if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\n        callback();\n        return;\n      }\n\n      var editMode = this.option(\"recurrenceEditMode\");\n\n      switch (editMode) {\n        case \"series\":\n          callback();\n          break;\n\n        case \"occurrence\":\n          this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n\n          break;\n\n        default:\n          if (dragEvent) {\n            dragEvent.cancel = new Deferred();\n          }\n\n          this._showRecurrenceChangeConfirm(isDeleted).done(function (editingMode) {\n            editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\n            editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && _this12._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n          }).fail(function () {\n            return _this12._appointments.moveAppointmentBack(dragEvent);\n          });\n\n      }\n    }\n  }, {\n    key: \"_excludeAppointmentFromSeries\",\n    value: function _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\n      var _this13 = this;\n\n      var appointment = this.createAppointmentAdapter(_extends({}, rawAppointment));\n      var newAppointment = this.createAppointmentAdapter(newRawAppointment);\n      newAppointment.recurrenceRule = \"\";\n      newAppointment.recurrenceException = \"\";\n      var canCreateNewAppointment = !isDeleted && !isPopupEditing;\n\n      if (canCreateNewAppointment) {\n        var keyPropertyName = this._appointmentModel.keyName;\n        delete newRawAppointment[keyPropertyName];\n        this.addAppointment(newRawAppointment);\n      }\n\n      appointment.recurrenceException = this._createRecurrenceException(appointment, exceptionDate);\n\n      if (isPopupEditing) {\n        this._updatedRecAppointment = appointment.source();\n\n        this._appointmentPopup.show(newRawAppointment, true);\n\n        this._editAppointmentData = rawAppointment;\n      } else {\n        this._updateAppointment(rawAppointment, appointment.source(), function () {\n          _this13._appointments.moveAppointmentBack(dragEvent);\n        }, dragEvent);\n      }\n    }\n  }, {\n    key: \"_createRecurrenceException\",\n    value: function _createRecurrenceException(appointment, exceptionDate) {\n      var result = [];\n\n      if (appointment.recurrenceException) {\n        result.push(appointment.recurrenceException);\n      }\n\n      result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\n      return result.join();\n    }\n  }, {\n    key: \"_getSerializedDate\",\n    value: function _getSerializedDate(date, startDate, isAllDay) {\n      isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\n      return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT);\n    }\n  }, {\n    key: \"_showRecurrenceChangeConfirm\",\n    value: function _showRecurrenceChangeConfirm(isDeleted) {\n      var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\n      var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\n      var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\n      this._recurrenceDialog = customDialog({\n        messageHtml: message,\n        showCloseButton: true,\n        showTitle: true,\n        buttons: [{\n          text: seriesText,\n          onClick: function onClick() {\n            return RECURRENCE_EDITING_MODE.SERIES;\n          }\n        }, {\n          text: occurrenceText,\n          onClick: function onClick() {\n            return RECURRENCE_EDITING_MODE.OCCURENCE;\n          }\n        }],\n        popupOptions: {\n          onHidden: function onHidden(e) {\n            e.component.$element().remove();\n          }\n        }\n      });\n      return this._recurrenceDialog.show();\n    }\n  }, {\n    key: \"_getUpdatedData\",\n    value: function _getUpdatedData(rawAppointment) {\n      var _this14 = this;\n\n      var getConvertedFromGrid = function getConvertedFromGrid(date) {\n        return date ? _this14.timeZoneCalculator.createDate(date, {\n          path: \"fromGrid\"\n        }) : void 0;\n      };\n\n      var isValidDate = function isValidDate(date) {\n        return !isNaN(new Date(date).getTime());\n      };\n\n      var targetCell = this.getTargetCellData();\n      var appointment = this.createAppointmentAdapter(rawAppointment);\n      var cellStartDate = getConvertedFromGrid(targetCell.startDate);\n      var cellEndDate = getConvertedFromGrid(targetCell.endDate);\n      var appointmentStartDate = new Date(appointment.startDate);\n      var appointmentEndDate = new Date(appointment.endDate);\n      var resultedStartDate = cellStartDate || appointmentStartDate;\n\n      if (!isValidDate(appointmentStartDate)) {\n        appointmentStartDate = resultedStartDate;\n      }\n\n      if (!isValidDate(appointmentEndDate)) {\n        appointmentEndDate = cellEndDate;\n      }\n\n      var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\n      var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\n\n      if (isKeepAppointmentHours) {\n        var trimTime = dateUtils.trimTime;\n        var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\n          path: \"toGrid\"\n        });\n        var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\n        resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\n        resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\n          path: \"fromGrid\"\n        });\n      }\n\n      var result = this.createAppointmentAdapter({});\n\n      if (void 0 !== targetCell.allDay) {\n        result.allDay = targetCell.allDay;\n      }\n\n      result.startDate = resultedStartDate;\n      var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\n\n      if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\n        resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate);\n      }\n\n      if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\n        var dateCopy = new Date(resultedStartDate);\n        dateCopy.setHours(0);\n        resultedEndDate = new Date(dateCopy.getTime() + duration);\n\n        if (0 !== resultedEndDate.getHours()) {\n          resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"));\n        }\n      }\n\n      var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\n      result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\n      var rawResult = result.source();\n\n      this._resourcesManager.setResourcesToItem(rawResult, targetCell.groups);\n\n      return rawResult;\n    }\n  }, {\n    key: \"getTargetedAppointment\",\n    value: function getTargetedAppointment(appointment, element) {\n      var settings = utils.dataAccessors.getAppointmentSettings(element);\n      var info = utils.dataAccessors.getAppointmentInfo(element);\n      var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\n      var adapter = this.createAppointmentAdapter(appointment);\n      var targetedAdapter = adapter.clone();\n\n      if (this._isAgenda() && adapter.isRecurrent) {\n        var getStartDate = this.getRenderingStrategyInstance().getAppointmentDataCalculator();\n        var newStartDate = getStartDate($(element), adapter.startDate).startDate;\n        targetedAdapter.startDate = newStartDate;\n        targetedAdapter.endDate = new Date(newStartDate.getTime() + adapter.duration);\n      } else if (settings) {\n        targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\n        targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate;\n      }\n\n      var rawTargetedAppointment = targetedAdapter.source();\n\n      if (element) {\n        this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex);\n      }\n\n      return rawTargetedAppointment;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(subject, action) {\n      this._subscribes[subject] = subscribes[subject] = action;\n    }\n  }, {\n    key: \"fire\",\n    value: function fire(subject) {\n      var callback = this._subscribes[subject];\n      var args = Array.prototype.slice.call(arguments);\n\n      if (!isFunction(callback)) {\n        throw errors.Error(\"E1031\", subject);\n      }\n\n      return callback.apply(this, args.slice(1));\n    }\n  }, {\n    key: \"getTargetCellData\",\n    value: function getTargetCellData() {\n      return this._workSpace.getDataByDroppableCell();\n    }\n  }, {\n    key: \"_updateAppointment\",\n    value: function _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\n      var updatingOptions = {\n        newData: rawAppointment,\n        oldData: extend({}, target),\n        cancel: false\n      };\n\n      var performFailAction = function (err) {\n        if (onUpdatePrevented) {\n          onUpdatePrevented.call(this);\n        }\n\n        if (err && \"Error\" === err.name) {\n          throw err;\n        }\n      }.bind(this);\n\n      this._actions[StoreEventNames.UPDATING](updatingOptions);\n\n      if (dragEvent && !isDeferred(dragEvent.cancel)) {\n        dragEvent.cancel = new Deferred();\n      }\n\n      return this._processActionResult(updatingOptions, function (canceled) {\n        var _this15 = this;\n\n        var deferred = new Deferred();\n\n        if (!canceled) {\n          this._expandAllDayPanel(rawAppointment);\n\n          try {\n            deferred = this._appointmentModel.update(target, rawAppointment).done(function () {\n              dragEvent && dragEvent.cancel.resolve(false);\n            }).always(function (storeAppointment) {\n              return _this15._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment);\n            }).fail(function () {\n              return performFailAction();\n            });\n          } catch (err) {\n            performFailAction(err);\n            deferred.resolve();\n          }\n        } else {\n          performFailAction();\n          deferred.resolve();\n        }\n\n        return deferred.promise();\n      });\n    }\n  }, {\n    key: \"_processActionResult\",\n    value: function _processActionResult(actionOptions, callback) {\n      var _this16 = this;\n\n      var deferred = new Deferred();\n\n      var resolveCallback = function resolveCallback(callbackResult) {\n        when(fromPromise(callbackResult)).always(deferred.resolve);\n      };\n\n      if (isPromise(actionOptions.cancel)) {\n        when(fromPromise(actionOptions.cancel)).always(function (cancel) {\n          if (!isDefined(cancel)) {\n            cancel = \"rejected\" === actionOptions.cancel.state();\n          }\n\n          resolveCallback(callback.call(_this16, cancel));\n        });\n      } else {\n        resolveCallback(callback.call(this, actionOptions.cancel));\n      }\n\n      return deferred.promise();\n    }\n  }, {\n    key: \"_expandAllDayPanel\",\n    value: function _expandAllDayPanel(appointment) {\n      if (!this._isAllDayExpanded(this.getFilteredItems()) && this.appointmentTakesAllDay(appointment)) {\n        this._workSpace.option(\"allDayExpanded\", true);\n      }\n    }\n  }, {\n    key: \"_onDataPromiseCompleted\",\n    value: function _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\n      var args = {\n        appointmentData: appointment || storeAppointment\n      };\n\n      if (storeAppointment instanceof Error) {\n        args.error = storeAppointment;\n      } else {\n        this._appointmentPopup.isVisible() && this._appointmentPopup.hide();\n      }\n\n      this._actions[handlerName](args);\n\n      this._fireContentReadyAction();\n    }\n  }, {\n    key: \"getAppointmentPopup\",\n    value: function getAppointmentPopup() {\n      return this._appointmentPopup.getPopup();\n    }\n  }, {\n    key: \"getUpdatedAppointment\",\n    value: function getUpdatedAppointment() {\n      return this._appointmentModel.getUpdatedAppointment();\n    }\n  }, {\n    key: \"getUpdatedAppointmentKeys\",\n    value: function getUpdatedAppointmentKeys() {\n      return this._appointmentModel.getUpdatedAppointmentKeys();\n    }\n  }, {\n    key: \"getAppointmentsInstance\",\n    value: function getAppointmentsInstance() {\n      return this._appointments;\n    }\n  }, {\n    key: \"getResourceManager\",\n    value: function getResourceManager() {\n      return this._resourcesManager;\n    }\n  }, {\n    key: \"getLayoutManager\",\n    value: function getLayoutManager() {\n      return this._layoutManager;\n    }\n  }, {\n    key: \"getRenderingStrategyInstance\",\n    value: function getRenderingStrategyInstance() {\n      return this._layoutManager.getRenderingStrategyInstance();\n    }\n  }, {\n    key: \"getFilteredItems\",\n    value: function getFilteredItems() {\n      return this._filteredItems;\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      return this._actions;\n    }\n  }, {\n    key: \"appointmentTakesAllDay\",\n    value: function appointmentTakesAllDay(appointment) {\n      return this._appointmentModel.appointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"));\n    }\n  }, {\n    key: \"_getRecurrenceException\",\n    value: function _getRecurrenceException(rawAppointment) {\n      var appointment = this.createAppointmentAdapter(rawAppointment);\n      var recurrenceException = appointment.recurrenceException;\n\n      if (recurrenceException) {\n        var exceptions = recurrenceException.split(\",\");\n\n        for (var i = 0; i < exceptions.length; i++) {\n          exceptions[i] = this._convertRecurrenceException(exceptions[i], appointment.startDate);\n        }\n\n        return exceptions.join();\n      }\n\n      return recurrenceException;\n    }\n  }, {\n    key: \"_convertRecurrenceException\",\n    value: function _convertRecurrenceException(exceptionString, startDate) {\n      var _this17 = this;\n\n      exceptionString = exceptionString.replace(/\\s/g, \"\");\n\n      var getConvertedToTimeZone = function getConvertedToTimeZone(date) {\n        return _this17.timeZoneCalculator.createDate(date, {\n          path: \"toGrid\"\n        });\n      };\n\n      var exceptionDate = dateSerialization.deserializeDate(exceptionString);\n      var convertedStartDate = getConvertedToTimeZone(startDate);\n      var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);\n      convertedExceptionDate = timeZoneUtils.correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, this.option(\"timeZone\"));\n      exceptionString = dateSerialization.serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);\n      return exceptionString;\n    }\n  }, {\n    key: \"dayHasAppointment\",\n    value: function dayHasAppointment(day, rawAppointment, trimTime) {\n      var _this18 = this;\n\n      var getConvertedToTimeZone = function getConvertedToTimeZone(date) {\n        return _this18.timeZoneCalculator.createDate(date, {\n          path: \"toGrid\"\n        });\n      };\n\n      var appointment = this.createAppointmentAdapter(rawAppointment);\n      var startDate = new Date(appointment.startDate);\n      var endDate = new Date(appointment.endDate);\n      startDate = getConvertedToTimeZone(startDate);\n      endDate = getConvertedToTimeZone(endDate);\n\n      if (day.getTime() === endDate.getTime()) {\n        return startDate.getTime() === endDate.getTime();\n      }\n\n      if (trimTime) {\n        day = dateUtils.trimTime(day);\n        startDate = dateUtils.trimTime(startDate);\n        endDate = dateUtils.trimTime(endDate);\n      }\n\n      var dayTimeStamp = day.getTime();\n      var startDateTimeStamp = startDate.getTime();\n      var endDateTimeStamp = endDate.getTime();\n      return inArray(dayTimeStamp, [startDateTimeStamp, endDateTimeStamp]) > -1 || startDateTimeStamp < dayTimeStamp && endDateTimeStamp > dayTimeStamp;\n    }\n  }, {\n    key: \"setTargetedAppointmentResources\",\n    value: function setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\n      var groups = this._getCurrentViewOption(\"groups\");\n\n      if (null !== groups && void 0 !== groups && groups.length) {\n        var resourcesSetter = this._resourcesManager._dataAccessors.setter;\n        var workSpace = this._workSpace;\n        var getGroups;\n        var setResourceCallback;\n\n        if (this._isAgenda()) {\n          getGroups = function getGroups() {\n            var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\n\n            return workSpace._getCellGroups(apptSettings[0].groupIndex);\n          };\n\n          setResourceCallback = function setResourceCallback(_, group) {\n            resourcesSetter[group.name](rawAppointment, group.id);\n          };\n        } else {\n          getGroups = function getGroups() {\n            var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\n            return workSpace.getCellDataByCoordinates({\n              left: setting.left,\n              top: setting.top\n            }).groups;\n          };\n\n          setResourceCallback = function setResourceCallback(field, value) {\n            resourcesSetter[field](rawAppointment, value);\n          };\n        }\n\n        each(getGroups.call(this), setResourceCallback);\n      }\n    }\n  }, {\n    key: \"getStartViewDate\",\n    value: function getStartViewDate() {\n      return this._workSpace.getStartViewDate();\n    }\n  }, {\n    key: \"getEndViewDate\",\n    value: function getEndViewDate() {\n      return this._workSpace.getEndViewDate();\n    }\n  }, {\n    key: \"showAppointmentPopup\",\n    value: function showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\n      var _this19 = this;\n\n      var appointment = this.createAppointmentAdapter(rawTargetedAppointment || rawAppointment);\n      var newTargetedAppointment = extend({}, rawAppointment, rawTargetedAppointment);\n\n      this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, function () {\n        if (createNewAppointment || isEmptyObject(rawAppointment)) {\n          delete _this19._editAppointmentData;\n          _this19._editing.allowAdding && _this19._appointmentPopup.show(rawAppointment, true);\n        } else {\n          _this19._editAppointmentData = rawAppointment;\n\n          _this19._appointmentPopup.show(rawAppointment, _this19._editing.allowUpdating);\n        }\n      }, false, true);\n    }\n  }, {\n    key: \"hideAppointmentPopup\",\n    value: function hideAppointmentPopup(saveChanges) {\n      if (this._appointmentPopup && this._appointmentPopup.isVisible()) {\n        saveChanges && this._appointmentPopup.saveChanges();\n\n        this._appointmentPopup.hide();\n      }\n    }\n  }, {\n    key: \"showAppointmentTooltip\",\n    value: function showAppointmentTooltip(appointment, element, targetedAppointment) {\n      if (appointment) {\n        var settings = utils.dataAccessors.getAppointmentSettings(element);\n        var deferredColor = this.fire(\"getAppointmentColor\", {\n          itemData: targetedAppointment || appointment,\n          groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex\n        });\n        var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\n        this.showAppointmentTooltipCore(element, [info]);\n      }\n    }\n  }, {\n    key: \"showAppointmentTooltipCore\",\n    value: function showAppointmentTooltipCore(target, data, options) {\n      if (this._appointmentTooltip.isAlreadyShown(target)) {\n        this.hideAppointmentTooltip();\n      } else {\n        this._appointmentTooltip.show(target, data, extend(this._getExtraAppointmentTooltipOptions(), options));\n      }\n    }\n  }, {\n    key: \"hideAppointmentTooltip\",\n    value: function hideAppointmentTooltip() {\n      this._appointmentTooltip && this._appointmentTooltip.hide();\n    }\n  }, {\n    key: \"scrollToTime\",\n    value: function scrollToTime(hours, minutes, date) {\n      this._workSpace.scrollToTime(hours, minutes, date);\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(date, groups, allDay) {\n      this._workSpace.scrollTo(date, groups, allDay);\n    }\n  }, {\n    key: \"_isHorizontalVirtualScrolling\",\n    value: function _isHorizontalVirtualScrolling() {\n      var scrolling = this.option(\"scrolling\");\n      var orientation = scrolling.orientation,\n          mode = scrolling.mode;\n      var isVirtualScrolling = \"virtual\" === mode;\n      return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation);\n    }\n  }, {\n    key: \"addAppointment\",\n    value: function addAppointment(rawAppointment) {\n      var _this20 = this;\n\n      var appointment = this.createAppointmentAdapter(rawAppointment);\n      appointment.text = appointment.text || \"\";\n      var serializedAppointment = appointment.source(true);\n      var addingOptions = {\n        appointmentData: serializedAppointment,\n        cancel: false\n      };\n\n      this._actions[StoreEventNames.ADDING](addingOptions);\n\n      return this._processActionResult(addingOptions, function (canceled) {\n        if (canceled) {\n          return new Deferred().resolve();\n        }\n\n        _this20._expandAllDayPanel(serializedAppointment);\n\n        return _this20._appointmentModel.add(serializedAppointment).always(function (storeAppointment) {\n          return _this20._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment);\n        });\n      });\n    }\n  }, {\n    key: \"updateAppointment\",\n    value: function updateAppointment(target, appointment) {\n      return this._updateAppointment(target, appointment);\n    }\n  }, {\n    key: \"deleteAppointment\",\n    value: function deleteAppointment(rawAppointment) {\n      var deletingOptions = {\n        appointmentData: rawAppointment,\n        cancel: false\n      };\n\n      this._actions[StoreEventNames.DELETING](deletingOptions);\n\n      this._processActionResult(deletingOptions, function (canceled) {\n        var _this21 = this;\n\n        if (!canceled) {\n          this._appointmentModel.remove(rawAppointment).always(function (storeAppointment) {\n            return _this21._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this._editAppointmentData) {\n        this._appointments.focus();\n      } else {\n        this._workSpace.focus();\n      }\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex();\n    }\n  }, {\n    key: \"createAppointmentAdapter\",\n    value: function createAppointmentAdapter(rawAppointment) {\n      var _this22 = this;\n\n      var options = {\n        getField: function getField(rawAppointment, property) {\n          return _this22.fire(\"getField\", property, rawAppointment);\n        },\n        setField: function setField(rawAppointment, property, value) {\n          return _this22.fire(\"setField\", property, rawAppointment, value);\n        },\n        getTimeZoneCalculator: function getTimeZoneCalculator() {\n          return _this22.timeZoneCalculator;\n        }\n      };\n      return new AppointmentAdapter(rawAppointment, options);\n    }\n  }]);\n\n  return Scheduler;\n}(Widget);\n\nScheduler.include(DataHelperMixin);\nregisterComponent(\"dxScheduler\", Scheduler);\nexport default Scheduler;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/ui.scheduler.js"],"names":["_extends","registerComponent","config","devices","$","BindableTemplate","EmptyTemplate","inArray","browser","Callbacks","noop","compileGetter","compileSetter","getBoundingRect","dateUtils","dateSerialization","Deferred","when","fromPromise","extend","each","touch","isDefined","isString","isObject","isFunction","isEmptyObject","isDeferred","isPromise","hasWindow","DataHelperMixin","triggerResizeEvent","dateLocalization","messageLocalization","custom","customDialog","isMaterial","errors","Widget","AppointmentPopup","CompactAppointmentsHelper","DesktopTooltipStrategy","MobileTooltipStrategy","hide","hideLoading","show","showLoading","AppointmentCollection","AppointmentLayoutManager","SchedulerAppointmentModel","Header","ResourceManager","subscribes","getRecurrenceProcessor","timeZoneUtils","SchedulerAgenda","SchedulerTimelineDay","SchedulerTimelineMonth","SchedulerTimelineWeek","SchedulerTimelineWorkWeek","SchedulerWorkSpaceDay","SchedulerWorkSpaceMonth","SchedulerWorkSpaceWeek","SchedulerWorkSpaceWorkWeek","AppointmentAdapter","TimeZoneCalculator","AppointmentTooltipInfo","AppointmentSettingsGenerator","AppointmentFilter","utils","MINUTES_IN_HOUR","WIDGET_CLASS","WIDGET_SMALL_CLASS","concat","WIDGET_ADAPTIVE_CLASS","WIDGET_WIN_NO_TOUCH_CLASS","WIDGET_READONLY_CLASS","WIDGET_SMALL_WIDTH","FULL_DATE_FORMAT","UTC_FULL_DATE_FORMAT","VIEWS_CONFIG","day","workSpace","renderingStrategy","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","StoreEventNames","ADDING","ADDED","DELETING","DELETED","UPDATING","UPDATED","RECURRENCE_EDITING_MODE","SERIES","OCCURENCE","CANCEL","Scheduler","defaultOptions","views","currentView","currentDate","trimTime","Date","min","max","dateSerializationFormat","firstDayOfWeek","groups","resources","dataSource","customizeDateNavigatorText","appointmentTemplate","dropDownAppointmentTemplate","appointmentCollectorTemplate","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","startDayHour","endDayHour","editing","allowAdding","allowDeleting","allowDragging","allowResizing","allowUpdating","allowTimeZoneEditing","allowEditingTimeZones","showAllDayPanel","showCurrentTimeIndicator","shadeUntilCurrentTime","indicatorUpdateInterval","indicatorTime","recurrenceEditMode","cellDuration","maxAppointmentsPerCell","selectedCellData","groupByDate","onAppointmentRendered","onAppointmentClick","onAppointmentDblClick","onAppointmentContextMenu","onCellClick","onCellContextMenu","onAppointmentAdding","onAppointmentAdded","onAppointmentUpdating","onAppointmentUpdated","onAppointmentDeleting","onAppointmentDeleted","onAppointmentFormOpening","appointmentTooltipTemplate","appointmentPopupTemplate","crossScrollingEnabled","useDropDownViewSwitcher","startDateExpr","endDateExpr","textExpr","descriptionExpr","allDayExpr","recurrenceRuleExpr","recurrenceExceptionExpr","disabledExpr","remoteFiltering","timeZone","startDateTimeZoneExpr","endDateTimeZoneExpr","noDataText","format","adaptivityEnabled","allowMultipleCellSelection","scrolling","mode","renovateRender","_draggingMode","_appointmentTooltipOffset","x","y","_appointmentTooltipButtonsPosition","_appointmentTooltipOpenButtonText","_dropDownButtonIcon","_appointmentCountPerCell","_collectorOffset","_appointmentOffset","integrationOptions","useDeferUpdateForTemplates","device","real","deviceType","isSimulator","options","focusStateEnabled","current","generic","data","index","element","text","split","forEach","span","addClass","append","_deprecatedOptions","since","message","alias","promise","postponedOperations","add","_reloadDataSource","bind","whenLoaded","_loadResources","resolveCallbacks","done","resolve","_postponeDataSourceLoading","args","value","name","_updateOption","_dateOption","option","_workSpace","_header","_getViewStartByOptions","_appointments","_filterAppointmentsByDate","_initDataSource","_appointmentModel","setDataSource","_dataSource","_postponeResourceLoading","_processCurrentView","_getCurrentViewOptions","repaint","fire","getLayoutManager","initRenderingStrategy","_getAppointmentsRenderingStrategy","_validateCellDuration","items","allowDrag","_allowDragging","allowResize","_allowResizing","itemTemplate","_getAppointmentTemplate","_refreshWorkSpace","_updateHeader","_resourcesManager","setResources","setDataAccessors","_combineDataAccessors","_actions","_createActionByOption","_getAppointmentRenderedAction","_readyToRenderAppointments","_getAppointmentsToRepaint","_dimensionChanged","_initEditing","_editing","_bringEditingModeToAppointments","hideAppointmentTooltip","_cleanPopup","_updateExpression","_initAppointmentTemplate","_toggleAdaptiveClass","_isHorizontalVirtualScrolling","fullName","viewCountConfig","_getViewCountConfig","intervalCount","_getCurrentViewOption","_currentView","optionName","optionValue","deserializeDate","getDateSerializationFormat","editingConfig","allowDelete","_isAgenda","allowAllDayResize","_supportAllDayResizing","_getCurrentViewType","appointmentFilter","hasAllDayAppointments","date","calculateTimezoneByValue","dateRange","getDateRange","startDate","timeZoneCalculator","createDate","path","endDate","filterByDate","result","loadResources","_loadedResources","load","_fireContentReadyAction","fail","reject","isLoading","container","$element","position","of","contentReadyBase","fireContentReady","_workSpaceRecalculation","_this$_workSpaceRecal","filteredItems","getFilteredItems","_toggleSmallClass","_isVisible","_cleanAllowedPositions","_isAllDayExpanded","appointments","_layoutManager","createAppointmentsMap","_appointmentPopup","triggerResize","updatePopupFullScreenMode","width","get","toggleClass","visible","paginate","_initExpressions","startDateTimeZone","endDateTimeZone","allDay","description","recurrenceRule","recurrenceException","disabled","msie","combinedDataAccessors","getAppointmentDurationInMinutes","_initActions","_compactAppointmentsHelper","_asyncTemplatesTimers","_dataSourceLoadedCallback","_subscribes","getClientOffset","getClientTimezoneOffset","getCommonOffset","getAppointmentOffset","appointmentTimezone","_templateManager","addDefaultTemplates","appointmentTooltip","dropDownAppointment","expr","_dataAccessors","createGetter","property","getDate","getter","valueOf","item","$container","model","getAppointmentsInstance","_renderAppointmentTemplate","resourcesDataAccessors","type","accessor","_renderContentImpl","_renderAppointments","getWorkSpace","onDataSourceChanged","_this$getWorkSpace","isVirtualScrolling","filter","workspace","_filteredItems","_filterAppointments","preRenderAppointments","allDayExpanded","length","cleanModelState","getRepaintedAppointments","fields","setter","dateGetter","dateSetter","field","that","apply","arguments","forceIsoDateParsing","object","serializeDate","call","exprObj","replace","_isReadOnly","prop","Object","prototype","hasOwnProperty","_this$_recurrenceDial","_appointmentTooltip","dispose","_recurrenceDialog","hideAppointmentPopup","clearTimeout","excludeValidators","_renderHeader","_createComponent","_appointmentsConfig","_getAppointmentTooltipOptions","_isLoaded","_isDataSourceLoading","_initMarkupCore","_dataSourceChangedHandler","createComponent","getScrollableContainer","getWorkSpaceScrollableContainer","getAppointmentTemplate","showAppointmentPopup","checkAndDeleteAppointment","isAppointmentInAllDayPanel","createFormattedDateText","appointment","targetedAppointment","getAppointmentDisabled","createAppointmentAdapter","targetedAdapter","_checkRecurringAppointment","deleteAppointment","rtlEnabled","offset","appointmentData","itTakesAllDay","appointmentTakesAllDay","supportAllDayRow","_cleanWorkspace","_renderWorkSpace","fixedContainer","getFixedContainer","allDayContainer","getAllDayContainer","_waitAsyncTemplate","_this$_workSpaceRecal2","_isResourcesLoaded","_isDataSourceLoaded","isLoaded","$header","appendTo","_headerConfig","currentViewOptions","countConfig","isAdaptive","tabIndex","observer","todayDate","onItemRendered","onItemClick","onItemContextMenu","_allowAllDayResizing","onContentReady","needApplyCollectorOffset","_","view","isViewIsObject","viewName","viewType","isCurrentViewValid","log","$workSpace","workSpaceComponent","workSpaceConfig","_workSpaceConfig","initDragBehavior","_all","_attachTablesEvents","getWorkArea","_recalculateWorkspace","_getHeaderDate","getCollectorOffset","_getViewByName","viewCount","i","_refreshDateTimeIndication","_currentViewOptions$s","horizontalVirtualScrollingAllowed","orientation","_currentViewOptions$s2","accessKey","onSelectionChanged","draggingMode","_isRenovatedRender","hoursInterval","_getTemplate","callback","_options","silent","timer","setTimeout","push","_getTemplateByOption","detach","_dispose","remove","getScrollable","getGroupedScrollableScrollTop","getScrollableScrollLeft","getAllDayHeight","getAllDayOffset","getHeaderPanelHeight","getWorkSpaceLeftOffset","targetAppointment","singleAppointment","exceptionDate","isDeleted","isPopupEditing","dragEvent","_updatedRecAppointment","evalRecurrenceRule","isValid","editMode","_excludeAppointmentFromSeries","cancel","_showRecurrenceChangeConfirm","editingMode","moveAppointmentBack","rawAppointment","newRawAppointment","newAppointment","canCreateNewAppointment","keyPropertyName","keyName","addAppointment","_createRecurrenceException","source","_editAppointmentData","_updateAppointment","_getSerializedDate","join","isAllDay","setHours","getHours","getMinutes","getSeconds","getMilliseconds","seriesText","occurrenceText","messageHtml","showCloseButton","showTitle","buttons","onClick","popupOptions","onHidden","e","component","getConvertedFromGrid","isValidDate","isNaN","getTime","targetCell","getTargetCellData","cellStartDate","cellEndDate","appointmentStartDate","appointmentEndDate","resultedStartDate","duration","isKeepAppointmentHours","keepOriginalHours","timeInMs","resultedEndDate","calculateEndDate","dateCopy","timeZoneOffset","getTimezoneOffsetChangeInMs","rawResult","setResourcesToItem","settings","dataAccessors","getAppointmentSettings","info","getAppointmentInfo","appointmentIndex","_itemIndexKey","adapter","clone","isRecurrent","getStartDate","getRenderingStrategyInstance","getAppointmentDataCalculator","newStartDate","sourceAppointment","rawTargetedAppointment","setTargetedAppointmentResources","subject","action","Array","slice","Error","getDataByDroppableCell","target","onUpdatePrevented","updatingOptions","newData","oldData","performFailAction","err","_processActionResult","canceled","deferred","_expandAllDayPanel","update","always","storeAppointment","_onDataPromiseCompleted","actionOptions","resolveCallback","callbackResult","state","handlerName","error","isVisible","getPopup","getUpdatedAppointment","getUpdatedAppointmentKeys","exceptions","_convertRecurrenceException","exceptionString","getConvertedToTimeZone","convertedStartDate","convertedExceptionDate","correctRecurrenceExceptionByTimezone","dayTimeStamp","startDateTimeStamp","endDateTimeStamp","resourcesSetter","getGroups","setResourceCallback","apptSettings","_positionMap","_getCellGroups","groupIndex","group","id","setting","getCellDataByCoordinates","left","top","getStartViewDate","getEndViewDate","createNewAppointment","newTargetedAppointment","saveChanges","deferredColor","itemData","showAppointmentTooltipCore","isAlreadyShown","_getExtraAppointmentTooltipOptions","hours","minutes","scrollToTime","scrollTo","serializedAppointment","addingOptions","deletingOptions","focus","firstDayOfWeekIndex","getField","setField","getTimeZoneCalculator","include"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport config from \"../../core/config\";\r\nimport devices from \"../../core/devices\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../core/templates/empty_template\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject,\r\n    isDeferred,\r\n    isPromise\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    custom as customDialog\r\n} from \"../dialog\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport AppointmentPopup from \"./appointmentPopup\";\r\nimport {\r\n    CompactAppointmentsHelper\r\n} from \"./compactAppointmentsHelper\";\r\nimport {\r\n    DesktopTooltipStrategy\r\n} from \"./tooltip_strategies/desktopTooltipStrategy\";\r\nimport {\r\n    MobileTooltipStrategy\r\n} from \"./tooltip_strategies/mobileTooltipStrategy\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"./loading\";\r\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\r\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\r\nimport SchedulerAppointmentModel from \"./appointment_model\";\r\nimport {\r\n    Header\r\n} from \"./header/header\";\r\nimport {\r\n    ResourceManager\r\n} from \"./resources/resourceManager\";\r\nimport subscribes from \"./subscribes\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport timeZoneUtils from \"./utils.timeZone\";\r\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\r\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\r\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\r\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\r\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\r\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\r\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\r\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\r\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\r\nimport AppointmentAdapter from \"./appointmentAdapter\";\r\nimport {\r\n    TimeZoneCalculator\r\n} from \"./timeZoneCalculator\";\r\nimport {\r\n    AppointmentTooltipInfo\r\n} from \"./dataStructures\";\r\nimport {\r\n    AppointmentSettingsGenerator\r\n} from \"./appointmentSettingsGenerator\";\r\nimport AppointmentFilter from \"./appointments/appointmentFilter\";\r\nimport utils from \"./utils\";\r\nvar MINUTES_IN_HOUR = 60;\r\nvar WIDGET_CLASS = \"dx-scheduler\";\r\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\r\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\r\nvar WIDGET_WIN_NO_TOUCH_CLASS = \"\".concat(WIDGET_CLASS, \"-win-no-touch\");\r\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\r\nvar WIDGET_SMALL_WIDTH = 400;\r\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\r\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\r\nvar VIEWS_CONFIG = {\r\n    day: {\r\n        workSpace: SchedulerWorkSpaceDay,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    week: {\r\n        workSpace: SchedulerWorkSpaceWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    workWeek: {\r\n        workSpace: SchedulerWorkSpaceWorkWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    month: {\r\n        workSpace: SchedulerWorkSpaceMonth,\r\n        renderingStrategy: \"horizontalMonth\"\r\n    },\r\n    timelineDay: {\r\n        workSpace: SchedulerTimelineDay,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWeek: {\r\n        workSpace: SchedulerTimelineWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWorkWeek: {\r\n        workSpace: SchedulerTimelineWorkWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineMonth: {\r\n        workSpace: SchedulerTimelineMonth,\r\n        renderingStrategy: \"horizontalMonthLine\"\r\n    },\r\n    agenda: {\r\n        workSpace: SchedulerAgenda,\r\n        renderingStrategy: \"agenda\"\r\n    }\r\n};\r\nvar StoreEventNames = {\r\n    ADDING: \"onAppointmentAdding\",\r\n    ADDED: \"onAppointmentAdded\",\r\n    DELETING: \"onAppointmentDeleting\",\r\n    DELETED: \"onAppointmentDeleted\",\r\n    UPDATING: \"onAppointmentUpdating\",\r\n    UPDATED: \"onAppointmentUpdated\"\r\n};\r\nvar RECURRENCE_EDITING_MODE = {\r\n    SERIES: \"editSeries\",\r\n    OCCURENCE: \"editOccurence\",\r\n    CANCEL: \"cancel\"\r\n};\r\nclass Scheduler extends Widget {\r\n    get appointmentFilter() {\r\n        return new AppointmentFilter(this)\r\n    }\r\n    _getDefaultOptions() {\r\n        var defaultOptions = extend(super._getDefaultOptions(), {\r\n            views: [\"day\", \"week\"],\r\n            currentView: \"day\",\r\n            currentDate: dateUtils.trimTime(new Date),\r\n            min: void 0,\r\n            max: void 0,\r\n            dateSerializationFormat: void 0,\r\n            firstDayOfWeek: void 0,\r\n            groups: [],\r\n            resources: [],\r\n            dataSource: null,\r\n            customizeDateNavigatorText: void 0,\r\n            appointmentTemplate: \"item\",\r\n            dropDownAppointmentTemplate: \"dropDownAppointment\",\r\n            appointmentCollectorTemplate: \"appointmentCollector\",\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            editing: {\r\n                allowAdding: true,\r\n                allowDeleting: true,\r\n                allowDragging: true,\r\n                allowResizing: true,\r\n                allowUpdating: true,\r\n                allowTimeZoneEditing: false,\r\n                allowEditingTimeZones: false\r\n            },\r\n            showAllDayPanel: true,\r\n            showCurrentTimeIndicator: true,\r\n            shadeUntilCurrentTime: false,\r\n            indicatorUpdateInterval: 3e5,\r\n            indicatorTime: void 0,\r\n            recurrenceEditMode: \"dialog\",\r\n            cellDuration: 30,\r\n            maxAppointmentsPerCell: \"auto\",\r\n            selectedCellData: [],\r\n            groupByDate: false,\r\n            onAppointmentRendered: null,\r\n            onAppointmentClick: null,\r\n            onAppointmentDblClick: null,\r\n            onAppointmentContextMenu: null,\r\n            onCellClick: null,\r\n            onCellContextMenu: null,\r\n            onAppointmentAdding: null,\r\n            onAppointmentAdded: null,\r\n            onAppointmentUpdating: null,\r\n            onAppointmentUpdated: null,\r\n            onAppointmentDeleting: null,\r\n            onAppointmentDeleted: null,\r\n            onAppointmentFormOpening: null,\r\n            appointmentTooltipTemplate: \"appointmentTooltip\",\r\n            appointmentPopupTemplate: \"appointmentPopup\",\r\n            crossScrollingEnabled: false,\r\n            useDropDownViewSwitcher: false,\r\n            startDateExpr: \"startDate\",\r\n            endDateExpr: \"endDate\",\r\n            textExpr: \"text\",\r\n            descriptionExpr: \"description\",\r\n            allDayExpr: \"allDay\",\r\n            recurrenceRuleExpr: \"recurrenceRule\",\r\n            recurrenceExceptionExpr: \"recurrenceException\",\r\n            disabledExpr: \"disabled\",\r\n            remoteFiltering: false,\r\n            timeZone: \"\",\r\n            startDateTimeZoneExpr: \"startDateTimeZone\",\r\n            endDateTimeZoneExpr: \"endDateTimeZone\",\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            adaptivityEnabled: false,\r\n            allowMultipleCellSelection: true,\r\n            scrolling: {\r\n                mode: \"standard\"\r\n            },\r\n            renovateRender: true,\r\n            _draggingMode: \"outlook\",\r\n            _appointmentTooltipOffset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            _appointmentTooltipButtonsPosition: \"bottom\",\r\n            _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\r\n            _dropDownButtonIcon: \"overflow\",\r\n            _appointmentCountPerCell: 2,\r\n            _collectorOffset: 0,\r\n            _appointmentOffset: 26\r\n        });\r\n        return extend(true, defaultOptions, {\r\n            integrationOptions: {\r\n                useDeferUpdateForTemplates: false\r\n            }\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !devices.current().generic\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                editing: {\r\n                    allowDragging: false,\r\n                    allowResizing: false\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                dateCellTemplate: function(data, index, element) {\r\n                    var text = data.text;\r\n                    text.split(\" \").forEach((function(text, index) {\r\n                        var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\r\n                        $(element).append(span);\r\n                        if (!index) {\r\n                            $(element).append(\" \")\r\n                        }\r\n                    }))\r\n                },\r\n                _appointmentTooltipOffset: {\r\n                    x: 0,\r\n                    y: 11\r\n                },\r\n                _appointmentTooltipButtonsPosition: \"top\",\r\n                _appointmentTooltipOpenButtonText: null,\r\n                _dropDownButtonIcon: \"chevrondown\",\r\n                _appointmentCountPerCell: 1,\r\n                _collectorOffset: 20,\r\n                _appointmentOffset: 30\r\n            }\r\n        }])\r\n    }\r\n    _setDeprecatedOptions() {\r\n        super._setDeprecatedOptions();\r\n        extend(this._deprecatedOptions, {\r\n            dropDownAppointmentTemplate: {\r\n                since: \"19.2\",\r\n                message: \"appointmentTooltipTemplate\"\r\n            },\r\n            allowEditingTimeZones: {\r\n                since: \"20.1\",\r\n                alias: \"allowTimeZoneEditing\"\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentSettingsGenerator() {\r\n        return new AppointmentSettingsGenerator(this)\r\n    }\r\n    _postponeDataSourceLoading(promise) {\r\n        this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise)\r\n    }\r\n    _postponeResourceLoading() {\r\n        var whenLoaded = this.postponedOperations.add(\"_loadResources\", () => this._loadResources());\r\n        var resolveCallbacks = new Deferred;\r\n        whenLoaded.done(resources => {\r\n            resolveCallbacks.resolve(resources)\r\n        });\r\n        this._postponeDataSourceLoading(whenLoaded);\r\n        return resolveCallbacks.promise()\r\n    }\r\n    _optionChanged(args) {\r\n        var value = args.value;\r\n        var name = args.name;\r\n        switch (args.name) {\r\n            case \"customizeDateNavigatorText\":\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"currentDate\":\r\n                value = this._dateOption(name);\r\n                value = dateUtils.trimTime(new Date(value));\r\n                this.option(\"selectedCellData\", []);\r\n                this._workSpace.option(name, new Date(value));\r\n                this._header.option(name, new Date(value));\r\n                this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\r\n                this._appointments.option(\"items\", []);\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                this._appointmentModel.setDataSource(this._dataSource);\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._filterAppointmentsByDate();\r\n                    this._updateOption(\"workSpace\", \"showAllDayPanel\", this.option(\"showAllDayPanel\"))\r\n                });\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                value = this._dateOption(name);\r\n                this._updateOption(\"header\", name, new Date(value));\r\n                this._updateOption(\"workSpace\", name, new Date(value));\r\n                break;\r\n            case \"views\":\r\n                this._processCurrentView();\r\n                if (this._getCurrentViewOptions()) {\r\n                    this.repaint()\r\n                } else {\r\n                    this._header.option(name, value)\r\n                }\r\n                break;\r\n            case \"useDropDownViewSwitcher\":\r\n                this._header.option(name, value);\r\n                break;\r\n            case \"currentView\":\r\n                this._processCurrentView();\r\n                this.fire(\"validateDayHours\");\r\n                this.getLayoutManager().initRenderingStrategy(this._getAppointmentsRenderingStrategy());\r\n                this._validateCellDuration();\r\n                this._appointments.option({\r\n                    items: [],\r\n                    allowDrag: this._allowDragging(),\r\n                    allowResize: this._allowResizing(),\r\n                    itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\r\n                });\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._refreshWorkSpace(resources);\r\n                    this._updateHeader();\r\n                    this._filterAppointmentsByDate();\r\n                    this._appointments.option(\"allowAllDayResize\", \"day\" !== value)\r\n                });\r\n                break;\r\n            case \"appointmentTemplate\":\r\n                this._appointments.option(\"itemTemplate\", value);\r\n                break;\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this.repaint();\r\n                break;\r\n            case \"groups\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate()\r\n                });\r\n                break;\r\n            case \"resources\":\r\n                this._resourcesManager.setResources(this.option(\"resources\"));\r\n                this._appointmentModel.setDataAccessors(this._combineDataAccessors());\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate()\r\n                });\r\n                break;\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n                this.fire(\"validateDayHours\");\r\n                this._appointments.option(\"items\", []);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.repaint();\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case StoreEventNames.ADDING:\r\n            case StoreEventNames.ADDED:\r\n            case StoreEventNames.UPDATING:\r\n            case StoreEventNames.UPDATED:\r\n            case StoreEventNames.DELETING:\r\n            case StoreEventNames.DELETED:\r\n            case \"onAppointmentFormOpening\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            case \"onAppointmentRendered\":\r\n                this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\r\n                break;\r\n            case \"onAppointmentClick\":\r\n                this._appointments.option(\"onItemClick\", this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentDblClick\":\r\n                this._appointments.option(name, this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentContextMenu\":\r\n                this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\r\n                break;\r\n            case \"noDataText\":\r\n            case \"allowMultipleCellSelection\":\r\n            case \"selectedCellData\":\r\n            case \"accessKey\":\r\n            case \"onCellClick\":\r\n            case \"onCellContextMenu\":\r\n                this._workSpace.option(name, value);\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    if (this._readyToRenderAppointments) {\r\n                        this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                    }\r\n                });\r\n                break;\r\n            case \"cellDuration\":\r\n                this._validateCellDuration();\r\n                this._appointments.option(\"items\", []);\r\n                if (this._readyToRenderAppointments) {\r\n                    this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\r\n                    this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                }\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._updateOption(\"header\", name, value);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.option(name, value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"width\":\r\n                this._updateOption(\"header\", name, value);\r\n                if (this.option(\"crossScrollingEnabled\")) {\r\n                    this._updateOption(\"workSpace\", \"width\", value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"editing\":\r\n                this._initEditing();\r\n                var editing = this._editing;\r\n                this._bringEditingModeToAppointments(editing);\r\n                this.hideAppointmentTooltip();\r\n                this._cleanPopup();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._filterAppointmentsByDate();\r\n                    this._updateOption(\"workSpace\", \"allDayExpanded\", value);\r\n                    this._updateOption(\"workSpace\", name, value)\r\n                });\r\n                break;\r\n            case \"showCurrentTimeIndicator\":\r\n            case \"indicatorTime\":\r\n            case \"indicatorUpdateInterval\":\r\n            case \"shadeUntilCurrentTime\":\r\n            case \"groupByDate\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this.repaint();\r\n                break;\r\n            case \"appointmentDragging\":\r\n            case \"appointmentTooltipTemplate\":\r\n            case \"appointmentPopupTemplate\":\r\n            case \"recurrenceEditMode\":\r\n            case \"remoteFiltering\":\r\n            case \"timeZone\":\r\n            case \"dropDownAppointmentTemplate\":\r\n            case \"appointmentCollectorTemplate\":\r\n            case \"_appointmentTooltipOffset\":\r\n            case \"_appointmentTooltipButtonsPosition\":\r\n            case \"_appointmentTooltipOpenButtonText\":\r\n            case \"_dropDownButtonIcon\":\r\n            case \"_appointmentCountPerCell\":\r\n            case \"_collectorOffset\":\r\n            case \"_appointmentOffset\":\r\n                this.repaint();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"maxAppointmentsPerCell\":\r\n                break;\r\n            case \"startDateExpr\":\r\n            case \"endDateExpr\":\r\n            case \"startDateTimeZoneExpr\":\r\n            case \"endDateTimeZoneExpr\":\r\n            case \"textExpr\":\r\n            case \"descriptionExpr\":\r\n            case \"allDayExpr\":\r\n            case \"recurrenceRuleExpr\":\r\n            case \"recurrenceExceptionExpr\":\r\n            case \"disabledExpr\":\r\n                this._updateExpression(name, value);\r\n                this._appointmentModel.setDataAccessors(this._combineDataAccessors());\r\n                this._initAppointmentTemplate();\r\n                this.repaint();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                this._toggleAdaptiveClass();\r\n                this.repaint();\r\n                break;\r\n            case \"scrolling\":\r\n                this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\r\n                this._updateOption(\"workSpace\", args.fullName, value);\r\n                break;\r\n            case \"renovateRender\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                break;\r\n            case \"_draggingMode\":\r\n                this._workSpace.option(\"draggingMode\", value);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _updateHeader() {\r\n        var viewCountConfig = this._getViewCountConfig();\r\n        this._header.option(\"intervalCount\", viewCountConfig.intervalCount);\r\n        this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\r\n        this._header.option(\"min\", this._dateOption(\"min\"));\r\n        this._header.option(\"max\", this._dateOption(\"max\"));\r\n        this._header.option(\"currentDate\", this._dateOption(\"currentDate\"));\r\n        this._header.option(\"firstDayOfWeek\", this._getCurrentViewOption(\"firstDayOfWeek\"));\r\n        this._header.option(\"currentView\", this._currentView)\r\n    }\r\n    _dateOption(optionName) {\r\n        var optionValue = this._getCurrentViewOption(optionName);\r\n        return dateSerialization.deserializeDate(optionValue)\r\n    }\r\n    _getSerializationFormat(optionName) {\r\n        var value = this._getCurrentViewOption(optionName);\r\n        if (\"number\" === typeof value) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    }\r\n    _bringEditingModeToAppointments(editing) {\r\n        var editingConfig = {\r\n            allowDelete: editing.allowUpdating && editing.allowDeleting\r\n        };\r\n        if (!this._isAgenda()) {\r\n            editingConfig.allowDrag = editing.allowDragging;\r\n            editingConfig.allowResize = editing.allowResizing;\r\n            editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing()\r\n        }\r\n        this._appointments.option(editingConfig);\r\n        this.repaint()\r\n    }\r\n    _isAgenda() {\r\n        return \"agenda\" === this._getAppointmentsRenderingStrategy()\r\n    }\r\n    _allowDragging() {\r\n        return this._editing.allowDragging && !this._isAgenda()\r\n    }\r\n    _allowResizing() {\r\n        return this._editing.allowResizing && !this._isAgenda()\r\n    }\r\n    _allowAllDayResizing() {\r\n        return this._editing.allowResizing && this._supportAllDayResizing()\r\n    }\r\n    _supportAllDayResizing() {\r\n        return \"day\" !== this._getCurrentViewType() || this._currentView.intervalCount > 1\r\n    }\r\n    _isAllDayExpanded(items) {\r\n        return this.option(\"showAllDayPanel\") && this.appointmentFilter.hasAllDayAppointments(items)\r\n    }\r\n    _getTimezoneOffsetByOption(date) {\r\n        return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date)\r\n    }\r\n    _filterAppointmentsByDate() {\r\n        var dateRange = this._workSpace.getDateRange();\r\n        var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\r\n            path: \"fromGrid\"\r\n        });\r\n        var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\r\n            path: \"fromGrid\"\r\n        });\r\n        this._appointmentModel.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"))\r\n    }\r\n    _loadResources() {\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        var result = new Deferred;\r\n        this._resourcesManager.loadResources(groups).done(function(resources) {\r\n            this._loadedResources = resources;\r\n            result.resolve(resources)\r\n        }.bind(this));\r\n        return result.promise()\r\n    }\r\n    _reloadDataSource() {\r\n        var result = new Deferred;\r\n        if (this._dataSource) {\r\n            this._dataSource.load().done(function() {\r\n                hideLoading();\r\n                this._fireContentReadyAction(result)\r\n            }.bind(this)).fail((function() {\r\n                hideLoading();\r\n                result.reject()\r\n            }));\r\n            this._dataSource.isLoading() && showLoading({\r\n                container: this.$element(),\r\n                position: {\r\n                    of: this.$element()\r\n                }\r\n            })\r\n        } else {\r\n            this._fireContentReadyAction(result)\r\n        }\r\n        return result.promise()\r\n    }\r\n    _fireContentReadyAction(result) {\r\n        var contentReadyBase = super._fireContentReadyAction.bind(this);\r\n        var fireContentReady = () => {\r\n            contentReadyBase();\r\n            null === result || void 0 === result ? void 0 : result.resolve()\r\n        };\r\n        if (this._workSpaceRecalculation) {\r\n            var _this$_workSpaceRecal;\r\n            null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {\r\n                fireContentReady()\r\n            })\r\n        } else {\r\n            fireContentReady()\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        var filteredItems = this.getFilteredItems();\r\n        this._toggleSmallClass();\r\n        if (!this._isAgenda() && filteredItems && this._isVisible()) {\r\n            this._workSpace._cleanAllowedPositions();\r\n            this._workSpace.option(\"allDayExpanded\", this._isAllDayExpanded(filteredItems));\r\n            this._workSpace._dimensionChanged();\r\n            var appointments = this._layoutManager.createAppointmentsMap(filteredItems);\r\n            this._appointments.option(\"items\", appointments)\r\n        }\r\n        this.hideAppointmentTooltip();\r\n        this._appointmentPopup.triggerResize();\r\n        this._appointmentPopup.updatePopupFullScreenMode()\r\n    }\r\n    _clean() {\r\n        this._cleanPopup();\r\n        super._clean()\r\n    }\r\n    _toggleSmallClass() {\r\n        var width = getBoundingRect(this.$element().get(0)).width;\r\n        this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH)\r\n    }\r\n    _toggleAdaptiveClass() {\r\n        this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"))\r\n    }\r\n    _visibilityChanged(visible) {\r\n        visible && this._dimensionChanged()\r\n    }\r\n    _dataSourceOptions() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    }\r\n    _init() {\r\n        this._initExpressions({\r\n            startDate: this.option(\"startDateExpr\"),\r\n            endDate: this.option(\"endDateExpr\"),\r\n            startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\r\n            endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\r\n            allDay: this.option(\"allDayExpr\"),\r\n            text: this.option(\"textExpr\"),\r\n            description: this.option(\"descriptionExpr\"),\r\n            recurrenceRule: this.option(\"recurrenceRuleExpr\"),\r\n            recurrenceException: this.option(\"recurrenceExceptionExpr\"),\r\n            disabled: this.option(\"disabledExpr\")\r\n        });\r\n        super._init();\r\n        this._initDataSource();\r\n        this._loadedResources = [];\r\n        this.$element().addClass(WIDGET_CLASS).toggleClass(WIDGET_WIN_NO_TOUCH_CLASS, !!(browser.msie && touch));\r\n        this._initEditing();\r\n        this._resourcesManager = new ResourceManager(this.option(\"resources\"));\r\n        var combinedDataAccessors = this._combineDataAccessors();\r\n        this._appointmentModel = new SchedulerAppointmentModel(this._dataSource, combinedDataAccessors, this.getAppointmentDurationInMinutes());\r\n        this._initActions();\r\n        this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\r\n        this._asyncTemplatesTimers = [];\r\n        this._dataSourceLoadedCallback = Callbacks();\r\n        this._subscribes = subscribes;\r\n        this.timeZoneCalculator = new TimeZoneCalculator({\r\n            getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\r\n            getCommonOffset: (date, timeZone) => timeZoneUtils.calculateTimezoneByValue(timeZone || this.option(\"timeZone\"), date),\r\n            getAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\r\n        })\r\n    }\r\n    _initTemplates() {\r\n        this._initAppointmentTemplate();\r\n        this._templateManager.addDefaultTemplates({\r\n            appointmentTooltip: new EmptyTemplate,\r\n            dropDownAppointment: new EmptyTemplate\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _initAppointmentTemplate() {\r\n        var {\r\n            expr: expr\r\n        } = this._dataAccessors;\r\n        var createGetter = property => compileGetter(\"appointmentData.\".concat(property));\r\n        var getDate = getter => data => {\r\n            var value = getter(data);\r\n            if (value instanceof Date) {\r\n                return value.valueOf()\r\n            }\r\n            return value\r\n        };\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\r\n                text: createGetter(expr.textExpr),\r\n                startDate: getDate(createGetter(expr.startDateExpr)),\r\n                endDate: getDate(createGetter(expr.endDateExpr)),\r\n                startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\r\n                endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\r\n                allDay: createGetter(expr.allDayExpr),\r\n                recurrenceRule: createGetter(expr.recurrenceRuleExpr)\r\n            })\r\n        })\r\n    }\r\n    _combineDataAccessors() {\r\n        var resourcesDataAccessors = this._resourcesManager._dataAccessors;\r\n        var result = extend(true, {}, this._dataAccessors);\r\n        each(resourcesDataAccessors, function(type, accessor) {\r\n            result[type].resources = accessor\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    _renderContent() {\r\n        this._renderContentImpl()\r\n    }\r\n    _dataSourceChangedHandler(result) {\r\n        if (this._readyToRenderAppointments) {\r\n            this._workSpaceRecalculation.done(function() {\r\n                this._renderAppointments();\r\n                var filteredItems = this.getFilteredItems();\r\n                this.getWorkSpace().onDataSourceChanged(filteredItems)\r\n            }.bind(this))\r\n        }\r\n    }\r\n    isVirtualScrolling() {\r\n        var _this$getWorkSpace;\r\n        return null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.isVirtualScrolling()\r\n    }\r\n    _filterAppointments() {\r\n        return this.appointmentFilter.filter()\r\n    }\r\n    _renderAppointments() {\r\n        var workspace = this.getWorkSpace();\r\n        this._filteredItems = this._filterAppointments();\r\n        workspace.preRenderAppointments({\r\n            allDayExpanded: this._isAllDayExpanded(this._filteredItems),\r\n            appointments: this._filteredItems\r\n        });\r\n        if (this._filteredItems.length && this._isVisible()) {\r\n            this._appointments.option(\"items\", this._getAppointmentsToRepaint());\r\n            this._appointmentModel.cleanModelState()\r\n        } else {\r\n            this._appointments.option(\"items\", [])\r\n        }\r\n    }\r\n    _getAppointmentsToRepaint() {\r\n        var appointments = this._layoutManager.createAppointmentsMap(this._filteredItems);\r\n        return this._layoutManager.getRepaintedAppointments(appointments, this.getAppointmentsInstance().option(\"items\"))\r\n    }\r\n    _initExpressions(fields) {\r\n        if (!this._dataAccessors) {\r\n            this._dataAccessors = {\r\n                getter: {},\r\n                setter: {},\r\n                expr: {}\r\n            }\r\n        }\r\n        each(fields, function(name, expr) {\r\n            if (expr) {\r\n                var getter = compileGetter(expr);\r\n                var setter = compileSetter(expr);\r\n                var dateGetter;\r\n                var dateSetter;\r\n                if (field = name, \"startDate\" === field || \"endDate\" === field) {\r\n                    var that = this;\r\n                    dateGetter = function() {\r\n                        var value = getter.apply(this, arguments);\r\n                        if (config().forceIsoDateParsing) {\r\n                            if (!that.option(\"dateSerializationFormat\")) {\r\n                                var format = dateSerialization.getDateSerializationFormat(value);\r\n                                if (format) {\r\n                                    that.option(\"dateSerializationFormat\", format)\r\n                                }\r\n                            }\r\n                            value = dateSerialization.deserializeDate(value)\r\n                        }\r\n                        return value\r\n                    };\r\n                    dateSetter = function(object, value) {\r\n                        if (config().forceIsoDateParsing || that.option(\"dateSerializationFormat\")) {\r\n                            value = dateSerialization.serializeDate(value, that.option(\"dateSerializationFormat\"))\r\n                        }\r\n                        setter.call(this, object, value)\r\n                    }\r\n                }\r\n                this._dataAccessors.getter[name] = dateGetter || getter;\r\n                this._dataAccessors.setter[name] = dateSetter || setter;\r\n                this._dataAccessors.expr[name + \"Expr\"] = expr\r\n            } else {\r\n                delete this._dataAccessors.getter[name];\r\n                delete this._dataAccessors.setter[name];\r\n                delete this._dataAccessors.expr[name + \"Expr\"]\r\n            }\r\n            var field\r\n        }.bind(this))\r\n    }\r\n    _updateExpression(name, value) {\r\n        var exprObj = {};\r\n        exprObj[name.replace(\"Expr\", \"\")] = value;\r\n        this._initExpressions(exprObj)\r\n    }\r\n    _initEditing() {\r\n        var editing = this.option(\"editing\");\r\n        this._editing = {\r\n            allowAdding: !!editing,\r\n            allowUpdating: !!editing,\r\n            allowDeleting: !!editing,\r\n            allowResizing: !!editing,\r\n            allowDragging: !!editing\r\n        };\r\n        if (isObject(editing)) {\r\n            this._editing = extend(this._editing, editing)\r\n        }\r\n        this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\r\n        this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\r\n        this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly())\r\n    }\r\n    _isReadOnly() {\r\n        var result = true;\r\n        var editing = this._editing;\r\n        for (var prop in editing) {\r\n            if (Object.prototype.hasOwnProperty.call(editing, prop)) {\r\n                result = result && !editing[prop]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _dispose() {\r\n        var _this$_recurrenceDial;\r\n        this._appointmentTooltip && this._appointmentTooltip.dispose();\r\n        null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\r\n        this.hideAppointmentPopup();\r\n        this.hideAppointmentTooltip();\r\n        this._asyncTemplatesTimers.forEach(clearTimeout);\r\n        this._asyncTemplatesTimers = [];\r\n        super._dispose()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\r\n            onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\r\n            onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\r\n            onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\r\n            onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\r\n            onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\r\n            onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\")\r\n        }\r\n    }\r\n    _getAppointmentRenderedAction() {\r\n        return this._createActionByOption(\"onAppointmentRendered\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _renderFocusTarget() {\r\n        return noop()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.fire(\"validateDayHours\");\r\n        this._validateCellDuration();\r\n        this._processCurrentView();\r\n        this._renderHeader();\r\n        this._layoutManager = new AppointmentLayoutManager(this, this._getAppointmentsRenderingStrategy());\r\n        this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\r\n        this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\r\n        this._appointmentTooltip = new(this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\r\n        this._appointmentPopup = new AppointmentPopup(this);\r\n        if (this._isLoaded() || this._isDataSourceLoading()) {\r\n            this._initMarkupCore(this._loadedResources);\r\n            this._dataSourceChangedHandler(this._dataSource.items());\r\n            this._fireContentReadyAction()\r\n        } else {\r\n            this._loadResources().done(function(resources) {\r\n                this._initMarkupCore(resources);\r\n                this._reloadDataSource()\r\n            }.bind(this))\r\n        }\r\n    }\r\n    _getAppointmentTooltipOptions() {\r\n        return {\r\n            createComponent: this._createComponent.bind(this),\r\n            container: this.$element(),\r\n            getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\r\n            addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\r\n            getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\r\n            showAppointmentPopup: this.showAppointmentPopup.bind(this),\r\n            checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\r\n            isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\r\n            createFormattedDateText: (appointment, targetedAppointment, format) => this.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format),\r\n            getAppointmentDisabled: appointment => this.createAppointmentAdapter(appointment).disabled\r\n        }\r\n    }\r\n    checkAndDeleteAppointment(appointment, targetedAppointment) {\r\n        var targetedAdapter = this.createAppointmentAdapter(targetedAppointment);\r\n        this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {\r\n            this.deleteAppointment(appointment)\r\n        }, true)\r\n    }\r\n    _getExtraAppointmentTooltipOptions() {\r\n        return {\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            editing: this.option(\"editing\"),\r\n            offset: this.option(\"_appointmentTooltipOffset\")\r\n        }\r\n    }\r\n    isAppointmentInAllDayPanel(appointmentData) {\r\n        var workSpace = this._workSpace;\r\n        var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\r\n        return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\")\r\n    }\r\n    _initMarkupCore(resources) {\r\n        this._readyToRenderAppointments = hasWindow();\r\n        this._workSpace && this._cleanWorkspace();\r\n        this._renderWorkSpace(resources);\r\n        this._appointments.option({\r\n            fixedContainer: this._workSpace.getFixedContainer(),\r\n            allDayContainer: this._workSpace.getAllDayContainer()\r\n        });\r\n        this._waitAsyncTemplate(() => {\r\n            var _this$_workSpaceRecal2;\r\n            return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve()\r\n        });\r\n        this._filterAppointmentsByDate()\r\n    }\r\n    _isLoaded() {\r\n        return this._isResourcesLoaded() && this._isDataSourceLoaded()\r\n    }\r\n    _isResourcesLoaded() {\r\n        return isDefined(this._loadedResources)\r\n    }\r\n    _isDataSourceLoaded() {\r\n        return this._dataSource && this._dataSource.isLoaded()\r\n    }\r\n    _render() {\r\n        this._toggleSmallClass();\r\n        this._toggleAdaptiveClass();\r\n        super._render()\r\n    }\r\n    _renderHeader() {\r\n        var $header = $(\"<div>\").appendTo(this.$element());\r\n        this._header = this._createComponent($header, Header, this._headerConfig())\r\n    }\r\n    _headerConfig() {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var countConfig = this._getViewCountConfig();\r\n        var result = extend({\r\n            isAdaptive: this.option(\"adaptivityEnabled\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            currentView: this._currentView,\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            width: this.option(\"width\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\r\n            _dropDownButtonIcon: this.option(\"_dropDownButtonIcon\"),\r\n            customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\")\r\n        }, currentViewOptions);\r\n        result.observer = this;\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.views = this.option(\"views\");\r\n        result.min = new Date(this._dateOption(\"min\"));\r\n        result.max = new Date(this._dateOption(\"max\"));\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.todayDate = () => {\r\n            var result = this.timeZoneCalculator.createDate(new Date, {\r\n                path: \"toGrid\"\r\n            });\r\n            return result\r\n        };\r\n        return result\r\n    }\r\n    _appointmentsConfig() {\r\n        var that = this;\r\n        var config = {\r\n            observer: this,\r\n            onItemRendered: this._getAppointmentRenderedAction(),\r\n            onItemClick: this._createActionByOption(\"onAppointmentClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\r\n            onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            allowDrag: this._allowDragging(),\r\n            allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\r\n            allowResize: this._allowResizing(),\r\n            allowAllDayResize: this._allowAllDayResizing(),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            currentView: this.option(\"currentView\"),\r\n            onContentReady: function() {\r\n                that._workSpace && that._workSpace.option(\"allDayExpanded\", that._isAllDayExpanded(that.getFilteredItems()))\r\n            }\r\n        };\r\n        return config\r\n    }\r\n    getCollectorOffset() {\r\n        if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\r\n            return this.option(\"_collectorOffset\")\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n    getAppointmentDurationInMinutes() {\r\n        return this._getCurrentViewOption(\"cellDuration\")\r\n    }\r\n    _processCurrentView() {\r\n        var views = this.option(\"views\");\r\n        var currentView = this.option(\"currentView\");\r\n        var that = this;\r\n        this._currentView = null;\r\n        each(views, (function(_, view) {\r\n            var isViewIsObject = isObject(view);\r\n            var viewName = isViewIsObject ? view.name : view;\r\n            var viewType = view.type;\r\n            if (currentView === viewName || currentView === viewType) {\r\n                that._currentView = view;\r\n                return false\r\n            }\r\n        }));\r\n        if (!this._currentView) {\r\n            var isCurrentViewValid = !!VIEWS_CONFIG[currentView];\r\n            if (isCurrentViewValid) {\r\n                this._currentView = currentView\r\n            } else {\r\n                this._currentView = views[0]\r\n            }\r\n        }\r\n    }\r\n    _validateCellDuration() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var cellDuration = this._getCurrentViewOption(\"cellDuration\");\r\n        if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\r\n            errors.log(\"W1015\")\r\n        }\r\n    }\r\n    _getCurrentViewType() {\r\n        return this._currentView.type || this._currentView\r\n    }\r\n    _getAppointmentsRenderingStrategy() {\r\n        return VIEWS_CONFIG[this._getCurrentViewType()].renderingStrategy\r\n    }\r\n    _renderWorkSpace(groups) {\r\n        this._readyToRenderAppointments && this._toggleSmallClass();\r\n        var $workSpace = $(\"<div>\").appendTo(this.$element());\r\n        var countConfig = this._getViewCountConfig();\r\n        var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\r\n        var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\r\n        this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\r\n        this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\r\n        this._workSpace._attachTablesEvents();\r\n        this._workSpace.getWorkArea().append(this._appointments.$element());\r\n        this._recalculateWorkspace();\r\n        countConfig.startDate && this._header && this._header.option(\"currentDate\", this._workSpace._getHeaderDate());\r\n        this._appointments.option(\"_collectorOffset\", this.getCollectorOffset())\r\n    }\r\n    _getViewCountConfig() {\r\n        var currentView = this.option(\"currentView\");\r\n        var view = this._getViewByName(currentView);\r\n        var viewCount = view && view.intervalCount || 1;\r\n        var startDate = view && view.startDate || null;\r\n        return {\r\n            intervalCount: viewCount,\r\n            startDate: startDate\r\n        }\r\n    }\r\n    _getViewByName(name) {\r\n        var views = this.option(\"views\");\r\n        for (var i = 0; i < views.length; i++) {\r\n            if (views[i].name === name || views[i].type === name || views[i] === name) {\r\n                return views[i]\r\n            }\r\n        }\r\n    }\r\n    _recalculateWorkspace() {\r\n        this._workSpaceRecalculation = new Deferred;\r\n        this._waitAsyncTemplate(() => {\r\n            triggerResizeEvent(this._workSpace.$element());\r\n            this._workSpace._refreshDateTimeIndication()\r\n        })\r\n    }\r\n    _workSpaceConfig(groups, countConfig) {\r\n        var _currentViewOptions$s;\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var scrolling = this.option(\"scrolling\");\r\n        var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);\r\n        var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(item => {\r\n            var _currentViewOptions$s2;\r\n            return scrolling.orientation === item || (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.orientation) === item\r\n        }).length > 0);\r\n        var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed;\r\n        var result = extend({\r\n            noDataText: this.option(\"noDataText\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            startDayHour: this.option(\"startDayHour\"),\r\n            endDayHour: this.option(\"endDayHour\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            cellDuration: this.option(\"cellDuration\"),\r\n            showAllDayPanel: this.option(\"showAllDayPanel\"),\r\n            showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\r\n            indicatorTime: this.option(\"indicatorTime\"),\r\n            indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\r\n            shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\r\n            allDayExpanded: this._appointments.option(\"items\"),\r\n            crossScrollingEnabled: crossScrollingEnabled,\r\n            dataCellTemplate: this.option(\"dataCellTemplate\"),\r\n            timeCellTemplate: this.option(\"timeCellTemplate\"),\r\n            resourceCellTemplate: this.option(\"resourceCellTemplate\"),\r\n            dateCellTemplate: this.option(\"dateCellTemplate\"),\r\n            allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\r\n            selectedCellData: this.option(\"selectedCellData\"),\r\n            onSelectionChanged: args => {\r\n                this.option(\"selectedCellData\", args.selectedCellData)\r\n            },\r\n            groupByDate: this._getCurrentViewOption(\"groupByDate\"),\r\n            scrolling: scrolling,\r\n            draggingMode: this.option(\"_draggingMode\"),\r\n            renovateRender: this._isRenovatedRender(isVirtualScrolling)\r\n        }, currentViewOptions);\r\n        result.observer = this;\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.startDate = countConfig.startDate;\r\n        result.groups = groups;\r\n        result.onCellClick = this._createActionByOption(\"onCellClick\");\r\n        result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\r\n        result.min = new Date(this._dateOption(\"min\"));\r\n        result.max = new Date(this._dateOption(\"max\"));\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.hoursInterval = result.cellDuration / 60;\r\n        result.allDayExpanded = this._isAllDayExpanded(this.getFilteredItems());\r\n        result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\r\n        result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\r\n        result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\r\n        result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\r\n        return result\r\n    }\r\n    _isRenovatedRender(isVirtualScrolling) {\r\n        return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling\r\n    }\r\n    _waitAsyncTemplate(callback) {\r\n        if (this._options.silent(\"templatesRenderAsynchronously\")) {\r\n            var timer = setTimeout(() => {\r\n                callback();\r\n                clearTimeout(timer)\r\n            });\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback()\r\n        }\r\n    }\r\n    _getCurrentViewOptions() {\r\n        return this._currentView\r\n    }\r\n    _getCurrentViewOption(optionName) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (currentViewOptions && void 0 !== currentViewOptions[optionName]) {\r\n            return currentViewOptions[optionName]\r\n        }\r\n        return this.option(optionName)\r\n    }\r\n    _getAppointmentTemplate(optionName) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (currentViewOptions && currentViewOptions[optionName]) {\r\n            return this._getTemplate(currentViewOptions[optionName])\r\n        }\r\n        return this._getTemplateByOption(optionName)\r\n    }\r\n    _updateOption(viewName, optionName, value) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\r\n            this[\"_\" + viewName].option(optionName, value)\r\n        }\r\n    }\r\n    _refreshWorkSpace(groups) {\r\n        this._cleanWorkspace();\r\n        delete this._workSpace;\r\n        this._renderWorkSpace(groups);\r\n        if (this._readyToRenderAppointments) {\r\n            this._appointments.option({\r\n                fixedContainer: this._workSpace.getFixedContainer(),\r\n                allDayContainer: this._workSpace.getAllDayContainer()\r\n            });\r\n            this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve())\r\n        }\r\n    }\r\n    _cleanWorkspace() {\r\n        this._appointments.$element().detach();\r\n        this._workSpace._dispose();\r\n        this._workSpace.$element().remove();\r\n        this.option(\"selectedCellData\", [])\r\n    }\r\n    getWorkSpaceScrollable() {\r\n        return this._workSpace.getScrollable()\r\n    }\r\n    getWorkSpaceScrollableScrollTop(allDay) {\r\n        return this._workSpace.getGroupedScrollableScrollTop(allDay)\r\n    }\r\n    getWorkSpaceScrollableScrollLeft() {\r\n        return this._workSpace.getScrollableScrollLeft()\r\n    }\r\n    getWorkSpaceScrollableContainer() {\r\n        return this._workSpace.getScrollableContainer()\r\n    }\r\n    getWorkSpaceAllDayHeight() {\r\n        return this._workSpace.getAllDayHeight()\r\n    }\r\n    getWorkSpaceAllDayOffset() {\r\n        return this._workSpace.getAllDayOffset()\r\n    }\r\n    getWorkSpaceHeaderPanelHeight() {\r\n        return this._workSpace.getHeaderPanelHeight()\r\n    }\r\n    getWorkSpaceDateTableOffset() {\r\n        return !this.option(\"crossScrollingEnabled\") || this.option(\"rtlEnabled\") ? this._workSpace.getWorkSpaceLeftOffset() : 0\r\n    }\r\n    getWorkSpace() {\r\n        return this._workSpace\r\n    }\r\n    getAppointmentModel() {\r\n        return this._appointmentModel\r\n    }\r\n    getHeader() {\r\n        return this._header\r\n    }\r\n    getMaxAppointmentsPerCell() {\r\n        return this._getCurrentViewOption(\"maxAppointmentsPerCell\")\r\n    }\r\n    _cleanPopup() {\r\n        this._appointmentPopup && this._appointmentPopup.dispose()\r\n    }\r\n    _checkRecurringAppointment(targetAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent) {\r\n        delete this._updatedRecAppointment;\r\n        var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", targetAppointment);\r\n        if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\r\n            callback();\r\n            return\r\n        }\r\n        var editMode = this.option(\"recurrenceEditMode\");\r\n        switch (editMode) {\r\n            case \"series\":\r\n                callback();\r\n                break;\r\n            case \"occurrence\":\r\n                this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\r\n                break;\r\n            default:\r\n                if (dragEvent) {\r\n                    dragEvent.cancel = new Deferred\r\n                }\r\n                this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {\r\n                    editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\r\n                    editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent)\r\n                }).fail(() => this._appointments.moveAppointmentBack(dragEvent))\r\n        }\r\n    }\r\n    _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\r\n        var appointment = this.createAppointmentAdapter(_extends({}, rawAppointment));\r\n        var newAppointment = this.createAppointmentAdapter(newRawAppointment);\r\n        newAppointment.recurrenceRule = \"\";\r\n        newAppointment.recurrenceException = \"\";\r\n        var canCreateNewAppointment = !isDeleted && !isPopupEditing;\r\n        if (canCreateNewAppointment) {\r\n            var keyPropertyName = this._appointmentModel.keyName;\r\n            delete newRawAppointment[keyPropertyName];\r\n            this.addAppointment(newRawAppointment)\r\n        }\r\n        appointment.recurrenceException = this._createRecurrenceException(appointment, exceptionDate);\r\n        if (isPopupEditing) {\r\n            this._updatedRecAppointment = appointment.source();\r\n            this._appointmentPopup.show(newRawAppointment, true);\r\n            this._editAppointmentData = rawAppointment\r\n        } else {\r\n            this._updateAppointment(rawAppointment, appointment.source(), () => {\r\n                this._appointments.moveAppointmentBack(dragEvent)\r\n            }, dragEvent)\r\n        }\r\n    }\r\n    _createRecurrenceException(appointment, exceptionDate) {\r\n        var result = [];\r\n        if (appointment.recurrenceException) {\r\n            result.push(appointment.recurrenceException)\r\n        }\r\n        result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\r\n        return result.join()\r\n    }\r\n    _getSerializedDate(date, startDate, isAllDay) {\r\n        isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\r\n        return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT)\r\n    }\r\n    _showRecurrenceChangeConfirm(isDeleted) {\r\n        var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\r\n        var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\r\n        var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\r\n        this._recurrenceDialog = customDialog({\r\n            messageHtml: message,\r\n            showCloseButton: true,\r\n            showTitle: true,\r\n            buttons: [{\r\n                text: seriesText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.SERIES\r\n                }\r\n            }, {\r\n                text: occurrenceText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.OCCURENCE\r\n                }\r\n            }],\r\n            popupOptions: {\r\n                onHidden: e => {\r\n                    e.component.$element().remove()\r\n                }\r\n            }\r\n        });\r\n        return this._recurrenceDialog.show()\r\n    }\r\n    _getUpdatedData(rawAppointment) {\r\n        var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {\r\n            path: \"fromGrid\"\r\n        }) : void 0;\r\n        var isValidDate = date => !isNaN(new Date(date).getTime());\r\n        var targetCell = this.getTargetCellData();\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var cellStartDate = getConvertedFromGrid(targetCell.startDate);\r\n        var cellEndDate = getConvertedFromGrid(targetCell.endDate);\r\n        var appointmentStartDate = new Date(appointment.startDate);\r\n        var appointmentEndDate = new Date(appointment.endDate);\r\n        var resultedStartDate = cellStartDate || appointmentStartDate;\r\n        if (!isValidDate(appointmentStartDate)) {\r\n            appointmentStartDate = resultedStartDate\r\n        }\r\n        if (!isValidDate(appointmentEndDate)) {\r\n            appointmentEndDate = cellEndDate\r\n        }\r\n        var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\r\n        var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\r\n        if (isKeepAppointmentHours) {\r\n            var {\r\n                trimTime: trimTime\r\n            } = dateUtils;\r\n            var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\r\n                path: \"toGrid\"\r\n            });\r\n            var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\r\n            resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\r\n            resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\r\n                path: \"fromGrid\"\r\n            })\r\n        }\r\n        var result = this.createAppointmentAdapter({});\r\n        if (void 0 !== targetCell.allDay) {\r\n            result.allDay = targetCell.allDay\r\n        }\r\n        result.startDate = resultedStartDate;\r\n        var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\r\n        if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\r\n            resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate)\r\n        }\r\n        if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\r\n            var dateCopy = new Date(resultedStartDate);\r\n            dateCopy.setHours(0);\r\n            resultedEndDate = new Date(dateCopy.getTime() + duration);\r\n            if (0 !== resultedEndDate.getHours()) {\r\n                resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"))\r\n            }\r\n        }\r\n        var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\r\n        result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\r\n        var rawResult = result.source();\r\n        this._resourcesManager.setResourcesToItem(rawResult, targetCell.groups);\r\n        return rawResult\r\n    }\r\n    getTargetedAppointment(appointment, element) {\r\n        var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n        var info = utils.dataAccessors.getAppointmentInfo(element);\r\n        var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\r\n        var adapter = this.createAppointmentAdapter(appointment);\r\n        var targetedAdapter = adapter.clone();\r\n        if (this._isAgenda() && adapter.isRecurrent) {\r\n            var getStartDate = this.getRenderingStrategyInstance().getAppointmentDataCalculator();\r\n            var newStartDate = getStartDate($(element), adapter.startDate).startDate;\r\n            targetedAdapter.startDate = newStartDate;\r\n            targetedAdapter.endDate = new Date(newStartDate.getTime() + adapter.duration)\r\n        } else if (settings) {\r\n            targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\r\n            targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate\r\n        }\r\n        var rawTargetedAppointment = targetedAdapter.source();\r\n        if (element) {\r\n            this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex)\r\n        }\r\n        return rawTargetedAppointment\r\n    }\r\n    subscribe(subject, action) {\r\n        this._subscribes[subject] = subscribes[subject] = action\r\n    }\r\n    fire(subject) {\r\n        var callback = this._subscribes[subject];\r\n        var args = Array.prototype.slice.call(arguments);\r\n        if (!isFunction(callback)) {\r\n            throw errors.Error(\"E1031\", subject)\r\n        }\r\n        return callback.apply(this, args.slice(1))\r\n    }\r\n    getTargetCellData() {\r\n        return this._workSpace.getDataByDroppableCell()\r\n    }\r\n    _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\r\n        var updatingOptions = {\r\n            newData: rawAppointment,\r\n            oldData: extend({}, target),\r\n            cancel: false\r\n        };\r\n        var performFailAction = function(err) {\r\n            if (onUpdatePrevented) {\r\n                onUpdatePrevented.call(this)\r\n            }\r\n            if (err && \"Error\" === err.name) {\r\n                throw err\r\n            }\r\n        }.bind(this);\r\n        this._actions[StoreEventNames.UPDATING](updatingOptions);\r\n        if (dragEvent && !isDeferred(dragEvent.cancel)) {\r\n            dragEvent.cancel = new Deferred\r\n        }\r\n        return this._processActionResult(updatingOptions, (function(canceled) {\r\n            var deferred = new Deferred;\r\n            if (!canceled) {\r\n                this._expandAllDayPanel(rawAppointment);\r\n                try {\r\n                    deferred = this._appointmentModel.update(target, rawAppointment).done(() => {\r\n                        dragEvent && dragEvent.cancel.resolve(false)\r\n                    }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction())\r\n                } catch (err) {\r\n                    performFailAction(err);\r\n                    deferred.resolve()\r\n                }\r\n            } else {\r\n                performFailAction();\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        }))\r\n    }\r\n    _processActionResult(actionOptions, callback) {\r\n        var deferred = new Deferred;\r\n        var resolveCallback = callbackResult => {\r\n            when(fromPromise(callbackResult)).always(deferred.resolve)\r\n        };\r\n        if (isPromise(actionOptions.cancel)) {\r\n            when(fromPromise(actionOptions.cancel)).always(cancel => {\r\n                if (!isDefined(cancel)) {\r\n                    cancel = \"rejected\" === actionOptions.cancel.state()\r\n                }\r\n                resolveCallback(callback.call(this, cancel))\r\n            })\r\n        } else {\r\n            resolveCallback(callback.call(this, actionOptions.cancel))\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _expandAllDayPanel(appointment) {\r\n        if (!this._isAllDayExpanded(this.getFilteredItems()) && this.appointmentTakesAllDay(appointment)) {\r\n            this._workSpace.option(\"allDayExpanded\", true)\r\n        }\r\n    }\r\n    _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\r\n        var args = {\r\n            appointmentData: appointment || storeAppointment\r\n        };\r\n        if (storeAppointment instanceof Error) {\r\n            args.error = storeAppointment\r\n        } else {\r\n            this._appointmentPopup.isVisible() && this._appointmentPopup.hide()\r\n        }\r\n        this._actions[handlerName](args);\r\n        this._fireContentReadyAction()\r\n    }\r\n    getAppointmentPopup() {\r\n        return this._appointmentPopup.getPopup()\r\n    }\r\n    getUpdatedAppointment() {\r\n        return this._appointmentModel.getUpdatedAppointment()\r\n    }\r\n    getUpdatedAppointmentKeys() {\r\n        return this._appointmentModel.getUpdatedAppointmentKeys()\r\n    }\r\n    getAppointmentsInstance() {\r\n        return this._appointments\r\n    }\r\n    getResourceManager() {\r\n        return this._resourcesManager\r\n    }\r\n    getLayoutManager() {\r\n        return this._layoutManager\r\n    }\r\n    getRenderingStrategyInstance() {\r\n        return this._layoutManager.getRenderingStrategyInstance()\r\n    }\r\n    getFilteredItems() {\r\n        return this._filteredItems\r\n    }\r\n    getActions() {\r\n        return this._actions\r\n    }\r\n    appointmentTakesAllDay(appointment) {\r\n        return this._appointmentModel.appointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"))\r\n    }\r\n    _getRecurrenceException(rawAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var recurrenceException = appointment.recurrenceException;\r\n        if (recurrenceException) {\r\n            var exceptions = recurrenceException.split(\",\");\r\n            for (var i = 0; i < exceptions.length; i++) {\r\n                exceptions[i] = this._convertRecurrenceException(exceptions[i], appointment.startDate)\r\n            }\r\n            return exceptions.join()\r\n        }\r\n        return recurrenceException\r\n    }\r\n    _convertRecurrenceException(exceptionString, startDate) {\r\n        exceptionString = exceptionString.replace(/\\s/g, \"\");\r\n        var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var exceptionDate = dateSerialization.deserializeDate(exceptionString);\r\n        var convertedStartDate = getConvertedToTimeZone(startDate);\r\n        var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);\r\n        convertedExceptionDate = timeZoneUtils.correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, this.option(\"timeZone\"));\r\n        exceptionString = dateSerialization.serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);\r\n        return exceptionString\r\n    }\r\n    dayHasAppointment(day, rawAppointment, trimTime) {\r\n        var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var startDate = new Date(appointment.startDate);\r\n        var endDate = new Date(appointment.endDate);\r\n        startDate = getConvertedToTimeZone(startDate);\r\n        endDate = getConvertedToTimeZone(endDate);\r\n        if (day.getTime() === endDate.getTime()) {\r\n            return startDate.getTime() === endDate.getTime()\r\n        }\r\n        if (trimTime) {\r\n            day = dateUtils.trimTime(day);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            endDate = dateUtils.trimTime(endDate)\r\n        }\r\n        var dayTimeStamp = day.getTime();\r\n        var startDateTimeStamp = startDate.getTime();\r\n        var endDateTimeStamp = endDate.getTime();\r\n        return inArray(dayTimeStamp, [startDateTimeStamp, endDateTimeStamp]) > -1 || startDateTimeStamp < dayTimeStamp && endDateTimeStamp > dayTimeStamp\r\n    }\r\n    setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (null !== groups && void 0 !== groups && groups.length) {\r\n            var resourcesSetter = this._resourcesManager._dataAccessors.setter;\r\n            var workSpace = this._workSpace;\r\n            var getGroups;\r\n            var setResourceCallback;\r\n            if (this._isAgenda()) {\r\n                getGroups = function() {\r\n                    var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\r\n                    return workSpace._getCellGroups(apptSettings[0].groupIndex)\r\n                };\r\n                setResourceCallback = function(_, group) {\r\n                    resourcesSetter[group.name](rawAppointment, group.id)\r\n                }\r\n            } else {\r\n                getGroups = function() {\r\n                    var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\r\n                    return workSpace.getCellDataByCoordinates({\r\n                        left: setting.left,\r\n                        top: setting.top\r\n                    }).groups\r\n                };\r\n                setResourceCallback = function(field, value) {\r\n                    resourcesSetter[field](rawAppointment, value)\r\n                }\r\n            }\r\n            each(getGroups.call(this), setResourceCallback)\r\n        }\r\n    }\r\n    getStartViewDate() {\r\n        return this._workSpace.getStartViewDate()\r\n    }\r\n    getEndViewDate() {\r\n        return this._workSpace.getEndViewDate()\r\n    }\r\n    showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawTargetedAppointment || rawAppointment);\r\n        var newTargetedAppointment = extend({}, rawAppointment, rawTargetedAppointment);\r\n        this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {\r\n            if (createNewAppointment || isEmptyObject(rawAppointment)) {\r\n                delete this._editAppointmentData;\r\n                this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, true)\r\n            } else {\r\n                this._editAppointmentData = rawAppointment;\r\n                this._appointmentPopup.show(rawAppointment, this._editing.allowUpdating)\r\n            }\r\n        }, false, true)\r\n    }\r\n    hideAppointmentPopup(saveChanges) {\r\n        if (this._appointmentPopup && this._appointmentPopup.isVisible()) {\r\n            saveChanges && this._appointmentPopup.saveChanges();\r\n            this._appointmentPopup.hide()\r\n        }\r\n    }\r\n    showAppointmentTooltip(appointment, element, targetedAppointment) {\r\n        if (appointment) {\r\n            var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n            var deferredColor = this.fire(\"getAppointmentColor\", {\r\n                itemData: targetedAppointment || appointment,\r\n                groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex\r\n            });\r\n            var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\r\n            this.showAppointmentTooltipCore(element, [info])\r\n        }\r\n    }\r\n    showAppointmentTooltipCore(target, data, options) {\r\n        if (this._appointmentTooltip.isAlreadyShown(target)) {\r\n            this.hideAppointmentTooltip()\r\n        } else {\r\n            this._appointmentTooltip.show(target, data, extend(this._getExtraAppointmentTooltipOptions(), options))\r\n        }\r\n    }\r\n    hideAppointmentTooltip() {\r\n        this._appointmentTooltip && this._appointmentTooltip.hide()\r\n    }\r\n    scrollToTime(hours, minutes, date) {\r\n        this._workSpace.scrollToTime(hours, minutes, date)\r\n    }\r\n    scrollTo(date, groups, allDay) {\r\n        this._workSpace.scrollTo(date, groups, allDay)\r\n    }\r\n    _isHorizontalVirtualScrolling() {\r\n        var scrolling = this.option(\"scrolling\");\r\n        var {\r\n            orientation: orientation,\r\n            mode: mode\r\n        } = scrolling;\r\n        var isVirtualScrolling = \"virtual\" === mode;\r\n        return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation)\r\n    }\r\n    addAppointment(rawAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        appointment.text = appointment.text || \"\";\r\n        var serializedAppointment = appointment.source(true);\r\n        var addingOptions = {\r\n            appointmentData: serializedAppointment,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.ADDING](addingOptions);\r\n        return this._processActionResult(addingOptions, canceled => {\r\n            if (canceled) {\r\n                return (new Deferred).resolve()\r\n            }\r\n            this._expandAllDayPanel(serializedAppointment);\r\n            return this._appointmentModel.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment))\r\n        })\r\n    }\r\n    updateAppointment(target, appointment) {\r\n        return this._updateAppointment(target, appointment)\r\n    }\r\n    deleteAppointment(rawAppointment) {\r\n        var deletingOptions = {\r\n            appointmentData: rawAppointment,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.DELETING](deletingOptions);\r\n        this._processActionResult(deletingOptions, (function(canceled) {\r\n            if (!canceled) {\r\n                this._appointmentModel.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment))\r\n            }\r\n        }))\r\n    }\r\n    focus() {\r\n        if (this._editAppointmentData) {\r\n            this._appointments.focus()\r\n        } else {\r\n            this._workSpace.focus()\r\n        }\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    createAppointmentAdapter(rawAppointment) {\r\n        var options = {\r\n            getField: (rawAppointment, property) => this.fire(\"getField\", property, rawAppointment),\r\n            setField: (rawAppointment, property, value) => this.fire(\"setField\", property, rawAppointment, value),\r\n            getTimeZoneCalculator: () => this.timeZoneCalculator\r\n        };\r\n        return new AppointmentAdapter(rawAppointment, options)\r\n    }\r\n}\r\nScheduler.include(DataHelperMixin);\r\nregisterComponent(\"dxScheduler\", Scheduler);\r\nexport default Scheduler;\r\n"]},"metadata":{},"sourceType":"module"}