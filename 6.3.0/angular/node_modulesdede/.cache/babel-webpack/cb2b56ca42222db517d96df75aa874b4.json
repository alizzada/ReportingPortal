{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { hasWindow } from \"../../core/utils/window\";\nimport { createColumnsInfo } from \"./ui.grid_core.virtual_columns_core\";\nvar DEFAULT_COLUMN_WIDTH = 50;\nvar VirtualScrollingRowsViewExtender = {\n  _resizeCore: function _resizeCore() {\n    this.callBase.apply(this, arguments);\n\n    this._columnsController.resize();\n  },\n  _handleScroll: function _handleScroll(e) {\n    var that = this;\n    var scrollable = this.getScrollable();\n    var left = e.scrollOffset.left;\n    that.callBase.apply(that, arguments);\n\n    if (that.option(\"rtlEnabled\") && scrollable) {\n      left = scrollable.$content().width() - scrollable.$element().width() - left;\n    }\n\n    that._columnsController.setScrollPosition(left);\n  }\n};\nvar HeaderFooterViewExtender = {\n  _renderCore: function _renderCore() {\n    var that = this;\n    var scrollLeft = that._scrollLeft;\n    that.callBase.apply(that, arguments);\n\n    if (that._columnsController.isVirtualMode() && scrollLeft >= 0) {\n      that._scrollLeft = 0;\n      that.scrollTo({\n        left: scrollLeft\n      });\n    }\n  }\n};\n\nvar ColumnsControllerExtender = function () {\n  var getWidths = function getWidths(columns) {\n    return columns.map(function (column) {\n      return column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH;\n    });\n  };\n\n  var members = {\n    init: function init() {\n      this.callBase();\n      this._beginPageIndex = 0;\n      this._endPageIndex = 0;\n      this._position = 0;\n      this._virtualVisibleColumns = {};\n    },\n    resetColumnsCache: function resetColumnsCache() {\n      this.callBase();\n      this._virtualVisibleColumns = {};\n    },\n    getBeginPageIndex: function getBeginPageIndex(position) {\n      var visibleColumns = this.getVisibleColumns(void 0, true);\n      var widths = getWidths(visibleColumns);\n      var currentPosition = 0;\n\n      for (var index = 0; index < widths.length; index++) {\n        if (currentPosition >= position) {\n          return Math.floor(index / this.getColumnPageSize());\n        }\n\n        currentPosition += widths[index];\n      }\n\n      return 0;\n    },\n    getTotalWidth: function getTotalWidth() {\n      var width = this.option(\"width\");\n\n      if (\"number\" === typeof width) {\n        return width;\n      }\n\n      return this.getController(\"resizing\")._lastWidth || this.component.$element().outerWidth();\n    },\n    getEndPageIndex: function getEndPageIndex(position) {\n      var visibleColumns = this.getVisibleColumns(void 0, true);\n      var widths = getWidths(visibleColumns);\n      var currentPosition = 0;\n      position += this.getTotalWidth();\n\n      for (var index = 0; index < widths.length; index++) {\n        if (currentPosition >= position) {\n          return Math.ceil(index / this.getColumnPageSize());\n        }\n\n        currentPosition += widths[index];\n      }\n\n      return Math.ceil(widths.length / this.getColumnPageSize());\n    },\n    getColumnPageSize: function getColumnPageSize() {\n      return this.option(\"scrolling.columnPageSize\");\n    },\n    _fireColumnsChanged: function _fireColumnsChanged() {\n      var date = new Date();\n      this.columnsChanged.fire({\n        optionNames: {\n          all: true,\n          length: 1\n        },\n        changeTypes: {\n          columns: true,\n          length: 1\n        }\n      });\n      this._renderTime = new Date() - date;\n    },\n    setScrollPosition: function setScrollPosition(position) {\n      var that = this;\n      var renderingThreshold = that.option(\"scrolling.columnRenderingThreshold\");\n\n      if (that._renderTime > renderingThreshold) {\n        clearTimeout(that._changedTimeout);\n        that._changedTimeout = setTimeout(function () {\n          that._setScrollPositionCore(position);\n        }, that.option(\"scrolling.timeout\"));\n      } else {\n        that._setScrollPositionCore(position);\n      }\n    },\n    isVirtualMode: function isVirtualMode() {\n      return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\");\n    },\n    resize: function resize() {\n      this._setScrollPositionCore(this._position);\n    },\n    _setScrollPositionCore: function _setScrollPositionCore(position) {\n      if (this.isVirtualMode()) {\n        var beginPageIndex = this.getBeginPageIndex(position);\n        var endPageIndex = this.getEndPageIndex(position);\n        var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\n        this._position = position;\n\n        if (needColumnsChanged) {\n          this._beginPageIndex = beginPageIndex;\n          this._endPageIndex = endPageIndex;\n\n          this._fireColumnsChanged();\n        }\n      }\n    },\n    getFixedColumns: function getFixedColumns(rowIndex, isBase) {\n      var fixedColumns = this.callBase(rowIndex);\n\n      if (this.isVirtualMode() && !isBase && fixedColumns.length) {\n        var transparentColumnIndex = fixedColumns.map(function (c) {\n          return c.command;\n        }).indexOf(\"transparent\");\n        fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\n        return fixedColumns;\n      }\n\n      return fixedColumns;\n    },\n    getVisibleColumns: function getVisibleColumns(rowIndex, isBase) {\n      if (isBase || !this.isVirtualMode()) {\n        return this.callBase(rowIndex);\n      }\n\n      if (!this._beginPageIndex && !this._endPageIndex) {\n        this._beginPageIndex = this.getBeginPageIndex(this._position);\n        this._endPageIndex = this.getEndPageIndex(this._position);\n      }\n\n      var beginPageIndex = this._beginPageIndex;\n      var endPageIndex = this._endPageIndex;\n      var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\n\n      if (this._virtualVisibleColumns[visibleColumnsHash]) {\n        return this._virtualVisibleColumns[visibleColumnsHash];\n      }\n\n      var visibleColumns = this.callBase();\n      var rowCount = this.getRowCount();\n      var pageSize = this.getColumnPageSize();\n      var startIndex = beginPageIndex * pageSize;\n      var endIndex = endPageIndex * pageSize;\n      var fixedColumns = this.getFixedColumns(void 0, true);\n      var transparentColumnIndex = fixedColumns.map(function (c) {\n        return c.command;\n      }).indexOf(\"transparent\");\n      var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\n      var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\n      var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\n      var beginWidth = getWidths(beginColumns).reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      if (!beginWidth) {\n        startIndex = 0;\n      }\n\n      var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\n      var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\n      var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\n      var endWidth = getWidths(endColumns).reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      if (!endWidth) {\n        endIndex = visibleColumns.length;\n      }\n\n      if (rowCount > 1 && \"number\" === typeof rowIndex) {\n        var columnsInfo = [];\n\n        for (var i = 0; i < rowCount; i++) {\n          columnsInfo.push(this.callBase(i));\n        }\n\n        beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\n        endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\n        visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || [];\n      } else {\n        visibleColumns = visibleColumns.slice(startIndex, endIndex);\n      }\n\n      if (beginWidth) {\n        visibleColumns.unshift({\n          command: \"virtual\",\n          width: beginWidth\n        });\n        visibleColumns = beginFixedColumns.concat(visibleColumns);\n      }\n\n      if (endWidth) {\n        visibleColumns.push({\n          command: \"virtual\",\n          width: endWidth\n        });\n        visibleColumns = visibleColumns.concat(endFixedColumns);\n      }\n\n      this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\n      return visibleColumns;\n    },\n    getColumnIndexOffset: function getColumnIndexOffset() {\n      var offset = 0;\n\n      if (this._beginPageIndex > 0) {\n        var fixedColumns = this.getFixedColumns();\n        var transparentColumnIndex = fixedColumns.map(function (c) {\n          return c.command;\n        }).indexOf(\"transparent\");\n        var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\n        offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1;\n      }\n\n      return offset > 0 ? offset : 0;\n    },\n    dispose: function dispose() {\n      clearTimeout(this._changedTimeout);\n      this.callBase.apply(this, arguments);\n    }\n  };\n  return members;\n}();\n\nexport var virtualColumnsModule = {\n  defaultOptions: function defaultOptions() {\n    return {\n      scrolling: {\n        columnRenderingMode: \"standard\",\n        columnPageSize: 5,\n        columnRenderingThreshold: 300\n      }\n    };\n  },\n  extenders: {\n    controllers: {\n      columns: ColumnsControllerExtender\n    },\n    views: {\n      columnHeadersView: HeaderFooterViewExtender,\n      footerView: HeaderFooterViewExtender,\n      rowsView: VirtualScrollingRowsViewExtender\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js"],"names":["hasWindow","createColumnsInfo","DEFAULT_COLUMN_WIDTH","VirtualScrollingRowsViewExtender","_resizeCore","callBase","apply","arguments","_columnsController","resize","_handleScroll","e","that","scrollable","getScrollable","left","scrollOffset","option","$content","width","$element","setScrollPosition","HeaderFooterViewExtender","_renderCore","scrollLeft","_scrollLeft","isVirtualMode","scrollTo","ColumnsControllerExtender","getWidths","columns","map","column","visibleWidth","parseFloat","members","init","_beginPageIndex","_endPageIndex","_position","_virtualVisibleColumns","resetColumnsCache","getBeginPageIndex","position","visibleColumns","getVisibleColumns","widths","currentPosition","index","length","Math","floor","getColumnPageSize","getTotalWidth","getController","_lastWidth","component","outerWidth","getEndPageIndex","ceil","_fireColumnsChanged","date","Date","columnsChanged","fire","optionNames","all","changeTypes","_renderTime","renderingThreshold","clearTimeout","_changedTimeout","setTimeout","_setScrollPositionCore","beginPageIndex","endPageIndex","needColumnsChanged","getFixedColumns","rowIndex","isBase","fixedColumns","transparentColumnIndex","c","command","indexOf","colspan","visibleColumnsHash","rowCount","getRowCount","pageSize","startIndex","endIndex","beginFixedColumnCount","beginFixedColumns","slice","beginColumns","beginWidth","reduce","a","b","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","i","push","unshift","concat","getColumnIndexOffset","offset","leftFixedColumnCount","dispose","virtualColumnsModule","defaultOptions","scrolling","columnRenderingMode","columnPageSize","columnRenderingThreshold","extenders","controllers","views","columnHeadersView","footerView","rowsView"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = scrollable.$content().width() - scrollable.$element().width() - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderFooterViewExtender = {\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var scrollLeft = that._scrollLeft;\r\n        that.callBase.apply(that, arguments);\r\n        if (that._columnsController.isVirtualMode() && scrollLeft >= 0) {\r\n            that._scrollLeft = 0;\r\n            that.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || this.component.$element().outerWidth()\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    length: 1\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var that = this;\r\n            var renderingThreshold = that.option(\"scrolling.columnRenderingThreshold\");\r\n            if (that._renderTime > renderingThreshold) {\r\n                clearTimeout(that._changedTimeout);\r\n                that._changedTimeout = setTimeout((function() {\r\n                    that._setScrollPositionCore(position)\r\n                }), that.option(\"scrolling.timeout\"))\r\n            } else {\r\n                that._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderFooterViewExtender,\r\n            footerView: HeaderFooterViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}