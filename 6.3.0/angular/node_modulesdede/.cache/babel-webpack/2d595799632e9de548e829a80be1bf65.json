{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The PivotGrid is a UI component that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxPivotGridComponent = /*#__PURE__*/function (_DxComponent) {\n  _inherits(DxPivotGridComponent, _DxComponent);\n\n  var _super = _createSuper(DxPivotGridComponent);\n\n  function DxPivotGridComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    var _this;\n\n    _classCallCheck(this, DxPivotGridComponent);\n\n    _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    _this._watcherHelper = _watcherHelper;\n    _this._idh = _idh;\n\n    _this._createEventEmitters([{\n      subscribe: 'cellClick',\n      emit: 'onCellClick'\n    }, {\n      subscribe: 'cellPrepared',\n      emit: 'onCellPrepared'\n    }, {\n      subscribe: 'contentReady',\n      emit: 'onContentReady'\n    }, {\n      subscribe: 'contextMenuPreparing',\n      emit: 'onContextMenuPreparing'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'exported',\n      emit: 'onExported'\n    }, {\n      subscribe: 'exporting',\n      emit: 'onExporting'\n    }, {\n      subscribe: 'fileSaving',\n      emit: 'onFileSaving'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      emit: 'allowExpandAllChange'\n    }, {\n      emit: 'allowFilteringChange'\n    }, {\n      emit: 'allowSortingChange'\n    }, {\n      emit: 'allowSortingBySummaryChange'\n    }, {\n      emit: 'dataFieldAreaChange'\n    }, {\n      emit: 'dataSourceChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'encodeHtmlChange'\n    }, {\n      emit: 'exportChange'\n    }, {\n      emit: 'fieldChooserChange'\n    }, {\n      emit: 'fieldPanelChange'\n    }, {\n      emit: 'headerFilterChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hideEmptySummaryCellsChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'loadPanelChange'\n    }, {\n      emit: 'rowHeaderLayoutChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'scrollingChange'\n    }, {\n      emit: 'showBordersChange'\n    }, {\n      emit: 'showColumnGrandTotalsChange'\n    }, {\n      emit: 'showColumnTotalsChange'\n    }, {\n      emit: 'showRowGrandTotalsChange'\n    }, {\n      emit: 'showRowTotalsChange'\n    }, {\n      emit: 'showTotalsPriorChange'\n    }, {\n      emit: 'stateStoringChange'\n    }, {\n      emit: 'tabIndexChange'\n    }, {\n      emit: 'textsChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }, {\n      emit: 'wordWrapEnabledChange'\n    }]);\n\n    _this._idh.setHost(_assertThisInitialized(_this));\n\n    optionHost.setHost(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\r\n   * \r\n  \r\n   */\n\n\n  _createClass(DxPivotGridComponent, [{\n    key: \"allowExpandAll\",\n    get: function get() {\n      return this._getOption('allowExpandAll');\n    },\n    set: function set(value) {\n      this._setOption('allowExpandAll', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"allowFiltering\",\n    get: function get() {\n      return this._getOption('allowFiltering');\n    },\n    set: function set(value) {\n      this._setOption('allowFiltering', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"allowSorting\",\n    get: function get() {\n      return this._getOption('allowSorting');\n    },\n    set: function set(value) {\n      this._setOption('allowSorting', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"allowSortingBySummary\",\n    get: function get() {\n      return this._getOption('allowSortingBySummary');\n    },\n    set: function set(value) {\n      this._setOption('allowSortingBySummary', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"dataFieldArea\",\n    get: function get() {\n      return this._getOption('dataFieldArea');\n    },\n    set: function set(value) {\n      this._setOption('dataFieldArea', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"dataSource\",\n    get: function get() {\n      return this._getOption('dataSource');\n    },\n    set: function set(value) {\n      this._setOption('dataSource', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._getOption('disabled');\n    },\n    set: function set(value) {\n      this._setOption('disabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"elementAttr\",\n    get: function get() {\n      return this._getOption('elementAttr');\n    },\n    set: function set(value) {\n      this._setOption('elementAttr', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"encodeHtml\",\n    get: function get() {\n      return this._getOption('encodeHtml');\n    },\n    set: function set(value) {\n      this._setOption('encodeHtml', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"export\",\n    get: function get() {\n      return this._getOption('export');\n    },\n    set: function set(value) {\n      this._setOption('export', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"fieldChooser\",\n    get: function get() {\n      return this._getOption('fieldChooser');\n    },\n    set: function set(value) {\n      this._setOption('fieldChooser', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"fieldPanel\",\n    get: function get() {\n      return this._getOption('fieldPanel');\n    },\n    set: function set(value) {\n      this._setOption('fieldPanel', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"headerFilter\",\n    get: function get() {\n      return this._getOption('headerFilter');\n    },\n    set: function set(value) {\n      this._setOption('headerFilter', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._getOption('height');\n    },\n    set: function set(value) {\n      this._setOption('height', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"hideEmptySummaryCells\",\n    get: function get() {\n      return this._getOption('hideEmptySummaryCells');\n    },\n    set: function set(value) {\n      this._setOption('hideEmptySummaryCells', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return this._getOption('hint');\n    },\n    set: function set(value) {\n      this._setOption('hint', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"loadPanel\",\n    get: function get() {\n      return this._getOption('loadPanel');\n    },\n    set: function set(value) {\n      this._setOption('loadPanel', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"rowHeaderLayout\",\n    get: function get() {\n      return this._getOption('rowHeaderLayout');\n    },\n    set: function set(value) {\n      this._setOption('rowHeaderLayout', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"rtlEnabled\",\n    get: function get() {\n      return this._getOption('rtlEnabled');\n    },\n    set: function set(value) {\n      this._setOption('rtlEnabled', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"scrolling\",\n    get: function get() {\n      return this._getOption('scrolling');\n    },\n    set: function set(value) {\n      this._setOption('scrolling', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showBorders\",\n    get: function get() {\n      return this._getOption('showBorders');\n    },\n    set: function set(value) {\n      this._setOption('showBorders', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showColumnGrandTotals\",\n    get: function get() {\n      return this._getOption('showColumnGrandTotals');\n    },\n    set: function set(value) {\n      this._setOption('showColumnGrandTotals', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showColumnTotals\",\n    get: function get() {\n      return this._getOption('showColumnTotals');\n    },\n    set: function set(value) {\n      this._setOption('showColumnTotals', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showRowGrandTotals\",\n    get: function get() {\n      return this._getOption('showRowGrandTotals');\n    },\n    set: function set(value) {\n      this._setOption('showRowGrandTotals', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showRowTotals\",\n    get: function get() {\n      return this._getOption('showRowTotals');\n    },\n    set: function set(value) {\n      this._setOption('showRowTotals', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"showTotalsPrior\",\n    get: function get() {\n      return this._getOption('showTotalsPrior');\n    },\n    set: function set(value) {\n      this._setOption('showTotalsPrior', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"stateStoring\",\n    get: function get() {\n      return this._getOption('stateStoring');\n    },\n    set: function set(value) {\n      this._setOption('stateStoring', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"tabIndex\",\n    get: function get() {\n      return this._getOption('tabIndex');\n    },\n    set: function set(value) {\n      this._setOption('tabIndex', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"texts\",\n    get: function get() {\n      return this._getOption('texts');\n    },\n    set: function set(value) {\n      this._setOption('texts', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this._getOption('visible');\n    },\n    set: function set(value) {\n      this._setOption('visible', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._getOption('width');\n    },\n    set: function set(value) {\n      this._setOption('width', value);\n    }\n    /**\r\n     * \r\n    \r\n     */\n\n  }, {\n    key: \"wordWrapEnabled\",\n    get: function get() {\n      return this._getOption('wordWrapEnabled');\n    },\n    set: function set(value) {\n      this._setOption('wordWrapEnabled', value);\n    }\n  }, {\n    key: \"_createInstance\",\n    value: function _createInstance(element, options) {\n      return new DxPivotGrid(element, options);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyWidget();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(DxPivotGridComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n      this.setupChanges('dataSource', changes);\n    }\n  }, {\n    key: \"setupChanges\",\n    value: function setupChanges(prop, changes) {\n      if (!(prop in this._optionsToUpdate)) {\n        this._idh.setup(prop, changes);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this._idh.doCheck('dataSource');\n\n      this._watcherHelper.checkWatchers();\n\n      _get(_getPrototypeOf(DxPivotGridComponent.prototype), \"ngDoCheck\", this).call(this);\n\n      _get(_getPrototypeOf(DxPivotGridComponent.prototype), \"clearChangedOptions\", this).call(this);\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      var isSetup = this._idh.setupSingle(name, value);\n\n      var isChanged = this._idh.getChanges(name, value) !== null;\n\n      if (isSetup || isChanged) {\n        _get(_getPrototypeOf(DxPivotGridComponent.prototype), \"_setOption\", this).call(this, name, value);\n      }\n    }\n  }]);\n\n  return DxPivotGridComponent;\n}(DxComponent);\n\nDxPivotGridComponent.ɵfac = function DxPivotGridComponent_Factory(t) {\n  return new (t || DxPivotGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nDxPivotGridComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DxPivotGridComponent,\n  selectors: [[\"dx-pivot-grid\"]],\n  inputs: {\n    allowExpandAll: \"allowExpandAll\",\n    allowFiltering: \"allowFiltering\",\n    allowSorting: \"allowSorting\",\n    allowSortingBySummary: \"allowSortingBySummary\",\n    dataFieldArea: \"dataFieldArea\",\n    dataSource: \"dataSource\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    encodeHtml: \"encodeHtml\",\n    export: \"export\",\n    fieldChooser: \"fieldChooser\",\n    fieldPanel: \"fieldPanel\",\n    headerFilter: \"headerFilter\",\n    height: \"height\",\n    hideEmptySummaryCells: \"hideEmptySummaryCells\",\n    hint: \"hint\",\n    loadPanel: \"loadPanel\",\n    rowHeaderLayout: \"rowHeaderLayout\",\n    rtlEnabled: \"rtlEnabled\",\n    scrolling: \"scrolling\",\n    showBorders: \"showBorders\",\n    showColumnGrandTotals: \"showColumnGrandTotals\",\n    showColumnTotals: \"showColumnTotals\",\n    showRowGrandTotals: \"showRowGrandTotals\",\n    showRowTotals: \"showRowTotals\",\n    showTotalsPrior: \"showTotalsPrior\",\n    stateStoring: \"stateStoring\",\n    tabIndex: \"tabIndex\",\n    texts: \"texts\",\n    visible: \"visible\",\n    width: \"width\",\n    wordWrapEnabled: \"wordWrapEnabled\"\n  },\n  outputs: {\n    onCellClick: \"onCellClick\",\n    onCellPrepared: \"onCellPrepared\",\n    onContentReady: \"onContentReady\",\n    onContextMenuPreparing: \"onContextMenuPreparing\",\n    onDisposing: \"onDisposing\",\n    onExported: \"onExported\",\n    onExporting: \"onExporting\",\n    onFileSaving: \"onFileSaving\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    allowExpandAllChange: \"allowExpandAllChange\",\n    allowFilteringChange: \"allowFilteringChange\",\n    allowSortingChange: \"allowSortingChange\",\n    allowSortingBySummaryChange: \"allowSortingBySummaryChange\",\n    dataFieldAreaChange: \"dataFieldAreaChange\",\n    dataSourceChange: \"dataSourceChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    encodeHtmlChange: \"encodeHtmlChange\",\n    exportChange: \"exportChange\",\n    fieldChooserChange: \"fieldChooserChange\",\n    fieldPanelChange: \"fieldPanelChange\",\n    headerFilterChange: \"headerFilterChange\",\n    heightChange: \"heightChange\",\n    hideEmptySummaryCellsChange: \"hideEmptySummaryCellsChange\",\n    hintChange: \"hintChange\",\n    loadPanelChange: \"loadPanelChange\",\n    rowHeaderLayoutChange: \"rowHeaderLayoutChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    scrollingChange: \"scrollingChange\",\n    showBordersChange: \"showBordersChange\",\n    showColumnGrandTotalsChange: \"showColumnGrandTotalsChange\",\n    showColumnTotalsChange: \"showColumnTotalsChange\",\n    showRowGrandTotalsChange: \"showRowGrandTotalsChange\",\n    showRowTotalsChange: \"showRowTotalsChange\",\n    showTotalsPriorChange: \"showTotalsPriorChange\",\n    stateStoringChange: \"stateStoringChange\",\n    tabIndexChange: \"tabIndexChange\",\n    textsChange: \"textsChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\",\n    wordWrapEnabledChange: \"wordWrapEnabledChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxPivotGridComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\nDxPivotGridComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: DxTemplateHost\n  }, {\n    type: WatcherHelper\n  }, {\n    type: IterableDifferHelper\n  }, {\n    type: NestedOptionHost\n  }, {\n    type: TransferState\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"allowExpandAll\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"allowFiltering\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"allowSorting\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"allowSortingBySummary\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPivotGridComponent.prototype, \"dataFieldArea\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"dataSource\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"disabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"elementAttr\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"encodeHtml\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"export\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"fieldChooser\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"fieldPanel\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"headerFilter\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"height\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"hideEmptySummaryCells\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPivotGridComponent.prototype, \"hint\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"loadPanel\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPivotGridComponent.prototype, \"rowHeaderLayout\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"rtlEnabled\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"scrolling\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"showBorders\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"showColumnGrandTotals\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"showColumnTotals\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"showRowGrandTotals\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"showRowTotals\", null);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPivotGridComponent.prototype, \"showTotalsPrior\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"stateStoring\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxPivotGridComponent.prototype, \"tabIndex\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"texts\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"visible\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPivotGridComponent.prototype, \"width\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPivotGridComponent.prototype, \"wordWrapEnabled\", null);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onCellClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onCellPrepared\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onContentReady\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onContextMenuPreparing\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onDisposing\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onExported\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onExporting\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onFileSaving\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onInitialized\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"onOptionChanged\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"allowExpandAllChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"allowFilteringChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"allowSortingChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"allowSortingBySummaryChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"dataFieldAreaChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"dataSourceChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"disabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"elementAttrChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"encodeHtmlChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"exportChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"fieldChooserChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"fieldPanelChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"headerFilterChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"heightChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"hideEmptySummaryCellsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"hintChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"loadPanelChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"rowHeaderLayoutChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"rtlEnabledChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"scrollingChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showBordersChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showColumnGrandTotalsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showColumnTotalsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showRowGrandTotalsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showRowTotalsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"showTotalsPriorChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"stateStoringChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"tabIndexChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"textsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"visibleChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"widthChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPivotGridComponent.prototype, \"wordWrapEnabledChange\", void 0);\n\nDxPivotGridComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxPivotGridComponent);\n\nvar DxPivotGridModule = function DxPivotGridModule() {\n  _classCallCheck(this, DxPivotGridModule);\n};\n\nDxPivotGridModule.ɵfac = function DxPivotGridModule_Factory(t) {\n  return new (t || DxPivotGridModule)();\n};\n\nDxPivotGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DxPivotGridModule\n});\nDxPivotGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxPivotGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-pivot-grid',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.DxTemplateHost\n    }, {\n      type: ɵngcc1.WatcherHelper\n    }, {\n      type: ɵngcc1.IterableDifferHelper\n    }, {\n      type: ɵngcc1.NestedOptionHost\n    }, {\n      type: ɵngcc2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    allowExpandAll: [{\n      type: Input\n    }],\n    allowFiltering: [{\n      type: Input\n    }],\n    allowSorting: [{\n      type: Input\n    }],\n    allowSortingBySummary: [{\n      type: Input\n    }],\n    dataFieldArea: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    encodeHtml: [{\n      type: Input\n    }],\n    export: [{\n      type: Input\n    }],\n    fieldChooser: [{\n      type: Input\n    }],\n    fieldPanel: [{\n      type: Input\n    }],\n    headerFilter: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hideEmptySummaryCells: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    loadPanel: [{\n      type: Input\n    }],\n    rowHeaderLayout: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    scrolling: [{\n      type: Input\n    }],\n    showBorders: [{\n      type: Input\n    }],\n    showColumnGrandTotals: [{\n      type: Input\n    }],\n    showColumnTotals: [{\n      type: Input\n    }],\n    showRowGrandTotals: [{\n      type: Input\n    }],\n    showRowTotals: [{\n      type: Input\n    }],\n    showTotalsPrior: [{\n      type: Input\n    }],\n    stateStoring: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    texts: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    wordWrapEnabled: [{\n      type: Input\n    }],\n    onCellClick: [{\n      type: Output\n    }],\n    onCellPrepared: [{\n      type: Output\n    }],\n    onContentReady: [{\n      type: Output\n    }],\n    onContextMenuPreparing: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onExported: [{\n      type: Output\n    }],\n    onExporting: [{\n      type: Output\n    }],\n    onFileSaving: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    allowExpandAllChange: [{\n      type: Output\n    }],\n    allowFilteringChange: [{\n      type: Output\n    }],\n    allowSortingChange: [{\n      type: Output\n    }],\n    allowSortingBySummaryChange: [{\n      type: Output\n    }],\n    dataFieldAreaChange: [{\n      type: Output\n    }],\n    dataSourceChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    encodeHtmlChange: [{\n      type: Output\n    }],\n    exportChange: [{\n      type: Output\n    }],\n    fieldChooserChange: [{\n      type: Output\n    }],\n    fieldPanelChange: [{\n      type: Output\n    }],\n    headerFilterChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hideEmptySummaryCellsChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    loadPanelChange: [{\n      type: Output\n    }],\n    rowHeaderLayoutChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    scrollingChange: [{\n      type: Output\n    }],\n    showBordersChange: [{\n      type: Output\n    }],\n    showColumnGrandTotalsChange: [{\n      type: Output\n    }],\n    showColumnTotalsChange: [{\n      type: Output\n    }],\n    showRowGrandTotalsChange: [{\n      type: Output\n    }],\n    showRowTotalsChange: [{\n      type: Output\n    }],\n    showTotalsPriorChange: [{\n      type: Output\n    }],\n    stateStoringChange: [{\n      type: Output\n    }],\n    tabIndexChange: [{\n      type: Output\n    }],\n    textsChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    wordWrapEnabledChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxPivotGridModule, {\n    declarations: function declarations() {\n      return [DxPivotGridComponent];\n    },\n    imports: function imports() {\n      return [DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxPivotGridComponent, DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxTemplateModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DxPivotGridModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxPivotGridComponent],\n      exports: [DxPivotGridComponent, DxoDataSourceModule, DxiFieldModule, DxoFormatModule, DxoHeaderFilterModule, DxoStoreModule, DxoExportModule, DxoFieldChooserModule, DxoTextsModule, DxoFieldPanelModule, DxoLoadPanelModule, DxoScrollingModule, DxoStateStoringModule, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxPivotGridComponent, DxPivotGridModule };","map":{"version":3,"sources":["devextreme-angular/ui/pivot-grid/index.ts","devextreme-angular/ui/pivot-grid/devextreme-angular-ui-pivot-grid.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;;;;;;;AAAA;AACC;AACC;AACC;AAEF;AAAI;AAEF;AAAI;AACC;AAEF;AAAI;AAGJ;;AAuDN;AACA;AACA;AACA;;;;;;AACA,IAUa,oBAAb;AAAA;;AAAA;;AA4tBI,gCAAY,UAAZ,EAAoC,MAApC,EAAoD,YAApD,EACgB,cADhB,EAEgB,IAFhB,EAGQ,UAHR,EAIQ,aAJR,EAK6B,UAL7B,EAK4C;AAAA;;AAAA;;AAExC,8BAAM,UAAN,EAAkB,MAAlB,EAA0B,YAA1B,EAAwC,cAAxC,EAAwD,aAAxD,EAAuE,UAAvE;AANY,UAAA,cAAA,GAAA,cAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AAOZ,UAAK,oBAAL,CAA0B,CACtB;AAAE,MAAA,SAAS,EAAE,WAAb;AAA0B,MAAA,IAAI,EAAE;AAAhC,KADsB,EAEtB;AAAE,MAAA,SAAS,EAAE,cAAb;AAA6B,MAAA,IAAI,EAAE;AAAnC,KAFsB,EAGtB;AAAE,MAAA,SAAS,EAAE,cAAb;AAA6B,MAAA,IAAI,EAAE;AAAnC,KAHsB,EAItB;AAAE,MAAA,SAAS,EAAE,sBAAb;AAAqC,MAAA,IAAI,EAAE;AAA3C,KAJsB,EAKtB;AAAE,MAAA,SAAS,EAAE,WAAb;AAA0B,MAAA,IAAI,EAAE;AAAhC,KALsB,EAMtB;AAAE,MAAA,SAAS,EAAE,UAAb;AAAyB,MAAA,IAAI,EAAE;AAA/B,KANsB,EAOtB;AAAE,MAAA,SAAS,EAAE,WAAb;AAA0B,MAAA,IAAI,EAAE;AAAhC,KAPsB,EAQtB;AAAE,MAAA,SAAS,EAAE,YAAb;AAA2B,MAAA,IAAI,EAAE;AAAjC,KARsB,EAStB;AAAE,MAAA,SAAS,EAAE,aAAb;AAA4B,MAAA,IAAI,EAAE;AAAlC,KATsB,EAUtB;AAAE,MAAA,SAAS,EAAE,eAAb;AAA8B,MAAA,IAAI,EAAE;AAApC,KAVsB,EAWtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAXsB,EAYtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAZsB,EAatB;AAAE,MAAA,IAAI,EAAE;AAAR,KAbsB,EActB;AAAE,MAAA,IAAI,EAAE;AAAR,KAdsB,EAetB;AAAE,MAAA,IAAI,EAAE;AAAR,KAfsB,EAgBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAhBsB,EAiBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAjBsB,EAkBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAlBsB,EAmBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAnBsB,EAoBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KApBsB,EAqBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KArBsB,EAsBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAtBsB,EAuBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAvBsB,EAwBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAxBsB,EAyBtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAzBsB,EA0BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA1BsB,EA2BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA3BsB,EA4BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA5BsB,EA6BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA7BsB,EA8BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA9BsB,EA+BtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA/BsB,EAgCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAhCsB,EAiCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAjCsB,EAkCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAlCsB,EAmCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAnCsB,EAoCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KApCsB,EAqCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KArCsB,EAsCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAtCsB,EAuCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAvCsB,EAwCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAxCsB,EAyCtB;AAAE,MAAA,IAAI,EAAE;AAAR,KAzCsB,EA0CtB;AAAE,MAAA,IAAI,EAAE;AAAR,KA1CsB,CAA1B;;AA6CA,UAAK,IAAL,CAAU,OAAV;;AACA,IAAA,UAAU,CAAC,OAAX;AAlDwC;AAmD3C;AACL;AACO;AAAS;AAAM;;;AAtxBtB;AAAA;AAAA,SAQIA,eAAkB;AACd,aAAO,KAAK,UAAL,CAAgB,gBAAhB,CAAP;AACH,KAVL;AAAA,SAWI,aAAmB,KAAnB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,gBAAhB,EAAkC,KAAlC;AACH;AACL;AAEK;AACA;AACH;;AAlBF;AAAA;AAAA,SAqBIA,eAAkB;AACd,aAAO,KAAK,UAAL,CAAgB,gBAAhB,CAAP;AACH,KAvBL;AAAA,SAwBI,aAAmB,KAAnB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,gBAAhB,EAAkC,KAAlC;AACH;AACL;AAEK;AACA;AACH;;AA/BF;AAAA;AAAA,SAkCIA,eAAgB;AACZ,aAAO,KAAK,UAAL,CAAgB,cAAhB,CAAP;AACH,KApCL;AAAA,SAqCI,aAAiB,KAAjB,EAA+B;AAC3B,WAAK,UAAL,CAAgB,cAAhB,EAAgC,KAAhC;AACH;AACL;AAEK;AACA;AACH;;AA5CF;AAAA;AAAA,SA+CIA,eAAyB;AACrB,aAAO,KAAK,UAAL,CAAgB,uBAAhB,CAAP;AACH,KAjDL;AAAA,SAkDI,aAA0B,KAA1B,EAAwC;AACpC,WAAK,UAAL,CAAgB,uBAAhB,EAAyC,KAAzC;AACH;AACL;AAEK;AACA;AACH;;AAzDF;AAAA;AAAA,SA4DIA,eAAiB;AACb,aAAO,KAAK,UAAL,CAAgB,eAAhB,CAAP;AACH,KA9DL;AAAA,SA+DI,aAAkB,KAAlB,EAA+B;AAC3B,WAAK,UAAL,CAAgB,eAAhB,EAAiC,KAAjC;AACH;AACL;AAEK;AACA;AACH;;AAtEF;AAAA;AAAA,SAyEIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KA3EL;AAAA,SA4EI,aAAe,KAAf,EAAmH;AAC/G,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AAnFF;AAAA;AAAA,SAsFIA,eAAY;AACR,aAAO,KAAK,UAAL,CAAgB,UAAhB,CAAP;AACH,KAxFL;AAAA,SAyFI,aAAa,KAAb,EAA2B;AACvB,WAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B;AACH;AACL;AAEK;AACA;AACH;;AAhGF;AAAA;AAAA,SAmGIA,eAAe;AACX,aAAO,KAAK,UAAL,CAAgB,aAAhB,CAAP;AACH,KArGL;AAAA,SAsGI,aAAgB,KAAhB,EAA0B;AACtB,WAAK,UAAL,CAAgB,aAAhB,EAA+B,KAA/B;AACH;AACL;AAEK;AACA;AACH;;AA7GF;AAAA;AAAA,SAgHIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KAlHL;AAAA,SAmHI,aAAe,KAAf,EAA6B;AACzB,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AA1HF;AAAA;AAAA,SA6HIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KA/HL;AAAA,SAgII,aAAW,KAAX,EAA0G;AACtG,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AACL;AAEK;AACA;AACH;;AAvIF;AAAA;AAAA,SA0IIA,eAAgB;AACZ,aAAO,KAAK,UAAL,CAAgB,cAAhB,CAAP;AACH,KA5IL;AAAA,SA6II,aAAiB,KAAjB,EAAyT;AACrT,WAAK,UAAL,CAAgB,cAAhB,EAAgC,KAAhC;AACH;AACL;AAEK;AACA;AACH;;AApJF;AAAA;AAAA,SAuJIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KAzJL;AAAA,SA0JI,aAAe,KAAf,EAAmS;AAC/R,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AAjKF;AAAA;AAAA,SAoKIA,eAAgB;AACZ,aAAO,KAAK,UAAL,CAAgB,cAAhB,CAAP;AACH,KAtKL;AAAA,SAuKI,aAAiB,KAAjB,EAAuM;AACnM,WAAK,UAAL,CAAgB,cAAhB,EAAgC,KAAhC;AACH;AACL;AAEK;AACA;AACH;;AA9KF;AAAA;AAAA,SAiLIA,eAAU;AACN,aAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACH,KAnLL;AAAA,SAoLI,aAAW,KAAX,EAA4C;AACxC,WAAK,UAAL,CAAgB,QAAhB,EAA0B,KAA1B;AACH;AACL;AAEK;AACA;AACH;;AA3LF;AAAA;AAAA,SA8LIA,eAAyB;AACrB,aAAO,KAAK,UAAL,CAAgB,uBAAhB,CAAP;AACH,KAhML;AAAA,SAiMI,aAA0B,KAA1B,EAAwC;AACpC,WAAK,UAAL,CAAgB,uBAAhB,EAAyC,KAAzC;AACH;AACL;AAEK;AACA;AACH;;AAxMF;AAAA;AAAA,SA2MIA,eAAQ;AACJ,aAAO,KAAK,UAAL,CAAgB,MAAhB,CAAP;AACH,KA7ML;AAAA,SA8MI,aAAS,KAAT,EAAsB;AAClB,WAAK,UAAL,CAAgB,MAAhB,EAAwB,KAAxB;AACH;AACL;AAEK;AACA;AACH;;AArNF;AAAA;AAAA,SAwNIA,eAAa;AACT,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACH,KA1NL;AAAA,SA2NI,aAAc,KAAd,EAAwM;AACpM,WAAK,UAAL,CAAgB,WAAhB,EAA6B,KAA7B;AACH;AACL;AAEK;AACA;AACH;;AAlOF;AAAA;AAAA,SAqOIA,eAAmB;AACf,aAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAP;AACH,KAvOL;AAAA,SAwOI,aAAoB,KAApB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,iBAAhB,EAAmC,KAAnC;AACH;AACL;AAEK;AACA;AACH;;AA/OF;AAAA;AAAA,SAkPIA,eAAcA;AACV,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACH,KApPL;AAAA,SAqPI,aAAe,KAAf,EAA6B;AACzB,WAAK,UAAL,CAAgB,YAAhB,EAA8B,KAA9B;AACH;AACL;AAEK;AACA;AACH;;AA5PF;AAAA;AAAA,SA+PIA,eAAa;AACT,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACH,KAjQL;AAAA,SAkQI,aAAc,KAAd,EAAoE;AAChE,WAAK,UAAL,CAAgB,WAAhB,EAA6B,KAA7B;AACH;AACL;AAEK;AACA;AACH;;AAzQF;AAAA;AAAA,SA4QIA,eAAe;AACX,aAAO,KAAK,UAAL,CAAgB,aAAhB,CAAP;AACH,KA9QL;AAAA,SA+QI,aAAgB,KAAhB,EAA8B;AAC1B,WAAK,UAAL,CAAgB,aAAhB,EAA+B,KAA/B;AACH;AACL;AAEK;AACA;AACH;;AAtRF;AAAA;AAAA,SAyRIA,eAAyB;AACrB,aAAO,KAAK,UAAL,CAAgB,uBAAhB,CAAP;AACH,KA3RL;AAAA,SA4RI,aAA0B,KAA1B,EAAwC;AACpC,WAAK,UAAL,CAAgB,uBAAhB,EAAyC,KAAzC;AACH;AACL;AAEK;AACA;AACH;;AAnSF;AAAA;AAAA,SAsSIA,eAAoB;AAChB,aAAO,KAAK,UAAL,CAAgB,kBAAhB,CAAP;AACH,KAxSL;AAAA,SAySI,aAAqB,KAArB,EAAmC;AAC/B,WAAK,UAAL,CAAgB,kBAAhB,EAAoC,KAApC;AACH;AACL;AAEK;AACA;AACH;;AAhTF;AAAA;AAAA,SAmTIA,eAAsB;AAClB,aAAO,KAAK,UAAL,CAAgB,oBAAhB,CAAP;AACH,KArTL;AAAA,SAsTI,aAAuB,KAAvB,EAAqC;AACjC,WAAK,UAAL,CAAgB,oBAAhB,EAAsC,KAAtC;AACH;AACL;AAEK;AACA;AACH;;AA7TF;AAAA;AAAA,SAgUIA,eAAiB;AACb,aAAO,KAAK,UAAL,CAAgB,eAAhB,CAAP;AACH,KAlUL;AAAA,SAmUI,aAAkB,KAAlB,EAAgC;AAC5B,WAAK,UAAL,CAAgB,eAAhB,EAAiC,KAAjC;AACH;AACL;AAEK;AACA;AACH;;AA1UF;AAAA;AAAA,SA6UIA,eAAmB;AACf,aAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAP;AACH,KA/UL;AAAA,SAgVI,aAAoB,KAApB,EAAiC;AAC7B,WAAK,UAAL,CAAgB,iBAAhB,EAAmC,KAAnC;AACH;AACL;AAEK;AACA;AACH;;AAvVF;AAAA;AAAA,SA0VIA,eAAgB;AACZ,aAAO,KAAK,UAAL,CAAgB,cAAhB,CAAP;AACH,KA5VL;AAAA,SA6VI,aAAiB,KAAjB,EAAuJ;AACnJ,WAAK,UAAL,CAAgB,cAAhB,EAAgC,KAAhC;AACH;AACL;AAEK;AACA;AACH;;AApWF;AAAA;AAAA,SAuWIA,eAAY;AACR,aAAO,KAAK,UAAL,CAAgB,UAAhB,CAAP;AACH,KAzWL;AAAA,SA0WI,aAAa,KAAb,EAA0B;AACtB,WAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B;AACH;AACL;AAEK;AACA;AACH;;AAjXF;AAAA;AAAA,SAoXIA,eAAS;AACL,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KAtXL;AAAA,SAuXI,aAAU,KAAV,EAAqR;AACjR,WAAK,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACH;AACL;AAEK;AACA;AACH;;AA9XF;AAAA;AAAA,SAiYIA,eAAW;AACP,aAAO,KAAK,UAAL,CAAgB,SAAhB,CAAP;AACH,KAnYL;AAAA,SAoYI,aAAY,KAAZ,EAA0B;AACtB,WAAK,UAAL,CAAgB,SAAhB,EAA2B,KAA3B;AACH;AACL;AAEK;AACA;AACH;;AA3YF;AAAA;AAAA,SA8YIA,eAAS;AACL,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KAhZL;AAAA,SAiZI,aAAU,KAAV,EAA2C;AACvC,WAAK,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACH;AACL;AAEK;AACA;AACH;;AAxZF;AAAA;AAAA,SA2ZIA,eAAmB;AACf,aAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAP;AACH,KA7ZL;AAAA,SA8ZI,aAAoB,KAApB,EAAkC;AAC9B,WAAK,UAAL,CAAgB,iBAAhB,EAAmC,KAAnC;AACH;AAhaL;AAAA;AAAA,WAsxBc,yBAAgB,OAAhB,EAAyB,OAAzB,EAAgC;AAEtC,aAAO,IAAI,WAAJ,CAAgB,OAAhB,EAAyB,OAAzB,CAAP;AACH;AAzxBL;AAAA;AAAA,WA4xBI,uBAAW;AACP,WAAK,cAAL;AACH;AA9xBL;AAAA;AAAA,WAgyBI,qBAAY,OAAZ,EAAkC;AAC9B,4FAAkB,OAAlB;;AACA,WAAK,YAAL,CAAkB,YAAlB,EAAgC,OAAhC;AACH;AAnyBL;AAAA;AAAA,WAqyBI,sBAAa,IAAb,EAA2B,OAA3B,EAAiD;AAC7C,UAAI,EAAE,IAAI,IAAI,KAAK,gBAAf,CAAJ,EAAsC;AAClC,aAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,OAAtB;AACH;AACJ;AAzyBL;AAAA;AAAA,WA2yBI,qBAAS;AACL,WAAK,IAAL,CAAU,OAAV,CAAkB,YAAlB;;AACA,WAAK,cAAL,CAAoB,aAApB;;AACA;;AACA;AACH;AAhzBL;AAAA;AAAA,WAkzBI,oBAAW,IAAX,EAAyB,KAAzB,EAAmC;AAC/B,UAAI,OAAO,GAAG,KAAK,IAAL,CAAU,WAAV,CAAsB,IAAtB,EAA4B,KAA5B,CAAd;;AACA,UAAI,SAAS,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,IAArB,EAA2B,KAA3B,MAAsC,IAAtD;;AAEA,UAAI,OAAO,IAAI,SAAf,EAA0B;AACtB,6FAAiB,IAAjB,EAAuB,KAAvB;AACH;AACJ;AAzzBL;;AAAA;AAAA,EAA0C,WAA1C,CAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAo0BC;;;AACD,oBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAGkB;AAAA,IAAA,IAAA,EAlGU;AAkGV,GAHlB,EA/F2C;AAAA,IAAA,IAAA,EAAK;AAAL,GA+F3C,EA/F2D;AAAA,IAAA,IAAA,EAAW;AAAX,GA+F3D,EA9FE;AAAA,IAAA,IAAA,EAAkC;AAAlC,GA8FF,EA7FE;AAAA,IAAA,IAAA,EAAwB;AAAxB,GA6FF,EA5FE;AAAA,IAAA,IAAA,EAAsB;AAAtB,GA4FF,EA3FE;AAAA,IAAA,IAAA,EAAyB;AAAzB,GA2FF,EA1FE;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAWC,MAAX;AAAiB,MAAA,IAAA,EAAA,CAAC,WAAD;AAAjB,KAAA;AAAA,GA0FF,CAAA;AAAA,CAAA;;AAnzBID,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADDA,CAAAA,EAEF,oBAAA,CAAA,SAFEA,EAEF,gBAFEA,EAEF,IAFEA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADDA,CAAAA,EAEF,oBAAA,CAAA,SAFEA,EAEF,gBAFEA,EAEF,IAFEA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACG,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADHA,CAAAA,EAEE,oBAAA,CAAA,SAFFA,EAEE,cAFFA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EAAsC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CAAtCA,CAAAA,EAC0C,oBAAA,CAAA,SAD1CA,EAC0C,uBAD1CA,EAC0C,IAD1CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACE,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADFA,CAAAA,EAED,oBAAA,CAAA,SAFCA,EAED,eAFCA,EAED,IAFCA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,YAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADPA,CAAAA,EAGG,oBAAA,CAAA,SAHHA,EAGG,UAHHA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADPA,CAAAA,EAGD,oBAAA,CAAA,SAHCA,EAGD,aAHCA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADLA,CAAAA,EAGD,oBAAA,CAAA,SAHCA,EAGD,YAHCA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,QAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,cAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,YAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,cAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACoC,oBAAA,CAAA,SADpCA,EACoC,QADpCA,EACoC,IADpCA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EAAsC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CAAtCA,CAAAA,EAC0C,oBAAA,CAAA,SAD1CA,EAC0C,uBAD1CA,EAC0C,IAD1CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACW,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADXA,CAAAA,EAGU,oBAAA,CAAA,SAHVA,EAGU,MAHVA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,WAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADAA,CAAAA,EAC+C,oBAAA,CAAA,SAD/CA,EAC+C,iBAD/CA,EAC+C,IAD/CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACK,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADLA,CAAAA,EAGD,oBAAA,CAAA,SAHCA,EAGD,YAHCA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACY,oBAAA,CAAA,SADZA,EACY,WADZA,EACY,IADZA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACI,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADJA,CAAAA,EAGH,oBAAA,CAAA,SAHGA,EAGH,aAHGA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EAAsC,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CAAtCA,CAAAA,EAC0C,oBAAA,CAAA,SAD1CA,EAC0C,uBAD1CA,EAC0C,IAD1CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACD,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADCA,CAAAA,EAC+C,oBAAA,CAAA,SAD/CA,EAC+C,kBAD/CA,EAC+C,IAD/CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACH,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADGA,CAAAA,EAC6C,oBAAA,CAAA,SAD7CA,EAC6C,oBAD7CA,EAC6C,IAD7CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACE,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADFA,CAAAA,EAEA,oBAAA,CAAA,SAFAA,EAEA,eAFAA,EAEA,IAFAA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADAA,CAAAA,EAC+C,oBAAA,CAAA,SAD/CA,EAC+C,iBAD/CA,EAC+C,IAD/CA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,cAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EACO,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CADPA,CAAAA,EAGE,oBAAA,CAAA,SAHFA,EAGE,UAHFA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EAAoF,oBAAA,CAAA,SAApFA,EAAoF,OAApFA,EAAoF,IAApFA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACQ,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADRA,CAAAA,EAGK,oBAAA,CAAA,SAHLA,EAGK,SAHLA,EAEC,IAFDA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,MAAA,CAAGA,EAAqC,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAArCA,CAAAA,EACqC,oBAAA,CAAA,SADrCA,EACqC,OADrCA,EACqC,IADrCA,CAAAA;;AAaAA,UAAAA,CAAAA,CADC,KAAK,EACNA,EAAH,UAAA,CAAA,aAAA,EAAA,OAAA,CAAGA,EACA,UAAA,CAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CADAA,CAAAA,EAEJ,oBAAA,CAAA,SAFIA,EAEJ,iBAFIA,EAEJ,IAFIA,CAAAA;;AAaUA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,oBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,oBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,oBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAsB,YAAtB,CAAFA,CAAAA,EAAuC,oBAAA,CAAA,SAAvCA,EAAuC,wBAAvCA,EAAuC,KAAA,CAAvCA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,oBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAUAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAU,YAAV,CAAFA,CAAAA,EAA2B,oBAAA,CAAA,SAA3BA,EAA2B,YAA3BA,EAA2B,KAAA,CAA3BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,oBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAUAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,oBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAa,YAAb,CAAFA,CAAAA,EAA8B,oBAAA,CAAA,SAA9BA,EAA8B,eAA9BA,EAA8B,KAAA,CAA9BA,CAAAA;;AAQAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,oBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAoB,YAApB,CAAFA,CAAAA,EAAqC,oBAAA,CAAA,SAArCA,EAAqC,sBAArCA,EAAqC,KAAA,CAArCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAoB,YAApB,CAAFA,CAAAA,EAAqC,oBAAA,CAAA,SAArCA,EAAqC,sBAArCA,EAAqC,KAAA,CAArCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,oBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAA2B,YAA3B,CAAFA,CAAAA,EAA4C,oBAAA,CAAA,SAA5CA,EAA4C,6BAA5CA,EAA4C,KAAA,CAA5CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAmB,YAAnB,CAAFA,CAAAA,EAAoC,oBAAA,CAAA,SAApCA,EAAoC,qBAApCA,EAAoC,KAAA,CAApCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,oBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,oBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAiB,YAAjB,CAAFA,CAAAA,EAAkC,oBAAA,CAAA,SAAlCA,EAAkC,mBAAlCA,EAAkC,KAAA,CAAlCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,oBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,oBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,oBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,oBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,oBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAYA,YAAZ,CAAFA,CAAAA,EAA6B,oBAAA,CAAA,SAA7BA,EAA6B,cAA7BA,EAA6B,KAAA,CAA7BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAA2B,YAA3B,CAAFA,CAAAA,EAA4C,oBAAA,CAAA,SAA5CA,EAA4C,6BAA5CA,EAA4C,KAAA,CAA5CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAU,YAAV,CAAFA,CAAAA,EAA2B,oBAAA,CAAA,SAA3BA,EAA2B,YAA3BA,EAA2B,KAAA,CAA3BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,oBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAqB,YAArB,CAAFA,CAAAA,EAAsC,oBAAA,CAAA,SAAtCA,EAAsC,uBAAtCA,EAAsC,KAAA,CAAtCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAgB,YAAhB,CAAFA,CAAAA,EAAiC,oBAAA,CAAA,SAAjCA,EAAiC,kBAAjCA,EAAiC,KAAA,CAAjCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAe,YAAf,CAAFA,CAAAA,EAAgC,oBAAA,CAAA,SAAhCA,EAAgC,iBAAhCA,EAAgC,KAAA,CAAhCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAiB,YAAjB,CAAFA,CAAAA,EAAkC,oBAAA,CAAA,SAAlCA,EAAkC,mBAAlCA,EAAkC,KAAA,CAAlCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAA2B,YAA3B,CAAFA,CAAAA,EAA4C,oBAAA,CAAA,SAA5CA,EAA4C,6BAA5CA,EAA4C,KAAA,CAA5CA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAsB,YAAtB,CAAFA,CAAAA,EAAuC,oBAAA,CAAA,SAAvCA,EAAuC,wBAAvCA,EAAuC,KAAA,CAAvCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAwB,YAAxB,CAAFA,CAAAA,EAAyC,oBAAA,CAAA,SAAzCA,EAAyC,0BAAzCA,EAAyC,KAAA,CAAzCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAmB,YAAnB,CAAFA,CAAAA,EAAoC,oBAAA,CAAA,SAApCA,EAAoC,qBAApCA,EAAoC,KAAA,CAApCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAqB,YAArB,CAAFA,CAAAA,EAAsC,oBAAA,CAAA,SAAtCA,EAAsC,uBAAtCA,EAAsC,KAAA,CAAtCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAkB,YAAlB,CAAFA,CAAAA,EAAmC,oBAAA,CAAA,SAAnCA,EAAmC,oBAAnCA,EAAmC,KAAA,CAAnCA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAc,YAAd,CAAFA,CAAAA,EAA+B,oBAAA,CAAA,SAA/BA,EAA+B,gBAA/BA,EAA+B,KAAA,CAA/BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,oBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAa,YAAb,CAAFA,CAAAA,EAA8B,oBAAA,CAAA,SAA9BA,EAA8B,eAA9BA,EAA8B,KAAA,CAA9BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAW,YAAX,CAAFA,CAAAA,EAA4B,oBAAA,CAAA,SAA5BA,EAA4B,aAA5BA,EAA4B,KAAA,CAA5BA,CAAAA;;AAOAA,UAAAA,CAAAA,CAAT,MAAM,EAAGA,EAAE,UAAA,CAAA,aAAA,EAAqB,YAArB,CAAFA,CAAAA,EAAsC,oBAAA,CAAA,SAAtCA,EAAsC,uBAAtCA,EAAsC,KAAA,CAAtCA,CAAAA;;AAptBD,oBAAoB,GAAA,UAAA,CAA7B,CAVH,OAAA,CAAA,CAAA,EAAS,MA2uBS,CA1uBf,WA0uBe,CA3uBlB,CAUG,EATU,UAAA,CAAA,mBAAA,EACF,CAAE,UAAF,EACR,MADQ,EACC,cADD,EAEU,aAFV,EAGS,oBAHT,EAIY,gBAJZ,EAKJ,aALI,EAKgB,MALhB,CADE,CASV,CAA6B,EAF5B,oBAE4B,CAApB;;AA2zBZ,IAuCY,iBAAb;AAAA;AAAA,CAvCC;;AAuCY,iBAAA,CAAiB,IAAjB,GAAiB,SAtC7B,yBAsC6B,CArC5B,CAqC4B,EArC5B;AAAA,SAAS,KAAA,CAAA,IAAA,iBAAA,GAAT;AACqB,CAoCV;;AAnCT,iBAAA,CAAA,IAAA,GAAc,MAAA,CAAA,gBAAA,CACd;AAAA,EAAA,IAAe,EAAA;AAAf,CADc,CAAd;AAEqB,iBAAA,CAAA,IAAA,GAAA,MACrB,CAAA,gBADqB,CACP;AAAA,EAAA,OACd,EAAA,CAAA,CAAe,mBAAf,EACqB,cADrB,EAEc,eAFd,EAGmB,qBAHnB,EAIkB,cAJlB,EAKA,eALA,EAMA,qBANA,EAOA,cAPA,EAQA,mBARA,EASA,kBATA,EAS0B,kBAT1B,EAWY,qBAXZ,EAYoB,mBAZpB,EAcO,gBAdP,EAeoB,0BAfpB,CAAA,EAgBmB,mBAhBnB,EAiBc,cAjBd,EAkBe,eAlBf,EAmBqB,qBAnBrB,EAoBA,cApBA,EAqBA,eArBA,EAsBA,qBAtBA,EAsBqB,cAtBrB,EAuBc,mBAvBd,EAwBmB,kBAxBnB,EAyBA,kBAzBA,EA0BA,qBA1BA,EA2BA,gBA3BA;AADc,CADO,CAAA;;aA8BrB;AAAA,GAAA,OAAA,SAAA,KAAgB,WAAhB,IAEF,SAFE,KAGS,MAAqB,CAAA,iBAArB,CAAqB,oBAArB,EAAqB,CAAA;mBAAA;;;;;;AAAA,GAAA,CAArB,E;;;;;;;;;;;;;;;;;;;;;;GAAA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,CAHT;;;;;;;;;;;;;;;;;;;;;;;;;;AAG+B,C;ACp7BnC;AACC;AACC;;;AAEF,SAAA,oBAAA,EAAA,iBAAA","sourcesContent":["/*!\n * devextreme-angular\n * Version: 21.1.3\n * Build date: Tue May 18 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoDataSourceModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiFieldModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStoreModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldChooserModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTextsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScrollingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStateStoringModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The PivotGrid is a UI component that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-pivot-grid',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPivotGrid;\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get allowExpandAll(): boolean {\r\n        return this._getOption('allowExpandAll');\r\n    }\r\n    set allowExpandAll(value: boolean) {\r\n        this._setOption('allowExpandAll', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get allowFiltering(): boolean {\r\n        return this._getOption('allowFiltering');\r\n    }\r\n    set allowFiltering(value: boolean) {\r\n        this._setOption('allowFiltering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get allowSorting(): boolean {\r\n        return this._getOption('allowSorting');\r\n    }\r\n    set allowSorting(value: boolean) {\r\n        this._setOption('allowSorting', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get allowSortingBySummary(): boolean {\r\n        return this._getOption('allowSortingBySummary');\r\n    }\r\n    set allowSortingBySummary(value: boolean) {\r\n        this._setOption('allowSortingBySummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get dataFieldArea(): string {\r\n        return this._getOption('dataFieldArea');\r\n    }\r\n    set dataFieldArea(value: string) {\r\n        this._setOption('dataFieldArea', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get encodeHtml(): boolean {\r\n        return this._getOption('encodeHtml');\r\n    }\r\n    set encodeHtml(value: boolean) {\r\n        this._setOption('encodeHtml', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get export(): { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get fieldChooser(): { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number } {\r\n        return this._getOption('fieldChooser');\r\n    }\r\n    set fieldChooser(value: { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }) {\r\n        this._setOption('fieldChooser', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get fieldPanel(): { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean } {\r\n        return this._getOption('fieldPanel');\r\n    }\r\n    set fieldPanel(value: { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }) {\r\n        this._setOption('fieldPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get headerFilter(): { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number } {\r\n        return this._getOption('headerFilter');\r\n    }\r\n    set headerFilter(value: { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }) {\r\n        this._setOption('headerFilter', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get hideEmptySummaryCells(): boolean {\r\n        return this._getOption('hideEmptySummaryCells');\r\n    }\r\n    set hideEmptySummaryCells(value: boolean) {\r\n        this._setOption('hideEmptySummaryCells', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get loadPanel(): { enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number } {\r\n        return this._getOption('loadPanel');\r\n    }\r\n    set loadPanel(value: { enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }) {\r\n        this._setOption('loadPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get rowHeaderLayout(): string {\r\n        return this._getOption('rowHeaderLayout');\r\n    }\r\n    set rowHeaderLayout(value: string) {\r\n        this._setOption('rowHeaderLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get scrolling(): { mode?: string, useNative?: boolean | string } {\r\n        return this._getOption('scrolling');\r\n    }\r\n    set scrolling(value: { mode?: string, useNative?: boolean | string }) {\r\n        this._setOption('scrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showBorders(): boolean {\r\n        return this._getOption('showBorders');\r\n    }\r\n    set showBorders(value: boolean) {\r\n        this._setOption('showBorders', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showColumnGrandTotals(): boolean {\r\n        return this._getOption('showColumnGrandTotals');\r\n    }\r\n    set showColumnGrandTotals(value: boolean) {\r\n        this._setOption('showColumnGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showColumnTotals(): boolean {\r\n        return this._getOption('showColumnTotals');\r\n    }\r\n    set showColumnTotals(value: boolean) {\r\n        this._setOption('showColumnTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showRowGrandTotals(): boolean {\r\n        return this._getOption('showRowGrandTotals');\r\n    }\r\n    set showRowGrandTotals(value: boolean) {\r\n        this._setOption('showRowGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showRowTotals(): boolean {\r\n        return this._getOption('showRowTotals');\r\n    }\r\n    set showRowTotals(value: boolean) {\r\n        this._setOption('showRowTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get showTotalsPrior(): string {\r\n        return this._getOption('showTotalsPrior');\r\n    }\r\n    set showTotalsPrior(value: string) {\r\n        this._setOption('showTotalsPrior', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get stateStoring(): { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string } {\r\n        return this._getOption('stateStoring');\r\n    }\r\n    set stateStoring(value: { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }) {\r\n        this._setOption('stateStoring', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get texts(): { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string } {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n    \r\n     */\r\n    @Input()\r\n    get wordWrapEnabled(): boolean {\r\n        return this._getOption('wordWrapEnabled');\r\n    }\r\n    set wordWrapEnabled(value: boolean) {\r\n        this._setOption('wordWrapEnabled', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onCellClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onCellPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onContextMenuPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n     * @deprecated \r\n    \r\n    \r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n     * @deprecated \r\n    \r\n    \r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() allowExpandAllChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() allowFilteringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() allowSortingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() allowSortingBySummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataFieldAreaChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() encodeHtmlChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() exportChange: EventEmitter<{ enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() fieldChooserChange: EventEmitter<{ allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() fieldPanelChange: EventEmitter<{ allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() headerFilterChange: EventEmitter<{ allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() loadPanelChange: EventEmitter<{ enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rowHeaderLayoutChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() scrollingChange: EventEmitter<{ mode?: string, useNative?: boolean | string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showBordersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showColumnTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showRowGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showRowTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showTotalsPriorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() stateStoringChange: EventEmitter<{ customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() textsChange: EventEmitter<{ collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() wordWrapEnabledChange: EventEmitter<boolean>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'cellClick', emit: 'onCellClick' },\r\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'allowExpandAllChange' },\r\n            { emit: 'allowFilteringChange' },\r\n            { emit: 'allowSortingChange' },\r\n            { emit: 'allowSortingBySummaryChange' },\r\n            { emit: 'dataFieldAreaChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'encodeHtmlChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fieldChooserChange' },\r\n            { emit: 'fieldPanelChange' },\r\n            { emit: 'headerFilterChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hideEmptySummaryCellsChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'loadPanelChange' },\r\n            { emit: 'rowHeaderLayoutChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollingChange' },\r\n            { emit: 'showBordersChange' },\r\n            { emit: 'showColumnGrandTotalsChange' },\r\n            { emit: 'showColumnTotalsChange' },\r\n            { emit: 'showRowGrandTotalsChange' },\r\n            { emit: 'showRowTotalsChange' },\r\n            { emit: 'showTotalsPriorChange' },\r\n            { emit: 'stateStoringChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wordWrapEnabledChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxPivotGrid(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPivotGridComponent\r\n  ],\r\n  exports: [\r\n    DxPivotGridComponent,\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPivotGridModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}