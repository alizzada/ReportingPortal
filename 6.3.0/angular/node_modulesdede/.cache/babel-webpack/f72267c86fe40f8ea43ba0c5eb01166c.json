{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../../core/utils/type\";\nvar COLLECTOR_DEFAULT_WIDTH = 24;\nvar COLLECTOR_DEFAULT_OFFSET = 3;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\nvar APPOINTMENT_MIN_COUNT = 1;\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\nvar APPOINTMENT_INCREASED_WIDTH = 50;\n\nvar AppointmentPositioningStrategy = /*#__PURE__*/function () {\n  function AppointmentPositioningStrategy(renderingStrategy) {\n    _classCallCheck(this, AppointmentPositioningStrategy);\n\n    this._renderingStrategy = renderingStrategy;\n  }\n\n  _createClass(AppointmentPositioningStrategy, [{\n    key: \"getRenderingStrategy\",\n    value: function getRenderingStrategy() {\n      return this._renderingStrategy;\n    }\n  }, {\n    key: \"getDropDownAppointmentWidth\",\n    value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {\n      if (isAllDay || !isDefined(isAllDay)) {\n        return COLLECTOR_WIDTH_IN_PERCENTS * this.getRenderingStrategy().getDefaultCellWidth() / 100;\n      } else {\n        return COLLECTOR_DEFAULT_WIDTH;\n      }\n    }\n  }, {\n    key: \"getCollectorTopOffset\",\n    value: function getCollectorTopOffset() {\n      return COLLECTOR_DEFAULT_OFFSET;\n    }\n  }, {\n    key: \"getCollectorLeftOffset\",\n    value: function getCollectorLeftOffset() {\n      return COLLECTOR_DEFAULT_OFFSET;\n    }\n  }, {\n    key: \"getAppointmentDefaultOffset\",\n    value: function getAppointmentDefaultOffset() {\n      if (this.getRenderingStrategy()._isCompactTheme()) {\n        return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET;\n      }\n\n      return this.getRenderingStrategy().instance.option(\"_appointmentOffset\");\n    }\n  }, {\n    key: \"getDynamicAppointmentCountPerCell\",\n    value: function getDynamicAppointmentCountPerCell() {\n      var renderingStrategy = this.getRenderingStrategy();\n      var cellHeight = renderingStrategy.instance.fire(\"getCellHeight\");\n\n      var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\n\n      if (renderingStrategy.hasAllDayAppointments()) {\n        return {\n          allDay: \"vertical\" === renderingStrategy.instance._groupOrientation ? allDayCount : renderingStrategy.instance.option(\"_appointmentCountPerCell\"),\n          simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\n        };\n      } else {\n        return allDayCount;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function getDropDownAppointmentHeight() {\n      return;\n    }\n  }, {\n    key: \"_getAppointmentMinCount\",\n    value: function _getAppointmentMinCount() {\n      return APPOINTMENT_MIN_COUNT;\n    }\n  }, {\n    key: \"_calculateDynamicAppointmentCountPerCell\",\n    value: function _calculateDynamicAppointmentCountPerCell() {\n      return Math.floor(this.getRenderingStrategy()._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH);\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function _getAppointmentDefaultWidth() {\n      return APPOINTMENT_DEFAULT_WIDTH;\n    }\n  }]);\n\n  return AppointmentPositioningStrategy;\n}();\n\nexport default AppointmentPositioningStrategy;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js"],"names":["isDefined","COLLECTOR_DEFAULT_WIDTH","COLLECTOR_DEFAULT_OFFSET","COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET","APPOINTMENT_MIN_COUNT","APPOINTMENT_DEFAULT_WIDTH","COLLECTOR_WIDTH_IN_PERCENTS","APPOINTMENT_INCREASED_WIDTH","AppointmentPositioningStrategy","renderingStrategy","_renderingStrategy","intervalCount","isAllDay","getRenderingStrategy","getDefaultCellWidth","_isCompactTheme","instance","option","cellHeight","fire","allDayCount","Math","floor","_getAppointmentDefaultOffset","_getAppointmentDefaultHeight","_getAppointmentMinCount","hasAllDayAppointments","allDay","_groupOrientation","simple","_calculateDynamicAppointmentCountPerCell","_getAppointmentMaxWidth"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,QAEO,0BAFP;AAGA,IAAIC,uBAAuB,GAAG,EAA9B;AACA,IAAIC,wBAAwB,GAAG,CAA/B;AACA,IAAIC,wCAAwC,GAAG,EAA/C;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,yBAAyB,GAAG,EAAhC;AACA,IAAIC,2BAA2B,GAAG,EAAlC;AACA,IAAIC,2BAA2B,GAAG,EAAlC;;IACMC,8B;AACF,0CAAYC,iBAAZ,EAA+B;AAAA;;AAC3B,SAAKC,kBAAL,GAA0BD,iBAA1B;AACH;;;;WACD,gCAAuB;AACnB,aAAO,KAAKC,kBAAZ;AACH;;;WACD,qCAA4BC,aAA5B,EAA2CC,QAA3C,EAAqD;AACjD,UAAIA,QAAQ,IAAI,CAACZ,SAAS,CAACY,QAAD,CAA1B,EAAsC;AAClC,eAAON,2BAA2B,GAAG,KAAKO,oBAAL,GAA4BC,mBAA5B,EAA9B,GAAkF,GAAzF;AACH,OAFD,MAEO;AACH,eAAOb,uBAAP;AACH;AACJ;;;WACD,iCAAwB;AACpB,aAAOC,wBAAP;AACH;;;WACD,kCAAyB;AACrB,aAAOA,wBAAP;AACH;;;WACD,uCAA8B;AAC1B,UAAI,KAAKW,oBAAL,GAA4BE,eAA5B,EAAJ,EAAmD;AAC/C,eAAOZ,wCAAP;AACH;;AACD,aAAO,KAAKU,oBAAL,GAA4BG,QAA5B,CAAqCC,MAArC,CAA4C,oBAA5C,CAAP;AACH;;;WACD,6CAAoC;AAChC,UAAIR,iBAAiB,GAAG,KAAKI,oBAAL,EAAxB;AACA,UAAIK,UAAU,GAAGT,iBAAiB,CAACO,QAAlB,CAA2BG,IAA3B,CAAgC,eAAhC,CAAjB;;AACA,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,UAAU,GAAGT,iBAAiB,CAACc,4BAAlB,EAAd,IAAkEd,iBAAiB,CAACe,4BAAlB,EAA7E,KAAkI,KAAKC,uBAAL,EAApJ;;AACA,UAAIhB,iBAAiB,CAACiB,qBAAlB,EAAJ,EAA+C;AAC3C,eAAO;AACHC,UAAAA,MAAM,EAAE,eAAelB,iBAAiB,CAACO,QAAlB,CAA2BY,iBAA1C,GAA8DR,WAA9D,GAA4EX,iBAAiB,CAACO,QAAlB,CAA2BC,MAA3B,CAAkC,0BAAlC,CADjF;AAEHY,UAAAA,MAAM,EAAE,KAAKC,wCAAL,MAAmD,KAAKL,uBAAL;AAFxD,SAAP;AAIH,OALD,MAKO;AACH,eAAOL,WAAP;AACH;AACJ;;;WACD,wCAA+B;AAC3B;AACH;;;WACD,mCAA0B;AACtB,aAAOhB,qBAAP;AACH;;;WACD,oDAA2C;AACvC,aAAOiB,IAAI,CAACC,KAAL,CAAW,KAAKT,oBAAL,GAA4BkB,uBAA5B,KAAwDxB,2BAAnE,CAAP;AACH;;;WACD,uCAA8B;AAC1B,aAAOF,yBAAP;AACH;;;;;;AAEL,eAAeG,8BAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nvar COLLECTOR_DEFAULT_WIDTH = 24;\r\nvar COLLECTOR_DEFAULT_OFFSET = 3;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\r\nvar APPOINTMENT_MIN_COUNT = 1;\r\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\r\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\r\nvar APPOINTMENT_INCREASED_WIDTH = 50;\r\nclass AppointmentPositioningStrategy {\r\n    constructor(renderingStrategy) {\r\n        this._renderingStrategy = renderingStrategy\r\n    }\r\n    getRenderingStrategy() {\r\n        return this._renderingStrategy\r\n    }\r\n    getDropDownAppointmentWidth(intervalCount, isAllDay) {\r\n        if (isAllDay || !isDefined(isAllDay)) {\r\n            return COLLECTOR_WIDTH_IN_PERCENTS * this.getRenderingStrategy().getDefaultCellWidth() / 100\r\n        } else {\r\n            return COLLECTOR_DEFAULT_WIDTH\r\n        }\r\n    }\r\n    getCollectorTopOffset() {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getCollectorLeftOffset() {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getAppointmentDefaultOffset() {\r\n        if (this.getRenderingStrategy()._isCompactTheme()) {\r\n            return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET\r\n        }\r\n        return this.getRenderingStrategy().instance.option(\"_appointmentOffset\")\r\n    }\r\n    getDynamicAppointmentCountPerCell() {\r\n        var renderingStrategy = this.getRenderingStrategy();\r\n        var cellHeight = renderingStrategy.instance.fire(\"getCellHeight\");\r\n        var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\r\n        if (renderingStrategy.hasAllDayAppointments()) {\r\n            return {\r\n                allDay: \"vertical\" === renderingStrategy.instance._groupOrientation ? allDayCount : renderingStrategy.instance.option(\"_appointmentCountPerCell\"),\r\n                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\r\n            }\r\n        } else {\r\n            return allDayCount\r\n        }\r\n    }\r\n    getDropDownAppointmentHeight() {\r\n        return\r\n    }\r\n    _getAppointmentMinCount() {\r\n        return APPOINTMENT_MIN_COUNT\r\n    }\r\n    _calculateDynamicAppointmentCountPerCell() {\r\n        return Math.floor(this.getRenderingStrategy()._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH)\r\n    }\r\n    _getAppointmentDefaultWidth() {\r\n        return APPOINTMENT_DEFAULT_WIDTH\r\n    }\r\n}\r\nexport default AppointmentPositioningStrategy;\r\n"]},"metadata":{},"sourceType":"module"}