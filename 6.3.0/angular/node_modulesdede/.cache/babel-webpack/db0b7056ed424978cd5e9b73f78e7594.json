{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/range_selector/range_selector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../core/component_registrator\";\nimport { isDefined as _isDefined, isNumeric as _isNumber, isDate as _isDate, type as _type, isPlainObject } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { patchFontOptions, normalizeEnum as _normalizeEnum, getVizRangeObject as parseValue, convertVisualRangeObject, getCategoriesInfo, getLog, rangesAreEqual } from \"../core/utils\";\nimport dateUtils from \"../../core/utils/date\";\nimport { adjust } from \"../../core/utils/math\";\nimport { Range } from \"../translators/range\";\nimport { Axis } from \"../axes/base_axis\";\nimport { correctValueType, getParser } from \"../components/parse_utils\";\nimport formatHelper from \"../../format_helper\";\nimport { consts, formatValue, HEIGHT_COMPACT_MODE } from \"./common\";\nimport { SlidersController } from \"./sliders_controller\";\nimport { Tracker } from \"./tracker\";\nimport { RangeView } from \"./range_view\";\nimport { SeriesDataSource } from \"./series_data_source\";\nimport { tickGenerator } from \"../axes/tick_generator\";\nimport baseWidgetModule from \"../core/base_widget\";\nvar _max = Math.max;\nvar _ceil = Math.ceil;\nvar _floor = Math.floor;\nvar START_VALUE = \"startValue\";\nvar END_VALUE = \"endValue\";\nvar DATETIME = \"datetime\";\nvar VALUE = \"value\";\nvar DISCRETE = \"discrete\";\nvar SEMIDISCRETE = \"semidiscrete\";\nvar STRING = \"string\";\nvar VALUE_CHANGED = VALUE + \"Changed\";\nvar CONTAINER_BACKGROUND_COLOR = \"containerBackgroundColor\";\nvar SLIDER_MARKER = \"sliderMarker\";\nvar OPTION_BACKGROUND = \"background\";\nvar LOGARITHMIC = \"logarithmic\";\nvar KEEP = \"keep\";\nvar SHIFT = \"shift\";\nvar RESET = \"reset\";\nvar INVISIBLE_POS = -1e3;\nvar SEMIDISCRETE_GRID_SPACING_FACTOR = 50;\nvar DEFAULT_AXIS_DIVISION_FACTOR = 30;\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\nvar logarithmBase = 10;\n\nfunction calculateMarkerHeight(renderer, value, sliderMarkerOptions) {\n  var formattedText = void 0 === value ? consts.emptySliderMarkerText : formatValue(value, sliderMarkerOptions);\n  var textBBox = getTextBBox(renderer, formattedText, sliderMarkerOptions.font);\n  return _ceil(textBBox.height) + 2 * sliderMarkerOptions.paddingTopBottom + consts.pointerSize;\n}\n\nfunction calculateScaleLabelHalfWidth(renderer, value, scaleOptions, tickIntervalsInfo) {\n  var formattedText = formatValue(value, scaleOptions.label, tickIntervalsInfo, scaleOptions.valueType, scaleOptions.type, scaleOptions.logarithmBase);\n  var textBBox = getTextBBox(renderer, formattedText, scaleOptions.label.font);\n  return _ceil(textBBox.width / 2);\n}\n\nfunction calculateIndents(renderer, scale, sliderMarkerOptions, indentOptions, tickIntervalsInfo) {\n  var leftMarkerHeight;\n  var leftScaleLabelWidth = 0;\n  var rightScaleLabelWidth = 0;\n  var rightMarkerHeight;\n  var placeholderWidthLeft;\n  var placeholderWidthRight;\n  var placeholderHeight;\n  var ticks = \"semidiscrete\" === scale.type ? scale.customTicks : tickIntervalsInfo.ticks;\n  var startTickValue;\n  var endTickValue;\n  indentOptions = indentOptions || {};\n  placeholderWidthLeft = indentOptions.left;\n  placeholderWidthRight = indentOptions.right;\n  placeholderHeight = sliderMarkerOptions.placeholderHeight;\n\n  if (sliderMarkerOptions.visible) {\n    leftMarkerHeight = calculateMarkerHeight(renderer, scale.startValue, sliderMarkerOptions);\n    rightMarkerHeight = calculateMarkerHeight(renderer, scale.endValue, sliderMarkerOptions);\n\n    if (void 0 === placeholderHeight) {\n      placeholderHeight = _max(leftMarkerHeight, rightMarkerHeight);\n    }\n  }\n\n  if (scale.label.visible) {\n    startTickValue = _isDefined(scale.startValue) ? ticks[0] : void 0;\n    endTickValue = _isDefined(scale.endValue) ? ticks[ticks.length - 1] : void 0;\n    leftScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, startTickValue, scale, tickIntervalsInfo);\n    rightScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, endTickValue, scale, tickIntervalsInfo);\n  }\n\n  placeholderWidthLeft = void 0 !== placeholderWidthLeft ? placeholderWidthLeft : leftScaleLabelWidth;\n  placeholderWidthRight = (void 0 !== placeholderWidthRight ? placeholderWidthRight : rightScaleLabelWidth) || 1;\n  return {\n    left: placeholderWidthLeft,\n    right: placeholderWidthRight,\n    top: placeholderHeight || 0,\n    bottom: 0\n  };\n}\n\nfunction calculateValueType(firstValue, secondValue) {\n  var typeFirstValue = _type(firstValue);\n\n  var typeSecondValue = _type(secondValue);\n\n  var validType = function validType(type) {\n    return typeFirstValue === type || typeSecondValue === type;\n  };\n\n  return validType(\"date\") ? DATETIME : validType(\"number\") ? \"numeric\" : validType(STRING) ? STRING : \"\";\n}\n\nfunction showScaleMarkers(scaleOptions) {\n  return scaleOptions.valueType === DATETIME && scaleOptions.marker.visible;\n}\n\nfunction updateTranslatorRangeInterval(translatorRange, scaleOptions) {\n  var intervalX = scaleOptions.minorTickInterval || scaleOptions.tickInterval;\n\n  if (\"datetime\" === scaleOptions.valueType) {\n    intervalX = dateUtils.dateToMilliseconds(intervalX);\n  }\n\n  translatorRange.addRange({\n    interval: intervalX\n  });\n}\n\nfunction checkLogarithmicOptions(options, defaultLogarithmBase, incidentOccurred) {\n  if (!options) {\n    return;\n  }\n\n  var logarithmBase = options.logarithmBase;\n\n  if (options.type === LOGARITHMIC && logarithmBase <= 0 || logarithmBase && !_isNumber(logarithmBase)) {\n    options.logarithmBase = defaultLogarithmBase;\n    incidentOccurred(\"E2104\");\n  } else if (options.type !== LOGARITHMIC) {\n    options.logarithmBase = void 0;\n  }\n}\n\nfunction calculateScaleAreaHeight(renderer, scaleOptions, visibleMarkers, tickIntervalsInfo) {\n  var labelScaleOptions = scaleOptions.label;\n  var markerScaleOptions = scaleOptions.marker;\n  var placeholderHeight = scaleOptions.placeholderHeight;\n  var ticks = \"semidiscrete\" === scaleOptions.type ? scaleOptions.customTicks : tickIntervalsInfo.ticks;\n  var text = formatValue(ticks[0], labelScaleOptions);\n\n  if (placeholderHeight) {\n    return placeholderHeight;\n  } else {\n    return (labelScaleOptions.visible ? labelScaleOptions.topIndent + getTextBBox(renderer, text, labelScaleOptions.font).height : 0) + (visibleMarkers ? markerScaleOptions.topIndent + markerScaleOptions.separatorHeight : 0);\n  }\n}\n\nfunction getMinorTickIntervalUnit(tickInterval, minorTickInterval, withCorrection) {\n  var interval = dateUtils.getDateUnitInterval(minorTickInterval);\n  var majorUnit = dateUtils.getDateUnitInterval(tickInterval);\n  var idx = dateUtils.dateUnitIntervals.indexOf(interval);\n\n  if (withCorrection && interval === majorUnit && idx > 0) {\n    interval = dateUtils.dateUnitIntervals[idx - 1];\n  }\n\n  return interval;\n}\n\nfunction getNextTickInterval(tickInterval, minorTickInterval, isDateType) {\n  if (!tickInterval) {\n    tickInterval = minorTickInterval;\n  } else if (isDateType) {\n    tickInterval = dateUtils.getNextDateUnit(tickInterval);\n  } else {\n    tickInterval += minorTickInterval;\n  }\n\n  return tickInterval;\n}\n\nfunction calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta) {\n  var minorTickInterval = scaleOptions.minorTickInterval;\n  var tickInterval = scaleOptions.tickInterval;\n  var interval;\n  var isDateType = \"datetime\" === scaleOptions.valueType;\n  var gridSpacingFactor = scaleOptions.axisDivisionFactor || {};\n  var tickCountByInterval;\n  var tickCountByScreen;\n\n  if (!tickInterval) {\n    do {\n      interval = getNextTickInterval(tickInterval, minorTickInterval, isDateType);\n\n      if (tickInterval !== interval) {\n        tickInterval = interval;\n      } else {\n        break;\n      }\n\n      if (isDateType) {\n        interval = dateUtils.dateToMilliseconds(tickInterval);\n      }\n\n      tickCountByInterval = _ceil((max - min) / interval);\n      tickCountByScreen = _floor(screenDelta / (gridSpacingFactor[tickInterval] || SEMIDISCRETE_GRID_SPACING_FACTOR)) || 1;\n    } while (interval && tickCountByInterval > tickCountByScreen);\n  }\n\n  return {\n    tickInterval: tickInterval,\n    minorTickInterval: minorTickInterval,\n    bounds: {\n      minVisible: min,\n      maxVisible: max\n    },\n    ticks: []\n  };\n}\n\nfunction updateTickIntervals(scaleOptions, screenDelta, incidentOccurred, range) {\n  var result;\n  var min = _isDefined(range.minVisible) ? range.minVisible : range.min;\n  var max = _isDefined(range.maxVisible) ? range.maxVisible : range.max;\n  var categoriesInfo = scaleOptions._categoriesInfo;\n  var ticksInfo;\n  var length;\n  var bounds = {};\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    result = calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta);\n  } else {\n    ticksInfo = tickGenerator({\n      axisType: scaleOptions.type,\n      dataType: scaleOptions.valueType,\n      logBase: scaleOptions.logarithmBase,\n      allowNegatives: true,\n      linearThreshold: Math.abs(scaleOptions.linearThreshold || 0),\n      axisDivisionFactor: scaleOptions.axisDivisionFactor,\n      minorAxisDivisionFactor: scaleOptions.minorAxisDivisionFactor,\n      calculateMinors: true,\n      allowDecimals: scaleOptions.allowDecimals,\n      endOnTick: scaleOptions.endOnTick,\n      incidentOccurred: incidentOccurred,\n      rangeIsEmpty: range.isEmpty()\n    })({\n      min: min,\n      max: max,\n      categories: _isDefined(categoriesInfo) ? categoriesInfo.categories : []\n    }, screenDelta, scaleOptions.tickInterval, scaleOptions.forceUserTickInterval, void 0, scaleOptions.minorTickInterval, scaleOptions.minorTickCount);\n    length = ticksInfo.ticks.length;\n    bounds.minVisible = ticksInfo.ticks[0] < min ? ticksInfo.ticks[0] : min;\n    bounds.maxVisible = ticksInfo.ticks[length - 1] > max ? ticksInfo.ticks[length - 1] : max;\n    result = {\n      tickInterval: ticksInfo.tickInterval,\n      minorTickInterval: 0 === scaleOptions.minorTickInterval ? 0 : ticksInfo.minorTickInterval,\n      bounds: bounds,\n      ticks: ticksInfo.ticks\n    };\n  }\n\n  return result;\n}\n\nfunction getFirstDayOfWeek(options) {\n  var _options$workWeek;\n\n  return null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0];\n}\n\nfunction calculateTranslatorRange(seriesDataSource, scaleOptions) {\n  var minValue;\n  var maxValue;\n  var inverted = false;\n  var startValue = scaleOptions.startValue;\n  var endValue = scaleOptions.endValue;\n  var categories;\n  var categoriesInfo;\n  var translatorRange = seriesDataSource ? seriesDataSource.getBoundRange().arg : new Range();\n  var rangeForCategories;\n  var isDate = \"datetime\" === scaleOptions.valueType;\n  var firstDayOfWeek = getFirstDayOfWeek(scaleOptions);\n  var minRange = scaleOptions.minRange;\n\n  if (scaleOptions.type === DISCRETE) {\n    rangeForCategories = new Range({\n      minVisible: startValue,\n      maxVisible: endValue\n    });\n    rangeForCategories.addRange(translatorRange);\n    translatorRange = rangeForCategories;\n    categories = seriesDataSource ? seriesDataSource.argCategories : scaleOptions.categories || startValue && endValue && [startValue, endValue];\n    categories = categories || [];\n    scaleOptions._categoriesInfo = categoriesInfo = getCategoriesInfo(categories, startValue, endValue);\n  }\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    startValue = scaleOptions.startValue = correctValueByInterval(scaleOptions.startValue, isDate, minRange, firstDayOfWeek);\n    endValue = scaleOptions.endValue = correctValueByInterval(scaleOptions.endValue, isDate, minRange, firstDayOfWeek);\n    translatorRange.minVisible = correctValueByInterval(translatorRange.minVisible, isDate, minRange, firstDayOfWeek);\n    translatorRange.maxVisible = correctValueByInterval(translatorRange.maxVisible, isDate, minRange, firstDayOfWeek);\n    translatorRange.min = correctValueByInterval(translatorRange.min, isDate, minRange, firstDayOfWeek);\n    translatorRange.max = correctValueByInterval(translatorRange.max, isDate, minRange, firstDayOfWeek);\n  }\n\n  if (_isDefined(startValue) && _isDefined(endValue)) {\n    inverted = categoriesInfo ? categoriesInfo.inverted : startValue > endValue;\n    minValue = categoriesInfo ? categoriesInfo.start : inverted ? endValue : startValue;\n    maxValue = categoriesInfo ? categoriesInfo.end : inverted ? startValue : endValue;\n  } else if (_isDefined(startValue) || _isDefined(endValue)) {\n    minValue = startValue;\n    maxValue = endValue;\n  } else if (categoriesInfo) {\n    minValue = categoriesInfo.start;\n    maxValue = categoriesInfo.end;\n  }\n\n  translatorRange.addRange({\n    invert: inverted,\n    min: minValue,\n    max: maxValue,\n    minVisible: minValue,\n    maxVisible: maxValue,\n    dataType: scaleOptions.valueType\n  });\n  translatorRange.addRange({\n    categories: !seriesDataSource ? categories : void 0,\n    base: scaleOptions.logarithmBase,\n    axisType: scaleOptions.type,\n    dataType: scaleOptions.valueType\n  });\n  seriesDataSource && translatorRange.sortCategories(categories);\n  return translatorRange;\n}\n\nfunction startEndNotDefined(start, end) {\n  return !_isDefined(start) || !_isDefined(end);\n}\n\nfunction getTextBBox(renderer, text, fontOptions) {\n  var textElement = renderer.text(text, INVISIBLE_POS, INVISIBLE_POS).css(patchFontOptions(fontOptions)).append(renderer.root);\n  var textBBox = textElement.getBBox();\n  textElement.remove();\n  return textBBox;\n}\n\nfunction getDateMarkerVisibilityChecker(screenDelta) {\n  return function (isDateScale, isMarkerVisible, min, max, tickInterval) {\n    if (isMarkerVisible && isDateScale) {\n      if (!_isDefined(tickInterval) || tickInterval.years || tickInterval.months >= 6 || screenDelta / SEMIDISCRETE_GRID_SPACING_FACTOR < _ceil((max - min) / dateUtils.dateToMilliseconds(\"year\")) + 1) {\n        isMarkerVisible = false;\n      }\n    }\n\n    return isMarkerVisible;\n  };\n}\n\nfunction updateScaleOptions(scaleOptions, seriesDataSource, translatorRange, tickIntervalsInfo, checkDateMarkerVisibility) {\n  var bounds;\n  var isEmptyInterval;\n  var categoriesInfo = scaleOptions._categoriesInfo;\n  var intervals;\n  var isDateTime = scaleOptions.valueType === DATETIME;\n\n  if (seriesDataSource && !seriesDataSource.isEmpty() && !translatorRange.isEmpty()) {\n    bounds = tickIntervalsInfo.bounds;\n    translatorRange.addRange(bounds);\n    scaleOptions.startValue = translatorRange.invert ? bounds.maxVisible : bounds.minVisible;\n    scaleOptions.endValue = translatorRange.invert ? bounds.minVisible : bounds.maxVisible;\n  }\n\n  scaleOptions.marker.visible = checkDateMarkerVisibility(isDateTime && -1 === scaleOptions.type.indexOf(DISCRETE), scaleOptions.marker.visible, scaleOptions.startValue, scaleOptions.endValue, tickIntervalsInfo.tickInterval);\n\n  if (categoriesInfo) {\n    scaleOptions.startValue = categoriesInfo.start;\n    scaleOptions.endValue = categoriesInfo.end;\n  }\n\n  if (-1 === scaleOptions.type.indexOf(DISCRETE)) {\n    isEmptyInterval = _isDate(scaleOptions.startValue) && _isDate(scaleOptions.endValue) && scaleOptions.startValue.getTime() === scaleOptions.endValue.getTime() || scaleOptions.startValue === scaleOptions.endValue;\n  }\n\n  scaleOptions.isEmpty = startEndNotDefined(scaleOptions.startValue, scaleOptions.endValue) || isEmptyInterval;\n\n  if (scaleOptions.isEmpty) {\n    scaleOptions.startValue = scaleOptions.endValue = void 0;\n  } else {\n    scaleOptions.minorTickInterval = tickIntervalsInfo.minorTickInterval;\n    scaleOptions.tickInterval = tickIntervalsInfo.tickInterval;\n\n    if (isDateTime && (!_isDefined(scaleOptions.label.format) || scaleOptions.type === SEMIDISCRETE && scaleOptions.minorTickInterval !== scaleOptions.tickInterval)) {\n      if (scaleOptions.type === DISCRETE) {\n        scaleOptions.label.format = formatHelper.getDateFormatByTicks(tickIntervalsInfo.ticks);\n      } else if (!scaleOptions.marker.visible) {\n        scaleOptions.label.format = formatHelper.getDateFormatByTickInterval(scaleOptions.startValue, scaleOptions.endValue, scaleOptions.tickInterval);\n      } else {\n        scaleOptions.label.format = dateUtils.getDateFormatByTickInterval(scaleOptions.tickInterval);\n      }\n    }\n  }\n\n  if (scaleOptions.type === SEMIDISCRETE) {\n    intervals = getIntervalCustomTicks(scaleOptions);\n    scaleOptions.customMinorTicks = intervals.altIntervals;\n    scaleOptions.customTicks = intervals.intervals;\n    scaleOptions.customBoundTicks = [scaleOptions.customTicks[0]];\n  }\n}\n\nfunction prepareScaleOptions(scaleOption, calculatedValueType, incidentOccurred, containerColor) {\n  var parsedValue = 0;\n  var valueType = correctValueType(_normalizeEnum(scaleOption.valueType));\n\n  var validateStartEndValues = function validateStartEndValues(field, parser) {\n    var messageToIncidentOccurred = field === START_VALUE ? \"start\" : \"end\";\n\n    if (_isDefined(scaleOption[field])) {\n      parsedValue = parser(scaleOption[field]);\n\n      if (_isDefined(parsedValue)) {\n        scaleOption[field] = parsedValue;\n      } else {\n        scaleOption[field] = void 0;\n        incidentOccurred(\"E2202\", [messageToIncidentOccurred]);\n      }\n    }\n  };\n\n  valueType = calculatedValueType || valueType;\n\n  if (!valueType) {\n    valueType = calculateValueType(scaleOption.startValue, scaleOption.endValue) || \"numeric\";\n  }\n\n  if (valueType === STRING || scaleOption.categories) {\n    scaleOption.type = DISCRETE;\n    valueType = STRING;\n  }\n\n  scaleOption.containerColor = containerColor;\n  scaleOption.valueType = valueType;\n  scaleOption.dataType = valueType;\n  var parser = getParser(valueType);\n  validateStartEndValues(START_VALUE, parser);\n  validateStartEndValues(END_VALUE, parser);\n  checkLogarithmicOptions(scaleOption, logarithmBase, incidentOccurred);\n\n  if (!scaleOption.type) {\n    scaleOption.type = \"continuous\";\n  }\n\n  scaleOption.parser = parser;\n\n  if (scaleOption.type === SEMIDISCRETE) {\n    scaleOption.minorTick.visible = false;\n    scaleOption.minorTickInterval = scaleOption.minRange;\n    scaleOption.marker.visible = false;\n    scaleOption.maxRange = void 0;\n  }\n\n  scaleOption.forceUserTickInterval |= _isDefined(scaleOption.tickInterval) && !_isDefined(scaleOption.axisDivisionFactor);\n  scaleOption.axisDivisionFactor = _isDefined(scaleOption.axisDivisionFactor) ? scaleOption.axisDivisionFactor : DEFAULT_AXIS_DIVISION_FACTOR;\n  scaleOption.minorAxisDivisionFactor = _isDefined(scaleOption.minorAxisDivisionFactor) ? scaleOption.minorAxisDivisionFactor : DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\n  return scaleOption;\n}\n\nfunction correctValueByInterval(value, isDate, interval, firstDayOfWeek) {\n  if (_isDefined(value)) {\n    value = isDate ? dateUtils.correctDateWithUnitBeginning(new Date(value), interval, null, firstDayOfWeek) : adjust(_floor(adjust(value / interval)) * interval);\n  }\n\n  return value;\n}\n\nfunction getIntervalCustomTicks(options) {\n  var min = options.startValue;\n  var max = options.endValue;\n  var isDate = \"datetime\" === options.valueType;\n  var firstDayOfWeek = getFirstDayOfWeek(options);\n  var tickInterval = options.tickInterval;\n  var res = {\n    intervals: []\n  };\n\n  if (!_isDefined(min) || !_isDefined(max)) {\n    return res;\n  }\n\n  res.intervals = dateUtils.getSequenceByInterval(min, max, options.minorTickInterval);\n\n  if (tickInterval !== options.minorTickInterval) {\n    res.altIntervals = res.intervals;\n    min = correctValueByInterval(min, isDate, tickInterval, firstDayOfWeek);\n    max = correctValueByInterval(max, isDate, tickInterval, firstDayOfWeek);\n    res.intervals = dateUtils.getSequenceByInterval(min, max, tickInterval);\n    res.intervals[0] = res.altIntervals[0];\n  }\n\n  return res;\n}\n\nfunction getPrecisionForSlider(startValue, endValue, screenDelta) {\n  var d = Math.abs(endValue - startValue) / screenDelta;\n\n  var tail = d - _floor(d);\n\n  return tail > 0 ? _ceil(Math.abs(adjust(getLog(tail, 10)))) : 0;\n}\n\nvar dxRangeSelector = baseWidgetModule.inherit({\n  _toggleParentsScrollSubscription: function _toggleParentsScrollSubscription() {},\n  _eventsMap: {\n    onValueChanged: {\n      name: VALUE_CHANGED\n    }\n  },\n  _rootClassPrefix: \"dxrs\",\n  _rootClass: \"dxrs-range-selector\",\n  _dataIsReady: function _dataIsReady() {\n    return this._dataIsLoaded();\n  },\n  _initialChanges: [\"DATA_SOURCE\", \"VALUE\"],\n  _themeDependentChanges: [\"MOSTLY_TOTAL\"],\n  _themeSection: \"rangeSelector\",\n  _fontFields: [\"scale.label.font\", \"sliderMarker.font\"],\n  _initCore: function _initCore() {\n    var that = this;\n    var renderer = that._renderer;\n    var root = renderer.root;\n    root.css({\n      \"touch-action\": \"pan-y\"\n    });\n    that._clipRect = renderer.clipRect();\n    var rangeViewGroup = renderer.g().attr({\n      class: \"dxrs-view\"\n    }).append(root);\n    var slidersGroup = renderer.g().attr({\n      class: \"dxrs-slidersContainer\",\n      \"clip-path\": that._clipRect.id\n    }).append(root);\n    var scaleGroup = renderer.g().attr({\n      class: \"dxrs-scale\",\n      \"clip-path\": that._clipRect.id\n    }).append(root);\n    var scaleBreaksGroup = renderer.g().attr({\n      class: \"dxrs-scale-breaks\"\n    }).append(root);\n    var trackersGroup = renderer.g().attr({\n      class: \"dxrs-trackers\"\n    }).append(root);\n    that._axis = new AxisWrapper({\n      renderer: renderer,\n      root: scaleGroup,\n      scaleBreaksGroup: scaleBreaksGroup,\n      updateSelectedRange: function updateSelectedRange(range, e) {\n        that.setValue(convertVisualRangeObject(range), e);\n      },\n      incidentOccurred: that._incidentOccurred\n    });\n    that._rangeView = new RangeView({\n      renderer: renderer,\n      root: rangeViewGroup,\n      translator: that._axis.getTranslator()\n    });\n    that._slidersController = new SlidersController({\n      renderer: renderer,\n      root: slidersGroup,\n      trackersGroup: trackersGroup,\n      updateSelectedRange: function updateSelectedRange(range, lastSelectedRange, e) {\n        if (!that._rangeOption) {\n          that.option(VALUE, convertVisualRangeObject(range, isPlainObject(that._options.silent(VALUE))));\n        }\n\n        that._eventTrigger(VALUE_CHANGED, {\n          value: convertVisualRangeObject(range),\n          previousValue: convertVisualRangeObject(lastSelectedRange),\n          event: e\n        });\n      },\n      axis: that._axis,\n      translator: that._axis.getTranslator()\n    });\n    that._tracker = new Tracker({\n      renderer: renderer,\n      controller: that._slidersController\n    });\n  },\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 400,\n      height: 160\n    };\n  },\n  _disposeCore: function _disposeCore() {\n    this._axis.dispose();\n\n    this._slidersController.dispose();\n\n    this._tracker.dispose();\n  },\n  _applySize: function _applySize(rect) {\n    this._clientRect = rect.slice();\n\n    this._change([\"MOSTLY_TOTAL\"]);\n  },\n  _optionChangesMap: {\n    scale: \"SCALE\",\n    value: \"VALUE\",\n    dataSource: \"DATA_SOURCE\"\n  },\n  _optionChangesOrder: [\"SCALE\", \"DATA_SOURCE\"],\n  _change_SCALE: function _change_SCALE() {\n    this._change([\"MOSTLY_TOTAL\"]);\n  },\n  _setValueByDataSource: function _setValueByDataSource() {\n    var options = this._options.silent();\n\n    var axis = this._axis;\n\n    if (options.dataSource) {\n      var selectedRangeUpdateMode = this.option(\"selectedRangeUpdateMode\");\n      var value = this.getValue();\n\n      var valueIsReady = _isDefined(value[0]) && _isDefined(value[1]);\n\n      if (_isDefined(selectedRangeUpdateMode)) {\n        selectedRangeUpdateMode = _normalizeEnum(selectedRangeUpdateMode);\n        this.__skipAnimation = true;\n      } else if (valueIsReady && !this._dataSourceIsAsync) {\n        selectedRangeUpdateMode = RESET;\n      }\n\n      if (\"auto\" === selectedRangeUpdateMode && valueIsReady) {\n        var rangesInfo = axis.allScaleSelected(value);\n\n        if (rangesInfo.startValue && rangesInfo.endValue) {\n          selectedRangeUpdateMode = RESET;\n        } else if (rangesInfo.endValue) {\n          selectedRangeUpdateMode = SHIFT;\n        } else {\n          selectedRangeUpdateMode = KEEP;\n        }\n      }\n\n      if (selectedRangeUpdateMode === RESET) {\n        options[VALUE] = null;\n      } else if (selectedRangeUpdateMode === SHIFT && valueIsReady) {\n        var _value = this.getValue();\n\n        this.__skipAnimation = true;\n        options[VALUE] = {\n          length: axis.getVisualRangeLength({\n            minVisible: _value[0],\n            maxVisible: _value[1]\n          })\n        };\n      } else if (selectedRangeUpdateMode === KEEP) {\n        this.__skipAnimation = true;\n      }\n    }\n\n    this._dataSourceIsAsync = void 0;\n  },\n  _change_DATA_SOURCE: function _change_DATA_SOURCE() {\n    if (this._options.silent(\"dataSource\")) {\n      this._updateDataSource();\n    }\n  },\n  _customChangesOrder: [\"MOSTLY_TOTAL\", \"VALUE\", \"SLIDER_SELECTION\"],\n  _change_MOSTLY_TOTAL: function _change_MOSTLY_TOTAL() {\n    this._applyMostlyTotalChange();\n  },\n  _change_SLIDER_SELECTION: function _change_SLIDER_SELECTION() {\n    var value = this._options.silent(VALUE);\n\n    this._slidersController.setSelectedRange(value && parseValue(value));\n  },\n  _change_VALUE: function _change_VALUE() {\n    var option = this._rangeOption;\n    this._dataSourceIsAsync = !this._dataIsReady();\n\n    if (option) {\n      this._options.silent(VALUE, option);\n\n      this.setValue(option);\n    }\n  },\n  _validateRange: function _validateRange(start, end) {\n    var translator = this._axis.getTranslator();\n\n    if (_isDefined(start) && !translator.isValid(start) || _isDefined(end) && !translator.isValid(end)) {\n      this._incidentOccurred(\"E2203\");\n    }\n  },\n  _applyChanges: function _applyChanges() {\n    var that = this;\n\n    var value = that._options.silent(VALUE);\n\n    if (that._changes.has(\"VALUE\") && value) {\n      that._rangeOption = value;\n    }\n\n    that.callBase.apply(that, arguments);\n    that._rangeOption = null;\n    that.__isResizing = that.__skipAnimation = false;\n  },\n  _applyMostlyTotalChange: function _applyMostlyTotalChange() {\n    var renderer = this._renderer;\n    var rect = this._clientRect;\n    var currentAnimationEnabled;\n    var canvas = {\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    };\n\n    if (this.__isResizing || this.__skipAnimation) {\n      currentAnimationEnabled = renderer.animationEnabled();\n      renderer.updateAnimationOptions({\n        enabled: false\n      });\n    }\n\n    this._clipRect.attr({\n      x: rect[0],\n      y: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    });\n\n    this._axis.getTranslator().update(new Range(), canvas, {\n      isHorizontal: true\n    });\n\n    this._updateContent({\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    });\n\n    if (this.__isResizing || this.__skipAnimation) {\n      renderer.updateAnimationOptions({\n        enabled: currentAnimationEnabled\n      });\n    }\n\n    this._drawn();\n  },\n  _dataSourceChangedHandler: function _dataSourceChangedHandler() {\n    this._setValueByDataSource();\n\n    this._requestChange([\"MOSTLY_TOTAL\"]);\n  },\n  _completeSeriesDataSourceCreation: function _completeSeriesDataSourceCreation(scaleOptions, seriesDataSource) {\n    var rect = this._clientRect;\n    var canvas = {\n      left: rect[0],\n      top: rect[1],\n      width: rect[2] - rect[0],\n      height: rect[3] - rect[1]\n    };\n\n    this._axis.updateOptions(extend({}, scaleOptions, {\n      isHorizontal: true,\n      label: {}\n    }));\n\n    seriesDataSource.isShowChart() && this._axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\n\n    this._axis.updateCanvas(canvas);\n\n    seriesDataSource.createPoints();\n  },\n  _updateContent: function _updateContent(canvas) {\n    var chartOptions = this.option(\"chart\");\n\n    var seriesDataSource = this._createSeriesDataSource(chartOptions);\n\n    var isCompactMode = !(seriesDataSource && seriesDataSource.isShowChart() || this.option(\"background.image.url\"));\n    var scaleOptions = prepareScaleOptions(this._getOption(\"scale\"), seriesDataSource && seriesDataSource.getCalculatedValueType(), this._incidentOccurred, this._getOption(\"containerBackgroundColor\", true));\n    seriesDataSource && this._completeSeriesDataSourceCreation(scaleOptions, seriesDataSource);\n    var argTranslatorRange = calculateTranslatorRange(seriesDataSource, scaleOptions);\n    var tickIntervalsInfo = updateTickIntervals(scaleOptions, canvas.width, this._incidentOccurred, argTranslatorRange);\n    var chartThemeManager = seriesDataSource && seriesDataSource.isShowChart() && seriesDataSource.getThemeManager();\n\n    if (chartThemeManager) {\n      checkLogarithmicOptions(chartOptions && chartOptions.valueAxis, chartThemeManager.getOptions(\"valueAxis\").logarithmBase, this._incidentOccurred);\n    }\n\n    updateScaleOptions(scaleOptions, seriesDataSource, argTranslatorRange, tickIntervalsInfo, getDateMarkerVisibilityChecker(canvas.width));\n    updateTranslatorRangeInterval(argTranslatorRange, scaleOptions);\n\n    var sliderMarkerOptions = this._prepareSliderMarkersOptions(scaleOptions, canvas.width, tickIntervalsInfo, argTranslatorRange);\n\n    var indents = calculateIndents(this._renderer, scaleOptions, sliderMarkerOptions, this.option(\"indent\"), tickIntervalsInfo);\n    var rangeContainerCanvas = {\n      left: canvas.left + indents.left,\n      top: canvas.top + indents.top,\n      width: canvas.left + indents.left + _max(canvas.width - indents.left - indents.right, 1),\n      height: _max(!isCompactMode ? canvas.height - indents.top - indents.bottom - calculateScaleAreaHeight(this._renderer, scaleOptions, showScaleMarkers(scaleOptions), tickIntervalsInfo) : HEIGHT_COMPACT_MODE, 0),\n      right: 0,\n      bottom: 0\n    };\n\n    this._axis.update(scaleOptions, isCompactMode, rangeContainerCanvas, argTranslatorRange, seriesDataSource);\n\n    scaleOptions.minorTickInterval = scaleOptions.isEmpty ? 0 : scaleOptions.minorTickInterval;\n\n    this._updateElements(scaleOptions, sliderMarkerOptions, isCompactMode, rangeContainerCanvas, seriesDataSource);\n\n    if (chartThemeManager) {\n      chartThemeManager.dispose();\n    }\n  },\n  _updateElements: function _updateElements(scaleOptions, sliderMarkerOptions, isCompactMode, canvas, seriesDataSource) {\n    var behavior = this._getOption(\"behavior\");\n\n    var shutterOptions = this._getOption(\"shutter\");\n\n    var isNotSemiDiscrete = scaleOptions.type !== SEMIDISCRETE;\n    shutterOptions.color = shutterOptions.color || this._getOption(CONTAINER_BACKGROUND_COLOR, true);\n\n    this._rangeView.update(this.option(\"background\"), this._themeManager.theme(\"background\"), canvas, isCompactMode, behavior.animationEnabled && this._renderer.animationEnabled(), seriesDataSource);\n\n    this._isUpdating = true;\n\n    this._slidersController.update([canvas.top, canvas.top + canvas.height], behavior, isCompactMode, this._getOption(\"sliderHandle\"), sliderMarkerOptions, shutterOptions, {\n      minRange: isNotSemiDiscrete ? this.option(\"scale.minRange\") : void 0,\n      maxRange: isNotSemiDiscrete ? this.option(\"scale.maxRange\") : void 0\n    }, this._axis.getFullTicks(), this._getOption(\"selectedRangeColor\", true));\n\n    this._requestChange([\"SLIDER_SELECTION\"]);\n\n    this._isUpdating = false;\n\n    this._tracker.update(!this._axis.getTranslator().getBusinessRange().isEmpty(), behavior);\n  },\n  _createSeriesDataSource: function _createSeriesDataSource(chartOptions) {\n    var seriesDataSource;\n\n    var dataSource = this._dataSourceItems();\n\n    var scaleOptions = this._getOption(\"scale\");\n\n    var valueType = scaleOptions.valueType || calculateValueType(scaleOptions.startValue, scaleOptions.endValue);\n    var valueAxis = new Axis({\n      renderer: this._renderer,\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    });\n    valueAxis.updateOptions({\n      isHorizontal: false,\n      label: {},\n      categoriesSortingMethod: this._getOption(\"chart\").valueAxis.categoriesSortingMethod\n    });\n\n    if (dataSource || chartOptions && chartOptions.series) {\n      chartOptions = extend({}, chartOptions, {\n        theme: this.option(\"theme\")\n      });\n      seriesDataSource = new SeriesDataSource({\n        renderer: this._renderer,\n        dataSource: dataSource,\n        valueType: _normalizeEnum(valueType),\n        axisType: scaleOptions.type,\n        chart: chartOptions,\n        dataSourceField: this.option(\"dataSourceField\"),\n        incidentOccurred: this._incidentOccurred,\n        categories: scaleOptions.categories,\n        argumentAxis: this._axis,\n        valueAxis: valueAxis\n      });\n    }\n\n    return seriesDataSource;\n  },\n  _prepareSliderMarkersOptions: function _prepareSliderMarkersOptions(scaleOptions, screenDelta, tickIntervalsInfo, argRange) {\n    var minorTickInterval = tickIntervalsInfo.minorTickInterval;\n    var tickInterval = tickIntervalsInfo.tickInterval;\n    var interval = tickInterval;\n    var endValue = scaleOptions.endValue;\n    var startValue = scaleOptions.startValue;\n\n    var sliderMarkerOptions = this._getOption(SLIDER_MARKER);\n\n    var doNotSnap = !this._getOption(\"behavior\").snapToTicks;\n    var isTypeDiscrete = scaleOptions.type === DISCRETE;\n    var isValueTypeDatetime = scaleOptions.valueType === DATETIME;\n    sliderMarkerOptions.borderColor = this._getOption(CONTAINER_BACKGROUND_COLOR, true);\n\n    if (!sliderMarkerOptions.format && !argRange.isEmpty()) {\n      if (doNotSnap && _isNumber(scaleOptions.startValue)) {\n        sliderMarkerOptions.format = {\n          type: \"fixedPoint\",\n          precision: getPrecisionForSlider(startValue, endValue, screenDelta)\n        };\n      }\n\n      if (isValueTypeDatetime && !isTypeDiscrete) {\n        if (_isDefined(minorTickInterval) && 0 !== minorTickInterval) {\n          interval = getMinorTickIntervalUnit(tickInterval, minorTickInterval, doNotSnap);\n        }\n\n        if (!scaleOptions.marker.visible) {\n          if (_isDefined(startValue) && _isDefined(endValue)) {\n            sliderMarkerOptions.format = formatHelper.getDateFormatByTickInterval(startValue, endValue, interval);\n          }\n        } else {\n          sliderMarkerOptions.format = dateUtils.getDateFormatByTickInterval(interval);\n        }\n      }\n\n      if (isValueTypeDatetime && isTypeDiscrete && tickIntervalsInfo.ticks.length) {\n        sliderMarkerOptions.format = formatHelper.getDateFormatByTicks(tickIntervalsInfo.ticks);\n      }\n    }\n\n    return sliderMarkerOptions;\n  },\n  getValue: function getValue() {\n    return convertVisualRangeObject(this._slidersController.getSelectedRange());\n  },\n  setValue: function setValue(value, e) {\n    var visualRange = parseValue(value);\n\n    if (!this._isUpdating && value) {\n      this._validateRange(visualRange.startValue, visualRange.endValue);\n\n      !rangesAreEqual(visualRange, this._slidersController.getSelectedRange()) && this._slidersController.setSelectedRange(visualRange, e);\n    }\n  },\n  _setContentSize: function _setContentSize() {\n    this.__isResizing = 2 === this._changes.count();\n    this.callBase.apply(this, arguments);\n  }\n});\neach([\"selectedRangeColor\", \"containerBackgroundColor\", \"sliderMarker\", \"sliderHandle\", \"shutter\", OPTION_BACKGROUND, \"behavior\", \"chart\", \"indent\"], function (_, name) {\n  dxRangeSelector.prototype._optionChangesMap[name] = \"MOSTLY_TOTAL\";\n});\n\nfunction prepareAxisOptions(scaleOptions, isCompactMode, height, axisPosition) {\n  scaleOptions.marker.label.font = scaleOptions.label.font;\n  scaleOptions.color = scaleOptions.marker.color = scaleOptions.tick.color;\n  scaleOptions.opacity = scaleOptions.marker.opacity = scaleOptions.tick.opacity;\n  scaleOptions.width = scaleOptions.marker.width = scaleOptions.tick.width;\n  scaleOptions.placeholderSize = (scaleOptions.placeholderHeight || 0) + axisPosition;\n  scaleOptions.argumentType = scaleOptions.valueType;\n  scaleOptions.visible = isCompactMode;\n  scaleOptions.isHorizontal = true;\n  scaleOptions.calculateMinors = true;\n  scaleOptions.semiDiscreteInterval = scaleOptions.minRange;\n\n  if (!isCompactMode) {\n    scaleOptions.minorTick.length = scaleOptions.tick.length = height;\n  }\n\n  scaleOptions.label.indentFromAxis = scaleOptions.label.topIndent + axisPosition;\n  return scaleOptions;\n}\n\nfunction createDateMarkersEvent(scaleOptions, markerTrackers, setSelectedRange) {\n  each(markerTrackers, function (_, value) {\n    value.on(\"dxpointerdown\", onPointerDown);\n  });\n\n  function onPointerDown(e) {\n    var range = e.target.range;\n    var minRange = scaleOptions.minRange ? dateUtils.addInterval(range.startValue, scaleOptions.minRange) : void 0;\n    var maxRange = scaleOptions.maxRange ? dateUtils.addInterval(range.startValue, scaleOptions.maxRange) : void 0;\n\n    if (!(minRange && minRange > range.endValue || maxRange && maxRange < range.endValue)) {\n      setSelectedRange(range, e);\n    }\n  }\n}\n\nfunction getShiftDirection() {\n  return 1;\n}\n\nfunction getTickStartPositionShift(length) {\n  return length % 2 === 1 ? -_floor(length / 2) : -length / 2;\n}\n\nfunction AxisWrapper(params) {\n  this._axis = new Axis({\n    renderer: params.renderer,\n    axesContainerGroup: params.root,\n    scaleBreaksGroup: params.scaleBreaksGroup,\n    incidentOccurred: params.incidentOccurred,\n    axisType: \"xyAxes\",\n    drawingType: \"linear\",\n    widgetClass: \"dxrs\",\n    axisClass: \"range-selector\",\n    isArgumentAxis: true,\n    getTemplate: function getTemplate() {}\n  });\n  this._updateSelectedRangeCallback = params.updateSelectedRange;\n  this._axis.getAxisSharpDirection = this._axis.getSharpDirectionByCoords = getShiftDirection;\n  this._axis.getTickStartPositionShift = getTickStartPositionShift;\n}\n\nAxisWrapper.prototype = {\n  constructor: AxisWrapper,\n  dispose: function dispose() {\n    this._axis.dispose();\n  },\n  calculateInterval: function calculateInterval(value, prevValue) {\n    return this._axis.calculateInterval(value, prevValue);\n  },\n  update: function update(options, isCompactMode, canvas, businessRange, seriesDataSource) {\n    var axis = this._axis;\n    axis.updateOptions(prepareAxisOptions(options, isCompactMode, canvas.height, canvas.height / 2 - _ceil(options.width / 2)));\n    axis.validate();\n    axis.setBusinessRange(businessRange, true);\n\n    if (void 0 !== seriesDataSource && seriesDataSource.isShowChart()) {\n      axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\n    }\n\n    axis.draw(canvas);\n    axis.shift({\n      left: 0,\n      bottom: -canvas.height / 2 + canvas.top\n    });\n\n    if (axis.getMarkerTrackers()) {\n      createDateMarkersEvent(options, axis.getMarkerTrackers(), this._updateSelectedRangeCallback);\n    }\n\n    axis.drawScaleBreaks({\n      start: canvas.top,\n      end: canvas.top + canvas.height\n    });\n  },\n  visualRange: function visualRange() {},\n  getViewport: function getViewport() {\n    return {};\n  },\n  allScaleSelected: function allScaleSelected(value) {\n    var _this$_axis$visualRan = this._axis.visualRange(),\n        startValue = _this$_axis$visualRan.startValue,\n        endValue = _this$_axis$visualRan.endValue;\n\n    return {\n      startValue: value[0].valueOf() === startValue.valueOf(),\n      endValue: value[1].valueOf() === endValue.valueOf()\n    };\n  },\n  getOptions: function getOptions() {\n    return this._axis.getOptions() || {};\n  }\n};\n[\"setMarginOptions\", \"getFullTicks\", \"updateCanvas\", \"updateOptions\", \"getAggregationInfo\", \"getTranslator\", \"getVisualRangeLength\", \"getVisibleArea\", \"getMarginOptions\", \"getVisualRangeCenter\"].forEach(function (methodName) {\n  AxisWrapper.prototype[methodName] = function () {\n    var axis = this._axis;\n    return axis[methodName].apply(axis, arguments);\n  };\n});\nregisterComponent(\"dxRangeSelector\", dxRangeSelector);\nexport default dxRangeSelector;\nimport { plugin as exportPlugin } from \"../core/export\";\nimport { plugin as titlePlugin } from \"../core/title\";\nimport { plugin as LoadingIndicatorPlugin } from \"../core/loading_indicator\";\nimport { plugin as dataSourcePlugin } from \"../core/data_source\";\ndxRangeSelector.addPlugin(exportPlugin);\ndxRangeSelector.addPlugin(titlePlugin);\ndxRangeSelector.addPlugin(LoadingIndicatorPlugin);\ndxRangeSelector.addPlugin(dataSourcePlugin);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/range_selector/range_selector.js"],"names":["registerComponent","isDefined","_isDefined","isNumeric","_isNumber","isDate","_isDate","type","_type","isPlainObject","extend","each","patchFontOptions","normalizeEnum","_normalizeEnum","getVizRangeObject","parseValue","convertVisualRangeObject","getCategoriesInfo","getLog","rangesAreEqual","dateUtils","adjust","Range","Axis","correctValueType","getParser","formatHelper","consts","formatValue","HEIGHT_COMPACT_MODE","SlidersController","Tracker","RangeView","SeriesDataSource","tickGenerator","baseWidgetModule","_max","Math","max","_ceil","ceil","_floor","floor","START_VALUE","END_VALUE","DATETIME","VALUE","DISCRETE","SEMIDISCRETE","STRING","VALUE_CHANGED","CONTAINER_BACKGROUND_COLOR","SLIDER_MARKER","OPTION_BACKGROUND","LOGARITHMIC","KEEP","SHIFT","RESET","INVISIBLE_POS","SEMIDISCRETE_GRID_SPACING_FACTOR","DEFAULT_AXIS_DIVISION_FACTOR","DEFAULT_MINOR_AXIS_DIVISION_FACTOR","logarithmBase","calculateMarkerHeight","renderer","value","sliderMarkerOptions","formattedText","emptySliderMarkerText","textBBox","getTextBBox","font","height","paddingTopBottom","pointerSize","calculateScaleLabelHalfWidth","scaleOptions","tickIntervalsInfo","label","valueType","width","calculateIndents","scale","indentOptions","leftMarkerHeight","leftScaleLabelWidth","rightScaleLabelWidth","rightMarkerHeight","placeholderWidthLeft","placeholderWidthRight","placeholderHeight","ticks","customTicks","startTickValue","endTickValue","left","right","visible","startValue","endValue","length","top","bottom","calculateValueType","firstValue","secondValue","typeFirstValue","typeSecondValue","validType","showScaleMarkers","marker","updateTranslatorRangeInterval","translatorRange","intervalX","minorTickInterval","tickInterval","dateToMilliseconds","addRange","interval","checkLogarithmicOptions","options","defaultLogarithmBase","incidentOccurred","calculateScaleAreaHeight","visibleMarkers","labelScaleOptions","markerScaleOptions","text","topIndent","separatorHeight","getMinorTickIntervalUnit","withCorrection","getDateUnitInterval","majorUnit","idx","dateUnitIntervals","indexOf","getNextTickInterval","isDateType","getNextDateUnit","calculateTickIntervalsForSemidiscreteScale","min","screenDelta","gridSpacingFactor","axisDivisionFactor","tickCountByInterval","tickCountByScreen","bounds","minVisible","maxVisible","updateTickIntervals","range","result","categoriesInfo","_categoriesInfo","ticksInfo","axisType","dataType","logBase","allowNegatives","linearThreshold","abs","minorAxisDivisionFactor","calculateMinors","allowDecimals","endOnTick","rangeIsEmpty","isEmpty","categories","forceUserTickInterval","minorTickCount","getFirstDayOfWeek","_options$workWeek","workWeek","calculateTranslatorRange","seriesDataSource","minValue","maxValue","inverted","getBoundRange","arg","rangeForCategories","firstDayOfWeek","minRange","argCategories","correctValueByInterval","start","end","invert","base","sortCategories","startEndNotDefined","fontOptions","textElement","css","append","root","getBBox","remove","getDateMarkerVisibilityChecker","isDateScale","isMarkerVisible","years","months","updateScaleOptions","checkDateMarkerVisibility","isEmptyInterval","intervals","isDateTime","getTime","format","getDateFormatByTicks","getDateFormatByTickInterval","getIntervalCustomTicks","customMinorTicks","altIntervals","customBoundTicks","prepareScaleOptions","scaleOption","calculatedValueType","containerColor","parsedValue","validateStartEndValues","field","parser","messageToIncidentOccurred","minorTick","maxRange","correctDateWithUnitBeginning","Date","res","getSequenceByInterval","getPrecisionForSlider","d","tail","dxRangeSelector","inherit","_toggleParentsScrollSubscription","_eventsMap","onValueChanged","name","_rootClassPrefix","_rootClass","_dataIsReady","_dataIsLoaded","_initialChanges","_themeDependentChanges","_themeSection","_fontFields","_initCore","that","_renderer","_clipRect","clipRect","rangeViewGroup","g","attr","class","slidersGroup","id","scaleGroup","scaleBreaksGroup","trackersGroup","_axis","AxisWrapper","updateSelectedRange","e","setValue","_incidentOccurred","_rangeView","translator","getTranslator","_slidersController","lastSelectedRange","_rangeOption","option","_options","silent","_eventTrigger","previousValue","event","axis","_tracker","controller","_getDefaultSize","_disposeCore","dispose","_applySize","rect","_clientRect","slice","_change","_optionChangesMap","dataSource","_optionChangesOrder","_change_SCALE","_setValueByDataSource","selectedRangeUpdateMode","getValue","valueIsReady","__skipAnimation","_dataSourceIsAsync","rangesInfo","allScaleSelected","_value","getVisualRangeLength","_change_DATA_SOURCE","_updateDataSource","_customChangesOrder","_change_MOSTLY_TOTAL","_applyMostlyTotalChange","_change_SLIDER_SELECTION","setSelectedRange","_change_VALUE","_validateRange","isValid","_applyChanges","_changes","has","callBase","apply","arguments","__isResizing","currentAnimationEnabled","canvas","animationEnabled","updateAnimationOptions","enabled","x","y","update","isHorizontal","_updateContent","_drawn","_dataSourceChangedHandler","_requestChange","_completeSeriesDataSourceCreation","updateOptions","isShowChart","setMarginOptions","getMarginOptions","updateCanvas","createPoints","chartOptions","_createSeriesDataSource","isCompactMode","_getOption","getCalculatedValueType","argTranslatorRange","chartThemeManager","getThemeManager","valueAxis","getOptions","_prepareSliderMarkersOptions","indents","rangeContainerCanvas","_updateElements","behavior","shutterOptions","isNotSemiDiscrete","color","_themeManager","theme","_isUpdating","getFullTicks","getBusinessRange","_dataSourceItems","drawingType","categoriesSortingMethod","series","chart","dataSourceField","argumentAxis","argRange","doNotSnap","snapToTicks","isTypeDiscrete","isValueTypeDatetime","borderColor","precision","getSelectedRange","visualRange","_setContentSize","count","_","prototype","prepareAxisOptions","axisPosition","tick","opacity","placeholderSize","argumentType","semiDiscreteInterval","indentFromAxis","createDateMarkersEvent","markerTrackers","on","onPointerDown","target","addInterval","getShiftDirection","getTickStartPositionShift","params","axesContainerGroup","widgetClass","axisClass","isArgumentAxis","getTemplate","_updateSelectedRangeCallback","getAxisSharpDirection","getSharpDirectionByCoords","constructor","calculateInterval","prevValue","businessRange","validate","setBusinessRange","draw","shift","getMarkerTrackers","drawScaleBreaks","getViewport","valueOf","forEach","methodName","plugin","exportPlugin","titlePlugin","LoadingIndicatorPlugin","dataSourcePlugin","addPlugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/range_selector/range_selector.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    isDefined as _isDefined,\r\n    isNumeric as _isNumber,\r\n    isDate as _isDate,\r\n    type as _type,\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    patchFontOptions,\r\n    normalizeEnum as _normalizeEnum,\r\n    getVizRangeObject as parseValue,\r\n    convertVisualRangeObject,\r\n    getCategoriesInfo,\r\n    getLog,\r\n    rangesAreEqual\r\n} from \"../core/utils\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    adjust\r\n} from \"../../core/utils/math\";\r\nimport {\r\n    Range\r\n} from \"../translators/range\";\r\nimport {\r\n    Axis\r\n} from \"../axes/base_axis\";\r\nimport {\r\n    correctValueType,\r\n    getParser\r\n} from \"../components/parse_utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    consts,\r\n    formatValue,\r\n    HEIGHT_COMPACT_MODE\r\n} from \"./common\";\r\nimport {\r\n    SlidersController\r\n} from \"./sliders_controller\";\r\nimport {\r\n    Tracker\r\n} from \"./tracker\";\r\nimport {\r\n    RangeView\r\n} from \"./range_view\";\r\nimport {\r\n    SeriesDataSource\r\n} from \"./series_data_source\";\r\nimport {\r\n    tickGenerator\r\n} from \"../axes/tick_generator\";\r\nimport baseWidgetModule from \"../core/base_widget\";\r\nvar _max = Math.max;\r\nvar _ceil = Math.ceil;\r\nvar _floor = Math.floor;\r\nvar START_VALUE = \"startValue\";\r\nvar END_VALUE = \"endValue\";\r\nvar DATETIME = \"datetime\";\r\nvar VALUE = \"value\";\r\nvar DISCRETE = \"discrete\";\r\nvar SEMIDISCRETE = \"semidiscrete\";\r\nvar STRING = \"string\";\r\nvar VALUE_CHANGED = VALUE + \"Changed\";\r\nvar CONTAINER_BACKGROUND_COLOR = \"containerBackgroundColor\";\r\nvar SLIDER_MARKER = \"sliderMarker\";\r\nvar OPTION_BACKGROUND = \"background\";\r\nvar LOGARITHMIC = \"logarithmic\";\r\nvar KEEP = \"keep\";\r\nvar SHIFT = \"shift\";\r\nvar RESET = \"reset\";\r\nvar INVISIBLE_POS = -1e3;\r\nvar SEMIDISCRETE_GRID_SPACING_FACTOR = 50;\r\nvar DEFAULT_AXIS_DIVISION_FACTOR = 30;\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\r\nvar logarithmBase = 10;\r\n\r\nfunction calculateMarkerHeight(renderer, value, sliderMarkerOptions) {\r\n    var formattedText = void 0 === value ? consts.emptySliderMarkerText : formatValue(value, sliderMarkerOptions);\r\n    var textBBox = getTextBBox(renderer, formattedText, sliderMarkerOptions.font);\r\n    return _ceil(textBBox.height) + 2 * sliderMarkerOptions.paddingTopBottom + consts.pointerSize\r\n}\r\n\r\nfunction calculateScaleLabelHalfWidth(renderer, value, scaleOptions, tickIntervalsInfo) {\r\n    var formattedText = formatValue(value, scaleOptions.label, tickIntervalsInfo, scaleOptions.valueType, scaleOptions.type, scaleOptions.logarithmBase);\r\n    var textBBox = getTextBBox(renderer, formattedText, scaleOptions.label.font);\r\n    return _ceil(textBBox.width / 2)\r\n}\r\n\r\nfunction calculateIndents(renderer, scale, sliderMarkerOptions, indentOptions, tickIntervalsInfo) {\r\n    var leftMarkerHeight;\r\n    var leftScaleLabelWidth = 0;\r\n    var rightScaleLabelWidth = 0;\r\n    var rightMarkerHeight;\r\n    var placeholderWidthLeft;\r\n    var placeholderWidthRight;\r\n    var placeholderHeight;\r\n    var ticks = \"semidiscrete\" === scale.type ? scale.customTicks : tickIntervalsInfo.ticks;\r\n    var startTickValue;\r\n    var endTickValue;\r\n    indentOptions = indentOptions || {};\r\n    placeholderWidthLeft = indentOptions.left;\r\n    placeholderWidthRight = indentOptions.right;\r\n    placeholderHeight = sliderMarkerOptions.placeholderHeight;\r\n    if (sliderMarkerOptions.visible) {\r\n        leftMarkerHeight = calculateMarkerHeight(renderer, scale.startValue, sliderMarkerOptions);\r\n        rightMarkerHeight = calculateMarkerHeight(renderer, scale.endValue, sliderMarkerOptions);\r\n        if (void 0 === placeholderHeight) {\r\n            placeholderHeight = _max(leftMarkerHeight, rightMarkerHeight)\r\n        }\r\n    }\r\n    if (scale.label.visible) {\r\n        startTickValue = _isDefined(scale.startValue) ? ticks[0] : void 0;\r\n        endTickValue = _isDefined(scale.endValue) ? ticks[ticks.length - 1] : void 0;\r\n        leftScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, startTickValue, scale, tickIntervalsInfo);\r\n        rightScaleLabelWidth = calculateScaleLabelHalfWidth(renderer, endTickValue, scale, tickIntervalsInfo)\r\n    }\r\n    placeholderWidthLeft = void 0 !== placeholderWidthLeft ? placeholderWidthLeft : leftScaleLabelWidth;\r\n    placeholderWidthRight = (void 0 !== placeholderWidthRight ? placeholderWidthRight : rightScaleLabelWidth) || 1;\r\n    return {\r\n        left: placeholderWidthLeft,\r\n        right: placeholderWidthRight,\r\n        top: placeholderHeight || 0,\r\n        bottom: 0\r\n    }\r\n}\r\n\r\nfunction calculateValueType(firstValue, secondValue) {\r\n    var typeFirstValue = _type(firstValue);\r\n    var typeSecondValue = _type(secondValue);\r\n    var validType = function(type) {\r\n        return typeFirstValue === type || typeSecondValue === type\r\n    };\r\n    return validType(\"date\") ? DATETIME : validType(\"number\") ? \"numeric\" : validType(STRING) ? STRING : \"\"\r\n}\r\n\r\nfunction showScaleMarkers(scaleOptions) {\r\n    return scaleOptions.valueType === DATETIME && scaleOptions.marker.visible\r\n}\r\n\r\nfunction updateTranslatorRangeInterval(translatorRange, scaleOptions) {\r\n    var intervalX = scaleOptions.minorTickInterval || scaleOptions.tickInterval;\r\n    if (\"datetime\" === scaleOptions.valueType) {\r\n        intervalX = dateUtils.dateToMilliseconds(intervalX)\r\n    }\r\n    translatorRange.addRange({\r\n        interval: intervalX\r\n    })\r\n}\r\n\r\nfunction checkLogarithmicOptions(options, defaultLogarithmBase, incidentOccurred) {\r\n    if (!options) {\r\n        return\r\n    }\r\n    var logarithmBase = options.logarithmBase;\r\n    if (options.type === LOGARITHMIC && logarithmBase <= 0 || logarithmBase && !_isNumber(logarithmBase)) {\r\n        options.logarithmBase = defaultLogarithmBase;\r\n        incidentOccurred(\"E2104\")\r\n    } else if (options.type !== LOGARITHMIC) {\r\n        options.logarithmBase = void 0\r\n    }\r\n}\r\n\r\nfunction calculateScaleAreaHeight(renderer, scaleOptions, visibleMarkers, tickIntervalsInfo) {\r\n    var labelScaleOptions = scaleOptions.label;\r\n    var markerScaleOptions = scaleOptions.marker;\r\n    var placeholderHeight = scaleOptions.placeholderHeight;\r\n    var ticks = \"semidiscrete\" === scaleOptions.type ? scaleOptions.customTicks : tickIntervalsInfo.ticks;\r\n    var text = formatValue(ticks[0], labelScaleOptions);\r\n    if (placeholderHeight) {\r\n        return placeholderHeight\r\n    } else {\r\n        return (labelScaleOptions.visible ? labelScaleOptions.topIndent + getTextBBox(renderer, text, labelScaleOptions.font).height : 0) + (visibleMarkers ? markerScaleOptions.topIndent + markerScaleOptions.separatorHeight : 0)\r\n    }\r\n}\r\n\r\nfunction getMinorTickIntervalUnit(tickInterval, minorTickInterval, withCorrection) {\r\n    var interval = dateUtils.getDateUnitInterval(minorTickInterval);\r\n    var majorUnit = dateUtils.getDateUnitInterval(tickInterval);\r\n    var idx = dateUtils.dateUnitIntervals.indexOf(interval);\r\n    if (withCorrection && interval === majorUnit && idx > 0) {\r\n        interval = dateUtils.dateUnitIntervals[idx - 1]\r\n    }\r\n    return interval\r\n}\r\n\r\nfunction getNextTickInterval(tickInterval, minorTickInterval, isDateType) {\r\n    if (!tickInterval) {\r\n        tickInterval = minorTickInterval\r\n    } else if (isDateType) {\r\n        tickInterval = dateUtils.getNextDateUnit(tickInterval)\r\n    } else {\r\n        tickInterval += minorTickInterval\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta) {\r\n    var minorTickInterval = scaleOptions.minorTickInterval;\r\n    var tickInterval = scaleOptions.tickInterval;\r\n    var interval;\r\n    var isDateType = \"datetime\" === scaleOptions.valueType;\r\n    var gridSpacingFactor = scaleOptions.axisDivisionFactor || {};\r\n    var tickCountByInterval;\r\n    var tickCountByScreen;\r\n    if (!tickInterval) {\r\n        do {\r\n            interval = getNextTickInterval(tickInterval, minorTickInterval, isDateType);\r\n            if (tickInterval !== interval) {\r\n                tickInterval = interval\r\n            } else {\r\n                break\r\n            }\r\n            if (isDateType) {\r\n                interval = dateUtils.dateToMilliseconds(tickInterval)\r\n            }\r\n            tickCountByInterval = _ceil((max - min) / interval);\r\n            tickCountByScreen = _floor(screenDelta / (gridSpacingFactor[tickInterval] || SEMIDISCRETE_GRID_SPACING_FACTOR)) || 1\r\n        } while (interval && tickCountByInterval > tickCountByScreen)\r\n    }\r\n    return {\r\n        tickInterval: tickInterval,\r\n        minorTickInterval: minorTickInterval,\r\n        bounds: {\r\n            minVisible: min,\r\n            maxVisible: max\r\n        },\r\n        ticks: []\r\n    }\r\n}\r\n\r\nfunction updateTickIntervals(scaleOptions, screenDelta, incidentOccurred, range) {\r\n    var result;\r\n    var min = _isDefined(range.minVisible) ? range.minVisible : range.min;\r\n    var max = _isDefined(range.maxVisible) ? range.maxVisible : range.max;\r\n    var categoriesInfo = scaleOptions._categoriesInfo;\r\n    var ticksInfo;\r\n    var length;\r\n    var bounds = {};\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        result = calculateTickIntervalsForSemidiscreteScale(scaleOptions, min, max, screenDelta)\r\n    } else {\r\n        ticksInfo = tickGenerator({\r\n            axisType: scaleOptions.type,\r\n            dataType: scaleOptions.valueType,\r\n            logBase: scaleOptions.logarithmBase,\r\n            allowNegatives: true,\r\n            linearThreshold: Math.abs(scaleOptions.linearThreshold || 0),\r\n            axisDivisionFactor: scaleOptions.axisDivisionFactor,\r\n            minorAxisDivisionFactor: scaleOptions.minorAxisDivisionFactor,\r\n            calculateMinors: true,\r\n            allowDecimals: scaleOptions.allowDecimals,\r\n            endOnTick: scaleOptions.endOnTick,\r\n            incidentOccurred: incidentOccurred,\r\n            rangeIsEmpty: range.isEmpty()\r\n        })({\r\n            min: min,\r\n            max: max,\r\n            categories: _isDefined(categoriesInfo) ? categoriesInfo.categories : []\r\n        }, screenDelta, scaleOptions.tickInterval, scaleOptions.forceUserTickInterval, void 0, scaleOptions.minorTickInterval, scaleOptions.minorTickCount);\r\n        length = ticksInfo.ticks.length;\r\n        bounds.minVisible = ticksInfo.ticks[0] < min ? ticksInfo.ticks[0] : min;\r\n        bounds.maxVisible = ticksInfo.ticks[length - 1] > max ? ticksInfo.ticks[length - 1] : max;\r\n        result = {\r\n            tickInterval: ticksInfo.tickInterval,\r\n            minorTickInterval: 0 === scaleOptions.minorTickInterval ? 0 : ticksInfo.minorTickInterval,\r\n            bounds: bounds,\r\n            ticks: ticksInfo.ticks\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getFirstDayOfWeek(options) {\r\n    var _options$workWeek;\r\n    return null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0]\r\n}\r\n\r\nfunction calculateTranslatorRange(seriesDataSource, scaleOptions) {\r\n    var minValue;\r\n    var maxValue;\r\n    var inverted = false;\r\n    var startValue = scaleOptions.startValue;\r\n    var endValue = scaleOptions.endValue;\r\n    var categories;\r\n    var categoriesInfo;\r\n    var translatorRange = seriesDataSource ? seriesDataSource.getBoundRange().arg : new Range;\r\n    var rangeForCategories;\r\n    var isDate = \"datetime\" === scaleOptions.valueType;\r\n    var firstDayOfWeek = getFirstDayOfWeek(scaleOptions);\r\n    var minRange = scaleOptions.minRange;\r\n    if (scaleOptions.type === DISCRETE) {\r\n        rangeForCategories = new Range({\r\n            minVisible: startValue,\r\n            maxVisible: endValue\r\n        });\r\n        rangeForCategories.addRange(translatorRange);\r\n        translatorRange = rangeForCategories;\r\n        categories = seriesDataSource ? seriesDataSource.argCategories : scaleOptions.categories || startValue && endValue && [startValue, endValue];\r\n        categories = categories || [];\r\n        scaleOptions._categoriesInfo = categoriesInfo = getCategoriesInfo(categories, startValue, endValue)\r\n    }\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        startValue = scaleOptions.startValue = correctValueByInterval(scaleOptions.startValue, isDate, minRange, firstDayOfWeek);\r\n        endValue = scaleOptions.endValue = correctValueByInterval(scaleOptions.endValue, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.minVisible = correctValueByInterval(translatorRange.minVisible, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.maxVisible = correctValueByInterval(translatorRange.maxVisible, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.min = correctValueByInterval(translatorRange.min, isDate, minRange, firstDayOfWeek);\r\n        translatorRange.max = correctValueByInterval(translatorRange.max, isDate, minRange, firstDayOfWeek)\r\n    }\r\n    if (_isDefined(startValue) && _isDefined(endValue)) {\r\n        inverted = categoriesInfo ? categoriesInfo.inverted : startValue > endValue;\r\n        minValue = categoriesInfo ? categoriesInfo.start : inverted ? endValue : startValue;\r\n        maxValue = categoriesInfo ? categoriesInfo.end : inverted ? startValue : endValue\r\n    } else if (_isDefined(startValue) || _isDefined(endValue)) {\r\n        minValue = startValue;\r\n        maxValue = endValue\r\n    } else if (categoriesInfo) {\r\n        minValue = categoriesInfo.start;\r\n        maxValue = categoriesInfo.end\r\n    }\r\n    translatorRange.addRange({\r\n        invert: inverted,\r\n        min: minValue,\r\n        max: maxValue,\r\n        minVisible: minValue,\r\n        maxVisible: maxValue,\r\n        dataType: scaleOptions.valueType\r\n    });\r\n    translatorRange.addRange({\r\n        categories: !seriesDataSource ? categories : void 0,\r\n        base: scaleOptions.logarithmBase,\r\n        axisType: scaleOptions.type,\r\n        dataType: scaleOptions.valueType\r\n    });\r\n    seriesDataSource && translatorRange.sortCategories(categories);\r\n    return translatorRange\r\n}\r\n\r\nfunction startEndNotDefined(start, end) {\r\n    return !_isDefined(start) || !_isDefined(end)\r\n}\r\n\r\nfunction getTextBBox(renderer, text, fontOptions) {\r\n    var textElement = renderer.text(text, INVISIBLE_POS, INVISIBLE_POS).css(patchFontOptions(fontOptions)).append(renderer.root);\r\n    var textBBox = textElement.getBBox();\r\n    textElement.remove();\r\n    return textBBox\r\n}\r\n\r\nfunction getDateMarkerVisibilityChecker(screenDelta) {\r\n    return function(isDateScale, isMarkerVisible, min, max, tickInterval) {\r\n        if (isMarkerVisible && isDateScale) {\r\n            if (!_isDefined(tickInterval) || tickInterval.years || tickInterval.months >= 6 || screenDelta / SEMIDISCRETE_GRID_SPACING_FACTOR < _ceil((max - min) / dateUtils.dateToMilliseconds(\"year\")) + 1) {\r\n                isMarkerVisible = false\r\n            }\r\n        }\r\n        return isMarkerVisible\r\n    }\r\n}\r\n\r\nfunction updateScaleOptions(scaleOptions, seriesDataSource, translatorRange, tickIntervalsInfo, checkDateMarkerVisibility) {\r\n    var bounds;\r\n    var isEmptyInterval;\r\n    var categoriesInfo = scaleOptions._categoriesInfo;\r\n    var intervals;\r\n    var isDateTime = scaleOptions.valueType === DATETIME;\r\n    if (seriesDataSource && !seriesDataSource.isEmpty() && !translatorRange.isEmpty()) {\r\n        bounds = tickIntervalsInfo.bounds;\r\n        translatorRange.addRange(bounds);\r\n        scaleOptions.startValue = translatorRange.invert ? bounds.maxVisible : bounds.minVisible;\r\n        scaleOptions.endValue = translatorRange.invert ? bounds.minVisible : bounds.maxVisible\r\n    }\r\n    scaleOptions.marker.visible = checkDateMarkerVisibility(isDateTime && -1 === scaleOptions.type.indexOf(DISCRETE), scaleOptions.marker.visible, scaleOptions.startValue, scaleOptions.endValue, tickIntervalsInfo.tickInterval);\r\n    if (categoriesInfo) {\r\n        scaleOptions.startValue = categoriesInfo.start;\r\n        scaleOptions.endValue = categoriesInfo.end\r\n    }\r\n    if (-1 === scaleOptions.type.indexOf(DISCRETE)) {\r\n        isEmptyInterval = _isDate(scaleOptions.startValue) && _isDate(scaleOptions.endValue) && scaleOptions.startValue.getTime() === scaleOptions.endValue.getTime() || scaleOptions.startValue === scaleOptions.endValue\r\n    }\r\n    scaleOptions.isEmpty = startEndNotDefined(scaleOptions.startValue, scaleOptions.endValue) || isEmptyInterval;\r\n    if (scaleOptions.isEmpty) {\r\n        scaleOptions.startValue = scaleOptions.endValue = void 0\r\n    } else {\r\n        scaleOptions.minorTickInterval = tickIntervalsInfo.minorTickInterval;\r\n        scaleOptions.tickInterval = tickIntervalsInfo.tickInterval;\r\n        if (isDateTime && (!_isDefined(scaleOptions.label.format) || scaleOptions.type === SEMIDISCRETE && scaleOptions.minorTickInterval !== scaleOptions.tickInterval)) {\r\n            if (scaleOptions.type === DISCRETE) {\r\n                scaleOptions.label.format = formatHelper.getDateFormatByTicks(tickIntervalsInfo.ticks)\r\n            } else if (!scaleOptions.marker.visible) {\r\n                scaleOptions.label.format = formatHelper.getDateFormatByTickInterval(scaleOptions.startValue, scaleOptions.endValue, scaleOptions.tickInterval)\r\n            } else {\r\n                scaleOptions.label.format = dateUtils.getDateFormatByTickInterval(scaleOptions.tickInterval)\r\n            }\r\n        }\r\n    }\r\n    if (scaleOptions.type === SEMIDISCRETE) {\r\n        intervals = getIntervalCustomTicks(scaleOptions);\r\n        scaleOptions.customMinorTicks = intervals.altIntervals;\r\n        scaleOptions.customTicks = intervals.intervals;\r\n        scaleOptions.customBoundTicks = [scaleOptions.customTicks[0]]\r\n    }\r\n}\r\n\r\nfunction prepareScaleOptions(scaleOption, calculatedValueType, incidentOccurred, containerColor) {\r\n    var parsedValue = 0;\r\n    var valueType = correctValueType(_normalizeEnum(scaleOption.valueType));\r\n    var validateStartEndValues = function(field, parser) {\r\n        var messageToIncidentOccurred = field === START_VALUE ? \"start\" : \"end\";\r\n        if (_isDefined(scaleOption[field])) {\r\n            parsedValue = parser(scaleOption[field]);\r\n            if (_isDefined(parsedValue)) {\r\n                scaleOption[field] = parsedValue\r\n            } else {\r\n                scaleOption[field] = void 0;\r\n                incidentOccurred(\"E2202\", [messageToIncidentOccurred])\r\n            }\r\n        }\r\n    };\r\n    valueType = calculatedValueType || valueType;\r\n    if (!valueType) {\r\n        valueType = calculateValueType(scaleOption.startValue, scaleOption.endValue) || \"numeric\"\r\n    }\r\n    if (valueType === STRING || scaleOption.categories) {\r\n        scaleOption.type = DISCRETE;\r\n        valueType = STRING\r\n    }\r\n    scaleOption.containerColor = containerColor;\r\n    scaleOption.valueType = valueType;\r\n    scaleOption.dataType = valueType;\r\n    var parser = getParser(valueType);\r\n    validateStartEndValues(START_VALUE, parser);\r\n    validateStartEndValues(END_VALUE, parser);\r\n    checkLogarithmicOptions(scaleOption, logarithmBase, incidentOccurred);\r\n    if (!scaleOption.type) {\r\n        scaleOption.type = \"continuous\"\r\n    }\r\n    scaleOption.parser = parser;\r\n    if (scaleOption.type === SEMIDISCRETE) {\r\n        scaleOption.minorTick.visible = false;\r\n        scaleOption.minorTickInterval = scaleOption.minRange;\r\n        scaleOption.marker.visible = false;\r\n        scaleOption.maxRange = void 0\r\n    }\r\n    scaleOption.forceUserTickInterval |= _isDefined(scaleOption.tickInterval) && !_isDefined(scaleOption.axisDivisionFactor);\r\n    scaleOption.axisDivisionFactor = _isDefined(scaleOption.axisDivisionFactor) ? scaleOption.axisDivisionFactor : DEFAULT_AXIS_DIVISION_FACTOR;\r\n    scaleOption.minorAxisDivisionFactor = _isDefined(scaleOption.minorAxisDivisionFactor) ? scaleOption.minorAxisDivisionFactor : DEFAULT_MINOR_AXIS_DIVISION_FACTOR;\r\n    return scaleOption\r\n}\r\n\r\nfunction correctValueByInterval(value, isDate, interval, firstDayOfWeek) {\r\n    if (_isDefined(value)) {\r\n        value = isDate ? dateUtils.correctDateWithUnitBeginning(new Date(value), interval, null, firstDayOfWeek) : adjust(_floor(adjust(value / interval)) * interval)\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getIntervalCustomTicks(options) {\r\n    var min = options.startValue;\r\n    var max = options.endValue;\r\n    var isDate = \"datetime\" === options.valueType;\r\n    var firstDayOfWeek = getFirstDayOfWeek(options);\r\n    var tickInterval = options.tickInterval;\r\n    var res = {\r\n        intervals: []\r\n    };\r\n    if (!_isDefined(min) || !_isDefined(max)) {\r\n        return res\r\n    }\r\n    res.intervals = dateUtils.getSequenceByInterval(min, max, options.minorTickInterval);\r\n    if (tickInterval !== options.minorTickInterval) {\r\n        res.altIntervals = res.intervals;\r\n        min = correctValueByInterval(min, isDate, tickInterval, firstDayOfWeek);\r\n        max = correctValueByInterval(max, isDate, tickInterval, firstDayOfWeek);\r\n        res.intervals = dateUtils.getSequenceByInterval(min, max, tickInterval);\r\n        res.intervals[0] = res.altIntervals[0]\r\n    }\r\n    return res\r\n}\r\n\r\nfunction getPrecisionForSlider(startValue, endValue, screenDelta) {\r\n    var d = Math.abs(endValue - startValue) / screenDelta;\r\n    var tail = d - _floor(d);\r\n    return tail > 0 ? _ceil(Math.abs(adjust(getLog(tail, 10)))) : 0\r\n}\r\nvar dxRangeSelector = baseWidgetModule.inherit({\r\n    _toggleParentsScrollSubscription() {},\r\n    _eventsMap: {\r\n        onValueChanged: {\r\n            name: VALUE_CHANGED\r\n        }\r\n    },\r\n    _rootClassPrefix: \"dxrs\",\r\n    _rootClass: \"dxrs-range-selector\",\r\n    _dataIsReady: function() {\r\n        return this._dataIsLoaded()\r\n    },\r\n    _initialChanges: [\"DATA_SOURCE\", \"VALUE\"],\r\n    _themeDependentChanges: [\"MOSTLY_TOTAL\"],\r\n    _themeSection: \"rangeSelector\",\r\n    _fontFields: [\"scale.label.font\", \"sliderMarker.font\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var root = renderer.root;\r\n        root.css({\r\n            \"touch-action\": \"pan-y\"\r\n        });\r\n        that._clipRect = renderer.clipRect();\r\n        var rangeViewGroup = renderer.g().attr({\r\n            class: \"dxrs-view\"\r\n        }).append(root);\r\n        var slidersGroup = renderer.g().attr({\r\n            class: \"dxrs-slidersContainer\",\r\n            \"clip-path\": that._clipRect.id\r\n        }).append(root);\r\n        var scaleGroup = renderer.g().attr({\r\n            class: \"dxrs-scale\",\r\n            \"clip-path\": that._clipRect.id\r\n        }).append(root);\r\n        var scaleBreaksGroup = renderer.g().attr({\r\n            class: \"dxrs-scale-breaks\"\r\n        }).append(root);\r\n        var trackersGroup = renderer.g().attr({\r\n            class: \"dxrs-trackers\"\r\n        }).append(root);\r\n        that._axis = new AxisWrapper({\r\n            renderer: renderer,\r\n            root: scaleGroup,\r\n            scaleBreaksGroup: scaleBreaksGroup,\r\n            updateSelectedRange: function(range, e) {\r\n                that.setValue(convertVisualRangeObject(range), e)\r\n            },\r\n            incidentOccurred: that._incidentOccurred\r\n        });\r\n        that._rangeView = new RangeView({\r\n            renderer: renderer,\r\n            root: rangeViewGroup,\r\n            translator: that._axis.getTranslator()\r\n        });\r\n        that._slidersController = new SlidersController({\r\n            renderer: renderer,\r\n            root: slidersGroup,\r\n            trackersGroup: trackersGroup,\r\n            updateSelectedRange: function(range, lastSelectedRange, e) {\r\n                if (!that._rangeOption) {\r\n                    that.option(VALUE, convertVisualRangeObject(range, isPlainObject(that._options.silent(VALUE))))\r\n                }\r\n                that._eventTrigger(VALUE_CHANGED, {\r\n                    value: convertVisualRangeObject(range),\r\n                    previousValue: convertVisualRangeObject(lastSelectedRange),\r\n                    event: e\r\n                })\r\n            },\r\n            axis: that._axis,\r\n            translator: that._axis.getTranslator()\r\n        });\r\n        that._tracker = new Tracker({\r\n            renderer: renderer,\r\n            controller: that._slidersController\r\n        })\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 160\r\n        }\r\n    },\r\n    _disposeCore: function() {\r\n        this._axis.dispose();\r\n        this._slidersController.dispose();\r\n        this._tracker.dispose()\r\n    },\r\n    _applySize: function(rect) {\r\n        this._clientRect = rect.slice();\r\n        this._change([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _optionChangesMap: {\r\n        scale: \"SCALE\",\r\n        value: \"VALUE\",\r\n        dataSource: \"DATA_SOURCE\"\r\n    },\r\n    _optionChangesOrder: [\"SCALE\", \"DATA_SOURCE\"],\r\n    _change_SCALE: function() {\r\n        this._change([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _setValueByDataSource() {\r\n        var options = this._options.silent();\r\n        var axis = this._axis;\r\n        if (options.dataSource) {\r\n            var selectedRangeUpdateMode = this.option(\"selectedRangeUpdateMode\");\r\n            var value = this.getValue();\r\n            var valueIsReady = _isDefined(value[0]) && _isDefined(value[1]);\r\n            if (_isDefined(selectedRangeUpdateMode)) {\r\n                selectedRangeUpdateMode = _normalizeEnum(selectedRangeUpdateMode);\r\n                this.__skipAnimation = true\r\n            } else if (valueIsReady && !this._dataSourceIsAsync) {\r\n                selectedRangeUpdateMode = RESET\r\n            }\r\n            if (\"auto\" === selectedRangeUpdateMode && valueIsReady) {\r\n                var rangesInfo = axis.allScaleSelected(value);\r\n                if (rangesInfo.startValue && rangesInfo.endValue) {\r\n                    selectedRangeUpdateMode = RESET\r\n                } else if (rangesInfo.endValue) {\r\n                    selectedRangeUpdateMode = SHIFT\r\n                } else {\r\n                    selectedRangeUpdateMode = KEEP\r\n                }\r\n            }\r\n            if (selectedRangeUpdateMode === RESET) {\r\n                options[VALUE] = null\r\n            } else if (selectedRangeUpdateMode === SHIFT && valueIsReady) {\r\n                var _value = this.getValue();\r\n                this.__skipAnimation = true;\r\n                options[VALUE] = {\r\n                    length: axis.getVisualRangeLength({\r\n                        minVisible: _value[0],\r\n                        maxVisible: _value[1]\r\n                    })\r\n                }\r\n            } else if (selectedRangeUpdateMode === KEEP) {\r\n                this.__skipAnimation = true\r\n            }\r\n        }\r\n        this._dataSourceIsAsync = void 0\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        if (this._options.silent(\"dataSource\")) {\r\n            this._updateDataSource()\r\n        }\r\n    },\r\n    _customChangesOrder: [\"MOSTLY_TOTAL\", \"VALUE\", \"SLIDER_SELECTION\"],\r\n    _change_MOSTLY_TOTAL: function() {\r\n        this._applyMostlyTotalChange()\r\n    },\r\n    _change_SLIDER_SELECTION: function() {\r\n        var value = this._options.silent(VALUE);\r\n        this._slidersController.setSelectedRange(value && parseValue(value))\r\n    },\r\n    _change_VALUE: function() {\r\n        var option = this._rangeOption;\r\n        this._dataSourceIsAsync = !this._dataIsReady();\r\n        if (option) {\r\n            this._options.silent(VALUE, option);\r\n            this.setValue(option)\r\n        }\r\n    },\r\n    _validateRange: function(start, end) {\r\n        var translator = this._axis.getTranslator();\r\n        if (_isDefined(start) && !translator.isValid(start) || _isDefined(end) && !translator.isValid(end)) {\r\n            this._incidentOccurred(\"E2203\")\r\n        }\r\n    },\r\n    _applyChanges: function() {\r\n        var that = this;\r\n        var value = that._options.silent(VALUE);\r\n        if (that._changes.has(\"VALUE\") && value) {\r\n            that._rangeOption = value\r\n        }\r\n        that.callBase.apply(that, arguments);\r\n        that._rangeOption = null;\r\n        that.__isResizing = that.__skipAnimation = false\r\n    },\r\n    _applyMostlyTotalChange: function() {\r\n        var renderer = this._renderer;\r\n        var rect = this._clientRect;\r\n        var currentAnimationEnabled;\r\n        var canvas = {\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        };\r\n        if (this.__isResizing || this.__skipAnimation) {\r\n            currentAnimationEnabled = renderer.animationEnabled();\r\n            renderer.updateAnimationOptions({\r\n                enabled: false\r\n            })\r\n        }\r\n        this._clipRect.attr({\r\n            x: rect[0],\r\n            y: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        });\r\n        this._axis.getTranslator().update(new Range, canvas, {\r\n            isHorizontal: true\r\n        });\r\n        this._updateContent({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        });\r\n        if (this.__isResizing || this.__skipAnimation) {\r\n            renderer.updateAnimationOptions({\r\n                enabled: currentAnimationEnabled\r\n            })\r\n        }\r\n        this._drawn()\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        this._setValueByDataSource();\r\n        this._requestChange([\"MOSTLY_TOTAL\"])\r\n    },\r\n    _completeSeriesDataSourceCreation(scaleOptions, seriesDataSource) {\r\n        var rect = this._clientRect;\r\n        var canvas = {\r\n            left: rect[0],\r\n            top: rect[1],\r\n            width: rect[2] - rect[0],\r\n            height: rect[3] - rect[1]\r\n        };\r\n        this._axis.updateOptions(extend({}, scaleOptions, {\r\n            isHorizontal: true,\r\n            label: {}\r\n        }));\r\n        seriesDataSource.isShowChart() && this._axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas));\r\n        this._axis.updateCanvas(canvas);\r\n        seriesDataSource.createPoints()\r\n    },\r\n    _updateContent: function(canvas) {\r\n        var chartOptions = this.option(\"chart\");\r\n        var seriesDataSource = this._createSeriesDataSource(chartOptions);\r\n        var isCompactMode = !(seriesDataSource && seriesDataSource.isShowChart() || this.option(\"background.image.url\"));\r\n        var scaleOptions = prepareScaleOptions(this._getOption(\"scale\"), seriesDataSource && seriesDataSource.getCalculatedValueType(), this._incidentOccurred, this._getOption(\"containerBackgroundColor\", true));\r\n        seriesDataSource && this._completeSeriesDataSourceCreation(scaleOptions, seriesDataSource);\r\n        var argTranslatorRange = calculateTranslatorRange(seriesDataSource, scaleOptions);\r\n        var tickIntervalsInfo = updateTickIntervals(scaleOptions, canvas.width, this._incidentOccurred, argTranslatorRange);\r\n        var chartThemeManager = seriesDataSource && seriesDataSource.isShowChart() && seriesDataSource.getThemeManager();\r\n        if (chartThemeManager) {\r\n            checkLogarithmicOptions(chartOptions && chartOptions.valueAxis, chartThemeManager.getOptions(\"valueAxis\").logarithmBase, this._incidentOccurred)\r\n        }\r\n        updateScaleOptions(scaleOptions, seriesDataSource, argTranslatorRange, tickIntervalsInfo, getDateMarkerVisibilityChecker(canvas.width));\r\n        updateTranslatorRangeInterval(argTranslatorRange, scaleOptions);\r\n        var sliderMarkerOptions = this._prepareSliderMarkersOptions(scaleOptions, canvas.width, tickIntervalsInfo, argTranslatorRange);\r\n        var indents = calculateIndents(this._renderer, scaleOptions, sliderMarkerOptions, this.option(\"indent\"), tickIntervalsInfo);\r\n        var rangeContainerCanvas = {\r\n            left: canvas.left + indents.left,\r\n            top: canvas.top + indents.top,\r\n            width: canvas.left + indents.left + _max(canvas.width - indents.left - indents.right, 1),\r\n            height: _max(!isCompactMode ? canvas.height - indents.top - indents.bottom - calculateScaleAreaHeight(this._renderer, scaleOptions, showScaleMarkers(scaleOptions), tickIntervalsInfo) : HEIGHT_COMPACT_MODE, 0),\r\n            right: 0,\r\n            bottom: 0\r\n        };\r\n        this._axis.update(scaleOptions, isCompactMode, rangeContainerCanvas, argTranslatorRange, seriesDataSource);\r\n        scaleOptions.minorTickInterval = scaleOptions.isEmpty ? 0 : scaleOptions.minorTickInterval;\r\n        this._updateElements(scaleOptions, sliderMarkerOptions, isCompactMode, rangeContainerCanvas, seriesDataSource);\r\n        if (chartThemeManager) {\r\n            chartThemeManager.dispose()\r\n        }\r\n    },\r\n    _updateElements: function(scaleOptions, sliderMarkerOptions, isCompactMode, canvas, seriesDataSource) {\r\n        var behavior = this._getOption(\"behavior\");\r\n        var shutterOptions = this._getOption(\"shutter\");\r\n        var isNotSemiDiscrete = scaleOptions.type !== SEMIDISCRETE;\r\n        shutterOptions.color = shutterOptions.color || this._getOption(CONTAINER_BACKGROUND_COLOR, true);\r\n        this._rangeView.update(this.option(\"background\"), this._themeManager.theme(\"background\"), canvas, isCompactMode, behavior.animationEnabled && this._renderer.animationEnabled(), seriesDataSource);\r\n        this._isUpdating = true;\r\n        this._slidersController.update([canvas.top, canvas.top + canvas.height], behavior, isCompactMode, this._getOption(\"sliderHandle\"), sliderMarkerOptions, shutterOptions, {\r\n            minRange: isNotSemiDiscrete ? this.option(\"scale.minRange\") : void 0,\r\n            maxRange: isNotSemiDiscrete ? this.option(\"scale.maxRange\") : void 0\r\n        }, this._axis.getFullTicks(), this._getOption(\"selectedRangeColor\", true));\r\n        this._requestChange([\"SLIDER_SELECTION\"]);\r\n        this._isUpdating = false;\r\n        this._tracker.update(!this._axis.getTranslator().getBusinessRange().isEmpty(), behavior)\r\n    },\r\n    _createSeriesDataSource: function(chartOptions) {\r\n        var seriesDataSource;\r\n        var dataSource = this._dataSourceItems();\r\n        var scaleOptions = this._getOption(\"scale\");\r\n        var valueType = scaleOptions.valueType || calculateValueType(scaleOptions.startValue, scaleOptions.endValue);\r\n        var valueAxis = new Axis({\r\n            renderer: this._renderer,\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        });\r\n        valueAxis.updateOptions({\r\n            isHorizontal: false,\r\n            label: {},\r\n            categoriesSortingMethod: this._getOption(\"chart\").valueAxis.categoriesSortingMethod\r\n        });\r\n        if (dataSource || chartOptions && chartOptions.series) {\r\n            chartOptions = extend({}, chartOptions, {\r\n                theme: this.option(\"theme\")\r\n            });\r\n            seriesDataSource = new SeriesDataSource({\r\n                renderer: this._renderer,\r\n                dataSource: dataSource,\r\n                valueType: _normalizeEnum(valueType),\r\n                axisType: scaleOptions.type,\r\n                chart: chartOptions,\r\n                dataSourceField: this.option(\"dataSourceField\"),\r\n                incidentOccurred: this._incidentOccurred,\r\n                categories: scaleOptions.categories,\r\n                argumentAxis: this._axis,\r\n                valueAxis: valueAxis\r\n            })\r\n        }\r\n        return seriesDataSource\r\n    },\r\n    _prepareSliderMarkersOptions: function(scaleOptions, screenDelta, tickIntervalsInfo, argRange) {\r\n        var minorTickInterval = tickIntervalsInfo.minorTickInterval;\r\n        var tickInterval = tickIntervalsInfo.tickInterval;\r\n        var interval = tickInterval;\r\n        var endValue = scaleOptions.endValue;\r\n        var startValue = scaleOptions.startValue;\r\n        var sliderMarkerOptions = this._getOption(SLIDER_MARKER);\r\n        var doNotSnap = !this._getOption(\"behavior\").snapToTicks;\r\n        var isTypeDiscrete = scaleOptions.type === DISCRETE;\r\n        var isValueTypeDatetime = scaleOptions.valueType === DATETIME;\r\n        sliderMarkerOptions.borderColor = this._getOption(CONTAINER_BACKGROUND_COLOR, true);\r\n        if (!sliderMarkerOptions.format && !argRange.isEmpty()) {\r\n            if (doNotSnap && _isNumber(scaleOptions.startValue)) {\r\n                sliderMarkerOptions.format = {\r\n                    type: \"fixedPoint\",\r\n                    precision: getPrecisionForSlider(startValue, endValue, screenDelta)\r\n                }\r\n            }\r\n            if (isValueTypeDatetime && !isTypeDiscrete) {\r\n                if (_isDefined(minorTickInterval) && 0 !== minorTickInterval) {\r\n                    interval = getMinorTickIntervalUnit(tickInterval, minorTickInterval, doNotSnap)\r\n                }\r\n                if (!scaleOptions.marker.visible) {\r\n                    if (_isDefined(startValue) && _isDefined(endValue)) {\r\n                        sliderMarkerOptions.format = formatHelper.getDateFormatByTickInterval(startValue, endValue, interval)\r\n                    }\r\n                } else {\r\n                    sliderMarkerOptions.format = dateUtils.getDateFormatByTickInterval(interval)\r\n                }\r\n            }\r\n            if (isValueTypeDatetime && isTypeDiscrete && tickIntervalsInfo.ticks.length) {\r\n                sliderMarkerOptions.format = formatHelper.getDateFormatByTicks(tickIntervalsInfo.ticks)\r\n            }\r\n        }\r\n        return sliderMarkerOptions\r\n    },\r\n    getValue: function() {\r\n        return convertVisualRangeObject(this._slidersController.getSelectedRange())\r\n    },\r\n    setValue: function(value, e) {\r\n        var visualRange = parseValue(value);\r\n        if (!this._isUpdating && value) {\r\n            this._validateRange(visualRange.startValue, visualRange.endValue);\r\n            !rangesAreEqual(visualRange, this._slidersController.getSelectedRange()) && this._slidersController.setSelectedRange(visualRange, e)\r\n        }\r\n    },\r\n    _setContentSize: function() {\r\n        this.__isResizing = 2 === this._changes.count();\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n});\r\neach([\"selectedRangeColor\", \"containerBackgroundColor\", \"sliderMarker\", \"sliderHandle\", \"shutter\", OPTION_BACKGROUND, \"behavior\", \"chart\", \"indent\"], (function(_, name) {\r\n    dxRangeSelector.prototype._optionChangesMap[name] = \"MOSTLY_TOTAL\"\r\n}));\r\n\r\nfunction prepareAxisOptions(scaleOptions, isCompactMode, height, axisPosition) {\r\n    scaleOptions.marker.label.font = scaleOptions.label.font;\r\n    scaleOptions.color = scaleOptions.marker.color = scaleOptions.tick.color;\r\n    scaleOptions.opacity = scaleOptions.marker.opacity = scaleOptions.tick.opacity;\r\n    scaleOptions.width = scaleOptions.marker.width = scaleOptions.tick.width;\r\n    scaleOptions.placeholderSize = (scaleOptions.placeholderHeight || 0) + axisPosition;\r\n    scaleOptions.argumentType = scaleOptions.valueType;\r\n    scaleOptions.visible = isCompactMode;\r\n    scaleOptions.isHorizontal = true;\r\n    scaleOptions.calculateMinors = true;\r\n    scaleOptions.semiDiscreteInterval = scaleOptions.minRange;\r\n    if (!isCompactMode) {\r\n        scaleOptions.minorTick.length = scaleOptions.tick.length = height\r\n    }\r\n    scaleOptions.label.indentFromAxis = scaleOptions.label.topIndent + axisPosition;\r\n    return scaleOptions\r\n}\r\n\r\nfunction createDateMarkersEvent(scaleOptions, markerTrackers, setSelectedRange) {\r\n    each(markerTrackers, (function(_, value) {\r\n        value.on(\"dxpointerdown\", onPointerDown)\r\n    }));\r\n\r\n    function onPointerDown(e) {\r\n        var range = e.target.range;\r\n        var minRange = scaleOptions.minRange ? dateUtils.addInterval(range.startValue, scaleOptions.minRange) : void 0;\r\n        var maxRange = scaleOptions.maxRange ? dateUtils.addInterval(range.startValue, scaleOptions.maxRange) : void 0;\r\n        if (!(minRange && minRange > range.endValue || maxRange && maxRange < range.endValue)) {\r\n            setSelectedRange(range, e)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getShiftDirection() {\r\n    return 1\r\n}\r\n\r\nfunction getTickStartPositionShift(length) {\r\n    return length % 2 === 1 ? -_floor(length / 2) : -length / 2\r\n}\r\n\r\nfunction AxisWrapper(params) {\r\n    this._axis = new Axis({\r\n        renderer: params.renderer,\r\n        axesContainerGroup: params.root,\r\n        scaleBreaksGroup: params.scaleBreaksGroup,\r\n        incidentOccurred: params.incidentOccurred,\r\n        axisType: \"xyAxes\",\r\n        drawingType: \"linear\",\r\n        widgetClass: \"dxrs\",\r\n        axisClass: \"range-selector\",\r\n        isArgumentAxis: true,\r\n        getTemplate() {}\r\n    });\r\n    this._updateSelectedRangeCallback = params.updateSelectedRange;\r\n    this._axis.getAxisSharpDirection = this._axis.getSharpDirectionByCoords = getShiftDirection;\r\n    this._axis.getTickStartPositionShift = getTickStartPositionShift\r\n}\r\nAxisWrapper.prototype = {\r\n    constructor: AxisWrapper,\r\n    dispose: function() {\r\n        this._axis.dispose()\r\n    },\r\n    calculateInterval: function(value, prevValue) {\r\n        return this._axis.calculateInterval(value, prevValue)\r\n    },\r\n    update: function(options, isCompactMode, canvas, businessRange, seriesDataSource) {\r\n        var axis = this._axis;\r\n        axis.updateOptions(prepareAxisOptions(options, isCompactMode, canvas.height, canvas.height / 2 - _ceil(options.width / 2)));\r\n        axis.validate();\r\n        axis.setBusinessRange(businessRange, true);\r\n        if (void 0 !== seriesDataSource && seriesDataSource.isShowChart()) {\r\n            axis.setMarginOptions(seriesDataSource.getMarginOptions(canvas))\r\n        }\r\n        axis.draw(canvas);\r\n        axis.shift({\r\n            left: 0,\r\n            bottom: -canvas.height / 2 + canvas.top\r\n        });\r\n        if (axis.getMarkerTrackers()) {\r\n            createDateMarkersEvent(options, axis.getMarkerTrackers(), this._updateSelectedRangeCallback)\r\n        }\r\n        axis.drawScaleBreaks({\r\n            start: canvas.top,\r\n            end: canvas.top + canvas.height\r\n        })\r\n    },\r\n    visualRange: function() {},\r\n    getViewport: function() {\r\n        return {}\r\n    },\r\n    allScaleSelected(value) {\r\n        var {\r\n            startValue: startValue,\r\n            endValue: endValue\r\n        } = this._axis.visualRange();\r\n        return {\r\n            startValue: value[0].valueOf() === startValue.valueOf(),\r\n            endValue: value[1].valueOf() === endValue.valueOf()\r\n        }\r\n    },\r\n    getOptions() {\r\n        return this._axis.getOptions() || {}\r\n    }\r\n};\r\n[\"setMarginOptions\", \"getFullTicks\", \"updateCanvas\", \"updateOptions\", \"getAggregationInfo\", \"getTranslator\", \"getVisualRangeLength\", \"getVisibleArea\", \"getMarginOptions\", \"getVisualRangeCenter\"].forEach(methodName => {\r\n    AxisWrapper.prototype[methodName] = function() {\r\n        var axis = this._axis;\r\n        return axis[methodName].apply(axis, arguments)\r\n    }\r\n});\r\nregisterComponent(\"dxRangeSelector\", dxRangeSelector);\r\nexport default dxRangeSelector;\r\nimport {\r\n    plugin as exportPlugin\r\n} from \"../core/export\";\r\nimport {\r\n    plugin as titlePlugin\r\n} from \"../core/title\";\r\nimport {\r\n    plugin as LoadingIndicatorPlugin\r\n} from \"../core/loading_indicator\";\r\nimport {\r\n    plugin as dataSourcePlugin\r\n} from \"../core/data_source\";\r\ndxRangeSelector.addPlugin(exportPlugin);\r\ndxRangeSelector.addPlugin(titlePlugin);\r\ndxRangeSelector.addPlugin(LoadingIndicatorPlugin);\r\ndxRangeSelector.addPlugin(dataSourcePlugin);\r\n"]},"metadata":{},"sourceType":"module"}