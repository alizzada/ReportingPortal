{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/core/wheel.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerEvent from \"./event_registrator\";\nimport { addNamespace, fireEvent } from \"../utils/index\";\nvar EVENT_NAME = \"dxmousewheel\";\nvar EVENT_NAMESPACE = \"dxWheel\";\nvar NATIVE_EVENT_NAME = \"wheel\";\nvar PIXEL_MODE = 0;\nvar DELTA_MUTLIPLIER = 30;\nvar wheel = {\n  setup: function setup(element) {\n    var $element = $(element);\n    eventsEngine.on($element, addNamespace(NATIVE_EVENT_NAME, EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel));\n  },\n  teardown: function teardown(element) {\n    eventsEngine.off(element, \".\".concat(EVENT_NAMESPACE));\n  },\n  _wheelHandler: function _wheelHandler(e) {\n    var _e$originalEvent = e.originalEvent,\n        deltaMode = _e$originalEvent.deltaMode,\n        deltaY = _e$originalEvent.deltaY,\n        deltaX = _e$originalEvent.deltaX,\n        deltaZ = _e$originalEvent.deltaZ;\n    fireEvent({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: this._normalizeDelta(deltaY, deltaMode),\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaZ: deltaZ,\n      deltaMode: deltaMode,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n  _normalizeDelta: function _normalizeDelta(delta) {\n    var deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : PIXEL_MODE;\n\n    if (deltaMode === PIXEL_MODE) {\n      return -delta;\n    } else {\n      return -DELTA_MUTLIPLIER * delta;\n    }\n  }\n};\nregisterEvent(EVENT_NAME, wheel);\nexport { EVENT_NAME as name };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/events/core/wheel.js"],"names":["$","eventsEngine","registerEvent","addNamespace","fireEvent","EVENT_NAME","EVENT_NAMESPACE","NATIVE_EVENT_NAME","PIXEL_MODE","DELTA_MUTLIPLIER","wheel","setup","element","$element","on","_wheelHandler","bind","teardown","off","concat","e","originalEvent","deltaMode","deltaY","deltaX","deltaZ","type","delta","_normalizeDelta","pointerType","stopPropagation","arguments","length","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SACIC,YADJ,EAEIC,SAFJ,QAGO,gBAHP;AAIA,IAAIC,UAAU,GAAG,cAAjB;AACA,IAAIC,eAAe,GAAG,SAAtB;AACA,IAAIC,iBAAiB,GAAG,OAAxB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG;AACRC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACrB,QAAIC,QAAQ,GAAGb,CAAC,CAACY,OAAD,CAAhB;AACAX,IAAAA,YAAY,CAACa,EAAb,CAAgBD,QAAhB,EAA0BV,YAAY,CAACI,iBAAD,EAAoBD,eAApB,CAAtC,EAA4EI,KAAK,CAACK,aAAN,CAAoBC,IAApB,CAAyBN,KAAzB,CAA5E;AACH,GAJO;AAKRO,EAAAA,QAAQ,EAAE,kBAASL,OAAT,EAAkB;AACxBX,IAAAA,YAAY,CAACiB,GAAb,CAAiBN,OAAjB,EAA0B,IAAIO,MAAJ,CAAWb,eAAX,CAA1B;AACH,GAPO;AAQRS,EAAAA,aAAa,EAAE,uBAASK,CAAT,EAAY;AACvB,2BAKIA,CAAC,CAACC,aALN;AAAA,QACeC,SADf,oBACIA,SADJ;AAAA,QAEYC,MAFZ,oBAEIA,MAFJ;AAAA,QAGYC,MAHZ,oBAGIA,MAHJ;AAAA,QAIYC,MAJZ,oBAIIA,MAJJ;AAMArB,IAAAA,SAAS,CAAC;AACNsB,MAAAA,IAAI,EAAErB,UADA;AAENgB,MAAAA,aAAa,EAAED,CAFT;AAGNO,MAAAA,KAAK,EAAE,KAAKC,eAAL,CAAqBL,MAArB,EAA6BD,SAA7B,CAHD;AAINE,MAAAA,MAAM,EAAEA,MAJF;AAKND,MAAAA,MAAM,EAAEA,MALF;AAMNE,MAAAA,MAAM,EAAEA,MANF;AAONH,MAAAA,SAAS,EAAEA,SAPL;AAQNO,MAAAA,WAAW,EAAE;AARP,KAAD,CAAT;AAUAT,IAAAA,CAAC,CAACU,eAAF;AACH,GA1BO;AA2BRF,EAAAA,eA3BQ,2BA2BQD,KA3BR,EA2Be;AACnB,QAAIL,SAAS,GAAGS,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiEvB,UAAjF;;AACA,QAAIc,SAAS,KAAKd,UAAlB,EAA8B;AAC1B,aAAO,CAACmB,KAAR;AACH,KAFD,MAEO;AACH,aAAO,CAAClB,gBAAD,GAAoBkB,KAA3B;AACH;AACJ;AAlCO,CAAZ;AAoCAzB,aAAa,CAACG,UAAD,EAAaK,KAAb,CAAb;AACA,SACIL,UAAU,IAAI4B,IADlB","sourcesContent":["/**\r\n * DevExtreme (esm/events/core/wheel.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerEvent from \"./event_registrator\";\r\nimport {\r\n    addNamespace,\r\n    fireEvent\r\n} from \"../utils/index\";\r\nvar EVENT_NAME = \"dxmousewheel\";\r\nvar EVENT_NAMESPACE = \"dxWheel\";\r\nvar NATIVE_EVENT_NAME = \"wheel\";\r\nvar PIXEL_MODE = 0;\r\nvar DELTA_MUTLIPLIER = 30;\r\nvar wheel = {\r\n    setup: function(element) {\r\n        var $element = $(element);\r\n        eventsEngine.on($element, addNamespace(NATIVE_EVENT_NAME, EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel))\r\n    },\r\n    teardown: function(element) {\r\n        eventsEngine.off(element, \".\".concat(EVENT_NAMESPACE))\r\n    },\r\n    _wheelHandler: function(e) {\r\n        var {\r\n            deltaMode: deltaMode,\r\n            deltaY: deltaY,\r\n            deltaX: deltaX,\r\n            deltaZ: deltaZ\r\n        } = e.originalEvent;\r\n        fireEvent({\r\n            type: EVENT_NAME,\r\n            originalEvent: e,\r\n            delta: this._normalizeDelta(deltaY, deltaMode),\r\n            deltaX: deltaX,\r\n            deltaY: deltaY,\r\n            deltaZ: deltaZ,\r\n            deltaMode: deltaMode,\r\n            pointerType: \"mouse\"\r\n        });\r\n        e.stopPropagation()\r\n    },\r\n    _normalizeDelta(delta) {\r\n        var deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : PIXEL_MODE;\r\n        if (deltaMode === PIXEL_MODE) {\r\n            return -delta\r\n        } else {\r\n            return -DELTA_MUTLIPLIER * delta\r\n        }\r\n    }\r\n};\r\nregisterEvent(EVENT_NAME, wheel);\r\nexport {\r\n    EVENT_NAME as name\r\n};\r\n"]},"metadata":{},"sourceType":"module"}