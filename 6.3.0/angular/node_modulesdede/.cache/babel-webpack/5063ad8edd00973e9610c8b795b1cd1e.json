{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.task.area.container.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dxScrollView from \"../scroll_view\";\nexport var TaskAreaContainer = /*#__PURE__*/function () {\n  function TaskAreaContainer(element, ganttViewWidget) {\n    _classCallCheck(this, TaskAreaContainer);\n\n    this._element = element;\n    this._scrollView = ganttViewWidget._createComponent(this._element, dxScrollView, {\n      scrollByContent: false,\n      scrollByThumb: true,\n      showScrollbar: \"onHover\",\n      direction: \"both\",\n      onScroll: function onScroll() {\n        ganttViewWidget.updateView();\n      }\n    });\n  }\n\n  _createClass(TaskAreaContainer, [{\n    key: \"scrollTop\",\n    get: function get() {\n      return this._scrollView.scrollTop();\n    },\n    set: function set(value) {\n      var diff = value - this._scrollView.scrollTop();\n\n      if (0 !== diff) {\n        this._scrollView.scrollBy({\n          left: 0,\n          top: diff\n        });\n      }\n    }\n  }, {\n    key: \"scrollLeft\",\n    get: function get() {\n      return this._scrollView.scrollLeft();\n    },\n    set: function set(value) {\n      var diff = value - this._scrollView.scrollLeft();\n\n      if (0 !== diff) {\n        this._scrollView.scrollBy({\n          left: diff,\n          top: 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollWidth\",\n    get: function get() {\n      return this._scrollView.scrollWidth();\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return this._scrollView.scrollHeight();\n    }\n  }, {\n    key: \"isExternal\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this._element.offsetWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this._element.offsetHeight;\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      return this._element;\n    }\n  }]);\n\n  return TaskAreaContainer;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/gantt/ui.gantt.task.area.container.js"],"names":["dxScrollView","TaskAreaContainer","element","ganttViewWidget","_element","_scrollView","_createComponent","scrollByContent","scrollByThumb","showScrollbar","direction","onScroll","updateView","scrollTop","value","diff","scrollBy","left","top","scrollLeft","scrollWidth","scrollHeight","offsetWidth","offsetHeight"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,WAAaC,iBAAb;AACI,6BAAYC,OAAZ,EAAqBC,eAArB,EAAsC;AAAA;;AAClC,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,WAAL,GAAmBF,eAAe,CAACG,gBAAhB,CAAiC,KAAKF,QAAtC,EAAgDJ,YAAhD,EAA8D;AAC7EO,MAAAA,eAAe,EAAE,KAD4D;AAE7EC,MAAAA,aAAa,EAAE,IAF8D;AAG7EC,MAAAA,aAAa,EAAE,SAH8D;AAI7EC,MAAAA,SAAS,EAAE,MAJkE;AAK7EC,MAAAA,QAAQ,EAAE,oBAAM;AACZR,QAAAA,eAAe,CAACS,UAAhB;AACH;AAP4E,KAA9D,CAAnB;AASH;;AAZL;AAAA;AAAA,SAaI,eAAgB;AACZ,aAAO,KAAKP,WAAL,CAAiBQ,SAAjB,EAAP;AACH,KAfL;AAAA,SAgBI,aAAcC,KAAd,EAAqB;AACjB,UAAIC,IAAI,GAAGD,KAAK,GAAG,KAAKT,WAAL,CAAiBQ,SAAjB,EAAnB;;AACA,UAAI,MAAME,IAAV,EAAgB;AACZ,aAAKV,WAAL,CAAiBW,QAAjB,CAA0B;AACtBC,UAAAA,IAAI,EAAE,CADgB;AAEtBC,UAAAA,GAAG,EAAEH;AAFiB,SAA1B;AAIH;AACJ;AAxBL;AAAA;AAAA,SAyBI,eAAiB;AACb,aAAO,KAAKV,WAAL,CAAiBc,UAAjB,EAAP;AACH,KA3BL;AAAA,SA4BI,aAAeL,KAAf,EAAsB;AAClB,UAAIC,IAAI,GAAGD,KAAK,GAAG,KAAKT,WAAL,CAAiBc,UAAjB,EAAnB;;AACA,UAAI,MAAMJ,IAAV,EAAgB;AACZ,aAAKV,WAAL,CAAiBW,QAAjB,CAA0B;AACtBC,UAAAA,IAAI,EAAEF,IADgB;AAEtBG,UAAAA,GAAG,EAAE;AAFiB,SAA1B;AAIH;AACJ;AApCL;AAAA;AAAA,SAqCI,eAAkB;AACd,aAAO,KAAKb,WAAL,CAAiBe,WAAjB,EAAP;AACH;AAvCL;AAAA;AAAA,SAwCI,eAAmB;AACf,aAAO,KAAKf,WAAL,CAAiBgB,YAAjB,EAAP;AACH;AA1CL;AAAA;AAAA,SA2CI,eAAiB;AACb,aAAO,IAAP;AACH;AA7CL;AAAA;AAAA,WA8CI,oBAAW;AACP,aAAO,KAAKjB,QAAL,CAAckB,WAArB;AACH;AAhDL;AAAA;AAAA,WAiDI,qBAAY;AACR,aAAO,KAAKlB,QAAL,CAAcmB,YAArB;AACH;AAnDL;AAAA;AAAA,WAoDI,sBAAa;AACT,aAAO,KAAKnB,QAAZ;AACH;AAtDL;;AAAA;AAAA","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.task.area.container.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dxScrollView from \"../scroll_view\";\r\nexport class TaskAreaContainer {\r\n    constructor(element, ganttViewWidget) {\r\n        this._element = element;\r\n        this._scrollView = ganttViewWidget._createComponent(this._element, dxScrollView, {\r\n            scrollByContent: false,\r\n            scrollByThumb: true,\r\n            showScrollbar: \"onHover\",\r\n            direction: \"both\",\r\n            onScroll: () => {\r\n                ganttViewWidget.updateView()\r\n            }\r\n        })\r\n    }\r\n    get scrollTop() {\r\n        return this._scrollView.scrollTop()\r\n    }\r\n    set scrollTop(value) {\r\n        var diff = value - this._scrollView.scrollTop();\r\n        if (0 !== diff) {\r\n            this._scrollView.scrollBy({\r\n                left: 0,\r\n                top: diff\r\n            })\r\n        }\r\n    }\r\n    get scrollLeft() {\r\n        return this._scrollView.scrollLeft()\r\n    }\r\n    set scrollLeft(value) {\r\n        var diff = value - this._scrollView.scrollLeft();\r\n        if (0 !== diff) {\r\n            this._scrollView.scrollBy({\r\n                left: diff,\r\n                top: 0\r\n            })\r\n        }\r\n    }\r\n    get scrollWidth() {\r\n        return this._scrollView.scrollWidth()\r\n    }\r\n    get scrollHeight() {\r\n        return this._scrollView.scrollHeight()\r\n    }\r\n    get isExternal() {\r\n        return true\r\n    }\r\n    getWidth() {\r\n        return this._element.offsetWidth\r\n    }\r\n    getHeight() {\r\n        return this._element.offsetHeight\r\n    }\r\n    getElement() {\r\n        return this._element\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}