{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { when } from \"../../core/utils/deferred\";\nimport { name as dblClickName } from \"../../events/double_click\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport devices from \"../../core/devices\";\nimport CustomStore from \"../../data/custom_store\";\nimport Widget from \"../widget/ui.widget\";\nvar FILE_MANAGER_FILES_VIEW_CLASS = \"dx-filemanager-files-view\";\nvar FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE = \"dxFileManager_open\";\n\nvar FileManagerItemListBase = /*#__PURE__*/function (_Widget) {\n  _inherits(FileManagerItemListBase, _Widget);\n\n  var _super = _createSuper(FileManagerItemListBase);\n\n  function FileManagerItemListBase() {\n    _classCallCheck(this, FileManagerItemListBase);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerItemListBase, [{\n    key: \"_init\",\n    value: function _init() {\n      this._initActions();\n\n      this._lockFocusedItemProcessing = false;\n      this._focusedItemKey = this.option(\"focusedItemKey\");\n\n      _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_init\", this).call(this);\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      this.$element().addClass(FILE_MANAGER_FILES_VIEW_CLASS);\n      var dblClickEventName = addNamespace(dblClickName, FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE);\n      eventsEngine.on(this.$element(), dblClickEventName, this._getItemSelector(), this._onItemDblClick.bind(this));\n\n      _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_initMarkup\", this).call(this);\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onError: this._createActionByOption(\"onError\"),\n        onSelectionChanged: this._createActionByOption(\"onSelectionChanged\"),\n        onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\"),\n        onSelectedItemOpened: this._createActionByOption(\"onSelectedItemOpened\"),\n        onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\")\n      };\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_getDefaultOptions\", this).call(this), {\n        selectionMode: \"single\",\n        selectedItemKeys: [],\n        focusedItemKey: void 0,\n        contextMenu: null,\n        getItems: null,\n        getItemThumbnail: null,\n        onError: null,\n        onSelectionChanged: null,\n        onFocusedItemChanged: null,\n        onSelectedItemOpened: null,\n        onContextMenuShowing: null\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"selectionMode\":\n        case \"contextMenu\":\n        case \"getItems\":\n        case \"getItemThumbnail\":\n          this.repaint();\n          break;\n\n        case \"selectedItemKeys\":\n          this._setSelectedItemKeys(args.value);\n\n          break;\n\n        case \"focusedItemKey\":\n          if (!this._lockFocusedItemProcessing) {\n            this._setFocusedItemKey(args.value);\n          }\n\n          break;\n\n        case \"onError\":\n        case \"onSelectedItemOpened\":\n        case \"onSelectionChanged\":\n        case \"onFocusedItemChanged\":\n        case \"onContextMenuShowing\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerItemListBase.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_getItems\",\n    value: function _getItems() {\n      var _this = this;\n\n      return this._getItemsInternal().done(function (itemInfos) {\n        _this._itemCount = itemInfos.length;\n\n        if (0 === _this._itemCount) {\n          _this._resetFocus();\n        }\n\n        var parentDirectoryItem = _this._findParentDirectoryItem(itemInfos);\n\n        _this._hasParentDirectoryItem = !!parentDirectoryItem;\n        _this._parentDirectoryItemKey = parentDirectoryItem ? parentDirectoryItem.fileItem.key : null;\n      });\n    }\n  }, {\n    key: \"_getItemsInternal\",\n    value: function _getItemsInternal() {\n      var itemsGetter = this.option(\"getItems\");\n      var itemsResult = itemsGetter ? itemsGetter() : [];\n      return when(itemsResult);\n    }\n  }, {\n    key: \"_raiseOnError\",\n    value: function _raiseOnError(error) {\n      this._actions.onError({\n        error: error\n      });\n    }\n  }, {\n    key: \"_raiseSelectionChanged\",\n    value: function _raiseSelectionChanged(args) {\n      this._actions.onSelectionChanged(args);\n    }\n  }, {\n    key: \"_raiseFocusedItemChanged\",\n    value: function _raiseFocusedItemChanged(args) {\n      this._actions.onFocusedItemChanged(args);\n    }\n  }, {\n    key: \"_raiseSelectedItemOpened\",\n    value: function _raiseSelectedItemOpened(fileItemInfo) {\n      this._actions.onSelectedItemOpened({\n        fileItemInfo: fileItemInfo\n      });\n    }\n  }, {\n    key: \"_raiseContextMenuShowing\",\n    value: function _raiseContextMenuShowing(e) {\n      this._actions.onContextMenuShowing(e);\n    }\n  }, {\n    key: \"_tryRaiseSelectionChanged\",\n    value: function _tryRaiseSelectionChanged(_ref) {\n      var _this2 = this;\n\n      var selectedItemInfos = _ref.selectedItemInfos,\n          selectedItems = _ref.selectedItems,\n          selectedItemKeys = _ref.selectedItemKeys,\n          currentSelectedItemKeys = _ref.currentSelectedItemKeys,\n          currentDeselectedItemKeys = _ref.currentDeselectedItemKeys;\n\n      var parentDirectoryItem = this._findParentDirectoryItem(this.getSelectedItems());\n\n      if (parentDirectoryItem) {\n        this._deselectItem(parentDirectoryItem);\n      }\n\n      var raiseEvent = !this._hasParentDirectoryItem;\n      raiseEvent = raiseEvent || this._hasValidKeys(currentSelectedItemKeys) || this._hasValidKeys(currentDeselectedItemKeys);\n\n      if (raiseEvent) {\n        selectedItemInfos = this._filterOutItemByPredicate(selectedItemInfos, function (item) {\n          return item.fileItem.key === _this2._parentDirectoryItemKey;\n        });\n        selectedItems = this._filterOutParentDirectory(selectedItems);\n        selectedItemKeys = this._filterOutParentDirectoryKey(selectedItemKeys, true);\n        currentSelectedItemKeys = this._filterOutParentDirectoryKey(currentSelectedItemKeys, true);\n        currentDeselectedItemKeys = this._filterOutParentDirectoryKey(currentDeselectedItemKeys, true);\n\n        this._raiseSelectionChanged({\n          selectedItemInfos: selectedItemInfos,\n          selectedItems: selectedItems,\n          selectedItemKeys: selectedItemKeys,\n          currentSelectedItemKeys: currentSelectedItemKeys,\n          currentDeselectedItemKeys: currentDeselectedItemKeys\n        });\n      }\n    }\n  }, {\n    key: \"_onFocusedItemChanged\",\n    value: function _onFocusedItemChanged(args) {\n      if (this._focusedItemKey === args.itemKey) {\n        return;\n      }\n\n      this._focusedItemKey = args.itemKey;\n      this._lockFocusedItemProcessing = true;\n      this.option(\"focusedItemKey\", args.itemKey);\n      this._lockFocusedItemProcessing = false;\n\n      this._raiseFocusedItemChanged(args);\n    }\n  }, {\n    key: \"_resetFocus\",\n    value: function _resetFocus() {}\n  }, {\n    key: \"_getItemThumbnail\",\n    value: function _getItemThumbnail(fileInfo) {\n      var itemThumbnailGetter = this.option(\"getItemThumbnail\");\n      return itemThumbnailGetter ? itemThumbnailGetter(fileInfo) : {\n        thumbnail: \"\"\n      };\n    }\n  }, {\n    key: \"_getItemThumbnailContainer\",\n    value: function _getItemThumbnailContainer(fileInfo) {\n      var _this$_getItemThumbna = this._getItemThumbnail(fileInfo),\n          thumbnail = _this$_getItemThumbna.thumbnail,\n          cssClass = _this$_getItemThumbna.cssClass;\n\n      var $itemThumbnail = getImageContainer(thumbnail).addClass(this._getItemThumbnailCssClass());\n\n      if (cssClass) {\n        $itemThumbnail.addClass(cssClass);\n      }\n\n      return $itemThumbnail;\n    }\n  }, {\n    key: \"_getItemThumbnailCssClass\",\n    value: function _getItemThumbnailCssClass() {\n      return \"\";\n    }\n  }, {\n    key: \"_getItemSelector\",\n    value: function _getItemSelector() {}\n  }, {\n    key: \"_onItemDblClick\",\n    value: function _onItemDblClick(e) {}\n  }, {\n    key: \"_isDesktop\",\n    value: function _isDesktop() {\n      return \"desktop\" === devices.real().deviceType;\n    }\n  }, {\n    key: \"_showContextMenu\",\n    value: function _showContextMenu(items, element, event, target) {\n      this._contextMenu.showAt(items, element, event, target);\n    }\n  }, {\n    key: \"_contextMenu\",\n    get: function get() {\n      return this.option(\"contextMenu\");\n    }\n  }, {\n    key: \"_findParentDirectoryItem\",\n    value: function _findParentDirectoryItem(itemInfos) {\n      for (var i = 0; i < itemInfos.length; i++) {\n        var itemInfo = itemInfos[i];\n\n        if (this._isParentDirectoryItem(itemInfo)) {\n          return itemInfo;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getFileItemsForContextMenu\",\n    value: function _getFileItemsForContextMenu(fileItem) {\n      var result = this.getSelectedItems();\n\n      if (this._isParentDirectoryItem(fileItem)) {\n        result.push(fileItem);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_isParentDirectoryItem\",\n    value: function _isParentDirectoryItem(itemInfo) {\n      return itemInfo.fileItem.isParentFolder;\n    }\n  }, {\n    key: \"_hasValidKeys\",\n    value: function _hasValidKeys(keys) {\n      return keys.length > 1 || 1 === keys.length && keys[0] !== this._parentDirectoryItemKey;\n    }\n  }, {\n    key: \"_filterOutParentDirectory\",\n    value: function _filterOutParentDirectory(array, createNewArray) {\n      var _this3 = this;\n\n      return this._filterOutItemByPredicate(array, function (item) {\n        return item.key === _this3._parentDirectoryItemKey;\n      }, createNewArray);\n    }\n  }, {\n    key: \"_filterOutParentDirectoryKey\",\n    value: function _filterOutParentDirectoryKey(array, createNewArray) {\n      var _this4 = this;\n\n      return this._filterOutItemByPredicate(array, function (key) {\n        return key === _this4._parentDirectoryItemKey;\n      }, createNewArray);\n    }\n  }, {\n    key: \"_filterOutItemByPredicate\",\n    value: function _filterOutItemByPredicate(array, predicate, createNewArray) {\n      var result = array;\n      var index = -1;\n\n      for (var i = 0; i < array.length; i++) {\n        if (predicate(array[i])) {\n          index = i;\n          break;\n        }\n      }\n\n      if (-1 !== index) {\n        if (createNewArray) {\n          result = _toConsumableArray(array);\n        }\n\n        result.splice(index, 1);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_isMultipleSelectionMode\",\n    value: function _isMultipleSelectionMode() {\n      return \"multiple\" === this.option(\"selectionMode\");\n    }\n  }, {\n    key: \"_deselectItem\",\n    value: function _deselectItem(item) {}\n  }, {\n    key: \"_setSelectedItemKeys\",\n    value: function _setSelectedItemKeys(itemKeys) {}\n  }, {\n    key: \"_setFocusedItemKey\",\n    value: function _setFocusedItemKey(itemKey) {}\n  }, {\n    key: \"_createDataSource\",\n    value: function _createDataSource() {\n      return {\n        store: new CustomStore({\n          key: \"fileItem.key\",\n          load: this._getItems.bind(this)\n        })\n      };\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {}\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {}\n  }, {\n    key: \"selectItem\",\n    value: function selectItem() {}\n  }]);\n\n  return FileManagerItemListBase;\n}(Widget);\n\nexport default FileManagerItemListBase;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.item_list.js"],"names":["extend","when","name","dblClickName","addNamespace","eventsEngine","getImageContainer","devices","CustomStore","Widget","FILE_MANAGER_FILES_VIEW_CLASS","FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE","FileManagerItemListBase","_initActions","_lockFocusedItemProcessing","_focusedItemKey","option","$element","addClass","dblClickEventName","on","_getItemSelector","_onItemDblClick","bind","_actions","onError","_createActionByOption","onSelectionChanged","onFocusedItemChanged","onSelectedItemOpened","onContextMenuShowing","selectionMode","selectedItemKeys","focusedItemKey","contextMenu","getItems","getItemThumbnail","args","repaint","_setSelectedItemKeys","value","_setFocusedItemKey","_getItemsInternal","done","itemInfos","_itemCount","length","_resetFocus","parentDirectoryItem","_findParentDirectoryItem","_hasParentDirectoryItem","_parentDirectoryItemKey","fileItem","key","itemsGetter","itemsResult","error","fileItemInfo","e","_ref","selectedItemInfos","selectedItems","currentSelectedItemKeys","currentDeselectedItemKeys","getSelectedItems","_deselectItem","raiseEvent","_hasValidKeys","_filterOutItemByPredicate","item","_filterOutParentDirectory","_filterOutParentDirectoryKey","_raiseSelectionChanged","itemKey","_raiseFocusedItemChanged","fileInfo","itemThumbnailGetter","thumbnail","_getItemThumbnail","cssClass","$itemThumbnail","_getItemThumbnailCssClass","real","deviceType","items","element","event","target","_contextMenu","showAt","i","itemInfo","_isParentDirectoryItem","result","push","isParentFolder","keys","array","createNewArray","predicate","index","splice","itemKeys","store","load","_getItems"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    name as dblClickName\r\n} from \"../../events/double_click\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport devices from \"../../core/devices\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport Widget from \"../widget/ui.widget\";\r\nvar FILE_MANAGER_FILES_VIEW_CLASS = \"dx-filemanager-files-view\";\r\nvar FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE = \"dxFileManager_open\";\r\nclass FileManagerItemListBase extends Widget {\r\n    _init() {\r\n        this._initActions();\r\n        this._lockFocusedItemProcessing = false;\r\n        this._focusedItemKey = this.option(\"focusedItemKey\");\r\n        super._init()\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(FILE_MANAGER_FILES_VIEW_CLASS);\r\n        var dblClickEventName = addNamespace(dblClickName, FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE);\r\n        eventsEngine.on(this.$element(), dblClickEventName, this._getItemSelector(), this._onItemDblClick.bind(this));\r\n        super._initMarkup()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onError: this._createActionByOption(\"onError\"),\r\n            onSelectionChanged: this._createActionByOption(\"onSelectionChanged\"),\r\n            onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\"),\r\n            onSelectedItemOpened: this._createActionByOption(\"onSelectedItemOpened\"),\r\n            onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\")\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            selectionMode: \"single\",\r\n            selectedItemKeys: [],\r\n            focusedItemKey: void 0,\r\n            contextMenu: null,\r\n            getItems: null,\r\n            getItemThumbnail: null,\r\n            onError: null,\r\n            onSelectionChanged: null,\r\n            onFocusedItemChanged: null,\r\n            onSelectedItemOpened: null,\r\n            onContextMenuShowing: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"selectionMode\":\r\n            case \"contextMenu\":\r\n            case \"getItems\":\r\n            case \"getItemThumbnail\":\r\n                this.repaint();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n                this._setSelectedItemKeys(args.value);\r\n                break;\r\n            case \"focusedItemKey\":\r\n                if (!this._lockFocusedItemProcessing) {\r\n                    this._setFocusedItemKey(args.value)\r\n                }\r\n                break;\r\n            case \"onError\":\r\n            case \"onSelectedItemOpened\":\r\n            case \"onSelectionChanged\":\r\n            case \"onFocusedItemChanged\":\r\n            case \"onContextMenuShowing\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _getItems() {\r\n        return this._getItemsInternal().done(itemInfos => {\r\n            this._itemCount = itemInfos.length;\r\n            if (0 === this._itemCount) {\r\n                this._resetFocus()\r\n            }\r\n            var parentDirectoryItem = this._findParentDirectoryItem(itemInfos);\r\n            this._hasParentDirectoryItem = !!parentDirectoryItem;\r\n            this._parentDirectoryItemKey = parentDirectoryItem ? parentDirectoryItem.fileItem.key : null\r\n        })\r\n    }\r\n    _getItemsInternal() {\r\n        var itemsGetter = this.option(\"getItems\");\r\n        var itemsResult = itemsGetter ? itemsGetter() : [];\r\n        return when(itemsResult)\r\n    }\r\n    _raiseOnError(error) {\r\n        this._actions.onError({\r\n            error: error\r\n        })\r\n    }\r\n    _raiseSelectionChanged(args) {\r\n        this._actions.onSelectionChanged(args)\r\n    }\r\n    _raiseFocusedItemChanged(args) {\r\n        this._actions.onFocusedItemChanged(args)\r\n    }\r\n    _raiseSelectedItemOpened(fileItemInfo) {\r\n        this._actions.onSelectedItemOpened({\r\n            fileItemInfo: fileItemInfo\r\n        })\r\n    }\r\n    _raiseContextMenuShowing(e) {\r\n        this._actions.onContextMenuShowing(e)\r\n    }\r\n    _tryRaiseSelectionChanged(_ref) {\r\n        var {\r\n            selectedItemInfos: selectedItemInfos,\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            currentSelectedItemKeys: currentSelectedItemKeys,\r\n            currentDeselectedItemKeys: currentDeselectedItemKeys\r\n        } = _ref;\r\n        var parentDirectoryItem = this._findParentDirectoryItem(this.getSelectedItems());\r\n        if (parentDirectoryItem) {\r\n            this._deselectItem(parentDirectoryItem)\r\n        }\r\n        var raiseEvent = !this._hasParentDirectoryItem;\r\n        raiseEvent = raiseEvent || this._hasValidKeys(currentSelectedItemKeys) || this._hasValidKeys(currentDeselectedItemKeys);\r\n        if (raiseEvent) {\r\n            selectedItemInfos = this._filterOutItemByPredicate(selectedItemInfos, item => item.fileItem.key === this._parentDirectoryItemKey);\r\n            selectedItems = this._filterOutParentDirectory(selectedItems);\r\n            selectedItemKeys = this._filterOutParentDirectoryKey(selectedItemKeys, true);\r\n            currentSelectedItemKeys = this._filterOutParentDirectoryKey(currentSelectedItemKeys, true);\r\n            currentDeselectedItemKeys = this._filterOutParentDirectoryKey(currentDeselectedItemKeys, true);\r\n            this._raiseSelectionChanged({\r\n                selectedItemInfos: selectedItemInfos,\r\n                selectedItems: selectedItems,\r\n                selectedItemKeys: selectedItemKeys,\r\n                currentSelectedItemKeys: currentSelectedItemKeys,\r\n                currentDeselectedItemKeys: currentDeselectedItemKeys\r\n            })\r\n        }\r\n    }\r\n    _onFocusedItemChanged(args) {\r\n        if (this._focusedItemKey === args.itemKey) {\r\n            return\r\n        }\r\n        this._focusedItemKey = args.itemKey;\r\n        this._lockFocusedItemProcessing = true;\r\n        this.option(\"focusedItemKey\", args.itemKey);\r\n        this._lockFocusedItemProcessing = false;\r\n        this._raiseFocusedItemChanged(args)\r\n    }\r\n    _resetFocus() {}\r\n    _getItemThumbnail(fileInfo) {\r\n        var itemThumbnailGetter = this.option(\"getItemThumbnail\");\r\n        return itemThumbnailGetter ? itemThumbnailGetter(fileInfo) : {\r\n            thumbnail: \"\"\r\n        }\r\n    }\r\n    _getItemThumbnailContainer(fileInfo) {\r\n        var {\r\n            thumbnail: thumbnail,\r\n            cssClass: cssClass\r\n        } = this._getItemThumbnail(fileInfo);\r\n        var $itemThumbnail = getImageContainer(thumbnail).addClass(this._getItemThumbnailCssClass());\r\n        if (cssClass) {\r\n            $itemThumbnail.addClass(cssClass)\r\n        }\r\n        return $itemThumbnail\r\n    }\r\n    _getItemThumbnailCssClass() {\r\n        return \"\"\r\n    }\r\n    _getItemSelector() {}\r\n    _onItemDblClick(e) {}\r\n    _isDesktop() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    }\r\n    _showContextMenu(items, element, event, target) {\r\n        this._contextMenu.showAt(items, element, event, target)\r\n    }\r\n    get _contextMenu() {\r\n        return this.option(\"contextMenu\")\r\n    }\r\n    _findParentDirectoryItem(itemInfos) {\r\n        for (var i = 0; i < itemInfos.length; i++) {\r\n            var itemInfo = itemInfos[i];\r\n            if (this._isParentDirectoryItem(itemInfo)) {\r\n                return itemInfo\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    _getFileItemsForContextMenu(fileItem) {\r\n        var result = this.getSelectedItems();\r\n        if (this._isParentDirectoryItem(fileItem)) {\r\n            result.push(fileItem)\r\n        }\r\n        return result\r\n    }\r\n    _isParentDirectoryItem(itemInfo) {\r\n        return itemInfo.fileItem.isParentFolder\r\n    }\r\n    _hasValidKeys(keys) {\r\n        return keys.length > 1 || 1 === keys.length && keys[0] !== this._parentDirectoryItemKey\r\n    }\r\n    _filterOutParentDirectory(array, createNewArray) {\r\n        return this._filterOutItemByPredicate(array, item => item.key === this._parentDirectoryItemKey, createNewArray)\r\n    }\r\n    _filterOutParentDirectoryKey(array, createNewArray) {\r\n        return this._filterOutItemByPredicate(array, key => key === this._parentDirectoryItemKey, createNewArray)\r\n    }\r\n    _filterOutItemByPredicate(array, predicate, createNewArray) {\r\n        var result = array;\r\n        var index = -1;\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (predicate(array[i])) {\r\n                index = i;\r\n                break\r\n            }\r\n        }\r\n        if (-1 !== index) {\r\n            if (createNewArray) {\r\n                result = [...array]\r\n            }\r\n            result.splice(index, 1)\r\n        }\r\n        return result\r\n    }\r\n    _isMultipleSelectionMode() {\r\n        return \"multiple\" === this.option(\"selectionMode\")\r\n    }\r\n    _deselectItem(item) {}\r\n    _setSelectedItemKeys(itemKeys) {}\r\n    _setFocusedItemKey(itemKey) {}\r\n    _createDataSource() {\r\n        return {\r\n            store: new CustomStore({\r\n                key: \"fileItem.key\",\r\n                load: this._getItems.bind(this)\r\n            })\r\n        }\r\n    }\r\n    getSelectedItems() {}\r\n    clearSelection() {}\r\n    selectItem() {}\r\n}\r\nexport default FileManagerItemListBase;\r\n"]},"metadata":{},"sourceType":"module"}