{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/core/options/index.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction, isObject, type } from \"../utils/type\";\nimport { equalByValue, noop } from \"../utils/common\";\nimport { OptionManager } from \"./option_manager\";\nimport { clone } from \"../utils/object\";\nimport { getFieldName, getParentName, convertRulesToOptions, getNestedOptionValue } from \"./utils\";\nimport { extend } from \"../utils/extend\";\nexport var Options = /*#__PURE__*/function () {\n  function Options(options, defaultOptions, optionsByReference, deprecatedOptions) {\n    var _this = this;\n\n    _classCallCheck(this, Options);\n\n    this._deprecatedCallback;\n    this._startChangeCallback;\n    this._endChangeCallback;\n    this._default = defaultOptions;\n    this._deprecated = deprecatedOptions;\n    this._deprecatedNames = [];\n\n    this._initDeprecatedNames();\n\n    this._optionManager = new OptionManager(options, optionsByReference);\n\n    this._optionManager.onRelevantNamesPrepared(function (options, name, value, silent) {\n      return _this._setRelevantNames(options, name, value, silent);\n    });\n\n    this._cachedOptions = {};\n    this._rules = [];\n  }\n\n  _createClass(Options, [{\n    key: \"_initial\",\n    get: function get() {\n      if (!this._initialOptions) {\n        var rulesOptions = this._getByRules(this.silent(\"defaultOptionsRules\"));\n\n        this._initialOptions = this._default;\n\n        this._optionManager._setByReference(this._initialOptions, rulesOptions);\n      }\n\n      return this._initialOptions;\n    },\n    set: function set(value) {\n      this._initialOptions = value;\n    }\n  }, {\n    key: \"_initDeprecatedNames\",\n    value: function _initDeprecatedNames() {\n      for (var optionName in this._deprecated) {\n        this._deprecatedNames.push(optionName);\n      }\n    }\n  }, {\n    key: \"_getByRules\",\n    value: function _getByRules(rules) {\n      rules = Array.isArray(rules) ? this._rules.concat(rules) : this._rules;\n      return convertRulesToOptions(rules);\n    }\n  }, {\n    key: \"_notifyDeprecated\",\n    value: function _notifyDeprecated(option) {\n      var info = this._deprecated[option];\n\n      if (info) {\n        this._deprecatedCallback(option, info);\n      }\n    }\n  }, {\n    key: \"_setRelevantNames\",\n    value: function _setRelevantNames(options, name, value, silent) {\n      if (name) {\n        var normalizedName = this._normalizeName(name, silent);\n\n        if (normalizedName && normalizedName !== name) {\n          this._setField(options, normalizedName, value);\n\n          this._clearField(options, name);\n        }\n      }\n    }\n  }, {\n    key: \"_setField\",\n    value: function _setField(options, fullName, value) {\n      var fieldName = \"\";\n      var fieldObject = null;\n\n      do {\n        fieldName = fieldName ? \".\".concat(fieldName) : \"\";\n        fieldName = getFieldName(fullName) + fieldName;\n        fullName = getParentName(fullName);\n        fieldObject = fullName ? this._optionManager.get(options, fullName, false) : options;\n      } while (!fieldObject);\n\n      fieldObject[fieldName] = value;\n    }\n  }, {\n    key: \"_clearField\",\n    value: function _clearField(options, name) {\n      delete options[name];\n      var previousFieldName = getParentName(name);\n      var fieldObject = previousFieldName ? this._optionManager.get(options, previousFieldName, false) : options;\n\n      if (fieldObject) {\n        delete fieldObject[getFieldName(name)];\n      }\n    }\n  }, {\n    key: \"_normalizeName\",\n    value: function _normalizeName(name, silent) {\n      if (this._deprecatedNames.length && name) {\n        for (var i = 0; i < this._deprecatedNames.length; i++) {\n          if (this._deprecatedNames[i] === name) {\n            var deprecate = this._deprecated[name];\n\n            if (deprecate) {\n              !silent && this._notifyDeprecated(name);\n              return deprecate.alias || name;\n            }\n          }\n        }\n      }\n\n      return name;\n    }\n  }, {\n    key: \"addRules\",\n    value: function addRules(rules) {\n      this._rules = rules.concat(this._rules);\n    }\n  }, {\n    key: \"applyRules\",\n    value: function applyRules(rules) {\n      var options = this._getByRules(rules);\n\n      this.silent(options);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._deprecatedCallback = noop;\n      this._startChangeCallback = noop;\n      this._endChangeCallback = noop;\n\n      this._optionManager.dispose();\n    }\n  }, {\n    key: \"onChanging\",\n    value: function onChanging(callBack) {\n      this._optionManager.onChanging(callBack);\n    }\n  }, {\n    key: \"onChanged\",\n    value: function onChanged(callBack) {\n      this._optionManager.onChanged(callBack);\n    }\n  }, {\n    key: \"onDeprecated\",\n    value: function onDeprecated(callBack) {\n      this._deprecatedCallback = callBack;\n    }\n  }, {\n    key: \"onStartChange\",\n    value: function onStartChange(callBack) {\n      this._startChangeCallback = callBack;\n    }\n  }, {\n    key: \"onEndChange\",\n    value: function onEndChange(callBack) {\n      this._endChangeCallback = callBack;\n    }\n  }, {\n    key: \"isInitial\",\n    value: function isInitial(name) {\n      var value = this.silent(name);\n      var initialValue = this.initial(name);\n      var areFunctions = isFunction(value) && isFunction(initialValue);\n      return areFunctions ? value.toString() === initialValue.toString() : equalByValue(value, initialValue);\n    }\n  }, {\n    key: \"initial\",\n    value: function initial(name) {\n      return getNestedOptionValue(this._initial, name);\n    }\n  }, {\n    key: \"option\",\n    value: function option(options, value) {\n      var isGetter = arguments.length < 2 && \"object\" !== type(options);\n\n      if (isGetter) {\n        return this._optionManager.get(void 0, this._normalizeName(options));\n      } else {\n        this._startChangeCallback();\n\n        try {\n          this._optionManager.set(options, value);\n        } finally {\n          this._endChangeCallback();\n        }\n      }\n    }\n  }, {\n    key: \"silent\",\n    value: function silent(options, value) {\n      var isGetter = arguments.length < 2 && \"object\" !== type(options);\n\n      if (isGetter) {\n        return this._optionManager.get(void 0, options, void 0, true);\n      } else {\n        this._optionManager.set(options, value, void 0, true);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(name) {\n      var _this2 = this;\n\n      if (name) {\n        var fullPath = name.replace(/\\[([^\\]])\\]/g, \".$1\").split(\".\");\n        var value = fullPath.reduce(function (value, field) {\n          return value ? value[field] : _this2.initial(field);\n        }, null);\n        var defaultValue = isObject(value) ? clone(value) : value;\n\n        this._optionManager.set(name, defaultValue, false);\n      }\n    }\n  }, {\n    key: \"getAliasesByName\",\n    value: function getAliasesByName(name) {\n      var _this3 = this;\n\n      return Object.keys(this._deprecated).filter(function (aliasName) {\n        return name === _this3._deprecated[aliasName].alias;\n      });\n    }\n  }, {\n    key: \"isDeprecated\",\n    value: function isDeprecated(name) {\n      return Object.prototype.hasOwnProperty.call(this._deprecated, name);\n    }\n  }, {\n    key: \"cache\",\n    value: function cache(name, options) {\n      var isGetter = arguments.length < 2;\n\n      if (isGetter) {\n        return this._cachedOptions[name];\n      } else {\n        this._cachedOptions[name] = extend(this._cachedOptions[name], options);\n      }\n    }\n  }]);\n\n  return Options;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/core/options/index.js"],"names":["isFunction","isObject","type","equalByValue","noop","OptionManager","clone","getFieldName","getParentName","convertRulesToOptions","getNestedOptionValue","extend","Options","options","defaultOptions","optionsByReference","deprecatedOptions","_deprecatedCallback","_startChangeCallback","_endChangeCallback","_default","_deprecated","_deprecatedNames","_initDeprecatedNames","_optionManager","onRelevantNamesPrepared","name","value","silent","_setRelevantNames","_cachedOptions","_rules","_initialOptions","rulesOptions","_getByRules","_setByReference","optionName","push","rules","Array","isArray","concat","option","info","normalizedName","_normalizeName","_setField","_clearField","fullName","fieldName","fieldObject","get","previousFieldName","length","i","deprecate","_notifyDeprecated","alias","dispose","callBack","onChanging","onChanged","initialValue","initial","areFunctions","toString","_initial","isGetter","arguments","set","fullPath","replace","split","reduce","field","defaultValue","Object","keys","filter","aliasName","prototype","hasOwnProperty","call"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/options/index.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction,\r\n    isObject,\r\n    type\r\n} from \"../utils/type\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../utils/common\";\r\nimport {\r\n    OptionManager\r\n} from \"./option_manager\";\r\nimport {\r\n    clone\r\n} from \"../utils/object\";\r\nimport {\r\n    getFieldName,\r\n    getParentName,\r\n    convertRulesToOptions,\r\n    getNestedOptionValue\r\n} from \"./utils\";\r\nimport {\r\n    extend\r\n} from \"../utils/extend\";\r\nexport class Options {\r\n    constructor(options, defaultOptions, optionsByReference, deprecatedOptions) {\r\n        this._deprecatedCallback;\r\n        this._startChangeCallback;\r\n        this._endChangeCallback;\r\n        this._default = defaultOptions;\r\n        this._deprecated = deprecatedOptions;\r\n        this._deprecatedNames = [];\r\n        this._initDeprecatedNames();\r\n        this._optionManager = new OptionManager(options, optionsByReference);\r\n        this._optionManager.onRelevantNamesPrepared((options, name, value, silent) => this._setRelevantNames(options, name, value, silent));\r\n        this._cachedOptions = {};\r\n        this._rules = []\r\n    }\r\n    set _initial(value) {\r\n        this._initialOptions = value\r\n    }\r\n    get _initial() {\r\n        if (!this._initialOptions) {\r\n            var rulesOptions = this._getByRules(this.silent(\"defaultOptionsRules\"));\r\n            this._initialOptions = this._default;\r\n            this._optionManager._setByReference(this._initialOptions, rulesOptions)\r\n        }\r\n        return this._initialOptions\r\n    }\r\n    _initDeprecatedNames() {\r\n        for (var optionName in this._deprecated) {\r\n            this._deprecatedNames.push(optionName)\r\n        }\r\n    }\r\n    _getByRules(rules) {\r\n        rules = Array.isArray(rules) ? this._rules.concat(rules) : this._rules;\r\n        return convertRulesToOptions(rules)\r\n    }\r\n    _notifyDeprecated(option) {\r\n        var info = this._deprecated[option];\r\n        if (info) {\r\n            this._deprecatedCallback(option, info)\r\n        }\r\n    }\r\n    _setRelevantNames(options, name, value, silent) {\r\n        if (name) {\r\n            var normalizedName = this._normalizeName(name, silent);\r\n            if (normalizedName && normalizedName !== name) {\r\n                this._setField(options, normalizedName, value);\r\n                this._clearField(options, name)\r\n            }\r\n        }\r\n    }\r\n    _setField(options, fullName, value) {\r\n        var fieldName = \"\";\r\n        var fieldObject = null;\r\n        do {\r\n            fieldName = fieldName ? \".\".concat(fieldName) : \"\";\r\n            fieldName = getFieldName(fullName) + fieldName;\r\n            fullName = getParentName(fullName);\r\n            fieldObject = fullName ? this._optionManager.get(options, fullName, false) : options\r\n        } while (!fieldObject);\r\n        fieldObject[fieldName] = value\r\n    }\r\n    _clearField(options, name) {\r\n        delete options[name];\r\n        var previousFieldName = getParentName(name);\r\n        var fieldObject = previousFieldName ? this._optionManager.get(options, previousFieldName, false) : options;\r\n        if (fieldObject) {\r\n            delete fieldObject[getFieldName(name)]\r\n        }\r\n    }\r\n    _normalizeName(name, silent) {\r\n        if (this._deprecatedNames.length && name) {\r\n            for (var i = 0; i < this._deprecatedNames.length; i++) {\r\n                if (this._deprecatedNames[i] === name) {\r\n                    var deprecate = this._deprecated[name];\r\n                    if (deprecate) {\r\n                        !silent && this._notifyDeprecated(name);\r\n                        return deprecate.alias || name\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return name\r\n    }\r\n    addRules(rules) {\r\n        this._rules = rules.concat(this._rules)\r\n    }\r\n    applyRules(rules) {\r\n        var options = this._getByRules(rules);\r\n        this.silent(options)\r\n    }\r\n    dispose() {\r\n        this._deprecatedCallback = noop;\r\n        this._startChangeCallback = noop;\r\n        this._endChangeCallback = noop;\r\n        this._optionManager.dispose()\r\n    }\r\n    onChanging(callBack) {\r\n        this._optionManager.onChanging(callBack)\r\n    }\r\n    onChanged(callBack) {\r\n        this._optionManager.onChanged(callBack)\r\n    }\r\n    onDeprecated(callBack) {\r\n        this._deprecatedCallback = callBack\r\n    }\r\n    onStartChange(callBack) {\r\n        this._startChangeCallback = callBack\r\n    }\r\n    onEndChange(callBack) {\r\n        this._endChangeCallback = callBack\r\n    }\r\n    isInitial(name) {\r\n        var value = this.silent(name);\r\n        var initialValue = this.initial(name);\r\n        var areFunctions = isFunction(value) && isFunction(initialValue);\r\n        return areFunctions ? value.toString() === initialValue.toString() : equalByValue(value, initialValue)\r\n    }\r\n    initial(name) {\r\n        return getNestedOptionValue(this._initial, name)\r\n    }\r\n    option(options, value) {\r\n        var isGetter = arguments.length < 2 && \"object\" !== type(options);\r\n        if (isGetter) {\r\n            return this._optionManager.get(void 0, this._normalizeName(options))\r\n        } else {\r\n            this._startChangeCallback();\r\n            try {\r\n                this._optionManager.set(options, value)\r\n            } finally {\r\n                this._endChangeCallback()\r\n            }\r\n        }\r\n    }\r\n    silent(options, value) {\r\n        var isGetter = arguments.length < 2 && \"object\" !== type(options);\r\n        if (isGetter) {\r\n            return this._optionManager.get(void 0, options, void 0, true)\r\n        } else {\r\n            this._optionManager.set(options, value, void 0, true)\r\n        }\r\n    }\r\n    reset(name) {\r\n        if (name) {\r\n            var fullPath = name.replace(/\\[([^\\]])\\]/g, \".$1\").split(\".\");\r\n            var value = fullPath.reduce((value, field) => value ? value[field] : this.initial(field), null);\r\n            var defaultValue = isObject(value) ? clone(value) : value;\r\n            this._optionManager.set(name, defaultValue, false)\r\n        }\r\n    }\r\n    getAliasesByName(name) {\r\n        return Object.keys(this._deprecated).filter(aliasName => name === this._deprecated[aliasName].alias)\r\n    }\r\n    isDeprecated(name) {\r\n        return Object.prototype.hasOwnProperty.call(this._deprecated, name)\r\n    }\r\n    cache(name, options) {\r\n        var isGetter = arguments.length < 2;\r\n        if (isGetter) {\r\n            return this._cachedOptions[name]\r\n        } else {\r\n            this._cachedOptions[name] = extend(this._cachedOptions[name], options)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}