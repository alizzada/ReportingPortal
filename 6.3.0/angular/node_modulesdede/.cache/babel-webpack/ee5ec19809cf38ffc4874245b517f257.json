{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dateLocalization from \"../../../localization/date\";\nimport SchedulerWorkSpaceVertical from \"./ui.scheduler.work_space_vertical\";\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar SchedulerWorkSpaceWeek = /*#__PURE__*/function (_SchedulerWorkSpaceVe) {\n  _inherits(SchedulerWorkSpaceWeek, _SchedulerWorkSpaceVe);\n\n  var _super = _createSuper(SchedulerWorkSpaceWeek);\n\n  function SchedulerWorkSpaceWeek() {\n    _classCallCheck(this, SchedulerWorkSpaceWeek);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerWorkSpaceWeek, [{\n    key: \"_getElementClass\",\n    value: function _getElementClass() {\n      return WEEK_CLASS;\n    }\n  }, {\n    key: \"_getRowCount\",\n    value: function _getRowCount() {\n      return this._getCellCountInDay();\n    }\n  }, {\n    key: \"_getCellCount\",\n    value: function _getCellCount() {\n      return 7 * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"_getDateByIndex\",\n    value: function _getDateByIndex(headerIndex) {\n      var resultDate = new Date(this._firstViewDate);\n      resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\n      return resultDate;\n    }\n  }, {\n    key: \"_getStartViewDate\",\n    value: function _getStartViewDate() {\n      return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex());\n    }\n  }, {\n    key: \"_getIntervalDuration\",\n    value: function _getIntervalDuration() {\n      return 7 * toMs(\"day\") * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"getPositionShift\",\n    value: function getPositionShift(timeShift, isAllDay) {\n      if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n        return {\n          top: 0,\n          left: 0,\n          cellPosition: 0\n        };\n      }\n\n      return _get(_getPrototypeOf(SchedulerWorkSpaceWeek.prototype), \"getPositionShift\", this).call(this, timeShift, isAllDay);\n    }\n  }, {\n    key: \"_isApplyCompactAppointmentOffset\",\n    value: function _isApplyCompactAppointmentOffset() {\n      if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n        return false;\n      }\n\n      return _get(_getPrototypeOf(SchedulerWorkSpaceWeek.prototype), \"_isApplyCompactAppointmentOffset\", this).call(this);\n    }\n  }]);\n\n  return SchedulerWorkSpaceWeek;\n}(SchedulerWorkSpaceVertical);\n\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\nexport default SchedulerWorkSpaceWeek;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js"],"names":["registerComponent","dateUtils","dateLocalization","SchedulerWorkSpaceVertical","WEEK_CLASS","toMs","dateToMilliseconds","SchedulerWorkSpaceWeek","_getCellCountInDay","option","headerIndex","resultDate","Date","_firstViewDate","setDate","getDate","getFirstWeekDate","_firstDayOfWeek","firstDayOfWeekIndex","timeShift","isAllDay","invoke","top","left","cellPosition"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,0BAAP,MAAuC,oCAAvC;AACA,IAAIC,UAAU,GAAG,8BAAjB;AACA,IAAIC,IAAI,GAAGJ,SAAS,CAACK,kBAArB;;IACMC,sB;;;;;;;;;;;;;WACF,4BAAmB;AACf,aAAOH,UAAP;AACH;;;WACD,wBAAe;AACX,aAAO,KAAKI,kBAAL,EAAP;AACH;;;WACD,yBAAgB;AACZ,aAAO,IAAI,KAAKC,MAAL,CAAY,eAAZ,CAAX;AACH;;;WACD,yBAAgBC,WAAhB,EAA6B;AACzB,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAAS,KAAKC,cAAd,CAAjB;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAmB,KAAKD,cAAL,CAAoBE,OAApB,KAAgCL,WAAnD;AACA,aAAOC,UAAP;AACH;;;WACD,6BAAoB;AAChB,aAAOV,SAAS,CAACe,gBAAV,CAA2B,KAAKP,MAAL,CAAY,WAAZ,CAA3B,EAAqD,KAAKQ,eAAL,MAA0Bf,gBAAgB,CAACgB,mBAAjB,EAA/E,CAAP;AACH;;;WACD,gCAAuB;AACnB,aAAO,IAAIb,IAAI,CAAC,KAAD,CAAR,GAAkB,KAAKI,MAAL,CAAY,eAAZ,CAAzB;AACH;;;WACD,0BAAiBU,SAAjB,EAA4BC,QAA5B,EAAsC;AAClC,UAAI,CAACA,QAAD,IAAa,KAAKC,MAAL,CAAY,YAAZ,CAAb,IAA0C,MAAM,KAAKA,MAAL,CAAY,qCAAZ,CAApD,EAAwG;AACpG,eAAO;AACHC,UAAAA,GAAG,EAAE,CADF;AAEHC,UAAAA,IAAI,EAAE,CAFH;AAGHC,UAAAA,YAAY,EAAE;AAHX,SAAP;AAKH;;AACD,0GAA8BL,SAA9B,EAAyCC,QAAzC;AACH;;;WACD,4CAAmC;AAC/B,UAAI,KAAKC,MAAL,CAAY,YAAZ,KAA6B,MAAM,KAAKA,MAAL,CAAY,qCAAZ,CAAvC,EAA2F;AACvF,eAAO,KAAP;AACH;;AACD;AACH;;;;EApCgClB,0B;;AAsCrCH,iBAAiB,CAAC,0BAAD,EAA6BO,sBAA7B,CAAjB;AACA,eAAeA,sBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dateLocalization from \"../../../localization/date\";\r\nimport SchedulerWorkSpaceVertical from \"./ui.scheduler.work_space_vertical\";\r\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass SchedulerWorkSpaceWeek extends SchedulerWorkSpaceVertical {\r\n    _getElementClass() {\r\n        return WEEK_CLASS\r\n    }\r\n    _getRowCount() {\r\n        return this._getCellCountInDay()\r\n    }\r\n    _getCellCount() {\r\n        return 7 * this.option(\"intervalCount\")\r\n    }\r\n    _getDateByIndex(headerIndex) {\r\n        var resultDate = new Date(this._firstViewDate);\r\n        resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\r\n        return resultDate\r\n    }\r\n    _getStartViewDate() {\r\n        return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex())\r\n    }\r\n    _getIntervalDuration() {\r\n        return 7 * toMs(\"day\") * this.option(\"intervalCount\")\r\n    }\r\n    getPositionShift(timeShift, isAllDay) {\r\n        if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                cellPosition: 0\r\n            }\r\n        }\r\n        return super.getPositionShift(timeShift, isAllDay)\r\n    }\r\n    _isApplyCompactAppointmentOffset() {\r\n        if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return false\r\n        }\r\n        return super._isApplyCompactAppointmentOffset()\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\r\nexport default SchedulerWorkSpaceWeek;\r\n"]},"metadata":{},"sourceType":"module"}