{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scroll_view/ui.scrollable.native.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDxMouseWheelEvent } from \"../../events/utils/index\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport devices from \"../../core/devices\";\nimport Class from \"../../core/class\";\nimport Scrollbar from \"./ui.scrollbar\";\nvar SCROLLABLE_NATIVE = \"dxNativeScrollable\";\nvar SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\nvar SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\nvar VERTICAL = \"vertical\";\nvar HORIZONTAL = \"horizontal\";\nvar HIDE_SCROLLBAR_TIMEOUT = 500;\nvar NativeStrategy = Class.inherit({\n  ctor: function ctor(scrollable) {\n    this._init(scrollable);\n  },\n  _init: function _init(scrollable) {\n    this._component = scrollable;\n    this._$element = scrollable.$element();\n    this._$container = scrollable._$container;\n    this._$content = scrollable._$content;\n    this._direction = scrollable.option(\"direction\");\n    this._useSimulatedScrollbar = scrollable.option(\"useSimulatedScrollbar\");\n    this._showScrollbar = scrollable.option(\"showScrollbar\");\n    this.option = scrollable.option.bind(scrollable);\n    this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\n    this._isLocked = scrollable._isLocked.bind(scrollable);\n    this._isDirection = scrollable._isDirection.bind(scrollable);\n    this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\n    this._getScrollOffset = scrollable._getScrollOffset.bind(scrollable);\n    this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\n  },\n  render: function render() {\n    var device = devices.real();\n    var deviceType = device.platform;\n\n    this._$element.addClass(SCROLLABLE_NATIVE_CLASS).addClass(SCROLLABLE_NATIVE_CLASS + \"-\" + deviceType).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._showScrollbar);\n\n    if (this._showScrollbar && this._useSimulatedScrollbar) {\n      this._renderScrollbars();\n    }\n  },\n  updateBounds: noop,\n  _renderScrollbars: function _renderScrollbars() {\n    this._scrollbars = {};\n    this._hideScrollbarTimeout = 0;\n\n    this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\n\n    this._renderScrollbar(VERTICAL);\n\n    this._renderScrollbar(HORIZONTAL);\n  },\n  _renderScrollbar: function _renderScrollbar(direction) {\n    if (!this._isDirection(direction)) {\n      return;\n    }\n\n    this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\n      direction: direction,\n      expandable: this._component.option(\"scrollByThumb\")\n    });\n  },\n  handleInit: noop,\n  handleStart: noop,\n  handleMove: function handleMove(e) {\n    if (this._isLocked()) {\n      e.cancel = true;\n      return;\n    }\n\n    if (this._allowedDirection()) {\n      e.originalEvent.isScrollingEvent = true;\n    }\n  },\n  handleEnd: noop,\n  handleCancel: noop,\n  handleStop: noop,\n  _eachScrollbar: function _eachScrollbar(callback) {\n    callback = callback.bind(this);\n    each(this._scrollbars || {}, function (direction, scrollbar) {\n      callback(scrollbar, direction);\n    });\n  },\n  createActions: function createActions() {\n    this._scrollAction = this._createActionByOption(\"onScroll\");\n    this._updateAction = this._createActionByOption(\"onUpdated\");\n  },\n  _createActionArgs: function _createActionArgs() {\n    var _this$location = this.location(),\n        left = _this$location.left,\n        top = _this$location.top;\n\n    return {\n      event: this._eventForUserAction,\n      scrollOffset: this._getScrollOffset(),\n      reachedLeft: this._isReachedLeft(left),\n      reachedRight: this._isReachedRight(left),\n      reachedTop: this._isDirection(VERTICAL) ? top >= 0 : void 0,\n      reachedBottom: this._isDirection(VERTICAL) ? Math.abs(top) >= this._getMaxOffset().top : void 0\n    };\n  },\n  _isReachedLeft: function _isReachedLeft() {\n    return this._isDirection(HORIZONTAL) ? this.location().left >= 0 : void 0;\n  },\n  _isReachedRight: function _isReachedRight() {\n    return this._isDirection(HORIZONTAL) ? Math.abs(this.location().left) >= this._getMaxOffset().left : void 0;\n  },\n  handleScroll: function handleScroll(e) {\n    this._component._updateRtlConfig();\n\n    if (!this._isScrollLocationChanged()) {\n      e.stopImmediatePropagation();\n      return;\n    }\n\n    this._eventForUserAction = e;\n\n    this._moveScrollbars();\n\n    this._scrollAction(this._createActionArgs());\n\n    this._lastLocation = this.location();\n  },\n  _isScrollLocationChanged: function _isScrollLocationChanged() {\n    var currentLocation = this.location();\n    var lastLocation = this._lastLocation || {};\n    var isTopChanged = lastLocation.top !== currentLocation.top;\n    var isLeftChanged = lastLocation.left !== currentLocation.left;\n    return isTopChanged || isLeftChanged;\n  },\n  _moveScrollbars: function _moveScrollbars() {\n    this._eachScrollbar(function (scrollbar) {\n      scrollbar.moveTo(this.location());\n      scrollbar.option(\"visible\", true);\n    });\n\n    this._hideScrollbars();\n  },\n  _hideScrollbars: function _hideScrollbars() {\n    clearTimeout(this._hideScrollbarTimeout);\n    this._hideScrollbarTimeout = setTimeout(function () {\n      this._eachScrollbar(function (scrollbar) {\n        scrollbar.option(\"visible\", false);\n      });\n    }.bind(this), HIDE_SCROLLBAR_TIMEOUT);\n  },\n  location: function location() {\n    return {\n      left: -this._$container.scrollLeft(),\n      top: -this._$container.scrollTop()\n    };\n  },\n  disabledChanged: noop,\n  update: function update() {\n    this._update();\n\n    this._updateAction(this._createActionArgs());\n  },\n  _update: function _update() {\n    this._updateDimensions();\n\n    this._updateScrollbars();\n  },\n  _updateDimensions: function _updateDimensions() {\n    this._containerSize = {\n      height: this._$container.height(),\n      width: this._$container.width()\n    };\n    this._componentContentSize = {\n      height: this._component.$content().height(),\n      width: this._component.$content().width()\n    };\n    this._contentSize = {\n      height: this._$content.height(),\n      width: this._$content.width()\n    };\n  },\n  _updateScrollbars: function _updateScrollbars() {\n    this._eachScrollbar(function (scrollbar, direction) {\n      var dimension = direction === VERTICAL ? \"height\" : \"width\";\n      scrollbar.option({\n        containerSize: this._containerSize[dimension],\n        contentSize: this._componentContentSize[dimension]\n      });\n      scrollbar.update();\n    });\n  },\n  _allowedDirections: function _allowedDirections() {\n    return {\n      vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\n      horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\n    };\n  },\n  dispose: function dispose() {\n    var className = this._$element.get(0).className;\n\n    var scrollableNativeRegexp = new RegExp(SCROLLABLE_NATIVE_CLASS + \"\\\\S*\", \"g\");\n\n    if (scrollableNativeRegexp.test(className)) {\n      this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"));\n    }\n\n    eventsEngine.off(this._$element, \".\" + SCROLLABLE_NATIVE);\n    eventsEngine.off(this._$container, \".\" + SCROLLABLE_NATIVE);\n\n    this._removeScrollbars();\n\n    clearTimeout(this._hideScrollbarTimeout);\n  },\n  _removeScrollbars: function _removeScrollbars() {\n    this._eachScrollbar(function (scrollbar) {\n      scrollbar.$element().remove();\n    });\n  },\n  scrollBy: function scrollBy(distance) {\n    var location = this.location();\n\n    this._$container.scrollTop(Math.round(-location.top - distance.top));\n\n    this._$container.scrollLeft(Math.round(-location.left - distance.left));\n  },\n  validate: function validate(e) {\n    if (this.option(\"disabled\")) {\n      return false;\n    }\n\n    if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\n      return false;\n    }\n\n    return !!this._allowedDirection();\n  },\n  _isScrolledInMaxDirection: function _isScrolledInMaxDirection(e) {\n    var container = this._$container.get(0);\n\n    var result;\n\n    if (e.delta > 0) {\n      result = e.shiftKey ? !container.scrollLeft : !container.scrollTop;\n    } else if (e.shiftKey) {\n      result = container.scrollLeft >= this._getMaxOffset().left;\n    } else {\n      result = container.scrollTop >= this._getMaxOffset().top;\n    }\n\n    return result;\n  },\n  getDirection: function getDirection() {\n    return this._allowedDirection();\n  }\n});\nexport default NativeStrategy;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scroll_view/ui.scrollable.native.js"],"names":["$","eventsEngine","isDxMouseWheelEvent","noop","each","devices","Class","Scrollbar","SCROLLABLE_NATIVE","SCROLLABLE_NATIVE_CLASS","SCROLLABLE_SCROLLBAR_SIMULATED","SCROLLABLE_SCROLLBARS_HIDDEN","VERTICAL","HORIZONTAL","HIDE_SCROLLBAR_TIMEOUT","NativeStrategy","inherit","ctor","scrollable","_init","_component","_$element","$element","_$container","_$content","_direction","option","_useSimulatedScrollbar","_showScrollbar","bind","_createActionByOption","_isLocked","_isDirection","_allowedDirection","_getScrollOffset","_getMaxOffset","render","device","real","deviceType","platform","addClass","toggleClass","_renderScrollbars","updateBounds","_scrollbars","_hideScrollbarTimeout","_renderScrollbar","direction","appendTo","expandable","handleInit","handleStart","handleMove","e","cancel","originalEvent","isScrollingEvent","handleEnd","handleCancel","handleStop","_eachScrollbar","callback","scrollbar","createActions","_scrollAction","_updateAction","_createActionArgs","location","left","top","event","_eventForUserAction","scrollOffset","reachedLeft","_isReachedLeft","reachedRight","_isReachedRight","reachedTop","reachedBottom","Math","abs","handleScroll","_updateRtlConfig","_isScrollLocationChanged","stopImmediatePropagation","_moveScrollbars","_lastLocation","currentLocation","lastLocation","isTopChanged","isLeftChanged","moveTo","_hideScrollbars","clearTimeout","setTimeout","scrollLeft","scrollTop","disabledChanged","update","_update","_updateDimensions","_updateScrollbars","_containerSize","height","width","_componentContentSize","$content","_contentSize","dimension","containerSize","contentSize","_allowedDirections","vertical","horizontal","dispose","className","get","scrollableNativeRegexp","RegExp","test","removeClass","match","join","off","_removeScrollbars","remove","scrollBy","distance","round","validate","_isScrolledInMaxDirection","container","result","delta","shiftKey","getDirection"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SACIC,mBADJ,QAEO,0BAFP;AAGA,SACIC,IADJ,QAEO,yBAFP;AAGA,SACIC,IADJ,QAEO,2BAFP;AAGA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,IAAIC,iBAAiB,GAAG,oBAAxB;AACA,IAAIC,uBAAuB,GAAG,sBAA9B;AACA,IAAIC,8BAA8B,GAAG,mCAArC;AACA,IAAIC,4BAA4B,GAAG,iCAAnC;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,sBAAsB,GAAG,GAA7B;AACA,IAAIC,cAAc,GAAGT,KAAK,CAACU,OAAN,CAAc;AAC/BC,EAAAA,IAAI,EAAE,cAASC,UAAT,EAAqB;AACvB,SAAKC,KAAL,CAAWD,UAAX;AACH,GAH8B;AAI/BC,EAAAA,KAAK,EAAE,eAASD,UAAT,EAAqB;AACxB,SAAKE,UAAL,GAAkBF,UAAlB;AACA,SAAKG,SAAL,GAAiBH,UAAU,CAACI,QAAX,EAAjB;AACA,SAAKC,WAAL,GAAmBL,UAAU,CAACK,WAA9B;AACA,SAAKC,SAAL,GAAiBN,UAAU,CAACM,SAA5B;AACA,SAAKC,UAAL,GAAkBP,UAAU,CAACQ,MAAX,CAAkB,WAAlB,CAAlB;AACA,SAAKC,sBAAL,GAA8BT,UAAU,CAACQ,MAAX,CAAkB,uBAAlB,CAA9B;AACA,SAAKE,cAAL,GAAsBV,UAAU,CAACQ,MAAX,CAAkB,eAAlB,CAAtB;AACA,SAAKA,MAAL,GAAcR,UAAU,CAACQ,MAAX,CAAkBG,IAAlB,CAAuBX,UAAvB,CAAd;AACA,SAAKY,qBAAL,GAA6BZ,UAAU,CAACY,qBAAX,CAAiCD,IAAjC,CAAsCX,UAAtC,CAA7B;AACA,SAAKa,SAAL,GAAiBb,UAAU,CAACa,SAAX,CAAqBF,IAArB,CAA0BX,UAA1B,CAAjB;AACA,SAAKc,YAAL,GAAoBd,UAAU,CAACc,YAAX,CAAwBH,IAAxB,CAA6BX,UAA7B,CAApB;AACA,SAAKe,iBAAL,GAAyBf,UAAU,CAACe,iBAAX,CAA6BJ,IAA7B,CAAkCX,UAAlC,CAAzB;AACA,SAAKgB,gBAAL,GAAwBhB,UAAU,CAACgB,gBAAX,CAA4BL,IAA5B,CAAiCX,UAAjC,CAAxB;AACA,SAAKiB,aAAL,GAAqBjB,UAAU,CAACiB,aAAX,CAAyBN,IAAzB,CAA8BX,UAA9B,CAArB;AACH,GAnB8B;AAoB/BkB,EAAAA,MAAM,EAAE,kBAAW;AACf,QAAIC,MAAM,GAAGhC,OAAO,CAACiC,IAAR,EAAb;AACA,QAAIC,UAAU,GAAGF,MAAM,CAACG,QAAxB;;AACA,SAAKnB,SAAL,CAAeoB,QAAf,CAAwBhC,uBAAxB,EAAiDgC,QAAjD,CAA0DhC,uBAAuB,GAAG,GAA1B,GAAgC8B,UAA1F,EAAsGG,WAAtG,CAAkH/B,4BAAlH,EAAgJ,CAAC,KAAKiB,cAAtJ;;AACA,QAAI,KAAKA,cAAL,IAAuB,KAAKD,sBAAhC,EAAwD;AACpD,WAAKgB,iBAAL;AACH;AACJ,GA3B8B;AA4B/BC,EAAAA,YAAY,EAAEzC,IA5BiB;AA6B/BwC,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAKE,WAAL,GAAmB,EAAnB;AACA,SAAKC,qBAAL,GAA6B,CAA7B;;AACA,SAAKzB,SAAL,CAAeoB,QAAf,CAAwB/B,8BAAxB;;AACA,SAAKqC,gBAAL,CAAsBnC,QAAtB;;AACA,SAAKmC,gBAAL,CAAsBlC,UAAtB;AACH,GAnC8B;AAoC/BkC,EAAAA,gBAAgB,EAAE,0BAASC,SAAT,EAAoB;AAClC,QAAI,CAAC,KAAKhB,YAAL,CAAkBgB,SAAlB,CAAL,EAAmC;AAC/B;AACH;;AACD,SAAKH,WAAL,CAAiBG,SAAjB,IAA8B,IAAIzC,SAAJ,CAAcP,CAAC,CAAC,OAAD,CAAD,CAAWiD,QAAX,CAAoB,KAAK5B,SAAzB,CAAd,EAAmD;AAC7E2B,MAAAA,SAAS,EAAEA,SADkE;AAE7EE,MAAAA,UAAU,EAAE,KAAK9B,UAAL,CAAgBM,MAAhB,CAAuB,eAAvB;AAFiE,KAAnD,CAA9B;AAIH,GA5C8B;AA6C/ByB,EAAAA,UAAU,EAAEhD,IA7CmB;AA8C/BiD,EAAAA,WAAW,EAAEjD,IA9CkB;AA+C/BkD,EAAAA,UAAU,EAAE,oBAASC,CAAT,EAAY;AACpB,QAAI,KAAKvB,SAAL,EAAJ,EAAsB;AAClBuB,MAAAA,CAAC,CAACC,MAAF,GAAW,IAAX;AACA;AACH;;AACD,QAAI,KAAKtB,iBAAL,EAAJ,EAA8B;AAC1BqB,MAAAA,CAAC,CAACE,aAAF,CAAgBC,gBAAhB,GAAmC,IAAnC;AACH;AACJ,GAvD8B;AAwD/BC,EAAAA,SAAS,EAAEvD,IAxDoB;AAyD/BwD,EAAAA,YAAY,EAAExD,IAzDiB;AA0D/ByD,EAAAA,UAAU,EAAEzD,IA1DmB;AA2D/B0D,EAAAA,cAAc,EAAE,wBAASC,QAAT,EAAmB;AAC/BA,IAAAA,QAAQ,GAAGA,QAAQ,CAACjC,IAAT,CAAc,IAAd,CAAX;AACAzB,IAAAA,IAAI,CAAC,KAAKyC,WAAL,IAAoB,EAArB,EAA0B,UAASG,SAAT,EAAoBe,SAApB,EAA+B;AACzDD,MAAAA,QAAQ,CAACC,SAAD,EAAYf,SAAZ,CAAR;AACH,KAFG,CAAJ;AAGH,GAhE8B;AAiE/BgB,EAAAA,aAAa,EAAE,yBAAW;AACtB,SAAKC,aAAL,GAAqB,KAAKnC,qBAAL,CAA2B,UAA3B,CAArB;AACA,SAAKoC,aAAL,GAAqB,KAAKpC,qBAAL,CAA2B,WAA3B,CAArB;AACH,GApE8B;AAqE/BqC,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,yBAGI,KAAKC,QAAL,EAHJ;AAAA,QACUC,IADV,kBACIA,IADJ;AAAA,QAESC,GAFT,kBAEIA,GAFJ;;AAIA,WAAO;AACHC,MAAAA,KAAK,EAAE,KAAKC,mBADT;AAEHC,MAAAA,YAAY,EAAE,KAAKvC,gBAAL,EAFX;AAGHwC,MAAAA,WAAW,EAAE,KAAKC,cAAL,CAAoBN,IAApB,CAHV;AAIHO,MAAAA,YAAY,EAAE,KAAKC,eAAL,CAAqBR,IAArB,CAJX;AAKHS,MAAAA,UAAU,EAAE,KAAK9C,YAAL,CAAkBpB,QAAlB,IAA8B0D,GAAG,IAAI,CAArC,GAAyC,KAAK,CALvD;AAMHS,MAAAA,aAAa,EAAE,KAAK/C,YAAL,CAAkBpB,QAAlB,IAA8BoE,IAAI,CAACC,GAAL,CAASX,GAAT,KAAiB,KAAKnC,aAAL,GAAqBmC,GAApE,GAA0E,KAAK;AAN3F,KAAP;AAQH,GAlF8B;AAmF/BK,EAAAA,cAAc,EAAE,0BAAW;AACvB,WAAO,KAAK3C,YAAL,CAAkBnB,UAAlB,IAAgC,KAAKuD,QAAL,GAAgBC,IAAhB,IAAwB,CAAxD,GAA4D,KAAK,CAAxE;AACH,GArF8B;AAsF/BQ,EAAAA,eAAe,EAAE,2BAAW;AACxB,WAAO,KAAK7C,YAAL,CAAkBnB,UAAlB,IAAgCmE,IAAI,CAACC,GAAL,CAAS,KAAKb,QAAL,GAAgBC,IAAzB,KAAkC,KAAKlC,aAAL,GAAqBkC,IAAvF,GAA8F,KAAK,CAA1G;AACH,GAxF8B;AAyF/Ba,EAAAA,YAAY,EAAE,sBAAS5B,CAAT,EAAY;AACtB,SAAKlC,UAAL,CAAgB+D,gBAAhB;;AACA,QAAI,CAAC,KAAKC,wBAAL,EAAL,EAAsC;AAClC9B,MAAAA,CAAC,CAAC+B,wBAAF;AACA;AACH;;AACD,SAAKb,mBAAL,GAA2BlB,CAA3B;;AACA,SAAKgC,eAAL;;AACA,SAAKrB,aAAL,CAAmB,KAAKE,iBAAL,EAAnB;;AACA,SAAKoB,aAAL,GAAqB,KAAKnB,QAAL,EAArB;AACH,GAnG8B;AAoG/BgB,EAAAA,wBAAwB,EAAE,oCAAW;AACjC,QAAII,eAAe,GAAG,KAAKpB,QAAL,EAAtB;AACA,QAAIqB,YAAY,GAAG,KAAKF,aAAL,IAAsB,EAAzC;AACA,QAAIG,YAAY,GAAGD,YAAY,CAACnB,GAAb,KAAqBkB,eAAe,CAAClB,GAAxD;AACA,QAAIqB,aAAa,GAAGF,YAAY,CAACpB,IAAb,KAAsBmB,eAAe,CAACnB,IAA1D;AACA,WAAOqB,YAAY,IAAIC,aAAvB;AACH,GA1G8B;AA2G/BL,EAAAA,eAAe,EAAE,2BAAW;AACxB,SAAKzB,cAAL,CAAqB,UAASE,SAAT,EAAoB;AACrCA,MAAAA,SAAS,CAAC6B,MAAV,CAAiB,KAAKxB,QAAL,EAAjB;AACAL,MAAAA,SAAS,CAACrC,MAAV,CAAiB,SAAjB,EAA4B,IAA5B;AACH,KAHD;;AAIA,SAAKmE,eAAL;AACH,GAjH8B;AAkH/BA,EAAAA,eAAe,EAAE,2BAAW;AACxBC,IAAAA,YAAY,CAAC,KAAKhD,qBAAN,CAAZ;AACA,SAAKA,qBAAL,GAA6BiD,UAAU,CAAC,YAAW;AAC/C,WAAKlC,cAAL,CAAqB,UAASE,SAAT,EAAoB;AACrCA,QAAAA,SAAS,CAACrC,MAAV,CAAiB,SAAjB,EAA4B,KAA5B;AACH,OAFD;AAGH,KAJuC,CAItCG,IAJsC,CAIjC,IAJiC,CAAD,EAIzBf,sBAJyB,CAAvC;AAKH,GAzH8B;AA0H/BsD,EAAAA,QAAQ,EAAE,oBAAW;AACjB,WAAO;AACHC,MAAAA,IAAI,EAAE,CAAC,KAAK9C,WAAL,CAAiByE,UAAjB,EADJ;AAEH1B,MAAAA,GAAG,EAAE,CAAC,KAAK/C,WAAL,CAAiB0E,SAAjB;AAFH,KAAP;AAIH,GA/H8B;AAgI/BC,EAAAA,eAAe,EAAE/F,IAhIc;AAiI/BgG,EAAAA,MAAM,EAAE,kBAAW;AACf,SAAKC,OAAL;;AACA,SAAKlC,aAAL,CAAmB,KAAKC,iBAAL,EAAnB;AACH,GApI8B;AAqI/BiC,EAAAA,OAAO,EAAE,mBAAW;AAChB,SAAKC,iBAAL;;AACA,SAAKC,iBAAL;AACH,GAxI8B;AAyI/BD,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAKE,cAAL,GAAsB;AAClBC,MAAAA,MAAM,EAAE,KAAKjF,WAAL,CAAiBiF,MAAjB,EADU;AAElBC,MAAAA,KAAK,EAAE,KAAKlF,WAAL,CAAiBkF,KAAjB;AAFW,KAAtB;AAIA,SAAKC,qBAAL,GAA6B;AACzBF,MAAAA,MAAM,EAAE,KAAKpF,UAAL,CAAgBuF,QAAhB,GAA2BH,MAA3B,EADiB;AAEzBC,MAAAA,KAAK,EAAE,KAAKrF,UAAL,CAAgBuF,QAAhB,GAA2BF,KAA3B;AAFkB,KAA7B;AAIA,SAAKG,YAAL,GAAoB;AAChBJ,MAAAA,MAAM,EAAE,KAAKhF,SAAL,CAAegF,MAAf,EADQ;AAEhBC,MAAAA,KAAK,EAAE,KAAKjF,SAAL,CAAeiF,KAAf;AAFS,KAApB;AAIH,GAtJ8B;AAuJ/BH,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAKzC,cAAL,CAAqB,UAASE,SAAT,EAAoBf,SAApB,EAA+B;AAChD,UAAI6D,SAAS,GAAG7D,SAAS,KAAKpC,QAAd,GAAyB,QAAzB,GAAoC,OAApD;AACAmD,MAAAA,SAAS,CAACrC,MAAV,CAAiB;AACboF,QAAAA,aAAa,EAAE,KAAKP,cAAL,CAAoBM,SAApB,CADF;AAEbE,QAAAA,WAAW,EAAE,KAAKL,qBAAL,CAA2BG,SAA3B;AAFA,OAAjB;AAIA9C,MAAAA,SAAS,CAACoC,MAAV;AACH,KAPD;AAQH,GAhK8B;AAiK/Ba,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,WAAO;AACHC,MAAAA,QAAQ,EAAE,KAAKjF,YAAL,CAAkBpB,QAAlB,KAA+B,KAAKgG,YAAL,CAAkBJ,MAAlB,GAA2B,KAAKD,cAAL,CAAoBC,MADrF;AAEHU,MAAAA,UAAU,EAAE,KAAKlF,YAAL,CAAkBnB,UAAlB,KAAiC,KAAK+F,YAAL,CAAkBH,KAAlB,GAA0B,KAAKF,cAAL,CAAoBE;AAFxF,KAAP;AAIH,GAtK8B;AAuK/BU,EAAAA,OAAO,EAAE,mBAAW;AAChB,QAAIC,SAAS,GAAG,KAAK/F,SAAL,CAAegG,GAAf,CAAmB,CAAnB,EAAsBD,SAAtC;;AACA,QAAIE,sBAAsB,GAAG,IAAIC,MAAJ,CAAW9G,uBAAuB,GAAG,MAArC,EAA6C,GAA7C,CAA7B;;AACA,QAAI6G,sBAAsB,CAACE,IAAvB,CAA4BJ,SAA5B,CAAJ,EAA4C;AACxC,WAAK/F,SAAL,CAAeoG,WAAf,CAA2BL,SAAS,CAACM,KAAV,CAAgBJ,sBAAhB,EAAwCK,IAAxC,CAA6C,GAA7C,CAA3B;AACH;;AACD1H,IAAAA,YAAY,CAAC2H,GAAb,CAAiB,KAAKvG,SAAtB,EAAiC,MAAMb,iBAAvC;AACAP,IAAAA,YAAY,CAAC2H,GAAb,CAAiB,KAAKrG,WAAtB,EAAmC,MAAMf,iBAAzC;;AACA,SAAKqH,iBAAL;;AACA/B,IAAAA,YAAY,CAAC,KAAKhD,qBAAN,CAAZ;AACH,GAjL8B;AAkL/B+E,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAKhE,cAAL,CAAqB,UAASE,SAAT,EAAoB;AACrCA,MAAAA,SAAS,CAACzC,QAAV,GAAqBwG,MAArB;AACH,KAFD;AAGH,GAtL8B;AAuL/BC,EAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AACzB,QAAI5D,QAAQ,GAAG,KAAKA,QAAL,EAAf;;AACA,SAAK7C,WAAL,CAAiB0E,SAAjB,CAA2BjB,IAAI,CAACiD,KAAL,CAAW,CAAC7D,QAAQ,CAACE,GAAV,GAAgB0D,QAAQ,CAAC1D,GAApC,CAA3B;;AACA,SAAK/C,WAAL,CAAiByE,UAAjB,CAA4BhB,IAAI,CAACiD,KAAL,CAAW,CAAC7D,QAAQ,CAACC,IAAV,GAAiB2D,QAAQ,CAAC3D,IAArC,CAA5B;AACH,GA3L8B;AA4L/B6D,EAAAA,QAAQ,EAAE,kBAAS5E,CAAT,EAAY;AAClB,QAAI,KAAK5B,MAAL,CAAY,UAAZ,CAAJ,EAA6B;AACzB,aAAO,KAAP;AACH;;AACD,QAAIxB,mBAAmB,CAACoD,CAAD,CAAnB,IAA0B,KAAK6E,yBAAL,CAA+B7E,CAA/B,CAA9B,EAAiE;AAC7D,aAAO,KAAP;AACH;;AACD,WAAO,CAAC,CAAC,KAAKrB,iBAAL,EAAT;AACH,GApM8B;AAqM/BkG,EAAAA,yBArM+B,qCAqML7E,CArMK,EAqMF;AACzB,QAAI8E,SAAS,GAAG,KAAK7G,WAAL,CAAiB8F,GAAjB,CAAqB,CAArB,CAAhB;;AACA,QAAIgB,MAAJ;;AACA,QAAI/E,CAAC,CAACgF,KAAF,GAAU,CAAd,EAAiB;AACbD,MAAAA,MAAM,GAAG/E,CAAC,CAACiF,QAAF,GAAa,CAACH,SAAS,CAACpC,UAAxB,GAAqC,CAACoC,SAAS,CAACnC,SAAzD;AACH,KAFD,MAEO,IAAI3C,CAAC,CAACiF,QAAN,EAAgB;AACnBF,MAAAA,MAAM,GAAGD,SAAS,CAACpC,UAAV,IAAwB,KAAK7D,aAAL,GAAqBkC,IAAtD;AACH,KAFM,MAEA;AACHgE,MAAAA,MAAM,GAAGD,SAAS,CAACnC,SAAV,IAAuB,KAAK9D,aAAL,GAAqBmC,GAArD;AACH;;AACD,WAAO+D,MAAP;AACH,GAhN8B;AAiN/BG,EAAAA,YAAY,EAAE,wBAAW;AACrB,WAAO,KAAKvG,iBAAL,EAAP;AACH;AAnN8B,CAAd,CAArB;AAqNA,eAAelB,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scroll_view/ui.scrollable.native.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDxMouseWheelEvent\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport Class from \"../../core/class\";\r\nimport Scrollbar from \"./ui.scrollbar\";\r\nvar SCROLLABLE_NATIVE = \"dxNativeScrollable\";\r\nvar SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\r\nvar SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\r\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\r\nvar VERTICAL = \"vertical\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar HIDE_SCROLLBAR_TIMEOUT = 500;\r\nvar NativeStrategy = Class.inherit({\r\n    ctor: function(scrollable) {\r\n        this._init(scrollable)\r\n    },\r\n    _init: function(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = scrollable._$container;\r\n        this._$content = scrollable._$content;\r\n        this._direction = scrollable.option(\"direction\");\r\n        this._useSimulatedScrollbar = scrollable.option(\"useSimulatedScrollbar\");\r\n        this._showScrollbar = scrollable.option(\"showScrollbar\");\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getScrollOffset = scrollable._getScrollOffset.bind(scrollable);\r\n        this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable)\r\n    },\r\n    render: function() {\r\n        var device = devices.real();\r\n        var deviceType = device.platform;\r\n        this._$element.addClass(SCROLLABLE_NATIVE_CLASS).addClass(SCROLLABLE_NATIVE_CLASS + \"-\" + deviceType).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._showScrollbar);\r\n        if (this._showScrollbar && this._useSimulatedScrollbar) {\r\n            this._renderScrollbars()\r\n        }\r\n    },\r\n    updateBounds: noop,\r\n    _renderScrollbars: function() {\r\n        this._scrollbars = {};\r\n        this._hideScrollbarTimeout = 0;\r\n        this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\r\n        this._renderScrollbar(VERTICAL);\r\n        this._renderScrollbar(HORIZONTAL)\r\n    },\r\n    _renderScrollbar: function(direction) {\r\n        if (!this._isDirection(direction)) {\r\n            return\r\n        }\r\n        this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\r\n            direction: direction,\r\n            expandable: this._component.option(\"scrollByThumb\")\r\n        })\r\n    },\r\n    handleInit: noop,\r\n    handleStart: noop,\r\n    handleMove: function(e) {\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._allowedDirection()) {\r\n            e.originalEvent.isScrollingEvent = true\r\n        }\r\n    },\r\n    handleEnd: noop,\r\n    handleCancel: noop,\r\n    handleStop: noop,\r\n    _eachScrollbar: function(callback) {\r\n        callback = callback.bind(this);\r\n        each(this._scrollbars || {}, (function(direction, scrollbar) {\r\n            callback(scrollbar, direction)\r\n        }))\r\n    },\r\n    createActions: function() {\r\n        this._scrollAction = this._createActionByOption(\"onScroll\");\r\n        this._updateAction = this._createActionByOption(\"onUpdated\")\r\n    },\r\n    _createActionArgs: function() {\r\n        var {\r\n            left: left,\r\n            top: top\r\n        } = this.location();\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._getScrollOffset(),\r\n            reachedLeft: this._isReachedLeft(left),\r\n            reachedRight: this._isReachedRight(left),\r\n            reachedTop: this._isDirection(VERTICAL) ? top >= 0 : void 0,\r\n            reachedBottom: this._isDirection(VERTICAL) ? Math.abs(top) >= this._getMaxOffset().top : void 0\r\n        }\r\n    },\r\n    _isReachedLeft: function() {\r\n        return this._isDirection(HORIZONTAL) ? this.location().left >= 0 : void 0\r\n    },\r\n    _isReachedRight: function() {\r\n        return this._isDirection(HORIZONTAL) ? Math.abs(this.location().left) >= this._getMaxOffset().left : void 0\r\n    },\r\n    handleScroll: function(e) {\r\n        this._component._updateRtlConfig();\r\n        if (!this._isScrollLocationChanged()) {\r\n            e.stopImmediatePropagation();\r\n            return\r\n        }\r\n        this._eventForUserAction = e;\r\n        this._moveScrollbars();\r\n        this._scrollAction(this._createActionArgs());\r\n        this._lastLocation = this.location()\r\n    },\r\n    _isScrollLocationChanged: function() {\r\n        var currentLocation = this.location();\r\n        var lastLocation = this._lastLocation || {};\r\n        var isTopChanged = lastLocation.top !== currentLocation.top;\r\n        var isLeftChanged = lastLocation.left !== currentLocation.left;\r\n        return isTopChanged || isLeftChanged\r\n    },\r\n    _moveScrollbars: function() {\r\n        this._eachScrollbar((function(scrollbar) {\r\n            scrollbar.moveTo(this.location());\r\n            scrollbar.option(\"visible\", true)\r\n        }));\r\n        this._hideScrollbars()\r\n    },\r\n    _hideScrollbars: function() {\r\n        clearTimeout(this._hideScrollbarTimeout);\r\n        this._hideScrollbarTimeout = setTimeout(function() {\r\n            this._eachScrollbar((function(scrollbar) {\r\n                scrollbar.option(\"visible\", false)\r\n            }))\r\n        }.bind(this), HIDE_SCROLLBAR_TIMEOUT)\r\n    },\r\n    location: function() {\r\n        return {\r\n            left: -this._$container.scrollLeft(),\r\n            top: -this._$container.scrollTop()\r\n        }\r\n    },\r\n    disabledChanged: noop,\r\n    update: function() {\r\n        this._update();\r\n        this._updateAction(this._createActionArgs())\r\n    },\r\n    _update: function() {\r\n        this._updateDimensions();\r\n        this._updateScrollbars()\r\n    },\r\n    _updateDimensions: function() {\r\n        this._containerSize = {\r\n            height: this._$container.height(),\r\n            width: this._$container.width()\r\n        };\r\n        this._componentContentSize = {\r\n            height: this._component.$content().height(),\r\n            width: this._component.$content().width()\r\n        };\r\n        this._contentSize = {\r\n            height: this._$content.height(),\r\n            width: this._$content.width()\r\n        }\r\n    },\r\n    _updateScrollbars: function() {\r\n        this._eachScrollbar((function(scrollbar, direction) {\r\n            var dimension = direction === VERTICAL ? \"height\" : \"width\";\r\n            scrollbar.option({\r\n                containerSize: this._containerSize[dimension],\r\n                contentSize: this._componentContentSize[dimension]\r\n            });\r\n            scrollbar.update()\r\n        }))\r\n    },\r\n    _allowedDirections: function() {\r\n        return {\r\n            vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\r\n            horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\r\n        }\r\n    },\r\n    dispose: function() {\r\n        var className = this._$element.get(0).className;\r\n        var scrollableNativeRegexp = new RegExp(SCROLLABLE_NATIVE_CLASS + \"\\\\S*\", \"g\");\r\n        if (scrollableNativeRegexp.test(className)) {\r\n            this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"))\r\n        }\r\n        eventsEngine.off(this._$element, \".\" + SCROLLABLE_NATIVE);\r\n        eventsEngine.off(this._$container, \".\" + SCROLLABLE_NATIVE);\r\n        this._removeScrollbars();\r\n        clearTimeout(this._hideScrollbarTimeout)\r\n    },\r\n    _removeScrollbars: function() {\r\n        this._eachScrollbar((function(scrollbar) {\r\n            scrollbar.$element().remove()\r\n        }))\r\n    },\r\n    scrollBy: function(distance) {\r\n        var location = this.location();\r\n        this._$container.scrollTop(Math.round(-location.top - distance.top));\r\n        this._$container.scrollLeft(Math.round(-location.left - distance.left))\r\n    },\r\n    validate: function(e) {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\r\n            return false\r\n        }\r\n        return !!this._allowedDirection()\r\n    },\r\n    _isScrolledInMaxDirection(e) {\r\n        var container = this._$container.get(0);\r\n        var result;\r\n        if (e.delta > 0) {\r\n            result = e.shiftKey ? !container.scrollLeft : !container.scrollTop\r\n        } else if (e.shiftKey) {\r\n            result = container.scrollLeft >= this._getMaxOffset().left\r\n        } else {\r\n            result = container.scrollTop >= this._getMaxOffset().top\r\n        }\r\n        return result\r\n    },\r\n    getDirection: function() {\r\n        return this._allowedDirection()\r\n    }\r\n});\r\nexport default NativeStrategy;\r\n"]},"metadata":{},"sourceType":"module"}