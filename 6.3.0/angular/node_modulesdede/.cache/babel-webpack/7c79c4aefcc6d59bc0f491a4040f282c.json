{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/file_management/provider_base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter } from \"../core/utils/data\";\nimport { ensureDefined } from \"../core/utils/common\";\nimport dateSerialization from \"../core/utils/date_serialization\";\nimport { each } from \"../core/utils/iterator\";\nimport { isPromise } from \"../core/utils/type\";\nimport { Deferred, fromPromise } from \"../core/utils/deferred\";\nimport FileSystemItem from \"./file_system_item\";\nvar DEFAULT_FILE_UPLOAD_CHUNK_SIZE = 2e5;\n\nvar FileSystemProviderBase = /*#__PURE__*/function () {\n  function FileSystemProviderBase(options) {\n    _classCallCheck(this, FileSystemProviderBase);\n\n    options = ensureDefined(options, {});\n    this._keyGetter = compileGetter(this._getKeyExpr(options));\n    this._nameGetter = compileGetter(this._getNameExpr(options));\n    this._isDirGetter = compileGetter(this._getIsDirExpr(options));\n    this._sizeGetter = compileGetter(this._getSizeExpr(options));\n    this._dateModifiedGetter = compileGetter(this._getDateModifiedExpr(options));\n    this._thumbnailGetter = compileGetter(options.thumbnailExpr || \"thumbnail\");\n  }\n\n  _createClass(FileSystemProviderBase, [{\n    key: \"getItems\",\n    value: function getItems(parentDirectory) {\n      return [];\n    }\n  }, {\n    key: \"renameItem\",\n    value: function renameItem(item, name) {}\n  }, {\n    key: \"createDirectory\",\n    value: function createDirectory(parentDirectory, name) {}\n  }, {\n    key: \"deleteItems\",\n    value: function deleteItems(items) {}\n  }, {\n    key: \"moveItems\",\n    value: function moveItems(items, destinationDirectory) {}\n  }, {\n    key: \"copyItems\",\n    value: function copyItems(items, destinationDirectory) {}\n  }, {\n    key: \"uploadFileChunk\",\n    value: function uploadFileChunk(fileData, chunksInfo, destinationDirectory) {}\n  }, {\n    key: \"abortFileUpload\",\n    value: function abortFileUpload(fileData, chunksInfo, destinationDirectory) {}\n  }, {\n    key: \"downloadItems\",\n    value: function downloadItems(items) {}\n  }, {\n    key: \"getItemsContent\",\n    value: function getItemsContent(items) {}\n  }, {\n    key: \"getFileUploadChunkSize\",\n    value: function getFileUploadChunkSize() {\n      return DEFAULT_FILE_UPLOAD_CHUNK_SIZE;\n    }\n  }, {\n    key: \"_convertDataObjectsToFileItems\",\n    value: function _convertDataObjectsToFileItems(entries, pathInfo) {\n      var _this = this;\n\n      var result = [];\n      each(entries, function (_, entry) {\n        var fileItem = _this._createFileItem(entry, pathInfo);\n\n        result.push(fileItem);\n      });\n      return result;\n    }\n  }, {\n    key: \"_createFileItem\",\n    value: function _createFileItem(dataObj, pathInfo) {\n      var key = this._keyGetter(dataObj);\n\n      var fileItem = new FileSystemItem(pathInfo, this._nameGetter(dataObj), !!this._isDirGetter(dataObj), key);\n      fileItem.size = this._sizeGetter(dataObj);\n\n      if (void 0 === fileItem.size) {\n        fileItem.size = 0;\n      }\n\n      fileItem.dateModified = dateSerialization.deserializeDate(this._dateModifiedGetter(dataObj));\n\n      if (void 0 === fileItem.dateModified) {\n        fileItem.dateModified = new Date();\n      }\n\n      if (fileItem.isDirectory) {\n        fileItem.hasSubDirectories = this._hasSubDirs(dataObj);\n      }\n\n      if (!key) {\n        fileItem.key = fileItem.relativeName;\n      }\n\n      fileItem.thumbnail = this._thumbnailGetter(dataObj) || \"\";\n      fileItem.dataItem = dataObj;\n      return fileItem;\n    }\n  }, {\n    key: \"_hasSubDirs\",\n    value: function _hasSubDirs(dataObj) {\n      return true;\n    }\n  }, {\n    key: \"_getKeyExpr\",\n    value: function _getKeyExpr(options) {\n      return options.keyExpr || this._defaultKeyExpr;\n    }\n  }, {\n    key: \"_defaultKeyExpr\",\n    value: function _defaultKeyExpr(fileItem) {\n      if (2 === arguments.length) {\n        fileItem.__KEY__ = arguments[1];\n        return;\n      }\n\n      return Object.prototype.hasOwnProperty.call(fileItem, \"__KEY__\") ? fileItem.__KEY__ : null;\n    }\n  }, {\n    key: \"_getNameExpr\",\n    value: function _getNameExpr(options) {\n      return options.nameExpr || \"name\";\n    }\n  }, {\n    key: \"_getIsDirExpr\",\n    value: function _getIsDirExpr(options) {\n      return options.isDirectoryExpr || \"isDirectory\";\n    }\n  }, {\n    key: \"_getSizeExpr\",\n    value: function _getSizeExpr(options) {\n      return options.sizeExpr || \"size\";\n    }\n  }, {\n    key: \"_getDateModifiedExpr\",\n    value: function _getDateModifiedExpr(options) {\n      return options.dateModifiedExpr || \"dateModified\";\n    }\n  }, {\n    key: \"_executeActionAsDeferred\",\n    value: function _executeActionAsDeferred(action, keepResult) {\n      var deferred = new Deferred();\n\n      try {\n        var result = action();\n\n        if (isPromise(result)) {\n          fromPromise(result).done(function (userResult) {\n            return deferred.resolve(keepResult && userResult || void 0);\n          }).fail(function (error) {\n            return deferred.reject(error);\n          });\n        } else {\n          deferred.resolve(keepResult && result || void 0);\n        }\n      } catch (error) {\n        return deferred.reject(error);\n      }\n\n      return deferred.promise();\n    }\n  }]);\n\n  return FileSystemProviderBase;\n}();\n\nexport default FileSystemProviderBase;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/file_management/provider_base.js"],"names":["compileGetter","ensureDefined","dateSerialization","each","isPromise","Deferred","fromPromise","FileSystemItem","DEFAULT_FILE_UPLOAD_CHUNK_SIZE","FileSystemProviderBase","options","_keyGetter","_getKeyExpr","_nameGetter","_getNameExpr","_isDirGetter","_getIsDirExpr","_sizeGetter","_getSizeExpr","_dateModifiedGetter","_getDateModifiedExpr","_thumbnailGetter","thumbnailExpr","parentDirectory","item","name","items","destinationDirectory","fileData","chunksInfo","entries","pathInfo","result","_","entry","fileItem","_createFileItem","push","dataObj","key","size","dateModified","deserializeDate","Date","isDirectory","hasSubDirectories","_hasSubDirs","relativeName","thumbnail","dataItem","keyExpr","_defaultKeyExpr","arguments","length","__KEY__","Object","prototype","hasOwnProperty","call","nameExpr","isDirectoryExpr","sizeExpr","dateModifiedExpr","action","keepResult","deferred","done","userResult","resolve","fail","error","reject","promise"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/file_management/provider_base.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nimport dateSerialization from \"../core/utils/date_serialization\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    isPromise\r\n} from \"../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    fromPromise\r\n} from \"../core/utils/deferred\";\r\nimport FileSystemItem from \"./file_system_item\";\r\nvar DEFAULT_FILE_UPLOAD_CHUNK_SIZE = 2e5;\r\nclass FileSystemProviderBase {\r\n    constructor(options) {\r\n        options = ensureDefined(options, {});\r\n        this._keyGetter = compileGetter(this._getKeyExpr(options));\r\n        this._nameGetter = compileGetter(this._getNameExpr(options));\r\n        this._isDirGetter = compileGetter(this._getIsDirExpr(options));\r\n        this._sizeGetter = compileGetter(this._getSizeExpr(options));\r\n        this._dateModifiedGetter = compileGetter(this._getDateModifiedExpr(options));\r\n        this._thumbnailGetter = compileGetter(options.thumbnailExpr || \"thumbnail\")\r\n    }\r\n    getItems(parentDirectory) {\r\n        return []\r\n    }\r\n    renameItem(item, name) {}\r\n    createDirectory(parentDirectory, name) {}\r\n    deleteItems(items) {}\r\n    moveItems(items, destinationDirectory) {}\r\n    copyItems(items, destinationDirectory) {}\r\n    uploadFileChunk(fileData, chunksInfo, destinationDirectory) {}\r\n    abortFileUpload(fileData, chunksInfo, destinationDirectory) {}\r\n    downloadItems(items) {}\r\n    getItemsContent(items) {}\r\n    getFileUploadChunkSize() {\r\n        return DEFAULT_FILE_UPLOAD_CHUNK_SIZE\r\n    }\r\n    _convertDataObjectsToFileItems(entries, pathInfo) {\r\n        var result = [];\r\n        each(entries, (_, entry) => {\r\n            var fileItem = this._createFileItem(entry, pathInfo);\r\n            result.push(fileItem)\r\n        });\r\n        return result\r\n    }\r\n    _createFileItem(dataObj, pathInfo) {\r\n        var key = this._keyGetter(dataObj);\r\n        var fileItem = new FileSystemItem(pathInfo, this._nameGetter(dataObj), !!this._isDirGetter(dataObj), key);\r\n        fileItem.size = this._sizeGetter(dataObj);\r\n        if (void 0 === fileItem.size) {\r\n            fileItem.size = 0\r\n        }\r\n        fileItem.dateModified = dateSerialization.deserializeDate(this._dateModifiedGetter(dataObj));\r\n        if (void 0 === fileItem.dateModified) {\r\n            fileItem.dateModified = new Date\r\n        }\r\n        if (fileItem.isDirectory) {\r\n            fileItem.hasSubDirectories = this._hasSubDirs(dataObj)\r\n        }\r\n        if (!key) {\r\n            fileItem.key = fileItem.relativeName\r\n        }\r\n        fileItem.thumbnail = this._thumbnailGetter(dataObj) || \"\";\r\n        fileItem.dataItem = dataObj;\r\n        return fileItem\r\n    }\r\n    _hasSubDirs(dataObj) {\r\n        return true\r\n    }\r\n    _getKeyExpr(options) {\r\n        return options.keyExpr || this._defaultKeyExpr\r\n    }\r\n    _defaultKeyExpr(fileItem) {\r\n        if (2 === arguments.length) {\r\n            fileItem.__KEY__ = arguments[1];\r\n            return\r\n        }\r\n        return Object.prototype.hasOwnProperty.call(fileItem, \"__KEY__\") ? fileItem.__KEY__ : null\r\n    }\r\n    _getNameExpr(options) {\r\n        return options.nameExpr || \"name\"\r\n    }\r\n    _getIsDirExpr(options) {\r\n        return options.isDirectoryExpr || \"isDirectory\"\r\n    }\r\n    _getSizeExpr(options) {\r\n        return options.sizeExpr || \"size\"\r\n    }\r\n    _getDateModifiedExpr(options) {\r\n        return options.dateModifiedExpr || \"dateModified\"\r\n    }\r\n    _executeActionAsDeferred(action, keepResult) {\r\n        var deferred = new Deferred;\r\n        try {\r\n            var result = action();\r\n            if (isPromise(result)) {\r\n                fromPromise(result).done(userResult => deferred.resolve(keepResult && userResult || void 0)).fail(error => deferred.reject(error))\r\n            } else {\r\n                deferred.resolve(keepResult && result || void 0)\r\n            }\r\n        } catch (error) {\r\n            return deferred.reject(error)\r\n        }\r\n        return deferred.promise()\r\n    }\r\n}\r\nexport default FileSystemProviderBase;\r\n"]},"metadata":{},"sourceType":"module"}