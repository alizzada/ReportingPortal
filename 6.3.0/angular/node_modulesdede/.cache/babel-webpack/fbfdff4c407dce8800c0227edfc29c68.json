{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/sankey/sankey.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { COLOR_MODE_GRADIENT, COLOR_MODE_SOURCE, COLOR_MODE_TARGET } from \"./constants\";\nimport { noop } from \"../../core/utils/common\";\nimport Node from \"./node_item\";\nimport Link from \"./link_item\";\nimport { layout as defaultLayoutBuilder } from \"./layout\";\nimport { isString as _isString, isNumeric as _isNumber } from \"../../core/utils/type\";\nimport baseWidget from \"../core/base_widget\";\nimport componentRegistrator from \"../../core/component_registrator\";\n\nfunction moveLabel(node, labelOptions, availableLabelWidth, rect) {\n  if (node._label.getBBox().width > availableLabelWidth) {\n    node.labelText.applyEllipsis(availableLabelWidth);\n  }\n\n  var bBox = node._label.getBBox();\n\n  var verticalOffset = labelOptions.verticalOffset;\n  var horizontalOffset = labelOptions.horizontalOffset;\n  var labelOffsetY = Math.round(node.rect.y + node.rect.height / 2 - bBox.y - bBox.height / 2) + verticalOffset;\n  var labelOffsetX = node.rect.x + horizontalOffset + node.rect.width - bBox.x;\n\n  if (labelOffsetX + bBox.width >= rect[2] - rect[0]) {\n    labelOffsetX = node.rect.x - horizontalOffset - bBox.x - bBox.width;\n  }\n\n  if (labelOffsetY >= rect[3]) {\n    labelOffsetY = rect[3];\n  }\n\n  if (labelOffsetY - bBox.height < rect[1]) {\n    labelOffsetY = node.rect.y - bBox.y + verticalOffset;\n  }\n\n  node.labelText.attr({\n    translateX: labelOffsetX,\n    translateY: labelOffsetY\n  });\n}\n\nfunction getConnectedLinks(layout, nodeName, linkType) {\n  var result = [];\n  var attrName = \"in\" === linkType ? \"_to\" : \"_from\";\n  var invertedAttrName = \"in\" === linkType ? \"_from\" : \"_to\";\n  layout.links.map(function (link) {\n    return link[attrName]._name === nodeName;\n  }).forEach(function (connected, idx) {\n    connected && result.push({\n      index: idx,\n      weight: layout.links[idx]._weight,\n      node: layout.links[idx][invertedAttrName]._name\n    });\n  });\n  return result;\n}\n\nvar dxSankey = baseWidget.inherit({\n  _rootClass: \"dxs-sankey\",\n  _rootClassPrefix: \"dxs\",\n  _proxyData: [],\n  _optionChangesMap: {\n    dataSource: \"DATA_SOURCE\",\n    sortData: \"DATA_SOURCE\",\n    alignment: \"DATA_SOURCE\",\n    node: \"BUILD_LAYOUT\",\n    link: \"BUILD_LAYOUT\",\n    palette: \"BUILD_LAYOUT\",\n    paletteExtensionMode: \"BUILD_LAYOUT\"\n  },\n  _themeDependentChanges: [\"BUILD_LAYOUT\"],\n  _getDefaultSize: function _getDefaultSize() {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _themeSection: \"sankey\",\n  _fontFields: [\"label.font\"],\n  _optionChangesOrder: [\"DATA_SOURCE\"],\n  _initialChanges: [\"DATA_SOURCE\"],\n  _initCore: function _initCore() {\n    this._groupLinks = this._renderer.g().append(this._renderer.root);\n    this._groupNodes = this._renderer.g().append(this._renderer.root);\n    this._groupLabels = this._renderer.g().attr({\n      class: this._rootClassPrefix + \"-labels\"\n    }).append(this._renderer.root);\n    this._drawLabels = true;\n    this._nodes = [];\n    this._links = [];\n    this._gradients = [];\n  },\n  _disposeCore: noop,\n  _applySize: function _applySize(rect) {\n    this._rect = rect.slice();\n\n    var adaptiveLayout = this._getOption(\"adaptiveLayout\");\n\n    if (adaptiveLayout.keepLabels || this._rect[2] - this._rect[0] > adaptiveLayout.width) {\n      this._drawLabels = true;\n    } else {\n      this._drawLabels = false;\n    }\n\n    this._change([\"BUILD_LAYOUT\"]);\n\n    return this._rect;\n  },\n  _eventsMap: {\n    onNodeHoverChanged: {\n      name: \"nodeHoverChanged\"\n    },\n    onLinkHoverChanged: {\n      name: \"linkHoverChanged\"\n    }\n  },\n  _customChangesOrder: [\"BUILD_LAYOUT\", \"NODES_DRAW\", \"LINKS_DRAW\", \"LABELS\", \"DRAWN\"],\n  _dataSourceChangedHandler: function _dataSourceChangedHandler() {\n    this._requestChange([\"BUILD_LAYOUT\"]);\n  },\n  _change_DRAWN: function _change_DRAWN() {\n    this._drawn();\n  },\n  _change_DATA_SOURCE: function _change_DATA_SOURCE() {\n    this._change([\"DRAWN\"]);\n\n    this._updateDataSource();\n  },\n  _change_LABELS: function _change_LABELS() {\n    this._applyLabelsAppearance();\n  },\n  _change_BUILD_LAYOUT: function _change_BUILD_LAYOUT() {\n    this._groupNodes.clear();\n\n    this._groupLinks.clear();\n\n    this._groupLabels.clear();\n\n    this._buildLayout();\n  },\n  _change_NODES_DRAW: function _change_NODES_DRAW() {\n    var that = this;\n    var nodes = that._nodes;\n    nodes.forEach(function (node, index) {\n      var element = that._renderer.rect().attr(node.rect).append(that._groupNodes);\n\n      node.element = element;\n    });\n\n    this._applyNodesAppearance();\n  },\n  _change_LINKS_DRAW: function _change_LINKS_DRAW() {\n    var that = this;\n    var links = that._links;\n    links.forEach(function (link, index) {\n      var group = that._renderer.g().attr({\n        class: \"link\",\n        \"data-link-idx\": index\n      }).append(that._groupLinks);\n\n      link.overlayElement = that._renderer.path([], \"area\").attr({\n        d: link.d\n      }).append(group);\n      link.element = that._renderer.path([], \"area\").attr({\n        d: link.d\n      }).append(group);\n    });\n\n    this._applyLinksAppearance();\n  },\n  _suspend: function _suspend() {\n    if (!this._applyingChanges) {\n      this._suspendChanges();\n    }\n  },\n  _resume: function _resume() {\n    if (!this._applyingChanges) {\n      this._resumeChanges();\n    }\n  },\n  _showTooltip: noop,\n  hideTooltip: noop,\n  clearHover: function clearHover() {\n    this._suspend();\n\n    this._nodes.forEach(function (node) {\n      node.isHovered() && node.hover(false);\n    });\n\n    this._links.forEach(function (link) {\n      link.isHovered() && link.hover(false);\n      link.isAdjacentNodeHovered() && link.adjacentNodeHover(false);\n    });\n\n    this._resume();\n  },\n  _applyNodesAppearance: function _applyNodesAppearance() {\n    this._nodes.forEach(function (node) {\n      var state = node.getState();\n      node.element.smartAttr(node.states[state]);\n    });\n  },\n  _applyLinksAppearance: function _applyLinksAppearance() {\n    this._links.forEach(function (link) {\n      var state = link.getState();\n      link.element.smartAttr(link.states[state]);\n      link.overlayElement.smartAttr(link.overlayStates[state]);\n    });\n  },\n  _hitTestTargets: function _hitTestTargets(x, y) {\n    var that = this;\n    var data;\n\n    this._proxyData.some(function (callback) {\n      data = callback.call(that, x, y);\n\n      if (data) {\n        return true;\n      }\n    });\n\n    return data;\n  },\n  _getData: function _getData() {\n    var that = this;\n    var data = that._dataSourceItems() || [];\n\n    var sourceField = that._getOption(\"sourceField\", true);\n\n    var targetField = that._getOption(\"targetField\", true);\n\n    var weightField = that._getOption(\"weightField\", true);\n\n    var processedData = [];\n    data.forEach(function (item) {\n      var hasItemOwnProperty = Object.prototype.hasOwnProperty.bind(item);\n\n      if (!hasItemOwnProperty(sourceField)) {\n        that._incidentOccurred(\"E2007\", sourceField);\n      } else if (!hasItemOwnProperty(targetField)) {\n        that._incidentOccurred(\"E2007\", targetField);\n      } else if (!hasItemOwnProperty(weightField)) {\n        that._incidentOccurred(\"E2007\", weightField);\n      } else if (!_isString(item[sourceField])) {\n        that._incidentOccurred(\"E2008\", sourceField);\n      } else if (!_isString(item[targetField])) {\n        that._incidentOccurred(\"E2008\", targetField);\n      } else if (!_isNumber(item[weightField]) || item[weightField] <= 0) {\n        that._incidentOccurred(\"E2009\", weightField);\n      } else {\n        processedData.push([item[sourceField], item[targetField], item[weightField]]);\n      }\n    });\n    return processedData;\n  },\n  _buildLayout: function _buildLayout() {\n    var _this = this;\n\n    var that = this;\n\n    var data = that._getData();\n\n    var availableRect = this._rect;\n\n    var nodeOptions = that._getOption(\"node\");\n\n    var sortData = that._getOption(\"sortData\");\n\n    var layoutBuilder = that._getOption(\"layoutBuilder\", true) || defaultLayoutBuilder;\n    var rect = {\n      x: availableRect[0],\n      y: availableRect[1],\n      width: availableRect[2] - availableRect[0],\n      height: availableRect[3] - availableRect[1]\n    };\n    var layout = layoutBuilder.computeLayout(data, sortData, {\n      availableRect: rect,\n      nodePadding: nodeOptions.padding,\n      nodeWidth: nodeOptions.width,\n      nodeAlign: that._getOption(\"alignment\", true)\n    }, that._incidentOccurred);\n    that._layoutMap = layout;\n\n    if (!Object.prototype.hasOwnProperty.call(layout, \"error\")) {\n      var nodeColors = {};\n      var nodeIdx = 0;\n\n      var linkOptions = that._getOption(\"link\");\n\n      var totalNodesNum = layout.nodes.map(function (item) {\n        return item.length;\n      }).reduce(function (previousValue, currentValue) {\n        return previousValue + currentValue;\n      }, 0);\n\n      var palette = that._themeManager.createPalette(that._getOption(\"palette\", true), {\n        useHighlight: true,\n        extensionMode: that._getOption(\"paletteExtensionMode\", true),\n        count: totalNodesNum\n      });\n\n      that._nodes = [];\n      that._links = [];\n\n      that._gradients.forEach(function (gradient) {\n        gradient.dispose();\n      });\n\n      that._gradients = [];\n      that._shadowFilter && that._shadowFilter.dispose();\n      layout.nodes.forEach(function (cascadeNodes) {\n        cascadeNodes.forEach(function (node) {\n          var color = nodeOptions.color || palette.getNextColor();\n          var nodeItem = new Node(that, {\n            id: nodeIdx,\n            color: color,\n            rect: node,\n            options: nodeOptions,\n            linksIn: getConnectedLinks(layout, node._name, \"in\"),\n            linksOut: getConnectedLinks(layout, node._name, \"out\")\n          });\n\n          that._nodes.push(nodeItem);\n\n          nodeIdx++;\n          nodeColors[node._name] = color;\n        });\n      });\n      layout.links.forEach(function (link) {\n        var gradient = null;\n\n        if (linkOptions.colorMode === COLOR_MODE_GRADIENT) {\n          gradient = that._renderer.linearGradient([{\n            offset: \"0%\",\n            \"stop-color\": nodeColors[link._from._name]\n          }, {\n            offset: \"100%\",\n            \"stop-color\": nodeColors[link._to._name]\n          }]);\n\n          _this._gradients.push(gradient);\n        }\n\n        var color = linkOptions.color;\n\n        if (linkOptions.colorMode === COLOR_MODE_SOURCE) {\n          color = nodeColors[link._from._name];\n        } else if (linkOptions.colorMode === COLOR_MODE_TARGET) {\n          color = nodeColors[link._to._name];\n        }\n\n        var linkItem = new Link(that, {\n          d: link.d,\n          boundingRect: link._boundingRect,\n          color: color,\n          options: linkOptions,\n          connection: {\n            source: link._from._name,\n            target: link._to._name,\n            weight: link._weight\n          },\n          gradient: gradient\n        });\n\n        that._links.push(linkItem);\n      });\n\n      that._renderer.initHatching();\n\n      that._change([\"NODES_DRAW\", \"LINKS_DRAW\", \"LABELS\"]);\n    }\n\n    that._change([\"DRAWN\"]);\n  },\n  _applyLabelsAppearance: function _applyLabelsAppearance() {\n    var that = this;\n\n    var labelOptions = that._getOption(\"label\");\n\n    var availableWidth = that._rect[2] - that._rect[0];\n\n    var nodeOptions = that._getOption(\"node\");\n\n    that._shadowFilter = that._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\").attr(labelOptions.shadow);\n\n    that._groupLabels.clear();\n\n    if (that._drawLabels && labelOptions.visible) {\n      var availableLabelWidth = (availableWidth - (nodeOptions.width + labelOptions.horizontalOffset) - that._layoutMap.cascades.length * nodeOptions.width) / (that._layoutMap.cascades.length - 1) - labelOptions.horizontalOffset;\n\n      that._nodes.forEach(function (node) {\n        that._createLabel(node, labelOptions, that._shadowFilter.id);\n\n        moveLabel(node, labelOptions, availableLabelWidth, that._rect);\n      });\n\n      if (\"none\" !== labelOptions.overlappingBehavior) {\n        that._nodes.forEach(function (thisNode) {\n          var thisBox = thisNode._label.getBBox();\n\n          that._nodes.forEach(function (otherNode) {\n            var otherBox = otherNode._label.getBBox();\n\n            if (thisNode.id !== otherNode.id && defaultLayoutBuilder.overlap(thisBox, otherBox)) {\n              if (\"ellipsis\" === labelOptions.overlappingBehavior) {\n                thisNode.labelText.applyEllipsis(otherBox.x - thisBox.x);\n              } else if (\"hide\" === labelOptions.overlappingBehavior) {\n                thisNode.labelText.remove();\n              }\n            }\n          });\n        });\n      }\n    }\n  },\n  _createLabel: function _createLabel(node, labelOptions, filter) {\n    var textData = labelOptions.customizeText(node);\n    var settings = node.getLabelAttributes(labelOptions, filter);\n\n    if (textData) {\n      node._label = this._renderer.g().append(this._groupLabels);\n      node.labelText = this._renderer.text(textData).attr(settings.attr).css(settings.css);\n      node.labelText.append(node._label);\n    }\n  },\n  _getMinSize: function _getMinSize() {\n    var adaptiveLayout = this._getOption(\"adaptiveLayout\");\n\n    return [adaptiveLayout.width, adaptiveLayout.height];\n  },\n  getAllNodes: function getAllNodes() {\n    return this._nodes.slice();\n  },\n  getAllLinks: function getAllLinks() {\n    return this._links.slice();\n  }\n});\ncomponentRegistrator(\"dxSankey\", dxSankey);\nexport default dxSankey;\nimport { plugin as pluginDataSource } from \"../core/data_source\";\ndxSankey.addPlugin(pluginDataSource);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/sankey/sankey.js"],"names":["COLOR_MODE_GRADIENT","COLOR_MODE_SOURCE","COLOR_MODE_TARGET","noop","Node","Link","layout","defaultLayoutBuilder","isString","_isString","isNumeric","_isNumber","baseWidget","componentRegistrator","moveLabel","node","labelOptions","availableLabelWidth","rect","_label","getBBox","width","labelText","applyEllipsis","bBox","verticalOffset","horizontalOffset","labelOffsetY","Math","round","y","height","labelOffsetX","x","attr","translateX","translateY","getConnectedLinks","nodeName","linkType","result","attrName","invertedAttrName","links","map","link","_name","forEach","connected","idx","push","index","weight","_weight","dxSankey","inherit","_rootClass","_rootClassPrefix","_proxyData","_optionChangesMap","dataSource","sortData","alignment","palette","paletteExtensionMode","_themeDependentChanges","_getDefaultSize","_themeSection","_fontFields","_optionChangesOrder","_initialChanges","_initCore","_groupLinks","_renderer","g","append","root","_groupNodes","_groupLabels","class","_drawLabels","_nodes","_links","_gradients","_disposeCore","_applySize","_rect","slice","adaptiveLayout","_getOption","keepLabels","_change","_eventsMap","onNodeHoverChanged","name","onLinkHoverChanged","_customChangesOrder","_dataSourceChangedHandler","_requestChange","_change_DRAWN","_drawn","_change_DATA_SOURCE","_updateDataSource","_change_LABELS","_applyLabelsAppearance","_change_BUILD_LAYOUT","clear","_buildLayout","_change_NODES_DRAW","that","nodes","element","_applyNodesAppearance","_change_LINKS_DRAW","group","overlayElement","path","d","_applyLinksAppearance","_suspend","_applyingChanges","_suspendChanges","_resume","_resumeChanges","_showTooltip","hideTooltip","clearHover","isHovered","hover","isAdjacentNodeHovered","adjacentNodeHover","state","getState","smartAttr","states","overlayStates","_hitTestTargets","data","some","callback","call","_getData","_dataSourceItems","sourceField","targetField","weightField","processedData","item","hasItemOwnProperty","Object","prototype","hasOwnProperty","bind","_incidentOccurred","availableRect","nodeOptions","layoutBuilder","computeLayout","nodePadding","padding","nodeWidth","nodeAlign","_layoutMap","nodeColors","nodeIdx","linkOptions","totalNodesNum","length","reduce","previousValue","currentValue","_themeManager","createPalette","useHighlight","extensionMode","count","gradient","dispose","_shadowFilter","cascadeNodes","color","getNextColor","nodeItem","id","options","linksIn","linksOut","colorMode","linearGradient","offset","_from","_to","linkItem","boundingRect","_boundingRect","connection","source","target","initHatching","availableWidth","shadowFilter","shadow","visible","cascades","_createLabel","overlappingBehavior","thisNode","thisBox","otherNode","otherBox","overlap","remove","filter","textData","customizeText","settings","getLabelAttributes","text","css","_getMinSize","getAllNodes","getAllLinks","plugin","pluginDataSource","addPlugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/sankey/sankey.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    COLOR_MODE_GRADIENT,\r\n    COLOR_MODE_SOURCE,\r\n    COLOR_MODE_TARGET\r\n} from \"./constants\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport Node from \"./node_item\";\r\nimport Link from \"./link_item\";\r\nimport {\r\n    layout as defaultLayoutBuilder\r\n} from \"./layout\";\r\nimport {\r\n    isString as _isString,\r\n    isNumeric as _isNumber\r\n} from \"../../core/utils/type\";\r\nimport baseWidget from \"../core/base_widget\";\r\nimport componentRegistrator from \"../../core/component_registrator\";\r\n\r\nfunction moveLabel(node, labelOptions, availableLabelWidth, rect) {\r\n    if (node._label.getBBox().width > availableLabelWidth) {\r\n        node.labelText.applyEllipsis(availableLabelWidth)\r\n    }\r\n    var bBox = node._label.getBBox();\r\n    var verticalOffset = labelOptions.verticalOffset;\r\n    var horizontalOffset = labelOptions.horizontalOffset;\r\n    var labelOffsetY = Math.round(node.rect.y + node.rect.height / 2 - bBox.y - bBox.height / 2) + verticalOffset;\r\n    var labelOffsetX = node.rect.x + horizontalOffset + node.rect.width - bBox.x;\r\n    if (labelOffsetX + bBox.width >= rect[2] - rect[0]) {\r\n        labelOffsetX = node.rect.x - horizontalOffset - bBox.x - bBox.width\r\n    }\r\n    if (labelOffsetY >= rect[3]) {\r\n        labelOffsetY = rect[3]\r\n    }\r\n    if (labelOffsetY - bBox.height < rect[1]) {\r\n        labelOffsetY = node.rect.y - bBox.y + verticalOffset\r\n    }\r\n    node.labelText.attr({\r\n        translateX: labelOffsetX,\r\n        translateY: labelOffsetY\r\n    })\r\n}\r\n\r\nfunction getConnectedLinks(layout, nodeName, linkType) {\r\n    var result = [];\r\n    var attrName = \"in\" === linkType ? \"_to\" : \"_from\";\r\n    var invertedAttrName = \"in\" === linkType ? \"_from\" : \"_to\";\r\n    layout.links.map(link => link[attrName]._name === nodeName).forEach((connected, idx) => {\r\n        connected && result.push({\r\n            index: idx,\r\n            weight: layout.links[idx]._weight,\r\n            node: layout.links[idx][invertedAttrName]._name\r\n        })\r\n    });\r\n    return result\r\n}\r\nvar dxSankey = baseWidget.inherit({\r\n    _rootClass: \"dxs-sankey\",\r\n    _rootClassPrefix: \"dxs\",\r\n    _proxyData: [],\r\n    _optionChangesMap: {\r\n        dataSource: \"DATA_SOURCE\",\r\n        sortData: \"DATA_SOURCE\",\r\n        alignment: \"DATA_SOURCE\",\r\n        node: \"BUILD_LAYOUT\",\r\n        link: \"BUILD_LAYOUT\",\r\n        palette: \"BUILD_LAYOUT\",\r\n        paletteExtensionMode: \"BUILD_LAYOUT\"\r\n    },\r\n    _themeDependentChanges: [\"BUILD_LAYOUT\"],\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _themeSection: \"sankey\",\r\n    _fontFields: [\"label.font\"],\r\n    _optionChangesOrder: [\"DATA_SOURCE\"],\r\n    _initialChanges: [\"DATA_SOURCE\"],\r\n    _initCore: function() {\r\n        this._groupLinks = this._renderer.g().append(this._renderer.root);\r\n        this._groupNodes = this._renderer.g().append(this._renderer.root);\r\n        this._groupLabels = this._renderer.g().attr({\r\n            class: this._rootClassPrefix + \"-labels\"\r\n        }).append(this._renderer.root);\r\n        this._drawLabels = true;\r\n        this._nodes = [];\r\n        this._links = [];\r\n        this._gradients = []\r\n    },\r\n    _disposeCore: noop,\r\n    _applySize: function(rect) {\r\n        this._rect = rect.slice();\r\n        var adaptiveLayout = this._getOption(\"adaptiveLayout\");\r\n        if (adaptiveLayout.keepLabels || this._rect[2] - this._rect[0] > adaptiveLayout.width) {\r\n            this._drawLabels = true\r\n        } else {\r\n            this._drawLabels = false\r\n        }\r\n        this._change([\"BUILD_LAYOUT\"]);\r\n        return this._rect\r\n    },\r\n    _eventsMap: {\r\n        onNodeHoverChanged: {\r\n            name: \"nodeHoverChanged\"\r\n        },\r\n        onLinkHoverChanged: {\r\n            name: \"linkHoverChanged\"\r\n        }\r\n    },\r\n    _customChangesOrder: [\"BUILD_LAYOUT\", \"NODES_DRAW\", \"LINKS_DRAW\", \"LABELS\", \"DRAWN\"],\r\n    _dataSourceChangedHandler: function() {\r\n        this._requestChange([\"BUILD_LAYOUT\"])\r\n    },\r\n    _change_DRAWN: function() {\r\n        this._drawn()\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        this._change([\"DRAWN\"]);\r\n        this._updateDataSource()\r\n    },\r\n    _change_LABELS: function() {\r\n        this._applyLabelsAppearance()\r\n    },\r\n    _change_BUILD_LAYOUT: function() {\r\n        this._groupNodes.clear();\r\n        this._groupLinks.clear();\r\n        this._groupLabels.clear();\r\n        this._buildLayout()\r\n    },\r\n    _change_NODES_DRAW: function() {\r\n        var that = this;\r\n        var nodes = that._nodes;\r\n        nodes.forEach((function(node, index) {\r\n            var element = that._renderer.rect().attr(node.rect).append(that._groupNodes);\r\n            node.element = element\r\n        }));\r\n        this._applyNodesAppearance()\r\n    },\r\n    _change_LINKS_DRAW: function() {\r\n        var that = this;\r\n        var links = that._links;\r\n        links.forEach((function(link, index) {\r\n            var group = that._renderer.g().attr({\r\n                class: \"link\",\r\n                \"data-link-idx\": index\r\n            }).append(that._groupLinks);\r\n            link.overlayElement = that._renderer.path([], \"area\").attr({\r\n                d: link.d\r\n            }).append(group);\r\n            link.element = that._renderer.path([], \"area\").attr({\r\n                d: link.d\r\n            }).append(group)\r\n        }));\r\n        this._applyLinksAppearance()\r\n    },\r\n    _suspend: function() {\r\n        if (!this._applyingChanges) {\r\n            this._suspendChanges()\r\n        }\r\n    },\r\n    _resume: function() {\r\n        if (!this._applyingChanges) {\r\n            this._resumeChanges()\r\n        }\r\n    },\r\n    _showTooltip: noop,\r\n    hideTooltip: noop,\r\n    clearHover: function() {\r\n        this._suspend();\r\n        this._nodes.forEach((function(node) {\r\n            node.isHovered() && node.hover(false)\r\n        }));\r\n        this._links.forEach((function(link) {\r\n            link.isHovered() && link.hover(false);\r\n            link.isAdjacentNodeHovered() && link.adjacentNodeHover(false)\r\n        }));\r\n        this._resume()\r\n    },\r\n    _applyNodesAppearance: function() {\r\n        this._nodes.forEach((function(node) {\r\n            var state = node.getState();\r\n            node.element.smartAttr(node.states[state])\r\n        }))\r\n    },\r\n    _applyLinksAppearance: function() {\r\n        this._links.forEach((function(link) {\r\n            var state = link.getState();\r\n            link.element.smartAttr(link.states[state]);\r\n            link.overlayElement.smartAttr(link.overlayStates[state])\r\n        }))\r\n    },\r\n    _hitTestTargets: function(x, y) {\r\n        var that = this;\r\n        var data;\r\n        this._proxyData.some((function(callback) {\r\n            data = callback.call(that, x, y);\r\n            if (data) {\r\n                return true\r\n            }\r\n        }));\r\n        return data\r\n    },\r\n    _getData: function() {\r\n        var that = this;\r\n        var data = that._dataSourceItems() || [];\r\n        var sourceField = that._getOption(\"sourceField\", true);\r\n        var targetField = that._getOption(\"targetField\", true);\r\n        var weightField = that._getOption(\"weightField\", true);\r\n        var processedData = [];\r\n        data.forEach((function(item) {\r\n            var hasItemOwnProperty = Object.prototype.hasOwnProperty.bind(item);\r\n            if (!hasItemOwnProperty(sourceField)) {\r\n                that._incidentOccurred(\"E2007\", sourceField)\r\n            } else if (!hasItemOwnProperty(targetField)) {\r\n                that._incidentOccurred(\"E2007\", targetField)\r\n            } else if (!hasItemOwnProperty(weightField)) {\r\n                that._incidentOccurred(\"E2007\", weightField)\r\n            } else if (!_isString(item[sourceField])) {\r\n                that._incidentOccurred(\"E2008\", sourceField)\r\n            } else if (!_isString(item[targetField])) {\r\n                that._incidentOccurred(\"E2008\", targetField)\r\n            } else if (!_isNumber(item[weightField]) || item[weightField] <= 0) {\r\n                that._incidentOccurred(\"E2009\", weightField)\r\n            } else {\r\n                processedData.push([item[sourceField], item[targetField], item[weightField]])\r\n            }\r\n        }));\r\n        return processedData\r\n    },\r\n    _buildLayout: function() {\r\n        var that = this;\r\n        var data = that._getData();\r\n        var availableRect = this._rect;\r\n        var nodeOptions = that._getOption(\"node\");\r\n        var sortData = that._getOption(\"sortData\");\r\n        var layoutBuilder = that._getOption(\"layoutBuilder\", true) || defaultLayoutBuilder;\r\n        var rect = {\r\n            x: availableRect[0],\r\n            y: availableRect[1],\r\n            width: availableRect[2] - availableRect[0],\r\n            height: availableRect[3] - availableRect[1]\r\n        };\r\n        var layout = layoutBuilder.computeLayout(data, sortData, {\r\n            availableRect: rect,\r\n            nodePadding: nodeOptions.padding,\r\n            nodeWidth: nodeOptions.width,\r\n            nodeAlign: that._getOption(\"alignment\", true)\r\n        }, that._incidentOccurred);\r\n        that._layoutMap = layout;\r\n        if (!Object.prototype.hasOwnProperty.call(layout, \"error\")) {\r\n            var nodeColors = {};\r\n            var nodeIdx = 0;\r\n            var linkOptions = that._getOption(\"link\");\r\n            var totalNodesNum = layout.nodes.map(item => item.length).reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n            var palette = that._themeManager.createPalette(that._getOption(\"palette\", true), {\r\n                useHighlight: true,\r\n                extensionMode: that._getOption(\"paletteExtensionMode\", true),\r\n                count: totalNodesNum\r\n            });\r\n            that._nodes = [];\r\n            that._links = [];\r\n            that._gradients.forEach(gradient => {\r\n                gradient.dispose()\r\n            });\r\n            that._gradients = [];\r\n            that._shadowFilter && that._shadowFilter.dispose();\r\n            layout.nodes.forEach(cascadeNodes => {\r\n                cascadeNodes.forEach(node => {\r\n                    var color = nodeOptions.color || palette.getNextColor();\r\n                    var nodeItem = new Node(that, {\r\n                        id: nodeIdx,\r\n                        color: color,\r\n                        rect: node,\r\n                        options: nodeOptions,\r\n                        linksIn: getConnectedLinks(layout, node._name, \"in\"),\r\n                        linksOut: getConnectedLinks(layout, node._name, \"out\")\r\n                    });\r\n                    that._nodes.push(nodeItem);\r\n                    nodeIdx++;\r\n                    nodeColors[node._name] = color\r\n                })\r\n            });\r\n            layout.links.forEach(link => {\r\n                var gradient = null;\r\n                if (linkOptions.colorMode === COLOR_MODE_GRADIENT) {\r\n                    gradient = that._renderer.linearGradient([{\r\n                        offset: \"0%\",\r\n                        \"stop-color\": nodeColors[link._from._name]\r\n                    }, {\r\n                        offset: \"100%\",\r\n                        \"stop-color\": nodeColors[link._to._name]\r\n                    }]);\r\n                    this._gradients.push(gradient)\r\n                }\r\n                var color = linkOptions.color;\r\n                if (linkOptions.colorMode === COLOR_MODE_SOURCE) {\r\n                    color = nodeColors[link._from._name]\r\n                } else if (linkOptions.colorMode === COLOR_MODE_TARGET) {\r\n                    color = nodeColors[link._to._name]\r\n                }\r\n                var linkItem = new Link(that, {\r\n                    d: link.d,\r\n                    boundingRect: link._boundingRect,\r\n                    color: color,\r\n                    options: linkOptions,\r\n                    connection: {\r\n                        source: link._from._name,\r\n                        target: link._to._name,\r\n                        weight: link._weight\r\n                    },\r\n                    gradient: gradient\r\n                });\r\n                that._links.push(linkItem)\r\n            });\r\n            that._renderer.initHatching();\r\n            that._change([\"NODES_DRAW\", \"LINKS_DRAW\", \"LABELS\"])\r\n        }\r\n        that._change([\"DRAWN\"])\r\n    },\r\n    _applyLabelsAppearance: function() {\r\n        var that = this;\r\n        var labelOptions = that._getOption(\"label\");\r\n        var availableWidth = that._rect[2] - that._rect[0];\r\n        var nodeOptions = that._getOption(\"node\");\r\n        that._shadowFilter = that._renderer.shadowFilter(\"-50%\", \"-50%\", \"200%\", \"200%\").attr(labelOptions.shadow);\r\n        that._groupLabels.clear();\r\n        if (that._drawLabels && labelOptions.visible) {\r\n            var availableLabelWidth = (availableWidth - (nodeOptions.width + labelOptions.horizontalOffset) - that._layoutMap.cascades.length * nodeOptions.width) / (that._layoutMap.cascades.length - 1) - labelOptions.horizontalOffset;\r\n            that._nodes.forEach((function(node) {\r\n                that._createLabel(node, labelOptions, that._shadowFilter.id);\r\n                moveLabel(node, labelOptions, availableLabelWidth, that._rect)\r\n            }));\r\n            if (\"none\" !== labelOptions.overlappingBehavior) {\r\n                that._nodes.forEach((function(thisNode) {\r\n                    var thisBox = thisNode._label.getBBox();\r\n                    that._nodes.forEach((function(otherNode) {\r\n                        var otherBox = otherNode._label.getBBox();\r\n                        if (thisNode.id !== otherNode.id && defaultLayoutBuilder.overlap(thisBox, otherBox)) {\r\n                            if (\"ellipsis\" === labelOptions.overlappingBehavior) {\r\n                                thisNode.labelText.applyEllipsis(otherBox.x - thisBox.x)\r\n                            } else if (\"hide\" === labelOptions.overlappingBehavior) {\r\n                                thisNode.labelText.remove()\r\n                            }\r\n                        }\r\n                    }))\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _createLabel: function(node, labelOptions, filter) {\r\n        var textData = labelOptions.customizeText(node);\r\n        var settings = node.getLabelAttributes(labelOptions, filter);\r\n        if (textData) {\r\n            node._label = this._renderer.g().append(this._groupLabels);\r\n            node.labelText = this._renderer.text(textData).attr(settings.attr).css(settings.css);\r\n            node.labelText.append(node._label)\r\n        }\r\n    },\r\n    _getMinSize: function() {\r\n        var adaptiveLayout = this._getOption(\"adaptiveLayout\");\r\n        return [adaptiveLayout.width, adaptiveLayout.height]\r\n    },\r\n    getAllNodes: function() {\r\n        return this._nodes.slice()\r\n    },\r\n    getAllLinks: function() {\r\n        return this._links.slice()\r\n    }\r\n});\r\ncomponentRegistrator(\"dxSankey\", dxSankey);\r\nexport default dxSankey;\r\nimport {\r\n    plugin as pluginDataSource\r\n} from \"../core/data_source\";\r\ndxSankey.addPlugin(pluginDataSource);\r\n"]},"metadata":{},"sourceType":"module"}