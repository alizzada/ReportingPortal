{"ast":null,"code":"import _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/resources/agendaResourceProcessor.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { when, Deferred } from \"../../../core/utils/deferred\";\nimport { getFieldExpr, getDisplayExpr, getValueExpr, getWrappedDataSource } from \"./utils\";\n\nvar PromiseItem = function PromiseItem(rawAppointment, promise) {\n  _classCallCheck(this, PromiseItem);\n\n  this.rawAppointment = rawAppointment;\n  this.promise = promise;\n};\n\nexport var AgendaResourceProcessor = /*#__PURE__*/function () {\n  function AgendaResourceProcessor() {\n    _classCallCheck(this, AgendaResourceProcessor);\n\n    this._resourceDeclarations = [];\n    this.isLoaded = false;\n    this.isLoading = false;\n    this.resourceMap = new Map();\n    this.appointmentPromiseQueue = [];\n  }\n\n  _createClass(AgendaResourceProcessor, [{\n    key: \"resourceDeclarations\",\n    get: function get() {\n      return this._resourceDeclarations;\n    },\n    set: function set(value) {\n      this._resourceDeclarations = value;\n      this.isLoaded = false;\n      this.isLoading = false;\n      this.resourceMap.clear();\n      this.appointmentPromiseQueue = [];\n    }\n  }, {\n    key: \"_pushAllResources\",\n    value: function _pushAllResources() {\n      var _this = this;\n\n      this.appointmentPromiseQueue.forEach(function (_ref) {\n        var promise = _ref.promise,\n            rawAppointment = _ref.rawAppointment;\n        var result = [];\n\n        _this.resourceMap.forEach(function (resource, fieldName) {\n          var item = {\n            label: resource.label,\n            values: []\n          };\n\n          if (fieldName in rawAppointment) {\n            wrapToArray(rawAppointment[fieldName]).forEach(function (value) {\n              return item.values.push(resource.map.get(value));\n            });\n          }\n\n          if (item.values.length) {\n            result.push(item);\n          }\n        });\n\n        promise.resolve(result);\n      });\n      this.appointmentPromiseQueue = [];\n    }\n  }, {\n    key: \"_onPullResource\",\n    value: function _onPullResource(fieldName, valueName, displayName, label, items) {\n      var map = new Map();\n      items.forEach(function (item) {\n        return map.set(item[valueName], item[displayName]);\n      });\n      this.resourceMap.set(fieldName, {\n        label: label,\n        map: map\n      });\n    }\n  }, {\n    key: \"_hasResourceDeclarations\",\n    value: function _hasResourceDeclarations(resources) {\n      if (0 === resources.length) {\n        this.appointmentPromiseQueue.forEach(function (_ref2) {\n          var promise = _ref2.promise;\n          return promise.resolve([]);\n        });\n        this.appointmentPromiseQueue = [];\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_tryPullResources\",\n    value: function _tryPullResources(resources, resultAsync) {\n      var _this2 = this;\n\n      if (!this.isLoading) {\n        this.isLoading = true;\n        var promises = [];\n        resources.forEach(function (resource) {\n          var promise = new Deferred().done(function (items) {\n            return _this2._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items);\n          });\n          promises.push(promise);\n          var dataSource = getWrappedDataSource(resource.dataSource);\n\n          if (dataSource.isLoaded()) {\n            promise.resolve(dataSource.items());\n          } else {\n            dataSource.load().done(function (list) {\n              return promise.resolve(list);\n            }).fail(function () {\n              return promise.reject();\n            });\n          }\n        });\n        when.apply(null, promises).done(function () {\n          _this2.isLoaded = true;\n          _this2.isLoading = false;\n\n          _this2._pushAllResources();\n        }).fail(function () {\n          return resultAsync.reject();\n        });\n      }\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n      this.resourceDeclarations = resourceDeclarations;\n    }\n  }, {\n    key: \"createListAsync\",\n    value: function createListAsync(rawAppointment) {\n      var resultAsync = new Deferred();\n      this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\n\n      if (this._hasResourceDeclarations(this.resourceDeclarations)) {\n        if (this.isLoaded) {\n          this._pushAllResources();\n        } else {\n          this._tryPullResources(this.resourceDeclarations, resultAsync);\n        }\n      }\n\n      return resultAsync.promise();\n    }\n  }]);\n\n  return AgendaResourceProcessor;\n}();","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/scheduler/resources/agendaResourceProcessor.js"],"names":["wrapToArray","when","Deferred","getFieldExpr","getDisplayExpr","getValueExpr","getWrappedDataSource","PromiseItem","rawAppointment","promise","AgendaResourceProcessor","_resourceDeclarations","isLoaded","isLoading","resourceMap","Map","appointmentPromiseQueue","value","clear","forEach","_ref","result","resource","fieldName","item","label","values","push","map","get","length","resolve","valueName","displayName","items","set","resources","_ref2","resultAsync","promises","done","_onPullResource","dataSource","load","list","fail","reject","apply","_pushAllResources","resourceDeclarations","arguments","_hasResourceDeclarations","_tryPullResources"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/resources/agendaResourceProcessor.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    getFieldExpr,\r\n    getDisplayExpr,\r\n    getValueExpr,\r\n    getWrappedDataSource\r\n} from \"./utils\";\r\nclass PromiseItem {\r\n    constructor(rawAppointment, promise) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.promise = promise\r\n    }\r\n}\r\nexport class AgendaResourceProcessor {\r\n    get resourceDeclarations() {\r\n        return this._resourceDeclarations\r\n    }\r\n    set resourceDeclarations(value) {\r\n        this._resourceDeclarations = value;\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap.clear();\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    constructor() {\r\n        this._resourceDeclarations = [];\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap = new Map;\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _pushAllResources() {\r\n        this.appointmentPromiseQueue.forEach(_ref => {\r\n            var {\r\n                promise: promise,\r\n                rawAppointment: rawAppointment\r\n            } = _ref;\r\n            var result = [];\r\n            this.resourceMap.forEach((resource, fieldName) => {\r\n                var item = {\r\n                    label: resource.label,\r\n                    values: []\r\n                };\r\n                if (fieldName in rawAppointment) {\r\n                    wrapToArray(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)))\r\n                }\r\n                if (item.values.length) {\r\n                    result.push(item)\r\n                }\r\n            });\r\n            promise.resolve(result)\r\n        });\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _onPullResource(fieldName, valueName, displayName, label, items) {\r\n        var map = new Map;\r\n        items.forEach(item => map.set(item[valueName], item[displayName]));\r\n        this.resourceMap.set(fieldName, {\r\n            label: label,\r\n            map: map\r\n        })\r\n    }\r\n    _hasResourceDeclarations(resources) {\r\n        if (0 === resources.length) {\r\n            this.appointmentPromiseQueue.forEach(_ref2 => {\r\n                var {\r\n                    promise: promise\r\n                } = _ref2;\r\n                return promise.resolve([])\r\n            });\r\n            this.appointmentPromiseQueue = [];\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    _tryPullResources(resources, resultAsync) {\r\n        if (!this.isLoading) {\r\n            this.isLoading = true;\r\n            var promises = [];\r\n            resources.forEach(resource => {\r\n                var promise = (new Deferred).done(items => this._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items));\r\n                promises.push(promise);\r\n                var dataSource = getWrappedDataSource(resource.dataSource);\r\n                if (dataSource.isLoaded()) {\r\n                    promise.resolve(dataSource.items())\r\n                } else {\r\n                    dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject())\r\n                }\r\n            });\r\n            when.apply(null, promises).done(() => {\r\n                this.isLoaded = true;\r\n                this.isLoading = false;\r\n                this._pushAllResources()\r\n            }).fail(() => resultAsync.reject())\r\n        }\r\n    }\r\n    initializeState() {\r\n        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n        this.resourceDeclarations = resourceDeclarations\r\n    }\r\n    createListAsync(rawAppointment) {\r\n        var resultAsync = new Deferred;\r\n        this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\r\n        if (this._hasResourceDeclarations(this.resourceDeclarations)) {\r\n            if (this.isLoaded) {\r\n                this._pushAllResources()\r\n            } else {\r\n                this._tryPullResources(this.resourceDeclarations, resultAsync)\r\n            }\r\n        }\r\n        return resultAsync.promise()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}