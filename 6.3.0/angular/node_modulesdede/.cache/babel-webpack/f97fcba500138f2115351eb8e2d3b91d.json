{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/drop_down_editor/ui.drop_down_button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport messageLocalization from \"../../localization/message\";\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\nimport Button from \"../button\";\nvar DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\";\nvar DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\";\nvar BUTTON_MESSAGE = \"dxDropDownEditor-selectLabel\";\n\nvar DropDownButton = /*#__PURE__*/function (_TextEditorButton) {\n  _inherits(DropDownButton, _TextEditorButton);\n\n  var _super = _createSuper(DropDownButton);\n\n  function DropDownButton(name, editor, options) {\n    var _this;\n\n    _classCallCheck(this, DropDownButton);\n\n    _this = _super.call(this, name, editor, options);\n    _this.currentTemplate = null;\n    return _this;\n  }\n\n  _createClass(DropDownButton, [{\n    key: \"_attachEvents\",\n    value: function _attachEvents(instance) {\n      var editor = this.editor;\n      instance.option(\"onClick\", function (e) {\n        !editor.option(\"openOnFieldClick\") && editor._openHandler(e);\n      });\n      eventsEngine.on(instance.$element(), \"mousedown\", function (e) {\n        if (editor.$element().is(\".dx-state-focused\")) {\n          e.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var editor = this.editor;\n      var $element = $(\"<div>\");\n\n      var options = this._getOptions();\n\n      this._addToContainer($element);\n\n      var instance = editor._createComponent($element, Button, extend({}, options, {\n        elementAttr: {\n          \"aria-label\": messageLocalization.format(BUTTON_MESSAGE)\n        }\n      }));\n\n      this._legacyRender(editor.$element(), $element, options.visible);\n\n      return {\n        $element: $element,\n        instance: instance\n      };\n    }\n  }, {\n    key: \"_getOptions\",\n    value: function _getOptions() {\n      var editor = this.editor;\n\n      var visible = this._isVisible();\n\n      var isReadOnly = editor.option(\"readOnly\");\n      var options = {\n        focusStateEnabled: false,\n        hoverStateEnabled: false,\n        activeStateEnabled: false,\n        useInkRipple: false,\n        disabled: isReadOnly,\n        visible: visible\n      };\n\n      this._addTemplate(options);\n\n      return options;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var editor = this.editor;\n      return _get(_getPrototypeOf(DropDownButton.prototype), \"_isVisible\", this).call(this) && editor.option(\"showDropDownButton\");\n    }\n  }, {\n    key: \"_legacyRender\",\n    value: function _legacyRender($editor, $element, isVisible) {\n      $editor.toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, isVisible);\n\n      if ($element) {\n        $element.removeClass(\"dx-button\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS);\n      }\n    }\n  }, {\n    key: \"_isSameTemplate\",\n    value: function _isSameTemplate() {\n      return this.editor.option(\"dropDownButtonTemplate\") === this.currentTemplate;\n    }\n  }, {\n    key: \"_addTemplate\",\n    value: function _addTemplate(options) {\n      if (!this._isSameTemplate()) {\n        options.template = this.editor._getTemplateByOption(\"dropDownButtonTemplate\");\n        this.currentTemplate = this.editor.option(\"dropDownButtonTemplate\");\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var shouldUpdate = _get(_getPrototypeOf(DropDownButton.prototype), \"update\", this).call(this);\n\n      if (shouldUpdate) {\n        var editor = this.editor,\n            instance = this.instance;\n        var $editor = editor.$element();\n\n        var options = this._getOptions();\n\n        null === instance || void 0 === instance ? void 0 : instance.option(options);\n\n        this._legacyRender($editor, null === instance || void 0 === instance ? void 0 : instance.$element(), options.visible);\n      }\n    }\n  }]);\n\n  return DropDownButton;\n}(TextEditorButton);\n\nexport { DropDownButton as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/drop_down_editor/ui.drop_down_button.js"],"names":["$","extend","eventsEngine","messageLocalization","TextEditorButton","Button","DROP_DOWN_EDITOR_BUTTON_CLASS","DROP_DOWN_EDITOR_BUTTON_VISIBLE","BUTTON_MESSAGE","DropDownButton","name","editor","options","currentTemplate","instance","option","e","_openHandler","on","$element","is","preventDefault","_getOptions","_addToContainer","_createComponent","elementAttr","format","_legacyRender","visible","_isVisible","isReadOnly","focusStateEnabled","hoverStateEnabled","activeStateEnabled","useInkRipple","disabled","_addTemplate","$editor","isVisible","toggleClass","removeClass","addClass","_isSameTemplate","template","_getTemplateByOption","shouldUpdate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/drop_down_editor/ui.drop_down_button.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\r\nimport Button from \"../button\";\r\nvar DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\";\r\nvar DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\";\r\nvar BUTTON_MESSAGE = \"dxDropDownEditor-selectLabel\";\r\nexport default class DropDownButton extends TextEditorButton {\r\n    constructor(name, editor, options) {\r\n        super(name, editor, options);\r\n        this.currentTemplate = null\r\n    }\r\n    _attachEvents(instance) {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        instance.option(\"onClick\", e => {\r\n            !editor.option(\"openOnFieldClick\") && editor._openHandler(e)\r\n        });\r\n        eventsEngine.on(instance.$element(), \"mousedown\", e => {\r\n            if (editor.$element().is(\".dx-state-focused\")) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    _create() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var $element = $(\"<div>\");\r\n        var options = this._getOptions();\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, Button, extend({}, options, {\r\n            elementAttr: {\r\n                \"aria-label\": messageLocalization.format(BUTTON_MESSAGE)\r\n            }\r\n        }));\r\n        this._legacyRender(editor.$element(), $element, options.visible);\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    }\r\n    _getOptions() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var visible = this._isVisible();\r\n        var isReadOnly = editor.option(\"readOnly\");\r\n        var options = {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            useInkRipple: false,\r\n            disabled: isReadOnly,\r\n            visible: visible\r\n        };\r\n        this._addTemplate(options);\r\n        return options\r\n    }\r\n    _isVisible() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return super._isVisible() && editor.option(\"showDropDownButton\")\r\n    }\r\n    _legacyRender($editor, $element, isVisible) {\r\n        $editor.toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, isVisible);\r\n        if ($element) {\r\n            $element.removeClass(\"dx-button\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS)\r\n        }\r\n    }\r\n    _isSameTemplate() {\r\n        return this.editor.option(\"dropDownButtonTemplate\") === this.currentTemplate\r\n    }\r\n    _addTemplate(options) {\r\n        if (!this._isSameTemplate()) {\r\n            options.template = this.editor._getTemplateByOption(\"dropDownButtonTemplate\");\r\n            this.currentTemplate = this.editor.option(\"dropDownButtonTemplate\")\r\n        }\r\n    }\r\n    update() {\r\n        var shouldUpdate = super.update();\r\n        if (shouldUpdate) {\r\n            var {\r\n                editor: editor,\r\n                instance: instance\r\n            } = this;\r\n            var $editor = editor.$element();\r\n            var options = this._getOptions();\r\n            null === instance || void 0 === instance ? void 0 : instance.option(options);\r\n            this._legacyRender($editor, null === instance || void 0 === instance ? void 0 : instance.$element(), options.visible)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}