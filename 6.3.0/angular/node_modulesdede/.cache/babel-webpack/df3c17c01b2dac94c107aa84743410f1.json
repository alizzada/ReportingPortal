{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.breadcrumbs.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport Widget from \"../widget/ui.widget\";\nimport Menu from \"../menu/ui.menu\";\nvar FILE_MANAGER_BREADCRUMBS_CLASS = \"dx-filemanager-breadcrumbs\";\nvar FILE_MANAGER_BREADCRUMBS_PARENT_FOLDER_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-parent-folder-item\";\nvar FILE_MANAGER_BREADCRUMBS_SEPARATOR_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-separator-item\";\nvar FILE_MANAGER_BREADCRUMBS_PATH_SEPARATOR_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-path-separator-item\";\n\nvar FileManagerBreadcrumbs = /*#__PURE__*/function (_Widget) {\n  _inherits(FileManagerBreadcrumbs, _Widget);\n\n  var _super = _createSuper(FileManagerBreadcrumbs);\n\n  function FileManagerBreadcrumbs() {\n    _classCallCheck(this, FileManagerBreadcrumbs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerBreadcrumbs, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(FileManagerBreadcrumbs.prototype), \"_init\", this).call(this);\n\n      this._currentDirectory = null;\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(FileManagerBreadcrumbs.prototype), \"_initMarkup\", this).call(this);\n\n      this._initActions();\n\n      if (this._currentDirectory) {\n        this._renderMenu();\n      }\n\n      this.$element().addClass(FILE_MANAGER_BREADCRUMBS_CLASS);\n    }\n  }, {\n    key: \"setCurrentDirectory\",\n    value: function setCurrentDirectory(directory) {\n      if (!this._areDirsEqual(this._currentDirectory, directory)) {\n        this._currentDirectory = directory;\n        this.repaint();\n      }\n    }\n  }, {\n    key: \"_renderMenu\",\n    value: function _renderMenu() {\n      var $menu = $(\"<div>\").appendTo(this.$element());\n      this._menu = this._createComponent($menu, Menu, {\n        dataSource: this._getMenuItems(),\n        onItemClick: this._onItemClick.bind(this),\n        onItemRendered: this._onItemRendered.bind(this)\n      });\n    }\n  }, {\n    key: \"_getMenuItems\",\n    value: function _getMenuItems() {\n      var dirLine = this._getParentDirsLine();\n\n      var result = [{\n        icon: \"arrowup\",\n        directory: this._currentDirectory.parentDirectory,\n        isPathItem: true,\n        cssClass: FILE_MANAGER_BREADCRUMBS_PARENT_FOLDER_ITEM_CLASS\n      }, {\n        text: \"\\xa0\",\n        cssClass: FILE_MANAGER_BREADCRUMBS_SEPARATOR_ITEM_CLASS\n      }];\n      dirLine.forEach(function (dir, index) {\n        result.push({\n          text: dir.getDisplayName(),\n          directory: dir,\n          isPathItem: true\n        });\n\n        if (index !== dirLine.length - 1) {\n          result.push({\n            icon: \"spinnext\",\n            cssClass: FILE_MANAGER_BREADCRUMBS_PATH_SEPARATOR_ITEM_CLASS\n          });\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"_onItemClick\",\n    value: function _onItemClick(_ref) {\n      var itemData = _ref.itemData;\n\n      if (!itemData.isPathItem) {\n        return;\n      }\n\n      var newDir = itemData.directory;\n\n      if (!this._areDirsEqual(newDir, this._currentDirectory)) {\n        this._raiseCurrentDirectoryChanged(newDir);\n      }\n    }\n  }, {\n    key: \"_onItemRendered\",\n    value: function _onItemRendered(_ref2) {\n      var itemElement = _ref2.itemElement,\n          itemData = _ref2.itemData;\n\n      if (itemData.cssClass) {\n        $(itemElement).addClass(itemData.cssClass);\n      }\n    }\n  }, {\n    key: \"_getParentDirsLine\",\n    value: function _getParentDirsLine() {\n      var currentDirectory = this._currentDirectory;\n      var result = [];\n\n      while (currentDirectory) {\n        result.unshift(currentDirectory);\n        currentDirectory = currentDirectory.parentDirectory;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_areDirsEqual\",\n    value: function _areDirsEqual(dir1, dir2) {\n      return dir1 && dir2 && dir1 === dir2 && dir1.fileItem.key === dir2.fileItem.key;\n    }\n  }, {\n    key: \"_initActions\",\n    value: function _initActions() {\n      this._actions = {\n        onCurrentDirectoryChanging: this._createActionByOption(\"onCurrentDirectoryChanging\")\n      };\n    }\n  }, {\n    key: \"_raiseCurrentDirectoryChanged\",\n    value: function _raiseCurrentDirectoryChanged(currentDirectory) {\n      this._actions.onCurrentDirectoryChanging({\n        currentDirectory: currentDirectory\n      });\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerBreadcrumbs.prototype), \"_getDefaultOptions\", this).call(this), {\n        rootFolderDisplayName: \"Files\",\n        onCurrentDirectoryChanging: null\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"rootFolderDisplayName\":\n          this.repaint();\n          break;\n\n        case \"onCurrentDirectoryChanging\":\n          this._actions[name] = this._createActionByOption(name);\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerBreadcrumbs.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }]);\n\n  return FileManagerBreadcrumbs;\n}(Widget);\n\nexport default FileManagerBreadcrumbs;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.breadcrumbs.js"],"names":["$","extend","Widget","Menu","FILE_MANAGER_BREADCRUMBS_CLASS","FILE_MANAGER_BREADCRUMBS_PARENT_FOLDER_ITEM_CLASS","FILE_MANAGER_BREADCRUMBS_SEPARATOR_ITEM_CLASS","FILE_MANAGER_BREADCRUMBS_PATH_SEPARATOR_ITEM_CLASS","FileManagerBreadcrumbs","_currentDirectory","_initActions","_renderMenu","$element","addClass","directory","_areDirsEqual","repaint","$menu","appendTo","_menu","_createComponent","dataSource","_getMenuItems","onItemClick","_onItemClick","bind","onItemRendered","_onItemRendered","dirLine","_getParentDirsLine","result","icon","parentDirectory","isPathItem","cssClass","text","forEach","dir","index","push","getDisplayName","length","_ref","itemData","newDir","_raiseCurrentDirectoryChanged","_ref2","itemElement","currentDirectory","unshift","dir1","dir2","fileItem","key","_actions","onCurrentDirectoryChanging","_createActionByOption","rootFolderDisplayName","args","name"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.breadcrumbs.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport Menu from \"../menu/ui.menu\";\r\nvar FILE_MANAGER_BREADCRUMBS_CLASS = \"dx-filemanager-breadcrumbs\";\r\nvar FILE_MANAGER_BREADCRUMBS_PARENT_FOLDER_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-parent-folder-item\";\r\nvar FILE_MANAGER_BREADCRUMBS_SEPARATOR_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-separator-item\";\r\nvar FILE_MANAGER_BREADCRUMBS_PATH_SEPARATOR_ITEM_CLASS = FILE_MANAGER_BREADCRUMBS_CLASS + \"-path-separator-item\";\r\nclass FileManagerBreadcrumbs extends Widget {\r\n    _init() {\r\n        super._init();\r\n        this._currentDirectory = null\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._initActions();\r\n        if (this._currentDirectory) {\r\n            this._renderMenu()\r\n        }\r\n        this.$element().addClass(FILE_MANAGER_BREADCRUMBS_CLASS)\r\n    }\r\n    setCurrentDirectory(directory) {\r\n        if (!this._areDirsEqual(this._currentDirectory, directory)) {\r\n            this._currentDirectory = directory;\r\n            this.repaint()\r\n        }\r\n    }\r\n    _renderMenu() {\r\n        var $menu = $(\"<div>\").appendTo(this.$element());\r\n        this._menu = this._createComponent($menu, Menu, {\r\n            dataSource: this._getMenuItems(),\r\n            onItemClick: this._onItemClick.bind(this),\r\n            onItemRendered: this._onItemRendered.bind(this)\r\n        })\r\n    }\r\n    _getMenuItems() {\r\n        var dirLine = this._getParentDirsLine();\r\n        var result = [{\r\n            icon: \"arrowup\",\r\n            directory: this._currentDirectory.parentDirectory,\r\n            isPathItem: true,\r\n            cssClass: FILE_MANAGER_BREADCRUMBS_PARENT_FOLDER_ITEM_CLASS\r\n        }, {\r\n            text: \"\\xa0\",\r\n            cssClass: FILE_MANAGER_BREADCRUMBS_SEPARATOR_ITEM_CLASS\r\n        }];\r\n        dirLine.forEach((dir, index) => {\r\n            result.push({\r\n                text: dir.getDisplayName(),\r\n                directory: dir,\r\n                isPathItem: true\r\n            });\r\n            if (index !== dirLine.length - 1) {\r\n                result.push({\r\n                    icon: \"spinnext\",\r\n                    cssClass: FILE_MANAGER_BREADCRUMBS_PATH_SEPARATOR_ITEM_CLASS\r\n                })\r\n            }\r\n        });\r\n        return result\r\n    }\r\n    _onItemClick(_ref) {\r\n        var {\r\n            itemData: itemData\r\n        } = _ref;\r\n        if (!itemData.isPathItem) {\r\n            return\r\n        }\r\n        var newDir = itemData.directory;\r\n        if (!this._areDirsEqual(newDir, this._currentDirectory)) {\r\n            this._raiseCurrentDirectoryChanged(newDir)\r\n        }\r\n    }\r\n    _onItemRendered(_ref2) {\r\n        var {\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        if (itemData.cssClass) {\r\n            $(itemElement).addClass(itemData.cssClass)\r\n        }\r\n    }\r\n    _getParentDirsLine() {\r\n        var currentDirectory = this._currentDirectory;\r\n        var result = [];\r\n        while (currentDirectory) {\r\n            result.unshift(currentDirectory);\r\n            currentDirectory = currentDirectory.parentDirectory\r\n        }\r\n        return result\r\n    }\r\n    _areDirsEqual(dir1, dir2) {\r\n        return dir1 && dir2 && dir1 === dir2 && dir1.fileItem.key === dir2.fileItem.key\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onCurrentDirectoryChanging: this._createActionByOption(\"onCurrentDirectoryChanging\")\r\n        }\r\n    }\r\n    _raiseCurrentDirectoryChanged(currentDirectory) {\r\n        this._actions.onCurrentDirectoryChanging({\r\n            currentDirectory: currentDirectory\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            rootFolderDisplayName: \"Files\",\r\n            onCurrentDirectoryChanging: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"rootFolderDisplayName\":\r\n                this.repaint();\r\n                break;\r\n            case \"onCurrentDirectoryChanging\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default FileManagerBreadcrumbs;\r\n"]},"metadata":{},"sourceType":"module"}