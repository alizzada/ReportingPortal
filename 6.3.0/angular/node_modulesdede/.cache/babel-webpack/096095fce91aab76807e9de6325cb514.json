{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport coreBrowserUtils from \"../../core/utils/browser\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { getPublicElement } from \"../../core/element\";\nimport { format as formatString } from \"../../core/utils/string\";\nimport { noop, deferRender, deferUpdate } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { name as clickEventName } from \"../../events/click\";\nimport localizationMessage from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\nimport { setFieldProperty, findField, mergeArraysByMaxValue } from \"./ui.pivot_grid.utils\";\nimport { DataController } from \"./ui.pivot_grid.data_controller\";\nimport { DataArea } from \"./ui.pivot_grid.data_area\";\nimport { VerticalHeadersArea, HorizontalHeadersArea } from \"./ui.pivot_grid.headers_area\";\nimport { getSize } from \"../../core/utils/size\";\nimport { FieldsArea } from \"./ui.pivot_grid.fields_area\";\nimport PivotGridFieldChooser from \"./ui.pivot_grid.field_chooser\";\nimport PivotGridFieldChooserBase from \"./ui.pivot_grid.field_chooser_base\";\nimport { ExportMixin } from \"./ui.pivot_grid.export\";\nimport chartIntegrationMixin from \"./ui.pivot_grid.chart_integration\";\nimport Popup from \"../popup\";\nimport ContextMenu from \"../context_menu\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\nvar ROW_LINES_CLASS = \"dx-row-lines\";\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\nvar FIELDS_CLASS = \"dx-area-fields\";\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\nvar TR = \"<tr>\";\nvar TD = \"<td>\";\nvar DIV = \"<div>\";\nvar TEST_HEIGHT = 66666;\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\n\nfunction getArraySum(array) {\n  var sum = 0;\n  each(array, function (_, value) {\n    sum += value || 0;\n  });\n  return sum;\n}\n\nfunction adjustSizeArray(sizeArray, space) {\n  var delta = space / sizeArray.length;\n\n  for (var i = 0; i < sizeArray.length; i++) {\n    sizeArray[i] -= delta;\n  }\n}\n\nfunction unsubscribeScrollEvents(area) {\n  area.off(\"scroll\").off(\"stop\");\n}\n\nfunction subscribeToScrollEvent(area, handler) {\n  unsubscribeScrollEvents(area);\n  area.on(\"scroll\", handler).on(\"stop\", handler);\n}\n\nvar scrollBarInfoCache = {};\n\nfunction getScrollBarInfo(useNativeScrolling) {\n  if (scrollBarInfoCache[useNativeScrolling]) {\n    return scrollBarInfoCache[useNativeScrolling];\n  }\n\n  var scrollBarWidth;\n  var options = {};\n  var container = $(DIV).css({\n    position: \"absolute\",\n    visibility: \"hidden\",\n    top: -1e3,\n    left: -1e3,\n    width: 100,\n    height: 100\n  }).appendTo(\"body\");\n  var content = $(\"<p>\").css({\n    width: \"100%\",\n    height: 200\n  }).appendTo(container);\n\n  if (\"auto\" !== useNativeScrolling) {\n    options.useNative = !!useNativeScrolling;\n    options.useSimulatedScrollbar = !useNativeScrolling;\n  }\n\n  container.dxScrollable(options);\n  var scrollBarUseNative = container.dxScrollable(\"instance\").option(\"useNative\");\n  scrollBarWidth = scrollBarUseNative ? container.width() - content.width() : 0;\n  container.remove();\n  scrollBarInfoCache[useNativeScrolling] = {\n    scrollBarWidth: scrollBarWidth,\n    scrollBarUseNative: scrollBarUseNative\n  };\n  return scrollBarInfoCache[useNativeScrolling];\n}\n\nfunction getCommonBorderWidth(elements, direction) {\n  var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\n  var width = 0;\n  each(elements, function (_, elem) {\n    var computedStyle = window.getComputedStyle(elem.get(0));\n    borderStyleNames.forEach(function (borderStyleName) {\n      width += parseFloat(computedStyle[borderStyleName]) || 0;\n    });\n  });\n  return width;\n}\n\nfunction clickedOnFieldsArea($targetElement) {\n  return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length;\n}\n\nvar PivotGrid = Widget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      scrolling: {\n        timeout: 300,\n        renderingThreshold: 150,\n        minTimeout: 10,\n        mode: \"standard\",\n        useNative: \"auto\",\n        removeInvisiblePages: true,\n        virtualRowHeight: 50,\n        virtualColumnWidth: 100,\n        loadTwoPagesOnStart: true\n      },\n      encodeHtml: true,\n      dataSource: null,\n      activeStateEnabled: false,\n      fieldChooser: {\n        minWidth: 250,\n        minHeight: 250,\n        enabled: true,\n        allowSearch: false,\n        searchTimeout: 500,\n        layout: 0,\n        title: localizationMessage.format(\"dxPivotGrid-fieldChooserTitle\"),\n        width: 600,\n        height: 600,\n        applyChangesMode: \"instantly\"\n      },\n      onContextMenuPreparing: null,\n      allowSorting: false,\n      allowSortingBySummary: false,\n      allowFiltering: false,\n      allowExpandAll: false,\n      wordWrapEnabled: true,\n      fieldPanel: {\n        showColumnFields: true,\n        showFilterFields: true,\n        showDataFields: true,\n        showRowFields: true,\n        allowFieldDragging: true,\n        visible: false,\n        texts: {\n          columnFieldArea: localizationMessage.format(\"dxPivotGrid-columnFieldArea\"),\n          rowFieldArea: localizationMessage.format(\"dxPivotGrid-rowFieldArea\"),\n          filterFieldArea: localizationMessage.format(\"dxPivotGrid-filterFieldArea\"),\n          dataFieldArea: localizationMessage.format(\"dxPivotGrid-dataFieldArea\")\n        }\n      },\n      dataFieldArea: \"column\",\n      export: {\n        enabled: false,\n        fileName: \"PivotGrid\",\n        proxyUrl: void 0,\n        ignoreExcelErrors: true\n      },\n      showRowTotals: true,\n      showRowGrandTotals: true,\n      showColumnTotals: true,\n      showColumnGrandTotals: true,\n      hideEmptySummaryCells: true,\n      showTotalsPrior: \"none\",\n      rowHeaderLayout: \"standard\",\n      loadPanel: {\n        enabled: true,\n        text: localizationMessage.format(\"Loading\"),\n        width: 200,\n        height: 70,\n        showIndicator: true,\n        indicatorSrc: \"\",\n        showPane: true\n      },\n      texts: {\n        grandTotal: localizationMessage.format(\"dxPivotGrid-grandTotal\"),\n        total: localizationMessage.getFormatter(\"dxPivotGrid-total\"),\n        noData: localizationMessage.format(\"dxDataGrid-noDataText\"),\n        showFieldChooser: localizationMessage.format(\"dxPivotGrid-showFieldChooser\"),\n        expandAll: localizationMessage.format(\"dxPivotGrid-expandAll\"),\n        collapseAll: localizationMessage.format(\"dxPivotGrid-collapseAll\"),\n        sortColumnBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\n        sortRowBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\n        removeAllSorting: localizationMessage.format(\"dxPivotGrid-removeAllSorting\"),\n        exportToExcel: localizationMessage.format(\"dxDataGrid-exportToExcel\"),\n        dataNotAvailable: localizationMessage.format(\"dxPivotGrid-dataNotAvailable\")\n      },\n      onCellClick: null,\n      onCellPrepared: null,\n      showBorders: false,\n      stateStoring: {\n        enabled: false,\n        storageKey: null,\n        type: \"localStorage\",\n        customLoad: null,\n        customSave: null,\n        savingTimeout: 2e3\n      },\n      onExpandValueChanging: null,\n      renderCellCountLimit: 2e4,\n      onExporting: null,\n      onExported: null,\n      onFileSaving: null,\n      headerFilter: {\n        width: 252,\n        height: 325,\n        allowSearch: false,\n        showRelevantValues: false,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    });\n  },\n  _updateCalculatedOptions: function _updateCalculatedOptions(fields) {\n    var that = this;\n    each(fields, function (index, field) {\n      each(FIELD_CALCULATED_OPTIONS, function (_, optionName) {\n        var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\n        var needUpdate = void 0 === field[optionName] || isCalculated;\n\n        if (needUpdate) {\n          setFieldProperty(field, optionName, that.option(optionName));\n        }\n      });\n    });\n  },\n  _getDataControllerOptions: function _getDataControllerOptions() {\n    var that = this;\n    return {\n      component: that,\n      dataSource: that.option(\"dataSource\"),\n      texts: that.option(\"texts\"),\n      showRowTotals: that.option(\"showRowTotals\"),\n      showRowGrandTotals: that.option(\"showRowGrandTotals\"),\n      showColumnTotals: that.option(\"showColumnTotals\"),\n      showTotalsPrior: that.option(\"showTotalsPrior\"),\n      showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\n      dataFieldArea: that.option(\"dataFieldArea\"),\n      rowHeaderLayout: that.option(\"rowHeaderLayout\"),\n      hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\n      onFieldsPrepared: function onFieldsPrepared(fields) {\n        that._updateCalculatedOptions(fields);\n      }\n    };\n  },\n  _initDataController: function _initDataController() {\n    var that = this;\n    that._dataController && that._dataController.dispose();\n    that._dataController = new DataController(that._getDataControllerOptions());\n\n    if (hasWindow()) {\n      that._dataController.changed.add(function () {\n        that._render();\n      });\n    }\n\n    that._dataController.scrollChanged.add(function (options) {\n      that._scrollLeft = options.left;\n      that._scrollTop = options.top;\n    });\n\n    that._dataController.loadingChanged.add(function (isLoading) {\n      that._updateLoading();\n    });\n\n    that._dataController.progressChanged.add(that._updateLoading.bind(that));\n\n    that._dataController.dataSourceChanged.add(function () {\n      that._trigger(\"onChanged\");\n    });\n\n    var expandValueChanging = that.option(\"onExpandValueChanging\");\n\n    if (expandValueChanging) {\n      that._dataController.expandValueChanging.add(function (e) {\n        expandValueChanging(e);\n      });\n    }\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._initDataController();\n\n    this._scrollLeft = this._scrollTop = null;\n\n    this._initActions();\n  },\n  _initActions: function _initActions() {\n    this._actions = {\n      onChanged: this._createActionByOption(\"onChanged\"),\n      onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\"),\n      onCellClick: this._createActionByOption(\"onCellClick\"),\n      onExporting: this._createActionByOption(\"onExporting\"),\n      onExported: this._createActionByOption(\"onExported\"),\n      onFileSaving: this._createActionByOption(\"onFileSaving\"),\n      onCellPrepared: this._createActionByOption(\"onCellPrepared\")\n    };\n  },\n  _trigger: function _trigger(eventName, eventArg) {\n    this._actions[eventName](eventArg);\n  },\n  _optionChanged: function _optionChanged(args) {\n    if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\n      var fields = this.getDataSource().fields();\n\n      this._updateCalculatedOptions(fields);\n    }\n\n    switch (args.name) {\n      case \"dataSource\":\n      case \"allowSorting\":\n      case \"allowFiltering\":\n      case \"allowExpandAll\":\n      case \"allowSortingBySummary\":\n      case \"scrolling\":\n      case \"stateStoring\":\n        this._initDataController();\n\n        this._fieldChooserPopup.hide();\n\n        this._renderFieldChooser();\n\n        this._invalidate();\n\n        break;\n\n      case \"texts\":\n      case \"showTotalsPrior\":\n      case \"showRowTotals\":\n      case \"showRowGrandTotals\":\n      case \"showColumnTotals\":\n      case \"showColumnGrandTotals\":\n      case \"hideEmptySummaryCells\":\n      case \"dataFieldArea\":\n        this._dataController.updateViewOptions(this._getDataControllerOptions());\n\n        break;\n\n      case \"useNativeScrolling\":\n      case \"encodeHtml\":\n      case \"renderCellCountLimit\":\n        break;\n\n      case \"rtlEnabled\":\n        this.callBase(args);\n\n        this._renderFieldChooser();\n\n        this._renderContextMenu();\n\n        hasWindow() && this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\n\n        this._invalidate();\n\n        break;\n\n      case \"export\":\n        this._renderDescriptionArea();\n\n        break;\n\n      case \"onExpandValueChanging\":\n        break;\n\n      case \"onCellClick\":\n      case \"onContextMenuPreparing\":\n      case \"onExporting\":\n      case \"onExported\":\n      case \"onFileSaving\":\n      case \"onCellPrepared\":\n        this._actions[args.name] = this._createActionByOption(args.name);\n        break;\n\n      case \"fieldChooser\":\n        this._renderFieldChooser();\n\n        this._renderDescriptionArea();\n\n        break;\n\n      case \"loadPanel\":\n        if (hasWindow()) {\n          this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\n\n          this._invalidate();\n        }\n\n        break;\n\n      case \"fieldPanel\":\n        this._renderDescriptionArea();\n\n        this._invalidate();\n\n        break;\n\n      case \"headerFilter\":\n        this._renderFieldChooser();\n\n        this._invalidate();\n\n        break;\n\n      case \"showBorders\":\n        this._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\n\n        this.updateDimensions();\n        break;\n\n      case \"wordWrapEnabled\":\n        this._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\n\n        this.updateDimensions();\n        break;\n\n      case \"rowHeaderLayout\":\n        this._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\n\n        this._dataController.updateViewOptions(this._getDataControllerOptions());\n\n        break;\n\n      case \"height\":\n      case \"width\":\n        this._hasHeight = null;\n        this.callBase(args);\n        this.resize();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _updateScrollPosition: function _updateScrollPosition(columnsArea, rowsArea, dataArea) {\n    var scrollTop;\n    var scrollLeft;\n    var scrolled = this._scrollTop || this._scrollLeft;\n\n    if (this._scrollUpdating) {\n      return;\n    }\n\n    this._scrollUpdating = true;\n\n    if (rowsArea && !rowsArea.hasScroll() && this._hasHeight) {\n      this._scrollTop = null;\n    }\n\n    if (columnsArea && !columnsArea.hasScroll()) {\n      this._scrollLeft = null;\n    }\n\n    if (null !== this._scrollTop || null !== this._scrollLeft || scrolled || this.option(\"rtlEnabled\")) {\n      scrollTop = this._scrollTop || 0;\n      scrollLeft = this._scrollLeft || 0;\n      dataArea.scrollTo({\n        x: scrollLeft,\n        y: scrollTop\n      });\n      columnsArea.scrollTo(scrollLeft);\n      rowsArea.scrollTo(scrollTop);\n\n      this._dataController.updateWindowScrollPosition(this._scrollTop);\n    }\n\n    this._scrollUpdating = false;\n  },\n  _subscribeToEvents: function _subscribeToEvents(columnsArea, rowsArea, dataArea) {\n    var that = this;\n\n    var scrollHandler = function scrollHandler(e) {\n      var scrollOffset = e.scrollOffset;\n      var leftOffset = isDefined(scrollOffset.left) ? scrollOffset.left : that._scrollLeft;\n      var topOffset = isDefined(scrollOffset.top) && that._hasHeight ? scrollOffset.top : that._scrollTop;\n\n      if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\n        that._scrollLeft = leftOffset;\n        that._scrollTop = topOffset;\n\n        that._updateScrollPosition(columnsArea, rowsArea, dataArea);\n\n        if (\"virtual\" === that.option(\"scrolling.mode\")) {\n          that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop);\n        }\n      }\n    };\n\n    each([columnsArea, rowsArea, dataArea], function (_, area) {\n      subscribeToScrollEvent(area, scrollHandler);\n    });\n    !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement());\n  },\n  _clean: noop,\n  _needDelayResizing: function _needDelayResizing(cellsInfo) {\n    var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\n    return cellsCount > this.option(\"renderCellCountLimit\");\n  },\n  _renderFieldChooser: function _renderFieldChooser() {\n    var that = this;\n    var container = that._pivotGridContainer;\n    var fieldChooserOptions = that.option(\"fieldChooser\") || {};\n    var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: localizationMessage.format(\"OK\"),\n        onClick: function onClick(e) {\n          that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\n\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }, {\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: localizationMessage.format(\"Cancel\"),\n        onClick: function onClick(e) {\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }] : [];\n    var fieldChooserComponentOptions = {\n      layout: fieldChooserOptions.layout,\n      texts: fieldChooserOptions.texts || {},\n      dataSource: that.getDataSource(),\n      allowSearch: fieldChooserOptions.allowSearch,\n      searchTimeout: fieldChooserOptions.searchTimeout,\n      width: void 0,\n      height: void 0,\n      headerFilter: that.option(\"headerFilter\"),\n      encodeHtml: that.option(\"encodeHtml\"),\n      applyChangesMode: fieldChooserOptions.applyChangesMode,\n      onContextMenuPreparing: function onContextMenuPreparing(e) {\n        that._trigger(\"onContextMenuPreparing\", e);\n      }\n    };\n    var popupOptions = {\n      shading: false,\n      title: fieldChooserOptions.title,\n      width: fieldChooserOptions.width,\n      height: fieldChooserOptions.height,\n      showCloseButton: true,\n      resizeEnabled: true,\n      minWidth: fieldChooserOptions.minWidth,\n      minHeight: fieldChooserOptions.minHeight,\n      toolbarItems: toolbarItems,\n      onResize: function onResize(e) {\n        e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\");\n      },\n      onShown: function onShown(e) {\n        that._createComponent(e.component.content(), PivotGridFieldChooser, fieldChooserComponentOptions);\n      },\n      onHidden: function onHidden(e) {\n        var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\n        fieldChooser.resetTreeView();\n        fieldChooser.cancelChanges();\n      }\n    };\n\n    if (that._fieldChooserPopup) {\n      that._fieldChooserPopup.option(popupOptions);\n\n      that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions);\n    } else {\n      that._fieldChooserPopup = that._createComponent($(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), Popup, popupOptions);\n    }\n  },\n  _renderContextMenu: function _renderContextMenu() {\n    var that = this;\n    var $container = that._pivotGridContainer;\n\n    if (that._contextMenu) {\n      that._contextMenu.$element().remove();\n    }\n\n    that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\n      onPositioning: function onPositioning(actionArgs) {\n        var event = actionArgs.event;\n        actionArgs.cancel = true;\n\n        if (!event) {\n          return;\n        }\n\n        var targetElement = event.target.cellIndex >= 0 ? event.target : $(event.target).closest(\"td\").get(0);\n\n        if (!targetElement) {\n          return;\n        }\n\n        var args = that._createEventArgs(targetElement, event);\n\n        var items = that._getContextMenuItems(args);\n\n        if (items) {\n          actionArgs.component.option(\"items\", items);\n          actionArgs.cancel = false;\n          return;\n        }\n      },\n      onItemClick: function onItemClick(params) {\n        params.itemData.onItemClick && params.itemData.onItemClick(params);\n      },\n      cssClass: PIVOTGRID_CLASS,\n      target: that.$element()\n    });\n  },\n  _getContextMenuItems: function _getContextMenuItems(e) {\n    var that = this;\n    var items = [];\n    var texts = that.option(\"texts\");\n\n    if (\"row\" === e.area || \"column\" === e.area) {\n      var areaFields = e[e.area + \"Fields\"];\n      var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\n      var field = e.cell.path && areaFields[e.cell.path.length - 1];\n      var dataSource = that.getDataSource();\n\n      if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\n        items.push({\n          beginGroup: true,\n          icon: \"none\",\n          text: texts.expandAll,\n          onItemClick: function onItemClick() {\n            dataSource.expandAll(field.index);\n          }\n        });\n        items.push({\n          text: texts.collapseAll,\n          icon: \"none\",\n          onItemClick: function onItemClick() {\n            dataSource.collapseAll(field.index);\n          }\n        });\n      }\n\n      if (e.cell.isLast && !dataSource.paginate()) {\n        var sortingBySummaryItemCount = 0;\n        each(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary) {\n            return;\n          }\n\n          each(e.dataFields, function (dataIndex, dataField) {\n            if (isDefined(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\n              return;\n            }\n\n            var showDataFieldCaption = !isDefined(e.cell.dataIndex) && e.dataFields.length > 1;\n            var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\n            var checked = findField(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\n            var text = formatString(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\n            items.push({\n              beginGroup: 0 === sortingBySummaryItemCount,\n              icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\n              text: text,\n              onItemClick: function onItemClick() {\n                dataSource.field(field.index, {\n                  sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\n                  sortBySummaryPath: e.cell.path,\n                  sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\n                });\n                dataSource.load();\n              }\n            });\n            sortingBySummaryItemCount++;\n          });\n        });\n        each(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary || !isDefined(field.sortBySummaryField)) {\n            return;\n          }\n\n          items.push({\n            beginGroup: 0 === sortingBySummaryItemCount,\n            icon: \"none\",\n            text: texts.removeAllSorting,\n            onItemClick: function onItemClick() {\n              each(oppositeAreaFields, function (index, field) {\n                dataSource.field(field.index, {\n                  sortBySummaryField: void 0,\n                  sortBySummaryPath: void 0,\n                  sortOrder: void 0\n                });\n              });\n              dataSource.load();\n            }\n          });\n          return false;\n        });\n      }\n    }\n\n    if (that.option(\"fieldChooser.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"columnchooser\",\n        text: texts.showFieldChooser,\n        onItemClick: function onItemClick() {\n          that._fieldChooserPopup.show();\n        }\n      });\n    }\n\n    if (that.option(\"export.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"xlsxfile\",\n        text: texts.exportToExcel,\n        onItemClick: function onItemClick() {\n          that.exportToExcel();\n        }\n      });\n    }\n\n    e.items = items;\n\n    that._trigger(\"onContextMenuPreparing\", e);\n\n    items = e.items;\n\n    if (items && items.length) {\n      return items;\n    }\n  },\n  _createEventArgs: function _createEventArgs(targetElement, dxEvent) {\n    var dataSource = this.getDataSource();\n    var args = {\n      rowFields: dataSource.getAreaFields(\"row\"),\n      columnFields: dataSource.getAreaFields(\"column\"),\n      dataFields: dataSource.getAreaFields(\"data\"),\n      event: dxEvent\n    };\n\n    if (clickedOnFieldsArea($(targetElement))) {\n      return extend(this._createFieldArgs(targetElement), args);\n    } else {\n      return extend(this._createCellArgs(targetElement), args);\n    }\n  },\n  _createFieldArgs: function _createFieldArgs(targetElement) {\n    var field = $(targetElement).children().data(\"field\");\n    var args = {\n      field: field\n    };\n    return isDefined(field) ? args : {};\n  },\n  _createCellArgs: function _createCellArgs(cellElement) {\n    var $cellElement = $(cellElement);\n    var columnIndex = cellElement.cellIndex;\n    var rowIndex = cellElement.parentElement.rowIndex;\n    var $table = $cellElement.closest(\"table\");\n    var data = $table.data(\"data\");\n    var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\n    var args = {\n      area: $table.data(\"area\"),\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      cellElement: getPublicElement($cellElement),\n      cell: cell\n    };\n    return args;\n  },\n  _handleCellClick: function _handleCellClick(e) {\n    var that = this;\n\n    var args = that._createEventArgs(e.currentTarget, e);\n\n    var cell = args.cell;\n\n    if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\n      return;\n    }\n\n    that._trigger(\"onCellClick\", args);\n\n    cell && !args.cancel && isDefined(cell.expanded) && setTimeout(function () {\n      that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path);\n    });\n  },\n  _getNoDataText: function _getNoDataText() {\n    return this.option(\"texts.noData\");\n  },\n  _renderNoDataText: gridCoreUtils.renderNoDataText,\n  _renderLoadPanel: gridCoreUtils.renderLoadPanel,\n  _updateLoading: function _updateLoading(progress) {\n    var that = this;\n\n    var isLoading = that._dataController.isLoading();\n\n    if (!that._loadPanel) {\n      return;\n    }\n\n    var loadPanelVisible = that._loadPanel.option(\"visible\");\n\n    if (!loadPanelVisible) {\n      that._startLoadingTime = new Date();\n    }\n\n    if (isLoading) {\n      if (progress) {\n        if (new Date() - that._startLoadingTime >= 1e3) {\n          that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\");\n        }\n      } else {\n        that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"));\n      }\n    }\n\n    clearTimeout(that._hideLoadingTimeoutID);\n\n    if (loadPanelVisible && !isLoading) {\n      that._hideLoadingTimeoutID = setTimeout(function () {\n        that._loadPanel.option(\"visible\", false);\n\n        that.$element().removeClass(OVERFLOW_HIDDEN_CLASS);\n      });\n    } else {\n      that._loadPanel.option(\"visible\", isLoading);\n\n      that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading);\n    }\n  },\n  _renderDescriptionArea: function _renderDescriptionArea() {\n    var _this = this;\n\n    var $element = this.$element();\n    var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var $toolbarContainer = $(DIV).addClass(\"dx-pivotgrid-toolbar\");\n    var fieldPanel = this.option(\"fieldPanel\");\n    var $filterHeader = $element.find(\".dx-filter-header\");\n    var $columnHeader = $element.find(\".dx-column-header\");\n    var $targetContainer;\n\n    if (fieldPanel.visible && fieldPanel.showFilterFields) {\n      $targetContainer = $filterHeader;\n    } else if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\n      $targetContainer = $columnHeader;\n    } else {\n      $targetContainer = $descriptionCell;\n    }\n\n    $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\n    $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\n    $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\n    this.$element().find(\".dx-pivotgrid-toolbar\").remove();\n    $toolbarContainer.prependTo($targetContainer);\n\n    if (this.option(\"fieldChooser.enabled\")) {\n      var $buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\n      var buttonOptions = {\n        icon: \"columnchooser\",\n        hint: this.option(\"texts.showFieldChooser\"),\n        onClick: function onClick() {\n          _this.getFieldChooserPopup().show();\n        }\n      };\n\n      this._createComponent($buttonElement, \"dxButton\", buttonOptions);\n    }\n\n    if (this.option(\"export.enabled\")) {\n      var _$buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\n\n      var _buttonOptions = {\n        icon: \"xlsxfile\",\n        hint: this.option(\"texts.exportToExcel\"),\n        onClick: function onClick() {\n          _this.exportToExcel();\n        }\n      };\n\n      this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions);\n    }\n  },\n  _detectHasContainerHeight: function _detectHasContainerHeight() {\n    var element = this.$element();\n\n    if (isDefined(this._hasHeight)) {\n      var height = this.option(\"height\") || this.$element().get(0).style.height;\n\n      if (height && this._hasHeight ^ \"auto\" !== height) {\n        this._hasHeight = null;\n      }\n    }\n\n    if (isDefined(this._hasHeight) || element.is(\":hidden\")) {\n      return;\n    }\n\n    this._pivotGridContainer.addClass(\"dx-hidden\");\n\n    var testElement = $(DIV).height(TEST_HEIGHT);\n    element.append(testElement);\n    this._hasHeight = element.height() !== TEST_HEIGHT;\n\n    this._pivotGridContainer.removeClass(\"dx-hidden\");\n\n    testElement.remove();\n  },\n  _renderHeaders: function _renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\n    var dataSource = this.getDataSource();\n    this._rowFields = this._rowFields || new FieldsArea(this, \"row\");\n\n    this._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\n\n    this._columnFields = this._columnFields || new FieldsArea(this, \"column\");\n\n    this._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\n\n    this._filterFields = this._filterFields || new FieldsArea(this, \"filter\");\n\n    this._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\n\n    this._dataFields = this._dataFields || new FieldsArea(this, \"data\");\n\n    this._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\n\n    this.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable();\n  },\n  _createTableElement: function _createTableElement() {\n    var $table = $(\"<table>\").css({\n      width: \"100%\"\n    }).toggleClass(BORDERS_CLASS, !!this.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!this.option(\"wordWrapEnabled\"));\n    eventsEngine.on($table, addNamespace(clickEventName, \"dxPivotGrid\"), \"td\", this._handleCellClick.bind(this));\n    return $table;\n  },\n  _renderDataArea: function _renderDataArea(dataAreaElement) {\n    var dataArea = this._dataArea || new DataArea(this);\n    this._dataArea = dataArea;\n    dataArea.render(dataAreaElement, this._dataController.getCellsInfo());\n    return dataArea;\n  },\n  _renderRowsArea: function _renderRowsArea(rowsAreaElement) {\n    var rowsArea = this._rowsArea || new VerticalHeadersArea(this);\n    this._rowsArea = rowsArea;\n    rowsArea.render(rowsAreaElement, this._dataController.getRowsInfo());\n    return rowsArea;\n  },\n  _renderColumnsArea: function _renderColumnsArea(columnsAreaElement) {\n    var columnsArea = this._columnsArea || new HorizontalHeadersArea(this);\n    this._columnsArea = columnsArea;\n    columnsArea.render(columnsAreaElement, this._dataController.getColumnsInfo());\n    return columnsArea;\n  },\n  _initMarkup: function _initMarkup() {\n    var that = this;\n    that.callBase.apply(this, arguments);\n    that.$element().addClass(PIVOTGRID_CLASS);\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    var columnsAreaElement;\n    var rowsAreaElement;\n    var dataAreaElement;\n    var tableElement;\n    var isFirstDrawing = !this._pivotGridContainer;\n    var rowHeaderContainer;\n    var columnHeaderContainer;\n    var filterHeaderContainer;\n    var dataHeaderContainer;\n    tableElement = !isFirstDrawing && this._tableElement();\n\n    if (!tableElement) {\n      this.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\n      this._pivotGridContainer = $(DIV).addClass(\"dx-pivotgrid-container\");\n\n      this._renderFieldChooser();\n\n      this._renderContextMenu();\n\n      columnsAreaElement = $(TD).addClass(COLUMN_AREA_CELL_CLASS);\n      rowsAreaElement = $(TD).addClass(ROW_AREA_CELL_CLASS);\n      dataAreaElement = $(TD).addClass(DATA_AREA_CELL_CLASS);\n      tableElement = this._createTableElement();\n      dataHeaderContainer = $(TD).addClass(\"dx-data-header\");\n      filterHeaderContainer = $(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\n      columnHeaderContainer = $(TD).addClass(\"dx-column-header\");\n      rowHeaderContainer = $(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\n      $(TR).append(filterHeaderContainer).appendTo(tableElement);\n      $(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\n      $(TR).toggleClass(\"dx-ie\", true === coreBrowserUtils.msie).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\n      $(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\n\n      this._pivotGridContainer.append(tableElement);\n\n      this.$element().append(this._pivotGridContainer);\n\n      if (\"tree\" === this.option(\"rowHeaderLayout\")) {\n        rowsAreaElement.addClass(\"dx-area-tree-view\");\n      }\n    }\n\n    this.$element().addClass(OVERFLOW_HIDDEN_CLASS);\n\n    this._createComponent(this.$element(), PivotGridFieldChooserBase, {\n      dataSource: this.getDataSource(),\n      encodeHtml: this.option(\"encodeHtml\"),\n      allowFieldDragging: this.option(\"fieldPanel.allowFieldDragging\"),\n      headerFilter: this.option(\"headerFilter\"),\n      visible: this.option(\"visible\")\n    });\n\n    var dataArea = this._renderDataArea(dataAreaElement);\n\n    var rowsArea = this._renderRowsArea(rowsAreaElement);\n\n    var columnsArea = this._renderColumnsArea(columnsAreaElement);\n\n    dataArea.tableElement().prepend(columnsArea.headElement());\n\n    if (isFirstDrawing) {\n      this._renderLoadPanel(dataArea.groupElement().parent(), this.$element());\n\n      this._renderDescriptionArea();\n\n      rowsArea.processScroll();\n      columnsArea.processScroll();\n    }\n\n    [dataArea, rowsArea, columnsArea].forEach(function (area) {\n      unsubscribeScrollEvents(area);\n    });\n\n    this._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\n\n    this._update(isFirstDrawing);\n  },\n  _update: function _update(isFirstDrawing) {\n    var that = this;\n\n    var updateHandler = function updateHandler() {\n      that.updateDimensions();\n    };\n\n    if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\n      setTimeout(updateHandler);\n    } else {\n      updateHandler();\n    }\n  },\n  _fireContentReadyAction: function _fireContentReadyAction() {\n    if (!this._dataController.isLoading()) {\n      this.callBase();\n    }\n  },\n  getScrollPath: function getScrollPath(area) {\n    if (\"column\" === area) {\n      return this._columnsArea.getScrollPath(this._scrollLeft);\n    } else {\n      return this._rowsArea.getScrollPath(this._scrollTop);\n    }\n  },\n  getDataSource: function getDataSource() {\n    return this._dataController.getDataSource();\n  },\n  getFieldChooserPopup: function getFieldChooserPopup() {\n    return this._fieldChooserPopup;\n  },\n  hasScroll: function hasScroll(area) {\n    return \"column\" === area ? this._columnsArea.hasScroll() : this._rowsArea.hasScroll();\n  },\n  _dimensionChanged: function _dimensionChanged() {\n    this.updateDimensions();\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible) {\n      this.updateDimensions();\n    }\n  },\n  _dispose: function _dispose() {\n    var that = this;\n    clearTimeout(that._hideLoadingTimeoutID);\n    that.callBase.apply(that, arguments);\n\n    if (that._dataController) {\n      that._dataController.dispose();\n    }\n  },\n  _tableElement: function _tableElement() {\n    return this.$element().find(\"table\").first();\n  },\n  addWidgetPrefix: function addWidgetPrefix(className) {\n    return \"dx-pivotgrid-\" + className;\n  },\n  resize: function resize() {\n    this.updateDimensions();\n  },\n  isReady: function isReady() {\n    return this.callBase() && !this._dataController.isLoading();\n  },\n  updateDimensions: function updateDimensions() {\n    var that = this;\n    var groupWidth;\n\n    var tableElement = that._tableElement();\n\n    var rowsArea = that._rowsArea;\n    var columnsArea = that._columnsArea;\n    var dataArea = that._dataArea;\n    var bordersWidth;\n    var totalWidth = 0;\n    var totalHeight = 0;\n    var rowsAreaWidth = 0;\n    var hasRowsScroll;\n    var hasColumnsScroll;\n    var scrollingOptions = that.option(\"scrolling\") || {};\n    var scrollBarInfo = getScrollBarInfo(scrollingOptions.useNative);\n    var scrollBarWidth = scrollBarInfo.scrollBarWidth;\n    var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\n    var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\n    var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\n    var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var filterHeaderCell = tableElement.find(\".dx-filter-header\");\n    var columnHeaderCell = tableElement.find(\".dx-column-header\");\n    var rowFieldsHeader = that._rowFields;\n    var d = new Deferred();\n\n    if (!hasWindow()) {\n      return;\n    }\n\n    var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\n\n    that._detectHasContainerHeight();\n\n    if (!dataArea.headElement().length) {\n      dataArea.tableElement().prepend(columnsArea.headElement());\n    }\n\n    if (needSynchronizeFieldPanel) {\n      rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\n      rowsArea.tableElement().prepend(rowFieldsHeader.headElement());\n    }\n\n    tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\n    dataArea.reset();\n    rowsArea.reset();\n    columnsArea.reset();\n    rowFieldsHeader.reset();\n\n    var calculateHasScroll = function calculateHasScroll(areaSize, totalSize) {\n      return totalSize - areaSize >= 1;\n    };\n\n    var calculateGroupHeight = function calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) {\n      return hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0);\n    };\n\n    deferUpdate(function () {\n      var resultWidths = dataArea.getColumnsWidth();\n      var rowHeights = rowsArea.getRowsHeight();\n      var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\n      var dataAreaHeights = dataArea.getRowsHeight();\n      var descriptionCellHeight = getSize(descriptionCell[0], \"height\", {\n        paddings: true,\n        borders: true,\n        margins: true\n      }) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\n\n      var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\n\n      var resultHeights = mergeArraysByMaxValue(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\n      var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\n      var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\n      var rowsAreaColumnWidths = rowsArea.getColumnsWidth();\n      var filterAreaHeight = 0;\n      var dataAreaHeight = 0;\n\n      if (that._hasHeight) {\n        filterAreaHeight = filterHeaderCell.height();\n        var $dataHeader = tableElement.find(\".dx-data-header\");\n        var dataHeaderHeight = coreBrowserUtils.msie ? getSize($dataHeader.get(0), \"height\", {\n          paddings: false,\n          borders: false,\n          margins: false\n        }) : $dataHeader.height();\n        bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\n        dataAreaHeight = that.$element().height() - filterAreaHeight - dataHeaderHeight - (Math.max(dataArea.headElement().height(), columnAreaCell.height(), descriptionCellHeight) + bordersWidth);\n      }\n\n      totalWidth = dataArea.tableElement().width();\n      totalHeight = getArraySum(resultHeights);\n\n      if (!totalWidth || !totalHeight) {\n        d.resolve();\n        return;\n      }\n\n      rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\n      var elementWidth = that.$element().width();\n      bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\n      groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\n      groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\n      var diff = totalWidth - groupWidth;\n      var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\n\n      if (needAdjustWidthOnZoom) {\n        adjustSizeArray(resultWidths, diff);\n        totalWidth = groupWidth;\n      }\n\n      hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\n      hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\n      var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n      deferRender(function () {\n        columnsArea.tableElement().append(dataArea.headElement());\n        rowFieldsHeader.tableElement().append(rowsArea.headElement());\n\n        if (!hasColumnsScroll && hasRowsScroll && scrollBarWidth) {\n          adjustSizeArray(resultWidths, scrollBarWidth);\n          totalWidth -= scrollBarWidth;\n        }\n\n        if (descriptionCellHeight > columnsAreaHeight) {\n          adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\n          columnsArea.setRowsHeight(columnsAreaRowHeights);\n        }\n\n        tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\n        columnHeaderCell.children().css(\"maxWidth\", groupWidth);\n        columnsArea.groupWidth(groupWidth);\n        columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\n        columnsArea.setColumnsWidth(resultWidths);\n        rowsArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\n        rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\n        rowsArea.setColumnsWidth(rowsAreaColumnWidths);\n        rowsArea.setRowsHeight(resultHeights);\n        dataArea.setColumnsWidth(resultWidths);\n        dataArea.setRowsHeight(resultHeights);\n        dataArea.groupWidth(groupWidth);\n        dataArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\n        needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\n        dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n        rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n\n        if (!that._hasHeight && elementWidth !== that.$element().width()) {\n          var _diff = elementWidth - that.$element().width();\n\n          if (!hasColumnsScroll) {\n            adjustSizeArray(resultWidths, _diff);\n            columnsArea.setColumnsWidth(resultWidths);\n            dataArea.setColumnsWidth(resultWidths);\n          }\n\n          dataArea.groupWidth(groupWidth - _diff);\n          columnsArea.groupWidth(groupWidth - _diff);\n        }\n\n        if (that._hasHeight && that._filterFields.isVisible() && filterHeaderCell.height() !== filterAreaHeight) {\n          var _diff2 = filterHeaderCell.height() - filterAreaHeight;\n\n          if (_diff2 > 0) {\n            hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\n\n            var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n\n            dataArea.groupHeight(_groupHeight);\n            rowsArea.groupHeight(_groupHeight);\n          }\n        }\n\n        if (\"virtual\" === scrollingOptions.mode) {\n          var virtualContentParams = that._dataController.calculateVirtualContentParams({\n            virtualRowHeight: scrollingOptions.virtualRowHeight,\n            virtualColumnWidth: scrollingOptions.virtualColumnWidth,\n            itemWidths: resultWidths,\n            itemHeights: resultHeights,\n            rowCount: resultHeights.length,\n            columnCount: resultWidths.length,\n            viewportWidth: groupWidth,\n            viewportHeight: that._hasHeight ? groupHeight : $(window).outerHeight()\n          });\n\n          dataArea.setVirtualContentParams({\n            top: virtualContentParams.contentTop,\n            left: virtualContentParams.contentLeft,\n            width: virtualContentParams.width,\n            height: virtualContentParams.height\n          });\n          rowsArea.setVirtualContentParams({\n            top: virtualContentParams.contentTop,\n            width: rowsAreaWidth,\n            height: virtualContentParams.height\n          });\n          columnsArea.setVirtualContentParams({\n            left: virtualContentParams.contentLeft,\n            width: virtualContentParams.width,\n            height: columnsArea.groupElement().height()\n          });\n        }\n\n        var updateScrollableResults = [];\n        dataArea.processScroll(scrollBarInfo.scrollBarUseNative, hasColumnsScroll, hasRowsScroll);\n        each([columnsArea, rowsArea, dataArea], function (_, area) {\n          updateScrollableResults.push(area && area.updateScrollable());\n        });\n\n        that._updateLoading();\n\n        that._renderNoDataText(dataAreaCell);\n\n        when.apply($, updateScrollableResults).done(function () {\n          that._updateScrollPosition(columnsArea, rowsArea, dataArea);\n\n          that._subscribeToEvents(columnsArea, rowsArea, dataArea);\n\n          d.resolve();\n        });\n      });\n    });\n    return d;\n  },\n  applyPartialDataSource: function applyPartialDataSource(area, path, dataSource) {\n    this._dataController.applyPartialDataSource(area, path, dataSource);\n  }\n}).inherit(ExportMixin).include(chartIntegrationMixin);\nregisterComponent(\"dxPivotGrid\", PivotGrid);\nexport default PivotGrid;","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.js"],"names":["$","getWindow","hasWindow","window","coreBrowserUtils","eventsEngine","registerComponent","getPublicElement","format","formatString","noop","deferRender","deferUpdate","each","isDefined","extend","name","clickEventName","localizationMessage","Widget","addNamespace","gridCoreUtils","setFieldProperty","findField","mergeArraysByMaxValue","DataController","DataArea","VerticalHeadersArea","HorizontalHeadersArea","getSize","FieldsArea","PivotGridFieldChooser","PivotGridFieldChooserBase","ExportMixin","chartIntegrationMixin","Popup","ContextMenu","when","Deferred","DATA_AREA_CELL_CLASS","ROW_AREA_CELL_CLASS","COLUMN_AREA_CELL_CLASS","DESCRIPTION_AREA_CELL_CLASS","BORDERS_CLASS","PIVOTGRID_CLASS","ROW_LINES_CLASS","BOTTOM_ROW_CLASS","BOTTOM_BORDER_CLASS","FIELDS_CONTAINER_CLASS","FIELDS_CLASS","FIELD_CHOOSER_POPUP_CLASS","INCOMPRESSIBLE_FIELDS_CLASS","OVERFLOW_HIDDEN_CLASS","TR","TD","DIV","TEST_HEIGHT","FIELD_CALCULATED_OPTIONS","getArraySum","array","sum","_","value","adjustSizeArray","sizeArray","space","delta","length","i","unsubscribeScrollEvents","area","off","subscribeToScrollEvent","handler","on","scrollBarInfoCache","getScrollBarInfo","useNativeScrolling","scrollBarWidth","options","container","css","position","visibility","top","left","width","height","appendTo","content","useNative","useSimulatedScrollbar","dxScrollable","scrollBarUseNative","option","remove","getCommonBorderWidth","elements","direction","borderStyleNames","elem","computedStyle","getComputedStyle","get","forEach","borderStyleName","parseFloat","clickedOnFieldsArea","$targetElement","closest","find","PivotGrid","inherit","_getDefaultOptions","callBase","scrolling","timeout","renderingThreshold","minTimeout","mode","removeInvisiblePages","virtualRowHeight","virtualColumnWidth","loadTwoPagesOnStart","encodeHtml","dataSource","activeStateEnabled","fieldChooser","minWidth","minHeight","enabled","allowSearch","searchTimeout","layout","title","applyChangesMode","onContextMenuPreparing","allowSorting","allowSortingBySummary","allowFiltering","allowExpandAll","wordWrapEnabled","fieldPanel","showColumnFields","showFilterFields","showDataFields","showRowFields","allowFieldDragging","visible","texts","columnFieldArea","rowFieldArea","filterFieldArea","dataFieldArea","export","fileName","proxyUrl","ignoreExcelErrors","showRowTotals","showRowGrandTotals","showColumnTotals","showColumnGrandTotals","hideEmptySummaryCells","showTotalsPrior","rowHeaderLayout","loadPanel","text","showIndicator","indicatorSrc","showPane","grandTotal","total","getFormatter","noData","showFieldChooser","expandAll","collapseAll","sortColumnBySummary","sortRowBySummary","removeAllSorting","exportToExcel","dataNotAvailable","onCellClick","onCellPrepared","showBorders","stateStoring","storageKey","type","customLoad","customSave","savingTimeout","onExpandValueChanging","renderCellCountLimit","onExporting","onExported","onFileSaving","headerFilter","showRelevantValues","emptyValue","ok","cancel","_updateCalculatedOptions","fields","that","index","field","optionName","isCalculated","_initProperties","needUpdate","_getDataControllerOptions","component","onFieldsPrepared","_initDataController","_dataController","dispose","changed","add","_render","scrollChanged","_scrollLeft","_scrollTop","loadingChanged","isLoading","_updateLoading","progressChanged","bind","dataSourceChanged","_trigger","expandValueChanging","e","_init","_initActions","_actions","onChanged","_createActionByOption","eventName","eventArg","_optionChanged","args","indexOf","getDataSource","_fieldChooserPopup","hide","_renderFieldChooser","_invalidate","updateViewOptions","_renderContextMenu","_renderLoadPanel","_dataArea","groupElement","$element","_renderDescriptionArea","_tableElement","toggleClass","updateDimensions","_hasHeight","resize","_updateScrollPosition","columnsArea","rowsArea","dataArea","scrollTop","scrollLeft","scrolled","_scrollUpdating","hasScroll","scrollTo","x","y","updateWindowScrollPosition","_subscribeToEvents","scrollHandler","scrollOffset","leftOffset","topOffset","setViewportPosition","subscribeToWindowScrollEvents","_clean","_needDelayResizing","cellsInfo","cellsCount","_pivotGridContainer","fieldChooserOptions","toolbarItems","toolbar","location","widget","onClick","$content","dxPivotGridFieldChooser","fieldChooserComponentOptions","popupOptions","shading","showCloseButton","resizeEnabled","onResize","onShown","_createComponent","onHidden","resetTreeView","cancelChanges","addClass","$container","_contextMenu","onPositioning","actionArgs","event","targetElement","target","cellIndex","_createEventArgs","items","_getContextMenuItems","onItemClick","params","itemData","cssClass","areaFields","oppositeAreaFields","cell","path","paginate","push","beginGroup","icon","isLast","sortingBySummaryItemCount","dataFields","dataIndex","dataField","showDataFieldCaption","textFormat","checked","sortBySummaryField","join","sortBySummaryPath","caption","sortOrder","load","show","dxEvent","rowFields","getAreaFields","columnFields","_createFieldArgs","_createCellArgs","children","data","cellElement","$cellElement","columnIndex","rowIndex","parentElement","$table","_handleCellClick","currentTarget","expanded","setTimeout","_getNoDataText","_renderNoDataText","renderNoDataText","renderLoadPanel","progress","_loadPanel","loadPanelVisible","_startLoadingTime","Date","Math","floor","clearTimeout","_hideLoadingTimeoutID","removeClass","$descriptionCell","$toolbarContainer","$filterHeader","$columnHeader","$targetContainer","prependTo","$buttonElement","buttonOptions","hint","getFieldChooserPopup","_$buttonElement","_buttonOptions","_detectHasContainerHeight","element","style","is","testElement","append","_renderHeaders","rowHeaderContainer","columnHeaderContainer","filterHeaderContainer","dataHeaderContainer","_rowFields","render","_columnFields","_filterFields","_dataFields","dxPivotGridFieldChooserBase","renderSortable","_createTableElement","_renderDataArea","dataAreaElement","getCellsInfo","_renderRowsArea","rowsAreaElement","_rowsArea","getRowsInfo","_renderColumnsArea","columnsAreaElement","_columnsArea","getColumnsInfo","_initMarkup","apply","arguments","_renderContentImpl","tableElement","isFirstDrawing","attr","msie","prepend","headElement","parent","processScroll","_update","updateHandler","getData","_fireContentReadyAction","getScrollPath","_dimensionChanged","_visibilityChanged","_dispose","first","addWidgetPrefix","className","isReady","groupWidth","bordersWidth","totalWidth","totalHeight","rowsAreaWidth","hasRowsScroll","hasColumnsScroll","scrollingOptions","scrollBarInfo","dataAreaCell","rowAreaCell","columnAreaCell","descriptionCell","filterHeaderCell","columnHeaderCell","rowFieldsHeader","d","needSynchronizeFieldPanel","isVisible","updateColspans","getColumnsCount","reset","calculateHasScroll","areaSize","totalSize","calculateGroupHeight","dataAreaHeight","resultWidths","getColumnsWidth","rowHeights","getRowsHeight","rowsAreaHeights","slice","dataAreaHeights","descriptionCellHeight","paddings","borders","margins","columnsAreaRowCount","resultHeights","columnsAreaRowHeights","columnsAreaHeight","rowsAreaColumnWidths","filterAreaHeight","$dataHeader","dataHeaderHeight","max","resolve","elementWidth","diff","needAdjustWidthOnZoom","groupHeight","setRowsHeight","processScrollBarSpacing","setColumnsWidth","_diff","_diff2","_groupHeight","virtualContentParams","calculateVirtualContentParams","itemWidths","itemHeights","rowCount","columnCount","viewportWidth","viewportHeight","outerHeight","setVirtualContentParams","contentTop","contentLeft","updateScrollableResults","updateScrollable","done","applyPartialDataSource","include"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,SADJ,EAEIC,SAFJ,QAGO,yBAHP;AAIA,IAAIC,MAAM,GAAGF,SAAS,EAAtB;AACA,OAAOG,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SACIC,gBADJ,QAEO,oBAFP;AAGA,SACIC,MAAM,IAAIC,YADd,QAEO,yBAFP;AAGA,SACIC,IADJ,EAEIC,WAFJ,EAGIC,WAHJ,QAIO,yBAJP;AAKA,SACIC,IADJ,QAEO,2BAFP;AAGA,SACIC,SADJ,QAEO,uBAFP;AAGA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,IAAI,IAAIC,cADZ,QAEO,oBAFP;AAGA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACIC,YADJ,QAEO,0BAFP;AAGA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SACIC,gBADJ,EAEIC,SAFJ,EAGIC,qBAHJ,QAIO,uBAJP;AAKA,SACIC,cADJ,QAEO,iCAFP;AAGA,SACIC,QADJ,QAEO,2BAFP;AAGA,SACIC,mBADJ,EAEIC,qBAFJ,QAGO,8BAHP;AAIA,SACIC,OADJ,QAEO,uBAFP;AAGA,SACIC,UADJ,QAEO,6BAFP;AAGA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,yBAAP,MAAsC,oCAAtC;AACA,SACIC,WADJ,QAEO,wBAFP;AAGA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SACIC,IADJ,EAEIC,QAFJ,QAGO,2BAHP;AAIA,IAAIC,oBAAoB,GAAG,mBAA3B;AACA,IAAIC,mBAAmB,GAAG,kBAA1B;AACA,IAAIC,sBAAsB,GAAG,qBAA7B;AACA,IAAIC,2BAA2B,GAAG,0BAAlC;AACA,IAAIC,aAAa,GAAG,qBAApB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,gBAAgB,GAAG,eAAvB;AACA,IAAIC,mBAAmB,GAAG,kBAA1B;AACA,IAAIC,sBAAsB,GAAG,+BAA7B;AACA,IAAIC,YAAY,GAAG,gBAAnB;AACA,IAAIC,yBAAyB,GAAG,uBAAhC;AACA,IAAIC,2BAA2B,GAAG,0BAAlC;AACA,IAAIC,qBAAqB,GAAG,oBAA5B;AACA,IAAIC,EAAE,GAAG,MAAT;AACA,IAAIC,EAAE,GAAG,MAAT;AACA,IAAIC,GAAG,GAAG,OAAV;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,wBAAwB,GAAG,CAAC,cAAD,EAAiB,uBAAjB,EAA0C,gBAA1C,EAA4D,gBAA5D,CAA/B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,GAAG,GAAG,CAAV;AACA/C,EAAAA,IAAI,CAAC8C,KAAD,EAAS,UAASE,CAAT,EAAYC,KAAZ,EAAmB;AAC5BF,IAAAA,GAAG,IAAIE,KAAK,IAAI,CAAhB;AACH,GAFG,CAAJ;AAGA,SAAOF,GAAP;AACH;;AAED,SAASG,eAAT,CAAyBC,SAAzB,EAAoCC,KAApC,EAA2C;AACvC,MAAIC,KAAK,GAAGD,KAAK,GAAGD,SAAS,CAACG,MAA9B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACG,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACvCJ,IAAAA,SAAS,CAACI,CAAD,CAAT,IAAgBF,KAAhB;AACH;AACJ;;AAED,SAASG,uBAAT,CAAiCC,IAAjC,EAAuC;AACnCA,EAAAA,IAAI,CAACC,GAAL,CAAS,QAAT,EAAmBA,GAAnB,CAAuB,MAAvB;AACH;;AAED,SAASC,sBAAT,CAAgCF,IAAhC,EAAsCG,OAAtC,EAA+C;AAC3CJ,EAAAA,uBAAuB,CAACC,IAAD,CAAvB;AACAA,EAAAA,IAAI,CAACI,EAAL,CAAQ,QAAR,EAAkBD,OAAlB,EAA2BC,EAA3B,CAA8B,MAA9B,EAAsCD,OAAtC;AACH;;AACD,IAAIE,kBAAkB,GAAG,EAAzB;;AAEA,SAASC,gBAAT,CAA0BC,kBAA1B,EAA8C;AAC1C,MAAIF,kBAAkB,CAACE,kBAAD,CAAtB,EAA4C;AACxC,WAAOF,kBAAkB,CAACE,kBAAD,CAAzB;AACH;;AACD,MAAIC,cAAJ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAGhF,CAAC,CAACuD,GAAD,CAAD,CAAO0B,GAAP,CAAW;AACvBC,IAAAA,QAAQ,EAAE,UADa;AAEvBC,IAAAA,UAAU,EAAE,QAFW;AAGvBC,IAAAA,GAAG,EAAE,CAAC,GAHiB;AAIvBC,IAAAA,IAAI,EAAE,CAAC,GAJgB;AAKvBC,IAAAA,KAAK,EAAE,GALgB;AAMvBC,IAAAA,MAAM,EAAE;AANe,GAAX,EAObC,QAPa,CAOJ,MAPI,CAAhB;AAQA,MAAIC,OAAO,GAAGzF,CAAC,CAAC,KAAD,CAAD,CAASiF,GAAT,CAAa;AACvBK,IAAAA,KAAK,EAAE,MADgB;AAEvBC,IAAAA,MAAM,EAAE;AAFe,GAAb,EAGXC,QAHW,CAGFR,SAHE,CAAd;;AAIA,MAAI,WAAWH,kBAAf,EAAmC;AAC/BE,IAAAA,OAAO,CAACW,SAAR,GAAoB,CAAC,CAACb,kBAAtB;AACAE,IAAAA,OAAO,CAACY,qBAAR,GAAgC,CAACd,kBAAjC;AACH;;AACDG,EAAAA,SAAS,CAACY,YAAV,CAAuBb,OAAvB;AACA,MAAIc,kBAAkB,GAAGb,SAAS,CAACY,YAAV,CAAuB,UAAvB,EAAmCE,MAAnC,CAA0C,WAA1C,CAAzB;AACAhB,EAAAA,cAAc,GAAGe,kBAAkB,GAAGb,SAAS,CAACM,KAAV,KAAoBG,OAAO,CAACH,KAAR,EAAvB,GAAyC,CAA5E;AACAN,EAAAA,SAAS,CAACe,MAAV;AACApB,EAAAA,kBAAkB,CAACE,kBAAD,CAAlB,GAAyC;AACrCC,IAAAA,cAAc,EAAEA,cADqB;AAErCe,IAAAA,kBAAkB,EAAEA;AAFiB,GAAzC;AAIA,SAAOlB,kBAAkB,CAACE,kBAAD,CAAzB;AACH;;AAED,SAASmB,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;AAC/C,MAAIC,gBAAgB,GAAG,YAAYD,SAAZ,GAAwB,CAAC,iBAAD,EAAoB,kBAApB,CAAxB,GAAkE,CAAC,gBAAD,EAAmB,mBAAnB,CAAzF;AACA,MAAIZ,KAAK,GAAG,CAAZ;AACAzE,EAAAA,IAAI,CAACoF,QAAD,EAAY,UAASpC,CAAT,EAAYuC,IAAZ,EAAkB;AAC9B,QAAIC,aAAa,GAAGlG,MAAM,CAACmG,gBAAP,CAAwBF,IAAI,CAACG,GAAL,CAAS,CAAT,CAAxB,CAApB;AACAJ,IAAAA,gBAAgB,CAACK,OAAjB,CAA0B,UAASC,eAAT,EAA0B;AAChDnB,MAAAA,KAAK,IAAIoB,UAAU,CAACL,aAAa,CAACI,eAAD,CAAd,CAAV,IAA8C,CAAvD;AACH,KAFD;AAGH,GALG,CAAJ;AAMA,SAAOnB,KAAP;AACH;;AAED,SAASqB,mBAAT,CAA6BC,cAA7B,EAA6C;AACzC,SAAOA,cAAc,CAACC,OAAf,CAAuB,MAAM5D,YAA7B,EAA2CkB,MAA3C,IAAqDyC,cAAc,CAACE,IAAf,CAAoB,MAAM7D,YAA1B,EAAwCkB,MAApG;AACH;;AACD,IAAI4C,SAAS,GAAG5F,MAAM,CAAC6F,OAAP,CAAe;AAC3BC,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,WAAOlG,MAAM,CAAC,KAAKmG,QAAL,EAAD,EAAkB;AAC3BC,MAAAA,SAAS,EAAE;AACPC,QAAAA,OAAO,EAAE,GADF;AAEPC,QAAAA,kBAAkB,EAAE,GAFb;AAGPC,QAAAA,UAAU,EAAE,EAHL;AAIPC,QAAAA,IAAI,EAAE,UAJC;AAKP7B,QAAAA,SAAS,EAAE,MALJ;AAMP8B,QAAAA,oBAAoB,EAAE,IANf;AAOPC,QAAAA,gBAAgB,EAAE,EAPX;AAQPC,QAAAA,kBAAkB,EAAE,GARb;AASPC,QAAAA,mBAAmB,EAAE;AATd,OADgB;AAY3BC,MAAAA,UAAU,EAAE,IAZe;AAa3BC,MAAAA,UAAU,EAAE,IAbe;AAc3BC,MAAAA,kBAAkB,EAAE,KAdO;AAe3BC,MAAAA,YAAY,EAAE;AACVC,QAAAA,QAAQ,EAAE,GADA;AAEVC,QAAAA,SAAS,EAAE,GAFD;AAGVC,QAAAA,OAAO,EAAE,IAHC;AAIVC,QAAAA,WAAW,EAAE,KAJH;AAKVC,QAAAA,aAAa,EAAE,GALL;AAMVC,QAAAA,MAAM,EAAE,CANE;AAOVC,QAAAA,KAAK,EAAEpH,mBAAmB,CAACV,MAApB,CAA2B,+BAA3B,CAPG;AAQV8E,QAAAA,KAAK,EAAE,GARG;AASVC,QAAAA,MAAM,EAAE,GATE;AAUVgD,QAAAA,gBAAgB,EAAE;AAVR,OAfa;AA2B3BC,MAAAA,sBAAsB,EAAE,IA3BG;AA4B3BC,MAAAA,YAAY,EAAE,KA5Ba;AA6B3BC,MAAAA,qBAAqB,EAAE,KA7BI;AA8B3BC,MAAAA,cAAc,EAAE,KA9BW;AA+B3BC,MAAAA,cAAc,EAAE,KA/BW;AAgC3BC,MAAAA,eAAe,EAAE,IAhCU;AAiC3BC,MAAAA,UAAU,EAAE;AACRC,QAAAA,gBAAgB,EAAE,IADV;AAERC,QAAAA,gBAAgB,EAAE,IAFV;AAGRC,QAAAA,cAAc,EAAE,IAHR;AAIRC,QAAAA,aAAa,EAAE,IAJP;AAKRC,QAAAA,kBAAkB,EAAE,IALZ;AAMRC,QAAAA,OAAO,EAAE,KAND;AAORC,QAAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAEpI,mBAAmB,CAACV,MAApB,CAA2B,6BAA3B,CADd;AAEH+I,UAAAA,YAAY,EAAErI,mBAAmB,CAACV,MAApB,CAA2B,0BAA3B,CAFX;AAGHgJ,UAAAA,eAAe,EAAEtI,mBAAmB,CAACV,MAApB,CAA2B,6BAA3B,CAHd;AAIHiJ,UAAAA,aAAa,EAAEvI,mBAAmB,CAACV,MAApB,CAA2B,2BAA3B;AAJZ;AAPC,OAjCe;AA+C3BiJ,MAAAA,aAAa,EAAE,QA/CY;AAgD3BC,MAAAA,MAAM,EAAE;AACJxB,QAAAA,OAAO,EAAE,KADL;AAEJyB,QAAAA,QAAQ,EAAE,WAFN;AAGJC,QAAAA,QAAQ,EAAE,KAAK,CAHX;AAIJC,QAAAA,iBAAiB,EAAE;AAJf,OAhDmB;AAsD3BC,MAAAA,aAAa,EAAE,IAtDY;AAuD3BC,MAAAA,kBAAkB,EAAE,IAvDO;AAwD3BC,MAAAA,gBAAgB,EAAE,IAxDS;AAyD3BC,MAAAA,qBAAqB,EAAE,IAzDI;AA0D3BC,MAAAA,qBAAqB,EAAE,IA1DI;AA2D3BC,MAAAA,eAAe,EAAE,MA3DU;AA4D3BC,MAAAA,eAAe,EAAE,UA5DU;AA6D3BC,MAAAA,SAAS,EAAE;AACPnC,QAAAA,OAAO,EAAE,IADF;AAEPoC,QAAAA,IAAI,EAAEpJ,mBAAmB,CAACV,MAApB,CAA2B,SAA3B,CAFC;AAGP8E,QAAAA,KAAK,EAAE,GAHA;AAIPC,QAAAA,MAAM,EAAE,EAJD;AAKPgF,QAAAA,aAAa,EAAE,IALR;AAMPC,QAAAA,YAAY,EAAE,EANP;AAOPC,QAAAA,QAAQ,EAAE;AAPH,OA7DgB;AAsE3BpB,MAAAA,KAAK,EAAE;AACHqB,QAAAA,UAAU,EAAExJ,mBAAmB,CAACV,MAApB,CAA2B,wBAA3B,CADT;AAEHmK,QAAAA,KAAK,EAAEzJ,mBAAmB,CAAC0J,YAApB,CAAiC,mBAAjC,CAFJ;AAGHC,QAAAA,MAAM,EAAE3J,mBAAmB,CAACV,MAApB,CAA2B,uBAA3B,CAHL;AAIHsK,QAAAA,gBAAgB,EAAE5J,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B,CAJf;AAKHuK,QAAAA,SAAS,EAAE7J,mBAAmB,CAACV,MAApB,CAA2B,uBAA3B,CALR;AAMHwK,QAAAA,WAAW,EAAE9J,mBAAmB,CAACV,MAApB,CAA2B,yBAA3B,CANV;AAOHyK,QAAAA,mBAAmB,EAAE/J,mBAAmB,CAAC0J,YAApB,CAAiC,iCAAjC,CAPlB;AAQHM,QAAAA,gBAAgB,EAAEhK,mBAAmB,CAAC0J,YAApB,CAAiC,8BAAjC,CARf;AASHO,QAAAA,gBAAgB,EAAEjK,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B,CATf;AAUH4K,QAAAA,aAAa,EAAElK,mBAAmB,CAACV,MAApB,CAA2B,0BAA3B,CAVZ;AAWH6K,QAAAA,gBAAgB,EAAEnK,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B;AAXf,OAtEoB;AAmF3B8K,MAAAA,WAAW,EAAE,IAnFc;AAoF3BC,MAAAA,cAAc,EAAE,IApFW;AAqF3BC,MAAAA,WAAW,EAAE,KArFc;AAsF3BC,MAAAA,YAAY,EAAE;AACVvD,QAAAA,OAAO,EAAE,KADC;AAEVwD,QAAAA,UAAU,EAAE,IAFF;AAGVC,QAAAA,IAAI,EAAE,cAHI;AAIVC,QAAAA,UAAU,EAAE,IAJF;AAKVC,QAAAA,UAAU,EAAE,IALF;AAMVC,QAAAA,aAAa,EAAE;AANL,OAtFa;AA8F3BC,MAAAA,qBAAqB,EAAE,IA9FI;AA+F3BC,MAAAA,oBAAoB,EAAE,GA/FK;AAgG3BC,MAAAA,WAAW,EAAE,IAhGc;AAiG3BC,MAAAA,UAAU,EAAE,IAjGe;AAkG3BC,MAAAA,YAAY,EAAE,IAlGa;AAmG3BC,MAAAA,YAAY,EAAE;AACV9G,QAAAA,KAAK,EAAE,GADG;AAEVC,QAAAA,MAAM,EAAE,GAFE;AAGV4C,QAAAA,WAAW,EAAE,KAHH;AAIVkE,QAAAA,kBAAkB,EAAE,KAJV;AAKVjE,QAAAA,aAAa,EAAE,GALL;AAMViB,QAAAA,KAAK,EAAE;AACHiD,UAAAA,UAAU,EAAEpL,mBAAmB,CAACV,MAApB,CAA2B,mCAA3B,CADT;AAEH+L,UAAAA,EAAE,EAAErL,mBAAmB,CAACV,MAApB,CAA2B,2BAA3B,CAFD;AAGHgM,UAAAA,MAAM,EAAEtL,mBAAmB,CAACV,MAApB,CAA2B,+BAA3B;AAHL;AANG;AAnGa,KAAlB,CAAb;AAgHH,GAlH0B;AAmH3BiM,EAAAA,wBAAwB,EAAE,kCAASC,MAAT,EAAiB;AACvC,QAAIC,IAAI,GAAG,IAAX;AACA9L,IAAAA,IAAI,CAAC6L,MAAD,EAAU,UAASE,KAAT,EAAgBC,KAAhB,EAAuB;AACjChM,MAAAA,IAAI,CAAC4C,wBAAD,EAA4B,UAASI,CAAT,EAAYiJ,UAAZ,EAAwB;AACpD,YAAIC,YAAY,GAAGF,KAAK,CAACG,eAAN,IAAyBF,UAAU,IAAID,KAAK,CAACG,eAA7C,IAAgE,KAAK,CAAL,KAAWH,KAAK,CAACG,eAAN,CAAsBF,UAAtB,CAA9F;AACA,YAAIG,UAAU,GAAG,KAAK,CAAL,KAAWJ,KAAK,CAACC,UAAD,CAAhB,IAAgCC,YAAjD;;AACA,YAAIE,UAAJ,EAAgB;AACZ3L,UAAAA,gBAAgB,CAACuL,KAAD,EAAQC,UAAR,EAAoBH,IAAI,CAAC7G,MAAL,CAAYgH,UAAZ,CAApB,CAAhB;AACH;AACJ,OANG,CAAJ;AAOH,KARG,CAAJ;AASH,GA9H0B;AA+H3BI,EAAAA,yBAAyB,EAAE,qCAAW;AAClC,QAAIP,IAAI,GAAG,IAAX;AACA,WAAO;AACHQ,MAAAA,SAAS,EAAER,IADR;AAEH9E,MAAAA,UAAU,EAAE8E,IAAI,CAAC7G,MAAL,CAAY,YAAZ,CAFT;AAGHuD,MAAAA,KAAK,EAAEsD,IAAI,CAAC7G,MAAL,CAAY,OAAZ,CAHJ;AAIHgE,MAAAA,aAAa,EAAE6C,IAAI,CAAC7G,MAAL,CAAY,eAAZ,CAJZ;AAKHiE,MAAAA,kBAAkB,EAAE4C,IAAI,CAAC7G,MAAL,CAAY,oBAAZ,CALjB;AAMHkE,MAAAA,gBAAgB,EAAE2C,IAAI,CAAC7G,MAAL,CAAY,kBAAZ,CANf;AAOHqE,MAAAA,eAAe,EAAEwC,IAAI,CAAC7G,MAAL,CAAY,iBAAZ,CAPd;AAQHmE,MAAAA,qBAAqB,EAAE0C,IAAI,CAAC7G,MAAL,CAAY,uBAAZ,CARpB;AASH2D,MAAAA,aAAa,EAAEkD,IAAI,CAAC7G,MAAL,CAAY,eAAZ,CATZ;AAUHsE,MAAAA,eAAe,EAAEuC,IAAI,CAAC7G,MAAL,CAAY,iBAAZ,CAVd;AAWHoE,MAAAA,qBAAqB,EAAEyC,IAAI,CAAC7G,MAAL,CAAY,uBAAZ,CAXpB;AAYHsH,MAAAA,gBAAgB,EAAE,0BAASV,MAAT,EAAiB;AAC/BC,QAAAA,IAAI,CAACF,wBAAL,CAA8BC,MAA9B;AACH;AAdE,KAAP;AAgBH,GAjJ0B;AAkJ3BW,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIV,IAAI,GAAG,IAAX;AACAA,IAAAA,IAAI,CAACW,eAAL,IAAwBX,IAAI,CAACW,eAAL,CAAqBC,OAArB,EAAxB;AACAZ,IAAAA,IAAI,CAACW,eAAL,GAAuB,IAAI7L,cAAJ,CAAmBkL,IAAI,CAACO,yBAAL,EAAnB,CAAvB;;AACA,QAAIhN,SAAS,EAAb,EAAiB;AACbyM,MAAAA,IAAI,CAACW,eAAL,CAAqBE,OAArB,CAA6BC,GAA7B,CAAkC,YAAW;AACzCd,QAAAA,IAAI,CAACe,OAAL;AACH,OAFD;AAGH;;AACDf,IAAAA,IAAI,CAACW,eAAL,CAAqBK,aAArB,CAAmCF,GAAnC,CAAwC,UAAS1I,OAAT,EAAkB;AACtD4H,MAAAA,IAAI,CAACiB,WAAL,GAAmB7I,OAAO,CAACM,IAA3B;AACAsH,MAAAA,IAAI,CAACkB,UAAL,GAAkB9I,OAAO,CAACK,GAA1B;AACH,KAHD;;AAIAuH,IAAAA,IAAI,CAACW,eAAL,CAAqBQ,cAArB,CAAoCL,GAApC,CAAyC,UAASM,SAAT,EAAoB;AACzDpB,MAAAA,IAAI,CAACqB,cAAL;AACH,KAFD;;AAGArB,IAAAA,IAAI,CAACW,eAAL,CAAqBW,eAArB,CAAqCR,GAArC,CAAyCd,IAAI,CAACqB,cAAL,CAAoBE,IAApB,CAAyBvB,IAAzB,CAAzC;;AACAA,IAAAA,IAAI,CAACW,eAAL,CAAqBa,iBAArB,CAAuCV,GAAvC,CAA4C,YAAW;AACnDd,MAAAA,IAAI,CAACyB,QAAL,CAAc,WAAd;AACH,KAFD;;AAGA,QAAIC,mBAAmB,GAAG1B,IAAI,CAAC7G,MAAL,CAAY,uBAAZ,CAA1B;;AACA,QAAIuI,mBAAJ,EAAyB;AACrB1B,MAAAA,IAAI,CAACW,eAAL,CAAqBe,mBAArB,CAAyCZ,GAAzC,CAA8C,UAASa,CAAT,EAAY;AACtDD,QAAAA,mBAAmB,CAACC,CAAD,CAAnB;AACH,OAFD;AAGH;AACJ,GA5K0B;AA6K3BC,EAAAA,KAAK,EAAE,iBAAW;AACd,SAAKrH,QAAL;;AACA,SAAKmG,mBAAL;;AACA,SAAKO,WAAL,GAAmB,KAAKC,UAAL,GAAkB,IAArC;;AACA,SAAKW,YAAL;AACH,GAlL0B;AAmL3BA,EAAAA,YAAY,EAAE,wBAAW;AACrB,SAAKC,QAAL,GAAgB;AACZC,MAAAA,SAAS,EAAE,KAAKC,qBAAL,CAA2B,WAA3B,CADC;AAEZnG,MAAAA,sBAAsB,EAAE,KAAKmG,qBAAL,CAA2B,wBAA3B,CAFZ;AAGZrD,MAAAA,WAAW,EAAE,KAAKqD,qBAAL,CAA2B,aAA3B,CAHD;AAIZ1C,MAAAA,WAAW,EAAE,KAAK0C,qBAAL,CAA2B,aAA3B,CAJD;AAKZzC,MAAAA,UAAU,EAAE,KAAKyC,qBAAL,CAA2B,YAA3B,CALA;AAMZxC,MAAAA,YAAY,EAAE,KAAKwC,qBAAL,CAA2B,cAA3B,CANF;AAOZpD,MAAAA,cAAc,EAAE,KAAKoD,qBAAL,CAA2B,gBAA3B;AAPJ,KAAhB;AASH,GA7L0B;AA8L3BP,EAAAA,QAAQ,EAAE,kBAASQ,SAAT,EAAoBC,QAApB,EAA8B;AACpC,SAAKJ,QAAL,CAAcG,SAAd,EAAyBC,QAAzB;AACH,GAhM0B;AAiM3BC,EAAAA,cAAc,EAAE,wBAASC,IAAT,EAAe;AAC3B,QAAItL,wBAAwB,CAACuL,OAAzB,CAAiCD,IAAI,CAAC/N,IAAtC,KAA+C,CAAnD,EAAsD;AAClD,UAAI0L,MAAM,GAAG,KAAKuC,aAAL,GAAqBvC,MAArB,EAAb;;AACA,WAAKD,wBAAL,CAA8BC,MAA9B;AACH;;AACD,YAAQqC,IAAI,CAAC/N,IAAb;AACI,WAAK,YAAL;AACA,WAAK,cAAL;AACA,WAAK,gBAAL;AACA,WAAK,gBAAL;AACA,WAAK,uBAAL;AACA,WAAK,WAAL;AACA,WAAK,cAAL;AACI,aAAKqM,mBAAL;;AACA,aAAK6B,kBAAL,CAAwBC,IAAxB;;AACA,aAAKC,mBAAL;;AACA,aAAKC,WAAL;;AACA;;AACJ,WAAK,OAAL;AACA,WAAK,iBAAL;AACA,WAAK,eAAL;AACA,WAAK,oBAAL;AACA,WAAK,kBAAL;AACA,WAAK,uBAAL;AACA,WAAK,uBAAL;AACA,WAAK,eAAL;AACI,aAAK/B,eAAL,CAAqBgC,iBAArB,CAAuC,KAAKpC,yBAAL,EAAvC;;AACA;;AACJ,WAAK,oBAAL;AACA,WAAK,YAAL;AACA,WAAK,sBAAL;AACI;;AACJ,WAAK,YAAL;AACI,aAAKhG,QAAL,CAAc6H,IAAd;;AACA,aAAKK,mBAAL;;AACA,aAAKG,kBAAL;;AACArP,QAAAA,SAAS,MAAM,KAAKsP,gBAAL,CAAsB,KAAKC,SAAL,CAAeC,YAAf,EAAtB,EAAqD,KAAKC,QAAL,EAArD,CAAf;;AACA,aAAKN,WAAL;;AACA;;AACJ,WAAK,QAAL;AACI,aAAKO,sBAAL;;AACA;;AACJ,WAAK,uBAAL;AACI;;AACJ,WAAK,aAAL;AACA,WAAK,wBAAL;AACA,WAAK,aAAL;AACA,WAAK,YAAL;AACA,WAAK,cAAL;AACA,WAAK,gBAAL;AACI,aAAKnB,QAAL,CAAcM,IAAI,CAAC/N,IAAnB,IAA2B,KAAK2N,qBAAL,CAA2BI,IAAI,CAAC/N,IAAhC,CAA3B;AACA;;AACJ,WAAK,cAAL;AACI,aAAKoO,mBAAL;;AACA,aAAKQ,sBAAL;;AACA;;AACJ,WAAK,WAAL;AACI,YAAI1P,SAAS,EAAb,EAAiB;AACb,eAAKsP,gBAAL,CAAsB,KAAKC,SAAL,CAAeC,YAAf,EAAtB,EAAqD,KAAKC,QAAL,EAArD;;AACA,eAAKN,WAAL;AACH;;AACD;;AACJ,WAAK,YAAL;AACI,aAAKO,sBAAL;;AACA,aAAKP,WAAL;;AACA;;AACJ,WAAK,cAAL;AACI,aAAKD,mBAAL;;AACA,aAAKC,WAAL;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKQ,aAAL,GAAqBC,WAArB,CAAiCnN,aAAjC,EAAgD,CAAC,CAACoM,IAAI,CAACjL,KAAvD;;AACA,aAAKiM,gBAAL;AACA;;AACJ,WAAK,iBAAL;AACI,aAAKF,aAAL,GAAqBC,WAArB,CAAiC,cAAjC,EAAiD,CAAC,CAACf,IAAI,CAACjL,KAAxD;;AACA,aAAKiM,gBAAL;AACA;;AACJ,WAAK,iBAAL;AACI,aAAKF,aAAL,GAAqB/I,IAArB,CAA0B,MAAMtE,mBAAhC,EAAqDsN,WAArD,CAAiE,mBAAjE,EAAsF,WAAWf,IAAI,CAACjL,KAAtG;;AACA,aAAKwJ,eAAL,CAAqBgC,iBAArB,CAAuC,KAAKpC,yBAAL,EAAvC;;AACA;;AACJ,WAAK,QAAL;AACA,WAAK,OAAL;AACI,aAAK8C,UAAL,GAAkB,IAAlB;AACA,aAAK9I,QAAL,CAAc6H,IAAd;AACA,aAAKkB,MAAL;AACA;;AACJ;AACI,aAAK/I,QAAL,CAAc6H,IAAd;AApFR;AAsFH,GA5R0B;AA6R3BmB,EAAAA,qBAAqB,EAAE,+BAASC,WAAT,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAC7D,QAAIC,SAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,QAAQ,GAAG,KAAK3C,UAAL,IAAmB,KAAKD,WAAvC;;AACA,QAAI,KAAK6C,eAAT,EAA0B;AACtB;AACH;;AACD,SAAKA,eAAL,GAAuB,IAAvB;;AACA,QAAIL,QAAQ,IAAI,CAACA,QAAQ,CAACM,SAAT,EAAb,IAAqC,KAAKV,UAA9C,EAA0D;AACtD,WAAKnC,UAAL,GAAkB,IAAlB;AACH;;AACD,QAAIsC,WAAW,IAAI,CAACA,WAAW,CAACO,SAAZ,EAApB,EAA6C;AACzC,WAAK9C,WAAL,GAAmB,IAAnB;AACH;;AACD,QAAI,SAAS,KAAKC,UAAd,IAA4B,SAAS,KAAKD,WAA1C,IAAyD4C,QAAzD,IAAqE,KAAK1K,MAAL,CAAY,YAAZ,CAAzE,EAAoG;AAChGwK,MAAAA,SAAS,GAAG,KAAKzC,UAAL,IAAmB,CAA/B;AACA0C,MAAAA,UAAU,GAAG,KAAK3C,WAAL,IAAoB,CAAjC;AACAyC,MAAAA,QAAQ,CAACM,QAAT,CAAkB;AACdC,QAAAA,CAAC,EAAEL,UADW;AAEdM,QAAAA,CAAC,EAAEP;AAFW,OAAlB;AAIAH,MAAAA,WAAW,CAACQ,QAAZ,CAAqBJ,UAArB;AACAH,MAAAA,QAAQ,CAACO,QAAT,CAAkBL,SAAlB;;AACA,WAAKhD,eAAL,CAAqBwD,0BAArB,CAAgD,KAAKjD,UAArD;AACH;;AACD,SAAK4C,eAAL,GAAuB,KAAvB;AACH,GAvT0B;AAwT3BM,EAAAA,kBAAkB,EAAE,4BAASZ,WAAT,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAC1D,QAAI1D,IAAI,GAAG,IAAX;;AACA,QAAIqE,aAAa,GAAG,SAAhBA,aAAgB,CAAS1C,CAAT,EAAY;AAC5B,UAAI2C,YAAY,GAAG3C,CAAC,CAAC2C,YAArB;AACA,UAAIC,UAAU,GAAGpQ,SAAS,CAACmQ,YAAY,CAAC5L,IAAd,CAAT,GAA+B4L,YAAY,CAAC5L,IAA5C,GAAmDsH,IAAI,CAACiB,WAAzE;AACA,UAAIuD,SAAS,GAAGrQ,SAAS,CAACmQ,YAAY,CAAC7L,GAAd,CAAT,IAA+BuH,IAAI,CAACqD,UAApC,GAAiDiB,YAAY,CAAC7L,GAA9D,GAAoEuH,IAAI,CAACkB,UAAzF;;AACA,UAAI,CAAClB,IAAI,CAACiB,WAAL,IAAoB,CAArB,OAA6BsD,UAAU,IAAI,CAA3C,KAAiD,CAACvE,IAAI,CAACkB,UAAL,IAAmB,CAApB,OAA4BsD,SAAS,IAAI,CAAzC,CAArD,EAAkG;AAC9FxE,QAAAA,IAAI,CAACiB,WAAL,GAAmBsD,UAAnB;AACAvE,QAAAA,IAAI,CAACkB,UAAL,GAAkBsD,SAAlB;;AACAxE,QAAAA,IAAI,CAACuD,qBAAL,CAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,QAAlD;;AACA,YAAI,cAAc1D,IAAI,CAAC7G,MAAL,CAAY,gBAAZ,CAAlB,EAAiD;AAC7C6G,UAAAA,IAAI,CAACW,eAAL,CAAqB8D,mBAArB,CAAyCzE,IAAI,CAACiB,WAA9C,EAA2DjB,IAAI,CAACkB,UAAhE;AACH;AACJ;AACJ,KAZD;;AAaAhN,IAAAA,IAAI,CAAC,CAACsP,WAAD,EAAcC,QAAd,EAAwBC,QAAxB,CAAD,EAAqC,UAASxM,CAAT,EAAYS,IAAZ,EAAkB;AACvDE,MAAAA,sBAAsB,CAACF,IAAD,EAAO0M,aAAP,CAAtB;AACH,KAFG,CAAJ;AAGA,KAACrE,IAAI,CAACqD,UAAN,IAAoBrD,IAAI,CAACW,eAAL,CAAqB+D,6BAArB,CAAmDhB,QAAQ,CAACX,YAAT,EAAnD,CAApB;AACH,GA3U0B;AA4U3B4B,EAAAA,MAAM,EAAE5Q,IA5UmB;AA6U3B6Q,EAAAA,kBAAkB,EAAE,4BAASC,SAAT,EAAoB;AACpC,QAAIC,UAAU,GAAGD,SAAS,CAACrN,MAAV,IAAoBqN,SAAS,CAACrN,MAAV,GAAmBqN,SAAS,CAAC,CAAD,CAAT,CAAarN,MAAhC,GAAyC,CAA7D,CAAjB;AACA,WAAOsN,UAAU,GAAG,KAAK3L,MAAL,CAAY,sBAAZ,CAApB;AACH,GAhV0B;AAiV3BsJ,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIzC,IAAI,GAAG,IAAX;AACA,QAAI3H,SAAS,GAAG2H,IAAI,CAAC+E,mBAArB;AACA,QAAIC,mBAAmB,GAAGhF,IAAI,CAAC7G,MAAL,CAAY,cAAZ,KAA+B,EAAzD;AACA,QAAI8L,YAAY,GAAG,eAAeD,mBAAmB,CAACpJ,gBAAnC,GAAsD,CAAC;AACtEsJ,MAAAA,OAAO,EAAE,QAD6D;AAEtEC,MAAAA,QAAQ,EAAE,OAF4D;AAGtEC,MAAAA,MAAM,EAAE,UAH8D;AAItEhN,MAAAA,OAAO,EAAE;AACLuF,QAAAA,IAAI,EAAEpJ,mBAAmB,CAACV,MAApB,CAA2B,IAA3B,CADD;AAELwR,QAAAA,OAAO,EAAE,iBAAS1D,CAAT,EAAY;AACjB3B,UAAAA,IAAI,CAACuC,kBAAL,CAAwB+C,QAAxB,GAAmCC,uBAAnC,CAA2D,cAA3D;;AACAvF,UAAAA,IAAI,CAACuC,kBAAL,CAAwBC,IAAxB;AACH;AALI;AAJ6D,KAAD,EAWtE;AACC0C,MAAAA,OAAO,EAAE,QADV;AAECC,MAAAA,QAAQ,EAAE,OAFX;AAGCC,MAAAA,MAAM,EAAE,UAHT;AAIChN,MAAAA,OAAO,EAAE;AACLuF,QAAAA,IAAI,EAAEpJ,mBAAmB,CAACV,MAApB,CAA2B,QAA3B,CADD;AAELwR,QAAAA,OAAO,EAAE,iBAAS1D,CAAT,EAAY;AACjB3B,UAAAA,IAAI,CAACuC,kBAAL,CAAwBC,IAAxB;AACH;AAJI;AAJV,KAXsE,CAAtD,GAqBd,EArBL;AAsBA,QAAIgD,4BAA4B,GAAG;AAC/B9J,MAAAA,MAAM,EAAEsJ,mBAAmB,CAACtJ,MADG;AAE/BgB,MAAAA,KAAK,EAAEsI,mBAAmB,CAACtI,KAApB,IAA6B,EAFL;AAG/BxB,MAAAA,UAAU,EAAE8E,IAAI,CAACsC,aAAL,EAHmB;AAI/B9G,MAAAA,WAAW,EAAEwJ,mBAAmB,CAACxJ,WAJF;AAK/BC,MAAAA,aAAa,EAAEuJ,mBAAmB,CAACvJ,aALJ;AAM/B9C,MAAAA,KAAK,EAAE,KAAK,CANmB;AAO/BC,MAAAA,MAAM,EAAE,KAAK,CAPkB;AAQ/B6G,MAAAA,YAAY,EAAEO,IAAI,CAAC7G,MAAL,CAAY,cAAZ,CARiB;AAS/B8B,MAAAA,UAAU,EAAE+E,IAAI,CAAC7G,MAAL,CAAY,YAAZ,CATmB;AAU/ByC,MAAAA,gBAAgB,EAAEoJ,mBAAmB,CAACpJ,gBAVP;AAW/BC,MAAAA,sBAAsB,EAAE,gCAAS8F,CAAT,EAAY;AAChC3B,QAAAA,IAAI,CAACyB,QAAL,CAAc,wBAAd,EAAwCE,CAAxC;AACH;AAb8B,KAAnC;AAeA,QAAI8D,YAAY,GAAG;AACfC,MAAAA,OAAO,EAAE,KADM;AAEf/J,MAAAA,KAAK,EAAEqJ,mBAAmB,CAACrJ,KAFZ;AAGfhD,MAAAA,KAAK,EAAEqM,mBAAmB,CAACrM,KAHZ;AAIfC,MAAAA,MAAM,EAAEoM,mBAAmB,CAACpM,MAJb;AAKf+M,MAAAA,eAAe,EAAE,IALF;AAMfC,MAAAA,aAAa,EAAE,IANA;AAOfvK,MAAAA,QAAQ,EAAE2J,mBAAmB,CAAC3J,QAPf;AAQfC,MAAAA,SAAS,EAAE0J,mBAAmB,CAAC1J,SARhB;AASf2J,MAAAA,YAAY,EAAEA,YATC;AAUfY,MAAAA,QAAQ,EAAE,kBAASlE,CAAT,EAAY;AAClBA,QAAAA,CAAC,CAACnB,SAAF,CAAY8E,QAAZ,GAAuBC,uBAAvB,CAA+C,kBAA/C;AACH,OAZc;AAafO,MAAAA,OAAO,EAAE,iBAASnE,CAAT,EAAY;AACjB3B,QAAAA,IAAI,CAAC+F,gBAAL,CAAsBpE,CAAC,CAACnB,SAAF,CAAY1H,OAAZ,EAAtB,EAA6C1D,qBAA7C,EAAoEoQ,4BAApE;AACH,OAfc;AAgBfQ,MAAAA,QAAQ,EAAE,kBAASrE,CAAT,EAAY;AAClB,YAAIvG,YAAY,GAAGuG,CAAC,CAACnB,SAAF,CAAY8E,QAAZ,GAAuBC,uBAAvB,CAA+C,UAA/C,CAAnB;AACAnK,QAAAA,YAAY,CAAC6K,aAAb;AACA7K,QAAAA,YAAY,CAAC8K,aAAb;AACH;AApBc,KAAnB;;AAsBA,QAAIlG,IAAI,CAACuC,kBAAT,EAA6B;AACzBvC,MAAAA,IAAI,CAACuC,kBAAL,CAAwBpJ,MAAxB,CAA+BsM,YAA/B;;AACAzF,MAAAA,IAAI,CAACuC,kBAAL,CAAwB+C,QAAxB,GAAmCC,uBAAnC,CAA2DC,4BAA3D;AACH,KAHD,MAGO;AACHxF,MAAAA,IAAI,CAACuC,kBAAL,GAA0BvC,IAAI,CAAC+F,gBAAL,CAAsB1S,CAAC,CAACuD,GAAD,CAAD,CAAOuP,QAAP,CAAgB5P,yBAAhB,EAA2CsC,QAA3C,CAAoDR,SAApD,CAAtB,EAAsF7C,KAAtF,EAA6FiQ,YAA7F,CAA1B;AACH;AACJ,GAtZ0B;AAuZ3B7C,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,QAAI5C,IAAI,GAAG,IAAX;AACA,QAAIoG,UAAU,GAAGpG,IAAI,CAAC+E,mBAAtB;;AACA,QAAI/E,IAAI,CAACqG,YAAT,EAAuB;AACnBrG,MAAAA,IAAI,CAACqG,YAAL,CAAkBrD,QAAlB,GAA6B5J,MAA7B;AACH;;AACD4G,IAAAA,IAAI,CAACqG,YAAL,GAAoBrG,IAAI,CAAC+F,gBAAL,CAAsB1S,CAAC,CAACuD,GAAD,CAAD,CAAOiC,QAAP,CAAgBuN,UAAhB,CAAtB,EAAmD3Q,WAAnD,EAAgE;AAChF6Q,MAAAA,aAAa,EAAE,uBAASC,UAAT,EAAqB;AAChC,YAAIC,KAAK,GAAGD,UAAU,CAACC,KAAvB;AACAD,QAAAA,UAAU,CAAC1G,MAAX,GAAoB,IAApB;;AACA,YAAI,CAAC2G,KAAL,EAAY;AACR;AACH;;AACD,YAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAb,IAA0B,CAA1B,GAA8BH,KAAK,CAACE,MAApC,GAA6CrT,CAAC,CAACmT,KAAK,CAACE,MAAP,CAAD,CAAgBxM,OAAhB,CAAwB,IAAxB,EAA8BN,GAA9B,CAAkC,CAAlC,CAAjE;;AACA,YAAI,CAAC6M,aAAL,EAAoB;AAChB;AACH;;AACD,YAAIrE,IAAI,GAAGpC,IAAI,CAAC4G,gBAAL,CAAsBH,aAAtB,EAAqCD,KAArC,CAAX;;AACA,YAAIK,KAAK,GAAG7G,IAAI,CAAC8G,oBAAL,CAA0B1E,IAA1B,CAAZ;;AACA,YAAIyE,KAAJ,EAAW;AACPN,UAAAA,UAAU,CAAC/F,SAAX,CAAqBrH,MAArB,CAA4B,OAA5B,EAAqC0N,KAArC;AACAN,UAAAA,UAAU,CAAC1G,MAAX,GAAoB,KAApB;AACA;AACH;AACJ,OAlB+E;AAmBhFkH,MAAAA,WAAW,EAAE,qBAASC,MAAT,EAAiB;AAC1BA,QAAAA,MAAM,CAACC,QAAP,CAAgBF,WAAhB,IAA+BC,MAAM,CAACC,QAAP,CAAgBF,WAAhB,CAA4BC,MAA5B,CAA/B;AACH,OArB+E;AAsBhFE,MAAAA,QAAQ,EAAEjR,eAtBsE;AAuBhFyQ,MAAAA,MAAM,EAAE1G,IAAI,CAACgD,QAAL;AAvBwE,KAAhE,CAApB;AAyBH,GAtb0B;AAub3B8D,EAAAA,oBAAoB,EAAE,8BAASnF,CAAT,EAAY;AAC9B,QAAI3B,IAAI,GAAG,IAAX;AACA,QAAI6G,KAAK,GAAG,EAAZ;AACA,QAAInK,KAAK,GAAGsD,IAAI,CAAC7G,MAAL,CAAY,OAAZ,CAAZ;;AACA,QAAI,UAAUwI,CAAC,CAAChK,IAAZ,IAAoB,aAAagK,CAAC,CAAChK,IAAvC,EAA6C;AACzC,UAAIwP,UAAU,GAAGxF,CAAC,CAACA,CAAC,CAAChK,IAAF,GAAS,QAAV,CAAlB;AACA,UAAIyP,kBAAkB,GAAGzF,CAAC,CAAC,aAAaA,CAAC,CAAChK,IAAf,GAAsB,WAAtB,GAAoC,cAArC,CAA1B;AACA,UAAIuI,KAAK,GAAGyB,CAAC,CAAC0F,IAAF,CAAOC,IAAP,IAAeH,UAAU,CAACxF,CAAC,CAAC0F,IAAF,CAAOC,IAAP,CAAY9P,MAAZ,GAAqB,CAAtB,CAArC;AACA,UAAI0D,UAAU,GAAG8E,IAAI,CAACsC,aAAL,EAAjB;;AACA,UAAIpC,KAAK,IAAIA,KAAK,CAACjE,cAAf,IAAiC0F,CAAC,CAAC0F,IAAF,CAAOC,IAAP,CAAY9P,MAAZ,GAAqBmK,CAAC,CAACA,CAAC,CAAChK,IAAF,GAAS,QAAV,CAAD,CAAqBH,MAA3E,IAAqF,CAAC0D,UAAU,CAACqM,QAAX,EAA1F,EAAiH;AAC7GV,QAAAA,KAAK,CAACW,IAAN,CAAW;AACPC,UAAAA,UAAU,EAAE,IADL;AAEPC,UAAAA,IAAI,EAAE,MAFC;AAGP/J,UAAAA,IAAI,EAAEjB,KAAK,CAAC0B,SAHL;AAIP2I,UAAAA,WAAW,EAAE,uBAAW;AACpB7L,YAAAA,UAAU,CAACkD,SAAX,CAAqB8B,KAAK,CAACD,KAA3B;AACH;AANM,SAAX;AAQA4G,QAAAA,KAAK,CAACW,IAAN,CAAW;AACP7J,UAAAA,IAAI,EAAEjB,KAAK,CAAC2B,WADL;AAEPqJ,UAAAA,IAAI,EAAE,MAFC;AAGPX,UAAAA,WAAW,EAAE,uBAAW;AACpB7L,YAAAA,UAAU,CAACmD,WAAX,CAAuB6B,KAAK,CAACD,KAA7B;AACH;AALM,SAAX;AAOH;;AACD,UAAI0B,CAAC,CAAC0F,IAAF,CAAOM,MAAP,IAAiB,CAACzM,UAAU,CAACqM,QAAX,EAAtB,EAA6C;AACzC,YAAIK,yBAAyB,GAAG,CAAhC;AACA1T,QAAAA,IAAI,CAACkT,kBAAD,EAAsB,UAASnH,KAAT,EAAgBC,KAAhB,EAAuB;AAC7C,cAAI,CAACA,KAAK,CAACnE,qBAAX,EAAkC;AAC9B;AACH;;AACD7H,UAAAA,IAAI,CAACyN,CAAC,CAACkG,UAAH,EAAgB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC/C,gBAAI5T,SAAS,CAACwN,CAAC,CAAC0F,IAAF,CAAOS,SAAR,CAAT,IAA+BnG,CAAC,CAAC0F,IAAF,CAAOS,SAAP,KAAqBA,SAAxD,EAAmE;AAC/D;AACH;;AACD,gBAAIE,oBAAoB,GAAG,CAAC7T,SAAS,CAACwN,CAAC,CAAC0F,IAAF,CAAOS,SAAR,CAAV,IAAgCnG,CAAC,CAACkG,UAAF,CAAarQ,MAAb,GAAsB,CAAjF;AACA,gBAAIyQ,UAAU,GAAG,aAAatG,CAAC,CAAChK,IAAf,GAAsB+E,KAAK,CAAC4B,mBAA5B,GAAkD5B,KAAK,CAAC6B,gBAAzE;AACA,gBAAI2J,OAAO,GAAGtT,SAAS,CAAC+M,CAAC,CAACkG,UAAH,EAAe3H,KAAK,CAACiI,kBAArB,CAAT,KAAsDL,SAAtD,IAAmE,CAACnG,CAAC,CAAC0F,IAAF,CAAOC,IAAP,IAAe,EAAhB,EAAoBc,IAApB,CAAyB,GAAzB,MAAkC,CAAClI,KAAK,CAACmI,iBAAN,IAA2B,EAA5B,EAAgCD,IAAhC,CAAqC,GAArC,CAAnH;AACA,gBAAIzK,IAAI,GAAG7J,YAAY,CAACmU,UAAD,EAAaD,oBAAoB,GAAG9H,KAAK,CAACoI,OAAN,GAAgB,KAAhB,GAAwBP,SAAS,CAACO,OAArC,GAA+CpI,KAAK,CAACoI,OAAtF,CAAvB;AACAzB,YAAAA,KAAK,CAACW,IAAN,CAAW;AACPC,cAAAA,UAAU,EAAE,MAAMG,yBADX;AAEPF,cAAAA,IAAI,EAAEQ,OAAO,GAAG,WAAWhI,KAAK,CAACqI,SAAjB,GAA6B,cAA7B,GAA8C,YAAjD,GAAgE,MAFtE;AAGP5K,cAAAA,IAAI,EAAEA,IAHC;AAIPoJ,cAAAA,WAAW,EAAE,uBAAW;AACpB7L,gBAAAA,UAAU,CAACgF,KAAX,CAAiBA,KAAK,CAACD,KAAvB,EAA8B;AAC1BkI,kBAAAA,kBAAkB,EAAEJ,SAAS,CAAC1T,IAAV,IAAkB0T,SAAS,CAACO,OAA5B,IAAuCP,SAAS,CAACA,SAD3C;AAE1BM,kBAAAA,iBAAiB,EAAE1G,CAAC,CAAC0F,IAAF,CAAOC,IAFA;AAG1BiB,kBAAAA,SAAS,EAAE,WAAWrI,KAAK,CAACqI,SAAjB,GAA6B,KAA7B,GAAqC;AAHtB,iBAA9B;AAKArN,gBAAAA,UAAU,CAACsN,IAAX;AACH;AAXM,aAAX;AAaAZ,YAAAA,yBAAyB;AAC5B,WAtBG,CAAJ;AAuBH,SA3BG,CAAJ;AA4BA1T,QAAAA,IAAI,CAACkT,kBAAD,EAAsB,UAASnH,KAAT,EAAgBC,KAAhB,EAAuB;AAC7C,cAAI,CAACA,KAAK,CAACnE,qBAAP,IAAgC,CAAC5H,SAAS,CAAC+L,KAAK,CAACiI,kBAAP,CAA9C,EAA0E;AACtE;AACH;;AACDtB,UAAAA,KAAK,CAACW,IAAN,CAAW;AACPC,YAAAA,UAAU,EAAE,MAAMG,yBADX;AAEPF,YAAAA,IAAI,EAAE,MAFC;AAGP/J,YAAAA,IAAI,EAAEjB,KAAK,CAAC8B,gBAHL;AAIPuI,YAAAA,WAAW,EAAE,uBAAW;AACpB7S,cAAAA,IAAI,CAACkT,kBAAD,EAAsB,UAASnH,KAAT,EAAgBC,KAAhB,EAAuB;AAC7ChF,gBAAAA,UAAU,CAACgF,KAAX,CAAiBA,KAAK,CAACD,KAAvB,EAA8B;AAC1BkI,kBAAAA,kBAAkB,EAAE,KAAK,CADC;AAE1BE,kBAAAA,iBAAiB,EAAE,KAAK,CAFE;AAG1BE,kBAAAA,SAAS,EAAE,KAAK;AAHU,iBAA9B;AAKH,eANG,CAAJ;AAOArN,cAAAA,UAAU,CAACsN,IAAX;AACH;AAbM,WAAX;AAeA,iBAAO,KAAP;AACH,SApBG,CAAJ;AAqBH;AACJ;;AACD,QAAIxI,IAAI,CAAC7G,MAAL,CAAY,sBAAZ,CAAJ,EAAyC;AACrC0N,MAAAA,KAAK,CAACW,IAAN,CAAW;AACPC,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,IAAI,EAAE,eAFC;AAGP/J,QAAAA,IAAI,EAAEjB,KAAK,CAACyB,gBAHL;AAIP4I,QAAAA,WAAW,EAAE,uBAAW;AACpB/G,UAAAA,IAAI,CAACuC,kBAAL,CAAwBkG,IAAxB;AACH;AANM,OAAX;AAQH;;AACD,QAAIzI,IAAI,CAAC7G,MAAL,CAAY,gBAAZ,CAAJ,EAAmC;AAC/B0N,MAAAA,KAAK,CAACW,IAAN,CAAW;AACPC,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,IAAI,EAAE,UAFC;AAGP/J,QAAAA,IAAI,EAAEjB,KAAK,CAAC+B,aAHL;AAIPsI,QAAAA,WAAW,EAAE,uBAAW;AACpB/G,UAAAA,IAAI,CAACvB,aAAL;AACH;AANM,OAAX;AAQH;;AACDkD,IAAAA,CAAC,CAACkF,KAAF,GAAUA,KAAV;;AACA7G,IAAAA,IAAI,CAACyB,QAAL,CAAc,wBAAd,EAAwCE,CAAxC;;AACAkF,IAAAA,KAAK,GAAGlF,CAAC,CAACkF,KAAV;;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACrP,MAAnB,EAA2B;AACvB,aAAOqP,KAAP;AACH;AACJ,GAhiB0B;AAiiB3BD,EAAAA,gBAAgB,EAAE,0BAASH,aAAT,EAAwBiC,OAAxB,EAAiC;AAC/C,QAAIxN,UAAU,GAAG,KAAKoH,aAAL,EAAjB;AACA,QAAIF,IAAI,GAAG;AACPuG,MAAAA,SAAS,EAAEzN,UAAU,CAAC0N,aAAX,CAAyB,KAAzB,CADJ;AAEPC,MAAAA,YAAY,EAAE3N,UAAU,CAAC0N,aAAX,CAAyB,QAAzB,CAFP;AAGPf,MAAAA,UAAU,EAAE3M,UAAU,CAAC0N,aAAX,CAAyB,MAAzB,CAHL;AAIPpC,MAAAA,KAAK,EAAEkC;AAJA,KAAX;;AAMA,QAAI1O,mBAAmB,CAAC3G,CAAC,CAACoT,aAAD,CAAF,CAAvB,EAA2C;AACvC,aAAOrS,MAAM,CAAC,KAAK0U,gBAAL,CAAsBrC,aAAtB,CAAD,EAAuCrE,IAAvC,CAAb;AACH,KAFD,MAEO;AACH,aAAOhO,MAAM,CAAC,KAAK2U,eAAL,CAAqBtC,aAArB,CAAD,EAAsCrE,IAAtC,CAAb;AACH;AACJ,GA9iB0B;AA+iB3B0G,EAAAA,gBAAgB,EAAE,0BAASrC,aAAT,EAAwB;AACtC,QAAIvG,KAAK,GAAG7M,CAAC,CAACoT,aAAD,CAAD,CAAiBuC,QAAjB,GAA4BC,IAA5B,CAAiC,OAAjC,CAAZ;AACA,QAAI7G,IAAI,GAAG;AACPlC,MAAAA,KAAK,EAAEA;AADA,KAAX;AAGA,WAAO/L,SAAS,CAAC+L,KAAD,CAAT,GAAmBkC,IAAnB,GAA0B,EAAjC;AACH,GArjB0B;AAsjB3B2G,EAAAA,eAAe,EAAE,yBAASG,WAAT,EAAsB;AACnC,QAAIC,YAAY,GAAG9V,CAAC,CAAC6V,WAAD,CAApB;AACA,QAAIE,WAAW,GAAGF,WAAW,CAACvC,SAA9B;AACA,QAAI0C,QAAQ,GAAGH,WAAW,CAACI,aAAZ,CAA0BD,QAAzC;AACA,QAAIE,MAAM,GAAGJ,YAAY,CAACjP,OAAb,CAAqB,OAArB,CAAb;AACA,QAAI+O,IAAI,GAAGM,MAAM,CAACN,IAAP,CAAY,MAAZ,CAAX;AACA,QAAI5B,IAAI,GAAG4B,IAAI,IAAIA,IAAI,CAACI,QAAD,CAAZ,IAA0BJ,IAAI,CAACI,QAAD,CAAJ,CAAeD,WAAf,CAArC;AACA,QAAIhH,IAAI,GAAG;AACPzK,MAAAA,IAAI,EAAE4R,MAAM,CAACN,IAAP,CAAY,MAAZ,CADC;AAEPI,MAAAA,QAAQ,EAAEA,QAFH;AAGPD,MAAAA,WAAW,EAAEA,WAHN;AAIPF,MAAAA,WAAW,EAAEtV,gBAAgB,CAACuV,YAAD,CAJtB;AAKP9B,MAAAA,IAAI,EAAEA;AALC,KAAX;AAOA,WAAOjF,IAAP;AACH,GArkB0B;AAskB3BoH,EAAAA,gBAAgB,EAAE,0BAAS7H,CAAT,EAAY;AAC1B,QAAI3B,IAAI,GAAG,IAAX;;AACA,QAAIoC,IAAI,GAAGpC,IAAI,CAAC4G,gBAAL,CAAsBjF,CAAC,CAAC8H,aAAxB,EAAuC9H,CAAvC,CAAX;;AACA,QAAI0F,IAAI,GAAGjF,IAAI,CAACiF,IAAhB;;AACA,QAAI,CAACA,IAAD,IAAS,CAACjF,IAAI,CAACzK,IAAN,KAAeyK,IAAI,CAACiH,QAAL,IAAiBjH,IAAI,CAACgH,WAArC,CAAb,EAAgE;AAC5D;AACH;;AACDpJ,IAAAA,IAAI,CAACyB,QAAL,CAAc,aAAd,EAA6BW,IAA7B;;AACAiF,IAAAA,IAAI,IAAI,CAACjF,IAAI,CAACvC,MAAd,IAAwB1L,SAAS,CAACkT,IAAI,CAACqC,QAAN,CAAjC,IAAoDC,UAAU,CAAE,YAAW;AACvE3J,MAAAA,IAAI,CAACW,eAAL,CAAqB0G,IAAI,CAACqC,QAAL,GAAgB,oBAAhB,GAAuC,kBAA5D,EAAgFtH,IAAI,CAACzK,IAArF,EAA2F0P,IAAI,CAACC,IAAhG;AACH,KAF6D,CAA9D;AAGH,GAjlB0B;AAklB3BsC,EAAAA,cAAc,EAAE,0BAAW;AACvB,WAAO,KAAKzQ,MAAL,CAAY,cAAZ,CAAP;AACH,GAplB0B;AAqlB3B0Q,EAAAA,iBAAiB,EAAEnV,aAAa,CAACoV,gBArlBN;AAslB3BjH,EAAAA,gBAAgB,EAAEnO,aAAa,CAACqV,eAtlBL;AAulB3B1I,EAAAA,cAAc,EAAE,wBAAS2I,QAAT,EAAmB;AAC/B,QAAIhK,IAAI,GAAG,IAAX;;AACA,QAAIoB,SAAS,GAAGpB,IAAI,CAACW,eAAL,CAAqBS,SAArB,EAAhB;;AACA,QAAI,CAACpB,IAAI,CAACiK,UAAV,EAAsB;AAClB;AACH;;AACD,QAAIC,gBAAgB,GAAGlK,IAAI,CAACiK,UAAL,CAAgB9Q,MAAhB,CAAuB,SAAvB,CAAvB;;AACA,QAAI,CAAC+Q,gBAAL,EAAuB;AACnBlK,MAAAA,IAAI,CAACmK,iBAAL,GAAyB,IAAIC,IAAJ,EAAzB;AACH;;AACD,QAAIhJ,SAAJ,EAAe;AACX,UAAI4I,QAAJ,EAAc;AACV,YAAI,IAAII,IAAJ,KAAWpK,IAAI,CAACmK,iBAAhB,IAAqC,GAAzC,EAA8C;AAC1CnK,UAAAA,IAAI,CAACiK,UAAL,CAAgB9Q,MAAhB,CAAuB,SAAvB,EAAkCkR,IAAI,CAACC,KAAL,CAAW,MAAMN,QAAjB,IAA6B,GAA/D;AACH;AACJ,OAJD,MAIO;AACHhK,QAAAA,IAAI,CAACiK,UAAL,CAAgB9Q,MAAhB,CAAuB,SAAvB,EAAkC6G,IAAI,CAAC7G,MAAL,CAAY,gBAAZ,CAAlC;AACH;AACJ;;AACDoR,IAAAA,YAAY,CAACvK,IAAI,CAACwK,qBAAN,CAAZ;;AACA,QAAIN,gBAAgB,IAAI,CAAC9I,SAAzB,EAAoC;AAChCpB,MAAAA,IAAI,CAACwK,qBAAL,GAA6Bb,UAAU,CAAE,YAAW;AAChD3J,QAAAA,IAAI,CAACiK,UAAL,CAAgB9Q,MAAhB,CAAuB,SAAvB,EAAkC,KAAlC;;AACA6G,QAAAA,IAAI,CAACgD,QAAL,GAAgByH,WAAhB,CAA4BhU,qBAA5B;AACH,OAHsC,CAAvC;AAIH,KALD,MAKO;AACHuJ,MAAAA,IAAI,CAACiK,UAAL,CAAgB9Q,MAAhB,CAAuB,SAAvB,EAAkCiI,SAAlC;;AACApB,MAAAA,IAAI,CAACgD,QAAL,GAAgBG,WAAhB,CAA4B1M,qBAA5B,EAAmD,CAAC2K,SAApD;AACH;AACJ,GApnB0B;AAqnB3B6B,EAAAA,sBAAsB,EAAE,kCAAW;AAAA;;AAC/B,QAAID,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA,QAAI0H,gBAAgB,GAAG1H,QAAQ,CAAC7I,IAAT,CAAc,MAAMpE,2BAApB,CAAvB;AACA,QAAI4U,iBAAiB,GAAGtX,CAAC,CAACuD,GAAD,CAAD,CAAOuP,QAAP,CAAgB,sBAAhB,CAAxB;AACA,QAAIhK,UAAU,GAAG,KAAKhD,MAAL,CAAY,YAAZ,CAAjB;AACA,QAAIyR,aAAa,GAAG5H,QAAQ,CAAC7I,IAAT,CAAc,mBAAd,CAApB;AACA,QAAI0Q,aAAa,GAAG7H,QAAQ,CAAC7I,IAAT,CAAc,mBAAd,CAApB;AACA,QAAI2Q,gBAAJ;;AACA,QAAI3O,UAAU,CAACM,OAAX,IAAsBN,UAAU,CAACE,gBAArC,EAAuD;AACnDyO,MAAAA,gBAAgB,GAAGF,aAAnB;AACH,KAFD,MAEO,IAAIzO,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAA/D,CAAJ,EAAsF;AACzF0O,MAAAA,gBAAgB,GAAGD,aAAnB;AACH,KAFM,MAEA;AACHC,MAAAA,gBAAgB,GAAGJ,gBAAnB;AACH;;AACDG,IAAAA,aAAa,CAAC1H,WAAd,CAA0B/M,mBAA1B,EAA+C,CAAC,EAAE+F,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAA/D,CAAF,CAAhD;AACAwO,IAAAA,aAAa,CAACzH,WAAd,CAA0B/M,mBAA1B,EAA+C,CAAC,EAAE+F,UAAU,CAACM,OAAX,IAAsBN,UAAU,CAACE,gBAAnC,CAAhD;AACAqO,IAAAA,gBAAgB,CAACvH,WAAjB,CAA6B,yBAA7B,EAAwDhH,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAAxC,IAA4DD,UAAU,CAACI,aAA9F,CAAxD;AACA,SAAKyG,QAAL,GAAgB7I,IAAhB,CAAqB,uBAArB,EAA8Cf,MAA9C;AACAuR,IAAAA,iBAAiB,CAACI,SAAlB,CAA4BD,gBAA5B;;AACA,QAAI,KAAK3R,MAAL,CAAY,sBAAZ,CAAJ,EAAyC;AACrC,UAAI6R,cAAc,GAAG3X,CAAC,CAACuD,GAAD,CAAD,CAAOiC,QAAP,CAAgB8R,iBAAhB,EAAmCxE,QAAnC,CAA4C,mCAA5C,CAArB;AACA,UAAI8E,aAAa,GAAG;AAChBvD,QAAAA,IAAI,EAAE,eADU;AAEhBwD,QAAAA,IAAI,EAAE,KAAK/R,MAAL,CAAY,wBAAZ,CAFU;AAGhBkM,QAAAA,OAAO,EAAE,mBAAM;AACX,UAAA,KAAI,CAAC8F,oBAAL,GAA4B1C,IAA5B;AACH;AALe,OAApB;;AAOA,WAAK1C,gBAAL,CAAsBiF,cAAtB,EAAsC,UAAtC,EAAkDC,aAAlD;AACH;;AACD,QAAI,KAAK9R,MAAL,CAAY,gBAAZ,CAAJ,EAAmC;AAC/B,UAAIiS,eAAe,GAAG/X,CAAC,CAACuD,GAAD,CAAD,CAAOiC,QAAP,CAAgB8R,iBAAhB,EAAmCxE,QAAnC,CAA4C,4BAA5C,CAAtB;;AACA,UAAIkF,cAAc,GAAG;AACjB3D,QAAAA,IAAI,EAAE,UADW;AAEjBwD,QAAAA,IAAI,EAAE,KAAK/R,MAAL,CAAY,qBAAZ,CAFW;AAGjBkM,QAAAA,OAAO,EAAE,mBAAM;AACX,UAAA,KAAI,CAAC5G,aAAL;AACH;AALgB,OAArB;;AAOA,WAAKsH,gBAAL,CAAsBqF,eAAtB,EAAuC,UAAvC,EAAmDC,cAAnD;AACH;AACJ,GA/pB0B;AAgqB3BC,EAAAA,yBAAyB,EAAE,qCAAW;AAClC,QAAIC,OAAO,GAAG,KAAKvI,QAAL,EAAd;;AACA,QAAI7O,SAAS,CAAC,KAAKkP,UAAN,CAAb,EAAgC;AAC5B,UAAIzK,MAAM,GAAG,KAAKO,MAAL,CAAY,QAAZ,KAAyB,KAAK6J,QAAL,GAAgBpJ,GAAhB,CAAoB,CAApB,EAAuB4R,KAAvB,CAA6B5S,MAAnE;;AACA,UAAIA,MAAM,IAAI,KAAKyK,UAAL,GAAkB,WAAWzK,MAA3C,EAAmD;AAC/C,aAAKyK,UAAL,GAAkB,IAAlB;AACH;AACJ;;AACD,QAAIlP,SAAS,CAAC,KAAKkP,UAAN,CAAT,IAA8BkI,OAAO,CAACE,EAAR,CAAW,SAAX,CAAlC,EAAyD;AACrD;AACH;;AACD,SAAK1G,mBAAL,CAAyBoB,QAAzB,CAAkC,WAAlC;;AACA,QAAIuF,WAAW,GAAGrY,CAAC,CAACuD,GAAD,CAAD,CAAOgC,MAAP,CAAc/B,WAAd,CAAlB;AACA0U,IAAAA,OAAO,CAACI,MAAR,CAAeD,WAAf;AACA,SAAKrI,UAAL,GAAkBkI,OAAO,CAAC3S,MAAR,OAAqB/B,WAAvC;;AACA,SAAKkO,mBAAL,CAAyB0F,WAAzB,CAAqC,WAArC;;AACAiB,IAAAA,WAAW,CAACtS,MAAZ;AACH,GAjrB0B;AAkrB3BwS,EAAAA,cAAc,EAAE,wBAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,EAA2EC,mBAA3E,EAAgG;AAC5G,QAAI9Q,UAAU,GAAG,KAAKoH,aAAL,EAAjB;AACA,SAAK2J,UAAL,GAAkB,KAAKA,UAAL,IAAmB,IAAI9W,UAAJ,CAAe,IAAf,EAAqB,KAArB,CAArC;;AACA,SAAK8W,UAAL,CAAgBC,MAAhB,CAAuBL,kBAAvB,EAA2C3Q,UAAU,CAAC0N,aAAX,CAAyB,KAAzB,CAA3C;;AACA,SAAKuD,aAAL,GAAqB,KAAKA,aAAL,IAAsB,IAAIhX,UAAJ,CAAe,IAAf,EAAqB,QAArB,CAA3C;;AACA,SAAKgX,aAAL,CAAmBD,MAAnB,CAA0BJ,qBAA1B,EAAiD5Q,UAAU,CAAC0N,aAAX,CAAyB,QAAzB,CAAjD;;AACA,SAAKwD,aAAL,GAAqB,KAAKA,aAAL,IAAsB,IAAIjX,UAAJ,CAAe,IAAf,EAAqB,QAArB,CAA3C;;AACA,SAAKiX,aAAL,CAAmBF,MAAnB,CAA0BH,qBAA1B,EAAiD7Q,UAAU,CAAC0N,aAAX,CAAyB,QAAzB,CAAjD;;AACA,SAAKyD,WAAL,GAAmB,KAAKA,WAAL,IAAoB,IAAIlX,UAAJ,CAAe,IAAf,EAAqB,MAArB,CAAvC;;AACA,SAAKkX,WAAL,CAAiBH,MAAjB,CAAwBF,mBAAxB,EAA6C9Q,UAAU,CAAC0N,aAAX,CAAyB,MAAzB,CAA7C;;AACA,SAAK5F,QAAL,GAAgBsJ,2BAAhB,CAA4C,UAA5C,EAAwDC,cAAxD;AACH,GA7rB0B;AA8rB3BC,EAAAA,mBAAmB,EAAE,+BAAW;AAC5B,QAAIjD,MAAM,GAAGlW,CAAC,CAAC,SAAD,CAAD,CAAaiF,GAAb,CAAiB;AAC1BK,MAAAA,KAAK,EAAE;AADmB,KAAjB,EAEVwK,WAFU,CAEEnN,aAFF,EAEiB,CAAC,CAAC,KAAKmD,MAAL,CAAY,aAAZ,CAFnB,EAE+CgK,WAF/C,CAE2D,cAF3D,EAE2E,CAAC,CAAC,KAAKhK,MAAL,CAAY,iBAAZ,CAF7E,CAAb;AAGAzF,IAAAA,YAAY,CAACqE,EAAb,CAAgBwR,MAAhB,EAAwB9U,YAAY,CAACH,cAAD,EAAiB,aAAjB,CAApC,EAAqE,IAArE,EAA2E,KAAKkV,gBAAL,CAAsBjI,IAAtB,CAA2B,IAA3B,CAA3E;AACA,WAAOgI,MAAP;AACH,GApsB0B;AAqsB3BkD,EAAAA,eAAe,EAAE,yBAASC,eAAT,EAA0B;AACvC,QAAIhJ,QAAQ,GAAG,KAAKZ,SAAL,IAAkB,IAAI/N,QAAJ,CAAa,IAAb,CAAjC;AACA,SAAK+N,SAAL,GAAiBY,QAAjB;AACAA,IAAAA,QAAQ,CAACwI,MAAT,CAAgBQ,eAAhB,EAAiC,KAAK/L,eAAL,CAAqBgM,YAArB,EAAjC;AACA,WAAOjJ,QAAP;AACH,GA1sB0B;AA2sB3BkJ,EAAAA,eAAe,EAAE,yBAASC,eAAT,EAA0B;AACvC,QAAIpJ,QAAQ,GAAG,KAAKqJ,SAAL,IAAkB,IAAI9X,mBAAJ,CAAwB,IAAxB,CAAjC;AACA,SAAK8X,SAAL,GAAiBrJ,QAAjB;AACAA,IAAAA,QAAQ,CAACyI,MAAT,CAAgBW,eAAhB,EAAiC,KAAKlM,eAAL,CAAqBoM,WAArB,EAAjC;AACA,WAAOtJ,QAAP;AACH,GAhtB0B;AAitB3BuJ,EAAAA,kBAAkB,EAAE,4BAASC,kBAAT,EAA6B;AAC7C,QAAIzJ,WAAW,GAAG,KAAK0J,YAAL,IAAqB,IAAIjY,qBAAJ,CAA0B,IAA1B,CAAvC;AACA,SAAKiY,YAAL,GAAoB1J,WAApB;AACAA,IAAAA,WAAW,CAAC0I,MAAZ,CAAmBe,kBAAnB,EAAuC,KAAKtM,eAAL,CAAqBwM,cAArB,EAAvC;AACA,WAAO3J,WAAP;AACH,GAttB0B;AAutB3B4J,EAAAA,WAAW,EAAE,uBAAW;AACpB,QAAIpN,IAAI,GAAG,IAAX;AACAA,IAAAA,IAAI,CAACzF,QAAL,CAAc8S,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACAtN,IAAAA,IAAI,CAACgD,QAAL,GAAgBmD,QAAhB,CAAyBlQ,eAAzB;AACH,GA3tB0B;AA4tB3BsX,EAAAA,kBAAkB,EAAE,8BAAW;AAC3B,QAAIN,kBAAJ;AACA,QAAIJ,eAAJ;AACA,QAAIH,eAAJ;AACA,QAAIc,YAAJ;AACA,QAAIC,cAAc,GAAG,CAAC,KAAK1I,mBAA3B;AACA,QAAI8G,kBAAJ;AACA,QAAIC,qBAAJ;AACA,QAAIC,qBAAJ;AACA,QAAIC,mBAAJ;AACAwB,IAAAA,YAAY,GAAG,CAACC,cAAD,IAAmB,KAAKvK,aAAL,EAAlC;;AACA,QAAI,CAACsK,YAAL,EAAmB;AACf,WAAKxK,QAAL,GAAgBmD,QAAhB,CAAyBjQ,eAAzB,EAA0CiQ,QAA1C,CAAmD9P,sBAAnD;AACA,WAAK0O,mBAAL,GAA2B1R,CAAC,CAACuD,GAAD,CAAD,CAAOuP,QAAP,CAAgB,wBAAhB,CAA3B;;AACA,WAAK1D,mBAAL;;AACA,WAAKG,kBAAL;;AACAqK,MAAAA,kBAAkB,GAAG5Z,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAerQ,sBAAf,CAArB;AACA+W,MAAAA,eAAe,GAAGxZ,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAetQ,mBAAf,CAAlB;AACA6W,MAAAA,eAAe,GAAGrZ,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAevQ,oBAAf,CAAlB;AACA4X,MAAAA,YAAY,GAAG,KAAKhB,mBAAL,EAAf;AACAR,MAAAA,mBAAmB,GAAG3Y,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAe,gBAAf,CAAtB;AACA4F,MAAAA,qBAAqB,GAAG1Y,CAAC,CAAC,MAAD,CAAD,CAAUqa,IAAV,CAAe,SAAf,EAA0B,GAA1B,EAA+BvH,QAA/B,CAAwC,kBAAxC,CAAxB;AACA2F,MAAAA,qBAAqB,GAAGzY,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAe,kBAAf,CAAxB;AACA0F,MAAAA,kBAAkB,GAAGxY,CAAC,CAACsD,EAAD,CAAD,CAAMwP,QAAN,CAAepQ,2BAAf,CAArB;AACA1C,MAAAA,CAAC,CAACqD,EAAD,CAAD,CAAMiV,MAAN,CAAaI,qBAAb,EAAoClT,QAApC,CAA6C2U,YAA7C;AACAna,MAAAA,CAAC,CAACqD,EAAD,CAAD,CAAMiV,MAAN,CAAaK,mBAAb,EAAkCL,MAAlC,CAAyCG,qBAAzC,EAAgEjT,QAAhE,CAAyE2U,YAAzE;AACAna,MAAAA,CAAC,CAACqD,EAAD,CAAD,CAAMyM,WAAN,CAAkB,OAAlB,EAA2B,SAAS1P,gBAAgB,CAACka,IAArD,EAA2DhC,MAA3D,CAAkEE,kBAAlE,EAAsFF,MAAtF,CAA6FsB,kBAA7F,EAAiHpU,QAAjH,CAA0H2U,YAA1H;AACAna,MAAAA,CAAC,CAACqD,EAAD,CAAD,CAAMyP,QAAN,CAAehQ,gBAAf,EAAiCwV,MAAjC,CAAwCkB,eAAxC,EAAyDlB,MAAzD,CAAgEe,eAAhE,EAAiF7T,QAAjF,CAA0F2U,YAA1F;;AACA,WAAKzI,mBAAL,CAAyB4G,MAAzB,CAAgC6B,YAAhC;;AACA,WAAKxK,QAAL,GAAgB2I,MAAhB,CAAuB,KAAK5G,mBAA5B;;AACA,UAAI,WAAW,KAAK5L,MAAL,CAAY,iBAAZ,CAAf,EAA+C;AAC3C0T,QAAAA,eAAe,CAAC1G,QAAhB,CAAyB,mBAAzB;AACH;AACJ;;AACD,SAAKnD,QAAL,GAAgBmD,QAAhB,CAAyB1P,qBAAzB;;AACA,SAAKsP,gBAAL,CAAsB,KAAK/C,QAAL,EAAtB,EAAuC3N,yBAAvC,EAAkE;AAC9D6F,MAAAA,UAAU,EAAE,KAAKoH,aAAL,EADkD;AAE9DrH,MAAAA,UAAU,EAAE,KAAK9B,MAAL,CAAY,YAAZ,CAFkD;AAG9DqD,MAAAA,kBAAkB,EAAE,KAAKrD,MAAL,CAAY,+BAAZ,CAH0C;AAI9DsG,MAAAA,YAAY,EAAE,KAAKtG,MAAL,CAAY,cAAZ,CAJgD;AAK9DsD,MAAAA,OAAO,EAAE,KAAKtD,MAAL,CAAY,SAAZ;AALqD,KAAlE;;AAOA,QAAIuK,QAAQ,GAAG,KAAK+I,eAAL,CAAqBC,eAArB,CAAf;;AACA,QAAIjJ,QAAQ,GAAG,KAAKmJ,eAAL,CAAqBC,eAArB,CAAf;;AACA,QAAIrJ,WAAW,GAAG,KAAKwJ,kBAAL,CAAwBC,kBAAxB,CAAlB;;AACAvJ,IAAAA,QAAQ,CAAC8J,YAAT,GAAwBI,OAAxB,CAAgCpK,WAAW,CAACqK,WAAZ,EAAhC;;AACA,QAAIJ,cAAJ,EAAoB;AAChB,WAAK5K,gBAAL,CAAsBa,QAAQ,CAACX,YAAT,GAAwB+K,MAAxB,EAAtB,EAAwD,KAAK9K,QAAL,EAAxD;;AACA,WAAKC,sBAAL;;AACAQ,MAAAA,QAAQ,CAACsK,aAAT;AACAvK,MAAAA,WAAW,CAACuK,aAAZ;AACH;;AAAC,KAACrK,QAAD,EAAWD,QAAX,EAAqBD,WAArB,EAAkC3J,OAAlC,CAA2C,UAASlC,IAAT,EAAe;AACxDD,MAAAA,uBAAuB,CAACC,IAAD,CAAvB;AACH,KAFC;;AAGF,SAAKiU,cAAL,CAAoBC,kBAApB,EAAwCC,qBAAxC,EAA+DC,qBAA/D,EAAsFC,mBAAtF;;AACA,SAAKgC,OAAL,CAAaP,cAAb;AACH,GApxB0B;AAqxB3BO,EAAAA,OAAO,EAAE,iBAASP,cAAT,EAAyB;AAC9B,QAAIzN,IAAI,GAAG,IAAX;;AACA,QAAIiO,aAAa,GAAG,SAAhBA,aAAgB,GAAW;AAC3BjO,MAAAA,IAAI,CAACoD,gBAAL;AACH,KAFD;;AAGA,QAAIpD,IAAI,CAAC4E,kBAAL,CAAwB5E,IAAI,CAAC8C,SAAL,CAAeoL,OAAf,EAAxB,KAAqDT,cAAzD,EAAyE;AACrE9D,MAAAA,UAAU,CAACsE,aAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa;AAChB;AACJ,GA/xB0B;AAgyB3BE,EAAAA,uBAAuB,EAAE,mCAAW;AAChC,QAAI,CAAC,KAAKxN,eAAL,CAAqBS,SAArB,EAAL,EAAuC;AACnC,WAAK7G,QAAL;AACH;AACJ,GApyB0B;AAqyB3B6T,EAAAA,aAAa,EAAE,uBAASzW,IAAT,EAAe;AAC1B,QAAI,aAAaA,IAAjB,EAAuB;AACnB,aAAO,KAAKuV,YAAL,CAAkBkB,aAAlB,CAAgC,KAAKnN,WAArC,CAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAK6L,SAAL,CAAesB,aAAf,CAA6B,KAAKlN,UAAlC,CAAP;AACH;AACJ,GA3yB0B;AA4yB3BoB,EAAAA,aAAa,EAAE,yBAAW;AACtB,WAAO,KAAK3B,eAAL,CAAqB2B,aAArB,EAAP;AACH,GA9yB0B;AA+yB3B6I,EAAAA,oBAAoB,EAAE,gCAAW;AAC7B,WAAO,KAAK5I,kBAAZ;AACH,GAjzB0B;AAkzB3BwB,EAAAA,SAAS,EAAE,mBAASpM,IAAT,EAAe;AACtB,WAAO,aAAaA,IAAb,GAAoB,KAAKuV,YAAL,CAAkBnJ,SAAlB,EAApB,GAAoD,KAAK+I,SAAL,CAAe/I,SAAf,EAA3D;AACH,GApzB0B;AAqzB3BsK,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B,SAAKjL,gBAAL;AACH,GAvzB0B;AAwzB3BkL,EAAAA,kBAAkB,EAAE,4BAAS7R,OAAT,EAAkB;AAClC,QAAIA,OAAJ,EAAa;AACT,WAAK2G,gBAAL;AACH;AACJ,GA5zB0B;AA6zB3BmL,EAAAA,QAAQ,EAAE,oBAAW;AACjB,QAAIvO,IAAI,GAAG,IAAX;AACAuK,IAAAA,YAAY,CAACvK,IAAI,CAACwK,qBAAN,CAAZ;AACAxK,IAAAA,IAAI,CAACzF,QAAL,CAAc8S,KAAd,CAAoBrN,IAApB,EAA0BsN,SAA1B;;AACA,QAAItN,IAAI,CAACW,eAAT,EAA0B;AACtBX,MAAAA,IAAI,CAACW,eAAL,CAAqBC,OAArB;AACH;AACJ,GAp0B0B;AAq0B3BsC,EAAAA,aAAa,EAAE,yBAAW;AACtB,WAAO,KAAKF,QAAL,GAAgB7I,IAAhB,CAAqB,OAArB,EAA8BqU,KAA9B,EAAP;AACH,GAv0B0B;AAw0B3BC,EAAAA,eAAe,EAAE,yBAASC,SAAT,EAAoB;AACjC,WAAO,kBAAkBA,SAAzB;AACH,GA10B0B;AA20B3BpL,EAAAA,MAAM,EAAE,kBAAW;AACf,SAAKF,gBAAL;AACH,GA70B0B;AA80B3BuL,EAAAA,OAAO,EAAE,mBAAW;AAChB,WAAO,KAAKpU,QAAL,MAAmB,CAAC,KAAKoG,eAAL,CAAqBS,SAArB,EAA3B;AACH,GAh1B0B;AAi1B3BgC,EAAAA,gBAAgB,EAAE,4BAAW;AACzB,QAAIpD,IAAI,GAAG,IAAX;AACA,QAAI4O,UAAJ;;AACA,QAAIpB,YAAY,GAAGxN,IAAI,CAACkD,aAAL,EAAnB;;AACA,QAAIO,QAAQ,GAAGzD,IAAI,CAAC8M,SAApB;AACA,QAAItJ,WAAW,GAAGxD,IAAI,CAACkN,YAAvB;AACA,QAAIxJ,QAAQ,GAAG1D,IAAI,CAAC8C,SAApB;AACA,QAAI+L,YAAJ;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,aAAJ;AACA,QAAIC,gBAAJ;AACA,QAAIC,gBAAgB,GAAGnP,IAAI,CAAC7G,MAAL,CAAY,WAAZ,KAA4B,EAAnD;AACA,QAAIiW,aAAa,GAAGnX,gBAAgB,CAACkX,gBAAgB,CAACpW,SAAlB,CAApC;AACA,QAAIZ,cAAc,GAAGiX,aAAa,CAACjX,cAAnC;AACA,QAAIkX,YAAY,GAAG7B,YAAY,CAACrT,IAAb,CAAkB,MAAMvE,oBAAxB,CAAnB;AACA,QAAI0Z,WAAW,GAAG9B,YAAY,CAACrT,IAAb,CAAkB,MAAMtE,mBAAxB,CAAlB;AACA,QAAI0Z,cAAc,GAAG/B,YAAY,CAACrT,IAAb,CAAkB,MAAMrE,sBAAxB,CAArB;AACA,QAAI0Z,eAAe,GAAGhC,YAAY,CAACrT,IAAb,CAAkB,MAAMpE,2BAAxB,CAAtB;AACA,QAAI0Z,gBAAgB,GAAGjC,YAAY,CAACrT,IAAb,CAAkB,mBAAlB,CAAvB;AACA,QAAIuV,gBAAgB,GAAGlC,YAAY,CAACrT,IAAb,CAAkB,mBAAlB,CAAvB;AACA,QAAIwV,eAAe,GAAG3P,IAAI,CAACiM,UAA3B;AACA,QAAI2D,CAAC,GAAG,IAAIja,QAAJ,EAAR;;AACA,QAAI,CAACpC,SAAS,EAAd,EAAkB;AACd;AACH;;AACD,QAAIsc,yBAAyB,GAAGF,eAAe,CAACG,SAAhB,MAA+B,WAAW9P,IAAI,CAAC7G,MAAL,CAAY,iBAAZ,CAA1E;;AACA6G,IAAAA,IAAI,CAACsL,yBAAL;;AACA,QAAI,CAAC5H,QAAQ,CAACmK,WAAT,GAAuBrW,MAA5B,EAAoC;AAChCkM,MAAAA,QAAQ,CAAC8J,YAAT,GAAwBI,OAAxB,CAAgCpK,WAAW,CAACqK,WAAZ,EAAhC;AACH;;AACD,QAAIgC,yBAAJ,EAA+B;AAC3BpM,MAAAA,QAAQ,CAACsM,cAAT,CAAwBJ,eAAe,CAACK,eAAhB,EAAxB;AACAvM,MAAAA,QAAQ,CAAC+J,YAAT,GAAwBI,OAAxB,CAAgC+B,eAAe,CAAC9B,WAAhB,EAAhC;AACH;;AACDL,IAAAA,YAAY,CAACrH,QAAb,CAAsB3P,2BAAtB;AACAkN,IAAAA,QAAQ,CAACuM,KAAT;AACAxM,IAAAA,QAAQ,CAACwM,KAAT;AACAzM,IAAAA,WAAW,CAACyM,KAAZ;AACAN,IAAAA,eAAe,CAACM,KAAhB;;AACA,QAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,SAAX;AAAA,aAAyBA,SAAS,GAAGD,QAAZ,IAAwB,CAAjD;AAAA,KAAzB;;AACA,QAAIE,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,cAAD,EAAiBvB,WAAjB,EAA8BE,aAA9B,EAA6CC,gBAA7C,EAA+D/W,cAA/D;AAAA,aAAkF8W,aAAa,GAAGqB,cAAH,GAAoBvB,WAAW,IAAIG,gBAAgB,GAAG/W,cAAH,GAAoB,CAAxC,CAA9H;AAAA,KAA3B;;AACAlE,IAAAA,WAAW,CAAE,YAAW;AACpB,UAAIsc,YAAY,GAAG7M,QAAQ,CAAC8M,eAAT,EAAnB;AACA,UAAIC,UAAU,GAAGhN,QAAQ,CAACiN,aAAT,EAAjB;AACA,UAAIC,eAAe,GAAGd,yBAAyB,GAAGY,UAAU,CAACG,KAAX,CAAiB,CAAjB,CAAH,GAAyBH,UAAxE;AACA,UAAII,eAAe,GAAGnN,QAAQ,CAACgN,aAAT,EAAtB;AACA,UAAII,qBAAqB,GAAG5b,OAAO,CAACsa,eAAe,CAAC,CAAD,CAAhB,EAAqB,QAArB,EAA+B;AAC9DuB,QAAAA,QAAQ,EAAE,IADoD;AAE9DC,QAAAA,OAAO,EAAE,IAFqD;AAG9DC,QAAAA,OAAO,EAAE;AAHqD,OAA/B,CAAP,IAItBpB,yBAAyB,GAAGY,UAAU,CAAC,CAAD,CAAb,GAAmB,CAJtB,CAA5B;;AAKA,UAAIS,mBAAmB,GAAGlR,IAAI,CAACW,eAAL,CAAqBwM,cAArB,GAAsC3V,MAAhE;;AACA,UAAI2Z,aAAa,GAAGtc,qBAAqB,CAAC8b,eAAD,EAAkBE,eAAe,CAACD,KAAhB,CAAsBM,mBAAtB,CAAlB,CAAzC;AACA,UAAIE,qBAAqB,GAAGP,eAAe,CAACD,KAAhB,CAAsB,CAAtB,EAAyBM,mBAAzB,CAA5B;AACA,UAAIG,iBAAiB,GAAGta,WAAW,CAACqa,qBAAD,CAAnC;AACA,UAAIE,oBAAoB,GAAG7N,QAAQ,CAAC+M,eAAT,EAA3B;AACA,UAAIe,gBAAgB,GAAG,CAAvB;AACA,UAAIjB,cAAc,GAAG,CAArB;;AACA,UAAItQ,IAAI,CAACqD,UAAT,EAAqB;AACjBkO,QAAAA,gBAAgB,GAAG9B,gBAAgB,CAAC7W,MAAjB,EAAnB;AACA,YAAI4Y,WAAW,GAAGhE,YAAY,CAACrT,IAAb,CAAkB,iBAAlB,CAAlB;AACA,YAAIsX,gBAAgB,GAAGhe,gBAAgB,CAACka,IAAjB,GAAwBzY,OAAO,CAACsc,WAAW,CAAC5X,GAAZ,CAAgB,CAAhB,CAAD,EAAqB,QAArB,EAA+B;AACjFmX,UAAAA,QAAQ,EAAE,KADuE;AAEjFC,UAAAA,OAAO,EAAE,KAFwE;AAGjFC,UAAAA,OAAO,EAAE;AAHwE,SAA/B,CAA/B,GAIlBO,WAAW,CAAC5Y,MAAZ,EAJL;AAKAiW,QAAAA,YAAY,GAAGxV,oBAAoB,CAAC,CAACkW,cAAD,EAAiBF,YAAjB,EAA+B7B,YAA/B,EAA6CkC,gBAA7C,EAA+DD,gBAA/D,CAAD,EAAmF,QAAnF,CAAnC;AACAa,QAAAA,cAAc,GAAGtQ,IAAI,CAACgD,QAAL,GAAgBpK,MAAhB,KAA2B2Y,gBAA3B,GAA8CE,gBAA9C,IAAkEpH,IAAI,CAACqH,GAAL,CAAShO,QAAQ,CAACmK,WAAT,GAAuBjV,MAAvB,EAAT,EAA0C2W,cAAc,CAAC3W,MAAf,EAA1C,EAAmEkY,qBAAnE,IAA4FjC,YAA9J,CAAjB;AACH;;AACDC,MAAAA,UAAU,GAAGpL,QAAQ,CAAC8J,YAAT,GAAwB7U,KAAxB,EAAb;AACAoW,MAAAA,WAAW,GAAGhY,WAAW,CAACoa,aAAD,CAAzB;;AACA,UAAI,CAACrC,UAAD,IAAe,CAACC,WAApB,EAAiC;AAC7Ba,QAAAA,CAAC,CAAC+B,OAAF;AACA;AACH;;AACD3C,MAAAA,aAAa,GAAGjY,WAAW,CAACua,oBAAD,CAA3B;AACA,UAAIM,YAAY,GAAG5R,IAAI,CAACgD,QAAL,GAAgBrK,KAAhB,EAAnB;AACAkW,MAAAA,YAAY,GAAGxV,oBAAoB,CAAC,CAACiW,WAAD,EAAcD,YAAd,EAA4B7B,YAA5B,CAAD,EAA4C,OAA5C,CAAnC;AACAoB,MAAAA,UAAU,GAAGgD,YAAY,GAAG5C,aAAf,GAA+BH,YAA5C;AACAD,MAAAA,UAAU,GAAGA,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8BE,UAA3C;AACA,UAAI+C,IAAI,GAAG/C,UAAU,GAAGF,UAAxB;AACA,UAAIkD,qBAAqB,GAAGD,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAjD;;AACA,UAAIC,qBAAJ,EAA2B;AACvB1a,QAAAA,eAAe,CAACmZ,YAAD,EAAesB,IAAf,CAAf;AACA/C,QAAAA,UAAU,GAAGF,UAAb;AACH;;AACDK,MAAAA,aAAa,GAAGjP,IAAI,CAACqD,UAAL,IAAmB6M,kBAAkB,CAACI,cAAD,EAAiBvB,WAAjB,CAArD;AACAG,MAAAA,gBAAgB,GAAGgB,kBAAkB,CAACtB,UAAD,EAAaE,UAAb,CAArC;AACA,UAAIiD,WAAW,GAAG1B,oBAAoB,CAACC,cAAD,EAAiBvB,WAAjB,EAA8BE,aAA9B,EAA6CC,gBAA7C,EAA+D/W,cAA/D,CAAtC;AACAnE,MAAAA,WAAW,CAAE,YAAW;AACpBwP,QAAAA,WAAW,CAACgK,YAAZ,GAA2B7B,MAA3B,CAAkCjI,QAAQ,CAACmK,WAAT,EAAlC;AACA8B,QAAAA,eAAe,CAACnC,YAAhB,GAA+B7B,MAA/B,CAAsClI,QAAQ,CAACoK,WAAT,EAAtC;;AACA,YAAI,CAACqB,gBAAD,IAAqBD,aAArB,IAAsC9W,cAA1C,EAA0D;AACtDf,UAAAA,eAAe,CAACmZ,YAAD,EAAepY,cAAf,CAAf;AACA2W,UAAAA,UAAU,IAAI3W,cAAd;AACH;;AACD,YAAI2Y,qBAAqB,GAAGO,iBAA5B,EAA+C;AAC3Cja,UAAAA,eAAe,CAACga,qBAAD,EAAwBC,iBAAiB,GAAGP,qBAA5C,CAAf;AACAtN,UAAAA,WAAW,CAACwO,aAAZ,CAA0BZ,qBAA1B;AACH;;AACD5D,QAAAA,YAAY,CAAC/C,WAAb,CAAyBjU,2BAAzB;AACAkZ,QAAAA,gBAAgB,CAAC1G,QAAjB,GAA4B1Q,GAA5B,CAAgC,UAAhC,EAA4CsW,UAA5C;AACApL,QAAAA,WAAW,CAACoL,UAAZ,CAAuBA,UAAvB;AACApL,QAAAA,WAAW,CAACyO,uBAAZ,CAAoChD,aAAa,GAAG9W,cAAH,GAAoB,CAArE;AACAqL,QAAAA,WAAW,CAAC0O,eAAZ,CAA4B3B,YAA5B;AACA9M,QAAAA,QAAQ,CAACsO,WAAT,CAAqB/R,IAAI,CAACqD,UAAL,GAAkB0O,WAAlB,GAAgC,MAArD;AACAtO,QAAAA,QAAQ,CAACwO,uBAAT,CAAiC/C,gBAAgB,GAAG/W,cAAH,GAAoB,CAArE;AACAsL,QAAAA,QAAQ,CAACyO,eAAT,CAAyBZ,oBAAzB;AACA7N,QAAAA,QAAQ,CAACuO,aAAT,CAAuBb,aAAvB;AACAzN,QAAAA,QAAQ,CAACwO,eAAT,CAAyB3B,YAAzB;AACA7M,QAAAA,QAAQ,CAACsO,aAAT,CAAuBb,aAAvB;AACAzN,QAAAA,QAAQ,CAACkL,UAAT,CAAoBA,UAApB;AACAlL,QAAAA,QAAQ,CAACqO,WAAT,CAAqB/R,IAAI,CAACqD,UAAL,GAAkB0O,WAAlB,GAAgC,MAArD;AACAlC,QAAAA,yBAAyB,IAAIF,eAAe,CAACuC,eAAhB,CAAgCZ,oBAAhC,CAA7B;AACAjC,QAAAA,YAAY,CAAClM,WAAb,CAAyB/M,mBAAzB,EAA8C,CAAC6Y,aAA/C;AACAK,QAAAA,WAAW,CAACnM,WAAZ,CAAwB/M,mBAAxB,EAA6C,CAAC6Y,aAA9C;;AACA,YAAI,CAACjP,IAAI,CAACqD,UAAN,IAAoBuO,YAAY,KAAK5R,IAAI,CAACgD,QAAL,GAAgBrK,KAAhB,EAAzC,EAAkE;AAC9D,cAAIwZ,KAAK,GAAGP,YAAY,GAAG5R,IAAI,CAACgD,QAAL,GAAgBrK,KAAhB,EAA3B;;AACA,cAAI,CAACuW,gBAAL,EAAuB;AACnB9X,YAAAA,eAAe,CAACmZ,YAAD,EAAe4B,KAAf,CAAf;AACA3O,YAAAA,WAAW,CAAC0O,eAAZ,CAA4B3B,YAA5B;AACA7M,YAAAA,QAAQ,CAACwO,eAAT,CAAyB3B,YAAzB;AACH;;AACD7M,UAAAA,QAAQ,CAACkL,UAAT,CAAoBA,UAAU,GAAGuD,KAAjC;AACA3O,UAAAA,WAAW,CAACoL,UAAZ,CAAuBA,UAAU,GAAGuD,KAApC;AACH;;AACD,YAAInS,IAAI,CAACqD,UAAL,IAAmBrD,IAAI,CAACoM,aAAL,CAAmB0D,SAAnB,EAAnB,IAAqDL,gBAAgB,CAAC7W,MAAjB,OAA8B2Y,gBAAvF,EAAyG;AACrG,cAAIa,MAAM,GAAG3C,gBAAgB,CAAC7W,MAAjB,KAA4B2Y,gBAAzC;;AACA,cAAIa,MAAM,GAAG,CAAb,EAAgB;AACZnD,YAAAA,aAAa,GAAGiB,kBAAkB,CAACI,cAAc,GAAG8B,MAAlB,EAA0BrD,WAA1B,CAAlC;;AACA,gBAAIsD,YAAY,GAAGhC,oBAAoB,CAACC,cAAc,GAAG8B,MAAlB,EAA0BrD,WAA1B,EAAuCE,aAAvC,EAAsDC,gBAAtD,EAAwE/W,cAAxE,CAAvC;;AACAuL,YAAAA,QAAQ,CAACqO,WAAT,CAAqBM,YAArB;AACA5O,YAAAA,QAAQ,CAACsO,WAAT,CAAqBM,YAArB;AACH;AACJ;;AACD,YAAI,cAAclD,gBAAgB,CAACvU,IAAnC,EAAyC;AACrC,cAAI0X,oBAAoB,GAAGtS,IAAI,CAACW,eAAL,CAAqB4R,6BAArB,CAAmD;AAC1EzX,YAAAA,gBAAgB,EAAEqU,gBAAgB,CAACrU,gBADuC;AAE1EC,YAAAA,kBAAkB,EAAEoU,gBAAgB,CAACpU,kBAFqC;AAG1EyX,YAAAA,UAAU,EAAEjC,YAH8D;AAI1EkC,YAAAA,WAAW,EAAEtB,aAJ6D;AAK1EuB,YAAAA,QAAQ,EAAEvB,aAAa,CAAC3Z,MALkD;AAM1Emb,YAAAA,WAAW,EAAEpC,YAAY,CAAC/Y,MANgD;AAO1Eob,YAAAA,aAAa,EAAEhE,UAP2D;AAQ1EiE,YAAAA,cAAc,EAAE7S,IAAI,CAACqD,UAAL,GAAkB0O,WAAlB,GAAgC1e,CAAC,CAACG,MAAD,CAAD,CAAUsf,WAAV;AAR0B,WAAnD,CAA3B;;AAUApP,UAAAA,QAAQ,CAACqP,uBAAT,CAAiC;AAC7Bta,YAAAA,GAAG,EAAE6Z,oBAAoB,CAACU,UADG;AAE7Bta,YAAAA,IAAI,EAAE4Z,oBAAoB,CAACW,WAFE;AAG7Bta,YAAAA,KAAK,EAAE2Z,oBAAoB,CAAC3Z,KAHC;AAI7BC,YAAAA,MAAM,EAAE0Z,oBAAoB,CAAC1Z;AAJA,WAAjC;AAMA6K,UAAAA,QAAQ,CAACsP,uBAAT,CAAiC;AAC7Bta,YAAAA,GAAG,EAAE6Z,oBAAoB,CAACU,UADG;AAE7Bra,YAAAA,KAAK,EAAEqW,aAFsB;AAG7BpW,YAAAA,MAAM,EAAE0Z,oBAAoB,CAAC1Z;AAHA,WAAjC;AAKA4K,UAAAA,WAAW,CAACuP,uBAAZ,CAAoC;AAChCra,YAAAA,IAAI,EAAE4Z,oBAAoB,CAACW,WADK;AAEhCta,YAAAA,KAAK,EAAE2Z,oBAAoB,CAAC3Z,KAFI;AAGhCC,YAAAA,MAAM,EAAE4K,WAAW,CAACT,YAAZ,GAA2BnK,MAA3B;AAHwB,WAApC;AAKH;;AACD,YAAIsa,uBAAuB,GAAG,EAA9B;AACAxP,QAAAA,QAAQ,CAACqK,aAAT,CAAuBqB,aAAa,CAAClW,kBAArC,EAAyDgW,gBAAzD,EAA2ED,aAA3E;AACA/a,QAAAA,IAAI,CAAC,CAACsP,WAAD,EAAcC,QAAd,EAAwBC,QAAxB,CAAD,EAAqC,UAASxM,CAAT,EAAYS,IAAZ,EAAkB;AACvDub,UAAAA,uBAAuB,CAAC1L,IAAxB,CAA6B7P,IAAI,IAAIA,IAAI,CAACwb,gBAAL,EAArC;AACH,SAFG,CAAJ;;AAGAnT,QAAAA,IAAI,CAACqB,cAAL;;AACArB,QAAAA,IAAI,CAAC6J,iBAAL,CAAuBwF,YAAvB;;AACA3Z,QAAAA,IAAI,CAAC2X,KAAL,CAAWha,CAAX,EAAc6f,uBAAd,EAAuCE,IAAvC,CAA6C,YAAW;AACpDpT,UAAAA,IAAI,CAACuD,qBAAL,CAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,QAAlD;;AACA1D,UAAAA,IAAI,CAACoE,kBAAL,CAAwBZ,WAAxB,EAAqCC,QAArC,EAA+CC,QAA/C;;AACAkM,UAAAA,CAAC,CAAC+B,OAAF;AACH,SAJD;AAKH,OAtFU,CAAX;AAuFH,KAvIU,CAAX;AAwIA,WAAO/B,CAAP;AACH,GArgC0B;AAsgC3ByD,EAAAA,sBAAsB,EAAE,gCAAS1b,IAAT,EAAe2P,IAAf,EAAqBpM,UAArB,EAAiC;AACrD,SAAKyF,eAAL,CAAqB0S,sBAArB,CAA4C1b,IAA5C,EAAkD2P,IAAlD,EAAwDpM,UAAxD;AACH;AAxgC0B,CAAf,EAygCbb,OAzgCa,CAygCL/E,WAzgCK,EAygCQge,OAzgCR,CAygCgB/d,qBAzgChB,CAAhB;AA0gCA5B,iBAAiB,CAAC,aAAD,EAAgByG,SAAhB,CAAjB;AACA,eAAeA,SAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport coreBrowserUtils from \"../../core/utils/browser\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    format as formatString\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport localizationMessage from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    setFieldProperty,\r\n    findField,\r\n    mergeArraysByMaxValue\r\n} from \"./ui.pivot_grid.utils\";\r\nimport {\r\n    DataController\r\n} from \"./ui.pivot_grid.data_controller\";\r\nimport {\r\n    DataArea\r\n} from \"./ui.pivot_grid.data_area\";\r\nimport {\r\n    VerticalHeadersArea,\r\n    HorizontalHeadersArea\r\n} from \"./ui.pivot_grid.headers_area\";\r\nimport {\r\n    getSize\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    FieldsArea\r\n} from \"./ui.pivot_grid.fields_area\";\r\nimport PivotGridFieldChooser from \"./ui.pivot_grid.field_chooser\";\r\nimport PivotGridFieldChooserBase from \"./ui.pivot_grid.field_chooser_base\";\r\nimport {\r\n    ExportMixin\r\n} from \"./ui.pivot_grid.export\";\r\nimport chartIntegrationMixin from \"./ui.pivot_grid.chart_integration\";\r\nimport Popup from \"../popup\";\r\nimport ContextMenu from \"../context_menu\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\r\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\r\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\r\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\r\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\r\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\r\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\r\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\r\nvar FIELDS_CLASS = \"dx-area-fields\";\r\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\r\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\r\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\r\nvar TR = \"<tr>\";\r\nvar TD = \"<td>\";\r\nvar DIV = \"<div>\";\r\nvar TEST_HEIGHT = 66666;\r\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\r\n\r\nfunction getArraySum(array) {\r\n    var sum = 0;\r\n    each(array, (function(_, value) {\r\n        sum += value || 0\r\n    }));\r\n    return sum\r\n}\r\n\r\nfunction adjustSizeArray(sizeArray, space) {\r\n    var delta = space / sizeArray.length;\r\n    for (var i = 0; i < sizeArray.length; i++) {\r\n        sizeArray[i] -= delta\r\n    }\r\n}\r\n\r\nfunction unsubscribeScrollEvents(area) {\r\n    area.off(\"scroll\").off(\"stop\")\r\n}\r\n\r\nfunction subscribeToScrollEvent(area, handler) {\r\n    unsubscribeScrollEvents(area);\r\n    area.on(\"scroll\", handler).on(\"stop\", handler)\r\n}\r\nvar scrollBarInfoCache = {};\r\n\r\nfunction getScrollBarInfo(useNativeScrolling) {\r\n    if (scrollBarInfoCache[useNativeScrolling]) {\r\n        return scrollBarInfoCache[useNativeScrolling]\r\n    }\r\n    var scrollBarWidth;\r\n    var options = {};\r\n    var container = $(DIV).css({\r\n        position: \"absolute\",\r\n        visibility: \"hidden\",\r\n        top: -1e3,\r\n        left: -1e3,\r\n        width: 100,\r\n        height: 100\r\n    }).appendTo(\"body\");\r\n    var content = $(\"<p>\").css({\r\n        width: \"100%\",\r\n        height: 200\r\n    }).appendTo(container);\r\n    if (\"auto\" !== useNativeScrolling) {\r\n        options.useNative = !!useNativeScrolling;\r\n        options.useSimulatedScrollbar = !useNativeScrolling\r\n    }\r\n    container.dxScrollable(options);\r\n    var scrollBarUseNative = container.dxScrollable(\"instance\").option(\"useNative\");\r\n    scrollBarWidth = scrollBarUseNative ? container.width() - content.width() : 0;\r\n    container.remove();\r\n    scrollBarInfoCache[useNativeScrolling] = {\r\n        scrollBarWidth: scrollBarWidth,\r\n        scrollBarUseNative: scrollBarUseNative\r\n    };\r\n    return scrollBarInfoCache[useNativeScrolling]\r\n}\r\n\r\nfunction getCommonBorderWidth(elements, direction) {\r\n    var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\r\n    var width = 0;\r\n    each(elements, (function(_, elem) {\r\n        var computedStyle = window.getComputedStyle(elem.get(0));\r\n        borderStyleNames.forEach((function(borderStyleName) {\r\n            width += parseFloat(computedStyle[borderStyleName]) || 0\r\n        }))\r\n    }));\r\n    return width\r\n}\r\n\r\nfunction clickedOnFieldsArea($targetElement) {\r\n    return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length\r\n}\r\nvar PivotGrid = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            scrolling: {\r\n                timeout: 300,\r\n                renderingThreshold: 150,\r\n                minTimeout: 10,\r\n                mode: \"standard\",\r\n                useNative: \"auto\",\r\n                removeInvisiblePages: true,\r\n                virtualRowHeight: 50,\r\n                virtualColumnWidth: 100,\r\n                loadTwoPagesOnStart: true\r\n            },\r\n            encodeHtml: true,\r\n            dataSource: null,\r\n            activeStateEnabled: false,\r\n            fieldChooser: {\r\n                minWidth: 250,\r\n                minHeight: 250,\r\n                enabled: true,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                layout: 0,\r\n                title: localizationMessage.format(\"dxPivotGrid-fieldChooserTitle\"),\r\n                width: 600,\r\n                height: 600,\r\n                applyChangesMode: \"instantly\"\r\n            },\r\n            onContextMenuPreparing: null,\r\n            allowSorting: false,\r\n            allowSortingBySummary: false,\r\n            allowFiltering: false,\r\n            allowExpandAll: false,\r\n            wordWrapEnabled: true,\r\n            fieldPanel: {\r\n                showColumnFields: true,\r\n                showFilterFields: true,\r\n                showDataFields: true,\r\n                showRowFields: true,\r\n                allowFieldDragging: true,\r\n                visible: false,\r\n                texts: {\r\n                    columnFieldArea: localizationMessage.format(\"dxPivotGrid-columnFieldArea\"),\r\n                    rowFieldArea: localizationMessage.format(\"dxPivotGrid-rowFieldArea\"),\r\n                    filterFieldArea: localizationMessage.format(\"dxPivotGrid-filterFieldArea\"),\r\n                    dataFieldArea: localizationMessage.format(\"dxPivotGrid-dataFieldArea\")\r\n                }\r\n            },\r\n            dataFieldArea: \"column\",\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"PivotGrid\",\r\n                proxyUrl: void 0,\r\n                ignoreExcelErrors: true\r\n            },\r\n            showRowTotals: true,\r\n            showRowGrandTotals: true,\r\n            showColumnTotals: true,\r\n            showColumnGrandTotals: true,\r\n            hideEmptySummaryCells: true,\r\n            showTotalsPrior: \"none\",\r\n            rowHeaderLayout: \"standard\",\r\n            loadPanel: {\r\n                enabled: true,\r\n                text: localizationMessage.format(\"Loading\"),\r\n                width: 200,\r\n                height: 70,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            texts: {\r\n                grandTotal: localizationMessage.format(\"dxPivotGrid-grandTotal\"),\r\n                total: localizationMessage.getFormatter(\"dxPivotGrid-total\"),\r\n                noData: localizationMessage.format(\"dxDataGrid-noDataText\"),\r\n                showFieldChooser: localizationMessage.format(\"dxPivotGrid-showFieldChooser\"),\r\n                expandAll: localizationMessage.format(\"dxPivotGrid-expandAll\"),\r\n                collapseAll: localizationMessage.format(\"dxPivotGrid-collapseAll\"),\r\n                sortColumnBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\r\n                sortRowBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\r\n                removeAllSorting: localizationMessage.format(\"dxPivotGrid-removeAllSorting\"),\r\n                exportToExcel: localizationMessage.format(\"dxDataGrid-exportToExcel\"),\r\n                dataNotAvailable: localizationMessage.format(\"dxPivotGrid-dataNotAvailable\")\r\n            },\r\n            onCellClick: null,\r\n            onCellPrepared: null,\r\n            showBorders: false,\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            },\r\n            onExpandValueChanging: null,\r\n            renderCellCountLimit: 2e4,\r\n            onExporting: null,\r\n            onExported: null,\r\n            onFileSaving: null,\r\n            headerFilter: {\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                showRelevantValues: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _updateCalculatedOptions: function(fields) {\r\n        var that = this;\r\n        each(fields, (function(index, field) {\r\n            each(FIELD_CALCULATED_OPTIONS, (function(_, optionName) {\r\n                var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\r\n                var needUpdate = void 0 === field[optionName] || isCalculated;\r\n                if (needUpdate) {\r\n                    setFieldProperty(field, optionName, that.option(optionName))\r\n                }\r\n            }))\r\n        }))\r\n    },\r\n    _getDataControllerOptions: function() {\r\n        var that = this;\r\n        return {\r\n            component: that,\r\n            dataSource: that.option(\"dataSource\"),\r\n            texts: that.option(\"texts\"),\r\n            showRowTotals: that.option(\"showRowTotals\"),\r\n            showRowGrandTotals: that.option(\"showRowGrandTotals\"),\r\n            showColumnTotals: that.option(\"showColumnTotals\"),\r\n            showTotalsPrior: that.option(\"showTotalsPrior\"),\r\n            showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\r\n            dataFieldArea: that.option(\"dataFieldArea\"),\r\n            rowHeaderLayout: that.option(\"rowHeaderLayout\"),\r\n            hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\r\n            onFieldsPrepared: function(fields) {\r\n                that._updateCalculatedOptions(fields)\r\n            }\r\n        }\r\n    },\r\n    _initDataController: function() {\r\n        var that = this;\r\n        that._dataController && that._dataController.dispose();\r\n        that._dataController = new DataController(that._getDataControllerOptions());\r\n        if (hasWindow()) {\r\n            that._dataController.changed.add((function() {\r\n                that._render()\r\n            }))\r\n        }\r\n        that._dataController.scrollChanged.add((function(options) {\r\n            that._scrollLeft = options.left;\r\n            that._scrollTop = options.top\r\n        }));\r\n        that._dataController.loadingChanged.add((function(isLoading) {\r\n            that._updateLoading()\r\n        }));\r\n        that._dataController.progressChanged.add(that._updateLoading.bind(that));\r\n        that._dataController.dataSourceChanged.add((function() {\r\n            that._trigger(\"onChanged\")\r\n        }));\r\n        var expandValueChanging = that.option(\"onExpandValueChanging\");\r\n        if (expandValueChanging) {\r\n            that._dataController.expandValueChanging.add((function(e) {\r\n                expandValueChanging(e)\r\n            }))\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initDataController();\r\n        this._scrollLeft = this._scrollTop = null;\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {\r\n            onChanged: this._createActionByOption(\"onChanged\"),\r\n            onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\"),\r\n            onCellClick: this._createActionByOption(\"onCellClick\"),\r\n            onExporting: this._createActionByOption(\"onExporting\"),\r\n            onExported: this._createActionByOption(\"onExported\"),\r\n            onFileSaving: this._createActionByOption(\"onFileSaving\"),\r\n            onCellPrepared: this._createActionByOption(\"onCellPrepared\")\r\n        }\r\n    },\r\n    _trigger: function(eventName, eventArg) {\r\n        this._actions[eventName](eventArg)\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\r\n            var fields = this.getDataSource().fields();\r\n            this._updateCalculatedOptions(fields)\r\n        }\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n            case \"allowSorting\":\r\n            case \"allowFiltering\":\r\n            case \"allowExpandAll\":\r\n            case \"allowSortingBySummary\":\r\n            case \"scrolling\":\r\n            case \"stateStoring\":\r\n                this._initDataController();\r\n                this._fieldChooserPopup.hide();\r\n                this._renderFieldChooser();\r\n                this._invalidate();\r\n                break;\r\n            case \"texts\":\r\n            case \"showTotalsPrior\":\r\n            case \"showRowTotals\":\r\n            case \"showRowGrandTotals\":\r\n            case \"showColumnTotals\":\r\n            case \"showColumnGrandTotals\":\r\n            case \"hideEmptySummaryCells\":\r\n            case \"dataFieldArea\":\r\n                this._dataController.updateViewOptions(this._getDataControllerOptions());\r\n                break;\r\n            case \"useNativeScrolling\":\r\n            case \"encodeHtml\":\r\n            case \"renderCellCountLimit\":\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this.callBase(args);\r\n                this._renderFieldChooser();\r\n                this._renderContextMenu();\r\n                hasWindow() && this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\r\n                this._invalidate();\r\n                break;\r\n            case \"export\":\r\n                this._renderDescriptionArea();\r\n                break;\r\n            case \"onExpandValueChanging\":\r\n                break;\r\n            case \"onCellClick\":\r\n            case \"onContextMenuPreparing\":\r\n            case \"onExporting\":\r\n            case \"onExported\":\r\n            case \"onFileSaving\":\r\n            case \"onCellPrepared\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            case \"fieldChooser\":\r\n                this._renderFieldChooser();\r\n                this._renderDescriptionArea();\r\n                break;\r\n            case \"loadPanel\":\r\n                if (hasWindow()) {\r\n                    this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"fieldPanel\":\r\n                this._renderDescriptionArea();\r\n                this._invalidate();\r\n                break;\r\n            case \"headerFilter\":\r\n                this._renderFieldChooser();\r\n                this._invalidate();\r\n                break;\r\n            case \"showBorders\":\r\n                this._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\r\n                this.updateDimensions();\r\n                break;\r\n            case \"wordWrapEnabled\":\r\n                this._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\r\n                this.updateDimensions();\r\n                break;\r\n            case \"rowHeaderLayout\":\r\n                this._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\r\n                this._dataController.updateViewOptions(this._getDataControllerOptions());\r\n                break;\r\n            case \"height\":\r\n            case \"width\":\r\n                this._hasHeight = null;\r\n                this.callBase(args);\r\n                this.resize();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _updateScrollPosition: function(columnsArea, rowsArea, dataArea) {\r\n        var scrollTop;\r\n        var scrollLeft;\r\n        var scrolled = this._scrollTop || this._scrollLeft;\r\n        if (this._scrollUpdating) {\r\n            return\r\n        }\r\n        this._scrollUpdating = true;\r\n        if (rowsArea && !rowsArea.hasScroll() && this._hasHeight) {\r\n            this._scrollTop = null\r\n        }\r\n        if (columnsArea && !columnsArea.hasScroll()) {\r\n            this._scrollLeft = null\r\n        }\r\n        if (null !== this._scrollTop || null !== this._scrollLeft || scrolled || this.option(\"rtlEnabled\")) {\r\n            scrollTop = this._scrollTop || 0;\r\n            scrollLeft = this._scrollLeft || 0;\r\n            dataArea.scrollTo({\r\n                x: scrollLeft,\r\n                y: scrollTop\r\n            });\r\n            columnsArea.scrollTo(scrollLeft);\r\n            rowsArea.scrollTo(scrollTop);\r\n            this._dataController.updateWindowScrollPosition(this._scrollTop)\r\n        }\r\n        this._scrollUpdating = false\r\n    },\r\n    _subscribeToEvents: function(columnsArea, rowsArea, dataArea) {\r\n        var that = this;\r\n        var scrollHandler = function(e) {\r\n            var scrollOffset = e.scrollOffset;\r\n            var leftOffset = isDefined(scrollOffset.left) ? scrollOffset.left : that._scrollLeft;\r\n            var topOffset = isDefined(scrollOffset.top) && that._hasHeight ? scrollOffset.top : that._scrollTop;\r\n            if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\r\n                that._scrollLeft = leftOffset;\r\n                that._scrollTop = topOffset;\r\n                that._updateScrollPosition(columnsArea, rowsArea, dataArea);\r\n                if (\"virtual\" === that.option(\"scrolling.mode\")) {\r\n                    that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop)\r\n                }\r\n            }\r\n        };\r\n        each([columnsArea, rowsArea, dataArea], (function(_, area) {\r\n            subscribeToScrollEvent(area, scrollHandler)\r\n        }));\r\n        !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement())\r\n    },\r\n    _clean: noop,\r\n    _needDelayResizing: function(cellsInfo) {\r\n        var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\r\n        return cellsCount > this.option(\"renderCellCountLimit\")\r\n    },\r\n    _renderFieldChooser: function() {\r\n        var that = this;\r\n        var container = that._pivotGridContainer;\r\n        var fieldChooserOptions = that.option(\"fieldChooser\") || {};\r\n        var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: localizationMessage.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: localizationMessage.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }] : [];\r\n        var fieldChooserComponentOptions = {\r\n            layout: fieldChooserOptions.layout,\r\n            texts: fieldChooserOptions.texts || {},\r\n            dataSource: that.getDataSource(),\r\n            allowSearch: fieldChooserOptions.allowSearch,\r\n            searchTimeout: fieldChooserOptions.searchTimeout,\r\n            width: void 0,\r\n            height: void 0,\r\n            headerFilter: that.option(\"headerFilter\"),\r\n            encodeHtml: that.option(\"encodeHtml\"),\r\n            applyChangesMode: fieldChooserOptions.applyChangesMode,\r\n            onContextMenuPreparing: function(e) {\r\n                that._trigger(\"onContextMenuPreparing\", e)\r\n            }\r\n        };\r\n        var popupOptions = {\r\n            shading: false,\r\n            title: fieldChooserOptions.title,\r\n            width: fieldChooserOptions.width,\r\n            height: fieldChooserOptions.height,\r\n            showCloseButton: true,\r\n            resizeEnabled: true,\r\n            minWidth: fieldChooserOptions.minWidth,\r\n            minHeight: fieldChooserOptions.minHeight,\r\n            toolbarItems: toolbarItems,\r\n            onResize: function(e) {\r\n                e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\")\r\n            },\r\n            onShown: function(e) {\r\n                that._createComponent(e.component.content(), PivotGridFieldChooser, fieldChooserComponentOptions)\r\n            },\r\n            onHidden: function(e) {\r\n                var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\r\n                fieldChooser.resetTreeView();\r\n                fieldChooser.cancelChanges()\r\n            }\r\n        };\r\n        if (that._fieldChooserPopup) {\r\n            that._fieldChooserPopup.option(popupOptions);\r\n            that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions)\r\n        } else {\r\n            that._fieldChooserPopup = that._createComponent($(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), Popup, popupOptions)\r\n        }\r\n    },\r\n    _renderContextMenu: function() {\r\n        var that = this;\r\n        var $container = that._pivotGridContainer;\r\n        if (that._contextMenu) {\r\n            that._contextMenu.$element().remove()\r\n        }\r\n        that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                actionArgs.cancel = true;\r\n                if (!event) {\r\n                    return\r\n                }\r\n                var targetElement = event.target.cellIndex >= 0 ? event.target : $(event.target).closest(\"td\").get(0);\r\n                if (!targetElement) {\r\n                    return\r\n                }\r\n                var args = that._createEventArgs(targetElement, event);\r\n                var items = that._getContextMenuItems(args);\r\n                if (items) {\r\n                    actionArgs.component.option(\"items\", items);\r\n                    actionArgs.cancel = false;\r\n                    return\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: PIVOTGRID_CLASS,\r\n            target: that.$element()\r\n        })\r\n    },\r\n    _getContextMenuItems: function(e) {\r\n        var that = this;\r\n        var items = [];\r\n        var texts = that.option(\"texts\");\r\n        if (\"row\" === e.area || \"column\" === e.area) {\r\n            var areaFields = e[e.area + \"Fields\"];\r\n            var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\r\n            var field = e.cell.path && areaFields[e.cell.path.length - 1];\r\n            var dataSource = that.getDataSource();\r\n            if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\r\n                items.push({\r\n                    beginGroup: true,\r\n                    icon: \"none\",\r\n                    text: texts.expandAll,\r\n                    onItemClick: function() {\r\n                        dataSource.expandAll(field.index)\r\n                    }\r\n                });\r\n                items.push({\r\n                    text: texts.collapseAll,\r\n                    icon: \"none\",\r\n                    onItemClick: function() {\r\n                        dataSource.collapseAll(field.index)\r\n                    }\r\n                })\r\n            }\r\n            if (e.cell.isLast && !dataSource.paginate()) {\r\n                var sortingBySummaryItemCount = 0;\r\n                each(oppositeAreaFields, (function(index, field) {\r\n                    if (!field.allowSortingBySummary) {\r\n                        return\r\n                    }\r\n                    each(e.dataFields, (function(dataIndex, dataField) {\r\n                        if (isDefined(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\r\n                            return\r\n                        }\r\n                        var showDataFieldCaption = !isDefined(e.cell.dataIndex) && e.dataFields.length > 1;\r\n                        var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\r\n                        var checked = findField(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\r\n                        var text = formatString(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\r\n                        items.push({\r\n                            beginGroup: 0 === sortingBySummaryItemCount,\r\n                            icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\r\n                            text: text,\r\n                            onItemClick: function() {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\r\n                                    sortBySummaryPath: e.cell.path,\r\n                                    sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\r\n                                });\r\n                                dataSource.load()\r\n                            }\r\n                        });\r\n                        sortingBySummaryItemCount++\r\n                    }))\r\n                }));\r\n                each(oppositeAreaFields, (function(index, field) {\r\n                    if (!field.allowSortingBySummary || !isDefined(field.sortBySummaryField)) {\r\n                        return\r\n                    }\r\n                    items.push({\r\n                        beginGroup: 0 === sortingBySummaryItemCount,\r\n                        icon: \"none\",\r\n                        text: texts.removeAllSorting,\r\n                        onItemClick: function() {\r\n                            each(oppositeAreaFields, (function(index, field) {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: void 0,\r\n                                    sortBySummaryPath: void 0,\r\n                                    sortOrder: void 0\r\n                                })\r\n                            }));\r\n                            dataSource.load()\r\n                        }\r\n                    });\r\n                    return false\r\n                }))\r\n            }\r\n        }\r\n        if (that.option(\"fieldChooser.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"columnchooser\",\r\n                text: texts.showFieldChooser,\r\n                onItemClick: function() {\r\n                    that._fieldChooserPopup.show()\r\n                }\r\n            })\r\n        }\r\n        if (that.option(\"export.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"xlsxfile\",\r\n                text: texts.exportToExcel,\r\n                onItemClick: function() {\r\n                    that.exportToExcel()\r\n                }\r\n            })\r\n        }\r\n        e.items = items;\r\n        that._trigger(\"onContextMenuPreparing\", e);\r\n        items = e.items;\r\n        if (items && items.length) {\r\n            return items\r\n        }\r\n    },\r\n    _createEventArgs: function(targetElement, dxEvent) {\r\n        var dataSource = this.getDataSource();\r\n        var args = {\r\n            rowFields: dataSource.getAreaFields(\"row\"),\r\n            columnFields: dataSource.getAreaFields(\"column\"),\r\n            dataFields: dataSource.getAreaFields(\"data\"),\r\n            event: dxEvent\r\n        };\r\n        if (clickedOnFieldsArea($(targetElement))) {\r\n            return extend(this._createFieldArgs(targetElement), args)\r\n        } else {\r\n            return extend(this._createCellArgs(targetElement), args)\r\n        }\r\n    },\r\n    _createFieldArgs: function(targetElement) {\r\n        var field = $(targetElement).children().data(\"field\");\r\n        var args = {\r\n            field: field\r\n        };\r\n        return isDefined(field) ? args : {}\r\n    },\r\n    _createCellArgs: function(cellElement) {\r\n        var $cellElement = $(cellElement);\r\n        var columnIndex = cellElement.cellIndex;\r\n        var rowIndex = cellElement.parentElement.rowIndex;\r\n        var $table = $cellElement.closest(\"table\");\r\n        var data = $table.data(\"data\");\r\n        var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\r\n        var args = {\r\n            area: $table.data(\"area\"),\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex,\r\n            cellElement: getPublicElement($cellElement),\r\n            cell: cell\r\n        };\r\n        return args\r\n    },\r\n    _handleCellClick: function(e) {\r\n        var that = this;\r\n        var args = that._createEventArgs(e.currentTarget, e);\r\n        var cell = args.cell;\r\n        if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\r\n            return\r\n        }\r\n        that._trigger(\"onCellClick\", args);\r\n        cell && !args.cancel && isDefined(cell.expanded) && setTimeout((function() {\r\n            that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path)\r\n        }))\r\n    },\r\n    _getNoDataText: function() {\r\n        return this.option(\"texts.noData\")\r\n    },\r\n    _renderNoDataText: gridCoreUtils.renderNoDataText,\r\n    _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n    _updateLoading: function(progress) {\r\n        var that = this;\r\n        var isLoading = that._dataController.isLoading();\r\n        if (!that._loadPanel) {\r\n            return\r\n        }\r\n        var loadPanelVisible = that._loadPanel.option(\"visible\");\r\n        if (!loadPanelVisible) {\r\n            that._startLoadingTime = new Date\r\n        }\r\n        if (isLoading) {\r\n            if (progress) {\r\n                if (new Date - that._startLoadingTime >= 1e3) {\r\n                    that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\")\r\n                }\r\n            } else {\r\n                that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"))\r\n            }\r\n        }\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        if (loadPanelVisible && !isLoading) {\r\n            that._hideLoadingTimeoutID = setTimeout((function() {\r\n                that._loadPanel.option(\"visible\", false);\r\n                that.$element().removeClass(OVERFLOW_HIDDEN_CLASS)\r\n            }))\r\n        } else {\r\n            that._loadPanel.option(\"visible\", isLoading);\r\n            that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading)\r\n        }\r\n    },\r\n    _renderDescriptionArea: function() {\r\n        var $element = this.$element();\r\n        var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var $toolbarContainer = $(DIV).addClass(\"dx-pivotgrid-toolbar\");\r\n        var fieldPanel = this.option(\"fieldPanel\");\r\n        var $filterHeader = $element.find(\".dx-filter-header\");\r\n        var $columnHeader = $element.find(\".dx-column-header\");\r\n        var $targetContainer;\r\n        if (fieldPanel.visible && fieldPanel.showFilterFields) {\r\n            $targetContainer = $filterHeader\r\n        } else if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\r\n            $targetContainer = $columnHeader\r\n        } else {\r\n            $targetContainer = $descriptionCell\r\n        }\r\n        $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\r\n        $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\r\n        $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\r\n        this.$element().find(\".dx-pivotgrid-toolbar\").remove();\r\n        $toolbarContainer.prependTo($targetContainer);\r\n        if (this.option(\"fieldChooser.enabled\")) {\r\n            var $buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\r\n            var buttonOptions = {\r\n                icon: \"columnchooser\",\r\n                hint: this.option(\"texts.showFieldChooser\"),\r\n                onClick: () => {\r\n                    this.getFieldChooserPopup().show()\r\n                }\r\n            };\r\n            this._createComponent($buttonElement, \"dxButton\", buttonOptions)\r\n        }\r\n        if (this.option(\"export.enabled\")) {\r\n            var _$buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\r\n            var _buttonOptions = {\r\n                icon: \"xlsxfile\",\r\n                hint: this.option(\"texts.exportToExcel\"),\r\n                onClick: () => {\r\n                    this.exportToExcel()\r\n                }\r\n            };\r\n            this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions)\r\n        }\r\n    },\r\n    _detectHasContainerHeight: function() {\r\n        var element = this.$element();\r\n        if (isDefined(this._hasHeight)) {\r\n            var height = this.option(\"height\") || this.$element().get(0).style.height;\r\n            if (height && this._hasHeight ^ \"auto\" !== height) {\r\n                this._hasHeight = null\r\n            }\r\n        }\r\n        if (isDefined(this._hasHeight) || element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._pivotGridContainer.addClass(\"dx-hidden\");\r\n        var testElement = $(DIV).height(TEST_HEIGHT);\r\n        element.append(testElement);\r\n        this._hasHeight = element.height() !== TEST_HEIGHT;\r\n        this._pivotGridContainer.removeClass(\"dx-hidden\");\r\n        testElement.remove()\r\n    },\r\n    _renderHeaders: function(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\r\n        var dataSource = this.getDataSource();\r\n        this._rowFields = this._rowFields || new FieldsArea(this, \"row\");\r\n        this._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\r\n        this._columnFields = this._columnFields || new FieldsArea(this, \"column\");\r\n        this._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\r\n        this._filterFields = this._filterFields || new FieldsArea(this, \"filter\");\r\n        this._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\r\n        this._dataFields = this._dataFields || new FieldsArea(this, \"data\");\r\n        this._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\r\n        this.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable()\r\n    },\r\n    _createTableElement: function() {\r\n        var $table = $(\"<table>\").css({\r\n            width: \"100%\"\r\n        }).toggleClass(BORDERS_CLASS, !!this.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!this.option(\"wordWrapEnabled\"));\r\n        eventsEngine.on($table, addNamespace(clickEventName, \"dxPivotGrid\"), \"td\", this._handleCellClick.bind(this));\r\n        return $table\r\n    },\r\n    _renderDataArea: function(dataAreaElement) {\r\n        var dataArea = this._dataArea || new DataArea(this);\r\n        this._dataArea = dataArea;\r\n        dataArea.render(dataAreaElement, this._dataController.getCellsInfo());\r\n        return dataArea\r\n    },\r\n    _renderRowsArea: function(rowsAreaElement) {\r\n        var rowsArea = this._rowsArea || new VerticalHeadersArea(this);\r\n        this._rowsArea = rowsArea;\r\n        rowsArea.render(rowsAreaElement, this._dataController.getRowsInfo());\r\n        return rowsArea\r\n    },\r\n    _renderColumnsArea: function(columnsAreaElement) {\r\n        var columnsArea = this._columnsArea || new HorizontalHeadersArea(this);\r\n        this._columnsArea = columnsArea;\r\n        columnsArea.render(columnsAreaElement, this._dataController.getColumnsInfo());\r\n        return columnsArea\r\n    },\r\n    _initMarkup: function() {\r\n        var that = this;\r\n        that.callBase.apply(this, arguments);\r\n        that.$element().addClass(PIVOTGRID_CLASS)\r\n    },\r\n    _renderContentImpl: function() {\r\n        var columnsAreaElement;\r\n        var rowsAreaElement;\r\n        var dataAreaElement;\r\n        var tableElement;\r\n        var isFirstDrawing = !this._pivotGridContainer;\r\n        var rowHeaderContainer;\r\n        var columnHeaderContainer;\r\n        var filterHeaderContainer;\r\n        var dataHeaderContainer;\r\n        tableElement = !isFirstDrawing && this._tableElement();\r\n        if (!tableElement) {\r\n            this.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\r\n            this._pivotGridContainer = $(DIV).addClass(\"dx-pivotgrid-container\");\r\n            this._renderFieldChooser();\r\n            this._renderContextMenu();\r\n            columnsAreaElement = $(TD).addClass(COLUMN_AREA_CELL_CLASS);\r\n            rowsAreaElement = $(TD).addClass(ROW_AREA_CELL_CLASS);\r\n            dataAreaElement = $(TD).addClass(DATA_AREA_CELL_CLASS);\r\n            tableElement = this._createTableElement();\r\n            dataHeaderContainer = $(TD).addClass(\"dx-data-header\");\r\n            filterHeaderContainer = $(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\r\n            columnHeaderContainer = $(TD).addClass(\"dx-column-header\");\r\n            rowHeaderContainer = $(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\r\n            $(TR).append(filterHeaderContainer).appendTo(tableElement);\r\n            $(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\r\n            $(TR).toggleClass(\"dx-ie\", true === coreBrowserUtils.msie).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\r\n            $(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\r\n            this._pivotGridContainer.append(tableElement);\r\n            this.$element().append(this._pivotGridContainer);\r\n            if (\"tree\" === this.option(\"rowHeaderLayout\")) {\r\n                rowsAreaElement.addClass(\"dx-area-tree-view\")\r\n            }\r\n        }\r\n        this.$element().addClass(OVERFLOW_HIDDEN_CLASS);\r\n        this._createComponent(this.$element(), PivotGridFieldChooserBase, {\r\n            dataSource: this.getDataSource(),\r\n            encodeHtml: this.option(\"encodeHtml\"),\r\n            allowFieldDragging: this.option(\"fieldPanel.allowFieldDragging\"),\r\n            headerFilter: this.option(\"headerFilter\"),\r\n            visible: this.option(\"visible\")\r\n        });\r\n        var dataArea = this._renderDataArea(dataAreaElement);\r\n        var rowsArea = this._renderRowsArea(rowsAreaElement);\r\n        var columnsArea = this._renderColumnsArea(columnsAreaElement);\r\n        dataArea.tableElement().prepend(columnsArea.headElement());\r\n        if (isFirstDrawing) {\r\n            this._renderLoadPanel(dataArea.groupElement().parent(), this.$element());\r\n            this._renderDescriptionArea();\r\n            rowsArea.processScroll();\r\n            columnsArea.processScroll()\r\n        } [dataArea, rowsArea, columnsArea].forEach((function(area) {\r\n            unsubscribeScrollEvents(area)\r\n        }));\r\n        this._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\r\n        this._update(isFirstDrawing)\r\n    },\r\n    _update: function(isFirstDrawing) {\r\n        var that = this;\r\n        var updateHandler = function() {\r\n            that.updateDimensions()\r\n        };\r\n        if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\r\n            setTimeout(updateHandler)\r\n        } else {\r\n            updateHandler()\r\n        }\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        if (!this._dataController.isLoading()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    getScrollPath: function(area) {\r\n        if (\"column\" === area) {\r\n            return this._columnsArea.getScrollPath(this._scrollLeft)\r\n        } else {\r\n            return this._rowsArea.getScrollPath(this._scrollTop)\r\n        }\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataController.getDataSource()\r\n    },\r\n    getFieldChooserPopup: function() {\r\n        return this._fieldChooserPopup\r\n    },\r\n    hasScroll: function(area) {\r\n        return \"column\" === area ? this._columnsArea.hasScroll() : this._rowsArea.hasScroll()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        that.callBase.apply(that, arguments);\r\n        if (that._dataController) {\r\n            that._dataController.dispose()\r\n        }\r\n    },\r\n    _tableElement: function() {\r\n        return this.$element().find(\"table\").first()\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        return \"dx-pivotgrid-\" + className\r\n    },\r\n    resize: function() {\r\n        this.updateDimensions()\r\n    },\r\n    isReady: function() {\r\n        return this.callBase() && !this._dataController.isLoading()\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var groupWidth;\r\n        var tableElement = that._tableElement();\r\n        var rowsArea = that._rowsArea;\r\n        var columnsArea = that._columnsArea;\r\n        var dataArea = that._dataArea;\r\n        var bordersWidth;\r\n        var totalWidth = 0;\r\n        var totalHeight = 0;\r\n        var rowsAreaWidth = 0;\r\n        var hasRowsScroll;\r\n        var hasColumnsScroll;\r\n        var scrollingOptions = that.option(\"scrolling\") || {};\r\n        var scrollBarInfo = getScrollBarInfo(scrollingOptions.useNative);\r\n        var scrollBarWidth = scrollBarInfo.scrollBarWidth;\r\n        var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\r\n        var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\r\n        var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\r\n        var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var filterHeaderCell = tableElement.find(\".dx-filter-header\");\r\n        var columnHeaderCell = tableElement.find(\".dx-column-header\");\r\n        var rowFieldsHeader = that._rowFields;\r\n        var d = new Deferred;\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\r\n        that._detectHasContainerHeight();\r\n        if (!dataArea.headElement().length) {\r\n            dataArea.tableElement().prepend(columnsArea.headElement())\r\n        }\r\n        if (needSynchronizeFieldPanel) {\r\n            rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\r\n            rowsArea.tableElement().prepend(rowFieldsHeader.headElement())\r\n        }\r\n        tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n        dataArea.reset();\r\n        rowsArea.reset();\r\n        columnsArea.reset();\r\n        rowFieldsHeader.reset();\r\n        var calculateHasScroll = (areaSize, totalSize) => totalSize - areaSize >= 1;\r\n        var calculateGroupHeight = (dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) => hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0);\r\n        deferUpdate((function() {\r\n            var resultWidths = dataArea.getColumnsWidth();\r\n            var rowHeights = rowsArea.getRowsHeight();\r\n            var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\r\n            var dataAreaHeights = dataArea.getRowsHeight();\r\n            var descriptionCellHeight = getSize(descriptionCell[0], \"height\", {\r\n                paddings: true,\r\n                borders: true,\r\n                margins: true\r\n            }) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\r\n            var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\r\n            var resultHeights = mergeArraysByMaxValue(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\r\n            var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\r\n            var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\r\n            var rowsAreaColumnWidths = rowsArea.getColumnsWidth();\r\n            var filterAreaHeight = 0;\r\n            var dataAreaHeight = 0;\r\n            if (that._hasHeight) {\r\n                filterAreaHeight = filterHeaderCell.height();\r\n                var $dataHeader = tableElement.find(\".dx-data-header\");\r\n                var dataHeaderHeight = coreBrowserUtils.msie ? getSize($dataHeader.get(0), \"height\", {\r\n                    paddings: false,\r\n                    borders: false,\r\n                    margins: false\r\n                }) : $dataHeader.height();\r\n                bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\r\n                dataAreaHeight = that.$element().height() - filterAreaHeight - dataHeaderHeight - (Math.max(dataArea.headElement().height(), columnAreaCell.height(), descriptionCellHeight) + bordersWidth)\r\n            }\r\n            totalWidth = dataArea.tableElement().width();\r\n            totalHeight = getArraySum(resultHeights);\r\n            if (!totalWidth || !totalHeight) {\r\n                d.resolve();\r\n                return\r\n            }\r\n            rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\r\n            var elementWidth = that.$element().width();\r\n            bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\r\n            groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\r\n            groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\r\n            var diff = totalWidth - groupWidth;\r\n            var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\r\n            if (needAdjustWidthOnZoom) {\r\n                adjustSizeArray(resultWidths, diff);\r\n                totalWidth = groupWidth\r\n            }\r\n            hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\r\n            hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\r\n            var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n            deferRender((function() {\r\n                columnsArea.tableElement().append(dataArea.headElement());\r\n                rowFieldsHeader.tableElement().append(rowsArea.headElement());\r\n                if (!hasColumnsScroll && hasRowsScroll && scrollBarWidth) {\r\n                    adjustSizeArray(resultWidths, scrollBarWidth);\r\n                    totalWidth -= scrollBarWidth\r\n                }\r\n                if (descriptionCellHeight > columnsAreaHeight) {\r\n                    adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\r\n                    columnsArea.setRowsHeight(columnsAreaRowHeights)\r\n                }\r\n                tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n                columnHeaderCell.children().css(\"maxWidth\", groupWidth);\r\n                columnsArea.groupWidth(groupWidth);\r\n                columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\r\n                columnsArea.setColumnsWidth(resultWidths);\r\n                rowsArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\r\n                rowsArea.setColumnsWidth(rowsAreaColumnWidths);\r\n                rowsArea.setRowsHeight(resultHeights);\r\n                dataArea.setColumnsWidth(resultWidths);\r\n                dataArea.setRowsHeight(resultHeights);\r\n                dataArea.groupWidth(groupWidth);\r\n                dataArea.groupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\r\n                dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                if (!that._hasHeight && elementWidth !== that.$element().width()) {\r\n                    var _diff = elementWidth - that.$element().width();\r\n                    if (!hasColumnsScroll) {\r\n                        adjustSizeArray(resultWidths, _diff);\r\n                        columnsArea.setColumnsWidth(resultWidths);\r\n                        dataArea.setColumnsWidth(resultWidths)\r\n                    }\r\n                    dataArea.groupWidth(groupWidth - _diff);\r\n                    columnsArea.groupWidth(groupWidth - _diff)\r\n                }\r\n                if (that._hasHeight && that._filterFields.isVisible() && filterHeaderCell.height() !== filterAreaHeight) {\r\n                    var _diff2 = filterHeaderCell.height() - filterAreaHeight;\r\n                    if (_diff2 > 0) {\r\n                        hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\r\n                        var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n                        dataArea.groupHeight(_groupHeight);\r\n                        rowsArea.groupHeight(_groupHeight)\r\n                    }\r\n                }\r\n                if (\"virtual\" === scrollingOptions.mode) {\r\n                    var virtualContentParams = that._dataController.calculateVirtualContentParams({\r\n                        virtualRowHeight: scrollingOptions.virtualRowHeight,\r\n                        virtualColumnWidth: scrollingOptions.virtualColumnWidth,\r\n                        itemWidths: resultWidths,\r\n                        itemHeights: resultHeights,\r\n                        rowCount: resultHeights.length,\r\n                        columnCount: resultWidths.length,\r\n                        viewportWidth: groupWidth,\r\n                        viewportHeight: that._hasHeight ? groupHeight : $(window).outerHeight()\r\n                    });\r\n                    dataArea.setVirtualContentParams({\r\n                        top: virtualContentParams.contentTop,\r\n                        left: virtualContentParams.contentLeft,\r\n                        width: virtualContentParams.width,\r\n                        height: virtualContentParams.height\r\n                    });\r\n                    rowsArea.setVirtualContentParams({\r\n                        top: virtualContentParams.contentTop,\r\n                        width: rowsAreaWidth,\r\n                        height: virtualContentParams.height\r\n                    });\r\n                    columnsArea.setVirtualContentParams({\r\n                        left: virtualContentParams.contentLeft,\r\n                        width: virtualContentParams.width,\r\n                        height: columnsArea.groupElement().height()\r\n                    })\r\n                }\r\n                var updateScrollableResults = [];\r\n                dataArea.processScroll(scrollBarInfo.scrollBarUseNative, hasColumnsScroll, hasRowsScroll);\r\n                each([columnsArea, rowsArea, dataArea], (function(_, area) {\r\n                    updateScrollableResults.push(area && area.updateScrollable())\r\n                }));\r\n                that._updateLoading();\r\n                that._renderNoDataText(dataAreaCell);\r\n                when.apply($, updateScrollableResults).done((function() {\r\n                    that._updateScrollPosition(columnsArea, rowsArea, dataArea);\r\n                    that._subscribeToEvents(columnsArea, rowsArea, dataArea);\r\n                    d.resolve()\r\n                }))\r\n            }))\r\n        }));\r\n        return d\r\n    },\r\n    applyPartialDataSource: function(area, path, dataSource) {\r\n        this._dataController.applyPartialDataSource(area, path, dataSource)\r\n    }\r\n}).inherit(ExportMixin).include(chartIntegrationMixin);\r\nregisterComponent(\"dxPivotGrid\", PivotGrid);\r\nexport default PivotGrid;\r\n"]},"metadata":{},"sourceType":"module"}