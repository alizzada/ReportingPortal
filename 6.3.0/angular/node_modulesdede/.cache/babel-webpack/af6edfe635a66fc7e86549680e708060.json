{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tooltip.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { expand } from \"../core/helpers\";\nimport TreeMapBase from \"./tree_map.base\";\nvar proto = TreeMapBase.prototype;\nimport \"./api\";\nexpand(proto, \"_extendProxyType\", function (proto) {\n  var that = this;\n\n  proto.showTooltip = function (coords) {\n    that._showTooltip(this._id, coords);\n  };\n});\nexpand(proto, \"_onNodesCreated\", function () {\n  if (this._tooltipIndex >= 0) {\n    this._tooltip.hide();\n  }\n\n  this._tooltipIndex = -1;\n});\nexpand(proto, \"_onTilingPerformed\", function () {\n  if (this._tooltipIndex >= 0) {\n    this._moveTooltip(this._nodes[this._tooltipIndex]);\n  }\n});\n\nfunction getCoords(coords, rect, renderer) {\n  var offset = renderer.getRootOffset();\n  return coords || rect && [(rect[0] + rect[2]) / 2 + offset.left, (rect[1] + rect[3]) / 2 + offset.top] || [-1e3, -1e3];\n}\n\nproto._showTooltip = function (index, coords) {\n  var that = this;\n  var tooltip = that._tooltip;\n  var node = that._nodes[index];\n\n  if (that._tooltipIndex === index) {\n    that._moveTooltip(node, coords);\n\n    return;\n  }\n\n  var callback = function callback(result) {\n    if (void 0 === result) {\n      return;\n    }\n\n    if (!result) {\n      tooltip.hide();\n    }\n\n    that._tooltipIndex = result ? index : -1;\n  };\n\n  var xy = getCoords(coords, node.rect, this._renderer);\n  callback(tooltip.show({\n    value: node.value,\n    valueText: tooltip.formatValue(node.value),\n    node: node.proxy\n  }, {\n    x: xy[0],\n    y: xy[1],\n    offset: 0\n  }, {\n    node: node.proxy\n  }, void 0, callback));\n};\n\nproto._moveTooltip = function (node, coords) {\n  var xy = getCoords(coords, node.rect, this._renderer);\n\n  this._tooltip.move(xy[0], xy[1], 0);\n};\n\nproto.hideTooltip = function () {\n  if (this._tooltipIndex >= 0) {\n    this._tooltipIndex = -1;\n\n    this._tooltip.hide();\n  }\n};\n\nimport { plugin as tooltipPlugin } from \"../core/tooltip\";\nTreeMapBase.addPlugin(tooltipPlugin);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/viz/tree_map/tooltip.js"],"names":["expand","TreeMapBase","proto","prototype","that","showTooltip","coords","_showTooltip","_id","_tooltipIndex","_tooltip","hide","_moveTooltip","_nodes","getCoords","rect","renderer","offset","getRootOffset","left","top","index","tooltip","node","callback","result","xy","_renderer","show","value","valueText","formatValue","proxy","x","y","move","hideTooltip","plugin","tooltipPlugin","addPlugin"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/tooltip.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    expand\r\n} from \"../core/helpers\";\r\nimport TreeMapBase from \"./tree_map.base\";\r\nvar proto = TreeMapBase.prototype;\r\nimport \"./api\";\r\nexpand(proto, \"_extendProxyType\", (function(proto) {\r\n    var that = this;\r\n    proto.showTooltip = function(coords) {\r\n        that._showTooltip(this._id, coords)\r\n    }\r\n}));\r\nexpand(proto, \"_onNodesCreated\", (function() {\r\n    if (this._tooltipIndex >= 0) {\r\n        this._tooltip.hide()\r\n    }\r\n    this._tooltipIndex = -1\r\n}));\r\nexpand(proto, \"_onTilingPerformed\", (function() {\r\n    if (this._tooltipIndex >= 0) {\r\n        this._moveTooltip(this._nodes[this._tooltipIndex])\r\n    }\r\n}));\r\n\r\nfunction getCoords(coords, rect, renderer) {\r\n    var offset = renderer.getRootOffset();\r\n    return coords || rect && [(rect[0] + rect[2]) / 2 + offset.left, (rect[1] + rect[3]) / 2 + offset.top] || [-1e3, -1e3]\r\n}\r\nproto._showTooltip = function(index, coords) {\r\n    var that = this;\r\n    var tooltip = that._tooltip;\r\n    var node = that._nodes[index];\r\n    if (that._tooltipIndex === index) {\r\n        that._moveTooltip(node, coords);\r\n        return\r\n    }\r\n    var callback = result => {\r\n        if (void 0 === result) {\r\n            return\r\n        }\r\n        if (!result) {\r\n            tooltip.hide()\r\n        }\r\n        that._tooltipIndex = result ? index : -1\r\n    };\r\n    var xy = getCoords(coords, node.rect, this._renderer);\r\n    callback(tooltip.show({\r\n        value: node.value,\r\n        valueText: tooltip.formatValue(node.value),\r\n        node: node.proxy\r\n    }, {\r\n        x: xy[0],\r\n        y: xy[1],\r\n        offset: 0\r\n    }, {\r\n        node: node.proxy\r\n    }, void 0, callback))\r\n};\r\nproto._moveTooltip = function(node, coords) {\r\n    var xy = getCoords(coords, node.rect, this._renderer);\r\n    this._tooltip.move(xy[0], xy[1], 0)\r\n};\r\nproto.hideTooltip = function() {\r\n    if (this._tooltipIndex >= 0) {\r\n        this._tooltipIndex = -1;\r\n        this._tooltip.hide()\r\n    }\r\n};\r\nimport {\r\n    plugin as tooltipPlugin\r\n} from \"../core/tooltip\";\r\nTreeMapBase.addPlugin(tooltipPlugin);\r\n"]},"metadata":{},"sourceType":"module"}