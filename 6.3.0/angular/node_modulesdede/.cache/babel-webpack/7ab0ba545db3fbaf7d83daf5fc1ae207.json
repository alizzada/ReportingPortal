{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Guid from \"../../core/guid\";\nimport { each as _each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isString } from \"../../core/utils/type\";\n\nvar FormItemsRunTimeInfo = /*#__PURE__*/function () {\n  function FormItemsRunTimeInfo() {\n    _classCallCheck(this, FormItemsRunTimeInfo);\n\n    this._map = {};\n  }\n\n  _createClass(FormItemsRunTimeInfo, [{\n    key: \"_findWidgetInstance\",\n    value: function _findWidgetInstance(condition) {\n      var result;\n\n      _each(this._map, function (guid, _ref) {\n        var widgetInstance = _ref.widgetInstance,\n            item = _ref.item;\n\n        if (condition(item)) {\n          result = widgetInstance;\n          return false;\n        }\n      });\n\n      return result;\n    }\n  }, {\n    key: \"_findFieldByCondition\",\n    value: function _findFieldByCondition(callback, valueExpr) {\n      var result;\n\n      _each(this._map, function (key, value) {\n        if (callback(value)) {\n          result = \"guid\" === valueExpr ? key : value[valueExpr];\n          return false;\n        }\n      });\n\n      return result;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = {};\n    }\n  }, {\n    key: \"removeItemsByItems\",\n    value: function removeItemsByItems(itemsRunTimeInfo) {\n      var _this = this;\n\n      _each(itemsRunTimeInfo.getItems(), function (guid) {\n        return _this.removeItemByKey(guid);\n      });\n    }\n  }, {\n    key: \"removeItemByKey\",\n    value: function removeItemByKey(key) {\n      delete this._map[key];\n    }\n  }, {\n    key: \"add\",\n    value: function add(options) {\n      var key = options.guid || new Guid();\n      this._map[key] = options;\n      return key;\n    }\n  }, {\n    key: \"addItemsOrExtendFrom\",\n    value: function addItemsOrExtendFrom(itemsRunTimeInfo) {\n      var _this2 = this;\n\n      itemsRunTimeInfo.each(function (key, itemRunTimeInfo) {\n        if (_this2._map[key]) {\n          if (itemRunTimeInfo.widgetInstance) {\n            _this2._map[key].widgetInstance = itemRunTimeInfo.widgetInstance;\n          }\n\n          _this2._map[key].$itemContainer = itemRunTimeInfo.$itemContainer;\n        } else {\n          _this2.add({\n            item: itemRunTimeInfo.item,\n            widgetInstance: itemRunTimeInfo.widgetInstance,\n            guid: key,\n            $itemContainer: itemRunTimeInfo.$itemContainer\n          });\n        }\n      });\n    }\n  }, {\n    key: \"extendRunTimeItemInfoByKey\",\n    value: function extendRunTimeItemInfoByKey(key, options) {\n      if (this._map[key]) {\n        this._map[key] = extend(this._map[key], options);\n      }\n    }\n  }, {\n    key: \"findWidgetInstanceByItem\",\n    value: function findWidgetInstanceByItem(item) {\n      return this._findWidgetInstance(function (storedItem) {\n        return storedItem === item;\n      });\n    }\n  }, {\n    key: \"getGroupOrTabLayoutManagerByPath\",\n    value: function getGroupOrTabLayoutManagerByPath(targetPath) {\n      return this._findFieldByCondition(function (_ref2) {\n        var path = _ref2.path;\n        return path === targetPath;\n      }, \"layoutManager\");\n    }\n  }, {\n    key: \"getKeyByPath\",\n    value: function getKeyByPath(targetPath) {\n      return this._findFieldByCondition(function (_ref3) {\n        var path = _ref3.path;\n        return path === targetPath;\n      }, \"guid\");\n    }\n  }, {\n    key: \"findWidgetInstanceByName\",\n    value: function findWidgetInstanceByName(name) {\n      return this._findWidgetInstance(function (item) {\n        return name === item.name;\n      });\n    }\n  }, {\n    key: \"findWidgetInstanceByDataField\",\n    value: function findWidgetInstanceByDataField(dataField) {\n      return this._findWidgetInstance(function (item) {\n        return dataField === (isString(item) ? item : item.dataField);\n      });\n    }\n  }, {\n    key: \"findItemContainerByItem\",\n    value: function findItemContainerByItem(item) {\n      for (var key in this._map) {\n        if (this._map[key].item === item) {\n          return this._map[key].$itemContainer;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findItemIndexByItem\",\n    value: function findItemIndexByItem(targetItem) {\n      return this._findFieldByCondition(function (_ref4) {\n        var item = _ref4.item;\n        return item === targetItem;\n      }, \"itemIndex\");\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this._map;\n    }\n  }, {\n    key: \"each\",\n    value: function each(handler) {\n      _each(this._map, function (key, itemRunTimeInfo) {\n        handler(key, itemRunTimeInfo);\n      });\n    }\n  }, {\n    key: \"removeItemsByPathStartWith\",\n    value: function removeItemsByPathStartWith(path) {\n      var _this3 = this;\n\n      var keys = Object.keys(this._map);\n      var filteredKeys = keys.filter(function (key) {\n        return _this3._map[key].path.indexOf(path, 0) > -1;\n      });\n      filteredKeys.forEach(function (key) {\n        return _this3.removeItemByKey(key);\n      });\n    }\n  }]);\n\n  return FormItemsRunTimeInfo;\n}();\n\nexport { FormItemsRunTimeInfo as default };","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/form/ui.form.items_runtime_info.js"],"names":["Guid","each","extend","isString","FormItemsRunTimeInfo","_map","condition","result","guid","_ref","widgetInstance","item","callback","valueExpr","key","value","itemsRunTimeInfo","getItems","removeItemByKey","options","itemRunTimeInfo","$itemContainer","add","_findWidgetInstance","storedItem","targetPath","_findFieldByCondition","_ref2","path","_ref3","name","dataField","targetItem","_ref4","handler","keys","Object","filteredKeys","filter","indexOf","forEach"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isString\r\n} from \"../../core/utils/type\";\r\nexport default class FormItemsRunTimeInfo {\r\n    constructor() {\r\n        this._map = {}\r\n    }\r\n    _findWidgetInstance(condition) {\r\n        var result;\r\n        each(this._map, (function(guid, _ref) {\r\n            var {\r\n                widgetInstance: widgetInstance,\r\n                item: item\r\n            } = _ref;\r\n            if (condition(item)) {\r\n                result = widgetInstance;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _findFieldByCondition(callback, valueExpr) {\r\n        var result;\r\n        each(this._map, (function(key, value) {\r\n            if (callback(value)) {\r\n                result = \"guid\" === valueExpr ? key : value[valueExpr];\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    clear() {\r\n        this._map = {}\r\n    }\r\n    removeItemsByItems(itemsRunTimeInfo) {\r\n        each(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid))\r\n    }\r\n    removeItemByKey(key) {\r\n        delete this._map[key]\r\n    }\r\n    add(options) {\r\n        var key = options.guid || new Guid;\r\n        this._map[key] = options;\r\n        return key\r\n    }\r\n    addItemsOrExtendFrom(itemsRunTimeInfo) {\r\n        itemsRunTimeInfo.each((key, itemRunTimeInfo) => {\r\n            if (this._map[key]) {\r\n                if (itemRunTimeInfo.widgetInstance) {\r\n                    this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance\r\n                }\r\n                this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer\r\n            } else {\r\n                this.add({\r\n                    item: itemRunTimeInfo.item,\r\n                    widgetInstance: itemRunTimeInfo.widgetInstance,\r\n                    guid: key,\r\n                    $itemContainer: itemRunTimeInfo.$itemContainer\r\n                })\r\n            }\r\n        })\r\n    }\r\n    extendRunTimeItemInfoByKey(key, options) {\r\n        if (this._map[key]) {\r\n            this._map[key] = extend(this._map[key], options)\r\n        }\r\n    }\r\n    findWidgetInstanceByItem(item) {\r\n        return this._findWidgetInstance(storedItem => storedItem === item)\r\n    }\r\n    getGroupOrTabLayoutManagerByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref2 => {\r\n            var {\r\n                path: path\r\n            } = _ref2;\r\n            return path === targetPath\r\n        }, \"layoutManager\")\r\n    }\r\n    getKeyByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref3 => {\r\n            var {\r\n                path: path\r\n            } = _ref3;\r\n            return path === targetPath\r\n        }, \"guid\")\r\n    }\r\n    findWidgetInstanceByName(name) {\r\n        return this._findWidgetInstance(item => name === item.name)\r\n    }\r\n    findWidgetInstanceByDataField(dataField) {\r\n        return this._findWidgetInstance(item => dataField === (isString(item) ? item : item.dataField))\r\n    }\r\n    findItemContainerByItem(item) {\r\n        for (var key in this._map) {\r\n            if (this._map[key].item === item) {\r\n                return this._map[key].$itemContainer\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    findItemIndexByItem(targetItem) {\r\n        return this._findFieldByCondition(_ref4 => {\r\n            var {\r\n                item: item\r\n            } = _ref4;\r\n            return item === targetItem\r\n        }, \"itemIndex\")\r\n    }\r\n    getItems() {\r\n        return this._map\r\n    }\r\n    each(handler) {\r\n        each(this._map, (function(key, itemRunTimeInfo) {\r\n            handler(key, itemRunTimeInfo)\r\n        }))\r\n    }\r\n    removeItemsByPathStartWith(path) {\r\n        var keys = Object.keys(this._map);\r\n        var filteredKeys = keys.filter(key => this._map[key].path.indexOf(path, 0) > -1);\r\n        filteredKeys.forEach(key => this.removeItemByKey(key))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}