{"ast":null,"code":"import _classCallCheck from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.view.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport { getGanttViewCore } from \"./gantt_importer\";\nimport { TaskAreaContainer } from \"./ui.gantt.task.area.container\";\nimport dateLocalization from \"../../localization/date\";\nimport { isDefined } from \"../../core/utils/type\";\nimport messageLocalization from \"../../localization/message\";\nimport { format } from \"../../core/utils/string\";\nexport var GanttView = /*#__PURE__*/function (_Widget) {\n  _inherits(GanttView, _Widget);\n\n  var _super = _createSuper(GanttView);\n\n  function GanttView() {\n    _classCallCheck(this, GanttView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GanttView, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(GanttView.prototype), \"_init\", this).call(this);\n\n      this._onSelectionChanged = this._createActionByOption(\"onSelectionChanged\");\n      this._onScroll = this._createActionByOption(\"onScroll\");\n      this._onDialogShowing = this._createActionByOption(\"onDialogShowing\");\n      this._onPopupMenuShowing = this._createActionByOption(\"onPopupMenuShowing\");\n      this._expandAll = this._createActionByOption(\"onExpandAll\");\n      this._collapseAll = this._createActionByOption(\"onCollapseAll\");\n      this._taskClick = this._createActionByOption(\"onTaskClick\");\n      this._taskDblClick = this._createActionByOption(\"onTaskDblClick\");\n      this._onAdjustControl = this._createActionByOption(\"onAdjustControl\");\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var _GanttView = getGanttViewCore();\n\n      this._ganttViewCore = new _GanttView(this.$element().get(0), this, {\n        showResources: this.option(\"showResources\"),\n        taskTitlePosition: this._getTaskTitlePosition(this.option(\"taskTitlePosition\")),\n        firstDayOfWeek: this._getFirstDayOfWeek(this.option(\"firstDayOfWeek\")),\n        allowSelectTask: this.option(\"allowSelection\"),\n        editing: this._parseEditingSettings(this.option(\"editing\")),\n        validation: this.option(\"validation\"),\n        stripLines: {\n          stripLines: this.option(\"stripLines\")\n        },\n        areHorizontalBordersEnabled: this.option(\"showRowLines\"),\n        areAlternateRowsEnabled: false,\n        viewType: this._getViewTypeByScaleType(this.option(\"scaleType\")),\n        cultureInfo: this._getCultureInfo(),\n        taskTooltipContentTemplate: this.option(\"taskTooltipContentTemplate\"),\n        taskProgressTooltipContentTemplate: this.option(\"taskProgressTooltipContentTemplate\"),\n        taskTimeTooltipContentTemplate: this.option(\"taskTimeTooltipContentTemplate\"),\n        taskContentTemplate: this.option(\"taskContentTemplate\")\n      });\n\n      this._selectTask(this.option(\"selectedRowKey\"));\n\n      this.updateBarItemsState();\n    }\n  }, {\n    key: \"_getFirstDayOfWeek\",\n    value: function _getFirstDayOfWeek(value) {\n      return isDefined(value) ? value : dateLocalization.firstDayOfWeekIndex();\n    }\n  }, {\n    key: \"getTaskAreaContainer\",\n    value: function getTaskAreaContainer() {\n      return this._ganttViewCore.taskAreaContainer;\n    }\n  }, {\n    key: \"getBarManager\",\n    value: function getBarManager() {\n      return this._ganttViewCore.barManager;\n    }\n  }, {\n    key: \"executeCoreCommand\",\n    value: function executeCoreCommand(id) {\n      var command = this._ganttViewCore.getCommandByKey(id);\n\n      if (command) {\n        command.execute();\n      }\n    }\n  }, {\n    key: \"changeTaskExpanded\",\n    value: function changeTaskExpanded(id, value) {\n      this._ganttViewCore.changeTaskExpanded(id, value);\n    }\n  }, {\n    key: \"updateView\",\n    value: function updateView() {\n      this._ganttViewCore.updateView();\n    }\n  }, {\n    key: \"updateBarItemsState\",\n    value: function updateBarItemsState() {\n      this._ganttViewCore.barManager.updateItemsState([]);\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(value) {\n      this._ganttViewCore.setWidth(value);\n    }\n  }, {\n    key: \"_selectTask\",\n    value: function _selectTask(id) {\n      this._ganttViewCore.selectTaskById(id);\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      this._ganttViewCore.loadOptionsFromGanttOwner();\n\n      this._ganttViewCore.resetAndUpdate();\n    }\n  }, {\n    key: \"_getCultureInfo\",\n    value: function _getCultureInfo() {\n      return {\n        monthNames: dateLocalization.getMonthNames(\"wide\"),\n        dayNames: dateLocalization.getDayNames(\"wide\"),\n        abbrMonthNames: dateLocalization.getMonthNames(\"abbreviated\"),\n        abbrDayNames: dateLocalization.getDayNames(\"abbreviated\"),\n        quarterNames: this._getQuarterNames(),\n        amText: dateLocalization.getPeriodNames()[0],\n        pmText: dateLocalization.getPeriodNames()[1]\n      };\n    }\n  }, {\n    key: \"_getQuarterNames\",\n    value: function _getQuarterNames() {\n      var quarterFormat = messageLocalization.format(\"dxGantt-quarter\");\n\n      if (!quarterFormat) {\n        return dateLocalization.getQuarterNames();\n      }\n\n      return [format(quarterFormat, 1), format(quarterFormat, 2), format(quarterFormat, 3), format(quarterFormat, 4)];\n    }\n  }, {\n    key: \"_getTaskTitlePosition\",\n    value: function _getTaskTitlePosition(value) {\n      switch (value) {\n        case \"outside\":\n          return 1;\n\n        case \"none\":\n          return 2;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"_getViewTypeByScaleType\",\n    value: function _getViewTypeByScaleType(scaleType) {\n      switch (scaleType) {\n        case \"minutes\":\n          return 0;\n\n        case \"hours\":\n          return 1;\n\n        case \"days\":\n          return 3;\n\n        case \"weeks\":\n          return 4;\n\n        case \"months\":\n          return 5;\n\n        case \"quarters\":\n          return 6;\n\n        case \"years\":\n          return 7;\n\n        default:\n          return;\n      }\n    }\n  }, {\n    key: \"_parseEditingSettings\",\n    value: function _parseEditingSettings(value) {\n      return {\n        enabled: value.enabled,\n        allowDependencyDelete: value.allowDependencyDeleting,\n        allowDependencyInsert: value.allowDependencyAdding,\n        allowTaskDelete: value.allowTaskDeleting,\n        allowTaskInsert: value.allowTaskAdding,\n        allowTaskUpdate: value.allowTaskUpdating,\n        allowResourceDelete: value.allowResourceDeleting,\n        allowResourceInsert: value.allowResourceAdding,\n        allowResourceUpdate: value.allowResourceUpdating,\n        allowTaskResourceUpdate: value.allowTaskResourceUpdating\n      };\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"width\":\n          _get(_getPrototypeOf(GanttView.prototype), \"_optionChanged\", this).call(this, args);\n\n          this._ganttViewCore.setWidth(args.value);\n\n          break;\n\n        case \"height\":\n          this._ganttViewCore.setHeight(args.value);\n\n          break;\n\n        case \"tasks\":\n        case \"dependencies\":\n        case \"resources\":\n        case \"resourceAssignments\":\n          this._update();\n\n          break;\n\n        case \"showResources\":\n          this._ganttViewCore.setShowResources(args.value);\n\n          break;\n\n        case \"taskTitlePosition\":\n          this._ganttViewCore.setTaskTitlePosition(this._getTaskTitlePosition(args.value));\n\n          break;\n\n        case \"firstDayOfWeek\":\n          this._ganttViewCore.setFirstDayOfWeek(this._getFirstDayOfWeek(args.value));\n\n          break;\n\n        case \"allowSelection\":\n          this._ganttViewCore.setAllowSelection(args.value);\n\n          break;\n\n        case \"selectedRowKey\":\n          this._selectTask(args.value);\n\n          break;\n\n        case \"editing\":\n          this._ganttViewCore.setEditingSettings(this._parseEditingSettings(args.value));\n\n          break;\n\n        case \"validation\":\n          this._ganttViewCore.setValidationSettings(args.value);\n\n          this._update();\n\n          break;\n\n        case \"showRowLines\":\n          this._ganttViewCore.setRowLinesVisible(args.value);\n\n          break;\n\n        case \"scaleType\":\n          this._ganttViewCore.setViewType(this._getViewTypeByScaleType(args.value));\n\n          break;\n\n        case \"stripLines\":\n          this._ganttViewCore.setStripLines({\n            stripLines: args.value\n          });\n\n          break;\n\n        case \"taskTooltipContentTemplate\":\n          this._ganttViewCore.setTaskTooltipContentTemplate(args.value);\n\n          break;\n\n        case \"taskProgressTooltipContentTemplate\":\n          this._ganttViewCore.setTaskProgressTooltipContentTemplate(args.value);\n\n          break;\n\n        case \"taskTimeTooltipContentTemplate\":\n          this._ganttViewCore.setTaskTimeTooltipContentTemplate(args.value);\n\n          break;\n\n        case \"taskContentTemplate\":\n          this._ganttViewCore.setTaskContentTemplate(args.value);\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(GanttView.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"bars\",\n    get: function get() {\n      return this.option(\"bars\");\n    }\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight() {\n      return this.option(\"rowHeight\");\n    }\n  }, {\n    key: \"getHeaderHeight\",\n    value: function getHeaderHeight() {\n      return this.option(\"headerHeight\");\n    }\n  }, {\n    key: \"getGanttTasksData\",\n    value: function getGanttTasksData() {\n      return this.option(\"tasks\");\n    }\n  }, {\n    key: \"getGanttDependenciesData\",\n    value: function getGanttDependenciesData() {\n      return this.option(\"dependencies\");\n    }\n  }, {\n    key: \"getGanttResourcesData\",\n    value: function getGanttResourcesData() {\n      return this.option(\"resources\");\n    }\n  }, {\n    key: \"getGanttResourceAssignmentsData\",\n    value: function getGanttResourceAssignmentsData() {\n      return this.option(\"resourceAssignments\");\n    }\n  }, {\n    key: \"getGanttWorkTimeRules\",\n    value: function getGanttWorkTimeRules() {\n      return {};\n    }\n  }, {\n    key: \"getExternalTaskAreaContainer\",\n    value: function getExternalTaskAreaContainer(element) {\n      if (!this._taskAreaContainer) {\n        this._taskAreaContainer = new TaskAreaContainer(element, this);\n      }\n\n      return this._taskAreaContainer;\n    }\n  }, {\n    key: \"changeGanttTaskSelection\",\n    value: function changeGanttTaskSelection(id, selected) {\n      this._onSelectionChanged({\n        id: id,\n        selected: selected\n      });\n    }\n  }, {\n    key: \"onGanttScroll\",\n    value: function onGanttScroll(scrollTop) {\n      this._onScroll({\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"showDialog\",\n    value: function showDialog(name, parameters, callback, afterClosing) {\n      this._onDialogShowing({\n        name: name,\n        parameters: parameters,\n        callback: callback,\n        afterClosing: afterClosing\n      });\n    }\n  }, {\n    key: \"getModelChangesListener\",\n    value: function getModelChangesListener() {\n      return this.option(\"modelChangesListener\");\n    }\n  }, {\n    key: \"getExportInfo\",\n    value: function getExportInfo() {\n      return this.option(\"exportInfo\");\n    }\n  }, {\n    key: \"showPopupMenu\",\n    value: function showPopupMenu(info) {\n      this._onPopupMenuShowing(info);\n    }\n  }, {\n    key: \"getMainElement\",\n    value: function getMainElement() {\n      return this.option(\"mainElement\").get(0);\n    }\n  }, {\n    key: \"adjustControl\",\n    value: function adjustControl() {\n      this._onAdjustControl();\n    }\n  }, {\n    key: \"getRequireFirstLoadParentAutoCalc\",\n    value: function getRequireFirstLoadParentAutoCalc() {\n      return this.option(\"validation.autoUpdateParentTasks\");\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      this._collapseAll();\n    }\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      this._expandAll();\n    }\n  }, {\n    key: \"onTaskClick\",\n    value: function onTaskClick(key, event) {\n      this._taskClick({\n        key: key,\n        event: event\n      });\n\n      return true;\n    }\n  }, {\n    key: \"onTaskDblClick\",\n    value: function onTaskDblClick(key, event) {\n      return this._taskDblClick({\n        key: key,\n        event: event\n      });\n    }\n  }, {\n    key: \"onGanttViewContextMenu\",\n    value: function onGanttViewContextMenu(event, key, type) {\n      return true;\n    }\n  }, {\n    key: \"getFormattedDateText\",\n    value: function getFormattedDateText(date) {\n      var result = \"\";\n\n      if (date) {\n        var datePart = dateLocalization.format(date, \"shortDate\");\n        var timePart = dateLocalization.format(date, \"hh:mm\");\n        result = datePart + \" \" + timePart;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"destroyTemplate\",\n    value: function destroyTemplate(container) {\n      $(container).empty();\n    }\n  }, {\n    key: \"getTreeListTableStyle\",\n    value: function getTreeListTableStyle() {\n      return this.callExportHelperMethod(\"getTreeListTableStyle\");\n    }\n  }, {\n    key: \"getTreeListColCount\",\n    value: function getTreeListColCount() {\n      return this.callExportHelperMethod(\"getTreeListColCount\");\n    }\n  }, {\n    key: \"getTreeListHeaderInfo\",\n    value: function getTreeListHeaderInfo(colIndex) {\n      return this.callExportHelperMethod(\"getTreeListHeaderInfo\", colIndex);\n    }\n  }, {\n    key: \"getTreeListCellInfo\",\n    value: function getTreeListCellInfo(rowIndex, colIndex) {\n      return this.callExportHelperMethod(\"getTreeListCellInfo\", rowIndex, colIndex);\n    }\n  }, {\n    key: \"callExportHelperMethod\",\n    value: function callExportHelperMethod(methodName) {\n      var helper = this.option(\"exportHelper\");\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return helper[methodName].apply(helper, args);\n    }\n  }]);\n\n  return GanttView;\n}(Widget);","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/gantt/ui.gantt.view.js"],"names":["$","Widget","getGanttViewCore","TaskAreaContainer","dateLocalization","isDefined","messageLocalization","format","GanttView","_onSelectionChanged","_createActionByOption","_onScroll","_onDialogShowing","_onPopupMenuShowing","_expandAll","_collapseAll","_taskClick","_taskDblClick","_onAdjustControl","_ganttViewCore","$element","get","showResources","option","taskTitlePosition","_getTaskTitlePosition","firstDayOfWeek","_getFirstDayOfWeek","allowSelectTask","editing","_parseEditingSettings","validation","stripLines","areHorizontalBordersEnabled","areAlternateRowsEnabled","viewType","_getViewTypeByScaleType","cultureInfo","_getCultureInfo","taskTooltipContentTemplate","taskProgressTooltipContentTemplate","taskTimeTooltipContentTemplate","taskContentTemplate","_selectTask","updateBarItemsState","value","firstDayOfWeekIndex","taskAreaContainer","barManager","id","command","getCommandByKey","execute","changeTaskExpanded","updateView","updateItemsState","setWidth","selectTaskById","loadOptionsFromGanttOwner","resetAndUpdate","monthNames","getMonthNames","dayNames","getDayNames","abbrMonthNames","abbrDayNames","quarterNames","_getQuarterNames","amText","getPeriodNames","pmText","quarterFormat","getQuarterNames","scaleType","enabled","allowDependencyDelete","allowDependencyDeleting","allowDependencyInsert","allowDependencyAdding","allowTaskDelete","allowTaskDeleting","allowTaskInsert","allowTaskAdding","allowTaskUpdate","allowTaskUpdating","allowResourceDelete","allowResourceDeleting","allowResourceInsert","allowResourceAdding","allowResourceUpdate","allowResourceUpdating","allowTaskResourceUpdate","allowTaskResourceUpdating","args","name","setHeight","_update","setShowResources","setTaskTitlePosition","setFirstDayOfWeek","setAllowSelection","setEditingSettings","setValidationSettings","setRowLinesVisible","setViewType","setStripLines","setTaskTooltipContentTemplate","setTaskProgressTooltipContentTemplate","setTaskTimeTooltipContentTemplate","setTaskContentTemplate","element","_taskAreaContainer","selected","scrollTop","parameters","callback","afterClosing","info","key","event","type","date","result","datePart","timePart","container","empty","callExportHelperMethod","colIndex","rowIndex","methodName","helper","_len","arguments","length","Array","_key"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.view.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    getGanttViewCore\r\n} from \"./gantt_importer\";\r\nimport {\r\n    TaskAreaContainer\r\n} from \"./ui.gantt.task.area.container\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nexport class GanttView extends Widget {\r\n    _init() {\r\n        super._init();\r\n        this._onSelectionChanged = this._createActionByOption(\"onSelectionChanged\");\r\n        this._onScroll = this._createActionByOption(\"onScroll\");\r\n        this._onDialogShowing = this._createActionByOption(\"onDialogShowing\");\r\n        this._onPopupMenuShowing = this._createActionByOption(\"onPopupMenuShowing\");\r\n        this._expandAll = this._createActionByOption(\"onExpandAll\");\r\n        this._collapseAll = this._createActionByOption(\"onCollapseAll\");\r\n        this._taskClick = this._createActionByOption(\"onTaskClick\");\r\n        this._taskDblClick = this._createActionByOption(\"onTaskDblClick\");\r\n        this._onAdjustControl = this._createActionByOption(\"onAdjustControl\")\r\n    }\r\n    _initMarkup() {\r\n        var GanttView = getGanttViewCore();\r\n        this._ganttViewCore = new GanttView(this.$element().get(0), this, {\r\n            showResources: this.option(\"showResources\"),\r\n            taskTitlePosition: this._getTaskTitlePosition(this.option(\"taskTitlePosition\")),\r\n            firstDayOfWeek: this._getFirstDayOfWeek(this.option(\"firstDayOfWeek\")),\r\n            allowSelectTask: this.option(\"allowSelection\"),\r\n            editing: this._parseEditingSettings(this.option(\"editing\")),\r\n            validation: this.option(\"validation\"),\r\n            stripLines: {\r\n                stripLines: this.option(\"stripLines\")\r\n            },\r\n            areHorizontalBordersEnabled: this.option(\"showRowLines\"),\r\n            areAlternateRowsEnabled: false,\r\n            viewType: this._getViewTypeByScaleType(this.option(\"scaleType\")),\r\n            cultureInfo: this._getCultureInfo(),\r\n            taskTooltipContentTemplate: this.option(\"taskTooltipContentTemplate\"),\r\n            taskProgressTooltipContentTemplate: this.option(\"taskProgressTooltipContentTemplate\"),\r\n            taskTimeTooltipContentTemplate: this.option(\"taskTimeTooltipContentTemplate\"),\r\n            taskContentTemplate: this.option(\"taskContentTemplate\")\r\n        });\r\n        this._selectTask(this.option(\"selectedRowKey\"));\r\n        this.updateBarItemsState()\r\n    }\r\n    _getFirstDayOfWeek(value) {\r\n        return isDefined(value) ? value : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    getTaskAreaContainer() {\r\n        return this._ganttViewCore.taskAreaContainer\r\n    }\r\n    getBarManager() {\r\n        return this._ganttViewCore.barManager\r\n    }\r\n    executeCoreCommand(id) {\r\n        var command = this._ganttViewCore.getCommandByKey(id);\r\n        if (command) {\r\n            command.execute()\r\n        }\r\n    }\r\n    changeTaskExpanded(id, value) {\r\n        this._ganttViewCore.changeTaskExpanded(id, value)\r\n    }\r\n    updateView() {\r\n        this._ganttViewCore.updateView()\r\n    }\r\n    updateBarItemsState() {\r\n        this._ganttViewCore.barManager.updateItemsState([])\r\n    }\r\n    setWidth(value) {\r\n        this._ganttViewCore.setWidth(value)\r\n    }\r\n    _selectTask(id) {\r\n        this._ganttViewCore.selectTaskById(id)\r\n    }\r\n    _update() {\r\n        this._ganttViewCore.loadOptionsFromGanttOwner();\r\n        this._ganttViewCore.resetAndUpdate()\r\n    }\r\n    _getCultureInfo() {\r\n        return {\r\n            monthNames: dateLocalization.getMonthNames(\"wide\"),\r\n            dayNames: dateLocalization.getDayNames(\"wide\"),\r\n            abbrMonthNames: dateLocalization.getMonthNames(\"abbreviated\"),\r\n            abbrDayNames: dateLocalization.getDayNames(\"abbreviated\"),\r\n            quarterNames: this._getQuarterNames(),\r\n            amText: dateLocalization.getPeriodNames()[0],\r\n            pmText: dateLocalization.getPeriodNames()[1]\r\n        }\r\n    }\r\n    _getQuarterNames() {\r\n        var quarterFormat = messageLocalization.format(\"dxGantt-quarter\");\r\n        if (!quarterFormat) {\r\n            return dateLocalization.getQuarterNames()\r\n        }\r\n        return [format(quarterFormat, 1), format(quarterFormat, 2), format(quarterFormat, 3), format(quarterFormat, 4)]\r\n    }\r\n    _getTaskTitlePosition(value) {\r\n        switch (value) {\r\n            case \"outside\":\r\n                return 1;\r\n            case \"none\":\r\n                return 2;\r\n            default:\r\n                return 0\r\n        }\r\n    }\r\n    _getViewTypeByScaleType(scaleType) {\r\n        switch (scaleType) {\r\n            case \"minutes\":\r\n                return 0;\r\n            case \"hours\":\r\n                return 1;\r\n            case \"days\":\r\n                return 3;\r\n            case \"weeks\":\r\n                return 4;\r\n            case \"months\":\r\n                return 5;\r\n            case \"quarters\":\r\n                return 6;\r\n            case \"years\":\r\n                return 7;\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    _parseEditingSettings(value) {\r\n        return {\r\n            enabled: value.enabled,\r\n            allowDependencyDelete: value.allowDependencyDeleting,\r\n            allowDependencyInsert: value.allowDependencyAdding,\r\n            allowTaskDelete: value.allowTaskDeleting,\r\n            allowTaskInsert: value.allowTaskAdding,\r\n            allowTaskUpdate: value.allowTaskUpdating,\r\n            allowResourceDelete: value.allowResourceDeleting,\r\n            allowResourceInsert: value.allowResourceAdding,\r\n            allowResourceUpdate: value.allowResourceUpdating,\r\n            allowTaskResourceUpdate: value.allowTaskResourceUpdating\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n                super._optionChanged(args);\r\n                this._ganttViewCore.setWidth(args.value);\r\n                break;\r\n            case \"height\":\r\n                this._ganttViewCore.setHeight(args.value);\r\n                break;\r\n            case \"tasks\":\r\n            case \"dependencies\":\r\n            case \"resources\":\r\n            case \"resourceAssignments\":\r\n                this._update();\r\n                break;\r\n            case \"showResources\":\r\n                this._ganttViewCore.setShowResources(args.value);\r\n                break;\r\n            case \"taskTitlePosition\":\r\n                this._ganttViewCore.setTaskTitlePosition(this._getTaskTitlePosition(args.value));\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._ganttViewCore.setFirstDayOfWeek(this._getFirstDayOfWeek(args.value));\r\n                break;\r\n            case \"allowSelection\":\r\n                this._ganttViewCore.setAllowSelection(args.value);\r\n                break;\r\n            case \"selectedRowKey\":\r\n                this._selectTask(args.value);\r\n                break;\r\n            case \"editing\":\r\n                this._ganttViewCore.setEditingSettings(this._parseEditingSettings(args.value));\r\n                break;\r\n            case \"validation\":\r\n                this._ganttViewCore.setValidationSettings(args.value);\r\n                this._update();\r\n                break;\r\n            case \"showRowLines\":\r\n                this._ganttViewCore.setRowLinesVisible(args.value);\r\n                break;\r\n            case \"scaleType\":\r\n                this._ganttViewCore.setViewType(this._getViewTypeByScaleType(args.value));\r\n                break;\r\n            case \"stripLines\":\r\n                this._ganttViewCore.setStripLines({\r\n                    stripLines: args.value\r\n                });\r\n                break;\r\n            case \"taskTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskProgressTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskProgressTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskTimeTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskTimeTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskContentTemplate\":\r\n                this._ganttViewCore.setTaskContentTemplate(args.value);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    get bars() {\r\n        return this.option(\"bars\")\r\n    }\r\n    getRowHeight() {\r\n        return this.option(\"rowHeight\")\r\n    }\r\n    getHeaderHeight() {\r\n        return this.option(\"headerHeight\")\r\n    }\r\n    getGanttTasksData() {\r\n        return this.option(\"tasks\")\r\n    }\r\n    getGanttDependenciesData() {\r\n        return this.option(\"dependencies\")\r\n    }\r\n    getGanttResourcesData() {\r\n        return this.option(\"resources\")\r\n    }\r\n    getGanttResourceAssignmentsData() {\r\n        return this.option(\"resourceAssignments\")\r\n    }\r\n    getGanttWorkTimeRules() {\r\n        return {}\r\n    }\r\n    getExternalTaskAreaContainer(element) {\r\n        if (!this._taskAreaContainer) {\r\n            this._taskAreaContainer = new TaskAreaContainer(element, this)\r\n        }\r\n        return this._taskAreaContainer\r\n    }\r\n    changeGanttTaskSelection(id, selected) {\r\n        this._onSelectionChanged({\r\n            id: id,\r\n            selected: selected\r\n        })\r\n    }\r\n    onGanttScroll(scrollTop) {\r\n        this._onScroll({\r\n            scrollTop: scrollTop\r\n        })\r\n    }\r\n    showDialog(name, parameters, callback, afterClosing) {\r\n        this._onDialogShowing({\r\n            name: name,\r\n            parameters: parameters,\r\n            callback: callback,\r\n            afterClosing: afterClosing\r\n        })\r\n    }\r\n    getModelChangesListener() {\r\n        return this.option(\"modelChangesListener\")\r\n    }\r\n    getExportInfo() {\r\n        return this.option(\"exportInfo\")\r\n    }\r\n    showPopupMenu(info) {\r\n        this._onPopupMenuShowing(info)\r\n    }\r\n    getMainElement() {\r\n        return this.option(\"mainElement\").get(0)\r\n    }\r\n    adjustControl() {\r\n        this._onAdjustControl()\r\n    }\r\n    getRequireFirstLoadParentAutoCalc() {\r\n        return this.option(\"validation.autoUpdateParentTasks\")\r\n    }\r\n    collapseAll() {\r\n        this._collapseAll()\r\n    }\r\n    expandAll() {\r\n        this._expandAll()\r\n    }\r\n    onTaskClick(key, event) {\r\n        this._taskClick({\r\n            key: key,\r\n            event: event\r\n        });\r\n        return true\r\n    }\r\n    onTaskDblClick(key, event) {\r\n        return this._taskDblClick({\r\n            key: key,\r\n            event: event\r\n        })\r\n    }\r\n    onGanttViewContextMenu(event, key, type) {\r\n        return true\r\n    }\r\n    getFormattedDateText(date) {\r\n        var result = \"\";\r\n        if (date) {\r\n            var datePart = dateLocalization.format(date, \"shortDate\");\r\n            var timePart = dateLocalization.format(date, \"hh:mm\");\r\n            result = datePart + \" \" + timePart\r\n        }\r\n        return result\r\n    }\r\n    destroyTemplate(container) {\r\n        $(container).empty()\r\n    }\r\n    getTreeListTableStyle() {\r\n        return this.callExportHelperMethod(\"getTreeListTableStyle\")\r\n    }\r\n    getTreeListColCount() {\r\n        return this.callExportHelperMethod(\"getTreeListColCount\")\r\n    }\r\n    getTreeListHeaderInfo(colIndex) {\r\n        return this.callExportHelperMethod(\"getTreeListHeaderInfo\", colIndex)\r\n    }\r\n    getTreeListCellInfo(rowIndex, colIndex) {\r\n        return this.callExportHelperMethod(\"getTreeListCellInfo\", rowIndex, colIndex)\r\n    }\r\n    callExportHelperMethod(methodName) {\r\n        var helper = this.option(\"exportHelper\");\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n            args[_key - 1] = arguments[_key]\r\n        }\r\n        return helper[methodName](...args)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}