{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.headers_area.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { inArray } from \"../../core/utils/array\";\nimport { each } from \"../../core/utils/iterator\";\nimport { AreaItem } from \"./ui.pivot_grid.area_item\";\nvar PIVOTGRID_AREA_CLASS = \"dx-pivotgrid-area\";\nvar PIVOTGRID_AREA_COLUMN_CLASS = \"dx-pivotgrid-horizontal-headers\";\nvar PIVOTGRID_AREA_ROW_CLASS = \"dx-pivotgrid-vertical-headers\";\nvar PIVOTGRID_TOTAL_CLASS = \"dx-total\";\nvar PIVOTGRID_GRAND_TOTAL_CLASS = \"dx-grandtotal\";\nvar PIVOTGRID_ROW_TOTAL_CLASS = \"dx-row-total\";\nvar PIVOTGRID_EXPANDED_CLASS = \"dx-pivotgrid-expanded\";\nvar PIVOTGRID_COLLAPSED_CLASS = \"dx-pivotgrid-collapsed\";\nvar PIVOTGRID_LAST_CELL_CLASS = \"dx-last-cell\";\nvar PIVOTGRID_VERTICAL_SCROLL_CLASS = \"dx-vertical-scroll\";\nvar PIVOTGRID_EXPAND_BORDER = \"dx-expand-border\";\n\nfunction getCellPath(tableElement, cell) {\n  if (cell) {\n    var data = tableElement.data().data;\n    var rowIndex = cell.parentNode.rowIndex;\n    var cellIndex = cell.cellIndex;\n    return data[rowIndex] && data[rowIndex][cellIndex] && data[rowIndex][cellIndex].path;\n  }\n}\n\nexport var HorizontalHeadersArea = AreaItem.inherit({\n  _getAreaName: function _getAreaName() {\n    return \"column\";\n  },\n  _getAreaClassName: function _getAreaClassName() {\n    return PIVOTGRID_AREA_COLUMN_CLASS;\n  },\n  _createGroupElement: function _createGroupElement() {\n    return $(\"<div>\").addClass(this._getAreaClassName()).addClass(PIVOTGRID_AREA_CLASS);\n  },\n  _applyCustomStyles: function _applyCustomStyles(options) {\n    var cssArray = options.cssArray;\n    var cell = options.cell;\n    var rowsCount = options.rowsCount;\n    var classArray = options.classArray;\n\n    if (options.cellIndex === options.cellsCount - 1) {\n      cssArray.push((options.rtlEnabled ? \"border-left:\" : \"border-right:\") + \"0px\");\n    }\n\n    if (cell.rowspan === rowsCount - options.rowIndex || options.rowIndex + 1 === rowsCount) {\n      cssArray.push(\"border-bottom-width:0px\");\n    }\n\n    if (\"T\" === cell.type || \"GT\" === cell.type) {\n      classArray.push(PIVOTGRID_ROW_TOTAL_CLASS);\n    }\n\n    if (\"T\" === options.cell.type) {\n      classArray.push(PIVOTGRID_TOTAL_CLASS);\n    }\n\n    if (\"GT\" === options.cell.type) {\n      classArray.push(PIVOTGRID_GRAND_TOTAL_CLASS);\n    }\n\n    if (isDefined(cell.expanded)) {\n      classArray.push(cell.expanded ? PIVOTGRID_EXPANDED_CLASS : PIVOTGRID_COLLAPSED_CLASS);\n    }\n\n    this.callBase(options);\n  },\n  _getMainElementMarkup: function _getMainElementMarkup() {\n    return \"<thead class='\" + this._getAreaClassName() + \"'>\";\n  },\n  _getCloseMainElementMarkup: function _getCloseMainElementMarkup() {\n    return \"</thead>\";\n  },\n  setVirtualContentParams: function setVirtualContentParams(params) {\n    this.callBase(params);\n\n    this._setTableCss({\n      left: params.left,\n      top: 0\n    });\n\n    this._virtualContentWidth = params.width;\n  },\n  hasScroll: function hasScroll() {\n    var tableWidth = this._virtualContent ? this._virtualContentWidth : this._tableWidth;\n\n    if (this._groupWidth && tableWidth) {\n      return tableWidth - this._groupWidth >= 1;\n    }\n\n    return false;\n  },\n  processScroll: function processScroll() {\n    if (!this._getScrollable()) {\n      this._groupElement.dxScrollable({\n        useNative: false,\n        useSimulatedScrollbar: false,\n        showScrollbar: false,\n        bounceEnabled: false,\n        direction: \"horizontal\",\n        updateManually: true\n      });\n    }\n  },\n  processScrollBarSpacing: function processScrollBarSpacing(scrollBarWidth) {\n    var groupAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n\n    if (this._groupWidth) {\n      this.groupWidth(this._groupWidth - scrollBarWidth);\n    }\n\n    if (this._scrollBarWidth) {\n      this._groupElement.next().remove();\n    }\n\n    this._groupElement.toggleClass(PIVOTGRID_VERTICAL_SCROLL_CLASS, scrollBarWidth > 0);\n\n    this._groupElement.css(\"float\", groupAlignment).width(this._groupHeight);\n\n    this._scrollBarWidth = scrollBarWidth;\n  },\n  ctor: function ctor(component) {\n    this.callBase(component);\n    this._scrollBarWidth = 0;\n  },\n  getScrollPath: function getScrollPath(offset) {\n    var tableElement = this.tableElement();\n    var cell;\n    offset -= parseInt(tableElement[0].style.left, 10) || 0;\n    each(tableElement.find(\"td\"), function (_, td) {\n      if (1 === td.colSpan && td.offsetLeft <= offset && td.offsetWidth + td.offsetLeft > offset) {\n        cell = td;\n        return false;\n      }\n    });\n    return getCellPath(tableElement, cell);\n  },\n  _moveFakeTable: function _moveFakeTable(scrollPos) {\n    this._moveFakeTableHorizontally(scrollPos);\n\n    this.callBase();\n  }\n});\nexport var VerticalHeadersArea = HorizontalHeadersArea.inherit({\n  _getAreaClassName: function _getAreaClassName() {\n    return PIVOTGRID_AREA_ROW_CLASS;\n  },\n  _applyCustomStyles: function _applyCustomStyles(options) {\n    this.callBase(options);\n\n    if (options.cellIndex === options.cellsCount - 1) {\n      options.classArray.push(PIVOTGRID_LAST_CELL_CLASS);\n    }\n\n    if (options.rowIndex === options.rowsCount - 1) {\n      options.cssArray.push(\"border-bottom: 0px\");\n    }\n\n    if (options.cell.isWhiteSpace) {\n      options.classArray.push(\"dx-white-space-column\");\n    }\n  },\n  _getAreaName: function _getAreaName() {\n    return \"row\";\n  },\n  setVirtualContentParams: function setVirtualContentParams(params) {\n    this.callBase(params);\n\n    this._setTableCss({\n      top: params.top,\n      left: 0\n    });\n\n    this._virtualContentHeight = params.height;\n  },\n  hasScroll: function hasScroll() {\n    var tableHeight = this._virtualContent ? this._virtualContentHeight : this._tableHeight;\n\n    if (this._groupHeight && tableHeight) {\n      return tableHeight - this._groupHeight >= 1;\n    }\n\n    return false;\n  },\n  processScroll: function processScroll() {\n    if (!this._getScrollable()) {\n      this._groupElement.dxScrollable({\n        useNative: false,\n        useSimulatedScrollbar: false,\n        showScrollbar: false,\n        bounceEnabled: false,\n        direction: \"vertical\",\n        updateManually: true\n      });\n    }\n  },\n  processScrollBarSpacing: function processScrollBarSpacing(scrollBarWidth) {\n    if (this._groupHeight) {\n      this.groupHeight(this._groupHeight - scrollBarWidth);\n    }\n\n    if (this._scrollBarWidth) {\n      this._groupElement.next().remove();\n    }\n\n    if (scrollBarWidth) {\n      this._groupElement.after($(\"<div>\").width(\"100%\").height(scrollBarWidth - 1));\n    }\n\n    this._scrollBarWidth = scrollBarWidth;\n  },\n  getScrollPath: function getScrollPath(offset) {\n    var tableElement = this.tableElement();\n    var cell;\n    offset -= parseInt(tableElement[0].style.top, 10) || 0;\n    each(tableElement.find(\"tr\"), function (_, tr) {\n      var td = tr.childNodes[tr.childNodes.length - 1];\n\n      if (td && 1 === td.rowSpan && td.offsetTop <= offset && td.offsetHeight + td.offsetTop > offset) {\n        cell = td;\n        return false;\n      }\n    });\n    return getCellPath(tableElement, cell);\n  },\n  _moveFakeTable: function _moveFakeTable(scrollPos) {\n    this._moveFakeTableTop(scrollPos);\n\n    this.callBase();\n  },\n  _getRowClassNames: function _getRowClassNames(rowIndex, cell, rowClassNames) {\n    if (0 !== rowIndex & cell.expanded && -1 === inArray(PIVOTGRID_EXPAND_BORDER, rowClassNames)) {\n      rowClassNames.push(PIVOTGRID_EXPAND_BORDER);\n    }\n  },\n  _getMainElementMarkup: function _getMainElementMarkup() {\n    return \"<tbody class='\" + this._getAreaClassName() + \"'>\";\n  },\n  _getCloseMainElementMarkup: function _getCloseMainElementMarkup() {\n    return \"</tbody>\";\n  },\n  updateColspans: function updateColspans(columnCount) {\n    var rows = this.tableElement()[0].rows;\n    var columnOffset = 0;\n    var columnOffsetResetIndexes = [];\n\n    if (this.getColumnsCount() - columnCount > 0) {\n      return;\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      for (var j = 0; j < rows[i].cells.length; j++) {\n        var cell = rows[i].cells[j];\n        var rowSpan = cell.rowSpan;\n\n        if (columnOffsetResetIndexes[i]) {\n          columnOffset -= columnOffsetResetIndexes[i];\n          columnOffsetResetIndexes[i] = 0;\n        }\n\n        var diff = columnCount - (columnOffset + cell.colSpan);\n\n        if (j === rows[i].cells.length - 1 && diff > 0) {\n          cell.colSpan = cell.colSpan + diff;\n        }\n\n        columnOffsetResetIndexes[i + rowSpan] = (columnOffsetResetIndexes[i + rowSpan] || 0) + cell.colSpan;\n        columnOffset += cell.colSpan;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/user/source/repos/ReportingPortal/6.3.0/angular/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.headers_area.js"],"names":["$","isDefined","inArray","each","AreaItem","PIVOTGRID_AREA_CLASS","PIVOTGRID_AREA_COLUMN_CLASS","PIVOTGRID_AREA_ROW_CLASS","PIVOTGRID_TOTAL_CLASS","PIVOTGRID_GRAND_TOTAL_CLASS","PIVOTGRID_ROW_TOTAL_CLASS","PIVOTGRID_EXPANDED_CLASS","PIVOTGRID_COLLAPSED_CLASS","PIVOTGRID_LAST_CELL_CLASS","PIVOTGRID_VERTICAL_SCROLL_CLASS","PIVOTGRID_EXPAND_BORDER","getCellPath","tableElement","cell","data","rowIndex","parentNode","cellIndex","path","HorizontalHeadersArea","inherit","_getAreaName","_getAreaClassName","_createGroupElement","addClass","_applyCustomStyles","options","cssArray","rowsCount","classArray","cellsCount","push","rtlEnabled","rowspan","type","expanded","callBase","_getMainElementMarkup","_getCloseMainElementMarkup","setVirtualContentParams","params","_setTableCss","left","top","_virtualContentWidth","width","hasScroll","tableWidth","_virtualContent","_tableWidth","_groupWidth","processScroll","_getScrollable","_groupElement","dxScrollable","useNative","useSimulatedScrollbar","showScrollbar","bounceEnabled","direction","updateManually","processScrollBarSpacing","scrollBarWidth","groupAlignment","option","groupWidth","_scrollBarWidth","next","remove","toggleClass","css","_groupHeight","ctor","component","getScrollPath","offset","parseInt","style","find","_","td","colSpan","offsetLeft","offsetWidth","_moveFakeTable","scrollPos","_moveFakeTableHorizontally","VerticalHeadersArea","isWhiteSpace","_virtualContentHeight","height","tableHeight","_tableHeight","groupHeight","after","tr","childNodes","length","rowSpan","offsetTop","offsetHeight","_moveFakeTableTop","_getRowClassNames","rowClassNames","updateColspans","columnCount","rows","columnOffset","columnOffsetResetIndexes","getColumnsCount","i","j","cells","diff"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.headers_area.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    AreaItem\r\n} from \"./ui.pivot_grid.area_item\";\r\nvar PIVOTGRID_AREA_CLASS = \"dx-pivotgrid-area\";\r\nvar PIVOTGRID_AREA_COLUMN_CLASS = \"dx-pivotgrid-horizontal-headers\";\r\nvar PIVOTGRID_AREA_ROW_CLASS = \"dx-pivotgrid-vertical-headers\";\r\nvar PIVOTGRID_TOTAL_CLASS = \"dx-total\";\r\nvar PIVOTGRID_GRAND_TOTAL_CLASS = \"dx-grandtotal\";\r\nvar PIVOTGRID_ROW_TOTAL_CLASS = \"dx-row-total\";\r\nvar PIVOTGRID_EXPANDED_CLASS = \"dx-pivotgrid-expanded\";\r\nvar PIVOTGRID_COLLAPSED_CLASS = \"dx-pivotgrid-collapsed\";\r\nvar PIVOTGRID_LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar PIVOTGRID_VERTICAL_SCROLL_CLASS = \"dx-vertical-scroll\";\r\nvar PIVOTGRID_EXPAND_BORDER = \"dx-expand-border\";\r\n\r\nfunction getCellPath(tableElement, cell) {\r\n    if (cell) {\r\n        var data = tableElement.data().data;\r\n        var rowIndex = cell.parentNode.rowIndex;\r\n        var cellIndex = cell.cellIndex;\r\n        return data[rowIndex] && data[rowIndex][cellIndex] && data[rowIndex][cellIndex].path\r\n    }\r\n}\r\nexport var HorizontalHeadersArea = AreaItem.inherit({\r\n    _getAreaName: function() {\r\n        return \"column\"\r\n    },\r\n    _getAreaClassName: function() {\r\n        return PIVOTGRID_AREA_COLUMN_CLASS\r\n    },\r\n    _createGroupElement: function() {\r\n        return $(\"<div>\").addClass(this._getAreaClassName()).addClass(PIVOTGRID_AREA_CLASS)\r\n    },\r\n    _applyCustomStyles: function(options) {\r\n        var cssArray = options.cssArray;\r\n        var cell = options.cell;\r\n        var rowsCount = options.rowsCount;\r\n        var classArray = options.classArray;\r\n        if (options.cellIndex === options.cellsCount - 1) {\r\n            cssArray.push((options.rtlEnabled ? \"border-left:\" : \"border-right:\") + \"0px\")\r\n        }\r\n        if (cell.rowspan === rowsCount - options.rowIndex || options.rowIndex + 1 === rowsCount) {\r\n            cssArray.push(\"border-bottom-width:0px\")\r\n        }\r\n        if (\"T\" === cell.type || \"GT\" === cell.type) {\r\n            classArray.push(PIVOTGRID_ROW_TOTAL_CLASS)\r\n        }\r\n        if (\"T\" === options.cell.type) {\r\n            classArray.push(PIVOTGRID_TOTAL_CLASS)\r\n        }\r\n        if (\"GT\" === options.cell.type) {\r\n            classArray.push(PIVOTGRID_GRAND_TOTAL_CLASS)\r\n        }\r\n        if (isDefined(cell.expanded)) {\r\n            classArray.push(cell.expanded ? PIVOTGRID_EXPANDED_CLASS : PIVOTGRID_COLLAPSED_CLASS)\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<thead class='\" + this._getAreaClassName() + \"'>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</thead>\"\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this.callBase(params);\r\n        this._setTableCss({\r\n            left: params.left,\r\n            top: 0\r\n        });\r\n        this._virtualContentWidth = params.width\r\n    },\r\n    hasScroll: function() {\r\n        var tableWidth = this._virtualContent ? this._virtualContentWidth : this._tableWidth;\r\n        if (this._groupWidth && tableWidth) {\r\n            return tableWidth - this._groupWidth >= 1\r\n        }\r\n        return false\r\n    },\r\n    processScroll: function() {\r\n        if (!this._getScrollable()) {\r\n            this._groupElement.dxScrollable({\r\n                useNative: false,\r\n                useSimulatedScrollbar: false,\r\n                showScrollbar: false,\r\n                bounceEnabled: false,\r\n                direction: \"horizontal\",\r\n                updateManually: true\r\n            })\r\n        }\r\n    },\r\n    processScrollBarSpacing: function(scrollBarWidth) {\r\n        var groupAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        if (this._groupWidth) {\r\n            this.groupWidth(this._groupWidth - scrollBarWidth)\r\n        }\r\n        if (this._scrollBarWidth) {\r\n            this._groupElement.next().remove()\r\n        }\r\n        this._groupElement.toggleClass(PIVOTGRID_VERTICAL_SCROLL_CLASS, scrollBarWidth > 0);\r\n        this._groupElement.css(\"float\", groupAlignment).width(this._groupHeight);\r\n        this._scrollBarWidth = scrollBarWidth\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this._scrollBarWidth = 0\r\n    },\r\n    getScrollPath: function(offset) {\r\n        var tableElement = this.tableElement();\r\n        var cell;\r\n        offset -= parseInt(tableElement[0].style.left, 10) || 0;\r\n        each(tableElement.find(\"td\"), (function(_, td) {\r\n            if (1 === td.colSpan && td.offsetLeft <= offset && td.offsetWidth + td.offsetLeft > offset) {\r\n                cell = td;\r\n                return false\r\n            }\r\n        }));\r\n        return getCellPath(tableElement, cell)\r\n    },\r\n    _moveFakeTable: function(scrollPos) {\r\n        this._moveFakeTableHorizontally(scrollPos);\r\n        this.callBase()\r\n    }\r\n});\r\nexport var VerticalHeadersArea = HorizontalHeadersArea.inherit({\r\n    _getAreaClassName: function() {\r\n        return PIVOTGRID_AREA_ROW_CLASS\r\n    },\r\n    _applyCustomStyles: function(options) {\r\n        this.callBase(options);\r\n        if (options.cellIndex === options.cellsCount - 1) {\r\n            options.classArray.push(PIVOTGRID_LAST_CELL_CLASS)\r\n        }\r\n        if (options.rowIndex === options.rowsCount - 1) {\r\n            options.cssArray.push(\"border-bottom: 0px\")\r\n        }\r\n        if (options.cell.isWhiteSpace) {\r\n            options.classArray.push(\"dx-white-space-column\")\r\n        }\r\n    },\r\n    _getAreaName: function() {\r\n        return \"row\"\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this.callBase(params);\r\n        this._setTableCss({\r\n            top: params.top,\r\n            left: 0\r\n        });\r\n        this._virtualContentHeight = params.height\r\n    },\r\n    hasScroll: function() {\r\n        var tableHeight = this._virtualContent ? this._virtualContentHeight : this._tableHeight;\r\n        if (this._groupHeight && tableHeight) {\r\n            return tableHeight - this._groupHeight >= 1\r\n        }\r\n        return false\r\n    },\r\n    processScroll: function() {\r\n        if (!this._getScrollable()) {\r\n            this._groupElement.dxScrollable({\r\n                useNative: false,\r\n                useSimulatedScrollbar: false,\r\n                showScrollbar: false,\r\n                bounceEnabled: false,\r\n                direction: \"vertical\",\r\n                updateManually: true\r\n            })\r\n        }\r\n    },\r\n    processScrollBarSpacing: function(scrollBarWidth) {\r\n        if (this._groupHeight) {\r\n            this.groupHeight(this._groupHeight - scrollBarWidth)\r\n        }\r\n        if (this._scrollBarWidth) {\r\n            this._groupElement.next().remove()\r\n        }\r\n        if (scrollBarWidth) {\r\n            this._groupElement.after($(\"<div>\").width(\"100%\").height(scrollBarWidth - 1))\r\n        }\r\n        this._scrollBarWidth = scrollBarWidth\r\n    },\r\n    getScrollPath: function(offset) {\r\n        var tableElement = this.tableElement();\r\n        var cell;\r\n        offset -= parseInt(tableElement[0].style.top, 10) || 0;\r\n        each(tableElement.find(\"tr\"), (function(_, tr) {\r\n            var td = tr.childNodes[tr.childNodes.length - 1];\r\n            if (td && 1 === td.rowSpan && td.offsetTop <= offset && td.offsetHeight + td.offsetTop > offset) {\r\n                cell = td;\r\n                return false\r\n            }\r\n        }));\r\n        return getCellPath(tableElement, cell)\r\n    },\r\n    _moveFakeTable: function(scrollPos) {\r\n        this._moveFakeTableTop(scrollPos);\r\n        this.callBase()\r\n    },\r\n    _getRowClassNames: function(rowIndex, cell, rowClassNames) {\r\n        if (0 !== rowIndex & cell.expanded && -1 === inArray(PIVOTGRID_EXPAND_BORDER, rowClassNames)) {\r\n            rowClassNames.push(PIVOTGRID_EXPAND_BORDER)\r\n        }\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<tbody class='\" + this._getAreaClassName() + \"'>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</tbody>\"\r\n    },\r\n    updateColspans: function(columnCount) {\r\n        var rows = this.tableElement()[0].rows;\r\n        var columnOffset = 0;\r\n        var columnOffsetResetIndexes = [];\r\n        if (this.getColumnsCount() - columnCount > 0) {\r\n            return\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].cells.length; j++) {\r\n                var cell = rows[i].cells[j];\r\n                var rowSpan = cell.rowSpan;\r\n                if (columnOffsetResetIndexes[i]) {\r\n                    columnOffset -= columnOffsetResetIndexes[i];\r\n                    columnOffsetResetIndexes[i] = 0\r\n                }\r\n                var diff = columnCount - (columnOffset + cell.colSpan);\r\n                if (j === rows[i].cells.length - 1 && diff > 0) {\r\n                    cell.colSpan = cell.colSpan + diff\r\n                }\r\n                columnOffsetResetIndexes[i + rowSpan] = (columnOffsetResetIndexes[i + rowSpan] || 0) + cell.colSpan;\r\n                columnOffset += cell.colSpan\r\n            }\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}